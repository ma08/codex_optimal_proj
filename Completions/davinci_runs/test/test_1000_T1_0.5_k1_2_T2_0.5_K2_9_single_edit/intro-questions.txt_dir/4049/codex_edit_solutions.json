["\n\nfrom sys import stdin\nfrom collections import Counter\nfrom itertools import combinations\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == \"R\":\n            w_a += min(v, cnt_b[\"S\"])\n            w_b += min(v, cnt_b[\"P\"])\n        elif k == \"S\":\n            w_a += min(v, cnt_b[\"P\"])\n            w_b += min(v, cnt_b[\"R\"])\n        elif k == \"P\":\n            w_a += min(v, cnt_b[\"R\"])\n            w_b += min(v, cnt_b[\"S\"])\n    return w_a, w_a + n - w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(\" \")\n    b = stdin.readline().strip().split(\" \")\n    print(\" \".join(map(str, min_max_wins(n, a, b)))) \n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max\n    min_wins = 0\n    max_wins = 0\n    for i in range(len(a)):\n        for j in range(len(b)):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split(' ')]\n    b = [int(x) for x in input().split(' ')]\n    \n    # get min/max\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        for j in range(3):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # get input\n    # n = int(input())\n    # a = [int(x) for x in input().split()]\n    # b = [int(x) for x in input().split()]\n    \n    # get min/max\n    # min_wins = 0\n    # max_wins = 0\n    # for i in range(3):\n    #     for j in range(3):\n    #         if i == j:\n    #             continue\n    #         elif (i + 1) % 3 == j:\n    #             min_wins += min(a[i], b[j])\n    #             max_wins += max(a[i], b[j])\n    #         else:\n    #             min_wins += max(a[i], b[j])\n    #             max_wins += min(a[i], b[j])\n    \n    # print result\n    # print(min_wins, max_wins)\n    pass\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nfrom sys import stdin\nfrom collections import Counter\nfrom itertools import combinations\n\ndef min_max_wins(n, a, b, k):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == \"R\":\n            w_a += min(v, cnt_b[\"S\"])\n            w_b += min(v, cnt_b[\"P\"])\n        elif k == \"S\":\n            w_a += min(v, cnt_b[\"P\"])\n            w_b += min(v, cnt_b[\"R\"])\n        elif k == \"P\":\n            w_a += min(v, cnt_b[\"R\"])\n            w_b += min(v, cnt_b[\"S\"])\n    return w_a, w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(\" \")\n    b = stdin.readline().strip().split(\" \")\n    k = int(stdin.readline().strip())\n    print(\" \".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nfrom sys import stdin\nfrom collections import Counter\nfrom itertools import combinations\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        w_a += min(v, cnt_b[k])\n        w_b += min(v, cnt_b[k])\n    return w_a, w_a + n - w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(\" \")\n    b = stdin.readline().strip().split(\" \")\n    print(\" \".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max\n    min_wins = 0\n    max_wins = 0\n    for i in range(n):\n        for j in range(n):\n            if i == j:\n                continue\n            elif (i + 1) % n == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\n\n\ndef main():\n    # get input from stdin\n    n = int(sys.stdin.readline())\n    a = [int(x) for x in sys.stdin.readline().split()]\n    b = [int(x) for x in sys.stdin.readline().split()]\n\n    # print result to stdout\n    sys.stdout.write(\"{} {}\\n\".format(min_wins, max_wins))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nfrom sys import stdin\nfrom collections import Counter\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == \"R\":\n            w_a += min(v, cnt_b[\"S\"])\n            w_b += min(v, cnt_b[\"P\"])\n        elif k == \"S\":\n            w_a += min(v, cnt_b[\"P\"])\n            w_b += min(v, cnt_b[\"R\"])\n        elif k == \"P\":\n            w_a += min(v, cnt_b[\"R\"])\n            w_b += min(v, cnt_b[\"S\"])\n    return w_a, w_a + n - w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(\" \")\n    b = stdin.readline().strip().split(\" \")\n    print(\" \".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # get input (n, a, b)\n    \n    # get min/max\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        for j in range(3):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == \"__main__\":\n    main()\n", "\nfrom sys import stdin\nfrom collections import Counter\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == \"R\":\n            w_a += min(v, cnt_b[\"S\"])\n            w_b += min(v, cnt_b[\"P\"])\n        elif k == \"S\":\n            w_a += min(v, cnt_b[\"P\"])\n            w_b += min(v, cnt_b[\"R\"])\n        elif k == \"P\":\n            w_a += min(v, cnt_b[\"R\"])\n            w_b += min(v, cnt_b[\"S\"])\n    return w_a, w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(\" \")\n    b = stdin.readline().strip().split(\" \")\n    print(\" \".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == \"__main__\":\n    main()\n", "\n# \n# from sys import stdin\n# from collections import Counter\n# from itertools import combinations\n# \n# def min_max_wins(n, a, b):\n#     cnt_a = Counter(a)\n#     cnt_b = Counter(b)\n#     w_a = 0\n#     w_b = 0\n#     for k, v in cnt_a.items():\n#         if k == \"R\":\n#             w_a += min(v, cnt_b[\"S\"])\n#             w_b += min(v, cnt_b[\"P\"])\n#         elif k == \"S\":\n#             w_a += min(v, cnt_b[\"P\"])\n#             w_b += min(v, cnt_b[\"R\"])\n#         elif k == \"P\":\n#             w_a += min(v, cnt_b[\"R\"])\n#             w_b += min(v, cnt_b[\"S\"])\n#     return w_a, w_a + n - w_b\n# \n# def main():\n#     n = int(stdin.readline().strip())\n#     a = stdin.readline().strip().split(\" \")\n#     b = stdin.readline().strip().split(\" \")\n#     print(\" \".join(map(str, min_max_wins(n, a, b))))\n# \n# if __name__ == \"__main__\":\n#     main()\n", "\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        for j in range(3):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # get input\n    n = int(input()) # number of rounds\n    a = [int(x) for x in input().split()] # a's moves per round\n    b = [int(x) for x in input().split()] # b's moves per round\n    \n    # get min/max\n    min_wins = 0\n    max_wins = 0\n    for i in range(3): # loop through rock, paper, scissor\n        for j in range(3): # loop through rock, paper, scissor\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max wins\n    min_wins = 0\n    max_wins = 0\n    min_wins += min(a[0], b[1]) + min(a[1], b[2]) + min(a[2], b[0])\n    max_wins += max(a[0], b[1]) + max(a[1], b[2]) + max(a[2], b[0])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == \"__main__\":\n    main()\n", "\nfrom sys import stdin\nfrom collections import Counter\nfrom itertools import combinations\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == \"R\":\n            w_a += min(v, cnt_b[\"S\"])\n            w_b += min(v, cnt_b[\"P\"])\n        elif k == \"S\":\n            w_a += min(v, cnt_b[\"P\"])\n            w_b += min(v, cnt_b[\"R\"])\n        elif k == \"P\":\n            w_a += min(v, cnt_b[\"R\"])\n            w_b += min(v, cnt_b[\"S\"])\n    return w_a, w_a + n - w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(\" \")\n    b = stdin.readline().strip().split(\" \")\n    print(\" \".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nfrom sys import stdin\nfrom collections import Counter\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == \"R\":\n            w_a += min(v, cnt_b[\"S\"])\n            w_b += min(v, cnt_b[\"P\"])\n        elif k == \"S\":\n            w_a += min(v, cnt_b[\"P\"])\n            w_b += min(v, cnt_b[\"R\"])\n        elif k == \"P\":\n            w_a += min(v, cnt_b[\"R\"])\n            w_b += min(v, cnt_b[\"S\"])\n    return w_a, w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(\" \")\n    b = stdin.readline().strip().split(\" \")\n    print(\" \".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == \"__main__\":\n    main()\n"]