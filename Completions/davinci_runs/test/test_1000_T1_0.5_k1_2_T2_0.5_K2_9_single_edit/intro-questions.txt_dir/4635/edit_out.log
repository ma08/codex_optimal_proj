2022-04-16 08:46:41.675466 num operations 1
2022-04-16 08:46:41.675482 size on input set 1
2022-04-16 08:46:50.789406 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfor i in range(int(input())):\n    n, k = map(int, input().split())\n    if k*(k+1)//2 <= n:\n        print(\"\".join(map(chr, range(ord('a')+k-1, ord('a')-1, -1)))*(n//k) + \"\".join(map(chr, range(ord('a')+k-1, ord('a')-1, -1)))[:n%k])\n    else:\n        print(\"\".join(map(chr, range(ord('a'), ord('a')+k)))*(n//k) + \"\".join(map(chr, range(ord('a'), ord('a')+k)))[:n%k])\n"
    },
    {
      "index": 1,
      "text": "\n\nfor i in range(int(input())):\n    n, k = map(int, input().split())\n    if k*(k+1)//2 <= n:\n        print(\"\".join(map(chr, range(ord('a')+k-1, ord('a')-1, -1)))*(n//k) + \"\".join(map(chr, range(ord('a')+k-1, ord('a')-1, -1)))[:n%k])\n    else:\n        print(\"\".join(map(chr, range(ord('a'), ord('a')+k)))*(n//k) + \"\".join(map(chr, range(ord('a'), ord('a')+k)))[:n%k])\n"
    },
    {
      "index": 2,
      "text": "\n\nfor i in range(int(input())):\n    n, k = map(int, input().split())\n    if k*(k+1)//2 <= n:\n        print(\"\".join(map(chr, range(ord('a')+k-1, ord('a')-1, -1)))*(n//k) + \"\".join(map(chr, range(ord('a')+k-1, ord('a')-1, -1)))[:n%k])\n    else:\n        print(\"\".join(map(chr, range(ord('a'), ord('a')+k)))*(n//k) + \"\".join(map(chr, range(ord('a'), ord('a')+k)))[:n%k])\n"
    },
    {
      "index": 3,
      "text": "\n\nfor i in range(int(input())):\n    n, k = map(int, input().split())\n    if k*(k+1)//2 <= n:\n        print(\"\".join(map(chr, range(ord('a')+k-1, ord('a')-1, -1)))*(n//k) + \"\".join(map(chr, range(ord('a')+k-1, ord('a')-1, -1)))[:n%k])\n    else:\n        print(\"\".join(map(chr, range(ord('a'), ord('a')+k)))*(n//k) + \"\".join(map(chr, range(ord('a'), ord('a')+k)))[:n%k])\n"
    },
    {
      "index": 4,
      "text": "\n\nfor i in range(int(input())):\n    n, k = map(int, input().split())\n    if k*(k+1)//2 <= n:\n        print(\"\".join(map(chr, range(ord('a')+k-1, ord('a')-1, -1)))*(n//k) + \"\".join(map(chr, range(ord('a')+k-1, ord('a')-1, -1)))[:n%k])\n    else:\n        print(\"\".join(map(chr, range(ord('a'), ord('a')+k)))*(n//k) + \"\".join(map(chr, range(ord('a'), ord('a')+k)))[:n%k])\n"
    },
    {
      "index": 5,
      "text": "\n\nfor i in range(int(input())):\n    n, k = map(int, input().split())\n    if k*(k+1)//2 <= n:\n        print(\"\".join(map(chr, range(ord('a')+k-1, ord('a')-1, -1)))*(n//k) + \"\".join(map(chr, range(ord('a')+k-1, ord('a')-1, -1)))[:n%k])\n    else:\n        print(\"\".join(map(chr, range(ord('a'), ord('a')+k)))*(n//k) + \"\".join(map(chr, range(ord('a'), ord('a')+k)))[:n%k])\n"
    },
    {
      "index": 6,
      "text": "\n\nfor i in range(int(input())):\n    n, k = map(int, input().split())\n    if k*(k+1)//2 <= n:\n        print(\"\".join(map(chr, range(ord('a')+k-1, ord('a')-1, -1)))*(n//k) + \"\".join(map(chr, range(ord('a')+k-1, ord('a')-1, -1)))[:n%k])\n    else:\n        print(\"\".join(map(chr, range(ord('a'), ord('a')+k)))*(n//k) + \"\".join(map(chr, range(ord('a'), ord('a')+k)))[:n%k])\n"
    },
    {
      "index": 7,
      "text": "\n\nfor i in range(int(input())):\n    n, k = map(int, input().split())\n    if k*(k+1)//2 <= n:\n        print(\"\".join(map(chr, range(ord('a')+k-1, ord('a')-1, -1)))*(n//k) + \"\".join(map(chr, range(ord('a')+k-1, ord('a')-1, -1)))[:n%k])\n    else:\n        print(\"\".join(map(chr, range(ord('a'), ord('a')+k)))*(n//k) + \"\".join(map(chr, range(ord('a'), ord('a')+k)))[:n%k])\n"
    },
    {
      "index": 8,
      "text": "\n\nfor i in range(int(input())):\n    n, k = map(int, input().split())\n    if k*(k+1)//2 <= n:\n        print(\"\".join(map(chr, range(ord('a')+k-1, ord('a')-1, -1)))*(n//k) + \"\".join(map(chr, range(ord('a')+k-1, ord('a')-1, -1)))[:n%k])\n    else:\n        print(\"\".join(map(chr, range(ord('a'), ord('a')+k)))*(n//k) + \"\".join(map(chr, range(ord('a'), ord('a')+k)))[:n%k])\n"
    }
  ],
  "created": 1650098801,
  "object": "edit"
}
2022-04-16 08:46:50.789667 fix syntax errors 9 ['\n\nfor i in range(int(input())):\n    n, k = map(int, input().split())\n    if k*(k+1)//2 <= n:\n        print("".join(map(chr, range(ord(\'a\')+k-1, ord(\'a\')-1, -1)))*(n//k) + "".join(map(chr, range(ord(\'a\')+k-1, ord(\'a\')-1, -1)))[:n%k])\n    else:\n        print("".join(map(chr, range(ord(\'a\'), ord(\'a\')+k)))*(n//k) + "".join(map(chr, range(ord(\'a\'), ord(\'a\')+k)))[:n%k])\n', '\n\nfor i in range(int(input())):\n    n, k = map(int, input().split())\n    if k*(k+1)//2 <= n:\n        print("".join(map(chr, range(ord(\'a\')+k-1, ord(\'a\')-1, -1)))*(n//k) + "".join(map(chr, range(ord(\'a\')+k-1, ord(\'a\')-1, -1)))[:n%k])\n    else:\n        print("".join(map(chr, range(ord(\'a\'), ord(\'a\')+k)))*(n//k) + "".join(map(chr, range(ord(\'a\'), ord(\'a\')+k)))[:n%k])\n', '\n\nfor i in range(int(input())):\n    n, k = map(int, input().split())\n    if k*(k+1)//2 <= n:\n        print("".join(map(chr, range(ord(\'a\')+k-1, ord(\'a\')-1, -1)))*(n//k) + "".join(map(chr, range(ord(\'a\')+k-1, ord(\'a\')-1, -1)))[:n%k])\n    else:\n        print("".join(map(chr, range(ord(\'a\'), ord(\'a\')+k)))*(n//k) + "".join(map(chr, range(ord(\'a\'), ord(\'a\')+k)))[:n%k])\n', '\n\nfor i in range(int(input())):\n    n, k = map(int, input().split())\n    if k*(k+1)//2 <= n:\n        print("".join(map(chr, range(ord(\'a\')+k-1, ord(\'a\')-1, -1)))*(n//k) + "".join(map(chr, range(ord(\'a\')+k-1, ord(\'a\')-1, -1)))[:n%k])\n    else:\n        print("".join(map(chr, range(ord(\'a\'), ord(\'a\')+k)))*(n//k) + "".join(map(chr, range(ord(\'a\'), ord(\'a\')+k)))[:n%k])\n', '\n\nfor i in range(int(input())):\n    n, k = map(int, input().split())\n    if k*(k+1)//2 <= n:\n        print("".join(map(chr, range(ord(\'a\')+k-1, ord(\'a\')-1, -1)))*(n//k) + "".join(map(chr, range(ord(\'a\')+k-1, ord(\'a\')-1, -1)))[:n%k])\n    else:\n        print("".join(map(chr, range(ord(\'a\'), ord(\'a\')+k)))*(n//k) + "".join(map(chr, range(ord(\'a\'), ord(\'a\')+k)))[:n%k])\n', '\n\nfor i in range(int(input())):\n    n, k = map(int, input().split())\n    if k*(k+1)//2 <= n:\n        print("".join(map(chr, range(ord(\'a\')+k-1, ord(\'a\')-1, -1)))*(n//k) + "".join(map(chr, range(ord(\'a\')+k-1, ord(\'a\')-1, -1)))[:n%k])\n    else:\n        print("".join(map(chr, range(ord(\'a\'), ord(\'a\')+k)))*(n//k) + "".join(map(chr, range(ord(\'a\'), ord(\'a\')+k)))[:n%k])\n', '\n\nfor i in range(int(input())):\n    n, k = map(int, input().split())\n    if k*(k+1)//2 <= n:\n        print("".join(map(chr, range(ord(\'a\')+k-1, ord(\'a\')-1, -1)))*(n//k) + "".join(map(chr, range(ord(\'a\')+k-1, ord(\'a\')-1, -1)))[:n%k])\n    else:\n        print("".join(map(chr, range(ord(\'a\'), ord(\'a\')+k)))*(n//k) + "".join(map(chr, range(ord(\'a\'), ord(\'a\')+k)))[:n%k])\n', '\n\nfor i in range(int(input())):\n    n, k = map(int, input().split())\n    if k*(k+1)//2 <= n:\n        print("".join(map(chr, range(ord(\'a\')+k-1, ord(\'a\')-1, -1)))*(n//k) + "".join(map(chr, range(ord(\'a\')+k-1, ord(\'a\')-1, -1)))[:n%k])\n    else:\n        print("".join(map(chr, range(ord(\'a\'), ord(\'a\')+k)))*(n//k) + "".join(map(chr, range(ord(\'a\'), ord(\'a\')+k)))[:n%k])\n', '\n\nfor i in range(int(input())):\n    n, k = map(int, input().split())\n    if k*(k+1)//2 <= n:\n        print("".join(map(chr, range(ord(\'a\')+k-1, ord(\'a\')-1, -1)))*(n//k) + "".join(map(chr, range(ord(\'a\')+k-1, ord(\'a\')-1, -1)))[:n%k])\n    else:\n        print("".join(map(chr, range(ord(\'a\'), ord(\'a\')+k)))*(n//k) + "".join(map(chr, range(ord(\'a\'), ord(\'a\')+k)))[:n%k])\n']
2022-04-16 08:46:50.789708 size on output set 1
2022-04-16 08:46:50.789719 num operations 1
2022-04-16 08:46:50.789723 size on input set 1
2022-04-16 08:47:20.400775 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport random\nimport string\n\ndef random_string(n):\n    return ''.join([random.choice(string.ascii_lowercase) for _ in range(n)])\n\ndef generate_random_testcase(n, k):\n    if k == 26:\n        return random_string(n)\n    if k == 1:\n        return 'a' * n\n    if k == 2:\n        return random_string(n)\n    if k == 3:\n        return random_string(n)\n    if k == 4:\n        return random_string(n)\n    if k == 5:\n        return random_string(n)\n    if k == 6:\n        return random_string(n)\n    if k == 7:\n        return random_string(n)\n    if k == 8:\n        return random_string(n)\n    if k == 9:\n        return random_string(n)\n    if k == 10:\n        return random_string(n)\n    if k == 11:\n        return random_string(n)\n    if k == 12:\n        return random_string(n)\n    if k == 13:\n        return random_string(n)\n    if k == 14:\n        return random_string(n)\n    if k == 15:\n        return random_string(n)\n    if k == 16:\n        return random_string(n)\n    if k == 17:\n        return random_string(n)\n    if k == 18:\n        return random_string(n)\n    if k == 19:\n        return random_string(n)\n    if k == 20:\n        return random_string(n)\n    if k == 21:\n        return random_string(n)\n    if k == 22:\n        return random_string(n)\n    if k == 23:\n        return random_string(n)\n    if k == 24:\n        return random_string(n)\n    if k == 25:\n        return random_string(n)\n\ndef generate_testcases(t):\n    testcases = []\n    for _ in range(t):\n        n = random.randint(1, 100)\n        k = random.randint(1, min(n, 26))\n        testcases.append(generate_random_testcase(n, k))\n    return testcases\n\ndef write_testcases(testcases, filename='testcases.txt'):\n    with open(filename, 'w') as f:\n        f.write(str(len(testcases)) + '\\n')\n        for testcase in testcases:\n            f.write(testcase + '\\n')\n\ndef check(s):\n    if len(s) == 1:\n        return True\n    if len(set(s)) == 1:\n        return False\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            return False\n    return True\n\ndef check_testcases(filename='testcases.txt'):\n    with open(filename, 'r') as f:\n        t = int(f.readline())\n        testcases = []\n        for _ in range(t):\n            n, k = map(int, f.readline().split())\n            testcases.append((n, k))\n    for testcase in testcases:\n        if not check(generate_random_testcase(*testcase)):\n            print(testcase)\n\nif __name__ == '__main__':\n    check_testcases()\n"
    },
    {
      "index": 1,
      "text": "\nimport random\nimport string\n\ndef random_string(n):\n    return ''.join([random.choice(string.ascii_lowercase) for _ in range(n)])\n\ndef generate_random_testcase(n, k):\n    if k == 26:\n        return random_string(n)\n    if k == 1:\n        return 'a' * n\n    if k == 2:\n        return random_string(n)\n    if k == 3:\n        return random_string(n)\n    if k == 4:\n        return random_string(n)\n    if k == 5:\n        return random_string(n)\n    if k == 6:\n        return random_string(n)\n    if k == 7:\n        return random_string(n)\n    if k == 8:\n        return random_string(n)\n    if k == 9:\n        return random_string(n)\n    if k == 10:\n        return random_string(n)\n    if k == 11:\n        return random_string(n)\n    if k == 12:\n        return random_string(n)\n    if k == 13:\n        return random_string(n)\n    if k == 14:\n        return random_string(n)\n    if k == 15:\n        return random_string(n)\n    if k == 16:\n        return random_string(n)\n    if k == 17:\n        return random_string(n)\n    if k == 18:\n        return random_string(n)\n    if k == 19:\n        return random_string(n)\n    if k == 20:\n        return random_string(n)\n    if k == 21:\n        return random_string(n)\n    if k == 22:\n        return random_string(n)\n    if k == 23:\n        return random_string(n)\n    if k == 24:\n        return random_string(n)\n    if k == 25:\n        return random_string(n)\n\ndef generate_testcases(t):\n    testcases = []\n    for _ in range(t):\n        n = random.randint(1, 100)\n        k = random.randint(1, min(n, 26))\n        testcases.append(generate_random_testcase(n, k))\n    return testcases\n\ndef write_testcases(testcases, filename='testcases.txt'):\n    with open(filename, 'w') as f:\n        f.write(str(len(testcases)) + '\\n')\n        for testcase in testcases:\n            f.write(testcase + '\\n')\n\ndef check(s):\n    if len(s) == 1:\n        return True\n    if len(set(s)) == 1:\n        return False\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            return False\n    return True\n\ndef check_testcases(filename='testcases.txt'):\n    with open(filename, 'r') as f:\n        t = int(f.readline())\n        testcases = []\n        for _ in range(t):\n            n, k = map(int, f.readline().split())\n            testcases.append((n, k))\n    for testcase in testcases:\n        if not check(generate_random_testcase(*testcase)):\n            print(testcase)\n\nif __name__ == '__main__':\n    write_testcases(generate_testcases(100))\n"
    },
    {
      "index": 2,
      "text": "\nimport random\nimport string\n\ndef random_string(n):\n    return ''.join([random.choice(string.ascii_lowercase) for _ in range(n)])\n\ndef generate_random_testcase(n, k):\n    if k == 26:\n        return random_string(n)\n    if k == 1:\n        return 'a' * n\n    if k == 2 or k == 3 or k == 4 or k == 5 or k == 6 or k == 7 or k == 8 or k == 9 or k == 10 or k == 11 or k == 12 or k == 13 or k == 14 or k == 15 or k == 16 or k == 17 or k == 18 or k == 19 or k == 20 or k == 21 or k == 22 or k == 23 or k == 24 or k == 25:\n        return random_string(n)\n    if k == 3:\n        return random_string(n)\n    if k == 4:\n        return random_string(n)\n    if k == 5:\n        return random_string(n)\n    if k == 6:\n        return random_string(n)\n    if k == 7:\n        return random_string(n)\n    if k == 8:\n        return random_string(n)\n    if k == 9:\n        return random_string(n)\n    if k == 10:\n        return random_string(n)\n    if k == 11:\n        return random_string(n)\n    if k == 12:\n        return random_string(n)\n    if k == 13:\n        return random_string(n)\n    if k == 14:\n        return random_string(n)\n    if k == 15:\n        return random_string(n)\n    if k == 16:\n        return random_string(n)\n    if k == 17:\n        return random_string(n)\n    if k == 18:\n        return random_string(n)\n    if k == 19:\n        return random_string(n)\n    if k == 20:\n        return random_string(n)\n    if k == 21:\n        return random_string(n)\n    if k == 22:\n        return random_string(n)\n    if k == 23:\n        return random_string(n)\n    if k == 24:\n        return random_string(n)\n    if k == 25:\n        return random_string(n)\n\ndef generate_testcases(t):\n    testcases = []\n    for _ in range(t):\n        n = random.randint(1, 100)\n        k = random.randint(1, min(n, 26))\n        testcases.append(generate_random_testcase(n, k))\n    return testcases\n\ndef write_testcases(testcases, filename='testcases.txt'):\n    with open(filename, 'w') as f:\n        f.write(str(len(testcases)) + '\\n')\n        for testcase in testcases:\n            f.write(testcase + '\\n')\n\ndef check(s):\n    if len(s) == 1:\n        return True\n    if len(set(s)) == 1:\n        return False\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            return False\n    return True\n\ndef check_testcases(filename='testcases.txt'):\n    with open(filename, 'r') as f:\n        t = int(f.readline())\n        testcases = []\n        for _ in range(t):\n            n, k = map(int, f.readline().split())\n            testcases.append((n, k))\n    for testcase in testcases:\n        if not check(generate_random_testcase(*testcase)):\n            print(testcase)\n\nif __name__ == '__main__':\n    check_testcases()\n"
    },
    {
      "index": 3,
      "text": "\nimport random\nimport string\n\ndef random_string(n):\n    return ''.join([random.choice(string.ascii_lowercase) for _ in range(n)])\n\ndef generate_random_testcase(n, k):\n    return random_string(n)\n\ndef generate_testcases(t):\n    testcases = []\n    for _ in range(t):\n        n = random.randint(1, 10**5)\n        k = random.randint(1, 26)\n        testcases.append(generate_random_testcase(n, k))\n    return testcases\n\ndef write_testcases(testcases, filename='testcases.txt'):\n    with open(filename, 'w') as f:\n        f.write(str(len(testcases)) + '\\n')\n        for testcase in testcases:\n            f.write(testcase + '\\n')\n\ndef check(s):\n    if len(s) == 1:\n        return True\n    if len(set(s)) == 1:\n        return False\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            return False\n    return True\n\ndef check_testcases(filename='testcases.txt'):\n    with open(filename, 'r') as f:\n        t = int(f.readline())\n        testcases = []\n        for _ in range(t):\n            n, k = map(int, f.readline().split())\n            testcases.append((n, k))\n    for testcase in testcases:\n        if not check(generate_random_testcase(*testcase)):\n            print(testcase)\n\nif __name__ == '__main__':\n    check_testcases()\n"
    },
    {
      "index": 4,
      "text": "\nimport random\nimport string\n\ndef random_string(n):\n    return ''.join([random.choice(string.ascii_lowercase) for _ in range(n)])\n\ndef generate_random_testcase(n, k):\n    if k == 26:\n        return random_string(n)\n    if k == 1:\n        return 'a' * n\n    if k == 2:\n        return random_string(n)\n    if k == 3:\n        return random_string(n)\n    if k == 4:\n        return random_string(n)\n    if k == 5:\n        return random_string(n)\n    if k == 6:\n        return random_string(n)\n    if k == 7:\n        return random_string(n)\n    if k == 8:\n        return random_string(n)\n    if k == 9:\n        return random_string(n)\n    if k == 10:\n        return random_string(n)\n    if k == 11:\n        return random_string(n)\n    if k == 12:\n        return random_string(n)\n    if k == 13:\n        return random_string(n)\n    if k == 14:\n        return random_string(n)\n    if k == 15:\n        return random_string(n)\n    if k == 16:\n        return random_string(n)\n    if k == 17:\n        return random_string(n)\n    if k == 18:\n        return random_string(n)\n    if k == 19:\n        return random_string(n)\n    if k == 20:\n        return random_string(n)\n    if k == 21:\n        return random_string(n)\n    if k == 22:\n        return random_string(n)\n    if k == 23:\n        return random_string(n)\n    if k == 24:\n        return random_string(n)\n    if k == 25:\n        return random_string(n)\n\ndef generate_testcases(t):\n    testcases = []\n    for _ in range(t):\n        n = random.randint(1, 100)\n        k = random.randint(1, min(n, 26))\n        testcases.append(generate_random_testcase(n, k))\n    return testcases\n\ndef write_testcases(testcases, filename='testcases.txt'):\n    with open(filename, 'w') as f:\n        f.write(str(len(testcases)) + '\\n')\n        for testcase in testcases:\n            f.write(testcase + '\\n')\n\ndef check(s):\n    if len(s) == 1:\n        return True\n    if len(set(s)) == 1:\n        return False\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            return False\n    return True\n\ndef check_testcases(filename='testcases.txt'):\n    with open(filename, 'r') as f:\n        t = int(f.readline())\n        testcases = []\n        for _ in range(t):\n            n, k = map(int, f.readline().split())\n            testcases.append((n, k))\n    for testcase in testcases:\n        if not check(generate_random_testcase(*testcase)):\n            print(testcase)\n\nif __name__ == '__main__':\n    check_testcases()\n"
    },
    {
      "index": 5,
      "text": "\nimport random\nimport string\n\ndef random_string(n):\n    return ''.join([random.choice(string.ascii_lowercase) for _ in range(n)])\n\ndef generate_random_testcase(n, k):\n    if k == 26:\n        return random_string(n)\n    if k == 1:\n        return 'a' * n\n    if k == 2:\n        return random_string(n)\n    if k == 3:\n        return random_string(n)\n    if k == 4:\n        return random_string(n)\n    if k == 5:\n        return random_string(n)\n    if k == 6:\n        return random_string(n)\n    if k == 7:\n        return random_string(n)\n    if k == 8:\n        return random_string(n)\n    if k == 9:\n        return random_string(n)\n    if k == 10:\n        return random_string(n)\n    if k == 11:\n        return random_string(n)\n    if k == 12:\n        return random_string(n)\n    if k == 13:\n        return random_string(n)\n    if k == 14:\n        return random_string(n)\n    if k == 15:\n        return random_string(n)\n    if k == 16:\n        return random_string(n)\n    if k == 17:\n        return random_string(n)\n    if k == 18:\n        return random_string(n)\n    if k == 19:\n        return random_string(n)\n    if k == 20:\n        return random_string(n)\n    if k == 21:\n        return random_string(n)\n    if k == 22:\n        return random_string(n)\n    if k == 23:\n        return random_string(n)\n    if k == 24:\n        return random_string(n)\n    if k == 25:\n        return random_string(n)\n\ndef generate_testcases(t):\n    testcases = []\n    for _ in range(t):\n        n = random.randint(1, 100)\n        k = random.randint(1, min(n, 26))\n        testcases.append(generate_random_testcase(n, k))\n    return testcases\n\ndef write_testcases(testcases, filename='testcases.txt'):\n    with open(filename, 'w') as f:\n        f.write(str(len(testcases)) + '\\n')\n        for testcase in testcases:\n            f.write(testcase + '\\n')\n\ndef check(s):\n    if len(s) == 1:\n        return True\n    if len(set(s)) == 1:\n        return False\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            return False\n    return True\n\ndef check_testcases(filename='testcases.txt'):\n    with open(filename, 'r') as f:\n        t = int(f.readline())\n        testcases = []\n        for _ in range(t):\n            n, k = map(int, f.readline().split())\n            testcases.append((n, k))\n    for testcase in testcases:\n        if not check(generate_random_testcase(*testcase)):\n            print(testcase)\n\nif __name__ == '__main__':\n    check_testcases()\n"
    },
    {
      "index": 6,
      "text": "\nimport random\nimport string\n\ndef random_string(n):\n    return ''.join([random.choice(string.ascii_lowercase) for _ in range(n)])\n\ndef generate_random_testcase(n, k):\n    if k == 26:\n        return random_string(n)\n    if k == 1:\n        return 'a' * n\n    if k == 2:\n        return random_string(n)\n    if k == 3:\n        return random_string(n)\n    if k == 4:\n        return random_string(n)\n    if k == 5:\n        return random_string(n)\n    if k == 6:\n        return random_string(n)\n    if k == 7:\n        return random_string(n)\n    if k == 8:\n        return random_string(n)\n    if k == 9:\n        return random_string(n)\n    if k == 10:\n        return random_string(n)\n    if k == 11:\n        return random_string(n)\n    if k == 12:\n        return random_string(n)\n    if k == 13:\n        return random_string(n)\n    if k == 14:\n        return random_string(n)\n    if k == 15:\n        return random_string(n)\n    if k == 16:\n        return random_string(n)\n    if k == 17:\n        return random_string(n)\n    if k == 18:\n        return random_string(n)\n    if k == 19:\n        return random_string(n)\n    if k == 20:\n        return random_string(n)\n    if k == 21:\n        return random_string(n)\n    if k == 22:\n        return random_string(n)\n    if k == 23:\n        return random_string(n)\n    if k == 24:\n        return random_string(n)\n    if k == 25:\n        return random_string(n)\n\ndef generate_testcases(t):\n    testcases = []\n    for _ in range(t):\n        n = random.randint(1, 100)\n        k = random.randint(1, min(n, 26))\n        testcases.append(generate_random_testcase(n, k))\n    return testcases\n\ndef write_testcases(testcases, filename='testcases.txt'):\n    with open(filename, 'w') as f:\n        f.write(str(len(testcases)) + '\\n')\n        for testcase in testcases:\n            f.write(testcase + '\\n')\n\ndef check(s):\n    if len(s) == 1:\n        return True\n    if len(set(s)) == 1:\n        return False\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            return False\n    return True\n\ndef check_testcases(filename='testcases.txt'):\n    with open(filename, 'r') as f:\n        t = int(f.readline())\n        testcases = []\n        for _ in range(t):\n            n, k = map(int, f.readline().split())\n            testcases.append((n, k))\n    for testcase in testcases:\n        if not check(generate_random_testcase(*testcase)):\n            print(testcase)\n\nif __name__ == '__main__':\n    check_testcases()\n"
    },
    {
      "index": 7,
      "text": "\nimport random\nimport string\n\ndef random_string(n):\n    return ''.join([random.choice(string.ascii_lowercase) for _ in range(n)])\n\ndef generate_random_testcase(n, k):\n    if k == 1:\n        return 'a' * n\n    if k == 2:\n        return random_string(n)\n    if k == 3:\n        return random_string(n)\n    if k == 4:\n        return random_string(n)\n    if k == 5:\n        return random_string(n)\n    if k == 6:\n        return random_string(n)\n    if k == 7:\n        return random_string(n)\n    if k == 8:\n        return random_string(n)\n    if k == 9:\n        return random_string(n)\n    if k == 10:\n        return random_string(n)\n    if k == 11:\n        return random_string(n)\n    if k == 12:\n        return random_string(n)\n    if k == 13:\n        return random_string(n)\n    if k == 14:\n        return random_string(n)\n    if k == 15:\n        return random_string(n)\n    if k == 16:\n        return random_string(n)\n    if k == 17:\n        return random_string(n)\n    if k == 18:\n        return random_string(n)\n    if k == 19:\n        return random_string(n)\n    if k == 20:\n        return random_string(n)\n    if k == 21:\n        return random_string(n)\n    if k == 22:\n        return random_string(n)\n    if k == 23:\n        return random_string(n)\n    if k == 24:\n        return random_string(n)\n    if k == 25:\n        return random_string(n)\n\ndef generate_testcases(t):\n    testcases = []\n    for _ in range(t):\n        n = random.randint(1, 100)\n        k = random.randint(1, min(n, 26))\n        testcases.append(generate_random_testcase(n, k))\n    return testcases\n\ndef write_testcases(testcases, filename='testcases.txt'):\n    with open(filename, 'w') as f:\n        f.write(str(len(testcases)) + '\\n')\n        for testcase in testcases:\n            f.write(testcase + '\\n')\n\ndef check(s):\n    if len(s) == 1:\n        return True\n    if len(set(s)) == 1:\n        return False\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            return False\n    return True\n\ndef check_testcases(filename='testcases.txt'):\n    with open(filename, 'r') as f:\n        t = int(f.readline())\n        testcases = []\n        for _ in range(t):\n            n, k = map(int, f.readline().split())\n            testcases.append((n, k))\n    for testcase in testcases:\n        if not check(generate_random_testcase(*testcase)):\n            print(testcase)\n\nif __name__ == '__main__':\n    check_testcases()\n"
    },
    {
      "index": 8,
      "text": "\nimport random\nimport string\n\ndef random_string(n):\n    return ''.join([random.choice(string.ascii_lowercase) for _ in range(n)])\n\ndef generate_random_testcase(n, k):\n    if k == 26: return random_string(n)\n    if k == 1: return 'a' * n\n    if k == 2: return random_string(n)\n    if k == 3: return random_string(n)\n    if k == 4: return random_string(n)\n    if k == 5: return random_string(n)\n    if k == 6: return random_string(n)\n    if k == 7: return random_string(n)\n    if k == 8: return random_string(n)\n    if k == 9: return random_string(n)\n    if k == 10: return random_string(n)\n    if k == 11: return random_string(n)\n    if k == 12: return random_string(n)\n    if k == 13: return random_string(n)\n    if k == 14: return random_string(n)\n    if k == 15: return random_string(n)\n    if k == 16: return random_string(n)\n    if k == 17: return random_string(n)\n    if k == 18: return random_string(n)\n    if k == 19: return random_string(n)\n    if k == 20: return random_string(n)\n    if k == 21: return random_string(n)\n    if k == 22: return random_string(n)\n    if k == 23: return random_string(n)\n    if k == 24: return random_string(n)\n    if k == 25: return random_string(n)\n\ndef generate_testcases(t):\n    testcases = []\n    for _ in range(t):\n        n = random.randint(1, 100)\n        k = random.randint(1, min(n, 26))\n        testcases.append(generate_random_testcase(n, k))\n    return testcases\n\ndef write_testcases(testcases, filename='testcases.txt'):\n    with open(filename, 'w') as f:\n        f.write(str(len(testcases)) + '\\n')\n        for testcase in testcases:\n            f.write(testcase + '\\n')\n\ndef check(s):\n    if len(s) == 1:\n        return True\n    if len(set(s)) == 1:\n        return False\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            return False\n    return True\n\ndef check_testcases(filename='testcases.txt'):\n    with open(filename, 'r') as f:\n        t = int(f.readline())\n        testcases = []\n        for _ in range(t):\n            n, k = map(int, f.readline().split())\n            testcases.append((n, k))\n    for testcase in testcases:\n        if not check(generate_random_testcase(*testcase)):\n            print(testcase)\n\nif __name__ == '__main__':\n    check_testcases()\n"
    }
  ],
  "created": 1650098810,
  "object": "edit"
}
2022-04-16 08:47:20.401247 fix syntax errors 9 ["\nimport random\nimport string\n\ndef random_string(n):\n    return ''.join([random.choice(string.ascii_lowercase) for _ in range(n)])\n\ndef generate_random_testcase(n, k):\n    if k == 26:\n        return random_string(n)\n    if k == 1:\n        return 'a' * n\n    if k == 2:\n        return random_string(n)\n    if k == 3:\n        return random_string(n)\n    if k == 4:\n        return random_string(n)\n    if k == 5:\n        return random_string(n)\n    if k == 6:\n        return random_string(n)\n    if k == 7:\n        return random_string(n)\n    if k == 8:\n        return random_string(n)\n    if k == 9:\n        return random_string(n)\n    if k == 10:\n        return random_string(n)\n    if k == 11:\n        return random_string(n)\n    if k == 12:\n        return random_string(n)\n    if k == 13:\n        return random_string(n)\n    if k == 14:\n        return random_string(n)\n    if k == 15:\n        return random_string(n)\n    if k == 16:\n        return random_string(n)\n    if k == 17:\n        return random_string(n)\n    if k == 18:\n        return random_string(n)\n    if k == 19:\n        return random_string(n)\n    if k == 20:\n        return random_string(n)\n    if k == 21:\n        return random_string(n)\n    if k == 22:\n        return random_string(n)\n    if k == 23:\n        return random_string(n)\n    if k == 24:\n        return random_string(n)\n    if k == 25:\n        return random_string(n)\n\ndef generate_testcases(t):\n    testcases = []\n    for _ in range(t):\n        n = random.randint(1, 100)\n        k = random.randint(1, min(n, 26))\n        testcases.append(generate_random_testcase(n, k))\n    return testcases\n\ndef write_testcases(testcases, filename='testcases.txt'):\n    with open(filename, 'w') as f:\n        f.write(str(len(testcases)) + '\\n')\n        for testcase in testcases:\n            f.write(testcase + '\\n')\n\ndef check(s):\n    if len(s) == 1:\n        return True\n    if len(set(s)) == 1:\n        return False\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            return False\n    return True\n\ndef check_testcases(filename='testcases.txt'):\n    with open(filename, 'r') as f:\n        t = int(f.readline())\n        testcases = []\n        for _ in range(t):\n            n, k = map(int, f.readline().split())\n            testcases.append((n, k))\n    for testcase in testcases:\n        if not check(generate_random_testcase(*testcase)):\n            print(testcase)\n\nif __name__ == '__main__':\n    check_testcases()\n", "\nimport random\nimport string\n\ndef random_string(n):\n    return ''.join([random.choice(string.ascii_lowercase) for _ in range(n)])\n\ndef generate_random_testcase(n, k):\n    if k == 26:\n        return random_string(n)\n    if k == 1:\n        return 'a' * n\n    if k == 2:\n        return random_string(n)\n    if k == 3:\n        return random_string(n)\n    if k == 4:\n        return random_string(n)\n    if k == 5:\n        return random_string(n)\n    if k == 6:\n        return random_string(n)\n    if k == 7:\n        return random_string(n)\n    if k == 8:\n        return random_string(n)\n    if k == 9:\n        return random_string(n)\n    if k == 10:\n        return random_string(n)\n    if k == 11:\n        return random_string(n)\n    if k == 12:\n        return random_string(n)\n    if k == 13:\n        return random_string(n)\n    if k == 14:\n        return random_string(n)\n    if k == 15:\n        return random_string(n)\n    if k == 16:\n        return random_string(n)\n    if k == 17:\n        return random_string(n)\n    if k == 18:\n        return random_string(n)\n    if k == 19:\n        return random_string(n)\n    if k == 20:\n        return random_string(n)\n    if k == 21:\n        return random_string(n)\n    if k == 22:\n        return random_string(n)\n    if k == 23:\n        return random_string(n)\n    if k == 24:\n        return random_string(n)\n    if k == 25:\n        return random_string(n)\n\ndef generate_testcases(t):\n    testcases = []\n    for _ in range(t):\n        n = random.randint(1, 100)\n        k = random.randint(1, min(n, 26))\n        testcases.append(generate_random_testcase(n, k))\n    return testcases\n\ndef write_testcases(testcases, filename='testcases.txt'):\n    with open(filename, 'w') as f:\n        f.write(str(len(testcases)) + '\\n')\n        for testcase in testcases:\n            f.write(testcase + '\\n')\n\ndef check(s):\n    if len(s) == 1:\n        return True\n    if len(set(s)) == 1:\n        return False\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            return False\n    return True\n\ndef check_testcases(filename='testcases.txt'):\n    with open(filename, 'r') as f:\n        t = int(f.readline())\n        testcases = []\n        for _ in range(t):\n            n, k = map(int, f.readline().split())\n            testcases.append((n, k))\n    for testcase in testcases:\n        if not check(generate_random_testcase(*testcase)):\n            print(testcase)\n\nif __name__ == '__main__':\n    write_testcases(generate_testcases(100))\n", "\nimport random\nimport string\n\ndef random_string(n):\n    return ''.join([random.choice(string.ascii_lowercase) for _ in range(n)])\n\ndef generate_random_testcase(n, k):\n    if k == 26:\n        return random_string(n)\n    if k == 1:\n        return 'a' * n\n    if k == 2 or k == 3 or k == 4 or k == 5 or k == 6 or k == 7 or k == 8 or k == 9 or k == 10 or k == 11 or k == 12 or k == 13 or k == 14 or k == 15 or k == 16 or k == 17 or k == 18 or k == 19 or k == 20 or k == 21 or k == 22 or k == 23 or k == 24 or k == 25:\n        return random_string(n)\n    if k == 3:\n        return random_string(n)\n    if k == 4:\n        return random_string(n)\n    if k == 5:\n        return random_string(n)\n    if k == 6:\n        return random_string(n)\n    if k == 7:\n        return random_string(n)\n    if k == 8:\n        return random_string(n)\n    if k == 9:\n        return random_string(n)\n    if k == 10:\n        return random_string(n)\n    if k == 11:\n        return random_string(n)\n    if k == 12:\n        return random_string(n)\n    if k == 13:\n        return random_string(n)\n    if k == 14:\n        return random_string(n)\n    if k == 15:\n        return random_string(n)\n    if k == 16:\n        return random_string(n)\n    if k == 17:\n        return random_string(n)\n    if k == 18:\n        return random_string(n)\n    if k == 19:\n        return random_string(n)\n    if k == 20:\n        return random_string(n)\n    if k == 21:\n        return random_string(n)\n    if k == 22:\n        return random_string(n)\n    if k == 23:\n        return random_string(n)\n    if k == 24:\n        return random_string(n)\n    if k == 25:\n        return random_string(n)\n\ndef generate_testcases(t):\n    testcases = []\n    for _ in range(t):\n        n = random.randint(1, 100)\n        k = random.randint(1, min(n, 26))\n        testcases.append(generate_random_testcase(n, k))\n    return testcases\n\ndef write_testcases(testcases, filename='testcases.txt'):\n    with open(filename, 'w') as f:\n        f.write(str(len(testcases)) + '\\n')\n        for testcase in testcases:\n            f.write(testcase + '\\n')\n\ndef check(s):\n    if len(s) == 1:\n        return True\n    if len(set(s)) == 1:\n        return False\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            return False\n    return True\n\ndef check_testcases(filename='testcases.txt'):\n    with open(filename, 'r') as f:\n        t = int(f.readline())\n        testcases = []\n        for _ in range(t):\n            n, k = map(int, f.readline().split())\n            testcases.append((n, k))\n    for testcase in testcases:\n        if not check(generate_random_testcase(*testcase)):\n            print(testcase)\n\nif __name__ == '__main__':\n    check_testcases()\n", "\nimport random\nimport string\n\ndef random_string(n):\n    return ''.join([random.choice(string.ascii_lowercase) for _ in range(n)])\n\ndef generate_random_testcase(n, k):\n    return random_string(n)\n\ndef generate_testcases(t):\n    testcases = []\n    for _ in range(t):\n        n = random.randint(1, 10**5)\n        k = random.randint(1, 26)\n        testcases.append(generate_random_testcase(n, k))\n    return testcases\n\ndef write_testcases(testcases, filename='testcases.txt'):\n    with open(filename, 'w') as f:\n        f.write(str(len(testcases)) + '\\n')\n        for testcase in testcases:\n            f.write(testcase + '\\n')\n\ndef check(s):\n    if len(s) == 1:\n        return True\n    if len(set(s)) == 1:\n        return False\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            return False\n    return True\n\ndef check_testcases(filename='testcases.txt'):\n    with open(filename, 'r') as f:\n        t = int(f.readline())\n        testcases = []\n        for _ in range(t):\n            n, k = map(int, f.readline().split())\n            testcases.append((n, k))\n    for testcase in testcases:\n        if not check(generate_random_testcase(*testcase)):\n            print(testcase)\n\nif __name__ == '__main__':\n    check_testcases()\n", "\nimport random\nimport string\n\ndef random_string(n):\n    return ''.join([random.choice(string.ascii_lowercase) for _ in range(n)])\n\ndef generate_random_testcase(n, k):\n    if k == 26:\n        return random_string(n)\n    if k == 1:\n        return 'a' * n\n    if k == 2:\n        return random_string(n)\n    if k == 3:\n        return random_string(n)\n    if k == 4:\n        return random_string(n)\n    if k == 5:\n        return random_string(n)\n    if k == 6:\n        return random_string(n)\n    if k == 7:\n        return random_string(n)\n    if k == 8:\n        return random_string(n)\n    if k == 9:\n        return random_string(n)\n    if k == 10:\n        return random_string(n)\n    if k == 11:\n        return random_string(n)\n    if k == 12:\n        return random_string(n)\n    if k == 13:\n        return random_string(n)\n    if k == 14:\n        return random_string(n)\n    if k == 15:\n        return random_string(n)\n    if k == 16:\n        return random_string(n)\n    if k == 17:\n        return random_string(n)\n    if k == 18:\n        return random_string(n)\n    if k == 19:\n        return random_string(n)\n    if k == 20:\n        return random_string(n)\n    if k == 21:\n        return random_string(n)\n    if k == 22:\n        return random_string(n)\n    if k == 23:\n        return random_string(n)\n    if k == 24:\n        return random_string(n)\n    if k == 25:\n        return random_string(n)\n\ndef generate_testcases(t):\n    testcases = []\n    for _ in range(t):\n        n = random.randint(1, 100)\n        k = random.randint(1, min(n, 26))\n        testcases.append(generate_random_testcase(n, k))\n    return testcases\n\ndef write_testcases(testcases, filename='testcases.txt'):\n    with open(filename, 'w') as f:\n        f.write(str(len(testcases)) + '\\n')\n        for testcase in testcases:\n            f.write(testcase + '\\n')\n\ndef check(s):\n    if len(s) == 1:\n        return True\n    if len(set(s)) == 1:\n        return False\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            return False\n    return True\n\ndef check_testcases(filename='testcases.txt'):\n    with open(filename, 'r') as f:\n        t = int(f.readline())\n        testcases = []\n        for _ in range(t):\n            n, k = map(int, f.readline().split())\n            testcases.append((n, k))\n    for testcase in testcases:\n        if not check(generate_random_testcase(*testcase)):\n            print(testcase)\n\nif __name__ == '__main__':\n    check_testcases()\n", "\nimport random\nimport string\n\ndef random_string(n):\n    return ''.join([random.choice(string.ascii_lowercase) for _ in range(n)])\n\ndef generate_random_testcase(n, k):\n    if k == 26:\n        return random_string(n)\n    if k == 1:\n        return 'a' * n\n    if k == 2:\n        return random_string(n)\n    if k == 3:\n        return random_string(n)\n    if k == 4:\n        return random_string(n)\n    if k == 5:\n        return random_string(n)\n    if k == 6:\n        return random_string(n)\n    if k == 7:\n        return random_string(n)\n    if k == 8:\n        return random_string(n)\n    if k == 9:\n        return random_string(n)\n    if k == 10:\n        return random_string(n)\n    if k == 11:\n        return random_string(n)\n    if k == 12:\n        return random_string(n)\n    if k == 13:\n        return random_string(n)\n    if k == 14:\n        return random_string(n)\n    if k == 15:\n        return random_string(n)\n    if k == 16:\n        return random_string(n)\n    if k == 17:\n        return random_string(n)\n    if k == 18:\n        return random_string(n)\n    if k == 19:\n        return random_string(n)\n    if k == 20:\n        return random_string(n)\n    if k == 21:\n        return random_string(n)\n    if k == 22:\n        return random_string(n)\n    if k == 23:\n        return random_string(n)\n    if k == 24:\n        return random_string(n)\n    if k == 25:\n        return random_string(n)\n\ndef generate_testcases(t):\n    testcases = []\n    for _ in range(t):\n        n = random.randint(1, 100)\n        k = random.randint(1, min(n, 26))\n        testcases.append(generate_random_testcase(n, k))\n    return testcases\n\ndef write_testcases(testcases, filename='testcases.txt'):\n    with open(filename, 'w') as f:\n        f.write(str(len(testcases)) + '\\n')\n        for testcase in testcases:\n            f.write(testcase + '\\n')\n\ndef check(s):\n    if len(s) == 1:\n        return True\n    if len(set(s)) == 1:\n        return False\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            return False\n    return True\n\ndef check_testcases(filename='testcases.txt'):\n    with open(filename, 'r') as f:\n        t = int(f.readline())\n        testcases = []\n        for _ in range(t):\n            n, k = map(int, f.readline().split())\n            testcases.append((n, k))\n    for testcase in testcases:\n        if not check(generate_random_testcase(*testcase)):\n            print(testcase)\n\nif __name__ == '__main__':\n    check_testcases()\n", "\nimport random\nimport string\n\ndef random_string(n):\n    return ''.join([random.choice(string.ascii_lowercase) for _ in range(n)])\n\ndef generate_random_testcase(n, k):\n    if k == 26:\n        return random_string(n)\n    if k == 1:\n        return 'a' * n\n    if k == 2:\n        return random_string(n)\n    if k == 3:\n        return random_string(n)\n    if k == 4:\n        return random_string(n)\n    if k == 5:\n        return random_string(n)\n    if k == 6:\n        return random_string(n)\n    if k == 7:\n        return random_string(n)\n    if k == 8:\n        return random_string(n)\n    if k == 9:\n        return random_string(n)\n    if k == 10:\n        return random_string(n)\n    if k == 11:\n        return random_string(n)\n    if k == 12:\n        return random_string(n)\n    if k == 13:\n        return random_string(n)\n    if k == 14:\n        return random_string(n)\n    if k == 15:\n        return random_string(n)\n    if k == 16:\n        return random_string(n)\n    if k == 17:\n        return random_string(n)\n    if k == 18:\n        return random_string(n)\n    if k == 19:\n        return random_string(n)\n    if k == 20:\n        return random_string(n)\n    if k == 21:\n        return random_string(n)\n    if k == 22:\n        return random_string(n)\n    if k == 23:\n        return random_string(n)\n    if k == 24:\n        return random_string(n)\n    if k == 25:\n        return random_string(n)\n\ndef generate_testcases(t):\n    testcases = []\n    for _ in range(t):\n        n = random.randint(1, 100)\n        k = random.randint(1, min(n, 26))\n        testcases.append(generate_random_testcase(n, k))\n    return testcases\n\ndef write_testcases(testcases, filename='testcases.txt'):\n    with open(filename, 'w') as f:\n        f.write(str(len(testcases)) + '\\n')\n        for testcase in testcases:\n            f.write(testcase + '\\n')\n\ndef check(s):\n    if len(s) == 1:\n        return True\n    if len(set(s)) == 1:\n        return False\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            return False\n    return True\n\ndef check_testcases(filename='testcases.txt'):\n    with open(filename, 'r') as f:\n        t = int(f.readline())\n        testcases = []\n        for _ in range(t):\n            n, k = map(int, f.readline().split())\n            testcases.append((n, k))\n    for testcase in testcases:\n        if not check(generate_random_testcase(*testcase)):\n            print(testcase)\n\nif __name__ == '__main__':\n    check_testcases()\n", "\nimport random\nimport string\n\ndef random_string(n):\n    return ''.join([random.choice(string.ascii_lowercase) for _ in range(n)])\n\ndef generate_random_testcase(n, k):\n    if k == 1:\n        return 'a' * n\n    if k == 2:\n        return random_string(n)\n    if k == 3:\n        return random_string(n)\n    if k == 4:\n        return random_string(n)\n    if k == 5:\n        return random_string(n)\n    if k == 6:\n        return random_string(n)\n    if k == 7:\n        return random_string(n)\n    if k == 8:\n        return random_string(n)\n    if k == 9:\n        return random_string(n)\n    if k == 10:\n        return random_string(n)\n    if k == 11:\n        return random_string(n)\n    if k == 12:\n        return random_string(n)\n    if k == 13:\n        return random_string(n)\n    if k == 14:\n        return random_string(n)\n    if k == 15:\n        return random_string(n)\n    if k == 16:\n        return random_string(n)\n    if k == 17:\n        return random_string(n)\n    if k == 18:\n        return random_string(n)\n    if k == 19:\n        return random_string(n)\n    if k == 20:\n        return random_string(n)\n    if k == 21:\n        return random_string(n)\n    if k == 22:\n        return random_string(n)\n    if k == 23:\n        return random_string(n)\n    if k == 24:\n        return random_string(n)\n    if k == 25:\n        return random_string(n)\n\ndef generate_testcases(t):\n    testcases = []\n    for _ in range(t):\n        n = random.randint(1, 100)\n        k = random.randint(1, min(n, 26))\n        testcases.append(generate_random_testcase(n, k))\n    return testcases\n\ndef write_testcases(testcases, filename='testcases.txt'):\n    with open(filename, 'w') as f:\n        f.write(str(len(testcases)) + '\\n')\n        for testcase in testcases:\n            f.write(testcase + '\\n')\n\ndef check(s):\n    if len(s) == 1:\n        return True\n    if len(set(s)) == 1:\n        return False\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            return False\n    return True\n\ndef check_testcases(filename='testcases.txt'):\n    with open(filename, 'r') as f:\n        t = int(f.readline())\n        testcases = []\n        for _ in range(t):\n            n, k = map(int, f.readline().split())\n            testcases.append((n, k))\n    for testcase in testcases:\n        if not check(generate_random_testcase(*testcase)):\n            print(testcase)\n\nif __name__ == '__main__':\n    check_testcases()\n", "\nimport random\nimport string\n\ndef random_string(n):\n    return ''.join([random.choice(string.ascii_lowercase) for _ in range(n)])\n\ndef generate_random_testcase(n, k):\n    if k == 26: return random_string(n)\n    if k == 1: return 'a' * n\n    if k == 2: return random_string(n)\n    if k == 3: return random_string(n)\n    if k == 4: return random_string(n)\n    if k == 5: return random_string(n)\n    if k == 6: return random_string(n)\n    if k == 7: return random_string(n)\n    if k == 8: return random_string(n)\n    if k == 9: return random_string(n)\n    if k == 10: return random_string(n)\n    if k == 11: return random_string(n)\n    if k == 12: return random_string(n)\n    if k == 13: return random_string(n)\n    if k == 14: return random_string(n)\n    if k == 15: return random_string(n)\n    if k == 16: return random_string(n)\n    if k == 17: return random_string(n)\n    if k == 18: return random_string(n)\n    if k == 19: return random_string(n)\n    if k == 20: return random_string(n)\n    if k == 21: return random_string(n)\n    if k == 22: return random_string(n)\n    if k == 23: return random_string(n)\n    if k == 24: return random_string(n)\n    if k == 25: return random_string(n)\n\ndef generate_testcases(t):\n    testcases = []\n    for _ in range(t):\n        n = random.randint(1, 100)\n        k = random.randint(1, min(n, 26))\n        testcases.append(generate_random_testcase(n, k))\n    return testcases\n\ndef write_testcases(testcases, filename='testcases.txt'):\n    with open(filename, 'w') as f:\n        f.write(str(len(testcases)) + '\\n')\n        for testcase in testcases:\n            f.write(testcase + '\\n')\n\ndef check(s):\n    if len(s) == 1:\n        return True\n    if len(set(s)) == 1:\n        return False\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            return False\n    return True\n\ndef check_testcases(filename='testcases.txt'):\n    with open(filename, 'r') as f:\n        t = int(f.readline())\n        testcases = []\n        for _ in range(t):\n            n, k = map(int, f.readline().split())\n            testcases.append((n, k))\n    for testcase in testcases:\n        if not check(generate_random_testcase(*testcase)):\n            print(testcase)\n\nif __name__ == '__main__':\n    check_testcases()\n"]
2022-04-16 08:47:20.401448 size on output set 6
