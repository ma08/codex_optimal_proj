["\n\n#Solution:\n\nN, H, L = map(int, input().split())\nhorror = set(map(int, input().split()))\n\nsimilar = {}\nfor _ in range(L):\n    a, b = map(int, input().split())\n    similar[a] = similar.get(a, set()).union({b})\n    similar[b] = similar.get(b, set()).union({a})\n\nHI = [0] * N\nfor h in horror:\n    HI[h] = 0\n\nQ = 0\nwhile Q < N:\n    Q = max(HI) + 1\n    for i in range(N):\n        if HI[i] == 0:\n            continue\n        else:\n            HI[i] = Q if all(HI[j] == 0 for j in similar.get(i, [])) else float('inf')\n\nprint(HI.index(max(HI)))", "\n\nclass Solution:\n    def solve(self, input_lines):\n        # TODO: Implement solution\n        return \"1\"", "\n\nimport sys\nimport numpy as np\n\ndef main():\n    N, H, L = (int(x) for x in sys.stdin.readline().split())\n    horror_list = set([int(x) for x in sys.stdin.readline().split()])\n    similar = np.zeros((N, N), dtype=np.int8)\n    for _ in range(L):\n        a, b = (int(x) for x in sys.stdin.readline().split())\n        similar[a][b] = 1\n        similar[b][a] = 1\n    horror_index = [0] * N\n    for i in range(N):\n        if i in horror_list:\n            continue\n        horror_index[i] = np.inf\n        for j in range(N):\n            if similar[i][j] == 1:\n                horror_index[i] = min(horror_index[i], horror_index[j] + 1)\n    print(np.argmax(horror_index))\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\ndef main():\n    N, H, L = map(int, sys.stdin.readline().split())\n    horror = set(map(int, sys.stdin.readline().split()))\n    sim = {}\n    for i in range(L):\n        a, b = map(int, sys.stdin.readline().split())\n        sim.setdefault(a, set()).add(b)\n        sim.setdefault(b, set()).add(a)\n    HI = [0] * N\n    for i in range(N):\n        if i in horror:\n            HI[i] = 0\n        else:\n            HI[i] = max([HI[j] for j in sim[i]] + [float('inf')]) + 1\n    print(HI.index(max(HI)))\n\nif __name__ == '__main__':\n    main()", "\n\n# Solution\ndef solve():\n    N, H, L = map(int, input().split())\n    horror_list = set(map(int, input().split()))\n    similarities = [list(map(int, input().split())) for _ in range(L)]\n    HI = [0] * N\n    for i in range(N):\n        if i in horror_list:\n            HI[i] = 0\n        else:\n            HI[i] = float('inf')\n    for a, b in similarities:\n        if HI[a] < HI[b]:\n            HI[b] = HI[a] + 1\n        elif HI[b] < HI[a]:\n            HI[a] = HI[b] + 1\n    print(HI.index(max(HI)))\n\nsolve()", "\n\nimport sys\n\ndef main():\n    n, h, l = map(int, sys.stdin.readline().split())\n    horror = list(map(int, sys.stdin.readline().split()))\n    horror_set = set(horror)\n    horror_index = [0] * n\n    for i in horror:\n        horror_index[i] = 0\n    for i in range(l):\n        a, b = map(int, sys.stdin.readline().split())\n        if a in horror_set:\n            horror_index[b] = 0\n        elif b in horror_set:\n            horror_index[a] = 0\n    for i in range(n):\n        if horror_index[i] == 0:\n            continue\n        horror_index[i] = float('inf')\n        for j in range(l):\n            a, b = map(int, sys.stdin.readline().split())\n            if a == i:\n                horror_index[i] = min(horror_index[i], horror_index[b] + 1)\n            elif b == i:\n                horror_index[i] = min(horror_index[i], horror_index[a] + 1)\n        if horror_index[i] == float('inf'):\n            horror_index[i] = -1\n    max_hi = max(horror_index)\n    max_indices = []\n    for i in range(n):\n        if horror_index[i] == max_hi:\n            max_indices.append(i)\n    print(min(max_indices))\n\nif __name__ == '__main__':\n    main()", "\n\n#Program\nn,h,l = map(int,input().split())\nhorror_list = list(map(int,input().split()))\nsimilar = {}\nfor _ in range(l):\n    a,b = map(int,input().split())\n    if a not in similar:\n        similar[a] = [b]\n    else:\n        similar[a].append(b)\n    if b not in similar:\n        similar[b] = [a]\n    else:\n        similar[b].append(a)\n\nhi = [0]*n\nfor i in horror_list:\n    hi[i] = 0\nfor i in horror_list:\n    for j in similar[i]:\n        if hi[j] == 0:\n            continue\n        elif hi[j] == 1:\n            hi[j] = 0\n        else:\n            hi[j] = 1\n\nmax_hi = max(hi)\nmax_hi_movies = []\nfor i in range(n):\n    if hi[i] == max_hi:\n        max_hi_movies.append(i)\nprint(min(max_hi_movies))", "\n\ndef main():\n    n, h, l = map(int, input().split())\n    horror = set(map(int, input().split()))\n    similar = [[] for _ in range(n)]\n    for _ in range(l):\n        a, b = map(int, input().split())\n        similar[a].append(b)\n        similar[b].append(a)\n    horror_index = [0] * n\n    for i in range(n):\n        if i not in horror:\n            horror_index[i] = max(horror_index[j] for j in similar[i]) + 1\n    print(horror_index.index(max(horror_index)))\n\nmain()"]