2022-04-16 06:43:17.173496 num operations 1
2022-04-16 06:43:17.173514 size on input set 1
2022-04-16 06:43:26.227200 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport math\n\ndef round_dances(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2))\n\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dances(n))\n"
    },
    {
      "index": 1,
      "text": "\nimport math\n\ndef round_dances(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2))\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dances(n))\n"
    },
    {
      "index": 2,
      "text": "import math\n\ndef round_dance(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2)) if n >= 2 else 1\n\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dances(n))\n"
    },
    {
      "index": 3,
      "text": "\nimport math\n\ndef round_dances(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2))\n\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dances(n))\n"
    },
    {
      "index": 4,
      "text": "\nimport math\n"
    },
    {
      "index": 5,
      "text": "\nimport math\n\ndef round_dances(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2))\n\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dances(n))\n"
    },
    {
      "index": 6,
      "text": "import math\n\ndef round_dances(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2))\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dances(n))\n"
    },
    {
      "index": 7,
      "text": "\nimport math\n\ndef round_dances(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2))\n\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dances(n))\n"
    },
    {
      "index": 8,
      "text": "\nimport math\n\ndef round_dances(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2))\n\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dances(n))\n"
    }
  ],
  "created": 1650091397,
  "object": "edit"
}
2022-04-16 06:43:26.227506 fix syntax errors 9 ["\nimport math\n\ndef round_dances(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2))\n\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dances(n))\n", "\nimport math\n\ndef round_dances(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2))\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dances(n))\n", "import math\n\ndef round_dance(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2)) if n >= 2 else 1\n\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dances(n))\n", "\nimport math\n\ndef round_dances(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2))\n\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dances(n))\n", '\nimport math\n', "\nimport math\n\ndef round_dances(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2))\n\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dances(n))\n", "import math\n\ndef round_dances(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2))\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dances(n))\n", "\nimport math\n\ndef round_dances(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2))\n\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dances(n))\n", "\nimport math\n\ndef round_dances(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2))\n\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dances(n))\n"]
2022-04-16 06:43:26.227541 size on output set 5
2022-04-16 06:43:26.227551 num operations 1
2022-04-16 06:43:26.227557 size on input set 1
2022-04-16 06:43:35.566563 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Solution\n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n"
    },
    {
      "index": 1,
      "text": "\n#Solution\n\nn = int(input())\n\n\ndef factorial(n1):\n    if n1 == 0:\n        return 1\n    else:\n        return n1 * factorial(n1 - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n"
    },
    {
      "index": 2,
      "text": "\n#!/bin/python3\n#Solution\n\nn = int(input())\n\ndef factorial(n) :\n    if n == 0 :\n        return 1 \n    else :\n        return n * factorial(n - 1) \n\nprint(factorial(n) // (factorial(n // 2) ** 2)) \n"
    },
    {
      "index": 3,
      "text": "#Solution\n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n"
    },
    {
      "index": 4,
      "text": "\"\"\"\nSolution:\n\n\n\"\"\"\n\ndef run():\n    n = int(input())\n\n    def factorial(n):\n        if n == 0:\n            return 1\n        else:\n            return n * factorial(n - 1)\n\n    print(factorial(n) // (factorial(n // 2) ** 2))\n\n\nif __name__ == \"__main__\":\n    run()\n"
    },
    {
      "index": 5,
      "text": "\n# Solution\n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n"
    },
    {
      "index": 6,
      "text": "\n#Solution\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\nprint(factorial(n) // (factorial(n // 2) ** 2))\n"
    },
    {
      "index": 7,
      "text": "\n\n# Solution\n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n"
    },
    {
      "index": 8,
      "text": "\n#Solution\n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n"
    }
  ],
  "created": 1650091406,
  "object": "edit"
}
2022-04-16 06:43:35.566816 fix syntax errors 9 ['\n# Solution\n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n', '\n#Solution\n\nn = int(input())\n\n\ndef factorial(n1):\n    if n1 == 0:\n        return 1\n    else:\n        return n1 * factorial(n1 - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n', '\n#!/bin/python3\n#Solution\n\nn = int(input())\n\ndef factorial(n) :\n    if n == 0 :\n        return 1 \n    else :\n        return n * factorial(n - 1) \n\nprint(factorial(n) // (factorial(n // 2) ** 2)) \n', '#Solution\n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n', '"""\nSolution:\n\n\n"""\n\ndef run():\n    n = int(input())\n\n    def factorial(n):\n        if n == 0:\n            return 1\n        else:\n            return n * factorial(n - 1)\n\n    print(factorial(n) // (factorial(n // 2) ** 2))\n\n\nif __name__ == "__main__":\n    run()\n', '\n# Solution\n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n', '\n#Solution\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\nprint(factorial(n) // (factorial(n // 2) ** 2))\n', '\n\n# Solution\n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n', '\n#Solution\n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n']
2022-04-16 06:43:35.566853 size on output set 8
