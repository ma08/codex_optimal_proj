2022-04-16 08:32:53.783645 num operations 1
2022-04-16 08:32:53.783665 size on input set 1
2022-04-16 08:33:04.143217 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    acs = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0 for _ in range(M)]\n    S = [0 for _ in range(M)]\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    acs = defaultdict(int) # acs[i] = 1 if i-th problem is ac\n    penalties = defaultdict(int) # penalties[i] = number of wa for i-th problem\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n"
    },
    {
      "index": 2,
      "text": "\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    acs = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())  # N problems, M submissions\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()  # p[i] problem number, S[i] judgement\n    main(N, M, p, S)\n"
    },
    {
      "index": 3,
      "text": "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    acs = defaultdict(int)\n    penalties = defaultdict(list)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penalties[p[i]].append(1)\n    ac_count = sum(acs.values())\n    penalty_count = sum([len(penalties[i]) for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n"
    },
    {
      "index": 4,
      "text": "\n\nfrom collections import defaultdict\n\ndef main(N, M, P, S):\n    acs = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[P[i]] == 0:\n                acs[P[i]] = 1\n        else:\n            penalties[P[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    P = [0]*M\n    S = [0]*M\n    for i in range(M):\n        P[i], S[i] = input().split()\n    main(N, M, P, S)\n"
    },
    {
      "index": 5,
      "text": "import sys\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    acs = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, sys.stdin.readline().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = sys.stdin.readline().split()\n    main(N, M, p, S)\n"
    },
    {
      "index": 6,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# @Date    : 2019-01-07 22:36:06\n# @Author  : Your Name (you@example.org)\n# @Link    : http://example.org\n# @Version : $Id$\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    acs = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n"
    },
    {
      "index": 7,
      "text": "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, s):\n    acs = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if s[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    s = [0]*M\n    for i in range(M):\n        p[i], s[i] = input().split()\n    main(N, M, p, s)\n"
    },
    {
      "index": 8,
      "text": "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    acs = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0 for _ in range(M)]\n    S = [0 for _ in range(M)]\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n"
    }
  ],
  "created": 1650097973,
  "object": "edit"
}
2022-04-16 08:33:04.143532 fix syntax errors 9 ["\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    acs = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0 for _ in range(M)]\n    S = [0 for _ in range(M)]\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n", "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    acs = defaultdict(int) # acs[i] = 1 if i-th problem is ac\n    penalties = defaultdict(int) # penalties[i] = number of wa for i-th problem\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n", "\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    acs = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())  # N problems, M submissions\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()  # p[i] problem number, S[i] judgement\n    main(N, M, p, S)\n", "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    acs = defaultdict(int)\n    penalties = defaultdict(list)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penalties[p[i]].append(1)\n    ac_count = sum(acs.values())\n    penalty_count = sum([len(penalties[i]) for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n", "\n\nfrom collections import defaultdict\n\ndef main(N, M, P, S):\n    acs = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[P[i]] == 0:\n                acs[P[i]] = 1\n        else:\n            penalties[P[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    P = [0]*M\n    S = [0]*M\n    for i in range(M):\n        P[i], S[i] = input().split()\n    main(N, M, P, S)\n", "import sys\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    acs = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, sys.stdin.readline().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = sys.stdin.readline().split()\n    main(N, M, p, S)\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# @Date    : 2019-01-07 22:36:06\n# @Author  : Your Name (you@example.org)\n# @Link    : http://example.org\n# @Version : $Id$\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    acs = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n", "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, s):\n    acs = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if s[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    s = [0]*M\n    for i in range(M):\n        p[i], s[i] = input().split()\n    main(N, M, p, s)\n", "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    acs = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[p[i]] == 0:\n                acs[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0 for _ in range(M)]\n    S = [0 for _ in range(M)]\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n"]
2022-04-16 08:33:04.143677 size on output set 8
2022-04-16 08:33:04.143687 num operations 1
2022-04-16 08:33:04.143693 size on input set 1
2022-04-16 08:33:15.095354 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# -----Input Part-----\nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n"
    },
    {
      "index": 1,
      "text": "\n# -----Input Part-----\nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n"
    },
    {
      "index": 2,
      "text": "\n# -----Input Part-----\nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n"
    },
    {
      "index": 3,
      "text": "\n# -----Input Part-----\nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n"
    },
    {
      "index": 4,
      "text": "\n# -----Input Part-----\nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty)) \n"
    },
    {
      "index": 5,
      "text": "\nN, M = map(int, input().split())\n\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\nprint(sum(result), sum(penalty))\n"
    },
    {
      "index": 6,
      "text": "\n# -----Input Part-----\nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n"
    },
    {
      "index": 7,
      "text": "# -----Library Part-----\nimport sys\n\n# -----Input Part-----\nN = int(input())\nA = list(map(int, input().split()))\n\n# -----Process Part-----\nA.sort()\nA.reverse()\ncount = 0\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n"
    },
    {
      "index": 8,
      "text": "\n# -----Input Part-----\nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n"
    }
  ],
  "created": 1650097984,
  "object": "edit"
}
2022-04-16 08:33:15.095600 fix syntax errors 9 ['\n# -----Input Part-----\nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == "AC" and result[p] == 0:\n        result[p] = 1\n    elif S == "WA" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n', '\n# -----Input Part-----\nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == "AC" and result[p] == 0:\n        result[p] = 1\n    elif S == "WA" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n', '\n# -----Input Part-----\nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == "AC" and result[p] == 0:\n        result[p] = 1\n    elif S == "WA" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n', '\n# -----Input Part-----\nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == "AC" and result[p] == 0:\n        result[p] = 1\n    elif S == "WA" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n', '\n# -----Input Part-----\nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == "AC" and result[p] == 0:\n        result[p] = 1\n    elif S == "WA" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty)) \n', '\nN, M = map(int, input().split())\n\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == "AC" and result[p] == 0:\n        result[p] = 1\n    elif S == "WA" and result[p] == 0:\n        penalty[p] += 1\n\nprint(sum(result), sum(penalty))\n', '\n# -----Input Part-----\nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == "AC" and result[p] == 0:\n        result[p] = 1\n    elif S == "WA" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n', '# -----Library Part-----\nimport sys\n\n# -----Input Part-----\nN = int(input())\nA = list(map(int, input().split()))\n\n# -----Process Part-----\nA.sort()\nA.reverse()\ncount = 0\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == "AC" and result[p] == 0:\n        result[p] = 1\n    elif S == "WA" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n', '\n# -----Input Part-----\nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == "AC" and result[p] == 0:\n        result[p] = 1\n    elif S == "WA" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n']
2022-04-16 08:33:15.095646 size on output set 4
