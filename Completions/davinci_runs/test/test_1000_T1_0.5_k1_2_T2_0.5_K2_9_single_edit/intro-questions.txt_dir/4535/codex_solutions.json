["\n\nclass Solution:\n    def hammingWeight(self, n: int) -> int:\n        n = n & 0xffffffff\n        count = 0\n        while n > 0:\n            n &= n - 1\n            count += 1\n        return count\n\n    def hammingWeight_bit_operation(self, n: int) -> int:\n        n = n & 0xffffffff\n        count = 0\n        while n > 0:\n            if n & 1 == 1:\n                count += 1\n            n >>= 1\n        return count\n\n    def hammingWeight_bin(self, n: int) -> int:\n        return bin(n & 0xffffffff).count(\"1\")", "\n\nclass Solution:\n    def hammingWeight(self, n: int) -> int:\n        return bin(n).count('1')"]