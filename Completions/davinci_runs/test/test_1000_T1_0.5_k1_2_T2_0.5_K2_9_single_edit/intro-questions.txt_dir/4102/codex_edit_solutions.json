["\n\nnum = input(\"enter a number\")\n\nif num[0] == num[2]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "\nnum = input()\n\nif num[0] == num[2]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "\n#\nnum = input()\n\nif num[0] == num[2]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "\nimport sys\n\ndef is_lucky_number(number_string):\n    half_len = len(number_string) // 2\n    first_half = number_string[:half_len]\n    second_half = number_string[half_len:]\n    return sum(int(digit) for digit in first_half) == sum(int(digit) for digit in second_half)\n\ndef main():\n    number_string = sys.stdin.readline().strip()\n    if is_lucky_number(number_string):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef is_lucky_number(number):\n    if len(number) % 2 == 0:\n        half_len = len(number) // 2\n        first_half = number[:half_len]\n        second_half = number[half_len:]\n        if sum(int(digit) for digit in first_half) == sum(int(digit) for digit in second_half):\n            return True\n        else:\n            return False\n    else:\n        return False\n\ndef main():\n    number = sys.stdin.readline().strip()\n    if is_lucky_number(number):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nnum = int(input())\n\nprint(num//10)\n", "\nimport sys\n\n\ndef is_lucky_number(number): \n    if len(number) % 2 == 0:\n        half_len = len(number) // 2\n        first_half = number[:half_len]\n        second_half = number[half_len:]\n        if sum(int(digit) for digit in first_half) == sum(int(digit) for digit in second_half):\n            return True\n        else:\n            return False\n    else:\n        return False\n    \ndef main(): \n    number = sys.stdin.readline().strip()\n    if is_lucky_number(number):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n        \nif __name__ == \"__main__\": \n    main()\n", "\nimport sys\n\ndef is_lucky_number(number):\n    if len(number) % 2 == 0:\n        half_len = len(number) // 2\n        first_half = number[:half_len]\n        second_half = number[half_len:]\n        if sum(int(digit) for digit in first_half) == sum(int(digit) for digit in second_half):\n            return True\n        else:\n            return False\n    else:\n        return False\n\ndef main():\n    number = sys.stdin.readline().strip()\n    if is_lucky_number(number):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef is_lucky_number(number):\n    if len(number) % 2 == 0:\n        half_len = len(number) // 2\n        first_half = number[:half_len]\n        second_half = number[half_len:]\n        if sum(int(digit) for digit in first_half) == sum(int(digit) for digit in second_half):\n            return True\n        else:\n            return False\n    else:\n        return False\ndef main():\n    number = sys.stdin.readline().strip()\n    if is_lucky_number(number):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == \"__main__\":\n    main()\n", "\nnum = input()\nif num[0] == num[2]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "\n\nnum = input('\u6570\u5b57\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044')\n\nif num[0] == num[2]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "\n\nnum = int(input())\n\nif num // 100 == num % 10:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "\n\nnum = int(input())\n\nif num//100 == num%10:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "\nimport sys\n\n\ndef is_lucky_number(number):\n    half_len = len(number) // 2\n    first_half = number[:half_len]\n    second_half = number[half_len:]\n    if sum(int(digit) for digit in first_half) == sum(int(digit) for digit in second_half):\n        return True\n    else:\n\n        return False\n\ndef main():\n    number = sys.stdin.readline().strip()\n    if is_lucky_number(number):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()\n"]