2022-04-16 10:29:14.407334 num operations 1
2022-04-16 10:29:14.407351 size on input set 1
2022-04-16 10:29:21.028923 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\nfor i in range(n):\n    line = input()\n    if \"Simon says\" in line:\n        print(line[11:])\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nfor i in range(n):\n    line = input()\n    if \"Simon says\" in line:\n        print(line[11:])\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\nfor i in range(n):\n    line = input()\n    if \"Simon says\" in line:\n        print(line[11:])\n"
    },
    {
      "index": 3,
      "text": "\nn = int(input())\nfor i in range(n):\n    line = input()\n    if \"Simon says\" in line:\n        print(line[11:])\n"
    },
    {
      "index": 4,
      "text": "\n\nn = int(input())\nfor i in range(n):\n    line = input()\n    if \"Simon says\" in line:\n        print(line[10:])\n"
    },
    {
      "index": 5,
      "text": "\n\nn = int(input())\nfor i in range(n):\n    line = input()\n    if \"Simon says\" in line:\n\n# for i in range(int(input())):\n#     s = input()\n#     if s[:10] == \"Simon says\":\n#         print(s[10:])\n        print(line[11:])\n"
    },
    {
      "index": 6,
      "text": "\nn = int(input())\nfor i in range(n):\n    line = input()\n    if \"Simon says\" in line:\n        print(line[11:])\n"
    },
    {
      "index": 7,
      "text": "n = int(input())\nfor i in range(n):\n    line = input()\n    if \"Simon says\" == line[:11]:\n        print(line[11:].strip())\n"
    },
    {
      "index": 8,
      "text": "n = int(input())\nfor i in range(n):\n    line = input()\n    if \"Simon says\" in line:\n        print(line[11:])\n"
    }
  ],
  "created": 1650104954,
  "object": "edit"
}
2022-04-16 10:29:21.029188 fix syntax errors 9 ['n = int(input())\nfor i in range(n):\n    line = input()\n    if "Simon says" in line:\n        print(line[11:])\n', '\nn = int(input())\nfor i in range(n):\n    line = input()\n    if "Simon says" in line:\n        print(line[11:])\n', '\nn = int(input())\nfor i in range(n):\n    line = input()\n    if "Simon says" in line:\n        print(line[11:])\n', '\nn = int(input())\nfor i in range(n):\n    line = input()\n    if "Simon says" in line:\n        print(line[11:])\n', '\n\nn = int(input())\nfor i in range(n):\n    line = input()\n    if "Simon says" in line:\n        print(line[10:])\n', '\n\nn = int(input())\nfor i in range(n):\n    line = input()\n    if "Simon says" in line:\n\n# for i in range(int(input())):\n#     s = input()\n#     if s[:10] == "Simon says":\n#         print(s[10:])\n        print(line[11:])\n', '\nn = int(input())\nfor i in range(n):\n    line = input()\n    if "Simon says" in line:\n        print(line[11:])\n', 'n = int(input())\nfor i in range(n):\n    line = input()\n    if "Simon says" == line[:11]:\n        print(line[11:].strip())\n', 'n = int(input())\nfor i in range(n):\n    line = input()\n    if "Simon says" in line:\n        print(line[11:])\n']
2022-04-16 10:29:21.029228 size on output set 5
2022-04-16 10:29:21.029239 num operations 1
2022-04-16 10:29:21.029244 size on input set 1
2022-04-16 10:29:29.072040 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    for i in range(n):\n        command = sys.stdin.readline()\n        if command[:10] == \"Simon says\":\n            print(command[11:])\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    for i in range(n):\n        command = sys.stdin.readline()\n        if command[:10] == \"Simon says\":\n            print(command[11:])\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        command = input()\n        if command[:10] == \"Simon says\": print(command[11:])\n\nmain()\n"
    },
    {
      "index": 3,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    for i in range(n):\n        command = sys.stdin.readline()\n        if command[:10] == \"Simon says\":\n            print(command[11:])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    for _ in range(n):\n        command = sys.stdin.readline()\n        if command[:10] == \"Simon says\":\n            print(command[11:])\n\nmain()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    for i in range(n):\n        command = sys.stdin.readline()\n        if command[:10] == \"Simon says\":\n            print(command[11:])\n\nmain()\n"
    },
    {
      "index": 6,
      "text": "\n\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    for i in range(n):\n        command = sys.stdin.readline()\n        if command[:10] == \"Simon says\":\n            print(command[11:])\n\n\nmain()\n"
    },
    {
      "index": 7,
      "text": "import sys\n\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    for i in range(n):\n        command = sys.stdin.readline()\n        if command[:10] == \"Simon says\":\n            print(command[11:])\n\n\nmain()\n"
    },
    {
      "index": 8,
      "text": "\nimport sys\n\ndef main():\n    n = int(input())\n    commands = []\n    for _ in range(n):\n        commands.append(input())\n    for command in commands:\n        if command[0:10] == \"Simon says\":\n            print(command[10:])\n\n\nmain()\n"
    }
  ],
  "created": 1650104961,
  "object": "edit"
}
2022-04-16 10:29:29.072283 fix syntax errors 9 ['import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    for i in range(n):\n        command = sys.stdin.readline()\n        if command[:10] == "Simon says":\n            print(command[11:])\n\nmain()\n', '\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    for i in range(n):\n        command = sys.stdin.readline()\n        if command[:10] == "Simon says":\n            print(command[11:])\n\nmain()\n', '\n\nimport sys\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        command = input()\n        if command[:10] == "Simon says": print(command[11:])\n\nmain()\n', 'import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    for i in range(n):\n        command = sys.stdin.readline()\n        if command[:10] == "Simon says":\n            print(command[11:])\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    for _ in range(n):\n        command = sys.stdin.readline()\n        if command[:10] == "Simon says":\n            print(command[11:])\n\nmain()\n', '\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    for i in range(n):\n        command = sys.stdin.readline()\n        if command[:10] == "Simon says":\n            print(command[11:])\n\nmain()\n', '\n\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    for i in range(n):\n        command = sys.stdin.readline()\n        if command[:10] == "Simon says":\n            print(command[11:])\n\n\nmain()\n', 'import sys\n\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    for i in range(n):\n        command = sys.stdin.readline()\n        if command[:10] == "Simon says":\n            print(command[11:])\n\n\nmain()\n', '\nimport sys\n\ndef main():\n    n = int(input())\n    commands = []\n    for _ in range(n):\n        commands.append(input())\n    for command in commands:\n        if command[0:10] == "Simon says":\n            print(command[10:])\n\n\nmain()\n']
2022-04-16 10:29:29.072320 size on output set 8
2022-04-16 10:29:29.072331 num operations 1
2022-04-16 10:29:29.072336 size on input set 1
2022-04-16 10:29:36.454450 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\nfor i in range(n):\n    line = input()\n    if line.startswith(\"Simon says\"):\n        print(line[11:])\n"
    },
    {
      "index": 1,
      "text": "\ndef f():\n    n = int(input())\n    for i in range(n):\n        line = input()\n        if line.startswith(\"Simon says\"):\n            print(line[11:])\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\nfor i in range(n):\n    line = input()\n    if line.startswith(\"Simon says\"):\n        print(line[11:])\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        line = input()\n        if line.startswith(\"Simon says\"):\n            print(line[11:])\nmain()\n"
    },
    {
      "index": 4,
      "text": "\nfor i in range(int(input())):\n    line = input()\n    if line.startswith(\"Simon says\"):\n        print(line[11:])\n"
    },
    {
      "index": 5,
      "text": "\nn = int(input())\nfor i in range(n):\n    line = input()\n    if line.startswith(\"Simon says\"):\n        print(line[11:])\n"
    },
    {
      "index": 6,
      "text": "\nn = int(input())\nfor i in range(n):\n    line = input()\n    if line.startswith(\"Simon says\"):\n        print(line[11:])\n"
    },
    {
      "index": 7,
      "text": "\n\nn = int(input())\nfor i in range(n):\n    line = input()\n    if line.startswith(\"Simon says\"):\n        print(line[11:]) \n"
    },
    {
      "index": 8,
      "text": "n = int(input())\nfor i in range(n):\n    line = input()\n    if line.startswith(\"Simon says\"):\n        print(line[11:])\n"
    }
  ],
  "created": 1650104969,
  "object": "edit"
}
2022-04-16 10:29:36.454802 fix syntax errors 9 ['\nn = int(input())\nfor i in range(n):\n    line = input()\n    if line.startswith("Simon says"):\n        print(line[11:])\n', '\ndef f():\n    n = int(input())\n    for i in range(n):\n        line = input()\n        if line.startswith("Simon says"):\n            print(line[11:])\n', '\nn = int(input())\nfor i in range(n):\n    line = input()\n    if line.startswith("Simon says"):\n        print(line[11:])\n', '\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        line = input()\n        if line.startswith("Simon says"):\n            print(line[11:])\nmain()\n', '\nfor i in range(int(input())):\n    line = input()\n    if line.startswith("Simon says"):\n        print(line[11:])\n', '\nn = int(input())\nfor i in range(n):\n    line = input()\n    if line.startswith("Simon says"):\n        print(line[11:])\n', '\nn = int(input())\nfor i in range(n):\n    line = input()\n    if line.startswith("Simon says"):\n        print(line[11:])\n', '\n\nn = int(input())\nfor i in range(n):\n    line = input()\n    if line.startswith("Simon says"):\n        print(line[11:]) \n', 'n = int(input())\nfor i in range(n):\n    line = input()\n    if line.startswith("Simon says"):\n        print(line[11:])\n']
2022-04-16 10:29:36.454839 size on output set 6
2022-04-16 10:29:36.454849 num operations 1
2022-04-16 10:29:36.454855 size on input set 1
2022-04-16 10:29:44.236313 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport fileinput\n\n# num_lines = int(fileinput.input()[0])\n\nfor line in fileinput.input():\n    if line[:10] == 'Simon says':\n        print(line[10:])\n"
    },
    {
      "index": 1,
      "text": "\n\nimport fileinput\n\nnum_lines = int(fileinput.input()[0].strip())\n\nfor line in fileinput.input()[:num_lines]:\n    if line.strip()[:11] == 'Simon says':\n        print(line.strip()[11:])\n"
    },
    {
      "index": 2,
      "text": "\nimport fileinput\n\nnum_lines = int(fileinput.input()[0])\n\nfor line in fileinput.input()[:num_lines]:\n    if line[:11] == 'Simon says':\n        print(line[11:])\n"
    },
    {
      "index": 3,
      "text": "import fileinput\n\nnum_lines = int(fileinput.input()[0])\n\nfor line in fileinput.input()[:num_lines]:\n    if line[:11] == 'Simon says':\n        print(line[11:])\n"
    },
    {
      "index": 4,
      "text": "\n\nimport fileinput\n\nnum_lines = int(fileinput.input()[0])\n\nfor line in fileinput.input()[:num_lines]:\n    if line[:11] == 'Simon says ':\n        print(line[11:], end='')\n"
    },
    {
      "index": 5,
      "text": "\n\nimport fileinput\n\nnum_lines = int(fileinput.input().readline())\n\nfor line in fileinput.input():\n    if line[:11] == 'Simon says':\n        print(line[11:])\n"
    },
    {
      "index": 6,
      "text": "\n\nimport fileinput\n\nnum_lines = int(fileinput.input()[0].rstrip())\n\nfor line in fileinput.input()[:num_lines]:\n    if line.rstrip()[:11] == 'Simon says':\n        print(line.rstrip()[11:])\n"
    },
    {
      "index": 7,
      "text": "\n\nimport fileinput\n\nnum_lines = int(fileinput.input()[0])\n\nfor line in fileinput.input()[:num_lines]:\n    if line[:11] == 'Simon says ':\n        print(line[11:])\n"
    },
    {
      "index": 8,
      "text": "\n\nimport sys\n\nnum_lines = int(sys.stdin.readline())\n\nfor line in sys.stdin.readlines():\n    if line[:11] == 'Simon says':\n        print(line[11:])\n"
    }
  ],
  "created": 1650104976,
  "object": "edit"
}
2022-04-16 10:29:44.236548 fix syntax errors 9 ["\n\nimport fileinput\n\n# num_lines = int(fileinput.input()[0])\n\nfor line in fileinput.input():\n    if line[:10] == 'Simon says':\n        print(line[10:])\n", "\n\nimport fileinput\n\nnum_lines = int(fileinput.input()[0].strip())\n\nfor line in fileinput.input()[:num_lines]:\n    if line.strip()[:11] == 'Simon says':\n        print(line.strip()[11:])\n", "\nimport fileinput\n\nnum_lines = int(fileinput.input()[0])\n\nfor line in fileinput.input()[:num_lines]:\n    if line[:11] == 'Simon says':\n        print(line[11:])\n", "import fileinput\n\nnum_lines = int(fileinput.input()[0])\n\nfor line in fileinput.input()[:num_lines]:\n    if line[:11] == 'Simon says':\n        print(line[11:])\n", "\n\nimport fileinput\n\nnum_lines = int(fileinput.input()[0])\n\nfor line in fileinput.input()[:num_lines]:\n    if line[:11] == 'Simon says ':\n        print(line[11:], end='')\n", "\n\nimport fileinput\n\nnum_lines = int(fileinput.input().readline())\n\nfor line in fileinput.input():\n    if line[:11] == 'Simon says':\n        print(line[11:])\n", "\n\nimport fileinput\n\nnum_lines = int(fileinput.input()[0].rstrip())\n\nfor line in fileinput.input()[:num_lines]:\n    if line.rstrip()[:11] == 'Simon says':\n        print(line.rstrip()[11:])\n", "\n\nimport fileinput\n\nnum_lines = int(fileinput.input()[0])\n\nfor line in fileinput.input()[:num_lines]:\n    if line[:11] == 'Simon says ':\n        print(line[11:])\n", "\n\nimport sys\n\nnum_lines = int(sys.stdin.readline())\n\nfor line in sys.stdin.readlines():\n    if line[:11] == 'Simon says':\n        print(line[11:])\n"]
2022-04-16 10:29:44.236579 size on output set 9
2022-04-16 10:29:44.236589 num operations 1
2022-04-16 10:29:44.236595 size on input set 1
2022-04-16 10:29:53.815980 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\nfor i in range(N):\n    command = input().split()\n    if command[0] == \"Simon\" and command[1] == \"says\" and len(command) > 2:\n        print(\" \".join(command[2:]))\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\nfor i in range(N):\n    command = input().split()\n    if command[0] == \"Simon\" and command[1] == \"says\":\n        print(\" \".join(command[2:]))\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\nfor i in range(N):\n    print(\"Simon says\" + input())\n"
    },
    {
      "index": 3,
      "text": "\nN = int(input())\nfor i in range(N):\n    command = input().split()\n    if command[0] == \"Simon\" and command[1] == \"says\":\n        print(\" \".join(command[2:]))\n"
    },
    {
      "index": 4,
      "text": "\n\n\ndef is_prime(n):\n    if n == 2 or n == 3: return True\n    if n < 2 or n%2 == 0: return False\n    if n < 9: return True\n    if n%3 == 0: return False\n    r = int(n**0.5)\n    f = 5\n    while f <= r:\n        if n%f == 0: return False\n        if n%(f+2) == 0: return False\n        f +=6\n    return True\n\n\nn = int(input())\n\nfor i in range(n):\n    x = int(input())\n    if is_prime(x):\n        print(\"Prime\")\n    else:\n        print(\"Not prime\")\n"
    },
    {
      "index": 5,
      "text": "\nN = int(input())\nfor i in range(N):\n    command = input().split()\n    if command[0] == \"Simon\" and command[1] == \"says\":\n        print(\" \".join(command[2:]))\n"
    },
    {
      "index": 6,
      "text": "N = int(input())\nfor i in range(N):\n    command = input().split()\n    if command[0] == \"Simon\" and command[1] == \"says\":\n        print(\" \".join(command[2:]))\n"
    },
    {
      "index": 7,
      "text": "\nN = int(input())\nfor i in range(N):\n    command = input().split()\n    if command[0] == \"Simon\" and command[1] == \"says\":\n        print(\" \".join(command[2:]))\n"
    },
    {
      "index": 8,
      "text": "\nN = int(input())\nfor i in range(N):\n    command = input().split()\n    if command[0] == \"Simon\" and command[1] == \"says\":\n        print(\" \".join(command[2:])) \n"
    }
  ],
  "created": 1650104984,
  "object": "edit"
}
2022-04-16 10:29:53.816224 fix syntax errors 9 ['\nN = int(input())\nfor i in range(N):\n    command = input().split()\n    if command[0] == "Simon" and command[1] == "says" and len(command) > 2:\n        print(" ".join(command[2:]))\n', '\nN = int(input())\nfor i in range(N):\n    command = input().split()\n    if command[0] == "Simon" and command[1] == "says":\n        print(" ".join(command[2:]))\n', '\nN = int(input())\nfor i in range(N):\n    print("Simon says" + input())\n', '\nN = int(input())\nfor i in range(N):\n    command = input().split()\n    if command[0] == "Simon" and command[1] == "says":\n        print(" ".join(command[2:]))\n', '\n\n\ndef is_prime(n):\n    if n == 2 or n == 3: return True\n    if n < 2 or n%2 == 0: return False\n    if n < 9: return True\n    if n%3 == 0: return False\n    r = int(n**0.5)\n    f = 5\n    while f <= r:\n        if n%f == 0: return False\n        if n%(f+2) == 0: return False\n        f +=6\n    return True\n\n\nn = int(input())\n\nfor i in range(n):\n    x = int(input())\n    if is_prime(x):\n        print("Prime")\n    else:\n        print("Not prime")\n', '\nN = int(input())\nfor i in range(N):\n    command = input().split()\n    if command[0] == "Simon" and command[1] == "says":\n        print(" ".join(command[2:]))\n', 'N = int(input())\nfor i in range(N):\n    command = input().split()\n    if command[0] == "Simon" and command[1] == "says":\n        print(" ".join(command[2:]))\n', '\nN = int(input())\nfor i in range(N):\n    command = input().split()\n    if command[0] == "Simon" and command[1] == "says":\n        print(" ".join(command[2:]))\n', '\nN = int(input())\nfor i in range(N):\n    command = input().split()\n    if command[0] == "Simon" and command[1] == "says":\n        print(" ".join(command[2:])) \n']
2022-04-16 10:29:53.816322 size on output set 6
2022-04-16 10:29:53.816334 num operations 1
2022-04-16 10:29:53.816339 size on input set 1
2022-04-16 10:30:00.816666 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\nfor _ in range(int(input())):\n    print(input()) if input().startswith('Simon says') else 0\n"
    },
    {
      "index": 1,
      "text": "\n\n\nfor _ in range(int(input())):\n    print(input()) if input().startswith(\"Simon says\") else 0\n"
    },
    {
      "index": 2,
      "text": "\ninput()\nprint(input()) if input().startswith(\"Simon says\") else 0\n"
    },
    {
      "index": 3,
      "text": "\n\nfor _ in range(int(input())):\n    if input().startswith(\"Simon says\"):\n        print(input())\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\n\nfor _ in range(int(input())):\n    print(input()) if input().startswith(\"Simon says\") else print(0)\n"
    },
    {
      "index": 5,
      "text": "import sys\n\nfor _ in range(int(input())):\n    print(input()) if input().startswith(\"Simon says\") else 0\n"
    },
    {
      "index": 6,
      "text": "def fun(x,y):\n    return x+y\n\n\nprint(fun(1,2))\n"
    },
    {
      "index": 7,
      "text": "\n\nimport sys\n\nfor _ in range(int(input())):\n    print(input()) if input().startswith(\"Simon says\") else print(0)\n"
    },
    {
      "index": 8,
      "text": "\nimport sys\n\nfor _ in range(int(input())):\n    if input().startswith(\"Simon says\"):\n        print(input())\n"
    }
  ],
  "created": 1650104993,
  "object": "edit"
}
2022-04-16 10:30:00.816928 fix syntax errors 9 ["\n\nimport sys\n\nfor _ in range(int(input())):\n    print(input()) if input().startswith('Simon says') else 0\n", '\n\n\nfor _ in range(int(input())):\n    print(input()) if input().startswith("Simon says") else 0\n', '\ninput()\nprint(input()) if input().startswith("Simon says") else 0\n', '\n\nfor _ in range(int(input())):\n    if input().startswith("Simon says"):\n        print(input())\n', '\n\nimport sys\n\nfor _ in range(int(input())):\n    print(input()) if input().startswith("Simon says") else print(0)\n', 'import sys\n\nfor _ in range(int(input())):\n    print(input()) if input().startswith("Simon says") else 0\n', 'def fun(x,y):\n    return x+y\n\n\nprint(fun(1,2))\n', '\n\nimport sys\n\nfor _ in range(int(input())):\n    print(input()) if input().startswith("Simon says") else print(0)\n', '\nimport sys\n\nfor _ in range(int(input())):\n    if input().startswith("Simon says"):\n        print(input())\n']
2022-04-16 10:30:00.816957 size on output set 8
2022-04-16 10:30:00.816969 num operations 1
2022-04-16 10:30:00.816975 size on input set 1
2022-04-16 10:30:18.497150 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\n\nfor i in range(n):\n    line = input()\n    line_list = line.split()\n\n    if len(line_list) > 2 and line_list[0] == \"Simon\" and line_list[1] == \"says\":\n        print(\" \".join(line_list[2:]))\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\n\nfor i in range(n):\n    line = input()\n    line_list = line.split()\n\n    if len(line_list) > 2 and line_list[0] == \"Simon\" and line_list[1] == \"says\": # if the line is longer than 2 words, and the first 2 words are \"Simon says\"\n        print(\" \".join(line_list[2:]))\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\n\nfor i in range(n):\n    line = input()\n    line_list = line.split()\n\n    if len(line_list) > 2 and line_list[0] == \"Simon\" and line_list[1] == \"says\":\n        print(\" \".join(line_list[2:]))\n"
    },
    {
      "index": 3,
      "text": "\nprint(\"hello world\")\n"
    },
    {
      "index": 4,
      "text": "\n\nn = int(input())\n\nfor i in range(n):\n    line = input()\n    line_list = line.split()\n\n\n\n\n\n    if len(line_list) > 2 and line_list[0] == \"Simon\" and line_list[1] == \"says\":\n        print(\" \".join(line_list[2:]))\n"
    },
    {
      "index": 5,
      "text": "\n\nn = int(input())\n\nfor i in range(n):\n    line = input()\n    line_list = line.split()\n\n    if len(line_list) > 2 and line_list[0] == \"Simon\" and line_list[1] == \"says\": # check if the line has at least 3 words, starts with \"Simon\" and the second word is \"says\"\n        print(\" \".join(line_list[2:]))\n"
    },
    {
      "index": 6,
      "text": "\nn = int(input())\n\nfor i in range(n):\n    line = input()\n    line_list = line.split()\n\n    if len(line_list) > 2 and line_list[0] == \"Simon\" and line_list[1] == \"says\":\n        print(\" \".join(line_list[2:]))\n"
    },
    {
      "index": 7,
      "text": "\nn = int(input())\n\nfor i in range(n):\n    print(input())\n"
    },
    {
      "index": 8,
      "text": "#!/usr/bin/env python\n# coding: utf-8\n\n\n# In[1]:\n\n\n# In[2]:\n\n\na = 1\n\n\n# In[3]:\n\n\nb = 2\n\n\n# In[4]:\n\n\na + b\n\n\n# In[5]:\n\n\na\n\n\n# In[6]:\n\n\nb\n\n\n# In[7]:\n\n\na = 33\n\n\n# In[8]:\n\n\na\n\n\n# In[9]:\n\n\nb\n\n\n# In[10]:\n\n\nc = a + b\n\n\n# In[11]:\n\n\nc\n\n\n# In[12]:\n\n\na = 1\n\n\n# In[13]:\n\n\nb = 2\n\n\n# In[14]:\n\n\na + b\n\n\n# In[15]:\n\n\na = 1\n\n\n# In[16]:\n\n\nb = 2\n\n\n# In[17]:\n\n\na + b\n\n\n# In[18]:\n\n\na = 1\n\n\n# In[19]:\n\n\nb = 2\n\n\n# In[20]:\n\n\na + b\n\n\n# In[21]:\n\n\na = 1\n\n\n# In[22]:\n\n\nb = 2\n\n\n# In[23]:\n\n\na + b\n\n\n# In[24]:\n\n\na = 1\n\n\n# In[25]:\n\n\nb = 2\n\n\n# In[26]:\n\n\na + b\n\n\n# In[27]:\n\n\na = 1\n\n\n# In[28]:\n\n\nb = 2\n\n\n# In[29]:\n\n\na + b\n\n\n# In[ ]:\n\n\n\n"
    }
  ],
  "created": 1650105000,
  "object": "edit"
}
2022-04-16 10:30:18.497382 fix syntax errors 9 ['\nn = int(input())\n\nfor i in range(n):\n    line = input()\n    line_list = line.split()\n\n    if len(line_list) > 2 and line_list[0] == "Simon" and line_list[1] == "says":\n        print(" ".join(line_list[2:]))\n', '\nn = int(input())\n\nfor i in range(n):\n    line = input()\n    line_list = line.split()\n\n    if len(line_list) > 2 and line_list[0] == "Simon" and line_list[1] == "says": # if the line is longer than 2 words, and the first 2 words are "Simon says"\n        print(" ".join(line_list[2:]))\n', '\nn = int(input())\n\nfor i in range(n):\n    line = input()\n    line_list = line.split()\n\n    if len(line_list) > 2 and line_list[0] == "Simon" and line_list[1] == "says":\n        print(" ".join(line_list[2:]))\n', '\nprint("hello world")\n', '\n\nn = int(input())\n\nfor i in range(n):\n    line = input()\n    line_list = line.split()\n\n\n\n\n\n    if len(line_list) > 2 and line_list[0] == "Simon" and line_list[1] == "says":\n        print(" ".join(line_list[2:]))\n', '\n\nn = int(input())\n\nfor i in range(n):\n    line = input()\n    line_list = line.split()\n\n    if len(line_list) > 2 and line_list[0] == "Simon" and line_list[1] == "says": # check if the line has at least 3 words, starts with "Simon" and the second word is "says"\n        print(" ".join(line_list[2:]))\n', '\nn = int(input())\n\nfor i in range(n):\n    line = input()\n    line_list = line.split()\n\n    if len(line_list) > 2 and line_list[0] == "Simon" and line_list[1] == "says":\n        print(" ".join(line_list[2:]))\n', '\nn = int(input())\n\nfor i in range(n):\n    print(input())\n', '#!/usr/bin/env python\n# coding: utf-8\n\n\n# In[1]:\n\n\n# In[2]:\n\n\na = 1\n\n\n# In[3]:\n\n\nb = 2\n\n\n# In[4]:\n\n\na + b\n\n\n# In[5]:\n\n\na\n\n\n# In[6]:\n\n\nb\n\n\n# In[7]:\n\n\na = 33\n\n\n# In[8]:\n\n\na\n\n\n# In[9]:\n\n\nb\n\n\n# In[10]:\n\n\nc = a + b\n\n\n# In[11]:\n\n\nc\n\n\n# In[12]:\n\n\na = 1\n\n\n# In[13]:\n\n\nb = 2\n\n\n# In[14]:\n\n\na + b\n\n\n# In[15]:\n\n\na = 1\n\n\n# In[16]:\n\n\nb = 2\n\n\n# In[17]:\n\n\na + b\n\n\n# In[18]:\n\n\na = 1\n\n\n# In[19]:\n\n\nb = 2\n\n\n# In[20]:\n\n\na + b\n\n\n# In[21]:\n\n\na = 1\n\n\n# In[22]:\n\n\nb = 2\n\n\n# In[23]:\n\n\na + b\n\n\n# In[24]:\n\n\na = 1\n\n\n# In[25]:\n\n\nb = 2\n\n\n# In[26]:\n\n\na + b\n\n\n# In[27]:\n\n\na = 1\n\n\n# In[28]:\n\n\nb = 2\n\n\n# In[29]:\n\n\na + b\n\n\n# In[ ]:\n\n\n\n']
2022-04-16 10:30:18.497425 size on output set 7
2022-04-16 10:30:18.497436 num operations 1
2022-04-16 10:30:18.497442 size on input set 1
2022-04-16 10:30:25.651620 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN = int(input())\nfor i in range(N):\n    line = input()\n    if line.startswith(\"Simon says \"):\n        print(line[11:])\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\nfor i in range(N):\n    line = input().strip()\n    if line.startswith(\"Simon says\"): print(line[11:])\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\nfor i in range(N):\n    line = input()\n    if line.startswith(\"Simon says\"):\n        print(line[11:])\n"
    },
    {
      "index": 3,
      "text": "N = int(input())\nfor i in range(N):\n    line = input()\n    if line.startswith(\"Simon says\"):\n        print(line[11:])\n"
    },
    {
      "index": 4,
      "text": "\nN = int(input())\nfor i in range(N):\n    line = input()\n    if line.startswith(\"Simon says\"):\n        print(line[11:])\n"
    },
    {
      "index": 5,
      "text": "\n\nN = int(input())\nfor i in range(N):\n    line = input()\n    if line.startswith('Simon says'):\n        print(line[11:])\n"
    },
    {
      "index": 6,
      "text": "\nN = int(input())\nfor i in range(N):\n    line = input()\n    if line.startswith(\"Simon says\"):\n        print(line[10:])\n"
    },
    {
      "index": 7,
      "text": "\n\nN = int(input().strip())\nfor i in range(N):\n    line = input().strip()\n    if line.startswith(\"Simon says\"):\n        print(line[11:])\n"
    },
    {
      "index": 8,
      "text": "\n\nN = int(input())\n<<<<<<< HEAD\nfor i in range(N):\n    line = input()\n    if line.startswith(\"Simon says\"):\n=======\n    line = raw_input()\n    if line.startswith(\"Simon says\"):\n        print(line[11:])\n>>>>>>> 6c9e0b8a1b7d4a4f44c7f2f8ed4b7d4f0e9d7e0c\n        print(line[11:])\n"
    }
  ],
  "created": 1650105018,
  "object": "edit"
}
2022-04-16 10:30:25.651856 fix syntax errors 9 ['\n\nN = int(input())\nfor i in range(N):\n    line = input()\n    if line.startswith("Simon says "):\n        print(line[11:])\n', '\nN = int(input())\nfor i in range(N):\n    line = input().strip()\n    if line.startswith("Simon says"): print(line[11:])\n', '\nN = int(input())\nfor i in range(N):\n    line = input()\n    if line.startswith("Simon says"):\n        print(line[11:])\n', 'N = int(input())\nfor i in range(N):\n    line = input()\n    if line.startswith("Simon says"):\n        print(line[11:])\n', '\nN = int(input())\nfor i in range(N):\n    line = input()\n    if line.startswith("Simon says"):\n        print(line[11:])\n', "\n\nN = int(input())\nfor i in range(N):\n    line = input()\n    if line.startswith('Simon says'):\n        print(line[11:])\n", '\nN = int(input())\nfor i in range(N):\n    line = input()\n    if line.startswith("Simon says"):\n        print(line[10:])\n', '\n\nN = int(input().strip())\nfor i in range(N):\n    line = input().strip()\n    if line.startswith("Simon says"):\n        print(line[11:])\n', '\n\nN = int(input())\n<<<<<<< HEAD\nfor i in range(N):\n    line = input()\n    if line.startswith("Simon says"):\n=======\n    line = raw_input()\n    if line.startswith("Simon says"):\n        print(line[11:])\n>>>>>>> 6c9e0b8a1b7d4a4f44c7f2f8ed4b7d4f0e9d7e0c\n        print(line[11:])\n']
2022-04-16 10:30:25.651890 size on output set 8
