["\n\ndef main():\n    a, b, k = map(int, input().split())\n    x = list(range(a, b+1))\n    x = sorted(x)\n    print(*x[:k])\n    print(*x[-k:])\n\nif __name__ == '__main__':\n    main()\n", "\nimport heapq\nimport sys\n\n# a, b, k = map(int, input().split())\n\n# h = []\n# for i in range(a, b+1):\n#     heapq.heappush(h, i)\n\n# for i in range(k):\n#     print(heapq.heappop(h))\n\n# for i in range(k):\n#     print(heapq.heappop(h[::-1]))\n\na, b, k = map(int, sys.stdin.readline().split())\n\nh = [i for i in range(a, b+1)]\n\nheapq.heapify(h)\n\nfor i in range(k-1):\n    heapq.heappop(h)\n\nprint(heapq.heappop(h))\n", "\nimport heapq\n\na, b, k = map(int, input().split())\n\nh = []\nfor i in range(a, b+1):\n    heapq.heappush(h, i)\n\nfor i in range(k):\n    print(heapq.heappop(h))\n\nfor i in range(k):\n    print(heapq.heappop(h[::-1]))\n", "\n\ndef main():\n    a, b, k = map(int, input().split())\n    x = sorted(range(a, b+1))\n    print(*x[:k], sep=\"\\n\")\n    print(*x[-k:], sep=\"\\n\")\n\nif __name__ == '__main__':\n    main()\n", "\nimport heapq\n\na, b, k = map(int, input().split())\n\nh = []\nfor i in range(a, b + 1):\n    heapq.heappush(h, i)\n\nfor i in range(k):\n    print(heapq.heappop(h))\n\nfor i in range(k):\n    print(heapq.heappop(h[::-1]))\n", "\n\ndef main():\n    a, b, k = map(int, input().split())\n    x = range(a, b + 1)\n    x = sorted(x)\n    print(*x[:k])\n    print(*x[-k:])\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    a, b, k = map(int, input().split())\n    y = range(a, b+1)\n    y = sorted(y)\n    print(*y[:k])\n    print(*y[-k:])\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    a, b, k = map(int, input().split())\n    x = range(a, b + 1)\n    x = sorted(x)\n    print(*x[:k])\n    print(*x[-k:])\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport heapq\n\na, b, k = map(int, input().split())\n\nh = []\nfor i in range(a, b+1):\n    heapq.heappush(h, i)\n\nfor i in range(k):\n    print(heapq.heappop(h))\n", "import heapq\n\na, b, k = map(int, input().split())\n\nh = []\nfor i in range(a, b + 1):\n    heapq.heappush(h, i)\n\nfor i in range(k):\n    print(heapq.heappop(h))\n\nfor i in range(k):\n    print(heapq.heappop(h[::-1]))\n", "\n# \u30d2\u30fc\u30d7\nimport heapq\na, b, k = map(int, input().split())\nh = []\nfor i in range(a, b+1):\n    heapq.heappush(h, i)\n\nfor i in range(k):\n    print(heapq.heappop(h))\nfor i in range(k):\n    print(heapq.heappop(h[::-1]))\n", "import heapq\n\na, b, k = map(int, input().split())\n\nh = []\nfor i in range(a, b+1):\n    heapq.heappush(h, i)\n\nfor i in range(k):\n    print(heapq.heappop(h))\n\nfor i in range(k):\n\n    print(heapq.heappop(h[::-1]))\n", "\n\ndef main():\n    a, b, k = map(int, input().split())\n    x = sorted(range(a, b+1))\n    print(*x[:k])\n    print(*x[-k:])\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport heapq\n\na, b, k = map(int, input().split())\n\nh = []\nfor i in range(a, b + 1):\n    heapq.heappush(h, i)\n\nfor i in range(k):\n    print(heapq.heappop(h))\n\nfor i in range(k):\n    print(heapq.heappop(h[::-1])[::-1])\n", "\n\ndef main():\n    a, b, k = map(int, input().split())\n    x = sorted(range(a, b+1))\n    print(*x[:k], *x[-k:])\n\nif __name__ == '__main__':\n    main()\n", "\nimport heapq\n\na, b, k = map(int, input().split())\n\nh = []\nfor i in range(a, b+1):\n    heapq.heappush(h, i)\n\nfor i in range(k):\n    print(heapq.heappop(h))\n\nfor i in range(k-1, -1, -1):\n    print(h[i])\n"]