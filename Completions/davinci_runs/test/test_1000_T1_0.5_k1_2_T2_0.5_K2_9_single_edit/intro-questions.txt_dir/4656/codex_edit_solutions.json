["\n\ndef main():\n    pass\n\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n# SOLUTION\n# For each letter, find the largest substring that contains that letter and is K-beautiful\n# The answer is the max of these lengths\n\n# Time: O(n^2)\n# Space: O(1)\n\ndef get_beautiful_substring(s, k):\n    if len(s) == 1:\n        return len(s)\n    if len(set(s)) == 1:\n        return len(s)\n    max_len = 1\n    for i in range(len(s)):\n        for j in range(len(s)-1, i, -1):\n            if len(set(s[i:j+1])) == 1:\n                if (j-i+1)%k == 0:\n                    max_len = max(j-i+1, max_len)\n    return max_len\n\nT = int(input())\nfor _ in range(T):\n    n, k = map(int, input().split())\n    s = input()\n    print(get_beautiful_substring(s, k))\n", "\n\n# SOLUTION\n# For each letter, find the largest substring that contains that letter and is K-beautiful.\n# The answer is the max of these lengths\n\n# Time: O(n^2)\n# Space: O(1)\n\ndef get_beautiful_substring(s, k):\n    max_len = 0\n    for i in range(len(s)):\n        for j in range(len(s)-1, i, -1):\n            if len(set(s[i:j+1])) == 1:\n                if (j-i+1)%k == 0:\n                    max_len = max(j-i+1, max_len)\n    return max_len\n\nT = int(input())\nfor _ in range(T):\n    n, k = map(int, input().split())\n    s = input()\n    print(get_beautiful_substring(s, k))\n", "\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport os\n\n\ndef get_file_names(directory):\n    file_names = os.listdir(directory)\n    print(file_names)\n\n\n\ndef main():\n    directory = \"./supplier-data/descriptions/\"\n    get_file_names(directory)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n\ndef main():\n    print(\"Hello World\")\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n#\n# SOLUTION\n# For each letter, find the largest substring that contains that letter and is K-beautiful\n# The answer is the max of these lengths\n\n# Time: O(n^2)\n# Space: O(1)\n\ndef get_beautiful_substring(s, k):\n    if len(s) == 1:\n        return len(s)\n    if len(set(s)) == 1:\n        return len(s)\n    max_len = 1\n    for i in range(len(s)):\n        for j in range(len(s)-1, i, -1):\n            if len(set(s[i:j+1])) == 1:\n                if (j-i+1)%k == 0:\n                    max_len = max(j-i+1, max_len)\n    return max_len\n\nT = int(input())\nfor _ in range(T):\n    n, k = map(int, input().split())\n    s = input()\n    print(get_beautiful_substring(s, k))\n", "\n\n# def get_beautiful_substring(s, k):\n#     if len(s) == 1:\n#         return len(s)\n#     if len(set(s)) == 1:\n#         return len(s)\n#     max_len = 1\n#     for i in range(len(s)):\n#         for j in range(len(s)-1, i, -1):\n#             if len(set(s[i:j+1])) == 1:\n#                 if (j-i+1)%k == 0:\n#                     max_len = max(j-i+1, max_len)\n#     return max_len\n#\n# T = int(input())\n# for _ in range(T):\n#     n, k = map(int, input().split())\n#     s = input()\n#     print(get_beautiful_substring(s, k))\n", "\n\n\n\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n", "#!/bin/python3\n\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n# Complete the aVeryBigSum function below.\ndef aVeryBigSum(ar):\n    return sum(ar)\n\n\nif __name__ == '__main__':\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n\n    ar_count = int(input())\n\n    ar = list(map(int, input().rstrip().split()))\n\n    result = aVeryBigSum(ar)\n\n    fptr.write(str(result) + '\\n')\n\n    fptr.close()\n", "import os\n\n\ndef main():\n    path = \".\"\n    for root, dirs, files in os.walk(path):\n        for f in files:\n            print(f)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n\n\ndef main():\n\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# # SOLUTION\n# # For each letter, find the largest substring that contains that letter and is K-beautiful\n# # The answer is the max of these lengths\n\n# Time: O(n^2)\n# Space: O(1)\n\ndef get_beautiful_substring(s, k):\n    if len(s) == 1:\n        return len(s)\n    if len(set(s)) == 1:\n        return len(s)\n    max_len = 1\n    for i in range(len(s)):\n        for j in range(len(s)-1, i, -1):\n            if len(set(s[i:j+1])) == 1:\n                if (j-i+1)%k == 0:\n                    max_len = max(j-i+1, max_len)\n    return max_len\n\nT = int(input())\nfor _ in range(T):\n    n, k = map(int, input().split())\n    s = input()\n    print(get_beautiful_substring(s, k))\n", "\n# SOLUTION\n", "\n#!/usr/bin/python3\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n"]