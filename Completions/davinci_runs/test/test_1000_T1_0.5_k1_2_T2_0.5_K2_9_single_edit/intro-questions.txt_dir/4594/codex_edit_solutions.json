["# coding: utf-8\n\nn = int(input())\n\n# d_list = []\n# for i in range(n):\n#     d_list.append(int(input()))\n\n# d_set = set(d_list)\n\n# print(len(d_set))\n\nprint(len(set([int(input()) for i in range(n)])))\n", "# -*- coding: utf-8 -*-\n\nn = int(input())\n\nd_list = []\nfor i in range(n):\n    d_list.append(int(input()))\n\nd_set = set(d_list)\n\nprint(len(d_set))\n", "n = int(input())\n\nd_list = []\nfor i in range(n):\n    d_list.append(int(input()))\n\nd_set = set(d_list)\n\nprint(len(d_set))\n", "\nimport sys\n\nN = int(sys.stdin.readline())\nd_list = []\nfor i in range(N):\n    d_list.append(int(sys.stdin.readline()))\nd_list_set = set(d_list)\nprint(len(d_list_set))\n", "\nn = int(input())\n\nd_list = []\nfor i in range(n):\n    d_list.append(int(input()))\n\nd_set = set(d_list)\n\nprint(len(d_set))\n", "import sys\n\nN = int(sys.stdin.readline())\nd_list = set()\nfor i in range(N):\n    d_list.add(int(sys.stdin.readline()))\nprint(len(d_list))\n", "\n\nimport sys\n\nN = int(input())\nd_list = []\nfor i in range(N):\n    d_list.append(int(input()))\nd_list = set(d_list)\nprint(len(d_list))\n", "\nimport sys\n\nN = int(sys.stdin.readline())\nd_list = []\nfor i in range(N):\n    d_list.append(int(sys.stdin.readline()))\nd_list = set(d_list)\nprint(len(d_list))\n", "\n\nn = int(input())  # \u5165\u529b\n\nd_list = []\nfor i in range(n):  # \u5165\u529b\n    d_list.append(int(input()))\n\nd_set = set(d_list)  # set\u3092\u4f5c\u6210\n\nprint(len(d_set))  # \u51fa\u529b\n", "import sys\n\nN = int(sys.stdin.readline())\nd_list = []\nfor i in range(N):\n    d_list.append(int(sys.stdin.readline()))\nd_list = set(d_list)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprint(len(d_list))\n", "\nimport sys\n\nn = int(input())\n\nd_list = []\nfor i in range(n):\n    d_list.append(int(input()))\n\nd_set = set(d_list)\n\nprint(len(d_set))\n", "import sys\nsys.setrecursionlimit(10**9)\ninput = sys.stdin.readline\n\nn = int(input())\n\ng = [[] for _ in range(n)]\nfor _ in range(n-1):\n    a, b = map(int, input().split())\n    g[a-1].append(b-1)\n    g[b-1].append(a-1)\n\nans = 0\ndef dfs(v, p):\n    global ans\n    cnt = 0\n    for v2 in g[v]:\n        if v2 == p:\n            continue\n        cnt += dfs(v2, v)\n    if cnt % 2 == 0:\n        ans += 1\n        return 0\n    else:\n        return 1\n\ndfs(0, -1)\nprint(ans)\n"]