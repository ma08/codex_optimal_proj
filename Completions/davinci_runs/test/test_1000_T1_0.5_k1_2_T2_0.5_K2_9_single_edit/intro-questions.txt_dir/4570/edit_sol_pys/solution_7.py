
import sys
# N, A, B = map(int, sys.stdin.readline().split())
#
# if N * A < B:
#     print(N * A)
# else:
#     print(B)

# N, A, B = map(int, sys.stdin.readline().split())
#
# print(min(N * A, B))

import sys
from collections import deque

H, W = map(int, sys.stdin.readline().split())

c = [list(map(int, sys.stdin.readline().split())) for _ in range(10)]

A = [list(map(int, sys.stdin.readline().split())) for _ in range(H)]

ans = 0

for k in range(10):
    for i in range(10):
        for j in range(10):
            c[i][j] = min(c[i][j], c[i][k] + c[k][j])

for i in range(H):
    for j in range(W):
        if A[i][j] == -1:
            continue
        ans += c[A[i][j]][1]

print(ans)


















































































































































































































































































































































































































































































































































































































































































































































































































































































N, A, B = map(int, sys.stdin.readline().split())

if N * A < B:
    print(N * A)
else:
    print(B)
