["\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0)) \n", "\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n", "\nimport math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef minPowerStrips(a, b):\n    return math.ceil(b / a)\n\ndef main():\n    line = input().split()\n    a = int(line[0])\n    b = int(line[1])\n    print(minPowerStrips(a, b))\n\nif __name__ == '__main__':\n    main()\n", "import math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B/A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport math\n\ndef minPowerStrips(A, B):\n    return int(math.ceil(B / A))\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(A * B)\n", "import sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n", "\n\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())  # \uacf5\ubc31 \uae30\uc900\uc73c\ub85c \uad6c\ubd84\ud558\uc5ec \uc785\ub825 \ubc1b\uae30\nprint(B // A + (B % A != 0))  # \ubaab + \ub098\uba38\uc9c0\uac00 \uc788\uc73c\uba74 1 \ucd94\uac00\n", "\n\nimport math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A) \n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main() \n", "import math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n", "print('Hello World')\n", "\nimport math\n\ndef minPowerStrips(A, B):\n    return math.ceil(B/A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n", "# -*- coding: utf-8 -*-\n\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n", "\n\nimport sys\n\na, b = map(int, sys.stdin.readline().rstrip().split())\nprint(b // a + (b % a != 0))\n", "\n\n# import sys\n\n# A, B = map(int, sys.stdin.readline().rstrip().split())\n# print(B // A + (B % A != 0))\n"]