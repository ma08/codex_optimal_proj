2022-04-09 18:58:42.310389 """
There are N+1 towns. The i-th town is being attacked by A_i monsters.
We have N heroes. The i-th hero can defeat monsters attacking the i-th or (i+1)-th town, for a total of at most B_i monsters.
What is the maximum total number of monsters the heroes can cooperate to defeat?

-----Constraints-----
 - All values in input are integers.
 - 1 \leq N \leq 10^5
 - 1 \leq A_i \leq 10^9
 - 1 \leq B_i \leq 10^9

-----Input-----
Input is given from Standard Input in the following format:
N
A_1 A_2 ... A_{N+1}
B_1 B_2 ... B_N

-----Output-----
Print the maximum total number of monsters the heroes can defeat.

-----Sample Input-----
2
3 5 2
4 5

-----Sample Output-----
9

If the heroes choose the monsters to defeat as follows, they can defeat nine monsters in total, which is the maximum result.
 - The first hero defeats two monsters attacking the first town and two monsters attacking the second town.
 - The second hero defeats three monsters attacking the second town and two monsters attacking the third town.
"""
2022-04-09 18:58:42.310406 --------------------------
2022-04-09 18:58:56.224106 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    A = [int(x) for x in sys.stdin.readline().split(' ')]\n    B = [int(x) for x in sys.stdin.readline().split(' ')]\n\n    # For each hero, we want to find the maximum number of monsters he/she can defeat.\n    # We can do this by taking the minimum of the number of monsters attacking the town\n    # they are in charge of and the number of monsters attacking the town to the right.\n    # We then add the number of monsters the hero can defeat to our answer.\n    answer = 0\n    for i in range(N):\n        answer += min(A[i], B[i])\n        answer += min(A[i+1], B[i])\n\n    print(answer)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(sum(min(a[i], b[i]) for i in range(n)) + min(a[n], b[n-1]))\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1649545122,
  "id": "cmpl-4vEKQdapd1gqy5f3bwdeIfho40LXQ",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 18:58:56.224383 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline())\n    A = [int(x) for x in sys.stdin.readline().split(' ')]\n    B = [int(x) for x in sys.stdin.readline().split(' ')]\n\n    # For each hero, we want to find the maximum number of monsters he/she can defeat.\n    # We can do this by taking the minimum of the number of monsters attacking the town\n    # they are in charge of and the number of monsters attacking the town to the right.\n    # We then add the number of monsters the hero can defeat to our answer.\n    answer = 0\n    for i in range(N):\n        answer += min(A[i], B[i])\n        answer += min(A[i+1], B[i])\n\n    print(answer)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 18:58:56.224445 REASON stop
2022-04-09 18:58:56.258126 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(sum(min(a[i], b[i]) for i in range(n)) + min(a[n], b[n-1]))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 18:58:56.258213 REASON stop
