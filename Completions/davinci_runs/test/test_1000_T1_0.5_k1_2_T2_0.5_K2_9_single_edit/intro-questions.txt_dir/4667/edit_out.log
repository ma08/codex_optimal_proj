2022-04-16 09:01:52.863784 num operations 1
2022-04-16 09:01:52.863804 size on input set 1
2022-04-16 09:02:03.379339 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"
    },
    {
      "index": 6,
      "text": "\nimport re\ndef get_ip_addresses(input_string):\n    # your code here\n    return re.findall(r'\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}', input_string)\n"
    },
    {
      "index": 7,
      "text": "\n\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"
    },
    {
      "index": 8,
      "text": "\n\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    return len(node.attrib) + sum(get_attr_number(child) for child in node)\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"
    }
  ],
  "created": 1650099713,
  "object": "edit"
}
2022-04-16 09:02:03.379706 fix syntax errors 9 ["\nimport sys\n\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n", "\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n", "\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n", "\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n", "\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n", "\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n", "\nimport re\ndef get_ip_addresses(input_string):\n    # your code here\n    return re.findall(r'\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}', input_string)\n", "\n\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    return len(node.attrib) + sum([get_attr_number(child) for child in node])\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n", "\n\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    return len(node.attrib) + sum(get_attr_number(child) for child in node)\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"]
2022-04-16 09:02:03.379772 size on output set 6
2022-04-16 09:02:03.379788 num operations 1
2022-04-16 09:02:03.379797 size on input set 1
2022-04-16 09:02:10.263946 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print get_attr_number(root)\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    count = 0\n    for child in node:\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print get_attr_number(root)\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count = get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print get_attr_number(root)\n"
    },
    {
      "index": 5,
      "text": "\n\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"
    },
    {
      "index": 6,
      "text": "import sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"
    },
    {
      "index": 7,
      "text": "\n\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n"
    },
    {
      "index": 8,
      "text": "import sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print get_attr_number(root)\n"
    }
  ],
  "created": 1650099723,
  "object": "edit"
}
2022-04-16 09:02:10.264305 fix syntax errors 9 ["\n\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n", "\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print get_attr_number(root)\n", "\n\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    count = 0\n    for child in node:\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print get_attr_number(root)\n", "\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count = get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n", "\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print get_attr_number(root)\n", "\n\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n", "import sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n", "\n\nimport sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    # your code goes here\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print(get_attr_number(root))\n", "import sys\nimport xml.etree.ElementTree as etree\n\ndef get_attr_number(node):\n    count = 0\n    for child in node.getchildren():\n        count += len(child.attrib)\n        count += get_attr_number(child)\n    return count\n\nif __name__ == '__main__':\n    sys.stdin.readline()\n    xml = sys.stdin.read()\n    tree = etree.ElementTree(etree.fromstring(xml))\n    root = tree.getroot()\n    print get_attr_number(root)\n"]
2022-04-16 09:02:10.264358 size on output set 6
