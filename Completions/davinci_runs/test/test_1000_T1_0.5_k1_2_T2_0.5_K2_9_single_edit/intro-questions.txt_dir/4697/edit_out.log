2022-04-16 09:15:34.023968 num operations 1
2022-04-16 09:15:34.023986 size on input set 1
2022-04-16 09:15:47.780841 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    \"\"\"\n    n: the number of S-shaped pieces\n    m: the number of c-shaped pieces\n    \"\"\"\n    n, m = map(int, input().split())\n    print(min(m // 2, n))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    \"\"\"\n    n: the number of S-shaped pieces\n    m: the number of c-shaped pieces\n    \"\"\"\n    n, m = map(int, input().split())\n    # n: the number of S-shaped pieces\n    # m: the number of c-shaped pieces\n\n    # c = (m - 2 * n) / 2\n    # s = n - c\n    # print(int(s + c))\n    # if m < 2 * n:\n    #     print(0)\n    # else:\n    #     if (m - 2 * n) % 2 == 0:\n    #         print((m - 2 * n) // 2 + n)\n    #     else:\n    #         print((m - 2 * n) // 2 + n - 1)\n\n    # if m < 2 * n:\n    #     print(0)\n    # else:\n    #     print(min(m - 2 * n + n, n))\n    print(min(m // 2, n))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    \"\"\"\n    n: the number of S-shaped pieces\n    m: the number of c-shaped pieces\n    \"\"\"\n    n, m = map(int, input().split())\n    print(min(m // 2, n))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\ndef main():\n    \"\"\"\n    n: the number of S-shaped pieces\n    m: the number of c-shaped pieces\n    \"\"\"\n    n, m = map(int, input().split())\n    # n: the number of S-shaped pieces\n    # m: the number of c-shaped pieces\n    # c = (m - 2 * n) / 2\n    # s = n - c\n    # print(int(s + c))\n\n    # c = (m - 2 * n) / 2\n    # s = n - c\n    # print(int(s + c))\n    # if m < 2 * n:\n    #     print(0)\n    # else:\n    #     if (m - 2 * n) % 2 == 0:\n    #         print((m - 2 * n) // 2 + n)\n    #     else:\n    #         print((m - 2 * n) // 2 + n - 1)\n\n    # if m < 2 * n:\n    #     print(0)\n    # else:\n    #     print(min(m - 2 * n + n, n))\n    print(min(m // 2, n))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\n\nimport sys\n\ndef main():\n    \"\"\"\n    n: the number of S-shaped pieces\n    m: the number of c-shaped pieces\n    \"\"\"\n    n, m = map(int, input().split())\n    # n: the number of S-shaped pieces\n    # m: the number of c-shaped pieces\n    # c = (m - 2 * n) / 2\n    # s = n - c\n    # print(int(s + c))\n\n    # c = (m - 2 * n) / 2\n    # s = n - c\n    # print(int(s + c))\n    # if m < 2 * n:\n    #     print(0)\n    # else:\n    #     if (m - 2 * n) % 2 == 0:\n    #         print((m - 2 * n) // 2 + n)\n    #     else:\n    #         print((m - 2 * n) // 2 + n - 1)\n\n    # if m < 2 * n:\n    #     print(0)\n    # else:\n    #     print(min(m - 2 * n + n, n))\n    print(min(m // 2, n))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef main():\n    s = input()\n    t = input()\n    print(s + \"@\" + t)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "def main():\n    \"\"\"\n    n: the number of S-shaped pieces\n    m: the number of c-shaped pieces\n    \"\"\"\n    n, m = map(int, input().split())\n    # n: the number of S-shaped pieces\n    # m: the number of c-shaped pieces\n    # c = (m - 2 * n) / 2\n    # s = n - c\n    # print(int(s + c))\n\n    # c = (m - 2 * n) / 2\n    # s = n - c\n    # print(int(s + c))\n    # if m < 2 * n:\n    #     print(0)\n    # else:\n    #     if (m - 2 * n) % 2 == 0:\n    #         print((m - 2 * n) // 2 + n)\n    #     else:\n    #         print((m - 2 * n) // 2 + n - 1)\n\n    # if m < 2 * n:\n    #     print(0)\n    # else:\n    #     print(min(m - 2 * n + n, n))\n    print(min(m // 2, n))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nimport math\nimport sys\n\ndef main():\n    \"\"\"\n    n: the number of S-shaped pieces\n    m: the number of c-shaped pieces\n    \"\"\"\n    n, m = map(int, sys.stdin.readline().split())\n    # n: the number of S-shaped pieces\n    # m: the number of c-shaped pieces\n    # c = (m - 2 * n) / 2\n    # s = n - c\n    # print(int(s + c))\n\n    # c = (m - 2 * n) / 2\n    # s = n - c\n    # print(int(s + c))\n    # if m < 2 * n:\n    #     print(0)\n    # else:\n    #     if (m - 2 * n) % 2 == 0:\n    #         print((m - 2 * n) // 2 + n)\n    #     else:\n    #         print((m - 2 * n) // 2 + n - 1)\n\n    # if m < 2 * n:\n    #     print(0)\n    # else:\n    #     print(min(m - 2 * n + n, n))\n    print(math.floor(min(m / 2, n)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "\nimport sys\n\ndef main():\n    \"\"\"\n    n: the number of S-shaped pieces\n    m: the number of c-shaped pieces\n    \"\"\"\n    n, m = map(int, input().split())\n    # n: the number of S-shaped pieces\n    # m: the number of c-shaped pieces\n    print(min(m // 2, n))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650100534,
  "object": "edit"
}
2022-04-16 09:15:47.781182 fix syntax errors 9 ['\n\nimport sys\n\ndef main():\n    """\n    n: the number of S-shaped pieces\n    m: the number of c-shaped pieces\n    """\n    n, m = map(int, input().split())\n    print(min(m // 2, n))\n\nif __name__ == \'__main__\':\n    main()\n', '\n\nimport sys\n\ndef main():\n    """\n    n: the number of S-shaped pieces\n    m: the number of c-shaped pieces\n    """\n    n, m = map(int, input().split())\n    # n: the number of S-shaped pieces\n    # m: the number of c-shaped pieces\n\n    # c = (m - 2 * n) / 2\n    # s = n - c\n    # print(int(s + c))\n    # if m < 2 * n:\n    #     print(0)\n    # else:\n    #     if (m - 2 * n) % 2 == 0:\n    #         print((m - 2 * n) // 2 + n)\n    #     else:\n    #         print((m - 2 * n) // 2 + n - 1)\n\n    # if m < 2 * n:\n    #     print(0)\n    # else:\n    #     print(min(m - 2 * n + n, n))\n    print(min(m // 2, n))\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    """\n    n: the number of S-shaped pieces\n    m: the number of c-shaped pieces\n    """\n    n, m = map(int, input().split())\n    print(min(m // 2, n))\n\nif __name__ == \'__main__\':\n    main()\n', '\ndef main():\n    """\n    n: the number of S-shaped pieces\n    m: the number of c-shaped pieces\n    """\n    n, m = map(int, input().split())\n    # n: the number of S-shaped pieces\n    # m: the number of c-shaped pieces\n    # c = (m - 2 * n) / 2\n    # s = n - c\n    # print(int(s + c))\n\n    # c = (m - 2 * n) / 2\n    # s = n - c\n    # print(int(s + c))\n    # if m < 2 * n:\n    #     print(0)\n    # else:\n    #     if (m - 2 * n) % 2 == 0:\n    #         print((m - 2 * n) // 2 + n)\n    #     else:\n    #         print((m - 2 * n) // 2 + n - 1)\n\n    # if m < 2 * n:\n    #     print(0)\n    # else:\n    #     print(min(m - 2 * n + n, n))\n    print(min(m // 2, n))\n\nif __name__ == \'__main__\':\n    main()\n', '\n\n\nimport sys\n\ndef main():\n    """\n    n: the number of S-shaped pieces\n    m: the number of c-shaped pieces\n    """\n    n, m = map(int, input().split())\n    # n: the number of S-shaped pieces\n    # m: the number of c-shaped pieces\n    # c = (m - 2 * n) / 2\n    # s = n - c\n    # print(int(s + c))\n\n    # c = (m - 2 * n) / 2\n    # s = n - c\n    # print(int(s + c))\n    # if m < 2 * n:\n    #     print(0)\n    # else:\n    #     if (m - 2 * n) % 2 == 0:\n    #         print((m - 2 * n) // 2 + n)\n    #     else:\n    #         print((m - 2 * n) // 2 + n - 1)\n\n    # if m < 2 * n:\n    #     print(0)\n    # else:\n    #     print(min(m - 2 * n + n, n))\n    print(min(m // 2, n))\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    s = input()\n    t = input()\n    print(s + "@" + t)\n\nif __name__ == \'__main__\':\n    main()\n', 'def main():\n    """\n    n: the number of S-shaped pieces\n    m: the number of c-shaped pieces\n    """\n    n, m = map(int, input().split())\n    # n: the number of S-shaped pieces\n    # m: the number of c-shaped pieces\n    # c = (m - 2 * n) / 2\n    # s = n - c\n    # print(int(s + c))\n\n    # c = (m - 2 * n) / 2\n    # s = n - c\n    # print(int(s + c))\n    # if m < 2 * n:\n    #     print(0)\n    # else:\n    #     if (m - 2 * n) % 2 == 0:\n    #         print((m - 2 * n) // 2 + n)\n    #     else:\n    #         print((m - 2 * n) // 2 + n - 1)\n\n    # if m < 2 * n:\n    #     print(0)\n    # else:\n    #     print(min(m - 2 * n + n, n))\n    print(min(m // 2, n))\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport math\nimport sys\n\ndef main():\n    """\n    n: the number of S-shaped pieces\n    m: the number of c-shaped pieces\n    """\n    n, m = map(int, sys.stdin.readline().split())\n    # n: the number of S-shaped pieces\n    # m: the number of c-shaped pieces\n    # c = (m - 2 * n) / 2\n    # s = n - c\n    # print(int(s + c))\n\n    # c = (m - 2 * n) / 2\n    # s = n - c\n    # print(int(s + c))\n    # if m < 2 * n:\n    #     print(0)\n    # else:\n    #     if (m - 2 * n) % 2 == 0:\n    #         print((m - 2 * n) // 2 + n)\n    #     else:\n    #         print((m - 2 * n) // 2 + n - 1)\n\n    # if m < 2 * n:\n    #     print(0)\n    # else:\n    #     print(min(m - 2 * n + n, n))\n    print(math.floor(min(m / 2, n)))\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    """\n    n: the number of S-shaped pieces\n    m: the number of c-shaped pieces\n    """\n    n, m = map(int, input().split())\n    # n: the number of S-shaped pieces\n    # m: the number of c-shaped pieces\n    print(min(m // 2, n))\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-16 09:15:47.781310 size on output set 9
2022-04-16 09:15:47.781327 num operations 1
2022-04-16 09:15:47.781332 size on input set 1
2022-04-16 09:15:59.420859 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n, m = map(int, input().split())\n\nans = 0\n\nif n == 0:\n    ans = m // 3\n    m %= 3\n    if m == 1:\n        ans += 1\nelif n == 1:\n    ans = m // 3\n    m %= 3\n    if m == 2:\n        ans += 1\nelse:\n    ans = m // 3\n    m %= 3\n    if m == 1:\n        ans += 1\n    if n > m:\n        ans += m\n    else:\n        ans += n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\nn, m = map(int, input().split())\nans = 0\n\nif n == 0:\n    ans = m // 3\n    m %= 3\n    if m == 1:\n        ans += 1\nelif n == 1:\n    ans = m // 3\n    m %= 3\n    if m == 2:\n        ans += 1\nelse:\n    ans = m // 3\n    m %= 3\n    if m == 1:\n        ans += 1\n    if n > m:\n        ans += m\n    else:\n        ans += n\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\nn, m = map(int, input().split())\nans = 0\n\nif n == 0:\n    ans = m // 3\n    m %= 3\n    if m == 1:\n        ans += 1\nelif n == 1:\n    ans = m // 3\n    m %= 3\n    if m == 2:\n        ans += 1\nelse:\n    ans = m // 3\n    m %= 3\n    if m == 1:\n        ans += 1\n    if n > m:\n        ans += m\n    else:\n        ans += n\nprint(ans)\n"
    },
    {
      "index": 3,
      "text": "\nn, m = map(int, input().split())\nans = 0\n\nif n == 0:\n    ans = m // 3\n    m %= 3\n    if m == 1:\n        ans += 1\nelif n == 1:\n    ans = m // 3\n    m %= 3\n    if m == 2:\n        ans += 1\nelse:\n    ans = m // 3\n    m %= 3\n    if m == 1:\n        ans += 1\n    if n > m:\n        ans += m\n    else:\n        ans += n\nprint(ans)\n"
    },
    {
      "index": 4,
      "text": "\nn, m = map(int, input().split())\nans = 0\n\nif n == 0:\n    ans = m // 3\n    m %= 3\n    if m == 1:\n        ans += 1\nelif n == 1:\n    ans = m // 3\n    m %= 3\n    if m == 2:\n        ans += 1\nelse:\n    ans = m // 3\n    m %= 3\n    if m == 1:\n        ans += 1\n    if n > m:\n        ans += m\n    else:\n        ans += n\nprint(ans)\n"
    },
    {
      "index": 5,
      "text": "\n\nn, m = map(int, input().split())\n\nans = 0\n\nif n == 0:\n    ans = m // 3\n    if m % 3 == 1:\n        ans += 1\nelif n == 1:\n    ans = m // 3\n    if m % 3 == 2:\n        ans += 1\nelse:\n    ans = m // 3\n    if m % 3 == 1:\n        ans += 1\n    if n > m:\n        ans += m\n    else:\n        ans += n\nprint(ans)\n"
    },
    {
      "index": 6,
      "text": "\nn, m = map(int, input().split())\n\nans = 0\n\nif n == 0:\n    ans = m // 3\n    m %= 3\n    if m == 1:\n        ans += 1\nelif n == 1:\n    ans = m // 3\n    m %= 3\n    if m == 2:\n        ans += 1\nelse:\n    ans = m // 3\n    m %= 3\n    if m == 1:\n        ans += 1\n    if n > m:\n        ans += m\n    else:\n        ans += n\nprint(ans)\n"
    },
    {
      "index": 7,
      "text": "import math\n\n\ndef divisor(n):\n    divisors = []\n    for i in range(1, int(n**0.5)+1):\n        if n % i == 0:\n            divisors.append(i)\n            if i != n // i:\n                divisors.append(n//i)\n    divisors.sort()\n    return divisors\n\n\nn = int(input())\n\ndivisors = divisor(n)\n\nif len(divisors) % 2 == 0:\n    print(divisors[len(divisors) // 2 - 1])\nelse:\n    print(divisors[len(divisors) // 2])\n"
    },
    {
      "index": 8,
      "text": "\n\nn, m = map(int, input().split())\n\nans = 0\n\nif n == 0:\n    ans = m // 3\n    m %= 3\n    ans += m\nelif n == 1:\n    ans = m // 3\n    m %= 3\n    ans += m\nelse:\n    ans = m // 3\n    m %= 3\n    ans += m\n    if n > m:\n        ans += m\n    else:\n        ans += n\nprint(ans)\n"
    }
  ],
  "created": 1650100547,
  "object": "edit"
}
2022-04-16 09:15:59.421115 fix syntax errors 9 ['n, m = map(int, input().split())\n\nans = 0\n\nif n == 0:\n    ans = m // 3\n    m %= 3\n    if m == 1:\n        ans += 1\nelif n == 1:\n    ans = m // 3\n    m %= 3\n    if m == 2:\n        ans += 1\nelse:\n    ans = m // 3\n    m %= 3\n    if m == 1:\n        ans += 1\n    if n > m:\n        ans += m\n    else:\n        ans += n\nprint(ans)\n', '\nn, m = map(int, input().split())\nans = 0\n\nif n == 0:\n    ans = m // 3\n    m %= 3\n    if m == 1:\n        ans += 1\nelif n == 1:\n    ans = m // 3\n    m %= 3\n    if m == 2:\n        ans += 1\nelse:\n    ans = m // 3\n    m %= 3\n    if m == 1:\n        ans += 1\n    if n > m:\n        ans += m\n    else:\n        ans += n\nprint(ans)\n', '\nn, m = map(int, input().split())\nans = 0\n\nif n == 0:\n    ans = m // 3\n    m %= 3\n    if m == 1:\n        ans += 1\nelif n == 1:\n    ans = m // 3\n    m %= 3\n    if m == 2:\n        ans += 1\nelse:\n    ans = m // 3\n    m %= 3\n    if m == 1:\n        ans += 1\n    if n > m:\n        ans += m\n    else:\n        ans += n\nprint(ans)\n', '\nn, m = map(int, input().split())\nans = 0\n\nif n == 0:\n    ans = m // 3\n    m %= 3\n    if m == 1:\n        ans += 1\nelif n == 1:\n    ans = m // 3\n    m %= 3\n    if m == 2:\n        ans += 1\nelse:\n    ans = m // 3\n    m %= 3\n    if m == 1:\n        ans += 1\n    if n > m:\n        ans += m\n    else:\n        ans += n\nprint(ans)\n', '\nn, m = map(int, input().split())\nans = 0\n\nif n == 0:\n    ans = m // 3\n    m %= 3\n    if m == 1:\n        ans += 1\nelif n == 1:\n    ans = m // 3\n    m %= 3\n    if m == 2:\n        ans += 1\nelse:\n    ans = m // 3\n    m %= 3\n    if m == 1:\n        ans += 1\n    if n > m:\n        ans += m\n    else:\n        ans += n\nprint(ans)\n', '\n\nn, m = map(int, input().split())\n\nans = 0\n\nif n == 0:\n    ans = m // 3\n    if m % 3 == 1:\n        ans += 1\nelif n == 1:\n    ans = m // 3\n    if m % 3 == 2:\n        ans += 1\nelse:\n    ans = m // 3\n    if m % 3 == 1:\n        ans += 1\n    if n > m:\n        ans += m\n    else:\n        ans += n\nprint(ans)\n', '\nn, m = map(int, input().split())\n\nans = 0\n\nif n == 0:\n    ans = m // 3\n    m %= 3\n    if m == 1:\n        ans += 1\nelif n == 1:\n    ans = m // 3\n    m %= 3\n    if m == 2:\n        ans += 1\nelse:\n    ans = m // 3\n    m %= 3\n    if m == 1:\n        ans += 1\n    if n > m:\n        ans += m\n    else:\n        ans += n\nprint(ans)\n', 'import math\n\n\ndef divisor(n):\n    divisors = []\n    for i in range(1, int(n**0.5)+1):\n        if n % i == 0:\n            divisors.append(i)\n            if i != n // i:\n                divisors.append(n//i)\n    divisors.sort()\n    return divisors\n\n\nn = int(input())\n\ndivisors = divisor(n)\n\nif len(divisors) % 2 == 0:\n    print(divisors[len(divisors) // 2 - 1])\nelse:\n    print(divisors[len(divisors) // 2])\n', '\n\nn, m = map(int, input().split())\n\nans = 0\n\nif n == 0:\n    ans = m // 3\n    m %= 3\n    ans += m\nelif n == 1:\n    ans = m // 3\n    m %= 3\n    ans += m\nelse:\n    ans = m // 3\n    m %= 3\n    ans += m\n    if n > m:\n        ans += m\n    else:\n        ans += n\nprint(ans)\n']
2022-04-16 09:15:59.421162 size on output set 6
