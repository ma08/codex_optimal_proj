["\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n\n    if k > (1 << n) - 1:\n        print(-1)\n        return\n\n    s = [c for c in s]\n    s.sort()\n    s = \"\".join(s)\n    print(s)\n\n    curr = s[0]\n    prev = s[0]\n    res = 0\n    i = 1\n    while i < len(s):\n        if s[i] != prev:\n            res += len(curr)\n            curr = \"\"\n        prev = s[i]\n        curr += s[i]\n        i += 1\n    res += len(curr)\n\n    print(res)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n\n    if k > (1 << n) - 1:\n        print(-1)\n        return\n\n    # s = [c for c in s]\n    # s.sort()\n    # s = \"\".join(s)\n    # print(s)\n\n    # curr = s[0]\n    # prev = s[0]\n    # res = 0\n    # i = 1\n    # while i < len(s):\n    #     if s[i] != prev:\n    #         res += len(curr)\n    #         curr = \"\"\n    #     prev = s[i]\n    #     curr += s[i]\n    #     i += 1\n    # res += len(curr)\n\n    # print(res)\n\nmain()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n\n    if k > (1 << n) - 1:\n        print(-1)\n        return\n\n    t = [c for c in s]\n    t.sort()\n    t = \"\".join(t)\n    print(t)\n\n    curr = t[0]\n    prev = t[0]\n    res = 0\n    i = 1\n    while i < len(t):\n        if t[i] != prev:\n            res += len(curr)\n            curr = \"\"\n        prev = t[i]\n        curr += t[i]\n        i += 1\n    res += len(curr)\n\n    print(res)\n\nmain()\n", "\n\n# -*- coding: utf-8 -*\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    # print n, k, s\n    if k > 2**n:\n        print -1\n    else:\n        ans = 0\n        for i in range(n):\n            if k & (1 << i):\n                ans += n - i\n        print ans\n        \nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = list(input())\n\n    if k > (1 << n) - 1:\n        print(-1)\n        return\n\n    s.sort()\n    s = \"\".join(sorted(s))\n\n    curr = s[0]\n    prev = s[0]\n    res = 0\n    i = 1\n    while i < len(s):\n        if s[i] != prev:\n            res += len(curr)\n            curr = \"\"\n        prev = s[i]\n        curr += s[i]\n        i += 1\n    res += len(curr)\n\n    print(res)\n\nmain()\n", "\n\n# -*- coding: utf-8 -*\n\ndef main():\n    pass\n        \nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n\n    if k > (1 << n):\n        print(-1)\n        return\n\n    s = [c for c in s]  # convert to list\n    s.sort()  # sort\n    s = \"\".join(s)  # convert back to string\n    print(s)  # print string\n\n    curr = s[0]\n    prev = s[0]\n    res = 0\n    i = 1\n    while i < len(s):\n        if s[i] != prev:\n            res += len(curr)\n            curr = \"\"\n        prev = s[i]\n        curr += s[i]\n        i += 1\n    res += len(curr)\n\n    print(res)\n\nmain()\n", "\n\n# -*- coding: utf-8 -*\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    # print n, k, s\n    if k > 2**n:\n        print(-1)\n    else:\n        ans = 0\n        for i in range(n):\n            if k & (1 << i):\n                ans += n - i\n        print(ans)\n        \nif __name__ == '__main__':\n    main()\n", "\n# -*- coding: utf-8 -*\n\ndef main():\n    n, k = map(int, raw_input().split())\n    s = raw_input()\n    # print n, k, s\n    if k > 2**n:\n        print -1\n    else:\n        ans = 0\n        for i in xrange(n):\n            if k & (1 << i):\n                ans += n - i\n        print ans\n        \nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\nsys.setrecursionlimit(10**7)\n\nn = int(raw_input())\n\ndef f(n):\n    if n == 0:\n        return 1\n    else:\n        return f(n - 1) * n\n\nprint f(n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# -*- coding: utf-8 -*\n\ndef main():\n    n, k = map(int, raw_input().split())\n    s = raw_input()\n    # print n, k, s\n    if k > 2**n:\n        print -1\n    else:\n        ans = 0\n        for i in xrange(n):\n            if k & (1 << i):\n                ans += n - i\n        print ans\n        \nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n\n    if k > (1 << n) - 1 or k == 0:\n        print(-1)\n        return\n\n    string = [c for c in s]\n    string.sort()\n    string = \"\".join(string)\n\n    curr = string[0]\n    prev = string[0]\n    res = 0\n    i = 1\n    while i < len(string):\n        if string[i] != prev:\n            res += len(curr)\n            curr = \"\"\n        prev = s[i]\n        curr += s[i]\n        i += 1\n    res += len(curr)\n\n    print(res)\n\nmain()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n\n    if k > (1 << n) - 1:\n        print(-1)\n        return\n\n    s_ = [c for c in s]\n    s_.sort()\n    s_ = \"\".join(s_)\n    print(s_)\n\n    curr = s[0]\n    prev = s[0]\n    res = 0\n    i = 1\n    while i < len(s):\n        if s[i] != prev:\n            res += len(curr)\n            curr = \"\"\n        prev = s[i]\n        curr += s[i]\n        i += 1\n    res += len(curr)\n\n    print(res)\n\nmain()\n", "\n\n# -*- coding: utf-8 -*\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    # print n, k, s\n    if k > 2**n:\n        print -1\n    else:\n        ans = 0\n        for i in xrange(n):\n            if k & (1 << i):\n                ans += n - i\n        print ans\n        \nif __name__ == '__main__':\n    main()\n", "\n\n# -*- coding: utf-8 -*\n\ndef main():\n    n, k = map(int, raw_input().split())\n    s = raw_input()\n    # print n, k, s\n    if k > (1 << n):\n        print -1\n    else:\n        ans = 0\n        for i in xrange(n):\n            if k & (1 << i):\n                ans += n - i\n        print ans\n        \nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n\n    if k > (1 << (n + 1)) - 1:\n        print(-1)\n        return\n\n    s = [c for c in s]\n    s.sort()\n    s = \"\".join(s)\n    print(s)\n\n    curr = s[0]\n    prev = s[0]\n    res = 0\n    i = 1\n    while i < len(s):\n        if s[i] != prev:\n            res += len(curr)\n            curr = \"\"\n        prev = s[i]\n        curr += s[i]\n        i += 1\n    res += len(curr)\n\n    print(res)\n\nmain()\n", "\n# -*- coding: utf-8 -*-\n\nfrom __future__ import division, print_function\n\ndef main():\n    pass\n\n\nif __name__ == '__main__':\n    main()\n"]