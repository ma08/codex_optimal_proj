2022-04-16 09:12:13.741311 num operations 1
2022-04-16 09:12:13.741329 size on input set 1
2022-04-16 09:12:23.166922 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Get input\nA, B, C, D = map(int, input().split())\n\n# Calculate areas\narea_1 = A * B\narea_2 = C * D\n\n# Compare areas and print larger\nif area_1 > area_2:\n    print(area_1)\nelif area_2 > area_1:\n    print(area_2)\nelse:\n    print(area_1)\n"
    },
    {
      "index": 1,
      "text": "\n# Get input\nA, B, C, D = map(int, input().split())\n\n# Calculate areas\narea_1 = A * B\narea_2 = C * D\n\n# Compare areas and print larger\nif area_1 > area_2:\n    print(area_1)\nelif area_2 > area_1:\n    print(area_2)\nelse:\n    print(area_1)\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\n\n# Get input\nA, B, C, D = map(int, input().split())\n\n# Calculate areas\narea_1 = A * B\narea_2 = C * D\n\n# Compare areas and print larger\nif area_1 > area_2:\n    print(area_1)\nelif area_2 > area_1:\n    print(area_2)\nelse:\n    print(area_1)\n"
    },
    {
      "index": 3,
      "text": "\n# Get input\na, b, c, d = map(int, input().split())\n\n# Calculate areas\narea_1 = a * b\narea_2 = c * d\n\n# Compare areas and print larger\nif area_1 > area_2:\n    print(area_1)\nelif area_2 > area_1:\n    print(area_2)\nelse:\n    print(area_1)\n"
    },
    {
      "index": 4,
      "text": "\n\n# Get input\na, b, c, d = map(int, input().split())\n\n# Calculate areas\narea_1 = a * b\narea_2 = c * d\n\n# Compare areas and print larger\nif area_1 > area_2:\n    print(area_1)\nelif area_2 > area_1:\n    print(area_2)\nelse:\n    print(area_1)\n"
    },
    {
      "index": 5,
      "text": "\n# Get input\nA, B, C, D = map(int, input().split())\n\n# Calculate areas\narea_1 = A * B\narea_2 = C * D\n\n# Compare areas and print larger\nif area_1 > area_2:\n    print(area_1)\nelif area_2 > area_1:\n    print(area_2)\nelse:\n    print(area_1)\n"
    },
    {
      "index": 6,
      "text": "\n# Get input\nA, B, C, D = map(int, input().split())\n\n# Calculate areas\narea_1 = A * B\narea_2 = C * D\n\n# Compare areas and print larger\nif area_1 > area_2:\n    print(area_1)\nelif area_2 > area_1:\n    print(area_2)\nelse:\n    print(area_1)\n"
    },
    {
      "index": 7,
      "text": "\n# Get input\nA, B, C, D = map(int, input().split())\n\n# Calculate areas\narea_1 = A * B\narea_2 = C * D\n\n# Compare areas and print larger\nif area_1 > area_2:\n    print(area_1)\nelif area_2 > area_1:\n    print(area_2)\nelse:\n    print(area_1)\n"
    },
    {
      "index": 8,
      "text": "\n# Get input\nA, B, C, D = map(int, input().split()) # space seperated input\n\n# Calculate areas\narea_1 = A * B # area of rectangle 1\narea_2 = C * D # area of rectangle 2\n\n# Compare areas and print larger\nif area_1 > area_2:\n    print(area_1) # print area of rectangle 1\nelif area_2 > area_1:\n    print(area_2) # print area of rectangle 2\nelse:\n    print(area_1) # print area of rectangle 1 or 2\n"
    }
  ],
  "created": 1650100333,
  "object": "edit"
}
2022-04-16 09:12:23.167245 fix syntax errors 9 ['\n# Get input\nA, B, C, D = map(int, input().split())\n\n# Calculate areas\narea_1 = A * B\narea_2 = C * D\n\n# Compare areas and print larger\nif area_1 > area_2:\n    print(area_1)\nelif area_2 > area_1:\n    print(area_2)\nelse:\n    print(area_1)\n', '\n# Get input\nA, B, C, D = map(int, input().split())\n\n# Calculate areas\narea_1 = A * B\narea_2 = C * D\n\n# Compare areas and print larger\nif area_1 > area_2:\n    print(area_1)\nelif area_2 > area_1:\n    print(area_2)\nelse:\n    print(area_1)\n', '#!/usr/bin/env python3\n\n# Get input\nA, B, C, D = map(int, input().split())\n\n# Calculate areas\narea_1 = A * B\narea_2 = C * D\n\n# Compare areas and print larger\nif area_1 > area_2:\n    print(area_1)\nelif area_2 > area_1:\n    print(area_2)\nelse:\n    print(area_1)\n', '\n# Get input\na, b, c, d = map(int, input().split())\n\n# Calculate areas\narea_1 = a * b\narea_2 = c * d\n\n# Compare areas and print larger\nif area_1 > area_2:\n    print(area_1)\nelif area_2 > area_1:\n    print(area_2)\nelse:\n    print(area_1)\n', '\n\n# Get input\na, b, c, d = map(int, input().split())\n\n# Calculate areas\narea_1 = a * b\narea_2 = c * d\n\n# Compare areas and print larger\nif area_1 > area_2:\n    print(area_1)\nelif area_2 > area_1:\n    print(area_2)\nelse:\n    print(area_1)\n', '\n# Get input\nA, B, C, D = map(int, input().split())\n\n# Calculate areas\narea_1 = A * B\narea_2 = C * D\n\n# Compare areas and print larger\nif area_1 > area_2:\n    print(area_1)\nelif area_2 > area_1:\n    print(area_2)\nelse:\n    print(area_1)\n', '\n# Get input\nA, B, C, D = map(int, input().split())\n\n# Calculate areas\narea_1 = A * B\narea_2 = C * D\n\n# Compare areas and print larger\nif area_1 > area_2:\n    print(area_1)\nelif area_2 > area_1:\n    print(area_2)\nelse:\n    print(area_1)\n', '\n# Get input\nA, B, C, D = map(int, input().split())\n\n# Calculate areas\narea_1 = A * B\narea_2 = C * D\n\n# Compare areas and print larger\nif area_1 > area_2:\n    print(area_1)\nelif area_2 > area_1:\n    print(area_2)\nelse:\n    print(area_1)\n', '\n# Get input\nA, B, C, D = map(int, input().split()) # space seperated input\n\n# Calculate areas\narea_1 = A * B # area of rectangle 1\narea_2 = C * D # area of rectangle 2\n\n# Compare areas and print larger\nif area_1 > area_2:\n    print(area_1) # print area of rectangle 1\nelif area_2 > area_1:\n    print(area_2) # print area of rectangle 2\nelse:\n    print(area_1) # print area of rectangle 1 or 2\n']
2022-04-16 09:12:23.167305 size on output set 5
2022-04-16 09:12:23.167317 num operations 1
2022-04-16 09:12:23.167322 size on input set 1
2022-04-16 09:12:33.335390 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\n\ndef area_of_rect(a,b,c,d):\n\n    return max(a*b, c*d)\n\ndef main():\n    a,b,c,d = map(int, sys.stdin.readline().split())\n    print(area_of_rect(a,b,c,d))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\n\ndef area_of_rect(a, b, c, d):\n    return max(a * b, c * d)\n\n\ndef main():\n    a,b,c,d = map(int, sys.stdin.readline().split())\n    print(area_of_rect(a,b,c,d))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef area_of_rect(a,b,c,d):\n    return max(a*b, c*d)\n\ndef main():\n    a,b,c,d = map(int, sys.stdin.readline().split())\n    print(area_of_rect(a,b,c,d))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef area_of_rect(a,b,c,d):\n    return max(a*b, c*d) \n\ndef main():\n    a,b,c,d = map(int, sys.stdin.readline().split())\n    print(area_of_rect(a,b,c,d))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef area_of_rect(a,b,c,d):\n    return max(a*b, c*d)\n\ndef main():\n    a,b,c,d = map(int, sys.stdin.readline().split())\n    print(area_of_rect(a,b,c,d))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef area_of_rect(a, b, c, d):\n    return max(a * b, c * d)\n\ndef main():\n    a, b, c, d = map(int, sys.stdin.readline().split())\n    print(area_of_rect(a, b, c, d))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\ndef area_of_rect(a, b, c, d):\n    return max(a * b, c * d)\n\ndef main():\n    a, b, c, d = map(int, sys.stdin.readline().split())\n    print(area_of_rect(a, b, c, d))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef area_of_rect(a, b, c, d):\n    return max(a * b, c * d)\n\ndef main():\n    a, b, c, d = map(int, sys.stdin.readline().split())\n    print(area_of_rect(a, b, c, d))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "import sys\n\ndef area_of_rect(a,b,c,d):\n    return max(a*b, c*d)\ndef main():\n    a,b,c,d = map(int, sys.stdin.readline().split())\n    print(area_of_rect(a,b,c,d))\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650100343,
  "object": "edit"
}
2022-04-16 09:12:33.335699 fix syntax errors 9 ["\nimport sys\n\n\ndef area_of_rect(a,b,c,d):\n\n    return max(a*b, c*d)\n\ndef main():\n    a,b,c,d = map(int, sys.stdin.readline().split())\n    print(area_of_rect(a,b,c,d))\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\n\ndef area_of_rect(a, b, c, d):\n    return max(a * b, c * d)\n\n\ndef main():\n    a,b,c,d = map(int, sys.stdin.readline().split())\n    print(area_of_rect(a,b,c,d))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef area_of_rect(a,b,c,d):\n    return max(a*b, c*d)\n\ndef main():\n    a,b,c,d = map(int, sys.stdin.readline().split())\n    print(area_of_rect(a,b,c,d))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef area_of_rect(a,b,c,d):\n    return max(a*b, c*d) \n\ndef main():\n    a,b,c,d = map(int, sys.stdin.readline().split())\n    print(area_of_rect(a,b,c,d))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef area_of_rect(a,b,c,d):\n    return max(a*b, c*d)\n\ndef main():\n    a,b,c,d = map(int, sys.stdin.readline().split())\n    print(area_of_rect(a,b,c,d))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef area_of_rect(a, b, c, d):\n    return max(a * b, c * d)\n\ndef main():\n    a, b, c, d = map(int, sys.stdin.readline().split())\n    print(area_of_rect(a, b, c, d))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef area_of_rect(a, b, c, d):\n    return max(a * b, c * d)\n\ndef main():\n    a, b, c, d = map(int, sys.stdin.readline().split())\n    print(area_of_rect(a, b, c, d))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef area_of_rect(a, b, c, d):\n    return max(a * b, c * d)\n\ndef main():\n    a, b, c, d = map(int, sys.stdin.readline().split())\n    print(area_of_rect(a, b, c, d))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef area_of_rect(a,b,c,d):\n    return max(a*b, c*d)\ndef main():\n    a,b,c,d = map(int, sys.stdin.readline().split())\n    print(area_of_rect(a,b,c,d))\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 09:12:33.335738 size on output set 6
