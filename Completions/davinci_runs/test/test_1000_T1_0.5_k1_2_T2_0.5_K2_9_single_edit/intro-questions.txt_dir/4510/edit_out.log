2022-04-16 07:55:44.226398 num operations 1
2022-04-16 07:55:44.226414 size on input set 1
2022-04-16 07:56:02.491341 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\na = [1, 2, 3, 4]\nb = [1, 3, 5, 7]\nc = [2, 4, 6, 8]\nd = [3, 5, 7, 9]\n\nprint(a[::-1])\nprint(b[::-1])\nprint(c[::-1])\nprint(d[::-1])\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, k = [int(x) for x in input().split()]\n    ids = [int(x) for x in input().split()]\n    ids_to_pos = []\n    for i in range(n):\n        if ids[i] not in ids_to_pos and len(ids_to_pos) < k:\n            ids_to_pos.append(ids[i])\n    for i in range(n):\n        if ids[i] not in ids_to_pos:\n            remove_id = ids_to_pos[0]\n            ids_to_pos.pop(0)\n            ids_to_pos.append(ids[i])\n    print(len(ids_to_pos))\n    for id_ in ids_to_pos:\n        print(id_, end=' ')\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n, k = [int(x) for x in input().split()]\n    ids = [x for x in input().split()]\n    ids_to_pos = {}\n    for i in range(n):\n        if ids[i] not in ids_to_pos:\n            if len(ids_to_pos) == k:\n                remove_id = min(ids_to_pos.values())\n                del ids_to_pos[remove_id]\n                ids_to_pos[ids[i]] = 0\n        else:\n            ids_to_pos[ids[i]] += 1\n        for id_ in ids_to_pos.keys():\n            if id_ != ids[i]: ids_to_pos[id_] += 1\n    print(len(ids_to_pos))\n    for id_ in ids_to_pos:\n        print(id_, end=' ')\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main(n, k, ids):\n    # n, k = [int(x) for x in input().split()]\n    # ids = [int(x) for x in input().split()]\n    # ids_to_pos = {}\n    # for i in range(n):\n    #     if ids[i] not in ids_to_pos:\n    #         if len(ids_to_pos) == k:\n    #             remove_id = min(ids_to_pos.values())\n    #             del ids_to_pos[remove_id]\n    #         ids_to_pos[ids[i]] = 0\n    #     else:\n    #         ids_to_pos[ids[i]] += 1\n    #     for id_ in ids_to_pos:\n    #         if id_ != ids[i]:\n    #             ids_to_pos[id_] += 1\n    # print(len(ids_to_pos))\n    # for id_ in ids_to_pos:\n    #     print(id_, end=' ')\n\nif __name__ == \"__main__\":\n    main(5, 3, [1, 2, 3, 4, 2])\n"
    },
    {
      "index": 4,
      "text": "\ndef main():\n    n, k = [int(x) for x in input().split()]\n    ids = [int(x) for x in input().split()]\n    ids_to_pos = {}\n    for i in range(n):\n        if ids[i] not in ids_to_pos:\n            if len(ids_to_pos) == k:\n                remove_id = min(ids_to_pos.values())\n                del ids_to_pos[remove_id]\n            ids_to_pos[ids[i]] = 0\n        else:\n            ids_to_pos[ids[i]] += 1\n        for id_ in ids_to_pos:\n            if id_ != ids[i]:\n                ids_to_pos[id_] += 1\n    print(len(ids_to_pos))\n    for id_ in ids_to_pos:\n        print(id_, end=' ')\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\ndef main():\n    n, k = [int(x) for x in input().split()]\n    ids = [int(x) for x in input().split()]\n    ids_to_pos = {}\n    for i in range(n):\n        if ids[i] not in ids_to_pos:\n            if len(ids_to_pos) == k:\n                remove_id = min(ids_to_pos.values())\n                del ids_to_pos[remove_id]\n            ids_to_pos[ids[i]] = 0\n        else:\n            ids_to_pos[ids[i]] += 1\n        for id_ in ids_to_pos:\n            if id_ != ids[i]:\n                ids_to_pos[id_] += 1\n    print(len(ids_to_pos))\n    for id_ in ids_to_pos:\n        print(id_, end=' ')\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    n, k = [int(x) for x in input().split()]\n    ids = [int(x) for x in input().split()]\n    ids_to_pos = {}\n    for i in range(n):\n        if ids[i] not in ids_to_pos:\n            if len(ids_to_pos) == k:\n                remove_id = min(ids_to_pos.values())\n                del ids_to_pos[remove_id]\n            ids_to_pos[ids[i]] = 0\n        else:\n            ids_to_pos[ids[i]] += 1\n        for id_ in ids_to_pos:\n            if id_ != ids[i]:\n                ids_to_pos[id_] += 1\n    print(len(ids_to_pos), end=' ')\n    for id_ in ids_to_pos:\n        print(id_, end=' ')\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\ndef main(n, k, ids):\n    ids_to_pos = {}\n    for i in range(n):\n        if ids[i] not in ids_to_pos:\n            if len(ids_to_pos) == k:\n                remove_id = min(ids_to_pos.values())\n                del ids_to_pos[remove_id]\n            ids_to_pos[ids[i]] = 0\n        else:\n            ids_to_pos[ids[i]] += 1\n        for id_ in ids_to_pos:\n            if id_ != ids[i]:\n                ids_to_pos[id_] += 1\n    print(len(ids_to_pos))\n    for id_ in ids_to_pos:\n        print(id_, end=' ')\n\nif __name__ == \"__main__\":\n    n, k = [int(x) for x in input().split()]\n    ids = [int(x) for x in input().split()]\n    main(n, k, ids)\n"
    }
  ],
  "created": 1650095744,
  "object": "edit"
}
2022-04-16 07:56:02.491707 fix syntax errors 9 ['\n\na = [1, 2, 3, 4]\nb = [1, 3, 5, 7]\nc = [2, 4, 6, 8]\nd = [3, 5, 7, 9]\n\nprint(a[::-1])\nprint(b[::-1])\nprint(c[::-1])\nprint(d[::-1])\n', '\n\ndef main():\n    n, k = [int(x) for x in input().split()]\n    ids = [int(x) for x in input().split()]\n    ids_to_pos = []\n    for i in range(n):\n        if ids[i] not in ids_to_pos and len(ids_to_pos) < k:\n            ids_to_pos.append(ids[i])\n    for i in range(n):\n        if ids[i] not in ids_to_pos:\n            remove_id = ids_to_pos[0]\n            ids_to_pos.pop(0)\n            ids_to_pos.append(ids[i])\n    print(len(ids_to_pos))\n    for id_ in ids_to_pos:\n        print(id_, end=\' \')\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n, k = [int(x) for x in input().split()]\n    ids = [x for x in input().split()]\n    ids_to_pos = {}\n    for i in range(n):\n        if ids[i] not in ids_to_pos:\n            if len(ids_to_pos) == k:\n                remove_id = min(ids_to_pos.values())\n                del ids_to_pos[remove_id]\n                ids_to_pos[ids[i]] = 0\n        else:\n            ids_to_pos[ids[i]] += 1\n        for id_ in ids_to_pos.keys():\n            if id_ != ids[i]: ids_to_pos[id_] += 1\n    print(len(ids_to_pos))\n    for id_ in ids_to_pos:\n        print(id_, end=\' \')\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main(n, k, ids):\n    # n, k = [int(x) for x in input().split()]\n    # ids = [int(x) for x in input().split()]\n    # ids_to_pos = {}\n    # for i in range(n):\n    #     if ids[i] not in ids_to_pos:\n    #         if len(ids_to_pos) == k:\n    #             remove_id = min(ids_to_pos.values())\n    #             del ids_to_pos[remove_id]\n    #         ids_to_pos[ids[i]] = 0\n    #     else:\n    #         ids_to_pos[ids[i]] += 1\n    #     for id_ in ids_to_pos:\n    #         if id_ != ids[i]:\n    #             ids_to_pos[id_] += 1\n    # print(len(ids_to_pos))\n    # for id_ in ids_to_pos:\n    #     print(id_, end=\' \')\n\nif __name__ == "__main__":\n    main(5, 3, [1, 2, 3, 4, 2])\n', '\ndef main():\n    n, k = [int(x) for x in input().split()]\n    ids = [int(x) for x in input().split()]\n    ids_to_pos = {}\n    for i in range(n):\n        if ids[i] not in ids_to_pos:\n            if len(ids_to_pos) == k:\n                remove_id = min(ids_to_pos.values())\n                del ids_to_pos[remove_id]\n            ids_to_pos[ids[i]] = 0\n        else:\n            ids_to_pos[ids[i]] += 1\n        for id_ in ids_to_pos:\n            if id_ != ids[i]:\n                ids_to_pos[id_] += 1\n    print(len(ids_to_pos))\n    for id_ in ids_to_pos:\n        print(id_, end=\' \')\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n, k = [int(x) for x in input().split()]\n    ids = [int(x) for x in input().split()]\n    ids_to_pos = {}\n    for i in range(n):\n        if ids[i] not in ids_to_pos:\n            if len(ids_to_pos) == k:\n                remove_id = min(ids_to_pos.values())\n                del ids_to_pos[remove_id]\n            ids_to_pos[ids[i]] = 0\n        else:\n            ids_to_pos[ids[i]] += 1\n        for id_ in ids_to_pos:\n            if id_ != ids[i]:\n                ids_to_pos[id_] += 1\n    print(len(ids_to_pos))\n    for id_ in ids_to_pos:\n        print(id_, end=\' \')\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    pass\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, k = [int(x) for x in input().split()]\n    ids = [int(x) for x in input().split()]\n    ids_to_pos = {}\n    for i in range(n):\n        if ids[i] not in ids_to_pos:\n            if len(ids_to_pos) == k:\n                remove_id = min(ids_to_pos.values())\n                del ids_to_pos[remove_id]\n            ids_to_pos[ids[i]] = 0\n        else:\n            ids_to_pos[ids[i]] += 1\n        for id_ in ids_to_pos:\n            if id_ != ids[i]:\n                ids_to_pos[id_] += 1\n    print(len(ids_to_pos), end=\' \')\n    for id_ in ids_to_pos:\n        print(id_, end=\' \')\n\nif __name__ == "__main__":\n    main()\n', '\ndef main(n, k, ids):\n    ids_to_pos = {}\n    for i in range(n):\n        if ids[i] not in ids_to_pos:\n            if len(ids_to_pos) == k:\n                remove_id = min(ids_to_pos.values())\n                del ids_to_pos[remove_id]\n            ids_to_pos[ids[i]] = 0\n        else:\n            ids_to_pos[ids[i]] += 1\n        for id_ in ids_to_pos:\n            if id_ != ids[i]:\n                ids_to_pos[id_] += 1\n    print(len(ids_to_pos))\n    for id_ in ids_to_pos:\n        print(id_, end=\' \')\n\nif __name__ == "__main__":\n    n, k = [int(x) for x in input().split()]\n    ids = [int(x) for x in input().split()]\n    main(n, k, ids)\n']
2022-04-16 07:56:02.491867 size on output set 9
2022-04-16 07:56:02.491885 num operations 1
2022-04-16 07:56:02.491893 size on input set 1
2022-04-16 07:56:12.750348 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom collections import deque\n\nn, k = map(int, input().split())\nids = deque(map(int, input().split()))\n\nd = []\n\nfor id in ids:\n    if id not in d:\n        d.append(id)\n    if len(d) == k:\n        d.pop(0)\n\nprint(len(d))\nprint(*d, sep=' ')\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nfrom collections import deque\n\nn, k = map(int, input().split())\nids = list(map(int, input().split()))\n\nd = deque()\n\nfor id in ids:\n    if id in d:\n        continue\n    if len(d) == k:\n        d.pop()\n    d.appendleft(id)\n\nprint(len(d))\nprint(*d)\n"
    },
    {
      "index": 2,
      "text": "# python 3.6\n\nfrom collections import deque\n\nn, k = map(int, input().split())\nids = list(map(int, input().split()))\n\nd = deque()\n\nfor id in ids:\n    if id in d:\n        continue\n    if len(d) == k:\n        d.pop()\n    d.appendleft(id)\n\nprint(len(d))\nprint(*d)\n"
    },
    {
      "index": 3,
      "text": "\n\nfrom collections import deque, defaultdict\n\nn = int(input())\nd = defaultdict(list)\n\nfor i in range(n):\n    s = input()\n    d[len(s)].append(s)\n\nfor k in sorted(d.keys()):\n    for i in sorted(d[k]):\n        print(i)\n"
    },
    {
      "index": 4,
      "text": "\n \nfrom collections import deque\n\nn, k = map(int, input().split())\nids = list(map(int, input().split()))\n\nd = deque()\n\nfor id in ids:\n    if id in d:\n        continue\n    if len(d) == k:\n        d.pop()\n    d.appendleft(id)\n\nprint(len(d))\nprint(*d)\n"
    },
    {
      "index": 5,
      "text": "\n\nfrom collections import deque\n\nn, k = map(int, input().split())\nids = list(map(int, input().split()))\n\nd = deque()\n\nfor id in ids:\n    if id in d:\n        continue\n    if len(d) == k:\n        d.pop()\n    d.appendleft(id)\n\nprint(len(d))\n\nprint(*d)\n"
    },
    {
      "index": 6,
      "text": "\nfrom collections import deque \nn,k=map(int,input().split())\nids=list(map(int,input().split()))\nd=deque()\nfor id in ids: \n    if id in d: \n        continue \n    if len(d)==k: \n        d.pop() \n    d.appendleft(id) \nprint(len(d)) \nprint(*d)\n"
    },
    {
      "index": 7,
      "text": "import sys\n\nfrom collections import deque\n\nn, k = map(int, sys.stdin.readline().split())\nids = list(map(int, sys.stdin.readline().split()))\n\nd = deque()\n\nfor id in ids:\n    if id in d:\n        continue\n    if len(d) == k:\n        d.pop()\n    d.appendleft(id)\n\nprint(len(d))\nprint(*d)\n"
    },
    {
      "index": 8,
      "text": "\n\nfrom collections import Counter\n\nn = int(input())\na = list(map(int, input().split()))\n\nb = Counter(a)\nb = b.most_common()\n\nans = 0\nfor i, j in b:\n    if j <= ans:\n        break\n    ans += 1\n\nprint(ans)\n"
    }
  ],
  "created": 1650095762,
  "object": "edit"
}
2022-04-16 07:56:12.750589 fix syntax errors 9 ["\nfrom collections import deque\n\nn, k = map(int, input().split())\nids = deque(map(int, input().split()))\n\nd = []\n\nfor id in ids:\n    if id not in d:\n        d.append(id)\n    if len(d) == k:\n        d.pop(0)\n\nprint(len(d))\nprint(*d, sep=' ')\n", '#!/usr/bin/env python3\n\nfrom collections import deque\n\nn, k = map(int, input().split())\nids = list(map(int, input().split()))\n\nd = deque()\n\nfor id in ids:\n    if id in d:\n        continue\n    if len(d) == k:\n        d.pop()\n    d.appendleft(id)\n\nprint(len(d))\nprint(*d)\n', '# python 3.6\n\nfrom collections import deque\n\nn, k = map(int, input().split())\nids = list(map(int, input().split()))\n\nd = deque()\n\nfor id in ids:\n    if id in d:\n        continue\n    if len(d) == k:\n        d.pop()\n    d.appendleft(id)\n\nprint(len(d))\nprint(*d)\n', '\n\nfrom collections import deque, defaultdict\n\nn = int(input())\nd = defaultdict(list)\n\nfor i in range(n):\n    s = input()\n    d[len(s)].append(s)\n\nfor k in sorted(d.keys()):\n    for i in sorted(d[k]):\n        print(i)\n', '\n \nfrom collections import deque\n\nn, k = map(int, input().split())\nids = list(map(int, input().split()))\n\nd = deque()\n\nfor id in ids:\n    if id in d:\n        continue\n    if len(d) == k:\n        d.pop()\n    d.appendleft(id)\n\nprint(len(d))\nprint(*d)\n', '\n\nfrom collections import deque\n\nn, k = map(int, input().split())\nids = list(map(int, input().split()))\n\nd = deque()\n\nfor id in ids:\n    if id in d:\n        continue\n    if len(d) == k:\n        d.pop()\n    d.appendleft(id)\n\nprint(len(d))\n\nprint(*d)\n', '\nfrom collections import deque \nn,k=map(int,input().split())\nids=list(map(int,input().split()))\nd=deque()\nfor id in ids: \n    if id in d: \n        continue \n    if len(d)==k: \n        d.pop() \n    d.appendleft(id) \nprint(len(d)) \nprint(*d)\n', 'import sys\n\nfrom collections import deque\n\nn, k = map(int, sys.stdin.readline().split())\nids = list(map(int, sys.stdin.readline().split()))\n\nd = deque()\n\nfor id in ids:\n    if id in d:\n        continue\n    if len(d) == k:\n        d.pop()\n    d.appendleft(id)\n\nprint(len(d))\nprint(*d)\n', '\n\nfrom collections import Counter\n\nn = int(input())\na = list(map(int, input().split()))\n\nb = Counter(a)\nb = b.most_common()\n\nans = 0\nfor i, j in b:\n    if j <= ans:\n        break\n    ans += 1\n\nprint(ans)\n']
2022-04-16 07:56:12.750631 size on output set 9
