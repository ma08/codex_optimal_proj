["\n\n# put your python code here\nnumber, k = [int(x) for x in input().split()]\nnumber -= number % (10**k)\nprint(number)\n", "\n\nfrom sys import stdin\n\nc, k = map(int, stdin.readline().split())\n\nprint((c + 10 ** k - 1) // 10 ** k * 10 ** k)\n", "# -*- coding: utf-8 -*-\n\nimport sys\nimport os\nfrom collections import deque\n\ndef input(): return sys.stdin.readline().strip()\ndef list2d(a, b, c): return [[c] * b for i in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\ndef list4d(a, b, c, d, e): return [[[[e] * d for j in range(c)] for j in range(b)] for i in range(a)]\ndef ceil(x, y=1): return int(-(-x // y))\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef Yes(): print('Yes')\ndef No(): print('No')\ndef YES(): print('YES')\ndef NO(): print('NO')\nsys.setrecursionlimit(10 ** 9)\nINF = 10 ** 18\nMOD = 10 ** 9 + 7\n\n\nC, K = map(int, input().split())\n\nfor i in range(K, 10):\n    if C % (10**i) < 5*(10**(i-1)):\n        C = C - C % (10**i)\n    else:\n        C = C - C % (10**i) + 10**i\n\nprint(C)\n", "\n\nc, k = map(int, input().split())\nprint(c - c % 10 ** k + 10 ** k if c % 10 ** k >= 5 * 10 ** (k - 1)\n      else c - c % 10 ** k)\n", "\n\nC, K = map(int, input().split())\n\nfor i in range(K, 0, -1):\n    if C % (10**i) < 5*(10**(i-1)):\n        C = C - C % (10**i)\n    else:\n        C = C - C % (10**i) + 10**i\n\nprint(C)\n", "\n# CODE:\n\nc = int(input())\nk = int(input())\n\nprint(c // (10 ** k) * (10 ** k))\n", "\n\nc, k = map(int, input().split())\n\nprint((c + 5*10**k - 1)//(10**k) * (10**k))\n", "\n\n#CODE:\n\nc = int(input())\nk = int(input())\n\n\n\nprint(c//(10**k)*(10**k))\n", "\n\n# put your python code here\nn = int(input())\nif n % 2 == 0:\n    print(n + 2)\nelse:\n    print(n + 1)\n", "\n\nimport sys\n\ndef main():\n    # Get the inputs\n    C, K = [int(x) for x in input().split()]\n    \n    # Round to nearest 10^K\n    C = C // (10**K) * (10**K)\n    if C != 0:\n        C += 10**K\n    print(C)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nfrom sys import stdin\n\nc, k = map(int, stdin.readline().split())\n\nprint(c + 10**k - 1) // 10**k * 10**k\n", "\n\nC, K = map(int, input().split()) # C: \uc815\uc218, K: \uc790\ub9bf\uc218\nfor i in range(K, 10): # \uc790\ub9bf\uc218\uac00 K\ubd80\ud130 10\uae4c\uc9c0\n    if C % (10**i) < 5*(10**(i-1)): # \uc790\ub9bf\uc218\ubcf4\ub2e4 \uc791\uc740 \uc790\ub9ac\uc218\uc758 \uc218\uac00 5\ubcf4\ub2e4 \uc791\uc73c\uba74\n        C = C - C % (10**i) # \ub098\uba38\uc9c0\ub97c \ube7c\uc900\ub2e4.\n    else:\n        C = C - C % (10**i) + 10**i # \ub098\uba38\uc9c0\ub97c \ube7c\uace0 10\uc758 \uc790\ub9bf\uc218\ub97c \ub354\ud574\uc900\ub2e4.\n\nprint(C)\n", "\n\nn, m = map(int, input().split())\na = [list(map(int, input().split())) for i in range(n)]\n\nfor i in range(m):\n    a[0][i] = 1\nfor i in range(n):\n    a[i][0] = 1\n\nfor i in range(1, n):\n    for j in range(1, m):\n        a[i][j] = a[i][j] + a[i - 1][j] + a[i][j - 1] - a[i - 1][j - 1]\n\nfor i in range(int(input())):\n    x1, y1, x2, y2 = map(int, input().split())\n    print(a[x2 - 1][y2 - 1] - a[x2 - 1][y1 - 1] - a[x1 - 1][y2 - 1] + a[x1 - 1][y1 - 1])\n", "\n\n# put your python code here\nn, k = [int(x) for x in input().split()]\nn -= n % (10**k)\nprint(n)\n", "\n\n# CODE:\n\nc = int(input())\nk = int(input())\n\nprint(c // (10 ** k) * (10 ** k))\n", "\n\nimport sys\n\ndef main():\n    # Get the inputs\n    C, K = [int(x) for x in raw_input().split()]\n\n    # Round to nearest 10^K\n    C = C // (10**K) * (10**K)\n    if C == 0:\n        C += 1\n    print(C)\n\nif __name__ == \"__main__\":\n    main()\n", "\nC, K = map(int, input().split())\n\nfor i in range(K, 10):\n    if C % (10**i) < 5*(10**(i-1)):\n        C = C - C % (10**i)\n    else:\n        C = C - C % (10**i) + 10**i\n\nprint(C)\n", "\n\nn, k = map(int, input().split())\n\nif n % 10**k >= 5*10**(k-1):\n    print(n + (10**k - n % 10**k))\nelse:\n    print(n - n % 10**k)\n", "from sys import stdin\n\nc, k = map(int, stdin.readline().split())\n\nprint((c + 10**k - 1) // 10**k * 10**k)\n", "\n\n# put your python code here\nc, k = [int(x) for x in input().split()]\nc -= c % (10 * k)\nprint(c)\n", "\n\n# put your python code here\nc, k = [int(x) for x in input().split()]\nc -= c % (10**k)\n\nprint(c)\n", "\nimport sys\n\ndef main():\n    # Get the inputs\n    C, K = [int(x) for x in sys.stdin.readline().split()]\n    \n    # Round to nearest 10^K\n    C = C // (10**K) * (10**K)\n    if C != 0:\n        C += 10**K\n    print(C)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nC, K = map(int, input().split()) # C\uc640 K\ub97c \ubc1b\uc544\uc11c \uc815\uc218\ud615\uc73c\ub85c \ubcc0\ud658\ud55c\ub2e4.\n\nfor i in range(K, 10): # K\ubd80\ud130 10\uae4c\uc9c0 \ubc18\ubcf5\ud55c\ub2e4.\n    if C % (10**i) < 5*(10**(i-1)): # C\ub97c 10\uc758 i\uc2b9\uc73c\ub85c \ub098\ub208 \ub098\uba38\uc9c0\uac00 5*(10\uc758 i-1\uc2b9)\ubcf4\ub2e4 \uc791\uc73c\uba74\n        C = C - C % (10**i) # C\ub97c C\ub97c 10\uc758 i\uc2b9\uc73c\ub85c \ub098\ub208 \ub098\uba38\uc9c0\ub85c \ub098\ub208\ub2e4.\n    else:\n        C = C - C % (10**i) + 10**i # C\ub97c C\ub97c 10\uc758 i\uc2b9\uc73c\ub85c \ub098\ub208 \ub098\uba38\uc9c0\ub85c \ub098\ub208 \ub4a4 10\uc758 i\uc2b9\uc744 \ub354\ud55c\ub2e4.\n\nprint(C) # C\ub97c \ucd9c\ub825\ud55c\ub2e4.\n", "\n\nimport sys\n\ndef main():\n    c, k = map(int, input().split())\n\n    if c % 10**k >= 5*10**(k-1):\n        print(c + (10**k - c % 10**k))\n    else:\n        print(c - c % 10**k)\n\nif __name__ == '__main__':\n    sys.exit(main())\n", "\nc, k = map(int, input().split())\n\nprint((c + 5*10**k - 1)//(10**k) * 10**k)\n", "\nimport sys\n\ndef main():\n    # Get the inputs\n    C, K = [int(x) for x in sys.stdin.readline().split()]  # noqa\n    \n    # Round to nearest 10^K\n    C = C // (10**K) * (10**K)  # noqa\n    if C != 0:\n        C += 10**K  # noqa\n    print(C)\n\nif __name__ == \"__main__\":\n    main()\n", "\nc, k = [int(x) for x in input().split()]\nc -= c % (10**k)\nprint(c)\n", "\nc, k = map(int, input().split())\n\nif c % 10**k >= 5*10**(k-1):\n    print(c + (10**k - c % 10**k))\nelse:\n    print(c - c % 10**k)\n", "\nfrom sys import stdin\nc, k = map(int, stdin.readline().split())\n\nprint((c + 10**k - 1) // 10**k * 10**k)\n", "c, k = map(int, input().split())\n\nprint((c + 5*10**k - 1)//(10**k) * 10**k)\n", "\n\n# CODE:\n\nc = int(input())\nk = int(input())\n\nprint(c//(10**k)*(10**k))\n", "\nfrom sys import stdin\n\nc, k = map(int, stdin.readline().split())\n\nprint((c + 10**k - 1) // 10**k * 10**k)\n", "\n\nc, k = map(int, input().split())\n\nprint((c + 5 * 10 ** k - 1) // (10 ** k) * 10 ** k)\n", "\n\nimport sys\n\ndef main():\n    # Get the inputs\n    C, K = [int(x) for x in sys.stdin.readline().split()]\n\n    # Round to nearest 10^K\n    C = C // (10**K) * (10**K)\n    if C != 0:\n        C += 10**K\n    print(C)\n\nif __name__ == \"__main__\":\n    main()\n", "\na, b = map(int, input().split())\nprint(a + b)\n", "\n\n# CODE:\nc = int(input())\nk = int(input())\nprint(c//(10**k)*(10**k))\n", "\na, b = map(int, input().split())\nprint(a - a % 10 ** b + 10 ** b if a % 10 ** b >= 5 * 10 ** (b - 1) else a - a % 10 ** b)\n", "\nimport sys\n\ndef main():\n    # Get the inputs\n    C, K = [int(x) for x in sys.stdin.readline().split()]\n\n    # Round to nearest 10^K\n    C = C // (10 ** K) * (10 ** K)\n    if C != 0:\n        C += 10 ** K\n    print(C)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nfrom sys import stdin\n\nc, k = map(int, stdin.readline().split())\n\n\nprint((c + 10**k - 1) // 10**k * 10**k)\n", "\nprint(\"Hello World\")\n", "\n\n# put your python code here\n", "\nc, k = map(int, input().split())\nif c % 10**k >= 5*10**(k-1):\n    print(c + (10**k - c % 10**k))\nelse:\n    print(c - c % 10**k)\n", "\n\nc, k = map(int, input().split())\nprint(c - c % 10 ** k + 10 ** k if c % 10 ** k >= 5 * 10 ** (k - 1) else c - c % 10 ** k) \n", "\n\n#CODE:\n\nc = int(input())\nk = int(input())\n\nprint(c//(10**k)*(10**k)) \n", "\n\nc,k = map(int,input().split())\n\nif c % 10**k >= 5*10**(k-1): print(c + (10**k - c % 10**k))\nelse: print(c - c % 10**k)\n", "\n\nc, k = map(int, input().split())\n\nif c % 10**k >= 5*10**(k-1):\n    print(c + (10**k - c % 10**k))\nelse:\n\n\n#\n    print(c - c % 10**k)\n", "\n\nc, k = map(int, input().split())\nprint((c + 5*10**k - 1)//(10**k) * 10**k) \n", "\n\nc, k = map(int, input().split())\nprint(c - c % (10 ** k) + 10 ** k if c % (10 ** k) >= 5 * (10 ** (k - 1)) else c - c % (10 ** k))\n", "a, b, c, d = map(int, input().split())\n\n\nprint(max(a*c, a*d, b*c, b*d))\n", "\n\n# put your python code here\nc, k = [int(x) for x in input().split()]\nc -= c % (10 ** k)\nprint(c)\n", "\n\nc, k = map(int, input().split())\n\nprint((c + 5*10**k - 1)//(10**k) * 10**k) \n", "\n\ndef round(c, k):\n    return c - c % 10 ** k + 10 ** k if c % 10 ** k >= 5 * 10 ** (k - 1) else c - c % 10 ** k\n\n\ndef main():\n    c, k = map(int, input().split())\n    print(round(c, k))\n\n\nif __name__ == '__main__':\n    main()\n", "c, k = map(int, input().split())\nprint(c - c % 10 ** k + 10 ** k if c % 10 ** k >= 5 * 10 ** (k - 1) else c - c % 10 ** k)\n", "\n\nimport sys\n\ndef main():\n    # Get the inputs\n    C, K = [int(x) for x in input().split()]\n    \n    # Round to nearest 10^K\n    C = C // (10**K) * (10**K)\n    if C != 0:\n        C += 10**K\n    print (C)\n\nif __name__ == \"__main__\":\n    main()\n", "\nc, k = map(int, input().split())\nprint(c - c % 10 ** k + 10 ** k if c % 10 ** k >= 5 * 10 ** (k - 1) else c - c % 10 ** k)\n"]