["import sys\n\ndef main():\n    x, y, z = map(int, sys.stdin.readline().split())\n\n    if x == y:\n        print(z)\n    elif y == z:\n        print(x)\n    else:\n        print(y)\n\nif __name__ == '__main__':\n    main()\n", "\n# Read input\nnumbers = [int(x) for x in input().split()]\n\n# Sort numbers\nnumbers.sort()\n\n# Determine progression\nprogression = 0\nif numbers[1] - numbers[0] == numbers[2] - numbers[1]:\n    progression = numbers[1] - numbers[0]\nelse:\n    progression = numbers[2] - numbers[1]\n\n# Print missing number\nprint(numbers[2] + progression)\n", "\n# Get the numbers\nnums = [int(num) for num in input().split()]\n\n# Sort the numbers\nnums.sort()\n\n# Get the difference between the first and second number\ndiff = nums[1] - nums[0]\n\n# Print the number that would make the arithmetic progression\nprint(nums[2] + diff)\n", "\nimport sys\n\ndef main():\n    x, y, z = map(int, sys.stdin.readline().split())\n\n    if x == y:\n        print(z)\n    elif y == z:\n        print(x)\n    else:\n        print(y)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    numbers = map(int, sys.stdin.readline().split(\" \"))\n    numbers.sort()\n    diff = numbers[1] - numbers[0]\n    if numbers[2] - numbers[1] == diff:\n        print numbers[2] + diff\n    elif numbers[1] - numbers[0] == diff:\n        print numbers[0] - diff\n    else:\n        print numbers[1] + diff\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nn = int(input())\n\nfor i in range(n):\n    nums = [int(num) for num in input().split()]\n\n    # Sort the numbers\n    nums.sort()\n\n    # Get the difference between the first and second number\n    diff = nums[1] - nums[0]\n\n    # Print the number that would make the arithmetic progression\n    print(nums[2] + diff)\n", "\n#!/usr/bin/env python3\n# Get the numbers\nnums = [int(num) for num in input().split()]\n\n# Sort the numbers\nnums.sort()\n\n# Get the difference between the first and second number\ndiff = nums[1] - nums[0]\n\n# Print the number that would make the arithmetic progression\nprint(nums[2] + diff)\n", "\n#!/bin/python3\n# Get the numbers\nnums = [int(num) for num in input().split()]\n# Sort the numbers\nnums.sort()\n# Get the difference between the first and second number\ndiff = nums[1] - nums[0]\n# Print the number that would make the arithmetic progression\nprint(nums[2] + diff)\n", "\n#SOLUTION\n\na, b, c = [int(x) for x in input().split()]\n\nif a > b:\n    a, b = b, a\nif b > c:\n    b, c = c, b\nif a > b:\n    a, b = b, a\n\nd = a + c - b\nprint(d)\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    x, y, z = map(int, sys.stdin.readline().split())\n\n    if x == y:\n        print(z)\n    elif y == z:\n        print(x)\n    else:\n        print(y)\n\nif __name__ == '__main__':\n    main()\n", "\n\n#SOLUTION\n\na, b, c = [float(x) for x in input().split()]\n\nif a > b:\n    a, b = b, a\nif b > c:\n    b, c = c, b\nif a > b:\n    a, b = b, a\n\nd = a + b - c\nprint(d)\n", "\n\ndef main():\n    \"\"\"main\"\"\"\n    num = int(input())\n    for i in range(1, num+1):\n        if i % 2 == 0:\n            print(i, \"^2 =\", i**2)\n\nmain()\n", "# https://codeforces.com/contest/1288/problem/A\n\n\n# SOLUTION\n\na, b, c = [int(x) for x in input().split()]\n\nif a > b:\n    a, b = b, a\nif b > c:\n    b, c = c, b\nif a > b:\n    a, b = b, a\n\nd = a + c - b\nprint(d)\n", "\n\ndef main():\n    # Read input\n    numbers = [int(x) for x in input().split()]\n\n    # Sort numbers\n    numbers.sort()\n\n    # Determine progression\n    progression = 0\n    if numbers[1] - numbers[0] == numbers[2] - numbers[1]:\n        progression = numbers[1] - numbers[0]\n    else:\n        progression = numbers[2] - numbers[1]\n\n    # Print missing number\n    print(numbers[2] + progression)\n\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    numbers = [int(x) for x in sys.stdin.readline().split(\" \")]\n    numbers.sort()\n    diff = numbers[2] - numbers[1]\n    print(numbers[1] + diff)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    \"\"\"main function\"\"\"\n    num = list(map(int, input().split()))\n    num.sort()\n    if num[1] - num[0] == num[2] - num[1]:\n        print(num[2] + num[1] - num[0])\n    else:\n        print(num[1] + num[2] - num[0])\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    x, y, z = map(int, sys.stdin.readline().split())\n    \n    if x == y:\n        print(z)\n    elif y == z:\n        print(x)\n    else:\n        print(y)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# Get the numbers and sort them\nnums = sorted([int(num) for num in input().split()])\n\n# Get the difference between the first and second number and add it to the third number\ndiff = nums[1] - nums[0]\n\n# Print the number that would make the arithmetic progression\nprint(nums[2] + diff)\n", "\n\ndef main():\n    \"\"\"main\"\"\"\n    num = list(map(int, input().split()))\n    num.sort()\n    if num[1] - num[0] == num[2] - num[1]:\n        print(num[2] + num[2] - num[1])\n    else:\n        print(num[1] + num[1] - num[0])\n\nmain()\n", "\n# Read input\nnumbers = [int(x) for x in input().split()]  # read the input and convert it to a list of integers\n\n# Sort numbers\nnumbers.sort()\n\n# Determine progression\nprogression = 0\nif numbers[1] - numbers[0] == numbers[2] - numbers[1]:\n\tprogression = numbers[1] - numbers[0]\nelse:\n\tprogression = numbers[2] - numbers[1]\n\n# Print missing number\nprint(numbers[2] + progression)\n", "\n\ndef main():\n    \"\"\"main\"\"\"\n    num = list(map(int, input().split()))\n    num.sort()\n    if num[1] - num[0] == num[2] - num[1]:\n        print(num[2] + num[2] - num[1])\n    else:\n        print(num[1] + num[2] - num[0])\n\nmain()\n", "\n# SOLUTION\n\na, b, c = [int(x) for x in input().split()]\n\nif a > b:\n    a, b = b, a\nif b > c:\n    b, c = c, b\nif a > b:\n    a, b = b, a\n\nd = a + c - b\nprint(d)\n", "\n#\n#SOLUTION\n\na, b, c = [int(x) for x in input().split()]\n\nif a > b:\n    a, b = b, a\nif b > c:\n    b, c = c, b\nif a > b:\n    a, b = b, a\n\nd = a + c - b\nprint(d)\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    numbers = [int(x) for x in sys.stdin.readline().split()]\n    numbers.sort()\n    diff = numbers[2] - numbers[1]\n    print(numbers[2] + diff) \n\nif __name__ == '__main__':\n    main()\n", "\n\n# SOLUTION\n\na, b, c = [int(x) for x in input().split()]\n\nif a > b:\n    a, b = b, a\nif b > c:\n    b, c = c, b\nif a > b:\n    a, b = b, a\n\nd = a + c - b\nprint(d)\n", "\n\n# Read input \nnumbers = [int(x) for x in input().split()] \n\n# Sort numbers \nnumbers.sort() \n\n# Determine progression \nprogression = 0 \nif numbers[1] - numbers[0] == numbers[2] - numbers[1]: \n\tprogression = numbers[1] - numbers[0] \nelse: \n\tprogression = numbers[2] - numbers[1] \n\n# Print missing number \nprint(numbers[2] + progression) \n", "\nimport sys\n\ndef main():\n    numbers = list(map(int, sys.stdin.readline().split(\" \")))\n    numbers.sort()\n    diff = numbers[1] - numbers[0]\n    if numbers[2] - numbers[1] == diff:\n        print(numbers[2] + diff)\n    elif numbers[1] - numbers[0] == diff:\n        print(numbers[0] - diff)\n    else:\n        print(numbers[1] + diff)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split())\n    if a > b:\n        a, b = b, a\n    if a > c:\n        a, c = c, a\n    if b > c:\n        b, c = c, b\n    if c - b == b - a:\n        print(c + b - a)\n    elif c - a == a - b:\n        print(c - b + a)\n    else:\n        print(a + b - c)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    numbers = [int(x) for x in input().split()]\n    numbers.sort()\n    diff = numbers[1] - numbers[0]\n    print(numbers[2] - diff)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split(' '))\n    if a > b:\n        a, b = b, a\n    if a > c:\n        a, c = c, a\n    if b > c:\n        b, c = c, b\n    if c - b == b - a:\n        print(c + b - a) \n    elif c - a == a - b:\n        print(c - b + a)\n    else:\n        print(a + b - c)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        x = int(input())\n        print(x, x*x)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split(' '))\n    if a > b:\n        a, b = b, a\n    if a > c:\n        a, c = c, a\n    if b > c:\n        b, c = c, b\n    if c - b == b - a:\n        print(c + b - a)\n    elif c - a == a - b:\n        print(c - b + a)\n    else:\n        print(a + b - c)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    num = list(map(int, input().split()))\n    num.sort()\n    if num[1] - num[0] == num[2] - num[1]:\n        print(num[2] + num[1] - num[0])\n    else:\n        print(num[1] + num[2] - num[0])\n\n\nif __name__ == '__main__':\n    main()\n", "\n#\nimport sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split(' '))\n    if a > b:\n        a, b = b, a\n    if a > c:\n        a, c = c, a\n    if b > c:\n        b, c = c, b\n    if c - b == b - a:\n        print(c + b - a)\n    elif c - a == a - b:\n        print(c - b + a)\n    else:\n        print(a + b - c)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# Read input\nnumbers = [int(x) for x in input().split()]\n\n# Sort numbers\nnumbers.sort()\n\n# Determine progression\nprogression = 0\nif numbers[1] - numbers[0] == numbers[2] - numbers[1]:\n    progression = numbers[1] - numbers[0]\nelse:\n    progression = numbers[2] - numbers[1]\n\n# Print missing number\nprint(numbers[2] + progression)\n", "\n\nimport sys\n\ndef main():\n    numbers = [int(x) for x in sys.stdin.readline().split()]\n    numbers.sort()\n    diff = numbers[1] - numbers[0]\n    print(numbers[2] - diff)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# Get the numbers from the user\nnums = [int(num) for num in input().split()] \n\n# Sort the numbers \nnums.sort()\n\n# Get the difference between the first and second number \ndiff = nums[1] - nums[0]\n\n# Print the number that would make the arithmetic progression \nprint(nums[2] + diff)\n", "\nimport sys\n\ndef main():\n    x, y, z = map(int, sys.stdin.readline().split())\n    \n    if x == y:\n        print(z)\n    elif y == z:\n        print(x)\n    else:\n        print(y)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    \"\"\"main\"\"\"\n    num = list(map(int, input().split()))\n    num.sort()\n    if num[1] - num[0] == num[2] - num[1]:\n        print(num[2] + num[1] - num[0]) # pylint: disable=print-statement\n    else:\n        print(num[1] + num[2] - num[0]) # pylint: disable=print-statement\n\nmain()\n", "\n\n#SOLUTION\n\na, b, c = [int(x) for x in input().split()]\n\nif a > b:\n\n    a, b = b, a\nif b > c:\n\n    b, c = c, b\nif a > b:\n    a, b = b, a\n\nd = a + c - b\nprint(d)\n", "\nprint(int(input())+int(input()))\n", "\n\nimport sys\n\ndef main():\n    numbers = list(map(int, sys.stdin.readline().split(\" \")))\n    numbers.sort()\n    diff = numbers[1] - numbers[0]\n    if numbers[2] - numbers[1] == diff:\n        print numbers[2] + diff\n    elif numbers[1] - numbers[0] == diff:\n        print numbers[0] - diff\n    else:\n        print numbers[1] + diff\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split())\n    if a > b:\n        a, b = b, a\n    if a > c:\n        a, c = c, a\n    if b > c:\n        b, c = c, b\n    if c - b == b - a: print(c + b - a)\n    elif c - a == a - b: print(c - b + a)\n    else:\n        print(a + b - c) \n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n\t# Read input\n\tnumbers = [int(x) for x in input().split()]\n\n\t# Sort numbers\n\tnumbers.sort()\n\n\t# Determine progression\n\tprogression = 0\n\tif numbers[1] - numbers[0] == numbers[2] - numbers[1]:\n\t\tprogression = numbers[1] - numbers[0]\n\telse:\n\t\tprogression = numbers[2] - numbers[1]\n\n\t# Print missing number\n\tprint(numbers[2] + progression)\n\nif __name__ == \"__main__\":\n\tmain()\n", "\nimport sys\n\ndef main():\n    numbers = [int(x) for x in sys.stdin.readline().split()]\n    numbers.sort()\n    diff = numbers[1] - numbers[0]\n    print(numbers[2] + diff)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    \"\"\"main\"\"\"\n    num = int(input())\n    if num == 1:\n        print(1)\n    else:\n        print(num*(num-1)//2)\n\nmain()\n", "import sys\n\ndef main():\n    numbers = [int(x) for x in sys.stdin.readline().split()]\n    numbers.sort()\n    diff = numbers[1] - numbers[0]\n    print(numbers[2] + diff)\n\nif __name__ == '__main__':\n    main()\n", "\n# Get the numbers\nnums = list(map(int, input().split()))\n\n# Sort the numbers\nnums.sort()\n\n# Get the difference between the first and second number\ndiff = nums[1] - nums[0]\n\n# Print the number that would make the arithmetic progression\nprint(nums[2] + diff)\n", "\n\nimport sys\n\ndef main():\n    x, y, z = map(int, sys.stdin.readline().split())\n\n    if x == y:\n        print(z)\n    elif y == z:\n        print(x)\n    else:\n        print(y)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split(' '))\n    if a > b:\n        a, b = b, a\n    if a > c:\n        a, c = c, a\n    if b > c:\n        b, c = c, b\n    if c - b == b - a:\n        print(c + b - a)\n    elif c - b == a - b:\n        print(c - b + a)\n    else:\n        print(a + b - c)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split(' '))\n    if a > b:\n        a, b = b, a\n    if a > c:\n        a, c = c, a\n    if b > c:\n        b, c = c, b\n    if c - b == b - a:\n        print(c + b - a)\n    elif c - b == a - b:\n        print(c - b + a)\n    else:\n        print(a + b - c)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\n\ndef main():\n    numbers = [int(x) for x in sys.stdin.readline().split()]\n    numbers.sort()\n    diff = numbers[1] - numbers[0]\n    print(numbers[2] + diff)\n\n\nif __name__ == '__main__':\n    main()\n", "\n# Read input\nnumbers = [int(x) for x in input().split()]\n\n# Sort numbers\nnumbers.sort()\n\n# Determine progression\nprogression = 0\nif numbers[1] - numbers[0] == numbers[2] - numbers[1]:\n\tprogression = numbers[1] - numbers[0]\nelse:\n\tprogression = numbers[2] - numbers[1]\n\n# Print missing number\nprint(numbers[2] + progression)\n", "\n\nimport sys\n\ndef main():\n    numbers = list(map(int, sys.stdin.readline().split(\" \")))\n    numbers.sort()\n    diff = numbers[1] - numbers[0] \n    if numbers[2] - numbers[1] == diff:\n        print(numbers[2] + diff)\n    elif numbers[1] - numbers[0] == diff:\n        print(numbers[0] - diff)\n    else:\n        print(numbers[1] + diff)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    numbers = map(int, sys.stdin.readline().split(\" \"))\n    numbers.sort()\n    diff = numbers[1] - numbers[0]\n    if numbers[2] - numbers[1] == diff:\n        print numbers[2] + diff\n    elif numbers[1] - numbers[0] == diff:\n        print numbers[0] - diff\n    else:\n        print numbers[1] + diff\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef get_number_of_inversions(a, b, left, right):\n    number_of_inversions = 0\n    if right - left <= 1:\n        return number_of_inversions\n    ave = (left + right) // 2\n    number_of_inversions += get_number_of_inversions(a, b, left, ave)\n    number_of_inversions += get_number_of_inversions(a, b, ave, right)\n    #write your code here\n    return number_of_inversions\n\nif __name__ == '__main__':\n    input_n = int(input())\n    elements = list(map(int, input().split()))\n    assert len(elements) == input_n\n    print(get_number_of_inversions(elements, [0] * len(elements), 0, len(elements)))\n", "\n\nimport sys\n\ndef main():\n    numbers = [int(x) for x in sys.stdin.readline().split()]  # read input\n    numbers.sort()\n    diff = numbers[1] - numbers[0]\n    print(numbers[2] + diff)\n\nif __name__ == '__main__':\n    main()\n"]