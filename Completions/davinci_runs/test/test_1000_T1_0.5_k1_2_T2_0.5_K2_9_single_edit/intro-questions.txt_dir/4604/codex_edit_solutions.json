["\n\nimport sys\n\ndef main():\n    # Read from standard input\n    N = int(sys.stdin.readline())\n    A = list(map(int, sys.stdin.readline().split()))\n\n    # Check if each person's report is consistent with the others\n    for i in range(N):\n        if abs(i - A[i]) > 1:\n            print(0)\n            sys.exit()\n\n    # Initialize a list of the number of people to the left of each person\n    # and the number of people to the right of each person\n    left = [0] * N\n    right = [0] * N\n\n    # Count the number of people to the left of each person\n    for i in range(N):\n        for j in range(N):\n            if j < i:\n                left[i] += A[j]\n            elif j > i:\n                left[i] += (N - 1 - A[j])\n\n    # Count the number of people to the right of each person\n    for i in range(N):\n        for j in range(N):\n            if j < i:\n                right[i] += (N - 1 - A[j])\n            elif j > i:\n                right[i] += A[j]\n\n    # Initialize a list to keep track of the number of ways to order the people\n    # and the number of people we have ordered\n    num_ways = [0] * N\n    num_ordered = 0\n\n    # Order the people\n    while num_ordered < N:\n        # Find the first person that has not been ordered\n        i = left.index(0)\n\n        # Add this person to the ordered list\n        num_ways[num_ordered] = i + 1\n        num_ordered += 1\n\n        # Subtract the number of people to the left of this person from everyone else\n        for j in range(N):\n            left[j] -= A[i]\n            right[j] -= (N - 1 - A[i])\n\n        # Remove this person from the list\n        left[i] = -1\n        right[i] = -1\n\n    # Print the number of ways to order the people\n    print(num_ways[0])\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\nwith open(\"input.txt\", \"r\") as f:\n    # Read from standard input\n    N = int(f.readline())\n    A = list(map(int, f.readline().split()))\n\n    # Check if each person's report is consistent with the others\n    for i in range(N):\n        if abs(i - A[i]) > 1:\n            print(0)\n            sys.exit()\n\n    # Initialize a list of the number of people to the left of each person\n    # and the number of people to the right of each person\n    left = [0] * N\n    right = [0] * N\n\n    # Count the number of people to the left of each person\n    for i in range(N):\n        for j in range(N):\n            if j < i:\n                left[i] += A[j]\n            elif j > i:\n                left[i] += (N - 1 - A[j])\n\n    # Count the number of people to the right of each person\n    for i in range(N):\n        for j in range(N):\n            if j < i:\n                right[i] += (N - 1 - A[j])\n            elif j > i:\n                right[i] += A[j]\n\n    # Initialize a list to keep track of the number of ways to order the people\n    # and the number of people we have ordered\n    num_ways = [0] * N\n    num_ordered = 0\n\n    # Order the people\n    while num_ordered < N:\n        # Find the first person that has not been ordered\n        i = left.index(0)\n\n        # Add this person to the ordered list\n        num_ways[num_ordered] = i + 1\n        num_ordered += 1\n\n        # Subtract the number of people to the left of this person from everyone else\n        for j in range(N):\n            left[j] -= A[i]\n            right[j] -= (N - 1 - A[i])\n\n        # Remove this person from the list\n        left[i] = -1\n        right[i] = -1\n\n    # Print the number of ways to order the people\n    print(num_ways[0])\n", "\n\nN = int(input())\nA = list(map(int, input().split()))\n\nif A[0] != 0:\n    print(0)\n    exit()\n\nif len(set(A)) != N or len(A) != len(set(A)):\n    print(0)\n    exit()\n\ns = []\nfor i in range(N):\n    if len(s) == 0:\n        s.append(i+1)\n        continue\n    if A[i] >= len(s):\n        s.append(i+1)\n    else:\n        s.insert(A[i], i+1)\n\nfor i in range(len(s)):\n    print(s[i])\n", "\n\nN = int(input())\n\nif N == 0:\n    print(0)\n    exit()\nA = list(map(int, input().split()))\n\nif A[0] != 0:\n    print(0)\n    exit()\n\nif len(set(A)) != N:\n    print(0)\n    exit()\n\ns = []\nfor i in range(N):\n    if len(s) == 0:\n        s.append(i+1)\n        continue\n    if A[i] >= len(s):\n        s.append(i+1)\n    else:\n        s.insert(A[i], i+1)\n\nprint(s)\n", "\nN = int(input())\nA = list(map(int, input().split()))\n\nif A[0] != 0:\n    print(0)\n    exit()\n\nif len(set(A)) != N:\n    print(0)\n    exit()\n\ns = []\nfor i in range(N):\n    if len(s) == 0:\n        s.append(i+1)\n        continue\n    if A[i] >= len(s):\n        s.append(i+1)\n    else:\n        s.insert(A[i], i+1)\n\nprint(\" \".join(map(str, s)))\n", "\nN = int(input())\nA = list(map(int, input().split()))\n\nif A[0] != 0:\n    print(0)\n    exit()\n\nif len(set(A)) != N:\n    print(0)\n    exit()\n\ns = []\nfor i in range(N):\n    if len(s) == 0:\n        s.append(i+1)\n        continue\n    if A[i] >= len(s):\n        s.append(i+1)\n    else:\n        s.insert(A[i], i+1)\nprint(len(s))\n", "\n\nimport sys\n\ndef main():\n    # Read from standard input\n    N = int(sys.stdin.readline())\n    A = list(map(int, sys.stdin.readline().split()))\n\n    # Check if each person's report is consistent with the others\n    for i in range(N):\n        if abs(i - A[i]) > 1:\n            print(0)\n            sys.exit()\n\n    # Initialize a list of the number of people to the left of each person\n    # and the number of people to the right of each person\n    left = [0] * N\n    right = [0] * N\n\n    # Count the number of people to the left of each person\n    for i in range(N):\n        for j in range(N):\n            if j < i:\n                left[i] += A[j]\n            elif j > i:\n                left[i] += (N - 1 - A[j])\n\n    # Count the number of people to the right of each person\n    for i in range(N):\n        for j in range(N):\n            if j < i:\n                right[i] += (N - 1 - A[j])\n            elif j > i:\n                right[i] += A[j]\n\n    # Initialize a list to keep track of the number of ways to order the people\n    # and the number of people we have ordered\n    num_ways = [0] * N\n    num_ordered = 0\n\n    # Order the people\n    while num_ordered < N:\n        # Find the first person that has not been ordered\n        i = left.index(0)\n\n        # Add this person to the ordered list\n        num_ways[num_ordered] = i + 1\n        num_ordered += 1\n\n        # Subtract the number of people to the left of this person from everyone else\n        for j in range(N):\n            left[j] -= A[i]\n            right[j] -= (N - 1 - A[i])\n\n        # Remove this person from the list\n        left[i] = -1\n        right[i] = -1\n\n    # Print the number of ways to order the people\n    print(num_ways[0])\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n \n# Read from standard input \nN = int(sys.stdin.readline()) \nA = list(map(int, sys.stdin.readline().split())) \n \n# Check if each person's report is consistent with the others \nfor i in range(N): \n    if abs(i - A[i]) > 1: \n        print(0) \n        sys.exit() \n \n# Initialize a list of the number of people to the left of each person \n# and the number of people to the right of each person \nleft = [0] * N \nright = [0] * N \n \n# Count the number of people to the left of each person \nfor i in range(N): \n    for j in range(N): \n        if j < i: \n            left[i] += A[j] \n        elif j > i: \n            left[i] += (N - 1 - A[j]) \n \n# Count the number of people to the right of each person \nfor i in range(N): \n    for j in range(N): \n        if j < i: \n            right[i] += (N - 1 - A[j]) \n        elif j > i: \n            right[i] += A[j] \n \n# Initialize a list to keep track of the number of ways to order the people \n# and the number of people we have ordered \nnum_ways = [0] * N \nnum_ordered = 0 \n \n# Order the people \nwhile num_ordered < N: \n    # Find the first person that has not been ordered \n    i = left.index(0) \n \n    # Add this person to the ordered list \n    num_ways[num_ordered] = i + 1 \n    num_ordered += 1 \n \n    # Subtract the number of people to the left of this person from everyone else \n    for j in range(N): \n        left[j] -= A[i] \n        right[j] -= (N - 1 - A[i]) \n \n    # Remove this person from the list \n    left[i] = -1 \n    right[i] = -1 \n \n# Print the number of ways to order the people \nprint(num_ways[0]) \n", "import numpy as np\n\nN = int(input())\nA = list(map(int, input().split()))\n\nif A[0] != 0:\n    print(0)\n    exit()\n\nif len(set(A)) != N:\n    print(0)\n    exit()\n\ns = []\nfor i in range(N):\n    if len(s) == 0:\n        s.append(i+1)\n        continue\n    if A[i] >= len(s):\n        s.append(i+1)\n    else:\n        s.insert(A[i], i+1)\n\nans = np.prod(s) % (10**9 + 7)\nprint(ans)\n", "# coding: utf-8\n\nN = int(input())\nA = list(map(int, input().split()))\n\nif A[0] != 0:\n    print(0)\n    exit()\n\nif len(set(A)) != N:\n    print(0)\n    exit()\n\ns = []\nfor i in range(N):\n    if len(s) == 0:\n        s.append(i+1)\n        continue\n    if A[i] >= len(s):\n        s.append(i+1)\n    else:\n        s.insert(A[i], i+1)\n\nprint(len(s))\n", "\n\ndef dfs(s, A, i, res):\n    if len(s) == 0:\n        s.append(i+1)\n        return\n    if A[i] >= len(s):\n        s.append(i+1)\n    else:\n        s.insert(A[i], i+1)\n    if len(s) == N:\n        res.append(s)\n        return\n    for j in range(N):\n        if j not in s:\n            dfs(s, A, j, res)\n            s.pop()\n\n\n\nN = int(input())\nA = list(map(int, input().split()))\n\nif A[0] != 0:\n    print(0)\n    exit()\n\n#if len(set(A)) != N:\n#    print(0)\n#    exit()\n\ns = []\nfor i in range(N):\n    if len(s) == 0:\n        s.append(i+1)\n        continue\n    if A[i] >= len(s):\n        s.append(i+1)\n    else:\n        s.insert(A[i], i+1)\n\nprint(s)\n", "\n\nN = int(input())\nA = list(map(int, input().split()))\n\n\n\nif A[0] != 0:\n    print(0)  \n    exit()  \n\nif len(set(A)) != N:\n    print(0)\n    exit()  \n\ns = []  \nfor i in range(N):\n    if len(s) == 0:  \n        s.append(i+1)  \n        continue  \n    if A[i] >= len(s):  \n        s.append(i+1)  \n    else:\n        s.insert(A[i], i+1)  \n\nprint(s)\n", "\nimport sys\n\n# Read from standard input\nN = int(sys.stdin.readline())\nA = list(map(int, sys.stdin.readline().split()))\n\n# Check if each person's report is consistent with the others\nfor i in range(N):\n    if abs(i - A[i]) > 1:\n        print(0)\n        sys.exit()\n\n# Initialize a list of the number of people to the left of each person\n# and the number of people to the right of each person\nleft = [0] * N\nright = [0] * N\n\n# Count the number of people to the left of each person\nfor i in range(N):\n    for j in range(N):\n        if j < i:\n            left[i] += A[j]\n        elif j > i:\n            left[i] += (N - 1 - A[j])\n\n# Count the number of people to the right of each person\nfor i in range(N):\n    for j in range(N):\n        if j < i:\n            right[i] += (N - 1 - A[j])\n        elif j > i:\n            right[i] += A[j]\n\n# Initialize a list to keep track of the number of ways to order the people\n# and the number of people we have ordered\nnum_ways = [0] * N\nnum_ordered = 0\n\n# Order the people\nwhile num_ordered < N:\n    # Find the first person that has not been ordered\n    i = left.index(0)\n\n    # Add this person to the ordered list\n    num_ways[num_ordered] = i + 1\n    num_ordered += 1\n\n    # Subtract the number of people to the left of this person from everyone else\n    for j in range(N):\n        left[j] -= A[i]\n        right[j] -= (N - 1 - A[i])\n\n    # Remove this person from the list\n    left[i] = -1\n    right[i] = -1\n\n# Print the number of ways to order the people\nprint(num_ways[0])\n", "\n\nN = int(input())\nA = list(map(int, input().split()))\n\nif A[0] != 0 or len(set(A)) != N:\n    ans = 0\nelse:\n    s = []\n    for i in range(N):\n        if len(s) == 0:\n            s.append(i+1)\n            continue\n        if A[i] >= len(s):\n            s.append(i+1)\n        else:\n            s.insert(A[i], i+1)\n\n    ans = 1\n    for i in range(N):\n        ans *= i+1\n        ans %= 10**9+7\n    print(ans)\n", "\n\nimport sys\nN = int(input())\nA = list(map(int, input().split()))\nif A.count(1)>1 or A.count(N)>1:\n    print(0)\nelse:\n    print(1)\n"]