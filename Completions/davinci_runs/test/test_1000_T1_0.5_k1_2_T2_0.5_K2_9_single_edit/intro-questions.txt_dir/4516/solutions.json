["n, m = map(int, input().split())\nx = list(map(int, input().split()))\n\nfoo = [0 for _ in range(2+n)]\n\nfor i in range(1, m) :\n    p, q = x[i-1], x[i]\n\n    if p == q : continue\n\n    r = min(p, q)\n\n    s = max(p, q)\n\n    foo[0] += abs(p-q)\n    foo[r] -= abs(p-q)\n    foo[r] += max(p, q) - 1\n    foo[r+1] -= max(p, q) - 1\n\n    foo[r+1] += abs(p-q)-1\n    foo[s] -= abs(p-q)-1\n\n    foo[s] += min(p, q)\n    foo[s+1] -= min(p, q)\n\n    foo[s+1] += abs(p-q)\n    foo[n+1] -= abs(p-q)\n\n    # print(p, q, foo)\n\nfor i in range(1,n+1) :\n    foo[i] += foo[i-1]\n    print(foo[i], end=' ')\nprint()\n", "import io, sys, atexit, os\nimport math as ma\nfrom decimal import Decimal as dec\nfrom itertools import permutations\nfrom itertools import combinations\n\n\ndef li ():\n\treturn list (map (int, sys.stdin.readline ().split ()))\n\n\ndef num ():\n\treturn map (int, sys.stdin.readline ().split ())\n\n\ndef nu ():\n\treturn int (input ())\n\n\ndef find_gcd ( x, y ):\n\twhile (y):\n\t\tx, y = y, x % y\n\treturn x\n\n\ndef lcm ( x, y ):\n\tgg = find_gcd (x, y)\n\treturn (x * y // gg)\n\n\n\n\n\n\nmm = 1000000007\n\ndef solve ():\n\tt = 1\n\tfor tt in range (t):\n\t\tn,m=num()\n\t\ta=li()\n\t\tp=[0]*(n+1)\n\t\tfor i in range(0,m-1):\n\t\t\tif(a[i]==a[i+1]):\n\t\t\t\tcontinue\n\t\t\tl=a[i]\n\t\t\tr=a[i+1]\n\t\t\tif(l>r):\n\t\t\t\tl,r=r,l\n\t\t\thp=r-l\n\t\t\tkp=l-1\n\t\t\tko=r-1\n\t\t\tp[ko+1]+=hp\n\t\t\tp[n]-=hp\n\t\t\tp[kp]-=hp\n\t\t\tp[0]+=hp\n\t\t\tp[kp+1]+=hp-1\n\t\t\tp[ko]-=(hp-1)\n\t\t\tp[ko]+=(l)\n\t\t\tp[ko+1]-=(l)\n\t\t\tp[kp]+=(r-1)\n\t\t\tp[kp+1]-=(r-1)\n\t\tfor i in range(1,n+1):\n\t\t\tp[i]=p[i]+p[i-1]\n\t\tprint(*(p[0:n]))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndef __starting_point():\n\tsolve ()\n__starting_point()", "n, m = map(int, input().split())\na = list(map(int, input().split()))\n\nleft = [0] * (n + 1)\nleft_sum = left[:]\nright = left[:]\ncross = left[:]\nrang = left[:]\nans = left[:n]\ntotal = 0\n\nfor i in range(1, m):\n    p = a[i - 1]\n    q = a[i]\n    if p == q:\n        continue\n    if q < p:\n        p, q = q, p\n    total += q - p\n    rang[p] += 1\n    rang[q - 1] -= 1\n    right[p] += 1\n    left[q] += 1\n    left_sum[q] += q - p\n\nstart = 0\nfor i in range(n):\n    cross[i] = start\n    start += rang[i]\n\nans[0] = total\nfor i in range(2, n + 1):\n    ans[i - 1] = total - cross[i] + left[i] * i - 2 * left_sum[i] + (i - 1) * right[i]\nprint(*ans)", "N, M = map(int, input().split())\n*X, = map(int, input().split())\nfor i in range(M):\n    X[i] -= 1\n\nR = 0\nS = [0]*N\nT = [0]*N\nD = [0]*(N+1)\nfor i in range(M-1):\n    if X[i] < X[i+1]:\n        D[X[i]+1] += 1\n        D[X[i+1]] -= 1\n    elif X[i] > X[i+1]:\n        D[X[i+1]+1] += 1\n        D[X[i]] -= 1\n\n    d = abs(X[i] - X[i+1])\n    S[X[i]] += d\n    S[X[i+1]] += d\n    if X[i] < X[i+1]:\n        T[X[i]] += X[i+1]\n        T[X[i+1]] += X[i] + 1\n    elif X[i] > X[i+1]:\n        T[X[i]] += X[i+1] + 1\n        T[X[i+1]] += X[i]\n    R += d\nfor i in range(N-1):\n    D[i+1] += D[i]\nans = [0]*N\nfor i in range(N):\n    ans[i] = R + T[i] - S[i] - D[i]\nprint(*ans)", "import sys\n \nn,m = [int(x) for x in input().split()]\nX = [int(x) - 1 for x in input().split()]\n \ns = 0\nright = [[] for _ in range(n)]\nleft = [[] for _ in range(n)]\nfor j in range(m - 1):\n    a,b = X[j], X[j + 1]\n    if a == b:\n        continue\n    if a > b:\n       a,b = b,a \n    right[a].append(b)\n    left[b].append(a)\n    s += b - a\n \nout = [s]\nfor i in range(1, n): \n    for b in right[i - 1]:\n        s -= b\n    for b in left[i - 1]:\n        s -= b + 1\n \n    for b in right[i]:\n        s -= b - i\n    for b in left[i]:\n        s -= i - b - 1\n    \n    for b in right[i]:\n        s += b\n    for b in left[i]:\n        s += b + 1\n \n    for b in right[i - 1]:\n        s += b - (i - 1) - 1\n    for b in left[i - 1]:\n        s += (i - 1) - b\n    out.append(s)\nprint (' '.join(str(x) for x in out))", "# print(sum(map(lambda x: len(str(x).strip(\"47\")) == 0, range(int(input()) + 1))))\n\nn, m = map(int, input().split())\nadj = [0 for _ in range(n + 1)]\ncnt = [0 for _ in range(n + 1)]\nx = map(int, input().split())\nf1 = 0\nx1 = next(x)\nfor i in range(m - 1):\n    x2 = next(x)\n    minx = min(x1, x2)\n    maxx = x1 + x2 - minx\n    x1 = x2\n    dx = maxx - minx\n    if dx > 0:\n        adj[minx] += minx - 1\n        adj[maxx] += minx - dx\n        f1 += dx\n        if dx >= 2:\n            cnt[minx + 1] += 1\n            cnt[maxx] -= 1\nprint(f1, end=' ')\nc = cnt[1]\nfor i in range(2, n + 1):\n    c += cnt[i]\n    print(f1 - c + adj[i], end=' ')\n", "# print(sum(map(lambda x: len(str(x).strip(\"47\")) == 0, range(int(input()) + 1))))\n\nn, m = map(int, input().split())\nadj = [0 for _ in range(n + 1)]\ncnt = [0 for _ in range(n + 1)]\nx = map(int, input().split())\nf1 = 0\nx1 = next(x)\nfor i in range(m - 1):\n    x2 = next(x)\n    minx = min(x1, x2)\n    maxx = x1 + x2 - minx\n    x1 = x2\n    dx = maxx - minx\n    if dx > 0:\n        adj[minx] += minx - 1\n        adj[maxx] += minx - dx\n        f1 += dx\n        if dx >= 2:\n            cnt[minx + 1] += 1\n            cnt[maxx] -= 1\nprint(f1, end=' ')\nc = cnt[1]\nfor i in range(2, n + 1):\n    c += cnt[i]\n    print(f1 - c + adj[i], end=' ')\n", "n, m = map(int, input().split())\nadj = [0 for _ in range(n + 1)]\ncnt = [0 for _ in range(n + 1)]\nx = map(int, input().split())\nf1 = 0\nx1 = next(x)\nfor i in range(m - 1):\n    x2 = next(x)\n    minx = min(x1, x2)\n    maxx = x1 + x2 - minx\n    x1 = x2\n    dx = maxx - minx\n    if dx > 0:\n        adj[minx] += minx - 1\n        adj[maxx] += minx - dx\n        f1 += dx\n        if dx >= 2:\n            cnt[minx + 1] += 1\n            cnt[maxx] -= 1\nprint(f1, end=' ')\nc = cnt[1]\nfor i in range(2, n + 1):\n    c += cnt[i]\n    print(f1 - c + adj[i], end=' ')\n", "import sys\ninput = sys.stdin.readline\n\nn,m=map(int,input().split())\nX=list(map(int,input().split()))\n\nPLUS=[[0,0] for i in range(n+1)]\n\nDIFF1=[0]*(n+1)\nDIFF2=[0]*(n+1)\n\n\nfor i in range(m):\n    if 0<=i-1:\n        if X[i-1]<X[i]-1:\n            DIFF1[X[i]]+=abs(X[i-1]+1-1)-abs(X[i-1]+1-X[i])\n\n        elif X[i-1]==X[i]-1:\n            DIFF1[X[i]]+=abs(X[i-1]+1-1)-abs(1-X[i])\n\n        elif X[i-1]>=X[i]+1:\n            DIFF1[X[i]]+=abs(X[i-1]-1)-abs(X[i-1]-X[i])\n\n    if i+1<m:\n        if X[i+1]<X[i]-1:\n            DIFF1[X[i]]+=abs(X[i+1]+1-1)-abs(X[i+1]+1-X[i])\n\n        elif X[i+1]==X[i]-1:\n            DIFF1[X[i]]+=abs(X[i+1]+1-1)-abs(1-X[i])\n\n        elif X[i+1]>=X[i]+1:\n            DIFF1[X[i]]+=abs(X[i+1]-1)-abs(X[i+1]-X[i])\n\n#print(DIFF1)\n\nfor i in range(m):\n    if 0<=i-1:\n        if X[i-1]<X[i]:\n            DIFF2[X[i]]+=abs(X[i-1]-X[i])-abs(X[i-1]+1-1)\n\n        elif X[i-1]>X[i]+1:\n            DIFF2[X[i]]+=abs(X[i-1]-X[i]-1)-abs(X[i-1]-1)\n\n    if i+1<m:\n        if X[i+1]<X[i]:\n            DIFF2[X[i]]+=abs(X[i+1]-X[i])-abs(X[i+1]+1-1)\n\n        elif X[i+1]>X[i]+1:\n            DIFF2[X[i]]+=abs(X[i+1]-X[i]-1)-abs(X[i+1]-1)\n\n#print(DIFF2)\n\n\n\nANS=0\nfor i in range(1,m):\n    ANS+=abs(X[i]-X[i-1])\n\nprint(ANS,end=\" \")\n\nfor i in range(2,n+1):\n    ANS+=DIFF1[i]+DIFF2[i-1]\n    print(ANS,end=\" \")\n", "def pos(x, i):\n    if x > i:\n        return x\n    elif x < i:\n        return x + 1\n    else:\n        return 1\n\n\nn, m = map(int, input().split())\nx = list(map(int, input().split()))\ndelta_ = [0] * (n + 2)\nfunc = sum(abs(x[i + 1] - x[i]) for i in range(m - 1))\nfor i in range(m):\n    if x[i] < n:\n        if i > 0:\n            prev_l = abs(pos(x[i], x[i]) - pos(x[i - 1], x[i]))\n            cur_l = abs(pos(x[i], x[i] + 1) - pos(x[i - 1], x[i] + 1))\n            delta_[x[i] + 1] += cur_l - prev_l\n        if i < m - 1:\n            prev_r = abs(pos(x[i], x[i]) - pos(x[i + 1], x[i]))\n            cur_r = abs(pos(x[i], x[i] + 1) - pos(x[i + 1], x[i] + 1))\n            delta_[x[i] + 1] += cur_r - prev_r\n    if x[i] > 1:\n        if i > 0:\n            prev_l = abs(pos(x[i], x[i] - 1) - pos(x[i - 1], x[i] - 1))\n            cur_l = abs(pos(x[i], x[i]) - pos(x[i - 1], x[i]))\n            delta_[x[i]] += cur_l - prev_l\n        if i < m - 1:\n            prev_r = abs(pos(x[i], x[i] - 1) - pos(x[i + 1], x[i] - 1))\n            cur_r = abs(pos(x[i], x[i]) - pos(x[i + 1], x[i]))\n            delta_[x[i]] += cur_r - prev_r\n\nfor i in range(1, n + 1):\n    print(func, end=\" \")\n    func += delta_[i + 1]\n\n", "f=[]\n\ndef mdy(l,r,x):\n\tf[l]+=x\n\tf[r+1]-=x\n\nn,m=map(int,input().split())\n\nP=list(range(n+2))\n\nfor i in range(n+5):\n\tf.append(0)\n\na=list(map(int,input().split()))\n\nfor i in range(m-1):\n\tl=a[i]\n\tr=a[i+1]\n\tif l==r:\n\t\tcontinue\n\tif l>r:\n\t\t(l,r)=(r,l)\n\tmdy(1,l-1,r-l)\n\tmdy(l,l,r-1)\n\tmdy(l+1,r-1,r-l-1)\n\tmdy(r,r,l)\n\tmdy(r+1,n,r-l)\n\nfor i in P[1:n+1]:\n\tf[i]+=f[i-1]\n\tprint(f[i],end=\" \")", "def readint():\n    return [int(e) for e in input().split()]\n\nn, m = readint()\nx = readint()\n\nsm = [0] * (n+2)\n\ndef addvalue(s, e, v):\n    if s > e:\n        return\n    sm[s] += v\n    sm[e+1] -= v\n\nfor (a, b) in zip(x, x[1:]):\n    if a == b:\n        continue\n    if a > b:\n        a, b = b, a\n    addvalue(1, a-1, b - a)\n    addvalue(a, a, b-1)\n    addvalue(a+1, b-1, b - a - 1)\n    addvalue(b, b, a)\n    addvalue(b+1, n, b - a)\n\nfor i in range(1, n+2):\n    sm[i] += sm[i-1]\n\nprint(' '.join(map(str, sm[1:n+1])))\n    \n    \n", "f=[]\n \ndef mdy(l,r,x):\n\tf[l]+=x\n\tf[r+1]-=x\n \nn,m=map(int,input().split())\n \nP=list(range(n+4))\n \nfor j in range(n+7):\n\tf.append(0)\n \na=list(map(int,input().split()))\n \nfor j in range(m-1):\n\tl=a[j]\n\tr=a[j+1]\n\tif l==r:\n\t\tcontinue\n\tif l>r:\n\t\t(l,r)=(r,l)\n\tmdy(1,l-1,r-l)\n\tmdy(l,l,r-1)\n\tmdy(l+1,r-1,r-l-1)\n\tmdy(r,r,l)\n\tmdy(r+1,n,r-l)\n \nfor j in P[1:n+1]:\n\tf[j]+=f[j-1]\n\tprint(f[j],end=\" \")", "3\n\nimport array\nimport math\nimport os\nimport sys\n\n\ndef main():\n    N, M = read_ints()\n    X = [x - 1 for x in read_ints()]\n    print(*solve(N, M, X))\n\n\ndef solve(N, M, X):\n    pos = list(range(N))\n    pairs = [dict() for _ in range(N)]\n    fsum = 0\n    for i in range(M - 1):\n        a = X[i]\n        b = X[i + 1]\n        if a == b:\n            continue\n        if b not in pairs[a]:\n            pairs[a][b] = 0\n        if a not in pairs[b]:\n            pairs[b][a] = 0\n        pairs[a][b] += 1\n        pairs[b][a] += 1\n        fsum += abs(pos[a] - pos[b])\n\n    ans = [fsum]\n    fst = 0\n    for i in range(N - 1):\n        j = i + 1\n        pi = pos[i]\n        pj = pos[j]\n\n        d = 0\n        for k, c in pairs[i].items():\n            if k == j:\n                continue\n            pk = pos[k]\n            d -= abs(pi - pk) * c\n            d += abs(pj - pk) * c\n        for k, c in pairs[j].items():\n            if k == i:\n                continue\n            pk = pos[k]\n            d -= abs(pj - pk) * c\n            d += abs(pi - pk) * c\n\n        fsum += d\n        ans.append(fsum)\n        pos[i], pos[j] = pj, pi\n\n    return ans\n\n\nDEBUG = 'DEBUG' in os.environ\n\n\ndef inp():\n    return sys.stdin.readline().rstrip()\n\n\ndef read_int():\n    return int(inp())\n\n\ndef read_ints():\n    return [int(e) for e in inp().split()]\n\n\ndef dprint(*value, sep=' ', end='\\n'):\n    if DEBUG:\n        print(*value, sep=sep, end=end)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\ninput = sys.stdin.readline\n     \nn,m=map(int,input().split())\nX=list(map(int,input().split()))\n     \nPLUS=[[0,0] for i in range(n+1)]\n     \nDIFF1=[0]*(n+1)\nDIFF2=[0]*(n+1)\n     \n     \nfor i in range(m):\n    if 0<=i-1:\n        if X[i-1]<X[i]-1:\n            DIFF1[X[i]]+=abs(X[i-1]+1-1)-abs(X[i-1]+1-X[i])\n     \n        elif X[i-1]==X[i]-1:\n            DIFF1[X[i]]+=abs(X[i-1]+1-1)-abs(1-X[i])\n     \n        elif X[i-1]>=X[i]+1:\n            DIFF1[X[i]]+=abs(X[i-1]-1)-abs(X[i-1]-X[i])\n     \n    if i+1<m:\n        if X[i+1]<X[i]-1:\n            DIFF1[X[i]]+=abs(X[i+1]+1-1)-abs(X[i+1]+1-X[i])\n     \n        elif X[i+1]==X[i]-1:\n            DIFF1[X[i]]+=abs(X[i+1]+1-1)-abs(1-X[i])\n     \n        elif X[i+1]>=X[i]+1:\n            DIFF1[X[i]]+=abs(X[i+1]-1)-abs(X[i+1]-X[i])\n     \n#print(DIFF1)\n     \nfor i in range(m):\n    if 0<=i-1:\n        if X[i-1]<X[i]:\n            DIFF2[X[i]]+=abs(X[i-1]-X[i])-abs(X[i-1]+1-1)\n     \n        elif X[i-1]>X[i]+1:\n            DIFF2[X[i]]+=abs(X[i-1]-X[i]-1)-abs(X[i-1]-1)\n     \n    if i+1<m:\n        if X[i+1]<X[i]:\n            DIFF2[X[i]]+=abs(X[i+1]-X[i])-abs(X[i+1]+1-1)\n     \n        elif X[i+1]>X[i]+1:\n            DIFF2[X[i]]+=abs(X[i+1]-X[i]-1)-abs(X[i+1]-1)\n     \n#print(DIFF2)\n     \n     \n     \nANS=0\nfor i in range(1,m):\n    ANS+=abs(X[i]-X[i-1])\n     \nprint(ANS,end=\" \")\n     \nfor i in range(2,n+1):\n    ANS+=DIFF1[i]+DIFF2[i-1]\n    print(ANS,end=\" \")\n\n", "def __starting_point():\n    n, m = input().split(' ')\n    n = int(n)\n    m = int(m)\n    x = [int(i) for i in input().split(' ')]\n    pre = [0] * (n + 2)\n    tmp = 0\n    for i in range(m - 1):\n        a, b = x[i], x[i + 1]\n        if a > b:\n            a, b = b, a\n        if a == b:\n            continue\n        pre[1] += b - a\n        pre[a] -= b - a\n        pre[a] += b - 1\n        pre[a + 1] -= b - 1\n        pre[a + 1] += b - a - 1\n        pre[b] -= b - a - 1\n        pre[b] += a\n        pre[b + 1] -= a\n        pre[b + 1] += b - a\n        pre[n + 1] -= b - a\n    for i in range(1,n+1):\n        pre[i] += pre[i-1]\n        print(pre[i],end=' ')\n    print('')\n__starting_point()", "f=[]\n \ndef mdy(l,r,x):\n\tf[l]+=x\n\tf[r+1]-=x\n \nn,m=map(int,input().split())\n \nP=list(range(n+2))\n \nfor i in range(n+5):\n\tf.append(0)\n \na=list(map(int,input().split()))\n \nfor i in range(m-1):\n\tl=a[i]\n\tr=a[i+1]\n\tif l==r:\n\t\tcontinue\n\tif l>r:\n\t\t(l,r)=(r,l)\n\tmdy(1,l-1,r-l)\n\tmdy(l,l,r-1)\n\tmdy(l+1,r-1,r-l-1)\n\tmdy(r,r,l)\n\tmdy(r+1,n,r-l)\n \nfor i in P[1:n+1]:\n\tf[i]+=f[i-1]\n\tprint(f[i],end=\" \")", "n,m=map(int,input().split())\nx=[int(x1) for x1 in input().split()]\n\npre1=[0]*(n+2)\npre2=[0]*(n+1)\npre3=[0]*(n+1)\n\nfor i in range(0,len(x)-1):\n    a=min(x[i],x[i+1])\n    b=max(x[i],x[i+1])\n\n    if(b-a>1):\n\n        pre1[a+1]+=1\n        pre1[b]+=-1\n\n    if(a!=b):\n        pre2[a]+=(b-1)-(b-a)#(b-a-1)+b\n        pre3[b]+=a-(b-a)\n\n\n\n\nt=0\nfor i in range(0,len(pre1)):\n    pre1[i]=t+pre1[i]\n    t=pre1[i]\n\n#print('pre1',pre1)\n#print('pre2',pre2)\n#print('pre3',pre3)\n\n\nans=0\nfor i in range(0,m-1):\n    ans+=abs(x[i]-x[i+1])\n\n\n\nprint(ans,end=\" \")\nfor i in range(2,n+1):\n    temp=ans+pre2[i]+pre3[i]+-pre1[i]\n    print(temp,end=\" \")\n\nprint(\" \")\n    \n", "n,m=map(int,input().split())\nx=[int(x1) for x1 in input().split()]\n\npre1=[0]*(n+2)\npre2=[0]*(n+1)\npre3=[0]*(n+1)\n\nfor i in range(0,len(x)-1):\n    a=min(x[i],x[i+1])\n    b=max(x[i],x[i+1])\n\n    if(b-a>1):\n\n        pre1[a+1]+=1\n        pre1[b]+=-1\n\n    if(a!=b):\n        pre2[a]+=(b-1)-(b-a)\n        pre3[b]+=a-(b-a)\n\n\nt=0\nfor i in range(0,len(pre1)):\n    pre1[i]=t+pre1[i]\n    t=pre1[i]\n\n\nans=0\nfor i in range(0,m-1):\n    ans+=abs(x[i]-x[i+1])\n\n\n\nprint(ans,end=\" \")\nfor i in range(2,n+1):\n    temp=ans+pre2[i]+pre3[i]+-pre1[i]\n    print(temp,end=\" \")\n\nprint(\" \")\n    \n", "import math\nimport functools\nfrom collections import defaultdict\n\nn, m = map(int, input().split(' '))\n\nv = [i for i in map(int, input().split(' '))]\n\ns = [0 for i in range(n + 2)]\n\nfor i in range(m - 1):\n    if abs(v[i] - v[i + 1]) < 2:\n        continue\n    s[min(v[i], v[i + 1]) + 1] += 1\n    s[max(v[i], v[i + 1])] -= 1\n\np = 0\n\nfor i in range(m - 1):\n    p += abs(v[i] - v[i + 1])\n\nans = [0 for i in range(n + 2)]\n\nd = 0\n\nfor i in range(n + 2):\n    d += s[i]\n    ans[i] = d\n\na = defaultdict(lambda : 0, {})\nb = defaultdict(lambda : [], {})\n\nfor i in range(m - 1):\n    if v[i] == v[i + 1]:\n        continue\n    a[min(v[i], v[i + 1])] += 1\n    b[max(v[i], v[i + 1])].append(min(v[i], v[i + 1]))\n\nfor i in range(1, n + 1):\n    q = p\n    q = ans[i]\n    q = a[i] * (i - 1)\n    q = len(b[i]) * i\n    q = 2 * sum(b[i])\n    print(p -\n          ans[i] +\n          a[i] * (i - 1) -\n          len(b[i]) * i +\n          2 * sum(b[i]), end=' ')", "import math\nimport functools\nfrom collections import defaultdict\n\nn, m = map(int, input().split(' '))\n\nv = [i for i in map(int, input().split(' '))]\n\ns = [0 for i in range(n + 2)]\n\nfor i in range(m - 1):\n    if abs(v[i] - v[i + 1]) < 2:\n        continue\n    s[min(v[i], v[i + 1]) + 1] += 1\n    s[max(v[i], v[i + 1])] -= 1\n\np = 0\n\nfor i in range(m - 1):\n    p += abs(v[i] - v[i + 1])\n\nans = [0 for i in range(n + 2)]\n\nd = 0\n\nfor i in range(n + 2):\n    d += s[i]\n    ans[i] = d\n\na = defaultdict(lambda : 0, {})\nb = defaultdict(lambda : [], {})\n\nfor i in range(m - 1):\n    if v[i] == v[i + 1]:\n        continue\n    a[min(v[i], v[i + 1])] += 1\n    b[max(v[i], v[i + 1])].append(min(v[i], v[i + 1]))\n\nfor i in range(1, n + 1):\n    q = p\n    q = ans[i]\n    q = a[i] * (i - 1)\n    q = len(b[i]) * i\n    q = 2 * sum(b[i])\n    print(p -\n          ans[i] +\n          a[i] * (i - 1) -\n          len(b[i]) * i +\n          2 * sum(b[i]), end=' ')", "#bouncipie\ndef readint():\n    return [int(e) for e in input().split()]\n \nn, m = readint()\nx = readint()\n \nsm = [0] * (n+2)\n \ndef addvalue(s, e, v):\n    if s > e:\n        return\n    sm[s] += v\n    sm[e+1] -= v\n \nfor (a, b) in zip(x, x[1:]):\n    if a == b:\n        continue\n    if a > b:\n        a, b = b, a\n    addvalue(1, a-1, b - a)\n    addvalue(a, a, b-1)\n    addvalue(a+1, b-1, b - a - 1)\n    addvalue(b, b, a)\n    addvalue(b+1, n, b - a)\n \nfor i in range(1, n+2):\n    sm[i] += sm[i-1]\n \nprint(' '.join(map(str, sm[1:n+1])))\n"]