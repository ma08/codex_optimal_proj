["\n# get input\nmessage = input()\nkey = input()\n\n# create the alphabet list\nalphabet = []\nfor i in range(26):\n    alphabet.append(chr(65+i))\n\n# create the decrypted message\ndecrypted = \"\"\nfor i in range(len(message)):\n    if i % 2 == 0:\n        decrypted += alphabet[(alphabet.index(message[i]) - alphabet.index(key[i]) + 26) % 26]\n    else:\n        decrypted += alphabet[(alphabet.index(message[i]) + alphabet.index(key[i]) + 26) % 26]\n\n# print the decrypted message\nprint(decrypted)\n", "\nmessage = input()\nkey = input()\n\ndecrypted = []\n\nfor i in range(len(message)):\n    shift = ord(key[i]) - 65\n    if i % 2 == 0:\n        decrypted.append(chr((ord(message[i]) - shift - 65) % 26 + 65))\n    else:\n        decrypted.append(chr((ord(message[i]) + shift - 65) % 26 + 65))\n\nprint(''.join(decrypted))\n", "\ndef main():\n    message = input()\n    key = input()\n    decrypted = \"\"\n    for i in range(len(message)):\n        if i % 2 == 0:\n            decrypted += chr((ord(message[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n        else:\n            decrypted += chr((ord(message[i]) - ord(key[i]) - 26) % 26 + ord('a'))\n    print(decrypted)\n\nmain()\n", "\n\ndef main():\n    message = input()\n    key = input()\n    decrypted = \"\"\n    for i in range(len(message)):\n        if i % 2 == 0:\n            decrypted += chr((ord(message[i]) - ord(key[i % len(key)]) + 26) % 26 + ord('A'))\n        else:\n            decrypted += chr((ord(message[i]) - ord(key[i % len(key)]) - 26) % 26 + ord('A'))\n    print(decrypted)\n\nmain()\n", "\n\ndef vigenereCipherDecrypt(cipher, key):\n    i = 0 \n    decrypted = \"\"\n    for char in cipher:\n        if char.isalpha():\n            if i % 2 == 0:\n                decrypted += chr(ord(char) + (ord(key[i]) - ord('A')))\n            else:\n                decrypted += chr(ord(char) - (ord(key[i]) - ord('A')))\n            i += 1\n        else:\n            decrypted += char\n    return decrypted\n\nprint(vigenereCipherDecrypt(input(), input().upper()))\n", "\nprint(\"hello\")\n", "\ndef shift(c, key, i):\n    if i % 2 == 0:\n        return chr((ord(c) - ord('A') + ord(key[i]) - ord('A')) % 26 + ord('A'))\n    else:\n        return chr((ord(c) - ord('A') - ord(key[i]) + ord('A')) % 26 + ord('A'))\n\nc = input()\nk = input()\nprint(\"\".join(shift(c[i], k, i) for i in range(len(c))))\n", "from sys import stdin\n\n\nmessage = stdin.readline().rstrip('\\n')\nkey = stdin.readline().rstrip('\\n')\n\ndecrypted = []\n\nfor i in range(len(message)):\n    shift = ord(key[i]) - 65\n    if i % 2 == 0:\n        decrypted.append(chr((ord(message[i]) - shift - 65) % 26 + 65))\n    else:\n        decrypted.append(chr((ord(message[i]) + shift - 65) % 26 + 65))\n\nprint(''.join(decrypted))\n", "\n\ndef decrypt(message, key):\n    decrypted = \"\"\n    for i in range(len(message)):\n        if i % 2 == 0:\n            decrypted += chr((ord(message[i]) - ord(key[i]) + 26) % 26 + ord('A'))\n        else:\n            decrypted += chr((ord(message[i]) - ord(key[i]) - 26) % 26 + ord('A'))\n    return decrypted\n\nprint(decrypt(input(), input()))\n", "\n\nmessage = input()\nkey = input()\ndecrypted = []\n\nfor i in range(len(message)):\n    shift = ord(key[i]) - 65\n    if i % 2 == 0:\n        decrypted.append(chr((ord(message[i]) - shift - 65) % 26 + 65))\n    else:\n        decrypted.append(chr((ord(message[i]) + shift - 65) % 26 + 65))\n\nprint(''.join(decrypted))\n", "\nmessage = input()\nkey = input()\ndecrypted = []\nfor i in range(len(message)):\n    shift = ord(key[i]) - 65\n    if i % 2 == 0:\n        decrypted.append(chr((ord(message[i]) - shift - 65) % 26 + 65))\n    else:\n        decrypted.append(chr((ord(message[i]) + shift - 65) % 26 + 65))\nprint(''.join(decrypted))\n", "import sys\n\nmessage = sys.stdin.readline().strip()\nkey = sys.stdin.readline().strip()\noutput = \"\"\nfor i in range(len(message)):\n    if (i % 2 == 0):\n        output += chr((ord(message[i]) - ord(key[i]) + 26) % 26 + ord('A'))\n    else:\n        output += chr((ord(message[i]) - ord(key[i]) - 26) % 26 + ord('A'))\nprint(output)\n", "\ndef shift(c, key, i):\n    if i % 2 == 0:\n        return chr((ord(c) - ord('A') + ord(key[i]) - ord('A')) % 26 + ord('A'))\n    else:\n        return chr((ord(c) - ord('A') - (ord(key[i]) - ord('A'))) % 26 + ord('A'))\n\n\ndef main():\n    c = input()\n    k = input()\n    print(\"\".join(shift(c[i], k, i) for i in range(len(c))))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    message = input()\n    key = input()\n    decrypted = \"\"\n    for i in range(len(message)):\n        if i % 2 == 0:\n            decrypted += chr((ord(message[i]) - ord(key[i]) + 26) % 26 + ord('A'))\n        else:\n            decrypted += chr((ord(message[i]) - ord(key[i]) - 26) % 26 + ord('A'))\n    print(decrypted)\n\nmain()\n", "\n# get input\nmessage = input()\nkey = input()\n\n# create the alphabet list\nalphabet = []\nfor i in range(26):\n    alphabet.append(chr(65 + i))\n\n# create the decrypted message\ndecrypted = \"\"\nfor i in range(len(message)):\n    if i % 2 == 0:\n        decrypted += alphabet[(alphabet.index(message[i]) - alphabet.index(key[i]) + 26) % 26]\n    else:\n        decrypted += alphabet[(alphabet.index(message[i]) + alphabet.index(key[i]) + 26) % 26]\n\n# print the decrypted message\nprint(decrypted)\n", "\n\ndef vigenereCipherDecrypt(cipher, key):\n    i = 0 \n    decrypted = \"\"\n    for char in cipher:\n        if i % 2 == 0:\n            decrypted += chr(ord(char) + (ord(key[i]) - ord('A')))\n        else:\n            decrypted += chr(ord(char) - (ord(key[i]) - ord('A')))\n        i += 1\n    return decrypted\n\nprint(vigenereCipherDecrypt(input(), input()))\n", "\n\ndef main():\n    message = input()\n    key = input()\n    decrypted = \"\"\n    for i in range(len(message)):\n        if i % 2 == 0:\n            decrypted += chr((ord(message[i]) - ord(key[i]) + 26) % 26 + ord(\"A\"))\n        else:\n            decrypted += chr((ord(message[i]) - ord(key[i]) - 26) % 26 + ord(\"A\"))\n    print(decrypted)\n\nmain()\n", "\nmessage = input()\nkey = input()\n\ndecrypted = []\n\nfor i in range(len(message)):\n    shift = ord(key[i % len(key)]) - 65\n    if i % 2 == 0:\n        decrypted.append(chr((ord(message[i]) - shift - 65) % 26 + 65))\n    else:\n        decrypted.append(chr((ord(message[i]) + shift - 65) % 26 + 65))\n\nprint(''.join(decrypted))\n", "\n\ndef decrypt(c, k):\n    decrypted = \"\"\n    for i in range(len(c)):\n        if i % 2 == 0:\n            decrypted += chr((ord(c[i]) - ord(k[i]) + 26) % 26 + ord('a'))\n        else:\n            decrypted += chr((ord(c[i]) - ord(k[i]) - 26) % 26 + ord('a'))\n    return decrypted\n\nprint(decrypt(input(), input()))\n", "\n\ndef shift(c, key, i):\n    if i % 2 == 0:\n        return chr((ord(c) - ord('A') + ord(key[i]) - ord('A')) % 26 + ord('A'))\n    else:\n        return chr((ord(c) - ord('A') - ord(key[i]) + ord('A')) % 26 + ord('A'))\n\nc = input(\"Enter the text to be encrypted: \")\nk = input(\"Enter the key: \")\nprint(\"Encrypted text: \"+\"\".join(shift(c[i], k, i) for i in range(len(c))))\n", "\n\ndef vigenereCipherDecrypt(cipher, key):\n    i = 0\n    decrypted = \"\"\n    for char in cipher:\n        if i % 2 != 0:\n            decrypted += chr(ord(char) + (ord(key[i]) - ord('A')))\n        else:\n            decrypted += chr(ord(char) - (ord(key[i]) - ord('A')))\n        i += 1\n    return decrypted\n\nprint(vigenereCipherDecrypt(input(), input()))\n", "\n\n# get input\nmessage = input()\nkey = input()\n\n# create the alphabet list\nalphabet = []\nfor i in range(26):\n    alphabet.append(chr(65 + i))\n\n# create the decrypted message\ndecrypted = \"\"\nfor i in range(len(message)):\n    if i % 2 == 0:\n        decrypted += alphabet[(alphabet.index(message[i]) - alphabet.index(key[i]) + 26) % 26]\n    else:\n        decrypted += alphabet[(alphabet.index(message[i]) + alphabet.index(key[i]) + 26) % 26]\n\n# print the decrypted message\nprint(decrypted)\n", "\n\ndef vigenereCipherDecrypt(cipher, key):\n    i = 0\n    decrypted = \"\"\n    for char in cipher:\n        if i % 2 == 0:\n            decrypted += chr(ord(char) + (ord(key[i]) - ord('A')))\n        else:\n            decrypted += chr(ord(char) - (ord(key[i]) - ord('A')))\n        i += 1\n    return decrypted\n\nprint(vigenereCipherDecrypt(input(), input()))\n", "\n\n# get inputs\nmessage = input()\nkey = input()\n\n# create the alphabet list\nalphabet = []\nfor i in range(26):\n    alphabet.append(chr(65+i))\n\n# create the decrypted message\ndecrypted = \"\"\nfor i in range(len(message)):\n    if i % 2 == 0:\n        decrypted += alphabet[(alphabet.index(message[i]) - alphabet.index(key[i]) + 26) % 26]\n    else:\n        decrypted += alphabet[(alphabet.index(message[i]) + alphabet.index(key[i]) + 26) % 26]\n\n# print the decrypted message\nprint(decrypted)\n", "\ndef shift(c, key, i):\n    if i % 2 == 0:\n        return chr((ord(c) - ord('A') + ord(key[i % len(key)]) - ord('A')) % 26 + ord('A'))\n    else:\n        return chr((ord(c) - ord('A') - (ord(key[i % len(key)]) - ord('A'))) % 26 + ord('A'))\n\nc = input()\nk = input()\nprint(\"\".join(shift(c[i], k, i) for i in range(len(c))))\n", "\n\ndef vigenereCipherDecrypt(cipher, key, keyLength):\n    i = 0\n    decrypted = \"\"\n    for char in cipher:\n        if i % keyLength == 0:\n            decrypted += chr(ord(char) - (ord(key[i % keyLength]) - ord('A')))\n        else:\n            decrypted += chr(ord(char) + (ord(key[i % keyLength]) - ord('A')))\n        i += 1\n    return decrypted\n\nprint(vigenereCipherDecrypt(input(), input(), len(input())))\n", "\n\ndef main():\n    message = input()\n    key = input()\n    decrypted = \"\"\n    for i in range(len(message)):\n        if i % 2 == 0:\n            decrypted += chr((ord(message[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n        else:\n            decrypted += chr((ord(message[i]) - ord(key[i]) - 26) % 26 + ord('a'))\n    print(decrypted)\n\nmain()\n", "\ndef vigenereCipherDecrypt(cipher, key):\n    i = 0\n    decrypted = \"\"\n    for char in cipher:\n        if i % 2 == 0:\n            decrypted += chr(ord(char) + (ord(key[i]) - ord('A')))\n        else:\n            decrypted += chr(ord(char) - (ord(key[i]) - ord('A')))\n        i += 1\n    return decrypted\n\nprint(vigenereCipherDecrypt(input(), input()))\n", "\n\ndef decrypt(c, k):\n    decrypted = \"\"\n    for i in range(len(c)):\n        if i % 3 == 0:\n        elif i % 3 == 1:\n            decrypted += chr((ord(c[i]) - ord(k[i]) - 26) % 26 + ord('A'))\n            decrypted += chr((ord(c[i]) - ord(k[i]) + 26) % 26 + ord('A'))\n        else:\n            decrypted += chr((ord(c[i]) - ord(k[i]) - 26) % 26 + ord('A'))\n    return decrypted\n\nprint(decrypt(input(), input()))\n", "\"\"\"\n    File: file.py\n    Author: Kevin Falconett\n    Purpose: encrypts a message using the vigenere cipher\n\"\"\"\n\ndef shift(c, key, i):\n    if i % 2 == 0:\n        return chr((ord(c) - ord('A') + ord(key[i]) - ord('A')) % 26 + ord('A'))\n    else:\n        return chr((ord(c) - ord('A') - (ord(key[i]) - ord('A'))) % 26 + ord('A'))\n\ndef main():\n    \"\"\"\n        main function that gets inputs from user and prints the encrypted message\n    \"\"\"\n    c = input()\n    k = input()\n    print(\"\".join(shift(c[i], k, i) for i in range(len(c))))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef decrypt(c, k):\n    decrypted = ''\n    for i in range(len(c)):\n        if i % 2 == 0:\n            decrypted += chr((ord(c[i]) - ord(k[i]) + 26) % 26 + ord('a'))\n        else:\n            decrypted += chr((ord(c[i]) - ord(k[i]) - 26) % 26 + ord('a'))\n    return decrypted\n\nprint(decrypt(input(), input()))\n", "\ndef decrypt(c, k):\n    decrypted = \"\"\n    for i in range(len(c)):\n        if i % 2 == 0:\n            decrypted += chr((ord(c[i]) - ord(k[i]) + 26) % 26 + ord(\"A\"))\n        else:\n            decrypted += chr((ord(c[i]) - ord(k[i]) - 26) % 26 + ord(\"A\"))\n    return decrypted\n\nprint(decrypt(input(), input()))\n", "\n\ndef shift(c, key, i):\n    if i % 2 == 0:\n        return chr((ord(c) - ord('A') + ord(key[i]) - ord('A')) % 26 + ord('A'))\n    else:\n        return chr((ord(c) - ord('A') - (ord(key[i]) - ord('A'))) % 26 + ord('A'))\n\nc = input()\nk = input()\nprint(\"\".join(shift(c[i], k, i) for i in range(len(c)))) \n", "\n\ndef vigenereCipherDecrypt(cipher, key):\n    i = 0\n    decrypted = \"\"\n    for char in cipher:\n        if i % 2 == 0:\n            decrypted += chr(ord(char) + (ord(key[i % len(key)]) - ord('A')))\n        else:\n            decrypted += chr(ord(char) - (ord(key[i % len(key)]) - ord('A')))\n        i += 1\n    return decrypted\n\nprint(vigenereCipherDecrypt(input(), input()))\n", "import sys\n\n\ndef main():\n    c = input()\n    k = input()\n\n    def shift(c, key, i):\n        if i % 2 == 0:\n            return chr((ord(c) - ord('A') + ord(key[i]) - ord('A')) % 26 + ord('A'))\n        else:\n            return chr((ord(c) - ord('A') - (ord(key[i]) - ord('A'))) % 26 + ord('A'))\n\n    print(\"\".join(shift(c[i], k, i) for i in range(len(c))))\n\nif __name__ == '__main__':\n    sys.exit(main())\n", "\n\n# get input\nmessage = input()\nkey = input()\n\n# create the alphabet list\nalphabet = []\nfor i in range(26):\n    alphabet.append(chr(65+i))\n\n# create the decrypted message\ndecrypted = \"\"\n    if message[i] == \" \":\n        decrypted += \" \"\n        continue\nfor i in range(len(message)):\n    if i % 2 == 0:\n        decrypted += alphabet[(alphabet.index(message[i]) - alphabet.index(key[i]) + 26) % 26]\n    else:\n        decrypted += alphabet[(alphabet.index(message[i]) + alphabet.index(key[i]) + 26) % 26]\n\n# print the decrypted message\nprint(decrypted)\n", "\ndef decrypt(message, key):\n    decrypted = \"\"\n    for i in range(len(message)):\n        if i % 2 == 0:\n            decrypted = decrypted + chr((ord(message[i]) - ord(key[i]) + 26) % 26 + ord('A'))\n        else:\n            decrypted = decrypted + chr((ord(message[i]) - ord(key[i]) - 26) % 26 + ord('A'))\n    return decrypted\n\nprint(decrypt(input(), input()))\n", "\ndef decrypt(c, k):\n    decrypted = \"\"\n    for i in range(len(c)):\n        if i % 2 == 0:\n            decrypted += chr((ord(c[i]) - ord(k[i]) + 26) % 26 + ord('A'))\n        else:\n            decrypted += chr((ord(c[i]) - ord(k[i]) - 26) % 26 + ord('A'))\n    return decrypted\n\nprint(decrypt(input(), input()))\n", "import fileinput\n\nimport sys\n\nmessage = fileinput.input().readline().strip()\nkey = fileinput.input().readline().strip()\n\noutput = \"\"\nfor i in range(len(message)):\n    if (i % 2 == 0):\n        output += chr((ord(message[i]) - ord(key[i]) + 26) % 26 + ord('A'))\n    else:\n        output += chr((ord(message[i]) - ord(key[i]) - 26) % 26 + ord('A'))\nprint(output)\n", "\ndef decrypt(c, k):\n\tdecrypted = \"\"\n\tfor i in range(len(c)):\n\t\tif i % 2 == 0:\n\t\t\tdecrypted += chr((ord(c[i]) - ord(k[i]) + 26) % 26 + ord('A'))\n\t\telse:\n\t\t\tdecrypted += chr((ord(c[i]) - ord(k[i]) - 26) % 26 + ord('A'))\n\treturn decrypted\n\t\nc = input()\nk = input()\nprint(decrypt(c, k))\n", "\n\ndef decrypt(message, key, offset):\n    decrypted = \"\"\n    for i in range(len(message)):\n        if i % 2 == 0:\n            decrypted = decrypted + chr((ord(message[i]) - ord(key[i]) + offset) % 26 + ord('A'))\n        else:\n            decrypted = decrypted + chr((ord(message[i]) - ord(key[i]) - offset) % 26 + ord('A'))\n    return decrypted\n\nprint(decrypt(input(), input()))\n", "import sys\nmessage = sys.stdin.readline().strip()\nkey = sys.stdin.readline().strip()\noutput = \"\"\n\n\nfor i in range(len(message)):\n    if (i % 2 == 0):\n        output += chr((ord(message[i]) - ord(key[i]) + 26) % 26 + ord('A'))\n    else:\n\n        output += chr((ord(message[i]) - ord(key[i]) - 26) % 26 + ord('A'))\nprint(output)\n", "\n\ndef main():\n    message = input(\"Enter the encrypted message: \")\n    key = input(\"Enter the key: \")\n    decrypted = \"\"\n    for i in range(len(message)):\n        if i % 2 == 0:\n            decrypted += chr((ord(message[i]) - ord(key[i % len(key)]) + 26) % 26 + ord('A'))\n        else:\n            decrypted += chr((ord(message[i]) - ord(key[i % len(key)]) - 26) % 26 + ord('A'))\n    print(decrypted)\n\nmain()\n", "\n\nimport sys\n\nmessage = sys.stdin.readline().strip()\nkey = sys.stdin.readline().strip()\n\noutput = \"\"\nfor i in range(len(message)):\n    if (i % 2 == 0):\n        output += chr((ord(message[i]) - ord(key[i]) + 26) % 26 + ord('A')) # + 26 to avoid negative numbers\n    else:\n        output += chr((ord(message[i]) - ord(key[i]) - 26) % 26 + ord('A')) # - 26 to avoid negative numbers\nprint(output)\n", "import sys\n\ndef main():\n    message = sys.stdin.readline().strip()\n    key = sys.stdin.readline().strip()\n    decrypted = \"\"\n    for i in range(len(message)):\n        if i % 2 == 0:\n            decrypted += chr((ord(message[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n        else:\n            decrypted += chr((ord(message[i]) - ord(key[i]) - 26) % 26 + ord('a'))\n    print(decrypted)\n\nmain()\n", "\n\ndef vigenereCipherDecrypt(cipher, key):\n    i = 0\n    decrypted = \"\"\n    for char in cipher:\n        if i % 2 == 0:\n            decrypted += chr(ord(char) + (ord(key[i]) - ord('a')))\n        else:\n            decrypted += chr(ord(char) - (ord(key[i]) - ord('a')))\n        i += 1\n    return decrypted\n\nprint(vigenereCipherDecrypt(input(), input()))\n", "\ndef shift(c, key, i):\n    if i % 2 == 0:\n        return chr((ord(c) - ord('A') + ord(key[i]) - ord('A')) % 26 + ord('A'))\n    else:\n        return chr((ord(c) - ord('A') - (ord(key[i]) - ord('A'))) % 26 + ord('A'))\n\nc = input()\nk = input()\nprint(\"\".join(shift(c[i], k, i) for i in range(len(c))))\n", "\n\ndef decrypt(message, key):\n    message = message.upper()\n    key = key.upper()\n    decrypted_message = \"\"\n    for i in range(len(message)): \n        x = (ord(message[i]) - ord(key[i])) % 26\n        x += 65\n        decrypted_message += chr(x) \n    return decrypted_message\n\nprint(decrypt(input(), input()))\n", "\n\n# get input\nmessage = input()\nkey = input()\n\n# create the alphabet list\nalphabet = []\nfor i in range(26):\n    alphabet.append(chr(65+i))\n\n# create the decrypted message\ndecrypted = \"\"\nfor i in range(len(message)):\n    if i % 2 == 0:\n        decrypted += alphabet[(alphabet.index(message[i]) - alphabet.index(key[i % len(key)]) + 26) % 26]\n    else:\n        decrypted += alphabet[(alphabet.index(message[i]) + alphabet.index(key[i % len(key)]) + 26) % 26]\n\n# print the decrypted message\nprint(decrypted)\n", "\nmessage = input()\nkey = input()\ndecrypted = []\n\nfor i in range(len(message)):\n    shift = ord(key[i]) - 65\n    if i % 2 == 0:\n        decrypted.append(chr((ord(message[i]) - shift - 65) % 26 + 65))\n    else:\n        decrypted.append(chr((ord(message[i]) + shift - 65) % 26 + 65))\n\nprint(''.join(decrypted))\n", "\n\ndef decrypt(message, key):\n    decrypted = \"\"\n    for i in range(len(message)):\n        if i % 2 == 0:\n            decrypted = decrypted + chr((ord(message[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n        else:\n            decrypted = decrypted + chr((ord(message[i]) - ord(key[i]) - 26) % 26 + ord('a'))\n    return decrypted\n\nprint(decrypt(input(), input()))\n", "\nmessage = input()\nkey = input()\ndecrypted=[]\nfor i in range(len(message)):\n    shift = ord(key[i]) - 65 \n    if i % 2 == 0:\n        decrypted.append(chr((ord(message[i]) - shift - 65) % 26 + 65))\n    else:\n        decrypted.append(chr((ord(message[i]) + shift - 65) % 26 + 65))\nprint(''.join(decrypted))\n", "\n\n# get input from the user\nmessage = input(\"Enter the message: \")\nkey = input(\"Enter the key: \")\n\n# create an alphabet list\nalphabet = []\nfor i in range(26):\n    alphabet.append(chr(65+i))\n\n# create a decrypted message\ndecrypted = \"\"\nfor i in range(len(message)):\n    if i % 2 == 0:\n        decrypted += alphabet[(alphabet.index(message[i]) - alphabet.index(key[i]) + 26) % 26]\n    else:\n        decrypted += alphabet[(alphabet.index(message[i]) + alphabet.index(key[i]) + 26) % 26]\n\n# print the decrypted message to the user\nprint(\"The decrypted message is: \" + decrypted)\n", "\n\n# get input\nmessage = input()\nkey = input()\n\n# create the alphabet list and the decrypted message\ndecrypted = \"\"\nalphabet = []\nfor i in range(26):\n    alphabet.append(chr(65+i))\nfor i in range(len(message)):\n    if i % 2 == 0:\n        decrypted += alphabet[(alphabet.index(message[i]) - alphabet.index(key[i]) + 26) % 26]\n    else:\n        decrypted += alphabet[(alphabet.index(message[i]) + alphabet.index(key[i]) + 26) % 26]\n\n# print the decrypted message\nprint(decrypted)\n", "\n\nimport sys\n\nmessage = sys.stdin.readline().strip()\nkey = sys.stdin.readline().strip()\n\noutput = \"\"\nfor i in range(len(message)):\n    if (i % 2 == 0):\n        output += chr((ord(message[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n    else:\n        output += chr((ord(message[i]) - ord(key[i]) - 26) % 26 + ord('a'))\nprint(output)\n", "\n", "#!/usr/bin/env python3\n\nimport sys\n\nmessage = sys.stdin.readline().strip()\nkey = sys.stdin.readline().strip()\n\noutput = \"\"\nfor i in range(len(message)):\n    if (i % 2 == 0):\n        output += chr((ord(message[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n    else:\n        output += chr((ord(message[i]) - ord(key[i]) - 26) % 26 + ord('a'))\nprint(output)\n"]