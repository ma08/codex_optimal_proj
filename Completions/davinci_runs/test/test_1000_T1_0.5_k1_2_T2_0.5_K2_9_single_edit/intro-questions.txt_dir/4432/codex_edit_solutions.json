["\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    assert n == len(a)\n    dp = [0] * n\n    dp[0] = a[0]\n    for i in range(1, n):\n        dp[i] = max(dp[i - 1] + a[i], a[i])\n    print(max(dp))\n\n\nif __name__ == '__main__':\n    main()\n", "import sys\nimport math\n\n\n\ndef get_next_prime(n):\n    if n <= 1:\n        return 2\n    for i in range(n+1, 2*n):\n        for j in range(2, int(math.sqrt(i))+1):\n            if i % j == 0:\n                break\n        else:\n            return i\n    return -1\n\ndef main(n):\n    if n == 1:\n        return 1\n    return get_next_prime(n)\n\n\ndef main2():\n    for line in sys.stdin:\n        n = int(line.strip())\n        print(main(n))\n\n\nif __name__ == \"__main__\":\n    main2()\n", "\nimport sys\n\ndef main():\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n = int(sys.stdin.readline())\n        a = list(map(int, sys.stdin.readline().split()))\n        assert n == len(a)\n        dp = [0] * n\n        dp[0] = a[0]\n        for i in range(1, n):\n            dp[i] = max(dp[i-1] + a[i], a[i])\n        print(max(dp))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n = int(sys.stdin.readline())\n        a = list(map(int, sys.stdin.readline().split()))\n        assert n == len(a)\n        dp = [0] * n\n        dp[0] = a[0]\n        for i in range(1, n):\n            dp[i] = max(dp[i-1] + a[i], a[i])\n        print(max(dp))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = [0] + a\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        dp[i] = max(dp[i - 1] + a[i], max(a[i], 0))\n    print(max(dp))\n", "#!/usr/bin/env python3\n\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = [0] + a\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        dp[i] = max(dp[i - 1] + a[i], max(a[i], 0))\n    print(max(dp))\n", "#!python3\n\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = [0] + a\n    dp = [0] * (n + 1)\n    for i in range(1, n + 1):\n        dp[i] = max(dp[i - 1] + a[i], max(a[i], 0))\n    print(max(dp))\n", "\nimport sys\n\ndef main():\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n = int(sys.stdin.readline())\n        a = list(map(int, sys.stdin.readline().split()))\n        assert n == len(a)\n        print(max(a))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    for _ in range(int(input())):\n        n = int(input())\n        a = list(map(int, input().split()))\n        a = [0] + a\n        dp = [0] * (n + 1)\n        for i in range(1, n + 1):\n            dp[i] = max(dp[i - 1] + a[i], max(a[i], 0))\n        print(max(dp))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n\nimport sys\n\ndef main():\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n = int(sys.stdin.readline())\n        a = list(map(int, sys.stdin.readline().split()))\n        assert n == len(a)\n        dp = [0] * n\n        dp[0] = a[0]\n        for i in range(1, n):\n            dp[i] = max(dp[i-1] + a[i], a[i])\n        print(max(dp))\n\nif __name__ == '__main__':\n    main()\n", "\n\nn = int(input())\na = list(map(int, input().split()))\na = [0] + a\ndp = [0] * (n + 1)\nfor i in range(1, n + 1):\n    dp[i] = max(dp[i - 1] + a[i], max(a[i], 0))\nprint(max(dp))\n", "import sys\n\ndef main():\n    t = int(sys.stdin.readline())\n    for _ in range(t):\n        n = int(sys.stdin.readline())\n        a = list(map(int, sys.stdin.readline().split()))\n        assert n == len(a)\n        dp = [0] * n\n        dp[0] = a[0]\n        for i in range(1, n):\n            dp[i] = max(dp[i-1] + a[i], a[i])\n        print(max(dp))\nif __name__ == '__main__':\n    main()\n"]