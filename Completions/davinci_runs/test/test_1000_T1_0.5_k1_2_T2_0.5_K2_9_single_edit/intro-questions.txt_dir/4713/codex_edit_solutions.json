["\ndef main():\n    n = int(input())\n    s = input()\n    x = 0\n    max_x = 0\n    for i in range(n):\n        if s[i] == 'I':\n            x += 1\n        else:\n            x -= 1\n        max_x = max(max_x, x)\n    print(max_x)\n\nif __name__ == '__main__':\n    main()\n", "\nfrom sys import stdin\n\nn = int(stdin.readline())\ns = stdin.readline()\n\nx = 0\nmax_x = 0\n\nfor i in range(n):\n    if s[i] == 'I':\n        x += 1\n    else:\n        x -= 1\n    if x > max_x:\n        max_x = x\n\nprint(max_x)\n", "import sys\nfrom collections import defaultdict, Counter, deque\nfrom itertools import accumulate, permutations, combinations\nfrom operator import itemgetter\nfrom bisect import bisect_left, bisect_right, bisect\nfrom heapq import heappop, heappush\nfrom fractions import gcd\nfrom math import ceil, floor, sqrt, cos, sin, pi\nfrom copy import deepcopy\n\n# If you use recursive call, uncomment this code\n#sys.setrecursionlimit(10**6)\n\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\nfrom sys import stdin\n\nN = int(stdin.readline())\nS = stdin.readline()\nx = 0\nmax_x = 0\n\nfor i in range(N):\n    if S[i] == 'I':\n        x += 1\n    else:\n        x -= 1\n    if x > max_x:\n        max_x = x\nprint(max_x)\n", "\nfrom sys import stdin\n\nN = int(stdin.readline())\nS = stdin.readline().rstrip()\n\ncnt = 0\nmax_cnt = 0\n\nfor i in range(N):\n    if S[i] == 'I':\n        cnt += 1\n    else:\n        cnt -= 1\n    if cnt > max_cnt:\n        max_cnt = cnt\n\nprint(max_cnt)\n", "\nfrom sys import stdin\n\nN = int(stdin.readline())\nS = stdin.readline()\n\nx = 0\nmax_x = 0\n\nfor i in range(N):\n    if S[i] == 'I':\n        x += 1\n    else:\n        x -= 1\n    if x > max_x:\n        max_x = x\n\nprint(max_x)\n", "\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin.readline\n\nN = int(stdin.readline())\nS = stdin.readline().strip()\n\nx = 0\nmax_x = 0\n\nfor i in range(N):\n    if S[i] == 'I':\n        x += 1\n    else:\n        x -= 1\n    if x > max_x:\n        max_x = x\n\nprint(max_x)\n", "\n\ndef main():\n    n = int(input())  # number of elements\n    a = list(map(int, input().split()))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input(\"\"))\n    s = input(\"\")\n    x = 0\n    max_x = 0\n    for i in range(n):\n        if s[i] == 'I':\n            x += 1\n        else:\n            x -= 1\n        max_x = max(max_x, x)\n    print(max_x)\n\nif __name__ == '__main__':\n    main()\n", "\n\nn, m = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\nk = int(input())\n\nfor i in range(n):\n    for j in range(m):\n        if a[i][j] == k:\n            print(i + 1, j + 1)\n            exit()\n\nprint(\"0 0\")\n", "\n\ndef main():\n    a, b = map(int, input().split())\n    print(a + b)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    s = input()\n    x = 0\n    max_x = 0\n    for i in range(n):\n        if s[i] == \"I\":\n            x += 1\n        else:\n            x -= 1\n        max_x = max(max_x, x)\n    print(max_x)\n\nif __name__ == \"__main__\":\n    main()\n", "\nfrom sys import stdin\n\nN = int(stdin.readline())\nS = stdin.readline()\n\nx = 0\nmax_x = 0\n\nfor i in range(N):\n    if S[i] == 'I\\n':\n        x += 1\n    else:\n        x -= 1\n    if x > max_x:\n        max_x = x\n\nprint(max_x)\n", "\n#\n# from sys import stdin\n#\n# N = int(stdin.readline())\n# S = stdin.readline()\n#\n# x = 0\n# max_x = 0\n#\n# for i in range(N):\n#     if S[i] == 'I':\n#         x += 1\n#     else:\n#         x -= 1\n#     if x > max_x:\n#         max_x = x\n#\n# print(max_x)\n", "\n\ndef main():\n    n = int(input())\n    s = input()\n    x = 0\n    max_x = 0\n    for i in range(n):\n        if s[i] == 'I': \n            x += 1\n        else:\n            x -= 1\n        max_x = max(max_x, x)\n    print(max_x)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    print('Hello World')\n\nif __name__ == '__main__':\n    main()\n"]