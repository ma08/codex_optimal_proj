["import itertools\nn = int(input())\nTako = list(map(int, input().split()))\nans = 0\nfor x,y in itertools.combinations(Tako,2):\n    ans += x*y\n\nprint(ans)", "def ans143(N:int, d:str):\n    d=list(map(int,d.split()))\n    ans_count=0\n    while len(d)>=2:\n        for i in range(len(d)-1):\n            ans_count+=d[0]*d[i+1]\n        del d[0]\n    return ans_count\n\nN=int(input())\nd=input()\nprint((ans143(N,d)))\n\n", "N = int(input())\nd = list(map(int, input().split()))\ns = 0\n\nfor i in range(N):\n    for j in range(i+1, N):\n        s += d[i] * d[j]\n\nprint(s)", "n = int(input())\nd = list(map(int, input().split()))\nprint(sum(d[i] * d[j] for i in range(n) for j in range(i+1, n)))", "n = int(input())\nxlist = list(map(int,input().split()))\nsum = 0\nfor i in range(n):\n  for j in range(i+1,n):\n    sum+=xlist[i]*xlist[j]\nprint(sum)", "n = int(input())\nd = list(map(int,input().split()))\nans = 0\nfor i in range(n-1):\n    for j in range(i+1,n):\n        ans += d[i] * d[j]\nprint(ans)", "N = int(input())\nd  = [int(n) for n in input().split()]\n\nans = 0\nfor i in range(N-1):\n    for j in range(i+1, N):\n        ans += d[i] * d[j]\n\nprint(ans)", "t = input()\nd = list(map(int, input().split()))\ncure = 0\nfor i in range(len(d)):\n  for s in range(i+1, len(d)):\n    cure += d[i] * d[s]\nprint(cure)", "N = int(input())\nD = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    for j in range(i + 1, N):\n        ans += D[i] * D[j]\nprint(ans)", "n = int(input())\nd = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n  for j in range(i+1,n):\n    ans += d[i] * d[j]\n    \n\nprint(ans)", "\nn=int(input())\nd=list(map(int,input().split()))\ns=0\nfor i in range(n):\n    for j in range(i+1,n):\n        s += d[i]*d[j]\nprint(s)", "n = int(input())\nli = list(map(int,input().split()))\nsu = 0\nfor i in range(n):\n    for j in range(i+1,n):\n        su += li[i]*li[j]\n\nprint(su)", "n=int(input())\nd=list(map(int,input().split()))\nd2=[m**2 for m in d]\nprint((sum(d)**2-sum(d2))//2)", "N = int(input())\nd = list(map(int,input().split()))\n\nans = 0\nfor i in range(N):\n    for j in range(i+1, N):\n        ans += d[i]*d[j]\n\nprint(ans)", "N=(int(input()))\nd=list(map(int,input().split()))\nans=0\nfor i in range(N):\n  for j in range(i+1,N):\n    ans+=d[i]*d[j]\nprint(ans)", "n=int(input())\nd=list(map(int, input().split()))\nans=0\nfor i in range(n-1):\n  for j in range(i+1,n):\n    ans += d[i]*d[j]\nprint(ans)", "n=int(input());a=[*map(int,input().split())];ans=0\nfor i in range(n):\n  for j in range(i+1,n):\n    ans+=a[i]*a[j]\nprint(ans)", "n = int(input())\nd = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n    for j in range(i+1,n):\n        ans += d[i] * d[j]\nprint(ans)", "# l,r,d =map(int, input().split()))\nn = int(input())\nd = list(map(int, input().split()))\n\n# s = [map(int, input()) for i in range(3)]\nans =0\n\nfor i in range(0,n):\n  \n    for j in range(i+1,n):\n       \n        ans += d[i]*d[j]\n\nprint (ans)", "N = int(input())\nd = list(map(int,input().split()))\n\nans = 0\nfor i in range(N):\n    for j in range(i+1,N):\n        ans += d[i]*d[j]\n\nprint(ans)", "n = int(input())\nD = list(map(int, input().split()))\nans = 0\n\nfor i in range(n-1):\n  for j in range(i+1, n):\n    ans += D[i]*D[j]\n\nprint(ans)", "n = int(input())\nd = list(map(int, input().split()))\n\ns = 0\n\nfor i in range(n):\n    for j in range(n):\n        if i < j:\n            s += (d[i] * d[j])\n\nprint(s)", "N = int(input())\nd = list(map(int, input().split()))\nS = [0]\nfor i in range(N):\n  S.append(S[i] + d[i])\nans = 0\nfor j in range(N):\n  ans += d[-j-1] * S[-j-2]\nprint(ans)", "n=int(input())\nd=list(map(int, input().split()))\nsum=0\nfor i in range(n-1):\n  for j in range(i+1,n):\n    sum+=d[i]*d[j]\nprint(sum)", "import itertools\nN = int(input())\nd = list(map(int, input().split()))\n\nlst = list(itertools.combinations(d, 2))\ntotal = 0\nfor n in lst:\n    c = n[0] * n[1]\n    total += c\nprint(total)", "N = int(input())\nL = list(map(int, input().split()))\nsum = 0\n\nfor x in range(N):\n  for y in range(x+1, N):\n    sum += L[x]*L[y]\nprint(sum)", "N=int(input())\nD=list(map(int,input().split()))\nSum=0\n\nfor i in range(N-1):\n  for j in range(i+1,N):\n    A=D[i]*D[j]\n    Sum+=A\n    \nprint(Sum)", "from itertools import permutations\nn = int(input())\nd = [int(i) for i in input().split()]\nt = sum([i[0] * i[1] for i in permutations(d, 2)]) // 2\nprint(t)", "n=int(input())\nd=list(map(int,input().split()))\nans=0\nfor i in range(n):\n    for j in range(i+1,n):\n        ans+=d[i]*d[j]\nprint(ans)", "n = int(input())\nd = list(map(int,input().split()))\nml = []\nfor i in range(n):\n  for j in range(i+1,n):\n    ml.append(d[i]*d[j])\nprint(sum(ml))", "n=int(input())\nd=list(map(int,input().split()))\nans=0\nfor i in range(n):\n    for j in range(i+1,n):\n        ans+=d[i]*d[j]\nprint(ans)", "N = int(input())\nd = list(map(int, input().split()))\ndef hp ():\n    count = 0\n    for i in range(N-1):\n        for j in range(i+1,N):\n            count = count + d[i] * d[j]\n    return count\nprint(hp())", "n = int(input())\nd=list(map(int,input().split()))\nd2=d[:]\ntotal=0\nfor i in range(len(d)):\n    for j in range(i,len(d2)):\n        if i != j:\n            total+=d[i]*d[j]\nprint(total)", "N = int(input())\nd = list(map(int, input().split()))\n\ns = 0\nfor i in range(N):\n    for j in range(i+1, N):\n        s += d[i] * d[j]\n\nprint(s)", "n = int(input())\nlist_d = [int(i) for i in input().split()]\nans = 0\nfor i in range(0, n - 1):\n    ans += list_d[i] * sum(list_d[i + 1:])\nprint(ans)", "import itertools\ntotal = 0\nrecovery = 0\nn = int(input())\ndi = list(map(int, input().split()))\nfor x in itertools.combinations(di, 2):\n  #print(x)\n  recovery = x[0] * x[1]\n  total += recovery\n  #print(total)\nprint(total)", "a=int(input())\nb=0\nc=list(map(int,input().split()))\nfor i in range(a):\n  for k in range(a):\n    b=b+c[i]*c[k]\nfor u in range(a):\n  b=b-c[u]*c[u]\nprint(int(b/2))", "n = int(input())\na = [int(x) for x in input().split()]\nres = 0\nfor i in range(n):\n  for j in range(i+1,n):\n    res += a[i] * a[j]\nprint(res)", "N = int(input())\nD = list(map(int, input().split()))\nfrom itertools import accumulate\nprint((sum(list(d*c for d, c in zip(D[1:], accumulate(D))))))\n", "import itertools\n\nN=int(input())\nD=list(map(int, input().split()))\n\ntakocombi=list(itertools.combinations([i for i in range(N)],2))\n\nans=0\nfor h in range(len(takocombi)):\n\tans+=D[takocombi[h][0]]*D[takocombi[h][1]]\n\nprint(ans)", "from itertools import combinations\nfrom typing import List\n\n\ndef answer(n: int, d: List[int]) -> int:\n    return sum(d[x] * d[y] for x, y in combinations(list(range(n)), 2))\n\n\ndef main():\n    n = int(input())\n    d = list(map(int, input().split()))\n    print((answer(n, d)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from itertools import combinations as C\n\nN = int(input())\nd = list(map(int, input().split()))\n\nD = list(C(d, 2))\n\nans = 0\n\nfor i in D:\n    ans += i[0] * i[1]\n\nprint(ans)", "n = int(input())\nd = [int(x) for x in input().split()]\nprint((sum(d[i]*d[j] for i in range(n) for j in range(i+1, n))))\n", "n=int(input())\nd=list(map(int,input().split()))\ns=0\nfor i in range(n-1):\n    for j in range(i+1,n):\n        s+=d[i]*d[j]\nprint(s)\n", "n = int(input())\nd = list(map(int, input().split()))\na = 0\nfor i in range(n):\n    for j in range(n):\n        if i != j:\n            a += d[i] * d[j]\nprint(a // 2)", "n = int(input())\nd = list(map(int, input().split()))\n\nans = 0\nfor i in range(len(d) - 1):\n    for k in range(i + 1, len(d)):\n        ans += d[i] * d[k]\n\nprint(ans)\n", "N = int(input())\nd_list = list(map(int, input().split()))\n\nans = 0\n\nfor i in range(N-1):\n    for j in range(i+1, N):\n        ans += d_list[i] * d_list[j]\n\nprint(ans)\n", "N = int(input())\nd = list(map(int, input().split()))\nS = [d[0]]\nfor i in range(N-1):\n  S.append(S[i] + d[i+1])\nans = 0\nfor j in range(N-1):\n  ans += d[j+1] * S[j]\nprint(ans)", "from itertools import combinations as cmb\nimport numpy as np\n\n# \u305f\u3053\u713c\u304d\u306e\u500b\u6570N\u3092\u53d6\u5f97\nN = int(input())\n\n# \u5404\u305f\u3053\u713c\u304d\u306e\u5473\u3092\u53d6\u5f97\nd = list(map(int, input().split()))\n\n# \u305f\u3053\u713c\u304d\u306e\u5168\u7d44\u307f\u5408\u308f\u305b\u3092\u4f5c\u308a\u3001x\u3068y\u306b\u5206\u96e2\u3055\u305b\u308b\nx, y = np.array(list(cmb(d, 2))).T\n\n# \u4f53\u529b\u306e\u56de\u5fa9\u91cf\u306e\u7dcf\u548c\u3092\u6c42\u3081\u3066\u8868\u793a\nprint(np.sum(x*y))", "n=int(input())\nd=list(map(int,input().split()))\ns=0\nfor i in range(n-1):\n    for j in range(i+1,n):\n        s+=d[i]*d[j]\nprint(s)\n", "n=int(input())\nd=list(map(int,input().split()))\nsm=0\nfor i in range(len(d)-1):\n  for j in range(i+1,len(d)):\n    sm+=d[i]*d[j]\nprint(sm)", "N = int(input())\nD = list(map(int,input().split()))\n\nans = 0\n\nfor i in range(N):\n    tako1 = D[i]\n    \n    for j in range(0,i):\n        tako2 = D[j]\n        \n        ans += tako1*tako2\n    \n    for j in range(i+1,N):\n        tako2 = D[j]\n        \n        ans += tako1*tako2\n\nprint(ans//2)", "import numpy as np\nimport itertools as itr\n\n# \u5165\u529b\u3092\u53d7\u3051\u53d6\u308b\nN = int(input())\nD = list(map(int, input().split()))\n\n# \u305f\u3053\u713c\u304d\u306e\u5168\u7d44\u307f\u5408\u308f\u305b\u3092\u4f5c\u6210\u3059\u308b\ntako_cmb = np.array(list(itr.combinations(D,2)))\n\n# (x,y)\n# (x,y)\n# (x,y)\n\n# \u5168\u7d44\u307f\u5408\u308f\u305b\u306e\u8ee2\u7f6e\u884c\u5217\u3092\u4f5c\u6210\u3057\u3066\u3001\u5473x,\u5473y\u306b\u5206\u3051\u308b\nxy = tako_cmb.T\n\n# (x,x,x)\n# (y,y,y)\n\n# x\u3068y\u306e\u7a4d\u306e\u7dcf\u548c\u3092\u6c42\u3081\u308b\nresult = np.sum(xy[0]*xy[1])\n\n# \u7d50\u679c\u3092\u51fa\u529b\u3059\u308b\nprint(result)", "import itertools as itr\nn = input()\nd = map(int, input().split())\n\nk = itr.combinations(d, 2)\nsum_k = sum([a * b for a,b in k])\nprint(sum_k)", "N = int(input())\nd = list(map(int, input().split()))\n\nans = 0\n\nfor i in range(N):\n  for j in range(N):\n    if i != j:\n      ans += d[i]*d[j]\n      \nprint((ans//2))\n", "#!/usr/bin/env python3\ndef main():\n    from itertools import combinations\n\n    _ = int(input())\n    d = [int(x) for x in input().split()]\n\n    print((sum([a * b for a, b in combinations(d, 2)])))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import itertools\ndef resolve():\n    n = int(input())\n    d = tuple(map(int,input().split()))\n    ans = 0\n    for a in itertools.combinations(d,2):\n        ans += a[0]*a[1]\n    print(ans)\nresolve()", "import itertools\nn = int(input())\n\na = list(map(int, input().split()))\n\npattern = itertools.combinations(a,2)\ntotal = 0\nfor i,j in pattern:\n    total += i*j\nprint(total)", "import itertools\n\nN = int(input())\nD = list(map(int, input().split()))\n\nres = 0\nfor i, j in itertools.combinations(D, 2):\n    res += i*j\nprint(res)\n", "n=int(input())\nd=list(map(int,input().split()))\nans=0\nfor i in range(n-1):\n  for j in range(i+1,n):\n    ans+=d[i]*d[j]\nprint(ans)", "N = int(input())\nL = list(map(int, input().split()))\nS=0\nfor i in range(N-1):\n  for j in range(i+1, N):\n    S += L[i] * L[j]\nprint(S)", "import itertools\nn=int(input())\nl=list(map(int,input().split()))\nc=itertools.combinations(l,2)\nans=sum(x*y for x,y in c)\nprint(ans)", "n = int(input())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n  for j in range(i + 1, n):\n    s += a[i] * a[j]\nprint(s)", "\nN = int(input())\nD = list(map(int, input().split()))\nans = 0\n\nfor i in range(len(D)-1):\n    for j in range(i+1, len(D)):\n        ans += D[i]*D[j]\nprint(ans)\n", "N = int(input())\nD = list(map(int, input().split()))\n\nANS = 0\nfor i in range(N):\n    for j in range(N):\n        if i >= j:\n            continue\n        ANS = ANS + D[i] * D[j]\nprint(ANS)", "import itertools as it\n# \u5165\u529b\nN = int(input())\nd = list(map(int, input().split()))\n\n# 2\u3064\u306e\u7d44\u307f\u5408\u308f\u305b\u306e\u5168\u30d1\u30bf\u30fc\u30f3\u3092\u53d6\u5f97\u3059\u308b\nk = list(it.combinations(d, 2))\n# \u7d44\u307f\u5408\u308f\u305b\u306e\u639b\u3051\u7b97\u3092\u30ea\u30b9\u30c8\u306b\u8a70\u3081\u3066sum\nn = [a*b for a, b in k]\n\nprint(sum(n))", "N=int(input())\nD=list(map(int,input().split()))\nprint((sum(D)**2-sum(d*d for d in D))//2)", "n=int(input())\nd=list(map(int,input().split()))\nsam=0\n\nfor i in range(n):\n  for j in range(i+1,n): \n    sam=sam+(d[i]*d[j]) \n    \n\nprint(sam)", "N=int(input())\nD=list(map(int,input().split()))\nprint(sum([D[i]*D[j] for i in range(N) for j in range(i+1,N)]))", "N = int(input())\nlsd = list(map(int,input().split()))\nans = 0\nfor i in range(N):\n    for j in range(i+1,N):\n        ans += lsd[i]*lsd[j]\nprint(ans)\n", "N = int(input())\nD = list(map(int, input().split()))\nfrom itertools import combinations\nans = 0\nfor i , j in combinations(D,2):\n    ans += i*j\nprint(ans)", "from itertools import combinations\n\nn = int(input())\nd = list(map(int, input().split()))\nans = 0\nd = combinations(d, 2)\nfor i, j in d:\n    ans += i*j\nprint(ans)\n", "import itertools\nn = int(input())\nd = list(map(int, input().split()))\nM = []\nans = 0\n\nfor v in itertools.combinations(d, 2):\n    M.append(list(v))\n\nfor m in M:\n    ans += m[0]*m[1]\nprint(ans)", "N=int(input())\nd=list(map(int,input().split()))\nprint((sum(d[i]*d[j] for i in range(N) for j in range(i+1,N))))\n", "n = int(input())\nd = [int(x) for x in input().split()]\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        ans += d[i]*d[j]\nprint(ans)\n", "N = int(input())\n\ndn = list(map(int,input().split()))\nans = 0\n\nfor i in range(N):\n    for j in range(N):\n        if i != j:\n            ans += dn[i] * dn[j]\nprint(ans//2)", "#!/usr/bin/env python3\nfrom collections import defaultdict, Counter\nfrom itertools import product, groupby, count, permutations, combinations\nfrom math import pi, sqrt\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right\nfrom string import ascii_lowercase\nfrom functools import lru_cache\nimport sys\nsys.setrecursionlimit(500000)\nINF = float(\"inf\")\nYES, Yes, yes, NO, No, no = \"YES\", \"Yes\", \"yes\", \"NO\", \"No\", \"no\"\ndy4, dx4 = [0, 1, 0, -1], [1, 0, -1, 0]\ndy8, dx8 = [0, -1, 0, 1, 1, -1, -1, 1], [1, 0, -1, 0, 1, 1, -1, -1]\n\n\ndef inside(y, x, H, W):\n    return 0 <= y < H and 0 <= x < W\n\n\ndef ceil(a, b):\n    return (a + b - 1) // b\n\n\ndef sum_of_arithmetic_progression(s, d, n):\n    return n * (2 * s + (n - 1) * d) // 2\n\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n\ndef lcm(a, b):\n    g = gcd(a, b)\n    return a / g * b\n\n\ndef solve():\n    N = int(input())\n    D = list(map(int, input().split()))\n    ans = 0\n    for i in range(N):\n        for j in range(i + 1, N):\n            ans += D[i] * D[j]\n    print(ans)\n\n\ndef main():\n    solve()\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n=int(input())\nd=list(map(int,input().split()))\nans=0\nfor i in range(n):\n  for j in range(i+1,n):\n    ans+=d[i]*d[j]\n    \nprint(ans)", "N = int(input())\nd = list(map(int,input().split()))\nkaifuku = 0\n\n\nfor i in range(N):\n    for j in range(i+1,N):\n        kaifuku += d[i]*d[j]\n\nprint(kaifuku)", "n=int(input())\nd=list(map(int,input().split()))\n\nsum=0\nfor i in range(0,n):\n    for j in range(i+1,n):\n        sum+=d[i]*d[j]\n\nprint(sum)\n", "n = int(input())\nlis = list(map(int, input().split()))\nans = 0\n\n\nfor i in range(0, n-1):\n  for t in range(i+1, n):\n    con = lis[i] * lis[t]\n    ans += con\n    \n\nprint(ans)", "n = int(input())\nd = list(map(int, input().split()))\nans = 0\nfor i in range(n-1):\n    for j in range(i+1, n):\n        ans += d[i]*d[j]\nprint(ans)\n", "n=int(input())\nd=list(map(int,input().split()))\n\nc=0\nfor i in range(n-1):\n    for j in range(i+1,n):\n        c+=(d[i]*d[j])\nprint(c)", "from itertools import combinations\nn = int(input())\nd = list(map(int,input().split()))\nc = combinations(d,2)\nsumd = 0\nfor x,y in c:\n    sumd += x*y\nprint(sumd)", "N = int(input())\nd = list(map(int, input().split()))\nans = 0\nfor i in range(N):\n  for j in range(i+1, N):\n    if i != j:\n      ans += d[i] * d[j]\nprint(ans)", "N = int(input())\nd = list(map(int, input().split()))\n\nans = 0\nfor i in range(N-1):\n  for j in range(i+1, N):\n    ans += d[i] * d[j]\nprint(ans)", "n=int(input())\nD=list(map(int,input().split()))\nans = 0\nfor i in range(n-1):\n  for j in range(i+1,n):\n    ans += D[i]*D[j]\nprint(ans)\n", "from itertools import combinations\nn = int(input())\nd = list(map(int, input().split()))\ncomb = combinations(d, 2)\nres = 0\nfor x, y in comb:\n    res += x * y\nprint(res)", "N = int(input())\nd = [int(i) for i in input().split()]\nans = 0\nfor i in range(N):\n    for j in range(i+1,N):\n        ans += d[i]*d[j]\nprint(ans)", "from itertools import combinations\ninput()\nd = list(map(int,input().split()))\ncomb = combinations(d,2)\ndsum = 0\nfor a,b in comb:\n    dsum += a*b\n\nprint(dsum)", "N = int(input())\nd = list(map(int, input().split()))\n \nans = 0\nfor i in range(N):\n  for j in range(i+1, N):\n    ans += d[i]*d[j]\n    \nprint(ans)\n\n", "N = int(input())\nd_list = list(map(int, input().split()))\nans=0\nfor i in range(N):\n    for j in range(i):\n        ans += d_list[i]*d_list[j]\nprint(ans)", "# \u5165\u529b\u3092\u53d7\u3051\u308b\nN = int(input())\nd = list(map(int,input().split()))\n\n# d\u304b\u30892\u500b\u9078\u3073\u3001\u7dcf\u548c\u3092\u3068\u308b\nimport itertools\nrec = 0\nfor tako in itertools.combinations(d, 2):\n    rec += tako[0]*tako[1]\nprint(rec)", "N = int(input())\nA = list(map(int, input().split()))\nans = 0\nfor i in range(N):\n  for j in range(i+1, N):\n    ans += A[i] * A[j]\nprint(ans)", "N = int(input())\nd = [int(x) for x in input().split()]\n\nresult = 0\nfor i in range(N) :\n    for j in range(i+1,N) :\n        result += d[i]*d[j]\nprint(result)", "n = int(input())\n\noisi = list(map(int,input().split()))\n\ntotal = 0\nfor i in range(0,n-1):\n  for j in range(i+1,n):\n    total += oisi[i] * oisi[j]\n    \nprint(total)\n", "N = int(input())\ndlst = list(map(int, input().split()))\nans = 0\nfor i in range(len(dlst)-1):\n    k = dlst.pop()\n    ans = ans + k*sum(dlst)\n\nprint(ans)", "N = int(input())\nd = list(map(int, input().split()))\n\n# \u5168\u63a2\u7d22\u3059\u308b\nans = 0\nfor i in range(N):\n  for j in range(i+1, N):\n    ans += d[i]*d[j]\n    \nprint(ans)"]