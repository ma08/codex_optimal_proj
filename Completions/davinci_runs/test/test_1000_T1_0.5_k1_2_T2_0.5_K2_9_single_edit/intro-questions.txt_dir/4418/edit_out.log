2022-04-16 07:12:49.201172 num operations 1
2022-04-16 07:12:49.201194 size on input set 1
2022-04-16 07:13:32.647142 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef is_good(a, n):\n    if n % 6 != 0:\n        return False\n    else:\n        a.sort()\n        k = 0\n        while k < n:\n            if a[k] != 4:\n                return False\n            k += 1\n            if a[k] != 8:\n                return False\n            k += 1\n            if a[k] != 15:\n                return False\n            k += 1\n            if a[k] != 16:\n                return False\n            k += 1\n            if a[k] != 23:\n                return False\n            k += 1\n            if a[k] != 42:\n                return False\n            k += 1\n        return True\n\ndef get_min_number_of_elements_to_remove(a, n):\n    if is_good(a, n):\n        return 0\n    else:\n        return n\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    print(get_min_number_of_elements_to_remove(a, n))\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef is_good(a, n):\n    a.sort()\n    k = 0\n    while k < n:\n        if a[k] != 4:\n            return False\n        k += 1\n        if a[k] != 8:\n            return False\n        k += 1\n        if a[k] != 15:\n            return False\n        k += 1\n        if a[k] != 16:\n            return False\n        k += 1\n        if a[k] != 23:\n            return False\n        k += 1\n        if a[k] != 42:\n            return False\n        k += 1\n    return True\n\ndef get_min_number_of_elements_to_remove(a, n):\n    if is_good(a, n):\n        return 0\n    else:\n        return n\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = [int(x) for x in sys.stdin.readline().split()]\n    print(get_min_number_of_elements_to_remove(a, n))\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\n\ndef is_good(a, n):\n    if n % 6 != 0:\n        return False\n    else:\n        a.sort()\n        k = 0\n        while k < n:\n            if a[k] != 4:\n                return False\n            k += 1\n            if a[k] != 8:\n                return False\n            k += 1\n            if a[k] != 15:\n                return False\n            k += 1\n            if a[k] != 16:\n                return False\n            k += 1\n            if a[k] != 23:\n                return False\n            k += 1\n            if a[k] != 42:\n                return False\n            k += 1\n        return True\n\n\ndef get_min_number_of_elements_to_remove(a, n):\n    if is_good(a, n):\n        return 0\n    else:\n        return n\n\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = [int(x) for x in sys.stdin.readline().split()]\n    print(get_min_number_of_elements_to_remove(a, n))\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef get_min_number_of_elements_to_remove(a, n):\n    return n\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = [int(x) for x in sys.stdin.readline().split()]\n    print(get_min_number_of_elements_to_remove(a, n))\n"
    },
    {
      "index": 4,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n\n\"\"\"\nCreated on Wed Apr  3 21:54:11 2019\n\n@author: jennifer\n\"\"\"\n\ndef main():\n    print(\"hello world\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\n    '''\n    >>> is_good([4, 8, 15, 16, 23, 42], 6)\n    True\n    >>> is_good([4, 8, 15, 16, 23, 42, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97], 30)\n    True\n    >>> is_good([4, 8, 15, 16, 23, 42, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97], 60)\n    True\n    >>> is_good([4, 8, 15, 16, 23, 42, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97], 90)\n    True\n    >>> is_good([4, 8, 15, 16, 23, 42, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97], 120)\n    True\n    >>> is_good([4, 8, 15, 16, 23, 42, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97], 150)\n    True\n    >>> is_good([4, 8, 15, 16, 23, 42, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17\ndef is_good(a, n):\n    if n % 6 != 0:\n        return False\n    else:\n        a.sort()\n        k = 0\n        while k < n:\n            if a[k] != 4:\n                return False\n            k += 1\n            if a[k] != 8:\n                return False\n            k += 1\n            if a[k] != 15:\n                return False\n            k += 1\n            if a[k] != 16:\n                return False\n            k += 1\n            if a[k] != 23:\n                return False\n            k += 1\n            if a[k] != 42:\n                return False\n            k += 1\n        return True\n\ndef get_min_number_of_elements_to_remove(a, n):\n    if is_good(a, n):\n        return 0\n    else:\n        return n\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = [int(x) for x in sys.stdin.readline().split()]\n    print(get_min_number_of_elements_to_remove(a, n))\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\ndef is_good(a, n):\n    if n % 6 != 0:\n        return False\n    else:\n        a.sort()\n        k = 0\n        while k < n:\n            if a[k] != 4:\n                return False\n            k += 1\n            if a[k] != 8:\n                return False\n            k += 1\n            if a[k] != 15:\n                return False\n            k += 1\n            if a[k] != 16:\n                return False\n            k += 1\n            if a[k] != 23:\n                return False\n            k += 1\n            if a[k] != 42:\n                return False\n            k += 1\n        return True\n\ndef get_min_number_of_elements_to_remove(a, n):\n    if is_good(a, n):\n        return 0\n    else:\n        return n\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = [int(x) for x in sys.stdin.readline().split()]\n    print(get_min_number_of_elements_to_remove(a, n))\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\n\nif __name__ == '__main__':\n    print('Hello World')\n"
    },
    {
      "index": 8,
      "text": "\nimport sys\n\ndef is_good(a):\n    a.sort()\n    k = 0\n    while k < len(a):\n        if a[k] != 4:\n            return False\n        k += 1\n        if a[k] != 8:\n            return False\n        k += 1\n        if a[k] != 15:\n            return False\n        k += 1\n        if a[k] != 16:\n            return False\n        k += 1\n        if a[k] != 23:\n            return False\n        k += 1\n        if a[k] != 42:\n            return False\n        k += 1\n    return True\n\ndef get_min_number_of_elements_to_remove(a):\n    if is_good(a):\n        return 0\n    else:\n        return len(a)\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = [int(x) for x in sys.stdin.readline().split()]\n    print(get_min_number_of_elements_to_remove(a))\n"
    }
  ],
  "created": 1650093169,
  "object": "edit"
}
2022-04-16 07:13:32.647585 fix syntax errors 9 ["\nimport sys\n\ndef is_good(a, n):\n    if n % 6 != 0:\n        return False\n    else:\n        a.sort()\n        k = 0\n        while k < n:\n            if a[k] != 4:\n                return False\n            k += 1\n            if a[k] != 8:\n                return False\n            k += 1\n            if a[k] != 15:\n                return False\n            k += 1\n            if a[k] != 16:\n                return False\n            k += 1\n            if a[k] != 23:\n                return False\n            k += 1\n            if a[k] != 42:\n                return False\n            k += 1\n        return True\n\ndef get_min_number_of_elements_to_remove(a, n):\n    if is_good(a, n):\n        return 0\n    else:\n        return n\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    print(get_min_number_of_elements_to_remove(a, n))\n", "\n\nimport sys\n\ndef is_good(a, n):\n    a.sort()\n    k = 0\n    while k < n:\n        if a[k] != 4:\n            return False\n        k += 1\n        if a[k] != 8:\n            return False\n        k += 1\n        if a[k] != 15:\n            return False\n        k += 1\n        if a[k] != 16:\n            return False\n        k += 1\n        if a[k] != 23:\n            return False\n        k += 1\n        if a[k] != 42:\n            return False\n        k += 1\n    return True\n\ndef get_min_number_of_elements_to_remove(a, n):\n    if is_good(a, n):\n        return 0\n    else:\n        return n\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = [int(x) for x in sys.stdin.readline().split()]\n    print(get_min_number_of_elements_to_remove(a, n))\n", "\n\nimport sys\n\n\ndef is_good(a, n):\n    if n % 6 != 0:\n        return False\n    else:\n        a.sort()\n        k = 0\n        while k < n:\n            if a[k] != 4:\n                return False\n            k += 1\n            if a[k] != 8:\n                return False\n            k += 1\n            if a[k] != 15:\n                return False\n            k += 1\n            if a[k] != 16:\n                return False\n            k += 1\n            if a[k] != 23:\n                return False\n            k += 1\n            if a[k] != 42:\n                return False\n            k += 1\n        return True\n\n\ndef get_min_number_of_elements_to_remove(a, n):\n    if is_good(a, n):\n        return 0\n    else:\n        return n\n\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = [int(x) for x in sys.stdin.readline().split()]\n    print(get_min_number_of_elements_to_remove(a, n))\n", "\nimport sys\n\ndef get_min_number_of_elements_to_remove(a, n):\n    return n\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = [int(x) for x in sys.stdin.readline().split()]\n    print(get_min_number_of_elements_to_remove(a, n))\n", '#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n\n"""\nCreated on Wed Apr  3 21:54:11 2019\n\n@author: jennifer\n"""\n\ndef main():\n    print("hello world")\n\nif __name__ == "__main__":\n    main()\n', "\nimport sys\n\n    '''\n    >>> is_good([4, 8, 15, 16, 23, 42], 6)\n    True\n    >>> is_good([4, 8, 15, 16, 23, 42, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97], 30)\n    True\n    >>> is_good([4, 8, 15, 16, 23, 42, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97], 60)\n    True\n    >>> is_good([4, 8, 15, 16, 23, 42, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97], 90)\n    True\n    >>> is_good([4, 8, 15, 16, 23, 42, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97], 120)\n    True\n    >>> is_good([4, 8, 15, 16, 23, 42, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97], 150)\n    True\n    >>> is_good([4, 8, 15, 16, 23, 42, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17, 19, 24, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 3, 7, 11, 17\ndef is_good(a, n):\n    if n % 6 != 0:\n        return False\n    else:\n        a.sort()\n        k = 0\n        while k < n:\n            if a[k] != 4:\n                return False\n            k += 1\n            if a[k] != 8:\n                return False\n            k += 1\n            if a[k] != 15:\n                return False\n            k += 1\n            if a[k] != 16:\n                return False\n            k += 1\n            if a[k] != 23:\n                return False\n            k += 1\n            if a[k] != 42:\n                return False\n            k += 1\n        return True\n\ndef get_min_number_of_elements_to_remove(a, n):\n    if is_good(a, n):\n        return 0\n    else:\n        return n\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = [int(x) for x in sys.stdin.readline().split()]\n    print(get_min_number_of_elements_to_remove(a, n))\n", "\nimport sys\n\ndef is_good(a, n):\n    if n % 6 != 0:\n        return False\n    else:\n        a.sort()\n        k = 0\n        while k < n:\n            if a[k] != 4:\n                return False\n            k += 1\n            if a[k] != 8:\n                return False\n            k += 1\n            if a[k] != 15:\n                return False\n            k += 1\n            if a[k] != 16:\n                return False\n            k += 1\n            if a[k] != 23:\n                return False\n            k += 1\n            if a[k] != 42:\n                return False\n            k += 1\n        return True\n\ndef get_min_number_of_elements_to_remove(a, n):\n    if is_good(a, n):\n        return 0\n    else:\n        return n\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = [int(x) for x in sys.stdin.readline().split()]\n    print(get_min_number_of_elements_to_remove(a, n))\n", "\nimport sys\n\n\nif __name__ == '__main__':\n    print('Hello World')\n", "\nimport sys\n\ndef is_good(a):\n    a.sort()\n    k = 0\n    while k < len(a):\n        if a[k] != 4:\n            return False\n        k += 1\n        if a[k] != 8:\n            return False\n        k += 1\n        if a[k] != 15:\n            return False\n        k += 1\n        if a[k] != 16:\n            return False\n        k += 1\n        if a[k] != 23:\n            return False\n        k += 1\n        if a[k] != 42:\n            return False\n        k += 1\n    return True\n\ndef get_min_number_of_elements_to_remove(a):\n    if is_good(a):\n        return 0\n    else:\n        return len(a)\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = [int(x) for x in sys.stdin.readline().split()]\n    print(get_min_number_of_elements_to_remove(a))\n"]
2022-04-16 07:13:32.647698 size on output set 9
2022-04-16 07:13:32.647708 num operations 1
2022-04-16 07:13:32.647713 size on input set 1
2022-04-16 07:13:47.169537 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\n\ndef find_index(a: list, x: int, start=0):\n    for i in range(start, len(a)):\n        if a[i] == x:\n            return i\n    return -1\n\n\ndef delete_numbers(a: list):\n    while True:\n        if len(a) == 0:\n            return 0\n        if len(a) % 6 != 0:\n            return len(a)\n        if a[0] == 4:\n            i = 0\n            for x in [8, 15, 16, 23, 42]:\n                i = find_index(a, x, i + 1)\n                if i == -1:\n                    return len(a)\n        else:\n            return len(a)\n        a = a[i + 1:]\n\n\nprint(delete_numbers(a))\n"
    },
    {
      "index": 1,
      "text": "\nfrom typing import List\nn = int(input())\na = list(map(int, input().split()))\n\n\ndef find_index(a: List[int], x: int, start=0):\n    for i in range(start, len(a)):\n        if a[i] == x:\n            return i\n    return -1\n\n\ndef delete_numbers(a: List[int]):\n    while True:\n        if len(a) == 0:\n            return 0\n        if len(a) % 6 != 0:\n            return len(a)\n        if a[0] == 4:\n            i = 0\n            for x in [8, 15, 16, 23, 42]:\n                i = find_index(a, x, i + 1)\n                if i == -1:\n                    return len(a)\n        else:\n            return len(a)\n        a = a[i + 1:]\n\n\nprint(delete_numbers(a))\n"
    },
    {
      "index": 2,
      "text": "n = int(input())\na = list(map(int, input().split()))\n\ndef find_index(a: list, x: int, start=0):\n    for i in range(start, len(a)):\n        if a[i] == x:\n            return i\n    return -1\n\n\ndef delete_numbers(a: list):\n    while True:\n        if len(a) == 0:\n            return 0\n        if len(a) % 6 != 0:\n            return len(a)\n        if a[0] == 4:\n            i = 0\n            for x in [8, 15, 16, 23, 42]:\n                i = find_index(a, x, i + 1)\n                if i == -1:\n                    return len(a)\n        else:\n            return len(a)\n        a = a[i + 1:]\n\nprint(delete_numbers(a))\n"
    },
    {
      "index": 3,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\n\ndef find_index(a: list, x: int, start=0):\n    for i in range(start, len(a)):\n        if a[i] == x:\n            return i\n    return -1\n\n\ndef delete_numbers(a: list):\n    while True:\n        if len(a) == 0:\n            return 0\n        if len(a) % 6 != 0:\n            return len(a)\n        if a[0] == 4:\n            i = 0\n            for x in [8, 15, 16, 23, 42]:\n                i = find_index(a, x, i + 1)\n                if i == -1:\n                    return len(a)\n        else:\n            return len(a)\n        a = a[i + 1:]\n\n\nprint(delete_numbers(a))\n"
    },
    {
      "index": 4,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\n\ndef find_index(a: list, x: int, start=0):\n    for i in range(start, len(a)):\n        if a[i] == x:\n            return i\n    return -1\n\n\ndef delete_numbers(a: list):\n    while True:\n        if len(a) == 0:\n            return 0\n        if len(a) % 6 != 0:\n            return len(a)\n        if a[0] == 4:\n            i = 0\n            for x in [8, 15, 16, 23, 42]:\n                i = find_index(a, x, i + 1)\n                if i == -1:\n                    return len(a)\n        else:\n            return len(a)\n        a = a[i + 1:]\n\n\nprint(delete_numbers(a))\n"
    },
    {
      "index": 5,
      "text": "\n\n_ = int(input())\na = list(map(int, input().split()))\n\n\ndef find_index(a: list, x: int, start=0):\n    for i in range(start, len(a)):\n        if a[i] == x:\n            return i\n    return -1\n\n\ndef delete_numbers(a: list):\n    while True:\n        if len(a) == 0:\n            return 0\n        if len(a) % 6 != 0:\n            return len(a)\n        if a[0] == 4:\n            i = 0\n            for x in [8, 15, 16, 23, 42]:\n                i = find_index(a, x, i + 1)\n                if i == -1:\n                    return len(a)\n        else:\n            return len(a)\n        a = a[i + 1:]\n\n\nprint(delete_numbers(a))\n"
    },
    {
      "index": 6,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n\ndef find_index(a, x, start=0):\n    for i in range(start, len(a)):\n        if a[i] == x:\n            return i\n    return -1\n\n\ndef delete_numbers(a):\n    while True:\n        if len(a) == 0:\n            return 0\n        if len(a) % 6 != 0:\n            return len(a)\n        if a[0] == 4:\n            i = 0\n            for x in [8, 15, 16, 23, 42]:\n                i = find_index(a, x, i + 1)\n                if i == -1:\n                    return len(a)\n        else:\n            return len(a)\n        a = a[i + 1:]\n\n\nprint(delete_numbers(a))\n"
    },
    {
      "index": 7,
      "text": "\n\n\ndef find_index(a: list, x: int, start=0):\n    for i in range(start, len(a)):\n        if a[i] == x:\n            return i\n    return -1\n\n\ndef delete_numbers(a: list):\n    while True:\n        if len(a) == 0:\n            return 0\n        if len(a) % 6 != 0:\n            return len(a)\n        if a[0] == 4:\n            i = 0\n            for x in [8, 15, 16, 23, 42]:\n                i = find_index(a, x, i + 1)\n                if i == -1:\n                    return len(a)\n        else:\n            return len(a)\n        a = a[i + 1:]\n\nn = int(input())\na = list(map(int, input().split()))\nprint(delete_numbers(a))  # \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u043e\u0432\n"
    },
    {
      "index": 8,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n\ndef find_index(a, x, start=0):\n    for i in range(start, len(a)):\n        if a[i] == x:\n            return i\n    return -1\n\n\ndef delete_numbers(a):\n    while True:\n        if len(a) == 0:\n            return 0\n        if len(a) % 6 != 0:\n            return len(a)\n        if a[0] == 4:\n            i = 0\n            for x in [8, 15, 16, 23, 42]:\n                i = find_index(a, x, i + 1)\n                if i == -1:\n                    return len(a)\n        else:\n            return len(a)\n        a = a[i + 1:]\n\n\nprint(delete_numbers(a))\n"
    }
  ],
  "created": 1650093212,
  "object": "edit"
}
2022-04-16 07:13:47.169804 fix syntax errors 9 ['\nn = int(input())\na = list(map(int, input().split()))\n\n\ndef find_index(a: list, x: int, start=0):\n    for i in range(start, len(a)):\n        if a[i] == x:\n            return i\n    return -1\n\n\ndef delete_numbers(a: list):\n    while True:\n        if len(a) == 0:\n            return 0\n        if len(a) % 6 != 0:\n            return len(a)\n        if a[0] == 4:\n            i = 0\n            for x in [8, 15, 16, 23, 42]:\n                i = find_index(a, x, i + 1)\n                if i == -1:\n                    return len(a)\n        else:\n            return len(a)\n        a = a[i + 1:]\n\n\nprint(delete_numbers(a))\n', '\nfrom typing import List\nn = int(input())\na = list(map(int, input().split()))\n\n\ndef find_index(a: List[int], x: int, start=0):\n    for i in range(start, len(a)):\n        if a[i] == x:\n            return i\n    return -1\n\n\ndef delete_numbers(a: List[int]):\n    while True:\n        if len(a) == 0:\n            return 0\n        if len(a) % 6 != 0:\n            return len(a)\n        if a[0] == 4:\n            i = 0\n            for x in [8, 15, 16, 23, 42]:\n                i = find_index(a, x, i + 1)\n                if i == -1:\n                    return len(a)\n        else:\n            return len(a)\n        a = a[i + 1:]\n\n\nprint(delete_numbers(a))\n', 'n = int(input())\na = list(map(int, input().split()))\n\ndef find_index(a: list, x: int, start=0):\n    for i in range(start, len(a)):\n        if a[i] == x:\n            return i\n    return -1\n\n\ndef delete_numbers(a: list):\n    while True:\n        if len(a) == 0:\n            return 0\n        if len(a) % 6 != 0:\n            return len(a)\n        if a[0] == 4:\n            i = 0\n            for x in [8, 15, 16, 23, 42]:\n                i = find_index(a, x, i + 1)\n                if i == -1:\n                    return len(a)\n        else:\n            return len(a)\n        a = a[i + 1:]\n\nprint(delete_numbers(a))\n', '\nn = int(input())\na = list(map(int, input().split()))\n\n\ndef find_index(a: list, x: int, start=0):\n    for i in range(start, len(a)):\n        if a[i] == x:\n            return i\n    return -1\n\n\ndef delete_numbers(a: list):\n    while True:\n        if len(a) == 0:\n            return 0\n        if len(a) % 6 != 0:\n            return len(a)\n        if a[0] == 4:\n            i = 0\n            for x in [8, 15, 16, 23, 42]:\n                i = find_index(a, x, i + 1)\n                if i == -1:\n                    return len(a)\n        else:\n            return len(a)\n        a = a[i + 1:]\n\n\nprint(delete_numbers(a))\n', '\nn = int(input())\na = list(map(int, input().split()))\n\n\ndef find_index(a: list, x: int, start=0):\n    for i in range(start, len(a)):\n        if a[i] == x:\n            return i\n    return -1\n\n\ndef delete_numbers(a: list):\n    while True:\n        if len(a) == 0:\n            return 0\n        if len(a) % 6 != 0:\n            return len(a)\n        if a[0] == 4:\n            i = 0\n            for x in [8, 15, 16, 23, 42]:\n                i = find_index(a, x, i + 1)\n                if i == -1:\n                    return len(a)\n        else:\n            return len(a)\n        a = a[i + 1:]\n\n\nprint(delete_numbers(a))\n', '\n\n_ = int(input())\na = list(map(int, input().split()))\n\n\ndef find_index(a: list, x: int, start=0):\n    for i in range(start, len(a)):\n        if a[i] == x:\n            return i\n    return -1\n\n\ndef delete_numbers(a: list):\n    while True:\n        if len(a) == 0:\n            return 0\n        if len(a) % 6 != 0:\n            return len(a)\n        if a[0] == 4:\n            i = 0\n            for x in [8, 15, 16, 23, 42]:\n                i = find_index(a, x, i + 1)\n                if i == -1:\n                    return len(a)\n        else:\n            return len(a)\n        a = a[i + 1:]\n\n\nprint(delete_numbers(a))\n', '\n\nn = int(input())\na = list(map(int, input().split()))\n\n\ndef find_index(a, x, start=0):\n    for i in range(start, len(a)):\n        if a[i] == x:\n            return i\n    return -1\n\n\ndef delete_numbers(a):\n    while True:\n        if len(a) == 0:\n            return 0\n        if len(a) % 6 != 0:\n            return len(a)\n        if a[0] == 4:\n            i = 0\n            for x in [8, 15, 16, 23, 42]:\n                i = find_index(a, x, i + 1)\n                if i == -1:\n                    return len(a)\n        else:\n            return len(a)\n        a = a[i + 1:]\n\n\nprint(delete_numbers(a))\n', '\n\n\ndef find_index(a: list, x: int, start=0):\n    for i in range(start, len(a)):\n        if a[i] == x:\n            return i\n    return -1\n\n\ndef delete_numbers(a: list):\n    while True:\n        if len(a) == 0:\n            return 0\n        if len(a) % 6 != 0:\n            return len(a)\n        if a[0] == 4:\n            i = 0\n            for x in [8, 15, 16, 23, 42]:\n                i = find_index(a, x, i + 1)\n                if i == -1:\n                    return len(a)\n        else:\n            return len(a)\n        a = a[i + 1:]\n\nn = int(input())\na = list(map(int, input().split()))\nprint(delete_numbers(a))  # данные для тестов\n', '\n\nn = int(input())\na = list(map(int, input().split()))\n\n\ndef find_index(a, x, start=0):\n    for i in range(start, len(a)):\n        if a[i] == x:\n            return i\n    return -1\n\n\ndef delete_numbers(a):\n    while True:\n        if len(a) == 0:\n            return 0\n        if len(a) % 6 != 0:\n            return len(a)\n        if a[0] == 4:\n            i = 0\n            for x in [8, 15, 16, 23, 42]:\n                i = find_index(a, x, i + 1)\n                if i == -1:\n                    return len(a)\n        else:\n            return len(a)\n        a = a[i + 1:]\n\n\nprint(delete_numbers(a))\n']
2022-04-16 07:13:47.169976 size on output set 6
