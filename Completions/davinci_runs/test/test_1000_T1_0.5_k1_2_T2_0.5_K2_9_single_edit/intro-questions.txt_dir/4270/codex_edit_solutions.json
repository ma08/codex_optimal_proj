["import sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, (x+y)/2)\n\nprint(v[0])\n", "\n\ndef main():\n    num_ingredients = int(input())\n    ingredients = list(map(float, input().split()))\n    ingredients.sort()\n\n    while len(ingredients) > 1:\n        ingredients[0] = (ingredients[0] + ingredients[1]) / 2\n        ingredients.pop(1)\n        ingredients.sort()\n\n    print(ingredients[0])\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    num_ingredients = int(input())\n    ingredients = list(map(int, input().split()))\n    ingredients.sort(reverse=True)\n\n    while len(ingredients) > 1:\n        ingredients[0] = (ingredients[0] + ingredients[1]) / 2\n        ingredients.pop()\n        ingredients.sort(reverse=True)\n\n    print(ingredients[0])\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\nnum = int(sys.stdin.readline())\nfor i in range(num):\n    print(i+1)\n", "#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, (x+y)/2)\n\nprint(v[0])\n", "\n\ndef main():\n    num_ingredients = int(input())\n    ingredients = list(map(int, input().split()))\n    ingredients.sort()\n\n    while len(ingredients) > 1:\n        ingredients[0] = int((ingredients[0] + ingredients[1]) / 2)\n        ingredients.pop(1)\n        ingredients.sort()\n\n    print(ingredients[0])\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, (x+y)/2)\n\nprint(v[0])\n", "\n\ndef main():\n    num_ingredients = int(input())  # Number of ingredients\n    ingredients = list(map(int, input().split()))  # The ingredients\n    ingredients.sort()  # Sort the ingredients\n        # Add the first two ingredients together, divide by 2, and put it back in the list\n\n        # Remove the second ingredient from the list\n    while len(ingredients) > 1:\n        # Sort the list again\n        ingredients[0] = (ingredients[0] + ingredients[1]) / 2\n        ingredients.pop(1)\n        ingredients.sort()\n\n    print(ingredients[0])  # Print the first ingredient in the list\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, (x+y)//2)\n\nprint(v[0])\n", "import sys\nimport heapq\n\nnum = int(sys.stdin.readline())  # \uc785\ub825\ubc1b\uc740 \uc218\nv = list(map(int, sys.stdin.readline().split()))  # \uc785\ub825\ubc1b\uc740 \uc218\ub97c \uc815\uc218\ub85c \ubcc0\ud658\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)  # \uac00\uc7a5 \uc791\uc740 \uc218\ub97c \uc81c\uac70\n    y = heapq.heappop(v)\n    heapq.heappush(v, (x+y)/2)\n\nprint(v[0])\n", "\n\ndef main():\n    num_ingredients = int(input())\n    ingredients = list(map(int, input().split()))\n    ingredients.sort()\n\n    while len(ingredients) > 1:\n        ingredients[0] = (ingredients[0] + ingredients[1]) / 2\n        ingredients.pop(1)\n        ingredients.sort()\n\n    print(int(ingredients[0]))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\ndef main():\n    num_ingredients = int(input().strip())\n    ingredients = list(map(int, input().split()))\n    ingredients.sort()\n\n    while len(ingredients) > 1:\n    return 0\n        ingredients[0] = (ingredients[0] + ingredients[1]) / 2\n        ingredients.pop(1)\n        ingredients.sort()\n\n    print(ingredients[0])\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    num_ingredients = int(input())\n    ingredients = list(map(int, input().split()))\n    ingredients.sort()\n\n    while len(ingredients) > 1:\n        ingredients[0] = (ingredients[0] + ingredients[1]) // 2\n        ingredients.pop(1)\n        ingredients.sort()\n\n    print(ingredients[0])\n\nif __name__ == '__main__':\n    main()\n"]