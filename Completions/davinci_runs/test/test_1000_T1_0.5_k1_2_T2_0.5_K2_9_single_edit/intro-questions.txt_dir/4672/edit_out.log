2022-04-16 09:03:51.593188 num operations 1
2022-04-16 09:03:51.593210 size on input set 1
2022-04-16 09:04:01.471397 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "if __name__ == '__main__':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    marks = student_marks.get(query_name)\n    print(\"{:.2f}\".format(sum(marks)/len(marks)))\n"
    },
    {
      "index": 1,
      "text": "\n\nif __name__ == '__main__':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    marks = student_marks[query_name]\n    print(\"{:.2f}\".format(sum(marks)/len(marks))\n"
    },
    {
      "index": 2,
      "text": "def avg(marks):\n    return sum(marks)/len(marks)\n\nif __name__ == '__main__':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    marks = student_marks.get(query_name)\n    print(\"{:.2f}\".format(avg(marks)))\n"
    },
    {
      "index": 3,
      "text": "\n\nif __name__ == '__main__':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    marks = student_marks.get(query_name)\n    print(\"{:.2f}\".format(sum(marks) / len(marks)))\n"
    },
    {
      "index": 4,
      "text": "from __future__ import print_function\nimport os\nimport sys\n\ndef read(fname):\n    return open(os.path.join(os.path.dirname(__file__), fname)).read()\n\ndef readlines(fname):\n    return open(os.path.join(os.path.dirname(__file__), fname)).readlines()\n\n\nif __name__ == '__main__':\n    print(read('file.txt'))\n"
    },
    {
      "index": 5,
      "text": "marks = []\n\nif __name__ == '__main__':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    marks = student_marks[query_name]\n    print(\"{:.2f}\".format(sum(marks)/len(marks)))\n"
    },
    {
      "index": 6,
      "text": "\nif __name__ == '__main__':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    marks = student_marks.get(query_name)\n    print(\"{:.2f}\".format(sum(marks)/len(marks)))\n"
    },
    {
      "index": 7,
      "text": "def average(array):\n    return sum(array) / len(array)\n\nif __name__ == '__main__':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    marks = student_marks.get(query_name)\n    print(\"{:.2f}\".format(average(marks)))\n"
    },
    {
      "index": 8,
      "text": "def get_average(marks):\n    return sum(marks) / len(marks)\n\nif __name__ == '__main__':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    marks = student_marks.get(query_name)\n    print(\"{:.2f}\".format(get_average(marks)))\n"
    }
  ],
  "created": 1650099831,
  "object": "edit"
}
2022-04-16 09:04:01.471676 fix syntax errors 9 ['if __name__ == \'__main__\':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    marks = student_marks.get(query_name)\n    print("{:.2f}".format(sum(marks)/len(marks)))\n', '\n\nif __name__ == \'__main__\':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    marks = student_marks[query_name]\n    print("{:.2f}".format(sum(marks)/len(marks))\n', 'def avg(marks):\n    return sum(marks)/len(marks)\n\nif __name__ == \'__main__\':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    marks = student_marks.get(query_name)\n    print("{:.2f}".format(avg(marks)))\n', '\n\nif __name__ == \'__main__\':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    marks = student_marks.get(query_name)\n    print("{:.2f}".format(sum(marks) / len(marks)))\n', "from __future__ import print_function\nimport os\nimport sys\n\ndef read(fname):\n    return open(os.path.join(os.path.dirname(__file__), fname)).read()\n\ndef readlines(fname):\n    return open(os.path.join(os.path.dirname(__file__), fname)).readlines()\n\n\nif __name__ == '__main__':\n    print(read('file.txt'))\n", 'marks = []\n\nif __name__ == \'__main__\':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    marks = student_marks[query_name]\n    print("{:.2f}".format(sum(marks)/len(marks)))\n', '\nif __name__ == \'__main__\':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    marks = student_marks.get(query_name)\n    print("{:.2f}".format(sum(marks)/len(marks)))\n', 'def average(array):\n    return sum(array) / len(array)\n\nif __name__ == \'__main__\':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    marks = student_marks.get(query_name)\n    print("{:.2f}".format(average(marks)))\n', 'def get_average(marks):\n    return sum(marks) / len(marks)\n\nif __name__ == \'__main__\':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    marks = student_marks.get(query_name)\n    print("{:.2f}".format(get_average(marks)))\n']
2022-04-16 09:04:01.471725 size on output set 9
2022-04-16 09:04:01.471736 num operations 1
2022-04-16 09:04:01.471741 size on input set 1
2022-04-16 09:04:12.946663 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n  \n# Enter your code here. Read input from STDIN. Print output to STDOUT  \n  \ndef average(array):  \n    return sum(array)/len(array)  \n  \nif __name__ == '__main__':  \n    n = int(input())  \n    student_marks = {}  \n    for _ in range(n):  \n        name, *line = input().split()  \n        scores = list(map(float, line))  \n        student_marks[name] = scores  \n    query_name = input()  \n    print(\"{0:.2f}\".format(average(student_marks[query_name])))  \n"
    },
    {
      "index": 1,
      "text": "\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\ndef average(array):\n    return sum(array) / len(array)\n\nif __name__ == '__main__':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    print(\"{0:.2f}\".format(average(student_marks[query_name]))\n"
    },
    {
      "index": 2,
      "text": "\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\ndef average(array):\n    return sum(array)/len(array)  \n\nif __name__ == '__main__':\n    n = int(input())\n    \n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n    \n        student_marks[name] = scores\n    query_name = input()\n    print(\"{0:.2f}\".format(average(student_marks[query_name])))\n"
    },
    {
      "index": 3,
      "text": "\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\ndef average(array):\n    return sum(array)/len(array)\n\nif __name__ == '__main__':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    print(\"{0:.2f}\".format(average(student_marks[query_name])))\n"
    },
    {
      "index": 4,
      "text": "\n# Enter your code here. Read input from STDIN. Print output to STDOUT \ndef average(arr):\n    return sum(arr)/len(arr)\nif __name__ == \"__main__\":\n    n = int(input()) \n    student_marks = {} \n    for _ in range(n):\n        name, *line = input().split() \n        scores = list(map(float, line)) \n        student_marks[name] = scores \n    query_name = input() \n    print(\"{0:.2f}\".format(average(student_marks[query_name]))) \n"
    },
    {
      "index": 5,
      "text": "\nimport math\nimport os\nimport random\nimport re\nimport sys\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\ndef average(array):\n    return sum(array)/len(array)\n\nif __name__ == '__main__':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    print(\"{0:.2f}\".format(average(student_marks[query_name])))\n"
    },
    {
      "index": 6,
      "text": "\nimport statistics\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\ndef average(array):\n    return sum(array)/len(array)\n\nif __name__ == '__main__':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    print(\"{0:.2f}\".format(statistics.mean(student_marks[query_name])))\n"
    },
    {
      "index": 7,
      "text": "\nimport statistics\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\ndef average(array):\n    return statistics.mean(array)\n\nif __name__ == '__main__':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    print(\"{0:.2f}\".format(average(student_marks[query_name])))\n"
    },
    {
      "index": 8,
      "text": "\n\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\ndef average(array):\n    return sum(array) / len(array)\n\nif __name__ == '__main__':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    print('{0:.2f}'.format(average(student_marks[query_name])))\n"
    }
  ],
  "created": 1650099841,
  "object": "edit"
}
2022-04-16 09:04:12.947227 fix syntax errors 9 ['\n  \n# Enter your code here. Read input from STDIN. Print output to STDOUT  \n  \ndef average(array):  \n    return sum(array)/len(array)  \n  \nif __name__ == \'__main__\':  \n    n = int(input())  \n    student_marks = {}  \n    for _ in range(n):  \n        name, *line = input().split()  \n        scores = list(map(float, line))  \n        student_marks[name] = scores  \n    query_name = input()  \n    print("{0:.2f}".format(average(student_marks[query_name])))  \n', '\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\ndef average(array):\n    return sum(array) / len(array)\n\nif __name__ == \'__main__\':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    print("{0:.2f}".format(average(student_marks[query_name]))\n', '\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\ndef average(array):\n    return sum(array)/len(array)  \n\nif __name__ == \'__main__\':\n    n = int(input())\n    \n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n    \n        student_marks[name] = scores\n    query_name = input()\n    print("{0:.2f}".format(average(student_marks[query_name])))\n', '\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\ndef average(array):\n    return sum(array)/len(array)\n\nif __name__ == \'__main__\':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    print("{0:.2f}".format(average(student_marks[query_name])))\n', '\n# Enter your code here. Read input from STDIN. Print output to STDOUT \ndef average(arr):\n    return sum(arr)/len(arr)\nif __name__ == "__main__":\n    n = int(input()) \n    student_marks = {} \n    for _ in range(n):\n        name, *line = input().split() \n        scores = list(map(float, line)) \n        student_marks[name] = scores \n    query_name = input() \n    print("{0:.2f}".format(average(student_marks[query_name]))) \n', '\nimport math\nimport os\nimport random\nimport re\nimport sys\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\ndef average(array):\n    return sum(array)/len(array)\n\nif __name__ == \'__main__\':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    print("{0:.2f}".format(average(student_marks[query_name])))\n', '\nimport statistics\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\ndef average(array):\n    return sum(array)/len(array)\n\nif __name__ == \'__main__\':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    print("{0:.2f}".format(statistics.mean(student_marks[query_name])))\n', '\nimport statistics\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\ndef average(array):\n    return statistics.mean(array)\n\nif __name__ == \'__main__\':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    print("{0:.2f}".format(average(student_marks[query_name])))\n', "\n\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\ndef average(array):\n    return sum(array) / len(array)\n\nif __name__ == '__main__':\n    n = int(input())\n    student_marks = {}\n    for _ in range(n):\n        name, *line = input().split()\n        scores = list(map(float, line))\n        student_marks[name] = scores\n    query_name = input()\n    print('{0:.2f}'.format(average(student_marks[query_name])))\n"]
2022-04-16 09:04:12.947366 size on output set 9
