["\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1)/N)\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n-r)\n\ndef p(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n)\n\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r')\n    sys.stdout = open(pname + '.out', 'w')\n\n    n = int(input())\n    print(p(n))\n\nif __name__ == \"__main__\":\n    main('gift1')", "\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n) * fact(n))))\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(P):\n    N = int(P[0])\n    prob = float(factorial(N-1)) / float(N**N)\n    print(prob)\n\nif __name__ == \"__main__\":\n    main(sys.stdin.readlines())", "\n\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k):\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\ndef p(n):\n    return sum(choose(n, i) / n**i for i in range(n))\n\nprint(p(int(stdin.readline())))", "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) / (math.factorial(n-1) * n))\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 8))\n\nmain()"]