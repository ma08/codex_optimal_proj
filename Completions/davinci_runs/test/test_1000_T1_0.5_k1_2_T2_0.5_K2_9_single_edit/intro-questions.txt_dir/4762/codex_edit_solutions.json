["\n\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) // factorial(r) // factorial(n-r)\n\ndef p(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) // nCr(n,n)\n\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r')\n    sys.stdout = open(pname + '.out', 'w')\n\n    n = int(input())\n    print(p(n))\n\nif __name__ == \"__main__\":\n    main('gift1')\n", "\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(P):\n    N = int(P[0])\n    prob = float(factorial(N-1)) / float(N ** N)\n    print(prob)\n\nif __name__ == \"__main__\":\n    main(sys.stdin.readlines())\n", "\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n) * fact(n)))) # p = 1 - q\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 8))\n\nmain()\n", "\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n) * fact(n))), end=\"\")\n\ndef fact(n):\n    if n == 0:\n        return 1\n    return n * fact(n - 1)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(P):\n    N = int(P[0])\n    prob = float(factorial(N-1)) / float(N**N)\n    print(prob)\n\nif __name__ == \"__main__\":\n    main(sys.stdin.readlines())\n", "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) / (math.factorial(n - 1) * n))\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k):\n    return factorial(n) // (factorial(k) * factorial(n - k))\n\ndef p(n):\n    return sum(choose(n, i) // n**i for i in range(n))\n\nprint(p(int(stdin.readline())))\n", "\nimport sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 8))\n\nmain()\n", "\nfrom math import factorial as f\nfrom sys import stdin\n\ndef choose(n, k):\n    return f(n) / (f(k) * f(n - k))\n\ndef p(n):\n    return sum(choose(n, i) / n**i for i in range(n))\n\nprint(p(int(stdin.readline())))\n", "\n\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n-r)\n\ndef p(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n) * n\n\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r')\n    sys.stdout = open(pname + '.out', 'w')\n\n    n = int(input())\n    print(p(n))\n\nif __name__ == \"__main__\":\n    main('gift1')\n", "\n\nimport sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]), 8) / N)\n\nmain()\n", "\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k)\n    return factorial(n) / (factorial(k) * factorial(n - k)\n\ndef p(n)\n    return sum(choose(n, i) / n**i for i in range(n))\n\nprint(p(int(stdin.readline())))\n", "\n\ndef main():\n    n = int(input(\"Enter a number: \"))\n    print(\"The probability is\", 1 - (fact(n) / (fact(n - n) * fact(n))))\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1)/N, end=\"\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n-r)\n\ndef p(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n) # probability of no collision\n\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r')\n    sys.stdout = open(pname + '.out', 'w')\n\n    n = int(input())\n    print(p(n))\n\nif __name__ == \"__main__\":\n    main('file')\n", "\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n-r)\n\ndef p(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n)\n\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r') #input file\n    sys.stdout = open(pname + '.out', 'w') #output file\n\n    n = int(input())\n    print(p(n))\n\nif __name__ == \"__main__\":\n    main('gift1')\n", "\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1)/N)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) // factorial(r) // factorial(n-r)\n\ndef p(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) // nCr(n,n)\n\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r')\n    sys.stdout = open(pname + '.out', 'w')\n\n    n = int(input())\n    print(p(n))\n\nif __name__ == \"__main__\":\n    main('gift1')\n", "\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n) * fact(n)))\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) // (math.factorial(n-1) * n))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(P):\n    N = int(P[0])\n    prob = float(factorial(N-1)) / float(N**N)\n    print(prob)\n\nif __name__ == \"__main__\":\n    main(sys.stdin.read().split())\n", "\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n-r)\n\ndef p(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n)\n\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r')\n    sys.stdout = open(pname + '.out', 'w')\n\n    n = int(input())\n    print(p(n))\n\nif __name__ == \"__main__\":\n    main('gift1')\n", "\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n) * fact(n)))) # calculate the probability\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(P):\n    N = int(P[0])\n    prob = float(factorial(N-1)) / float(N**N) * (1/float(N))\n    print(prob)\n\nif __name__ == \"__main__\":\n    main(sys.stdin.readlines())\n", "\n\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k):\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\ndef p(n):\n    return sum(choose(n, i) / n**i for i in range(n+1))\n\nprint(p(int(stdin.readline())))\n", "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) / (math.factorial(n-1) * n)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n))))\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(P):\n    N = int(P[0])\n    prob = float(factorial(N-1)) / float(N**N) * 1.0\n    print(prob)\n\nif __name__ == \"__main__\":\n    main(sys.stdin.readlines())\n", "\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n) * fact(n - 1))))\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 8))\n\nmain()\n", "\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sat Jan 13 19:32:58 2018\n@author: josharnold\n\"\"\"\n# import sys\n# from math import factorial\n#\n# def nCr(n,r):\n#     return factorial(n) / factorial(r) / factorial(n-r)\n#\n# def p(n):\n#     return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n)\n#\n# def main(pname):\n#     sys.stdin = open(pname + '.in', 'r')\n#     sys.stdout = open(pname + '.out', 'w')\n#\n#     n = int(input())\n#     print(p(n))\n#\n# if __name__ == \"__main__\":\n#     main('gift1')\n", "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1) / N)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1) / N)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n-r)\n\ndef p(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n) / nCr(n,n)\n\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r')\n    sys.stdout = open(pname + '.out', 'w')\n\n    n = int(input())\n    print(p(n) * 100)\n\nif __name__ == \"__main__\":\n    main('gift1')\n", "import sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 8), end='')\n\nmain()\n", "\nimport sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 8))\nmain()\n", "\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k):\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\ndef p(n):\n    return sum(choose(n, i) / n**i for i in range(n))\n\nprint(p(int(stdin.readline())))\n", "\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - 1) * fact(n))))\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n) * fact(n)))) \n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(N):\n    prob = float(factorial(N-1)) / float(N**N) * 100\n    print(\"{:.2f}\".format(prob))\n\nif __name__ == \"__main__\":\n    main(int(sys.stdin.readlines()[0]))\n", "\n#!/usr/bin/env python\nimport sys,time\ndef main():\n    f = open(sys.argv[1],'r')\n    for line in f:\n        print line\n    f.close()\nif __name__ == '__main__':\n    start = time.time()\n    main()\n    end = time.time()\n    print(end-start)\n", "#!/usr/bin/env python3\n\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k):\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\ndef p(n):\n    return sum(choose(n, i) / n**i for i in range(n))\n\nprint(p(int(stdin.readline()))) \n", "\nimport os\nos.system(\"python3 main.py\")\n"]