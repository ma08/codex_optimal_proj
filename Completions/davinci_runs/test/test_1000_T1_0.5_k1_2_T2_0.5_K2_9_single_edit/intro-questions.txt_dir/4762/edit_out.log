2022-04-16 10:22:57.870011 num operations 1
2022-04-16 10:22:57.870030 size on input set 1
2022-04-16 10:23:04.363945 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1)/N)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1)/N)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1) / N)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1) / N)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1) / N)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1)/N)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1)/N)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1) / N)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1)/N, end=\"\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650104578,
  "object": "edit"
}
2022-04-16 10:23:04.364263 fix syntax errors 9 ['\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1)/N)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1)/N)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1) / N)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1) / N)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1) / N)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1)/N)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1)/N)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1) / N)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1)/N, end="")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 10:23:04.364304 size on output set 4
2022-04-16 10:23:04.364314 num operations 1
2022-04-16 10:23:04.364319 size on input set 1
2022-04-16 10:23:18.442554 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sat Jan 13 19:32:58 2018\n@author: josharnold\n\"\"\"\n# import sys\n# from math import factorial\n#\n# def nCr(n,r):\n#     return factorial(n) / factorial(r) / factorial(n-r)\n#\n# def p(n):\n#     return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n)\n#\n# def main(pname):\n#     sys.stdin = open(pname + '.in', 'r')\n#     sys.stdout = open(pname + '.out', 'w')\n#\n#     n = int(input())\n#     print(p(n))\n#\n# if __name__ == \"__main__\":\n#     main('gift1')\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) // factorial(r) // factorial(n-r)\n\ndef p(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) // nCr(n,n)\n\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r')\n    sys.stdout = open(pname + '.out', 'w')\n\n    n = int(input())\n    print(p(n))\n\nif __name__ == \"__main__\":\n    main('gift1')\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n-r)\n\ndef p(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n)\n\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r')\n    sys.stdout = open(pname + '.out', 'w')\n\n    n = int(input())\n    print(p(n))\n\nif __name__ == \"__main__\":\n    main('gift1')\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n-r)\n\ndef p(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n)\n\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r') #input file\n    sys.stdout = open(pname + '.out', 'w') #output file\n\n    n = int(input())\n    print(p(n))\n\nif __name__ == \"__main__\":\n    main('gift1')\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n-r)\n\ndef p(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n) # probability of no collision\n\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r')\n    sys.stdout = open(pname + '.out', 'w')\n\n    n = int(input())\n    print(p(n))\n\nif __name__ == \"__main__\":\n    main('file')\n"
    },
    {
      "index": 5,
      "text": "\n\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n-r)\n\ndef p(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n) / nCr(n,n)\n\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r')\n    sys.stdout = open(pname + '.out', 'w')\n\n    n = int(input())\n    print(p(n) * 100)\n\nif __name__ == \"__main__\":\n    main('gift1')\n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) // factorial(r) // factorial(n-r)\n\ndef p(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) // nCr(n,n)\n\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r')\n    sys.stdout = open(pname + '.out', 'w')\n\n    n = int(input())\n    print(p(n))\n\nif __name__ == \"__main__\":\n    main('gift1')\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n-r)\n\ndef p(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n)\n\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r')\n    sys.stdout = open(pname + '.out', 'w')\n\n    n = int(input())\n    print(p(n))\n\nif __name__ == \"__main__\":\n    main('gift1')\n"
    },
    {
      "index": 8,
      "text": "\n\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n-r)\n\ndef p(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n) * n\n\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r')\n    sys.stdout = open(pname + '.out', 'w')\n\n    n = int(input())\n    print(p(n))\n\nif __name__ == \"__main__\":\n    main('gift1')\n"
    }
  ],
  "created": 1650104584,
  "object": "edit"
}
2022-04-16 10:23:18.442813 fix syntax errors 9 ['\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n"""\nCreated on Sat Jan 13 19:32:58 2018\n@author: josharnold\n"""\n# import sys\n# from math import factorial\n#\n# def nCr(n,r):\n#     return factorial(n) / factorial(r) / factorial(n-r)\n#\n# def p(n):\n#     return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n)\n#\n# def main(pname):\n#     sys.stdin = open(pname + \'.in\', \'r\')\n#     sys.stdout = open(pname + \'.out\', \'w\')\n#\n#     n = int(input())\n#     print(p(n))\n#\n# if __name__ == "__main__":\n#     main(\'gift1\')\n', '\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) // factorial(r) // factorial(n-r)\n\ndef p(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) // nCr(n,n)\n\ndef main(pname):\n    sys.stdin = open(pname + \'.in\', \'r\')\n    sys.stdout = open(pname + \'.out\', \'w\')\n\n    n = int(input())\n    print(p(n))\n\nif __name__ == "__main__":\n    main(\'gift1\')\n', '\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n-r)\n\ndef p(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n)\n\ndef main(pname):\n    sys.stdin = open(pname + \'.in\', \'r\')\n    sys.stdout = open(pname + \'.out\', \'w\')\n\n    n = int(input())\n    print(p(n))\n\nif __name__ == "__main__":\n    main(\'gift1\')\n', '\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n-r)\n\ndef p(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n)\n\ndef main(pname):\n    sys.stdin = open(pname + \'.in\', \'r\') #input file\n    sys.stdout = open(pname + \'.out\', \'w\') #output file\n\n    n = int(input())\n    print(p(n))\n\nif __name__ == "__main__":\n    main(\'gift1\')\n', '\n\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n-r)\n\ndef p(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n) # probability of no collision\n\ndef main(pname):\n    sys.stdin = open(pname + \'.in\', \'r\')\n    sys.stdout = open(pname + \'.out\', \'w\')\n\n    n = int(input())\n    print(p(n))\n\nif __name__ == "__main__":\n    main(\'file\')\n', '\n\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n-r)\n\ndef p(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n) / nCr(n,n)\n\ndef main(pname):\n    sys.stdin = open(pname + \'.in\', \'r\')\n    sys.stdout = open(pname + \'.out\', \'w\')\n\n    n = int(input())\n    print(p(n) * 100)\n\nif __name__ == "__main__":\n    main(\'gift1\')\n', '\n\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) // factorial(r) // factorial(n-r)\n\ndef p(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) // nCr(n,n)\n\ndef main(pname):\n    sys.stdin = open(pname + \'.in\', \'r\')\n    sys.stdout = open(pname + \'.out\', \'w\')\n\n    n = int(input())\n    print(p(n))\n\nif __name__ == "__main__":\n    main(\'gift1\')\n', '\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n-r)\n\ndef p(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n)\n\ndef main(pname):\n    sys.stdin = open(pname + \'.in\', \'r\')\n    sys.stdout = open(pname + \'.out\', \'w\')\n\n    n = int(input())\n    print(p(n))\n\nif __name__ == "__main__":\n    main(\'gift1\')\n', '\n\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n-r)\n\ndef p(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n) * n\n\ndef main(pname):\n    sys.stdin = open(pname + \'.in\', \'r\')\n    sys.stdout = open(pname + \'.out\', \'w\')\n\n    n = int(input())\n    print(p(n))\n\nif __name__ == "__main__":\n    main(\'gift1\')\n']
2022-04-16 10:23:18.442969 size on output set 8
2022-04-16 10:23:18.442983 num operations 1
2022-04-16 10:23:18.442988 size on input set 1
2022-04-16 10:23:25.984530 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n) * fact(n)))\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n) * fact(n))), end=\"\")\n\ndef fact(n):\n    if n == 0:\n        return 1\n    return n * fact(n - 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n))))\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n) * fact(n)))) \n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - 1) * fact(n))))\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    n = int(input(\"Enter a number: \"))\n    print(\"The probability is\", 1 - (fact(n) / (fact(n - n) * fact(n))))\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n) * fact(n - 1))))\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n) * fact(n)))) # p = 1 - q\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n) * fact(n)))) # calculate the probability\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650104598,
  "object": "edit"
}
2022-04-16 10:23:25.984751 fix syntax errors 9 ['\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n) * fact(n)))\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n) * fact(n))), end="")\n\ndef fact(n):\n    if n == 0:\n        return 1\n    return n * fact(n - 1)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n))))\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n) * fact(n)))) \n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - 1) * fact(n))))\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input("Enter a number: "))\n    print("The probability is", 1 - (fact(n) / (fact(n - n) * fact(n))))\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n) * fact(n - 1))))\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n) * fact(n)))) # p = 1 - q\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n) * fact(n)))) # calculate the probability\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 10:23:25.984790 size on output set 9
2022-04-16 10:23:25.984811 num operations 1
2022-04-16 10:23:25.984816 size on input set 1
2022-04-16 10:23:36.322529 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(P):\n    N = int(P[0])\n    prob = float(factorial(N-1)) / float(N**N)\n    print(prob)\n\nif __name__ == \"__main__\":\n    main(sys.stdin.readlines())\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(N):\n    prob = float(factorial(N-1)) / float(N**N) * 100\n    print(\"{:.2f}\".format(prob))\n\nif __name__ == \"__main__\":\n    main(int(sys.stdin.readlines()[0]))\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(P):\n    N = int(P[0])\n    prob = float(factorial(N-1)) / float(N**N) * 1.0\n    print(prob)\n\nif __name__ == \"__main__\":\n    main(sys.stdin.readlines())\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(P):\n    N = int(P[0])\n    prob = float(factorial(N-1)) / float(N ** N)\n    print(prob)\n\nif __name__ == \"__main__\":\n    main(sys.stdin.readlines())\n"
    },
    {
      "index": 4,
      "text": "\n#!/usr/bin/env python\nimport sys,time\ndef main():\n    f = open(sys.argv[1],'r')\n    for line in f:\n        print line\n    f.close()\nif __name__ == '__main__':\n    start = time.time()\n    main()\n    end = time.time()\n    print(end-start)\n"
    },
    {
      "index": 5,
      "text": "\nimport os\nos.system(\"python3 main.py\")\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(P):\n    N = int(P[0])\n    prob = float(factorial(N-1)) / float(N**N)\n    print(prob)\n\nif __name__ == \"__main__\":\n    main(sys.stdin.read().split())\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(P):\n    N = int(P[0])\n    prob = float(factorial(N-1)) / float(N ** N)\n    print(prob)\n\nif __name__ == \"__main__\":\n    main(sys.stdin.readlines())\n"
    },
    {
      "index": 8,
      "text": "\n\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(P):\n    N = int(P[0])\n    prob = float(factorial(N-1)) / float(N**N) * (1/float(N))\n    print(prob)\n\nif __name__ == \"__main__\":\n    main(sys.stdin.readlines())\n"
    }
  ],
  "created": 1650104606,
  "object": "edit"
}
2022-04-16 10:23:36.322758 fix syntax errors 9 ['\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(P):\n    N = int(P[0])\n    prob = float(factorial(N-1)) / float(N**N)\n    print(prob)\n\nif __name__ == "__main__":\n    main(sys.stdin.readlines())\n', '\n\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(N):\n    prob = float(factorial(N-1)) / float(N**N) * 100\n    print("{:.2f}".format(prob))\n\nif __name__ == "__main__":\n    main(int(sys.stdin.readlines()[0]))\n', '\n\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(P):\n    N = int(P[0])\n    prob = float(factorial(N-1)) / float(N**N) * 1.0\n    print(prob)\n\nif __name__ == "__main__":\n    main(sys.stdin.readlines())\n', '\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(P):\n    N = int(P[0])\n    prob = float(factorial(N-1)) / float(N ** N)\n    print(prob)\n\nif __name__ == "__main__":\n    main(sys.stdin.readlines())\n', "\n#!/usr/bin/env python\nimport sys,time\ndef main():\n    f = open(sys.argv[1],'r')\n    for line in f:\n        print line\n    f.close()\nif __name__ == '__main__':\n    start = time.time()\n    main()\n    end = time.time()\n    print(end-start)\n", '\nimport os\nos.system("python3 main.py")\n', '\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(P):\n    N = int(P[0])\n    prob = float(factorial(N-1)) / float(N**N)\n    print(prob)\n\nif __name__ == "__main__":\n    main(sys.stdin.read().split())\n', '\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(P):\n    N = int(P[0])\n    prob = float(factorial(N-1)) / float(N ** N)\n    print(prob)\n\nif __name__ == "__main__":\n    main(sys.stdin.readlines())\n', '\n\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(P):\n    N = int(P[0])\n    prob = float(factorial(N-1)) / float(N**N) * (1/float(N))\n    print(prob)\n\nif __name__ == "__main__":\n    main(sys.stdin.readlines())\n']
2022-04-16 10:23:36.322883 size on output set 8
2022-04-16 10:23:36.322899 num operations 1
2022-04-16 10:23:36.322908 size on input set 1
2022-04-16 10:23:44.318504 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k):\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\ndef p(n):\n    return sum(choose(n, i) / n**i for i in range(n))\n\nprint(p(int(stdin.readline())))\n"
    },
    {
      "index": 1,
      "text": "\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k):\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\ndef p(n):\n    return sum(choose(n, i) / n**i for i in range(n))\n\nprint(p(int(stdin.readline())))\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k):\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\ndef p(n):\n    return sum(choose(n, i) / n**i for i in range(n+1))\n\nprint(p(int(stdin.readline())))\n"
    },
    {
      "index": 3,
      "text": "\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k):\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\ndef p(n):\n    return sum(choose(n, i) / n**i for i in range(n))\n\nprint(p(int(stdin.readline())))\n"
    },
    {
      "index": 4,
      "text": "\n\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k):\n    return factorial(n) // (factorial(k) * factorial(n - k))\n\ndef p(n):\n    return sum(choose(n, i) // n**i for i in range(n))\n\nprint(p(int(stdin.readline())))\n"
    },
    {
      "index": 5,
      "text": "#!/usr/bin/env python3\n\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k):\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\ndef p(n):\n    return sum(choose(n, i) / n**i for i in range(n))\n\nprint(p(int(stdin.readline()))) \n"
    },
    {
      "index": 6,
      "text": "\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k)\n    return factorial(n) / (factorial(k) * factorial(n - k)\n\ndef p(n)\n    return sum(choose(n, i) / n**i for i in range(n))\n\nprint(p(int(stdin.readline())))\n"
    },
    {
      "index": 7,
      "text": "\n\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k):\n    return factorial(n) // (factorial(k) * factorial(n - k))\n\ndef p(n):\n    return sum(choose(n, i) // n**i for i in range(n))\n\nprint(p(int(stdin.readline())))\n"
    },
    {
      "index": 8,
      "text": "\nfrom math import factorial as f\nfrom sys import stdin\n\ndef choose(n, k):\n    return f(n) / (f(k) * f(n - k))\n\ndef p(n):\n    return sum(choose(n, i) / n**i for i in range(n))\n\nprint(p(int(stdin.readline())))\n"
    }
  ],
  "created": 1650104616,
  "object": "edit"
}
2022-04-16 10:23:44.318739 fix syntax errors 9 ['\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k):\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\ndef p(n):\n    return sum(choose(n, i) / n**i for i in range(n))\n\nprint(p(int(stdin.readline())))\n', '\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k):\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\ndef p(n):\n    return sum(choose(n, i) / n**i for i in range(n))\n\nprint(p(int(stdin.readline())))\n', '\n\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k):\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\ndef p(n):\n    return sum(choose(n, i) / n**i for i in range(n+1))\n\nprint(p(int(stdin.readline())))\n', '\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k):\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\ndef p(n):\n    return sum(choose(n, i) / n**i for i in range(n))\n\nprint(p(int(stdin.readline())))\n', '\n\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k):\n    return factorial(n) // (factorial(k) * factorial(n - k))\n\ndef p(n):\n    return sum(choose(n, i) // n**i for i in range(n))\n\nprint(p(int(stdin.readline())))\n', '#!/usr/bin/env python3\n\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k):\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\ndef p(n):\n    return sum(choose(n, i) / n**i for i in range(n))\n\nprint(p(int(stdin.readline()))) \n', '\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k)\n    return factorial(n) / (factorial(k) * factorial(n - k)\n\ndef p(n)\n    return sum(choose(n, i) / n**i for i in range(n))\n\nprint(p(int(stdin.readline())))\n', '\n\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k):\n    return factorial(n) // (factorial(k) * factorial(n - k))\n\ndef p(n):\n    return sum(choose(n, i) // n**i for i in range(n))\n\nprint(p(int(stdin.readline())))\n', '\nfrom math import factorial as f\nfrom sys import stdin\n\ndef choose(n, k):\n    return f(n) / (f(k) * f(n - k))\n\ndef p(n):\n    return sum(choose(n, i) / n**i for i in range(n))\n\nprint(p(int(stdin.readline())))\n']
2022-04-16 10:23:44.318779 size on output set 6
2022-04-16 10:23:44.318789 num operations 1
2022-04-16 10:23:44.318796 size on input set 1
2022-04-16 10:23:51.101544 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) // (math.factorial(n-1) * n))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) / (math.factorial(n - 1) * n))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) / (math.factorial(n - 1) * n))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) / (math.factorial(n - 1) * n))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) / (math.factorial(n - 1) * n))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) / (math.factorial(n-1) * n)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) / (math.factorial(n - 1) * n))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) / (math.factorial(n - 1) * n))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) / (math.factorial(n - 1) * n))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650104624,
  "object": "edit"
}
2022-04-16 10:23:51.101781 fix syntax errors 9 ["\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) // (math.factorial(n-1) * n))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) / (math.factorial(n - 1) * n))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) / (math.factorial(n - 1) * n))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) / (math.factorial(n - 1) * n))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) / (math.factorial(n - 1) * n))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) / (math.factorial(n-1) * n)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) / (math.factorial(n - 1) * n))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) / (math.factorial(n - 1) * n))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) / (math.factorial(n - 1) * n))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 10:23:51.101920 size on output set 3
2022-04-16 10:23:51.101935 num operations 1
2022-04-16 10:23:51.101941 size on input set 1
2022-04-16 10:23:58.893304 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 8))\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "import sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 8), end='')\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]), 8) / N)\n\nmain()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 8))\n\nmain()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 8))\n\nmain()\n"
    },
    {
      "index": 5,
      "text": "import sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 8))\n\nmain()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 8))\nmain()\n"
    },
    {
      "index": 7,
      "text": "#!/usr/bin/env python3\n\nimport sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 8))\n\nmain()\n"
    },
    {
      "index": 8,
      "text": "\nimport sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 8))\n\nmain()\n"
    }
  ],
  "created": 1650104631,
  "object": "edit"
}
2022-04-16 10:23:58.893541 fix syntax errors 9 ['\nimport sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 8))\n\nmain()\n', "import sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 8), end='')\n\nmain()\n", '\n\nimport sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]), 8) / N)\n\nmain()\n', '\nimport sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 8))\n\nmain()\n', '\nimport sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 8))\n\nmain()\n', 'import sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 8))\n\nmain()\n', '\nimport sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 8))\nmain()\n', '#!/usr/bin/env python3\n\nimport sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 8))\n\nmain()\n', '\nimport sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 8))\n\nmain()\n']
2022-04-16 10:23:58.893579 size on output set 6
