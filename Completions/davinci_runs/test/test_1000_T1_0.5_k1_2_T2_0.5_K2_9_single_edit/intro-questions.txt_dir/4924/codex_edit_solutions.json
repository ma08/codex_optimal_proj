["\n\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time += (current_time - datetime.strptime('00:00:00', '%H:%M:%S')).total_seconds()\n    print(explosion_time.strftime('%H:%M:%S'))\n\nif __name__ == '__main__':\n    main()\n", "def in_seconds(time):\n    return time[0]*3600 + time[1]*60 + time[2]\n\nif __name__ == \"__main__\":\n    current_time = [int(i) for i in input().split(\":\")]\n    time_to_explode = [int(i) for i in input().split(\":\")]\n    current_time_in_seconds = in_seconds(current_time)\n    time_to_explode_in_seconds = in_seconds(time_to_explode)\n    if time_to_explode_in_seconds < current_time_in_seconds:\n        time_to_explode_in_seconds += 24*3600\n    time_to_explode_in_seconds -= current_time_in_seconds\n    hours = time_to_explode_in_seconds // 3600\n    time_to_explode_in_seconds %= 3600\n    minutes = time_to_explode_in_seconds // 60\n    time_to_explode_in_seconds %= 60\n    seconds = time_to_explode_in_seconds\n    print(str(hours).zfill(2) + \":\" + str(minutes).zfill(2) + \":\" + str(seconds).zfill(2))\n", "\n\nimport sys\n\ncur_time = sys.stdin.readline().strip().split(':')  # read in current time\nexp_time = sys.stdin.readline().strip().split(':')  # read in expected time\n\n# convert to seconds\ncur_time = int(cur_time[0])*3600 + int(cur_time[1])*60 + int(cur_time[2])  # convert to seconds\nexp_time = int(exp_time[0])*3600 + int(exp_time[1])*60 + int(exp_time[2])  # convert to seconds\n\n# if the expected time is less than current time, add 24 hours\nif exp_time < cur_time:  # if the expected time is less than current time, add 24 hours\n    exp_time += 24*3600  # add 24 hours\n\n# convert back to hh:mm:ss format\nexp_time = exp_time - cur_time  # get the time difference between expected and current time\nhours = exp_time//3600  # get the number of hours\nminutes = exp_time%3600//60  # get the number of minutes\nseconds = exp_time%3600%60  # get the number of seconds\n\n# print out the result\nprint(str(hours).zfill(2) + ':' + str(minutes).zfill(2) + ':' + str(seconds).zfill(2))  # print out the result\n", "\n\ndef parseTime(time_str):\n    h, m, s = time_str.split(\":\")\n    return int(h), int(m), int(s)\n\n\ndef getTimeDiff(current_time_str, desired_time_str):\n    h1, m1, s1 = parseTime(current_time_str)\n    h2, m2, s2 = parseTime(desired_time_str)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\n\ndef formatTime(h, m, s):\n    return \"{:02}:{:02}:{:02}\".format(h, m, s)\n\n\ndef main():\n    current_time = input()\n    desired_time = input()\n    h, m, s = getTimeDiff(current_time, desired_time)\n    print(formatTime(h, m, s))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef calcTime(currTime, targetTime):\n    #calculate the difference between the current time and the target time\n    #if the difference is negative, add 24 hours\n    #this will give us the time until the target time\n    #if the difference is greater than 24 hours, subtract 24 hours\n    #this will give us the time until the target time\n    #return the time until the target time\n    currTime = currTime.split(':')\n    targetTime = targetTime.split(':')\n    currTime = [int(currTime[0]), int(currTime[1]), int(currTime[2])]\n    targetTime = [int(targetTime[0]), int(targetTime[1]), int(targetTime[2])]\n    diff = [targetTime[0] - currTime[0], targetTime[1] - currTime[1],\n            targetTime[2] - currTime[2]]\n    if diff[0] < 0:\n        diff[0] += 24\n    if diff[1] < 0:\n        diff[0] -= 1\n        diff[1] += 60\n    if diff[2] < 0:\n        diff[1] -= 1\n        diff[2] += 60\n    if diff[0] > 24:\n        diff[0] -= 24\n    return ':'.join(map(str, diff))\n\ndef main():\n    currTime = sys.stdin.readline().strip()\n    targetTime = sys.stdin.readline().strip()\n    print(calcTime(currTime, targetTime))\n\nif __name__ == '__main__':\n    main()\n", "\n\n#main\ncurrent_time = input()\nexplosion_time = input()\n\ncurrent_hour, current_minute, current_second = map(int,current_time.split(\":\"))\nexplosion_hour, explosion_minute, explosion_second = map(int,explosion_time.split(\":\"))\n\nif explosion_hour<current_hour:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute<current_minute:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute==current_minute and explosion_second<current_second:\n    explosion_hour+=24\n\nexplosion_hour-=current_hour\nexplosion_minute-=current_minute\nexplosion_second-=current_second\n\nif explosion_second<0:\n    explosion_second+=60\n    explosion_minute-=1\n\nif explosion_minute<0:\n    explosion_minute+=60\n    explosion_hour-=1\n\nprint(str(explosion_hour)+\":\"+str(explosion_minute)+\":\"+str(explosion_second))\n", "\n\nimport sys\n\ndef calcTime(currTime, targetTime):\n\t#calculate the difference between the current time and the target time\n\t#if the difference is negative, add 24 hours\n\t#this will give us the time until the target time\n\t#if the difference is greater than 24 hours, subtract 24 hours\n\t#this will give us the time until the target time\n\t#return the time until the target time\n\tcurrTime = currTime.split(':')\n\ttargetTime = targetTime.split(':')\n\tcurrTime = [int(currTime[0]), int(currTime[1]), int(currTime[2])]\n\ttargetTime = [int(targetTime[0]), int(targetTime[1]), int(targetTime[2])]\n\tdiff = [targetTime[0] - currTime[0], targetTime[1] - currTime[1], targetTime[2] - currTime[2]]\n\tif diff[0] < 0:\n\t\tdiff[0] += 24\n\tif diff[1] < 0:\n\t\tdiff[0] -= 1\n\t\tdiff[1] += 60\n\tif diff[2] < 0:\n\t\tdiff[1] -= 1\n\t\tdiff[2] += 60\n\tif diff[0] > 24:\n\t\tdiff[0] -= 24\n\treturn ':'.join(map(str, diff))\n\ndef main():\n\tcurrTime = sys.stdin.readline().strip()\n\ttargetTime = sys.stdin.readline().strip()\n\tprint(calcTime(currTime, targetTime))\n\nif __name__ == '__main__':\n\tmain()\n", "\n# Author: Zhao,Zhongwei\n# Date: 2016-10-1\n# Description: \u5012\u8ba1\u65f6\n#-----main-----\n\ncurrent_time = input()\nexplosion_time = input()\n\ncurrent_hour, current_minute, current_second = map(int,current_time.split(\":\"))\nexplosion_hour, explosion_minute, explosion_second = map(int,explosion_time.split(\":\"))\n\nif explosion_hour < current_hour:\n    explosion_hour += 24\n\nif explosion_hour == current_hour and explosion_minute < current_minute:\n    explosion_hour += 24\n\nif explosion_hour == current_hour and explosion_minute == current_minute and explosion_second < current_second:\n    explosion_hour += 24\n\nexplosion_hour -= current_hour\nexplosion_minute -= current_minute\nexplosion_second -= current_second\n\nif explosion_second < 0:\n    explosion_second += 60\n    explosion_minute -= 1\n\nif explosion_minute < 0:\n    explosion_minute += 60\n    explosion_hour -= 1\n\nprint(str(explosion_hour)+\":\"+str(explosion_minute)+\":\"+str(explosion_second))\n", "\n\nimport sys\nimport datetime\n\ndef main():\n    current_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    desired_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    current_time = datetime.datetime(current_time[0], current_time[1], current_time[2])\n    desired_time = datetime.datetime(desired_time[0], desired_time[1], desired_time[2])\n    if desired_time < current_time:\n        desired_time = datetime.datetime.combine(datetime.date.today() + datetime.timedelta(days=1), desired_time)\n    else:\n        desired_time = datetime.datetime.combine(datetime.date.today(), desired_time)\n    print(desired_time - datetime.datetime.combine(datetime.date.today(), current_time))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nimport datetime\n\ndef main():\n    current_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    desired_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    current_time = datetime.time(current_time[0], current_time[1], current_time[2])\n    desired_time = datetime.time(desired_time[0], desired_time[1], desired_time[2])\n    if desired_time < current_time:\n        desired_time = datetime.datetime.combine(\n            datetime.date.today() + datetime.timedelta(days=1), desired_time)\n    else:\n        desired_time = datetime.datetime.combine(datetime.date.today(), desired_time)\n    print(desired_time - datetime.datetime.combine(\n        datetime.date.today(), current_time))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ncur_time = sys.stdin.readline().strip().split(':')\nexp_time = sys.stdin.readline().strip().split(':')\n\n# convert to seconds\ncur_time = int(cur_time[0])*3600 + int(cur_time[1])*60 + int(cur_time[2])\nexp_time = int(exp_time[0])*3600 + int(exp_time[1])*60 + int(exp_time[2])\n\n# if the explosion time is less than current time, add 24 hours\nif exp_time < cur_time:\n    exp_time += 24*3600\n\n# convert back to hh:mm:ss format\nexp_time = exp_time - cur_time\nhours = exp_time//3600\nminutes = exp_time%3600//60\nseconds = exp_time%3600%60\n\n# print out the result\nprint(str(hours).zfill(2) + ':' + str(minutes).zfill(2) + ':' + str(seconds).zfill(2))\n", "\nimport sys\n\ndef calcTime(currTime, targetTime):\n    #calculate the difference between the current time and the target time\n    #if the difference is negative, add 24 hours\n    #this will give us the time until the target time\n    #if the difference is greater than 24 hours, subtract 24 hours\n    #this will give us the time until the target time\n    #return the time until the target time\n    curr_time = currTime.split(':')\n    target_time = targetTime.split(':')\n    curr_time = [int(curr_time[0]), int(curr_time[1]), int(curr_time[2])]\n    target_time = [int(target_time[0]), int(target_time[1]), int(target_time[2])]\n    diff = [target_time[0] - curr_time[0], target_time[1] - curr_time[1], target_time[2] - curr_time[2]]\n    if diff[0] < 0:\n        diff[0] += 24\n    if diff[1] < 0:\n        diff[0] -= 1\n        diff[1] += 60\n    if diff[2] < 0:\n        diff[1] -= 1\n        diff[2] += 60\n    if diff[0] > 24:\n        diff[0] -= 24\n    return ':'.join(map(str, diff))\n\ndef main():\n    curr_time = sys.stdin.readline().strip()\n    target_time = sys.stdin.readline().strip()\n    print(calcTime(curr_time, target_time))\n\nif __name__ == '__main__':\n    main()\n", "import sys\nimport datetime\n\ndef main():\n    current_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    desired_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    current_time = datetime.time(current_time[0], current_time[1], current_time[2])\n    desired_time = datetime.time(desired_time[0], desired_time[1], desired_time[2])\n    if desired_time < current_time:\n        desired_time = datetime.datetime.combine(datetime.date.today() + datetime.timedelta(days=1), desired_time)\n    else:\n        desired_time = datetime.datetime.combine(datetime.date.today(), desired_time)\n    print(desired_time - datetime.datetime.combine(datetime.date.today(), current_time))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef calcTime(currTime, targetTime):\n    #calculate the difference between the current time and the target time\n    #if the difference is negative, add 24 hours\n    #this will give us the time until the target time\n    #if the difference is greater than 24 hours, subtract 24 hours\n    #this will give us the time until the target time\n    #return the time until the target time\n    currTime = currTime.split(':')\n    targetTime = targetTime.split(':')\n    currTime = [int(currTime[0]), int(currTime[1]), int(currTime[2])]\n    targetTime = [int(targetTime[0]), int(targetTime[1]), int(targetTime[2])]\n    diff = [targetTime[0] - currTime[0], targetTime[1] - currTime[1], targetTime[2] - currTime[2]]\n    if diff[0] < 0:\n        diff[0] += 24\n    if diff[1] < 0:\n        diff[0] -= 1\n        diff[1] += 60\n    if diff[2] < 0:\n        diff[1] -= 1\n        diff[2] += 60\n    if diff[0] >= 24:\n        diff[0] -= 24\n    return ':'.join(map(str, diff))\n\ndef main():\n    currTime = sys.stdin.readline().strip()\n    targetTime = sys.stdin.readline().strip()\n    print(calcTime(currTime, targetTime))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ncur_time = sys.stdin.readline().strip().split(':')\nexp_time = sys.stdin.readline().strip().split(':')\n# convert to seconds\ncur_time = int(cur_time[0])*3600 + int(cur_time[1])*60 + int(cur_time[2])\nexp_time = int(exp_time[0])*3600 + int(exp_time[1])*60 + int(exp_time[2])\n# if the explosion time is less than current time, add 24 hours\nif exp_time < cur_time:\n    exp_time += 24*3600\n# convert back to hh:mm:ss format\nexp_time = exp_time - cur_time\nhours = exp_time//3600\nminutes = exp_time%3600//60\nseconds = exp_time%3600%60\n# print out the result\nprint(str(hours).zfill(2) + ':' + str(minutes).zfill(2) + ':' + str(seconds).zfill(2))\n", "\n\nif __name__ == \"__main__\":\n    current_time = [int(i) for i in input().split(\":\")]\n    time_to_explode = [int(i) for i in input().split(\":\")]\n    current_time_in_seconds = current_time[0] * 3600 + current_time[1] * 60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0] * 3600 + time_to_explode[1] * 60 + time_to_explode[2]\n    if time_to_explode_in_seconds < current_time_in_seconds:\n        time_to_explode_in_seconds += 24 * 3600\n    time_to_explode_in_seconds -= current_time_in_seconds\n    hours = time_to_explode_in_seconds // 3600\n    time_to_explode_in_seconds %= 3600\n    minutes = time_to_explode_in_seconds // 60\n    time_to_explode_in_seconds %= 60\n    seconds = time_to_explode_in_seconds\n    print(str(hours).zfill(2) + \":\" + str(minutes).zfill(2) + \":\" + str(seconds).zfill(2))\n", "\n\nimport sys\n\ndef calcTime(currTime, targetTime):\n    currTime = currTime.split(':')\n    targetTime = targetTime.split(':')\n    currTime = [int(currTime[0]), int(currTime[1]), int(currTime[2])]\n    targetTime = [int(targetTime[0]), int(targetTime[1]), int(targetTime[2])]\n    diff = [0, 0, 0]\n    diff[2] = targetTime[2] - currTime[2]\n    diff[1] = targetTime[1] - currTime[1]\n    diff[0] = targetTime[0] - currTime[0]\n    if diff[2] < 0:\n        diff[2] += 60\n        diff[1] -= 1\n    if diff[1] < 0:\n        diff[1] += 60\n        diff[0] -= 1\n    if diff[0] < 0:\n        diff[0] += 24\n    if diff[0] >= 24:\n        diff[0] -= 24\n    return '{}:{}:{}'.format(diff[0], diff[1], diff[2])\n\ndef main():\n    currTime = sys.stdin.readline().strip()\n    targetTime = sys.stdin.readline().strip()\n    print(calcTime(currTime, targetTime))\n\nif __name__ == '__main__':\n    main()\n", "current_time = [int(i) for i in input().split(\":\")]\ntime_to_explode = [int(i) for i in input().split(\":\")]\ncurrent_time_in_seconds = current_time[0]*3600 + current_time[1]*60 + current_time[2]\ntime_to_explode_in_seconds = time_to_explode[0]*3600 + time_to_explode[1]*60 + time_to_explode[2]\nif time_to_explode_in_seconds < current_time_in_seconds:\n    time_to_explode_in_seconds += 24*3600\ntime_to_explode_in_seconds -= current_time_in_seconds\nhours = time_to_explode_in_seconds // 3600\ntime_to_explode_in_seconds %= 3600\nminutes = time_to_explode_in_seconds // 60\ntime_to_explode_in_seconds %= 60\nseconds = time_to_explode_in_seconds\nprint(str(hours).zfill(2) + \":\" + str(minutes).zfill(2) + \":\" + str(seconds).zfill(2))\n\nif __name__ == \"__main__\":\n    current_time = [int(i) for i in input().split(\":\")]\n    time_to_explode = [int(i) for i in input().split(\":\")]\n    current_time_in_seconds = current_time[0]*3600 + current_time[1]*60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0]*3600 + time_to_explode[1]*60 + time_to_explode[2]\n    if time_to_explode_in_seconds < current_time_in_seconds:\n        time_to_explode_in_seconds += 24*3600\n    time_to_explode_in_seconds -= current_time_in_seconds\n    hours = time_to_explode_in_seconds // 3600\n    time_to_explode_in_seconds %= 3600\n    minutes = time_to_explode_in_seconds // 60\n    time_to_explode_in_seconds %= 60\n    seconds = time_to_explode_in_seconds\n    print(str(hours).zfill(2) + \":\" + str(minutes).zfill(2) + \":\" + str(seconds).zfill(2))\n", "\nif __name__ == \"__main__\":\n    current_time = [int(i) for i in input().split(':')]\n    time_to_explode = [int(i) for i in input().split(':')]\n    current_time_in_seconds = current_time[0]*3600 + current_time[1]*60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0]*3600 + time_to_explode[1]*60 + time_to_explode[2]\n    if time_to_explode_in_seconds < current_time_in_seconds:\n        time_to_explode_in_seconds += 24*3600\n    time_to_explode_in_seconds -= current_time_in_seconds\n    hours = time_to_explode_in_seconds // 3600\n    time_to_explode_in_seconds %= 3600\n    minutes = time_to_explode_in_seconds // 60\n    time_to_explode_in_seconds %= 60\n    seconds = time_to_explode_in_seconds\n    print(str(hours).zfill(2) + ':' + str(minutes).zfill(2) + ':' + str(seconds).zfill(2))\n", "\n\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), \"%H:%M:%S\")\n    explosion_time = datetime.strptime(input(), \"%H:%M:%S\")\n    explosion_time += (current_time - datetime.strptime(\"00:00:00\", \"%H:%M:%S\"))\n    print(explosion_time.strftime('%H:%M:%S'))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport datetime\n\ndef main():\n    current_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    desired_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    c_time = datetime.time(current_time[0], current_time[1], current_time[2])\n    d_time = datetime.time(desired_time[0], desired_time[1], desired_time[2])\n    if d_time < c_time:\n        d_time = datetime.datetime.combine(datetime.date.today() + datetime.timedelta(days=1), d_time)\n    else:\n        d_time = datetime.datetime.combine(datetime.date.today(), d_time)\n    print(d_time - datetime.datetime.combine(datetime.date.today(), c_time))\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time += (current_time - datetime.strptime('00:00:00', '%H:%M:%S')) \n    print(explosion_time.strftime('%H:%M:%S'))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef parseTime(time_str):\n    h, m, s = time_str.split(\":\")\n    return int(h), int(m), int(s)\n\ndef getTimeDiff(current_time, desired_time):\n    h1, m1, s1 = parseTime(current_time)\n    h2, m2, s2 = parseTime(desired_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\ndef formatTime(h, m, s):\n    return \"{:02}:{:02}:{:02}\".format(h, m, s)\n\ndef main():\n    current_time = input()\n    desired_time = input()\n    h, m, s = getTimeDiff(current_time, desired_time)\n    print(formatTime(h, m, s))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n\nif __name__ == \"__main__\":\n    current_time = [int(i) for i in input().split(\":\")]\n    time_to_explode = [int(i) for i in input().split(\":\")]\n    current_time_in_seconds = current_time[0]*3600 + current_time[1]*60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0]*3600 + time_to_explode[1]*60 + time_to_explode[2]\n    if time_to_explode_in_seconds < current_time_in_seconds:\n        time_to_explode_in_seconds += 24*3600\n    time_to_explode_in_seconds -= current_time_in_seconds\n    hours = time_to_explode_in_seconds // 3600\n    time_to_explode_in_seconds %= 3600\n    minutes = time_to_explode_in_seconds // 60\n    time_to_explode_in_seconds %= 60\n    seconds = time_to_explode_in_seconds\n    print(str(hours).zfill(2) + \":\" + str(minutes).zfill(2) + \":\" + str(seconds).zfill(2))\n", "\nif __name__ == \"__main__\":\n    current_time = [int(i) for i in input().split(\":\")]\n    time_to_explode = [int(i) for i in input().split(\":\")]\n    current_time_in_seconds = current_time[0]*3600 + current_time[1]*60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0]*3600 + time_to_explode[1]*60 + time_to_explode[2]\n    if time_to_explode_in_seconds < current_time_in_seconds:\n        time_to_explode_in_seconds += 24*3600\n    time_to_explode_in_seconds -= current_time_in_seconds\n    hours = time_to_explode_in_seconds // 3600\n    time_to_explode_in_seconds %= 3600\n    minutes = time_to_explode_in_seconds // 60\n    time_to_explode_in_seconds %= 60\n    seconds = time_to_explode_in_seconds\n    print(str(hours).zfill(2) + \":\" + str(minutes).zfill(2) + \":\" + str(seconds).zfill(2))\n", "def time_to_explode_in_seconds(time_to_explode):\n    return time_to_explode[0]*3600 + time_to_explode[1]*60 + time_to_explode[2]\n\nif __name__ == \"__main__\":\n    current_time = [int(i) for i in input().split(\":\")]\n    time_to_explode = [int(i) for i in input().split(\":\")]\n    current_time_in_seconds = time_to_explode_in_seconds(current_time)\n    time_to_explode_in_seconds = time_to_explode_in_seconds(time_to_explode)\n    if time_to_explode_in_seconds(time_to_explode) < current_time_in_seconds:\n        time_to_explode_in_seconds += 24*3600\n    time_to_explode_in_seconds -= current_time_in_seconds(current_time)\n    hours = time_to_explode_in_seconds(time_to_explode) // 3600\n    time_to_explode_in_seconds %= 3600(time_to_explode)\n    minutes = time_to_explode_in_seconds(time_to_explode) // 60\n    time_to_explode_in_seconds %= 60(time_to_explode)\n    seconds = time_to_explode_in_seconds(time_to_explode)\n    print(str(hours).zfill(2) + \":\" + str(minutes).zfill(2) + \":\" + str(seconds).zfill(2), end=\"\")\n", "\n\ndef parseTime(time_str):\n    h, m, s = time_str.split(\":\")\n    return int(h), int(m), int(s)\n\ndef get_time_diff(current_time, desired_time):\n    h1, m1, s1 = parseTime(current_time)\n    h2, m2, s2 = parseTime(desired_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\ndef format_time(h, m, s):\n    return \"{:02}:{:02}:{:02}\".format(h, m, s)\n\ndef main():\n    current_time = input()\n    desired_time = input()\n    h, m, s = get_time_diff(current_time, desired_time)\n    print(format_time(h, m, s))\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef parseTime(time_str):\n    h,m,s = time_str.split(\":\")\n    return int(h), int(m), int(s)\n\ndef getTimeDiff(current_time, desired_time):\n    h1,m1,s1 = parseTime(current_time)\n    h2,m2,s2 = parseTime(desired_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\ndef formatTime(h,m,s):\n    return \"{:02}:{:02}:{:02}\".format(h,m,s)\n\ndef main():\n    current_time = input()\n    desired_time = input()\n    h,m,s = getTimeDiff(current_time, desired_time)\n    print(formatTime(h,m,s))\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\nimport datetime\n\ndef main():\n    current_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    desired_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    current_time = datetime.datetime(2017, 1, 1, current_time[0], current_time[1], current_time[2])\n    desired_time = datetime.datetime(2017, 1, 1, desired_time[0], desired_time[1], desired_time[2])\n    if desired_time.time() < current_time.time():\n        desired_time += datetime.timedelta(days=1)\n    else:\n        desired_time += datetime.timedelta(days=0)\n    print(desired_time - current_time)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    time_now = [int(x) for x in sys.stdin.readline().strip().split(\":\")]\n\n    time_explosion = [int(x) for x in sys.stdin.readline().strip().split(\":\")]\n\n    if time_explosion[0] < time_now[0]:\n        time_explosion[0] += 24\n\n    if time_explosion[1] < time_now[1]:\n        time_explosion[0] -= 1\n        time_explosion[1] += 60\n\n    if time_explosion[2] < time_now[2]:\n        time_explosion[1] -= 1\n        time_explosion[2] += 60\n\n    time_explosion = [str(x) for x in time_explosion]\n    print(\":\".join(time_explosion))\n\nmain()\n", "\n\n#-----main-----\n\ncurrent_time = input()\nexplosion_time = input()\n\ncurrent_hour, current_minute, current_second = map(int, current_time.split(\":\"))\nexplosion_hour, explosion_minute, explosion_second = map(int, explosion_time.split(\":\"))\n\nif explosion_hour < current_hour:\n    explosion_hour += 24\n\nif explosion_hour == current_hour and explosion_minute < current_minute:\n    explosion_hour += 24\n\nif explosion_hour == current_hour and explosion_minute == current_minute and explosion_second < current_second:\n    explosion_hour += 24\n\nexplosion_hour -= current_hour\nexplosion_minute -= current_minute\nexplosion_second -= current_second\n\nif explosion_second < 0:\n    explosion_second += 60\n    explosion_minute -= 1\n\nif explosion_minute < 0:\n    explosion_minute += 60\n    explosion_hour -= 1\n\nprint(str(explosion_hour) + \":\" + str(explosion_minute) + \":\" + str(explosion_second))\n", "\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time += (current_time - datetime.strptime('00:00:00', '%H:%M:%S'))\n    print(explosion_time.strftime('%H:%M:%S'))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nimport datetime\n\n\ndef main():\n    current_time = [int(x) for x in sys.stdin.readline().strip().split(':')]  # get time in format hh:mm:ss\n    desired_time = [int(x) for x in sys.stdin.readline().strip().split(':')]  # get time in format hh:mm:ss\n    current_time = datetime.time(current_time[0], current_time[1], current_time[2])  # convert to datetime.time object\n    desired_time = datetime.time(desired_time[0], desired_time[1], desired_time[2])  # convert to datetime.time object\n    # if desired time is before current time, make it for tomorrow\n    if desired_time < current_time:\n        desired_time = datetime.datetime.combine(datetime.date.today() + datetime.timedelta(days=1),\n                                                 desired_time)  # make datetime.datetime object\n    else:\n        desired_time = datetime.datetime.combine(datetime.date.today(), desired_time)  # make datetime.datetime object\n    print(desired_time - datetime.datetime.combine(datetime.date.today(), current_time))  # print difference\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline()\n    time_now = time_now.strip().split(\":\")\n    time_now = [int(x) for x in time_now]\n\n    time_explosion = sys.stdin.readline()\n    time_explosion = time_explosion.strip().split(\":\")\n    time_explosion = [int(x) for x in time_explosion]\n\n    if time_explosion[0] < time_now[0]:\n        time_explosion[0] += 24\n\n    if time_explosion[1] < time_now[1]:\n        time_explosion[0] -= 1\n        time_explosion[1] += 60\n\n    if time_explosion[2] < time_now[2]:\n        time_explosion[1] -= 1\n        time_explosion[2] += 60\n\n    time_explosion = [str(x) for x in time_explosion]\n    print(\":\".join(time_explosion))\n\nmain()\n", "import sys\n\ncur_time = sys.stdin.readline().strip().split(':')\nexp_time = sys.stdin.readline().strip().split(':')\n\n# convert to seconds\ncur_time = int(cur_time[0])*3600 + int(cur_time[1])*60 + int(cur_time[2])\nexp_time = int(exp_time[0])*3600 + int(exp_time[1])*60 + int(exp_time[2])\n\n# if the explosion time is less than current time, add 24 hours\nif exp_time < cur_time:\n    exp_time += 24*3600\n\n# convert back to hh:mm:ss format\nexp_time = exp_time - cur_time\nhours = exp_time//3600\nminutes = exp_time%3600//60\nseconds = exp_time%3600%60\n\n# print out the result\nprint(str(hours).zfill(2) + ':' + str(minutes).zfill(2) + ':' + str(seconds).zfill(2))\n", "\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time += (current_time - datetime.strptime('00:00:00', '%H:%M:%S')) \n    print(explosion_time.strftime('%H:%M:%S'))\n\nif __name__ == '__main__':\n    main()\n", "\n#!/usr/bin/python3\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline()\n    time_now = time_now.strip().split(\":\")\n    time_now = [int(x) for x in time_now]\n\n    time_explosion = sys.stdin.readline()\n    time_explosion = time_explosion.strip().split(\":\")\n    time_explosion = [int(x) for x in time_explosion]\n\n    if time_explosion[0] < time_now[0]:\n        time_explosion[0] += 24\n\n    if time_explosion[1] < time_now[1]:\n        time_explosion[0] -= 1\n        time_explosion[1] += 60\n\n    if time_explosion[2] < time_now[2]:\n        time_explosion[1] -= 1\n        time_explosion[2] += 60\n\n    time_explosion = [str(x) for x in time_explosion]\n    print(\":\".join(time_explosion))\n\nmain()\n", "\nimport sys\n\ncur_time = sys.stdin.readline().strip().split(':')\nexp_time = sys.stdin.readline().strip().split(':')\n\n# convert to seconds\ncur_time = int(cur_time[0])*3600 + int(cur_time[1])*60 + int(cur_time[2])\nexp_time = int(exp_time[0])*3600 + int(exp_time[1])*60 + int(exp_time[2])\n\n# if the explosion time is less than current time, add 24 hours\nif exp_time < cur_time:\n    exp_time += 24*3600\n\n# convert back to hh:mm:ss format\nexp_time = exp_time - cur_time\nhours = exp_time//3600\nminutes = exp_time%3600//60\nseconds = exp_time%3600%60\n\n# print out the result\nprint(str(hours).zfill(2) + ':' + str(minutes).zfill(2) + ':' + str(seconds).zfill(2))\n", "\nfrom math import floor\n\nif __name__ == \"__main__\":\n    current_time = [int(i) for i in input().split(\":\")]\n    time_to_explode = [int(i) for i in input().split(\":\")]\n    current_time_in_seconds = current_time[0]*3600 + current_time[1]*60 + current_time[2]*1\n    time_to_explode_in_seconds = time_to_explode[0]*3600 + time_to_explode[1]*60 + time_to_explode[2]*1\n    if time_to_explode_in_seconds < current_time_in_seconds:\n        time_to_explode_in_seconds += 24*3600\n    time_to_explode_in_seconds -= current_time_in_seconds\n    hours = floor(time_to_explode_in_seconds / 3600)\n    time_to_explode_in_seconds %= 3600\n    minutes = floor(time_to_explode_in_seconds / 60)\n    time_to_explode_in_seconds %= 60\n    seconds = time_to_explode_in_seconds\n    print(str(hours).zfill(2) + \":\" + str(minutes).zfill(2) + \":\" + str(seconds).zfill(2))\n", "\n\nimport sys\n\ndef calcTime(currTime, targetTime):\n    #calculate the difference between the current time and the target time\n    #if the difference is negative, add 24 hours\n    #this will give us the time until the target time\n    #if the difference is greater than 24 hours, subtract 24 hours\n    #this will give us the time until the target time\n    #return the time until the target time\n    currTime = currTime.split(':') # split the string into a list of strings\n    targetTime = targetTime.split(':') # split the string into a list of strings\n    currTime = [int(currTime[0]), int(currTime[1]), int(currTime[2])]\n    targetTime = [int(targetTime[0]), int(targetTime[1]), int(targetTime[2])]\n    diff = [targetTime[0] - currTime[0], targetTime[1] - currTime[1], targetTime[2] - currTime[2]]\n    if diff[0] < 0:\n        diff[0] += 24\n    if diff[1] < 0:\n        diff[0] -= 1\n        diff[1] += 60\n    if diff[2] < 0:\n        diff[1] -= 1\n        diff[2] += 60\n    if diff[0] > 24:\n        diff[0] -= 24\n    return ':'.join(map(str, diff)) # join the list of strings together with a colon between each item\n\ndef main():\n    currTime = sys.stdin.readline().strip() # read the current time from the input\n    targetTime = sys.stdin.readline().strip() # read the target time from the input\n    print(calcTime(currTime, targetTime))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef parseTime(time_str):\n    h, m, s = time_str.split(\":\")\n    return int(h), int(m), int(s) \n\ndef getTimeDiff(current_time, desired_time):\n    h1, m1, s1 = parseTime(current_time)\n    h2, m2, s2 = parseTime(desired_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\ndef formatTime(h, m, s):\n    return \"{:02}:{:02}:{:02}\".format(h, m, s)\n\ndef main():\n    current_time = input()\n    desired_time = input()\n    h, m, s = getTimeDiff(current_time, desired_time)\n    print(formatTime(h, m, s))\n\nif __name__ == \"__main__\":\n    main()\n", "\n# read lines from stdin\nimport sys\n\ncur_time = sys.stdin.readline().strip().split(':')\nexp_time = sys.stdin.readline().strip().split(':')\n\n# convert to seconds\ncur_time = int(cur_time[0])*3600 + int(cur_time[1])*60 + int(cur_time[2])\nexp_time = int(exp_time[0])*3600 + int(exp_time[1])*60 + int(exp_time[2])\n\n# if the explosion time is less than current time, add 24 hours\nif exp_time < cur_time:\n    exp_time += 24*3600\n\n# convert back to hh:mm:ss format\nexp_time = exp_time - cur_time\nhours = exp_time//3600\nminutes = exp_time%3600//60\nseconds = exp_time%3600%60\n\n# print out the result\nprint(str(hours).zfill(2) + ':' + str(minutes).zfill(2) + ':' + str(seconds).zfill(2))\n", "\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline()\n    time_now = time_now.strip().split(\":\")\n    time_now = [int(x) for x in time_now]\n\n    time_explosion = sys.stdin.readline()\n    time_explosion = time_explosion.strip().split(\":\")\n    time_explosion = [int(x) for x in time_explosion]\n\n    if time_explosion[0] < time_now[0]:\n        time_explosion[0] += 24\n\n    if time_explosion[1] < time_now[1]:\n        time_explosion[0] -= 1\n        time_explosion[1] += 60\n\n    if time_explosion[2] < time_now[2]:\n        time_explosion[1] -= 1\n        time_explosion[2] += 60\n\n    time_explosion = [str(x) for x in time_explosion]\n    print(\":\".join(time_explosion))\n\nif __name__ == '__main__':\n    main()\n", "\n#-----main-----\n\ncurrent_time = input()\nexplosion_time = input()\n\ncurrent_hour, current_minute, current_second = map(int, current_time.split(\":\"))\nexplosion_hour, explosion_minute, explosion_second = map(int, explosion_time.split(\":\"))\n\nif explosion_hour<current_hour:\n    explosion_hour += 24\n\nif explosion_hour == current_hour and explosion_minute < current_minute:\n    explosion_hour += 24\n\nif explosion_hour == current_hour and explosion_minute == current_minute and explosion_second < current_second:\n    explosion_hour += 24\n\nexplosion_hour -= current_hour\nexplosion_minute -= current_minute\nexplosion_second -= current_second\n\nif explosion_second < 0:\n    explosion_second += 60\n    explosion_minute -= 1\n\nif explosion_minute < 0:\n    explosion_minute += 60\n    explosion_hour -= 1\n\nprint(str(explosion_hour) + \":\" + str(explosion_minute) + \":\" + str(explosion_second))\n", "from datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time += current_time - datetime.strptime('00:00:00', '%H:%M:%S')\n    print(explosion_time.strftime('%H:%M:%S'))\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom datetime import datetime\n\ndef main():\n    current_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time = datetime.strptime(input(), '%H:%M:%S')\n    explosion_time += current_time - datetime.strptime('00:00:00', '%H:%M:%S')\n    print(explosion_time.strftime('%H:%M:%S'))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    time_now = [int(x) for x in sys.stdin.readline().strip().split(\":\")]\n    time_explosion = [int(x) for x in sys.stdin.readline().strip().split(\":\")]\n\n    time_explosion[0] += time_explosion[0] < time_now[0]\n    time_explosion[1] += time_explosion[1] < time_now[1]\n    time_explosion[2] += time_explosion[2] < time_now[2]\n\n    time_explosion[1] += (time_explosion[2] - time_now[2]) // 60\n    time_explosion[2] = (time_explosion[2] - time_now[2]) % 60\n\n    time_explosion[0] += (time_explosion[1] - time_now[1]) // 60\n    time_explosion[1] = (time_explosion[1] - time_now[1]) % 60\n\n    print(\":\".join(map(str, time_explosion)))\n\nmain()\n", "\nimport sys\n\ndef calcTime(currTime, targetTime):\n    #calculate the difference between the current time and the target time\n    #if the difference is negative, add 24 hours\n    #this will give us the time until the target time\n    #if the difference is greater than 24 hours, subtract 24 hours\n    #this will give us the time until the target time\n    #return the time until the target time\n    currTime = currTime.split(':')\n    targetTime = targetTime.split(':')\n    currTime = [int(currTime[0]), int(currTime[1]), int(currTime[2])]\n    targetTime = [int(targetTime[0]), int(targetTime[1]), int(targetTime[2])]\n    diff = [targetTime[0] - currTime[0], targetTime[1] - currTime[1], targetTime[2] - currTime[2]]\n    if diff[0] < 0:\n        diff[0] += 24\n    if diff[1] < 0:\n        diff[0] -= 1\n        diff[1] += 60\n    if diff[2] < 0:\n        diff[1] -= 1\n        diff[2] += 60\n    if diff[0] > 24:\n        diff[0] -= 24\n    return ':'.join(map(str, diff))\n\ndef main():\n    currTime = sys.stdin.readline().strip()\n    targetTime = sys.stdin.readline().strip()\n    print(calcTime(currTime, targetTime))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    time_now = sys.stdin.readline()\n    time_now = time_now.strip().split(\":\")\n    time_now = [int(x) for x in time_now]\n\n    time_explosion = sys.stdin.readline()\n    time_explosion = time_explosion.strip().split(\":\")\n    time_explosion = [int(x) for x in time_explosion]\n\n    if time_explosion[0] < time_now[0]:\n        time_explosion[0] += 24\n\n    if time_explosion[1] < time_now[1]:\n        time_explosion[0] -= 1\n        time_explosion[1] += 60\n\n    if time_explosion[2] < time_now[2]:\n        time_explosion[1] -= 1\n        time_explosion[2] += 60\n\n    time_explosion = [str(x) for x in time_explosion]\n    print(\":\".join(time_explosion))\n\nmain()\n", "\nimport sys\nimport datetime\n\ndef main():\n    current_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    desired_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    current_time = datetime.time(current_time[0], current_time[1], current_time[2])\n    desired_time = datetime.time(desired_time[0], desired_time[1], desired_time[2])\n    if desired_time < current_time:\n        desired_time = datetime.datetime.combine(datetime.date.today() + datetime.timedelta(days=1), desired_time)\n    else:\n        desired_time = datetime.datetime.combine(datetime.date.today(), desired_time)\n    print(desired_time - datetime.datetime.combine(datetime.date.today(), current_time))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef parseTime(time_str):\n    h, m, s = time_str.split(\":\")\n    return int(h), int(m), int(s)\n\n\ndef getTimeDiff(current_time, desired_time):\n    h1, m1, s1 = parseTime(current_time)\n    h2, m2, s2 = parseTime(desired_time)\n    h_diff = h2 - h1\n    m_diff = m2 - m1\n    s_diff = s2 - s1\n    if s_diff < 0:\n        s_diff += 60\n        m_diff -= 1\n    if m_diff < 0:\n        m_diff += 60\n        h_diff -= 1\n    if h_diff < 0:\n        h_diff += 24\n    return h_diff, m_diff, s_diff\n\n\ndef formatTime(h, m, s):\n    return \"{:02}:{:02}:{:02}\".format(h, m, s)\n\n\ndef main():\n    current_time = input()\n    desired_time = input()\n    h, m, s = getTimeDiff(current_time, desired_time)\n    print(formatTime(h, m, s))\n\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\nif __name__ == \"__main__\":\n    current_time = [int(i) for i in input().split(\":\")]\n    time_to_explode = [int(i) for i in input().split(\":\")]\n    current_time_in_seconds = current_time[0]*3600 + current_time[1]*60 + current_time[2]\n    time_to_explode_in_seconds = time_to_explode[0]*3600 + time_to_explode[1]*60 + time_to_explode[2]\n    if time_to_explode_in_seconds < current_time_in_seconds:\n        time_to_explode_in_seconds += 24*3600\n    time_to_explode_in_seconds -= current_time_in_seconds\n    hours = time_to_explode_in_seconds // 3600\n    time_to_explode_in_seconds %= 3600\n    minutes = time_to_explode_in_seconds // 60\n    time_to_explode_in_seconds %= 60\n    seconds = time_to_explode_in_seconds\n    print(str(hours).zfill(2) + \":\" + str(minutes).zfill(2) + \":\" + str(seconds).zfill(2))\n", "\n\nimport sys\n\ndef calcTime(currTime, targetTime):\n    #calculate the difference between the current time and the target time\n    #if the difference is negative, add 24 hours\n    #this will give us the time until the target time\n    #if the difference is greater than 24 hours, subtract 24 hours\n    #this will give us the time until the target time\n    #return the time until the target time\n    currTime = currTime.split(':').map(int)\n    targetTime = targetTime.split(':').map(int)\n    diff = [targetTime[0] - currTime[0], targetTime[1] - currTime[1], targetTime[2] - currTime[2]]    \n    if diff[0] < 0:\n        diff[0] += 24\n    if diff[1] < 0:\n        diff[0] -= 1\n        diff[1] += 60\n    if diff[2] < 0:\n        diff[1] -= 1\n        diff[2] += 60\n    if diff[0] > 24:\n        diff[0] -= 24\n    return ':'.join(map(str, diff))\n\ndef main():\n    currTime = sys.stdin.readline().strip()\n    targetTime = sys.stdin.readline().strip()\n    print(calcTime(currTime, targetTime))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport datetime\n\ndef main():\n    current_time = [int(x) for x in sys.stdin.readline().strip().split(' ')]\n    desired_time = [int(x) for x in sys.stdin.readline().strip().split(' ')]\n    current_time = datetime.time(current_time[3], current_time[4], current_time[5])\n    desired_time = datetime.time(desired_time[3], desired_time[4], desired_time[5])\n    if desired_time < current_time:\n        desired_time = datetime.datetime.combine(datetime.date.today() + datetime.timedelta(days=1), desired_time)\n    else:\n        desired_time = datetime.datetime.combine(datetime.date.today(), desired_time)\n    print((desired_time - datetime.datetime.combine(datetime.date.today(), current_time)).total_seconds())\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline()\n    time_now = time_now.strip().split(\":\")\n    time_now = [int(x) for x in time_now]\n\n    time_explode = sys.stdin.readline()\n    time_explode = time_explode.strip().split(\":\")\n    time_explode = [int(x) for x in time_explode]\n\n    if time_explode[0] < time_now[0]:\n        time_explode[0] += 24\n\n    if time_explode[1] < time_now[1]:\n        time_explode[0] -= 1\n        time_explode[1] += 60\n\n    if time_explode[2] < time_now[2]:\n        time_explode[1] -= 1\n        time_explode[2] += 60\n\n    time_explosion = [str(x) for x in time_explosion]\n    print(\":\".join(time_explosion))\n\nmain()\n", "\n\nimport sys\nimport datetime\n\ndef main():\n    current_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    desired_time = [int(x) for x in sys.stdin.readline().strip().split(':')]\n    current_time = datetime.time(current_time[0], current_time[1], current_time[2])\n    desired_time = datetime.time(desired_time[0], desired_time[1], desired_time[2])\n    if desired_time < current_time:\n        desired_time = datetime.datetime.combine(datetime.date.today() + datetime.timedelta(days=1), desired_time)\n    else:\n        desired_time = datetime.datetime.combine(datetime.date.today(), desired_time)\n    print(desired_time - datetime.datetime.combine(datetime.date.today(), current_time).time())\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline()\n    time_now = time_now.strip().split(\":\")\n    time_now = [int(x) for x in time_now]\n\n    time_explosion = sys.stdin.readline()\n    time_explosion = time_explosion.strip().split(\":\")\n    time_explosion = [int(x) for x in time_explosion]\n\n    if time_explosion[0] < time_now[0]:\n        time_explosion[0] += 24\n\n    if time_explosion[1] < time_now[1]:\n        time_explosion[0] -= 1\n        time_explosion[1] += 60\n\n    if time_explosion[2] < time_now[2]:\n        time_explosion[1] -= 1\n        time_explosion[2] += 60\n\n    time_explosion = [str(x) for x in time_explosion]\n    print(\":\".join(time_explosion))\n\nmain()\n\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline()\n    time_now = time_now.strip().split(\":\")\n    time_now = [int(x) for x in time_now]\n\n    time_explosion = sys.stdin.readline()\n    time_explosion = time_explosion.strip().split(\":\")\n    time_explosion = [int(x) for x in time_explosion]\n\n    if time_explosion[0] < time_now[0]:\n        time_explosion[0] += 24\n\n    if time_explosion[1] < time_now[1]:\n        time_explosion[0] -= 1\n        time_explosion[1] += 60\n\n    if time_explosion[2] < time_now[2]:\n        time_explosion[1] -= 1\n        time_explosion[2] += 60\n\n    time_explosion = [str(x) for x in time_explosion]\n    print(\":\".join(time_explosion))\n\n\nmain()\n", "\n\n#-----main-----\n\ncurrent_time = input('Enter the current time: ')\nexplosion_time = input('Enter the explosion time: ')\n\ncurrent_hour, current_minute, current_second = map(int,current_time.split(\":\"))\nexplosion_hour, explosion_minute, explosion_second = map(int,explosion_time.split(\":\"))\n\nif explosion_hour<current_hour:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute<current_minute:\n    explosion_hour+=24\n\nif explosion_hour==current_hour and explosion_minute==current_minute and explosion_second<current_second:\n    explosion_hour+=24\n\nexplosion_hour-=current_hour\nexplosion_minute-=current_minute\nexplosion_second-=current_second\n\nif explosion_second<0:\n    explosion_second+=60\n    explosion_minute-=1\n\nif explosion_minute<0:\n    explosion_minute+=60\n    explosion_hour-=1\n\nprint(str(explosion_hour)+\":\"+str(explosion_minute)+\":\"+str(explosion_second))\n", "\nimport sys\nimport sys\n\ndef main():\n    time_now = sys.stdin.readline().strip().split(\":\")\n    time_now = [int(x) for x in time_now] \n    time_explosion = sys.stdin.readline().strip().split(\":\")\n    time_explosion = [int(x) for x in time_explosion] \n    if time_explosion[0] < time_now[0]: \n        time_explosion[0] += 24 \n    if time_explosion[1] < time_now[1]: \n        time_explosion[0] -= 1 \n        time_explosion[1] += 60 \n    if time_explosion[2] < time_now[2]: \n        time_explosion[1] -= 1 \n        time_explosion[2] += 60 \n    time_explosion = [str(x) for x in time_explosion] \n    print(\":\".join(time_explosion)) \nmain()\n", "\n\nimport sys\n\ndef calcTime(currTime, targetTime):\n    #calculate the difference between the current time and the target time\n    #if the difference is negative, add 24 hours\n    #this will give us the time until the target time\n    #if the difference is greater than 24 hours, subtract 24 hours\n    #this will give us the time until the target time\n    #return the time until the target time\n    currTime = currTime.split(':')\n    targetTime = targetTime.split(':')\n    currTime = [int(currTime[0]), int(currTime[1]), int(currTime[2])]\n    targetTime = [int(targetTime[0]), int(targetTime[1]), int(targetTime[2])]\n    diff = [targetTime[0] - currTime[0], targetTime[1] - currTime[1], targetTime[2] - currTime[2]]\n    if diff[0] < 0:\n        diff[0] += 24\n    if diff[1] < 0:\n        diff[0] -= 1\n        diff[1] += 60\n    if diff[2] < 0:\n        diff[1] -= 1\n        diff[2] += 60\n    if diff[0] > 24:\n        diff[0] -= 24\n    return ':'.join(map(str, diff)) + '\\n'\n\ndef main():\n    currTime = sys.stdin.readline().strip()\n    targetTime = sys.stdin.readline().strip()\n    print(calcTime(currTime, targetTime))\n\nif __name__ == '__main__':\n    main()\n"]