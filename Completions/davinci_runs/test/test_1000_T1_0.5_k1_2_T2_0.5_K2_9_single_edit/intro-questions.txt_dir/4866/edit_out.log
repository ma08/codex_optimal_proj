2022-04-16 12:51:25.070789 num operations 1
2022-04-16 12:51:25.070805 size on input set 1
2022-04-16 12:52:06.914781 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nmonth, day = input().split()\nif month == \"OCT\" and day == \"31\" or month == \"DEC\" and day == \"25\":\nelif month == \"JAN\" and day == \"1\":\n    print(\"yup\")\nelif month == \"MAR\" and day == \"8\":\n    print(\"yup\")\n    print(\"yup\")\nelse:\n    print(\"nope\")\n"
    },
    {
      "index": 1,
      "text": "\n\nmonth, day = input().split(\" \")\nif (month == \"OCT\" and day == \"31\") or (month == \"DEC\" and day == \"25\"):\n    print(\"yup\")\nelse:\n    print(\"nope\")\n"
    },
    {
      "index": 2,
      "text": "\n\nmonth, day = input().split(' ')\nif month == \"OCT\" and day == \"31\" or month == \"DEC\" and day == \"25\":  # check if the given date is Halloween or Christmas\n    print(\"yup\")\nelse:\n    print(\"nope\")\n"
    },
    {
      "index": 3,
      "text": "\nprint(\"yup\")\n"
    },
    {
      "index": 4,
      "text": "\n\nmonth, day = input().split()\nif month == \"OCT\" and day == \"31\" or (month == \"DEC\" and day == \"25\"):\n    print(\"yup\")\nelse:\n    print(\"nope\")\n"
    },
    {
      "index": 5,
      "text": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nelse:\n    print(\"nope\")\n"
    },
    {
      "index": 6,
      "text": "\n\n"
    },
    {
      "index": 7,
      "text": "\n\nmonth, day = input().split()\nif (month == \"OCT\" and day == \"31\") or (month == \"DEC\" and day == \"25\"):\n    print(\"yup\")\nelse:\n    print(\"nope\")\n"
    },
    {
      "index": 8,
      "text": "\n\ns = input()\nif s[0] == 'A' and s[2:-1].count('C') == 1:\n    s = s[1:]\n    s = s.replace('C', '')\n    if s.islower():\n        print('AC')\n    else:\n        print('WA')\nelse:\n    print('WA')\n"
    }
  ],
  "created": 1650113485,
  "object": "edit"
}
2022-04-16 12:52:06.915105 fix syntax errors 9 ['\n\nmonth, day = input().split()\nif month == "OCT" and day == "31" or month == "DEC" and day == "25":\nelif month == "JAN" and day == "1":\n    print("yup")\nelif month == "MAR" and day == "8":\n    print("yup")\n    print("yup")\nelse:\n    print("nope")\n', '\n\nmonth, day = input().split(" ")\nif (month == "OCT" and day == "31") or (month == "DEC" and day == "25"):\n    print("yup")\nelse:\n    print("nope")\n', '\n\nmonth, day = input().split(\' \')\nif month == "OCT" and day == "31" or month == "DEC" and day == "25":  # check if the given date is Halloween or Christmas\n    print("yup")\nelse:\n    print("nope")\n', '\nprint("yup")\n', '\n\nmonth, day = input().split()\nif month == "OCT" and day == "31" or (month == "DEC" and day == "25"):\n    print("yup")\nelse:\n    print("nope")\n', '\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nelse:\n    print("nope")\n', '\n\n', '\n\nmonth, day = input().split()\nif (month == "OCT" and day == "31") or (month == "DEC" and day == "25"):\n    print("yup")\nelse:\n    print("nope")\n', "\n\ns = input()\nif s[0] == 'A' and s[2:-1].count('C') == 1:\n    s = s[1:]\n    s = s.replace('C', '')\n    if s.islower():\n        print('AC')\n    else:\n        print('WA')\nelse:\n    print('WA')\n"]
2022-04-16 12:52:06.915151 size on output set 9
2022-04-16 12:52:06.915164 num operations 1
2022-04-16 12:52:06.915169 size on input set 1
2022-04-16 12:52:18.893298 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef is_halloween(date):\n    month, day = date.split()  # split date into month and day\n    month = month.upper()  # convert month to uppercase\n    day = int(day)  # convert day to int\n\n    if month == \"OCT\" and day == 31:  # check for halloween\n        return \"yup\"\n    elif month == \"DEC\" and day == 25:  # check for christmas\n        return \"yup\"\n    else:  # otherwise, it's not halloween\n        return \"nope\"\n\ndef main():\n    date = sys.stdin.readline().strip()  # read in date from stdin\n    print(is_halloween(date))  # print if it's halloween\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef is_halloween(date):\n    month, day = date.split()  # month, day = \"OCT 31\".split() ==> month = \"OCT\", day = \"31\"\n    month = month.upper()  # month = \"OCT\".upper() ==> month = \"OCT\"\n    day = int(day)  # day = \"31\".int() ==> day = 31\n\n    if month == \"OCT\" and day == 31:\n        return \"yup\"\n    elif month == \"DEC\" and day == 25:\n        return \"yup\"\n    else:\n        return \"nope\"\n\ndef main():\n    date = sys.stdin.readline().strip()\n    print(is_halloween(date))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef is_halloween(date):\n    month, day = date.split()\n    month = month.upper()\n    day = int(day)\n\n    if month == \"OCT\" and day == 31:\n        return \"yup\"\n    elif month == \"DEC\" and day == 25:\n        return \"yup\"\n    else:\n        return \"nope\"\n\ndef main():\n    date = sys.stdin.readline().strip()\n    print(is_halloween(date))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef is_halloween(date):\n    month, day = date.split()\n    month = month.upper()\n    day = int(day)\n\n    if month == \"OCT\" and day == 31:\n        return \"yup\"\n    elif month == \"DEC\" and day == 25:\n        return \"yup\"\n    else:\n        return \"nope\"\n\ndef main():\n    date = sys.stdin.readline().strip()\n    print(is_halloween(date))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\ndef is_halloween(date):\n    month, day = date.split()\n    month = month.upper()\n    day = int(day)\n\n    if month == \"OCT\" and day == 31:\n        return \"yup\"\n    elif month == \"DEC\" and day == 25:\n        return \"yup\"\n    else:\n        return \"nope\"\n\ndef main():\n    date = sys.stdin.readline().strip()\n    print(is_halloween(date))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef is_halloween(date):\n    month, day = date.split()\n    month = month.upper()\n    day = int(day)\n\n    if month == \"OCT\" and day == 31: \n        return \"yup\"\n    elif month == \"DEC\" and day == 25:\n        return \"yup\"\n    else:\n        return \"nope\"\n\ndef main():\n    date = sys.stdin.readline().strip()\n    print(is_halloween(date))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef is_halloween(date):\n    month, day = date.split()\n    month = month.upper()\n    day = int(day)\n\n    if month == \"OCT\" and day == 31:\n        return \"yup\"\n    elif month == \"DEC\" and day == 25:\n        return \"yup\"\n    else:\n        return \"nope\"\n\ndef main():\n    date = sys.stdin.readline().strip()\n    print(is_halloween(date))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "import sys\n\ndef is_halloween(date):\n    month, day = date.split()\n    month = month.upper()\n    day = int(day)\n\n    if month == \"OCT\" and day == 31:\n        return \"yup\"\n    elif month == \"DEC\" and day == 25:\n        return \"yup\"\n    else:\n        return \"nope\"\n\ndef main():\n    date = sys.stdin.readline().strip()\n    print(is_halloween(date))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\nimport sys\n\ndef is_halloween(date):\n    month, day = date.split(\" \")\n    month = month.upper()\n    day = int(day)\n\n    if month == \"OCT\" and day == \"31\":\n        return \"yup\" + month\n    elif month == \"DEC\" and day == \"25\":\n        return \"yup\"\n    else:\n        return \"nope\"\n\ndef main():\n    date = sys.stdin.readline().strip()\n    print(is_halloween(date))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650113526,
  "object": "edit"
}
2022-04-16 12:52:18.893627 fix syntax errors 9 ['#!/usr/bin/env python3\n\nimport sys\n\ndef is_halloween(date):\n    month, day = date.split()  # split date into month and day\n    month = month.upper()  # convert month to uppercase\n    day = int(day)  # convert day to int\n\n    if month == "OCT" and day == 31:  # check for halloween\n        return "yup"\n    elif month == "DEC" and day == 25:  # check for christmas\n        return "yup"\n    else:  # otherwise, it\'s not halloween\n        return "nope"\n\ndef main():\n    date = sys.stdin.readline().strip()  # read in date from stdin\n    print(is_halloween(date))  # print if it\'s halloween\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef is_halloween(date):\n    month, day = date.split()  # month, day = "OCT 31".split() ==> month = "OCT", day = "31"\n    month = month.upper()  # month = "OCT".upper() ==> month = "OCT"\n    day = int(day)  # day = "31".int() ==> day = 31\n\n    if month == "OCT" and day == 31:\n        return "yup"\n    elif month == "DEC" and day == 25:\n        return "yup"\n    else:\n        return "nope"\n\ndef main():\n    date = sys.stdin.readline().strip()\n    print(is_halloween(date))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef is_halloween(date):\n    month, day = date.split()\n    month = month.upper()\n    day = int(day)\n\n    if month == "OCT" and day == 31:\n        return "yup"\n    elif month == "DEC" and day == 25:\n        return "yup"\n    else:\n        return "nope"\n\ndef main():\n    date = sys.stdin.readline().strip()\n    print(is_halloween(date))\n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/env python3\n\nimport sys\n\ndef is_halloween(date):\n    month, day = date.split()\n    month = month.upper()\n    day = int(day)\n\n    if month == "OCT" and day == 31:\n        return "yup"\n    elif month == "DEC" and day == 25:\n        return "yup"\n    else:\n        return "nope"\n\ndef main():\n    date = sys.stdin.readline().strip()\n    print(is_halloween(date))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef is_halloween(date):\n    month, day = date.split()\n    month = month.upper()\n    day = int(day)\n\n    if month == "OCT" and day == 31:\n        return "yup"\n    elif month == "DEC" and day == 25:\n        return "yup"\n    else:\n        return "nope"\n\ndef main():\n    date = sys.stdin.readline().strip()\n    print(is_halloween(date))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef is_halloween(date):\n    month, day = date.split()\n    month = month.upper()\n    day = int(day)\n\n    if month == "OCT" and day == 31: \n        return "yup"\n    elif month == "DEC" and day == 25:\n        return "yup"\n    else:\n        return "nope"\n\ndef main():\n    date = sys.stdin.readline().strip()\n    print(is_halloween(date))\n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/env python3\n\nimport sys\n\ndef is_halloween(date):\n    month, day = date.split()\n    month = month.upper()\n    day = int(day)\n\n    if month == "OCT" and day == 31:\n        return "yup"\n    elif month == "DEC" and day == 25:\n        return "yup"\n    else:\n        return "nope"\n\ndef main():\n    date = sys.stdin.readline().strip()\n    print(is_halloween(date))\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef is_halloween(date):\n    month, day = date.split()\n    month = month.upper()\n    day = int(day)\n\n    if month == "OCT" and day == 31:\n        return "yup"\n    elif month == "DEC" and day == 25:\n        return "yup"\n    else:\n        return "nope"\n\ndef main():\n    date = sys.stdin.readline().strip()\n    print(is_halloween(date))\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef is_halloween(date):\n    month, day = date.split(" ")\n    month = month.upper()\n    day = int(day)\n\n    if month == "OCT" and day == "31":\n        return "yup" + month\n    elif month == "DEC" and day == "25":\n        return "yup"\n    else:\n        return "nope"\n\ndef main():\n    date = sys.stdin.readline().strip()\n    print(is_halloween(date))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 12:52:18.893684 size on output set 7
2022-04-16 12:52:18.893695 num operations 1
2022-04-16 12:52:18.893699 size on input set 1
2022-04-16 12:52:30.102680 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\nimport sys\nimport calendar\nimport datetime\n\nmonth_index = {'JAN':1, 'FEB':2, 'MAR':3, 'APR':4, 'MAY':5, 'JUN':6, 'JUL':7, 'AUG':8, 'SEP':9, 'OCT':10, 'NOV':11, 'DEC':12}\n\ndef main():\n    date = sys.stdin.readline().strip().split(' ')\n    month = month_index[date[0]]\n    day = int(date[1])\n\n    if (month == 10 and day == 31) or (month == 12 and day == 25):\n        print('yup')\n    else:\n        print('nope')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n# SOLUTION\n\nimport sys\nimport calendar\nimport datetime\n\nmonth_index = {'JAN':1, 'FEB':2, 'MAR':3, 'APR':4, 'MAY':5, 'JUN':6, 'JUL':7, 'AUG':8, 'SEP':9, 'OCT':10, 'NOV':11, 'DEC':12}\n\ndef main():\n    date = sys.stdin.readline().strip().split(' ')\n    month = month_index[date[0]]\n    day = int(date[1])\n\n    if (month == 10 and day == 31) or (month == 12 and day == 25):\n        print('yup')\n    else:\n        print('nope')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\n# SOLUTION\n\nimport sys\nimport calendar\nimport datetime\n\nmonth_index = {'JAN':1, 'FEB':2, 'MAR':3, 'APR':4, 'MAY':5, 'JUN':6, 'JUL':7, 'AUG':8, 'SEP':9, 'OCT':10, 'NOV':11, 'DEC':12}\n\ndef main():\n    date = sys.stdin.readline().strip().split(' ')\n    month = month_index[date[0]]\n    day = int(date[1])\n\n    if (month == 10 and day == 31) or (month == 12 and day == 25):\n        print('yup')\n    else:\n        print('nope')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\n# SOLUTION\n\nimport sys\nimport calendar\nimport datetime\n\nmonth_index = {'JAN':1, 'FEB':2, 'MAR':3, 'APR':4, 'MAY':5, 'JUN':6, 'JUL':7, 'AUG':8, 'SEP':9, 'OCT':10, 'NOV':11, 'DEC':12}\n\ndef main():\n    date = sys.stdin.readline().strip().split(' ')\n    month = month_index[date[0]]\n    day = int(date[1])\n\n    if (month == 10 and day == 31) or (month == 12 and day == 25):\n        print('yup')\n    else:\n        print('nope')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline().strip().split(' ')\n    month = line[0]\n    day = line[1]\n\n    if (month == 'OCT' and day == '31') or (month == 'DEC' and day == '25'):\n        print('yup')\n    else:\n        print('nope')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\n# SOLUTION\n\nimport sys\nimport calendar\nimport datetime\n\nmonth_index = {'JAN':1, 'FEB':2, 'MAR':3, 'APR':4, 'MAY':5, 'JUN':6, 'JUL':7, 'AUG':8, 'SEP':9, 'OCT':10, 'NOV':11, 'DEC':12}\n\ndef main():\n    date = sys.stdin.readline().strip().split(' ')\n    month = month_index[date[0]]\n    day = int(date[1])\n\n    if (month == 10 and day == 31) or (month == 12 and day == 25):\n        print('yup')\n    else:\n        print('nope')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\n# SOLUTION\n\nimport sys\n\nmonth_index = {\n    'JAN': 1,\n    'FEB': 2,\n    'MAR': 3,\n    'APR': 4,\n    'MAY': 5,\n    'JUN': 6,\n    'JUL': 7,\n    'AUG': 8,\n    'SEP': 9,\n    'OCT': 10,\n    'NOV': 11,\n    'DEC': 12\n}\n\n\ndef main():\n    date = sys.stdin.readline().strip().split(' ')\n    month = month_index[date[0]]\n    day = int(date[1])\n\n    if (month == 10 and day == 31) or (month == 12 and day == 25):\n        print('yup')\n    else:\n        print('nope')\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\n# SOLUTION\n\nimport sys\nimport calendar\nimport datetime\n\nmonth_index = {'JAN':1, 'FEB':2, 'MAR':3, 'APR':4, 'MAY':5, 'JUN':6, 'JUL':7, 'AUG':8, 'SEP':9, 'OCT':10, 'NOV':11, 'DEC':12}\n\ndef main():\n    date = sys.stdin.readline().strip().split(' ')\n    month = month_index[date[0]]\n    day = int(date[1])\n\n    if (month == 10 and day == 31) or (month == 12 and day == 25):\n        print('yup')\n    else:\n        print('nope')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\n\n\nimport sys\nimport calendar\nimport datetime\n\nmonth_index = {'JAN':1, 'FEB':2, 'MAR':3, 'APR':4, 'MAY':5, 'JUN':6, 'JUL':7, 'AUG':8, 'SEP':9, 'OCT':10, 'NOV':11, 'DEC':12}\n\ndef main():\n    date = sys.stdin.readline().strip().split(' ')\n    month = month_index[date[0]]\n    day = int(date[1])\n\n    if (month == 10 and day == 31) or (month == 12 and day == 25):\n        print('yup')\n    else:\n        print('nope')\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650113538,
  "object": "edit"
}
2022-04-16 12:52:30.103127 fix syntax errors 9 ["\n\n\nimport sys\nimport calendar\nimport datetime\n\nmonth_index = {'JAN':1, 'FEB':2, 'MAR':3, 'APR':4, 'MAY':5, 'JUN':6, 'JUL':7, 'AUG':8, 'SEP':9, 'OCT':10, 'NOV':11, 'DEC':12}\n\ndef main():\n    date = sys.stdin.readline().strip().split(' ')\n    month = month_index[date[0]]\n    day = int(date[1])\n\n    if (month == 10 and day == 31) or (month == 12 and day == 25):\n        print('yup')\n    else:\n        print('nope')\n\nif __name__ == '__main__':\n    main()\n", "\n\n# SOLUTION\n\nimport sys\nimport calendar\nimport datetime\n\nmonth_index = {'JAN':1, 'FEB':2, 'MAR':3, 'APR':4, 'MAY':5, 'JUN':6, 'JUL':7, 'AUG':8, 'SEP':9, 'OCT':10, 'NOV':11, 'DEC':12}\n\ndef main():\n    date = sys.stdin.readline().strip().split(' ')\n    month = month_index[date[0]]\n    day = int(date[1])\n\n    if (month == 10 and day == 31) or (month == 12 and day == 25):\n        print('yup')\n    else:\n        print('nope')\n\nif __name__ == '__main__':\n    main()\n", "\n\n# SOLUTION\n\nimport sys\nimport calendar\nimport datetime\n\nmonth_index = {'JAN':1, 'FEB':2, 'MAR':3, 'APR':4, 'MAY':5, 'JUN':6, 'JUL':7, 'AUG':8, 'SEP':9, 'OCT':10, 'NOV':11, 'DEC':12}\n\ndef main():\n    date = sys.stdin.readline().strip().split(' ')\n    month = month_index[date[0]]\n    day = int(date[1])\n\n    if (month == 10 and day == 31) or (month == 12 and day == 25):\n        print('yup')\n    else:\n        print('nope')\n\nif __name__ == '__main__':\n    main()\n", "\n\n# SOLUTION\n\nimport sys\nimport calendar\nimport datetime\n\nmonth_index = {'JAN':1, 'FEB':2, 'MAR':3, 'APR':4, 'MAY':5, 'JUN':6, 'JUL':7, 'AUG':8, 'SEP':9, 'OCT':10, 'NOV':11, 'DEC':12}\n\ndef main():\n    date = sys.stdin.readline().strip().split(' ')\n    month = month_index[date[0]]\n    day = int(date[1])\n\n    if (month == 10 and day == 31) or (month == 12 and day == 25):\n        print('yup')\n    else:\n        print('nope')\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    line = sys.stdin.readline().strip().split(' ')\n    month = line[0]\n    day = line[1]\n\n    if (month == 'OCT' and day == '31') or (month == 'DEC' and day == '25'):\n        print('yup')\n    else:\n        print('nope')\n\nif __name__ == '__main__':\n    main()\n", "\n\n# SOLUTION\n\nimport sys\nimport calendar\nimport datetime\n\nmonth_index = {'JAN':1, 'FEB':2, 'MAR':3, 'APR':4, 'MAY':5, 'JUN':6, 'JUL':7, 'AUG':8, 'SEP':9, 'OCT':10, 'NOV':11, 'DEC':12}\n\ndef main():\n    date = sys.stdin.readline().strip().split(' ')\n    month = month_index[date[0]]\n    day = int(date[1])\n\n    if (month == 10 and day == 31) or (month == 12 and day == 25):\n        print('yup')\n    else:\n        print('nope')\n\nif __name__ == '__main__':\n    main()\n", "\n\n# SOLUTION\n\nimport sys\n\nmonth_index = {\n    'JAN': 1,\n    'FEB': 2,\n    'MAR': 3,\n    'APR': 4,\n    'MAY': 5,\n    'JUN': 6,\n    'JUL': 7,\n    'AUG': 8,\n    'SEP': 9,\n    'OCT': 10,\n    'NOV': 11,\n    'DEC': 12\n}\n\n\ndef main():\n    date = sys.stdin.readline().strip().split(' ')\n    month = month_index[date[0]]\n    day = int(date[1])\n\n    if (month == 10 and day == 31) or (month == 12 and day == 25):\n        print('yup')\n    else:\n        print('nope')\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n# SOLUTION\n\nimport sys\nimport calendar\nimport datetime\n\nmonth_index = {'JAN':1, 'FEB':2, 'MAR':3, 'APR':4, 'MAY':5, 'JUN':6, 'JUL':7, 'AUG':8, 'SEP':9, 'OCT':10, 'NOV':11, 'DEC':12}\n\ndef main():\n    date = sys.stdin.readline().strip().split(' ')\n    month = month_index[date[0]]\n    day = int(date[1])\n\n    if (month == 10 and day == 31) or (month == 12 and day == 25):\n        print('yup')\n    else:\n        print('nope')\n\nif __name__ == '__main__':\n    main()\n", "\n\n\n\nimport sys\nimport calendar\nimport datetime\n\nmonth_index = {'JAN':1, 'FEB':2, 'MAR':3, 'APR':4, 'MAY':5, 'JUN':6, 'JUL':7, 'AUG':8, 'SEP':9, 'OCT':10, 'NOV':11, 'DEC':12}\n\ndef main():\n    date = sys.stdin.readline().strip().split(' ')\n    month = month_index[date[0]]\n    day = int(date[1])\n\n    if (month == 10 and day == 31) or (month == 12 and day == 25):\n        print('yup')\n    else:\n        print('nope')\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 12:52:30.103190 size on output set 5
2022-04-16 12:52:30.103202 num operations 1
2022-04-16 12:52:30.103207 size on input set 1
2022-04-16 12:52:37.475134 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nmonth, day = input().split()\nif month in (\"OCT\", \"DEC\") and day == \"25\":\n    print(\"yup\")\nelse:\n    print(\"nope\")\n"
    },
    {
      "index": 1,
      "text": "\n\nmonth = input()\nday = int(input())\nif month in [\"OCT\", \"DEC\"] and day == 25:\n    print(\"yup\")\nelse:\n    print(\"nope\")\n"
    },
    {
      "index": 2,
      "text": "\n\n#this is a comment\n\nmonth, day = input().split()\nif month in [\"OCT\", \"DEC\"] and day == \"25\":\n    print(\"yup\")\nelse:\n    print(\"nope\")\n"
    },
    {
      "index": 3,
      "text": "\nprint(\"yup\")\n"
    },
    {
      "index": 4,
      "text": "\n\nmonth, day = input().split(' ')\nif month in [\"OCT\", \"DEC\"] and day == \"31\":\n    print(\"yup\")\nelse:\n    print(\"nope\")\n"
    },
    {
      "index": 5,
      "text": "\n\nmonth, day = input().split() \nif month == \"OCT\" and day == \"31\" or month == \"DEC\" and day == \"25\":\n    print(\"yup\")\nelse:\n    print(\"nope\")\n"
    },
    {
      "index": 6,
      "text": "\nprint(\"nope\")\n"
    },
    {
      "index": 7,
      "text": "\n\nmonth, day = input().split(\" \")\nif month in [\"OCT\", \"DEC\"] and int(day) == 25:\n    print(\"yup\")\nelse:\n    print(\"nope\")\n"
    },
    {
      "index": 8,
      "text": "\n\n\nwith open(\"file.txt\") as f:\n    for line in f:\n        print(line.split())\n"
    }
  ],
  "created": 1650113550,
  "object": "edit"
}
2022-04-16 12:52:37.475370 fix syntax errors 9 ['\n\nmonth, day = input().split()\nif month in ("OCT", "DEC") and day == "25":\n    print("yup")\nelse:\n    print("nope")\n', '\n\nmonth = input()\nday = int(input())\nif month in ["OCT", "DEC"] and day == 25:\n    print("yup")\nelse:\n    print("nope")\n', '\n\n#this is a comment\n\nmonth, day = input().split()\nif month in ["OCT", "DEC"] and day == "25":\n    print("yup")\nelse:\n    print("nope")\n', '\nprint("yup")\n', '\n\nmonth, day = input().split(\' \')\nif month in ["OCT", "DEC"] and day == "31":\n    print("yup")\nelse:\n    print("nope")\n', '\n\nmonth, day = input().split() \nif month == "OCT" and day == "31" or month == "DEC" and day == "25":\n    print("yup")\nelse:\n    print("nope")\n', '\nprint("nope")\n', '\n\nmonth, day = input().split(" ")\nif month in ["OCT", "DEC"] and int(day) == 25:\n    print("yup")\nelse:\n    print("nope")\n', '\n\n\nwith open("file.txt") as f:\n    for line in f:\n        print(line.split())\n']
2022-04-16 12:52:37.475415 size on output set 9
2022-04-16 12:52:37.475435 num operations 1
2022-04-16 12:52:37.475441 size on input set 1
2022-04-16 12:52:44.631529 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    for line in sys.stdin:\n        month, day = line.split()\n        if month == 'OCT' and day == '31':\n            print('yup')\n        elif month == 'DEC' and day == '25':\n            print('yup')\n        else:\n            print('nope')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    for line in sys.stdin:\n        month, day = line.split()\n        if (month == 'OCT' and day == '31') or (month == 'DEC' and day == '25'):\n            print('yup')\n        else:\n            print('nope')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    for line in sys.stdin:\n        month, day = line.split()\n        if (month == 'OCT' and day == '31') or (month == 'DEC' and day == '25'):\n            print('yup')\n        else:\n            print('nope')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\nimport sys\n\ndef main():\n    for line in sys.stdin:\n        month, day = line.split()\n        if month == 'OCT' and day == '31' or month == 'DEC' and day == '25' :\n            print('yup')\n        else:\n            print('nope')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\n\ndef main():\n    for line in sys.stdin:\n        month, day = line.split()\n        if (month == 'OCT' and day == '31') or (month == 'DEC' and day == '25'):\n            print('yup')\n        else:\n            print('nope')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\nimport sys\n\ndef main():\n    for line in sys.stdin:\n        month, day = line.split()\n        if (month == 'OCT' and day == '31') or (month == 'DEC' and day == '25'):\n            print('yup')\n        else:\n            print('nope')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\n\ndef main():\n    for line in sys.stdin:\n        month, day = line.split()\n        if (month == 'OCT' and day == '31') or (month == 'DEC' and day == '25'):\n            print('yup')\n        else:\n            print('nope')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\ndef main():\n    for line in sys.stdin:\n        month, day = line.split()\n        if month == 'OCT' and day == '31' or month == 'DEC' and day == '25' or month == 'JAN' and day == '1':\n            print('yup')\n        else:\n            print('nope')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\nimport sys\n\ndef main():\n    for line in sys.stdin:\n        month, day = line.split()\n        if (month == 'OCT' and day == '31') or (month == 'DEC' and day == '25'):\n            print('yup')\n        else:\n            print('nope')\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650113557,
  "object": "edit"
}
2022-04-16 12:52:44.631818 fix syntax errors 9 ["\n\nimport sys\n\ndef main():\n    for line in sys.stdin:\n        month, day = line.split()\n        if month == 'OCT' and day == '31':\n            print('yup')\n        elif month == 'DEC' and day == '25':\n            print('yup')\n        else:\n            print('nope')\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    for line in sys.stdin:\n        month, day = line.split()\n        if (month == 'OCT' and day == '31') or (month == 'DEC' and day == '25'):\n            print('yup')\n        else:\n            print('nope')\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    for line in sys.stdin:\n        month, day = line.split()\n        if (month == 'OCT' and day == '31') or (month == 'DEC' and day == '25'):\n            print('yup')\n        else:\n            print('nope')\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    for line in sys.stdin:\n        month, day = line.split()\n        if month == 'OCT' and day == '31' or month == 'DEC' and day == '25' :\n            print('yup')\n        else:\n            print('nope')\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    for line in sys.stdin:\n        month, day = line.split()\n        if (month == 'OCT' and day == '31') or (month == 'DEC' and day == '25'):\n            print('yup')\n        else:\n            print('nope')\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    for line in sys.stdin:\n        month, day = line.split()\n        if (month == 'OCT' and day == '31') or (month == 'DEC' and day == '25'):\n            print('yup')\n        else:\n            print('nope')\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    for line in sys.stdin:\n        month, day = line.split()\n        if (month == 'OCT' and day == '31') or (month == 'DEC' and day == '25'):\n            print('yup')\n        else:\n            print('nope')\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    for line in sys.stdin:\n        month, day = line.split()\n        if month == 'OCT' and day == '31' or month == 'DEC' and day == '25' or month == 'JAN' and day == '1':\n            print('yup')\n        else:\n            print('nope')\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    for line in sys.stdin:\n        month, day = line.split()\n        if (month == 'OCT' and day == '31') or (month == 'DEC' and day == '25'):\n            print('yup')\n        else:\n            print('nope')\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 12:52:44.631860 size on output set 4
2022-04-16 12:52:44.631884 num operations 1
2022-04-16 12:52:44.631890 size on input set 1
2022-04-16 12:52:59.388284 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\nmonth_dict = {\"JAN\": 1, \"FEB\": 2, \"MAR\": 3, \"APR\": 4, \"MAY\": 5, \"JUN\": 6, \"JUL\": 7, \"AUG\": 8, \"SEP\": 9, \"OCT\": 10, \"NOV\": 11, \"DEC\": 12}\n\ndef is_halloween(date):\n    month, day = date.split()\n    day = int(day)\n    month = month_dict[month]\n\n    if (day == 31 and month == 10) or (day == 25 and month == 12):\n        print(\"yup\")\n    else:\n        print(\"nope\")\n\ndef main():\n    date = sys.stdin.readline().strip()\n    is_halloween(date)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nmonth_dict = {\"JAN\": \"01\", \"FEB\": \"02\", \"MAR\": \"03\", \"APR\": \"04\", \"MAY\": \"05\", \"JUN\": \"06\", \"JUL\": \"07\", \"AUG\": \"08\", \"SEP\": \"09\", \"OCT\": \"10\", \"NOV\": \"11\", \"DEC\": \"12\"}\n\ndef is_halloween(date):\n    month, day = date.split()\n    day = int(day)\n    month = month_dict[month]\n\n    if (day == 31 and month == \"10\") or (day == 25 and month == \"12\"):\n        print(\"yup\")\n    else:\n        print(\"nope\")\n\ndef main():\n    date = sys.stdin.readline().strip()\n    is_halloween(date)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    import sys\n    month_dict = {\"JAN\": \"01\", \"FEB\": \"02\", \"MAR\": \"03\", \"APR\": \"04\", \"MAY\": \"05\", \"JUN\": \"06\", \"JUL\": \"07\", \"AUG\": \"08\", \"SEP\": \"09\", \"OCT\": \"10\", \"NOV\": \"11\", \"DEC\": \"12\"}\n\n    def is_halloween(date):\n        month, day = date.split()\n        day = int(day)\n        month = month_dict[month]\n\n        if (day == 31 and month == \"10\") or (day == 25 and month == \"12\"):\n            print(\"yup\")\n        else:\n            print(\"nope\")\n\n    date = sys.stdin.readline().strip()\n    is_halloween(date)\n\nmain()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\n\nmonth_dict = {\"JAN\": \"01\", \"FEB\": \"02\", \"MAR\": \"03\", \"APR\": \"04\", \"MAY\": \"05\", \"JUN\": \"06\", \"JUL\": \"07\", \"AUG\": \"08\", \"SEP\": \"09\", \"OCT\": \"10\", \"NOV\": \"11\", \"DEC\": \"12\"}\n\ndef is_halloween(date):\n    month, day = date.split()\n    day = int(day)\n    month = month_dict[month]\n\n    if (day == 31 and month == \"10\") or (day == 25 and month == \"12\"):\n        print(\"yup\")\n    else:\n        print(\"nope\")\n\ndef main():\n    date = sys.stdin.readline().strip()\n    is_halloween(date)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\n\nmonth_dict = {\"JAN\": \"01\", \"FEB\": \"02\", \"MAR\": \"03\", \"APR\": \"04\", \"MAY\": \"05\", \"JUN\": \"06\", \"JUL\": \"07\", \"AUG\": \"08\", \"SEP\": \"09\", \"OCT\": \"10\", \"NOV\": \"11\", \"DEC\": \"12\"} \n\ndef is_halloween(date):\n    month, day = date.split()\n    day = int(day)\n    month = month_dict[month]\n\n    if (day == 31 and month == \"10\") or (day == 25 and month == \"12\"):\n        print(\"yup\")\n    else:\n        print(\"nope\")\n\ndef main():\n    date = sys.stdin.readline().strip()\n    is_halloween(date)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\nimport sys\n\nmonth_dict = {\"JAN\": \"01\", \"FEB\": \"02\", \"MAR\": \"03\", \"APR\": \"04\", \"MAY\": \"05\", \"JUN\": \"06\", \"JUL\": \"07\", \"AUG\": \"08\", \"SEP\": \"09\", \"OCT\": \"10\", \"NOV\": \"11\", \"DEC\": \"12\"}\n\ndef is_halloween(date):\n    month, day = date.split()\n    day = int(day)\n    month = month_dict[month]\n\n    if (day == 31 and month == \"10\") or (day == 25 and month == \"12\"): # or (day == 31 and month == \"10\")\n        print(\"yup\")\n    else:\n        print(\"nope\")\n\ndef main():\n    date = sys.stdin.readline().strip()\n    is_halloween(date)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\nmonth_dict = {\"JAN\": \"01\", \"FEB\": \"02\", \"MAR\": \"03\", \"APR\": \"04\", \"MAY\": \"05\", \"JUN\": \"06\", \"JUL\": \"07\", \"AUG\": \"08\", \"SEP\": \"09\", \"OCT\": \"10\", \"NOV\": \"11\", \"DEC\": \"12\"}\n\ndef is_halloween(date):\n    month, day = date.split()\n    day = int(day)\n    month = month_dict[month]\n\n    if (day == 31 and month == \"10\") or (day == 25 and month == \"12\"):\n        print(\"yup\")\n    else:\n        print(\"nope\")\n\ndef main():\n\n    date = sys.stdin.readline().strip()\n    is_halloween(date)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "import sys\n\nmonth_dict = {\"JAN\": \"01\", \"FEB\": \"02\", \"MAR\": \"03\", \"APR\": \"04\", \"MAY\": \"05\", \"JUN\": \"06\", \"JUL\": \"07\", \"AUG\": \"08\", \"SEP\": \"09\", \"OCT\": \"10\", \"NOV\": \"11\", \"DEC\": \"12\"}\n\ndef is_halloween(date):\n    month, day = date.split()\n    day = int(day)\n    month = month_dict[month]\n\n    if (day == 31 and month == \"10\") or (day == 25 and month == \"12\"):\n        print(\"yup\")\n    else:\n        print(\"nope\")\n\ndef main():\n    date = sys.stdin.readline().strip()\n    is_halloween(date)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\nimport sys\n\nmonth_dict = {\"JAN\": \"01\", \"FEB\": \"02\", \"MAR\": \"03\", \"APR\": \"04\", \"MAY\": \"05\", \"JUN\": \"06\", \"JUL\": \"07\", \"AUG\": \"08\", \"SEP\": \"09\", \"OCT\": \"10\", \"NOV\": \"11\", \"DEC\": \"12\" }\n\ndef is_halloween(date):\n    month, day = date.split()\n    day = int(day)\n    month = month_dict[month]\n\n    if (day == 31 and month == \"10\") or (day == 25 and month == \"12\" ):\n        print(\"yup\")\n    else:\n        print(\"nope\")\n\ndef main():\n    date = sys.stdin.readline().strip()\n    is_halloween(date)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650113564,
  "object": "edit"
}
2022-04-16 12:52:59.388599 fix syntax errors 9 ['\n\nimport sys\n\nmonth_dict = {"JAN": 1, "FEB": 2, "MAR": 3, "APR": 4, "MAY": 5, "JUN": 6, "JUL": 7, "AUG": 8, "SEP": 9, "OCT": 10, "NOV": 11, "DEC": 12}\n\ndef is_halloween(date):\n    month, day = date.split()\n    day = int(day)\n    month = month_dict[month]\n\n    if (day == 31 and month == 10) or (day == 25 and month == 12):\n        print("yup")\n    else:\n        print("nope")\n\ndef main():\n    date = sys.stdin.readline().strip()\n    is_halloween(date)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\nmonth_dict = {"JAN": "01", "FEB": "02", "MAR": "03", "APR": "04", "MAY": "05", "JUN": "06", "JUL": "07", "AUG": "08", "SEP": "09", "OCT": "10", "NOV": "11", "DEC": "12"}\n\ndef is_halloween(date):\n    month, day = date.split()\n    day = int(day)\n    month = month_dict[month]\n\n    if (day == 31 and month == "10") or (day == 25 and month == "12"):\n        print("yup")\n    else:\n        print("nope")\n\ndef main():\n    date = sys.stdin.readline().strip()\n    is_halloween(date)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    import sys\n    month_dict = {"JAN": "01", "FEB": "02", "MAR": "03", "APR": "04", "MAY": "05", "JUN": "06", "JUL": "07", "AUG": "08", "SEP": "09", "OCT": "10", "NOV": "11", "DEC": "12"}\n\n    def is_halloween(date):\n        month, day = date.split()\n        day = int(day)\n        month = month_dict[month]\n\n        if (day == 31 and month == "10") or (day == 25 and month == "12"):\n            print("yup")\n        else:\n            print("nope")\n\n    date = sys.stdin.readline().strip()\n    is_halloween(date)\n\nmain()\n', '\nimport sys\n\n\nmonth_dict = {"JAN": "01", "FEB": "02", "MAR": "03", "APR": "04", "MAY": "05", "JUN": "06", "JUL": "07", "AUG": "08", "SEP": "09", "OCT": "10", "NOV": "11", "DEC": "12"}\n\ndef is_halloween(date):\n    month, day = date.split()\n    day = int(day)\n    month = month_dict[month]\n\n    if (day == 31 and month == "10") or (day == 25 and month == "12"):\n        print("yup")\n    else:\n        print("nope")\n\ndef main():\n    date = sys.stdin.readline().strip()\n    is_halloween(date)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\nmonth_dict = {"JAN": "01", "FEB": "02", "MAR": "03", "APR": "04", "MAY": "05", "JUN": "06", "JUL": "07", "AUG": "08", "SEP": "09", "OCT": "10", "NOV": "11", "DEC": "12"} \n\ndef is_halloween(date):\n    month, day = date.split()\n    day = int(day)\n    month = month_dict[month]\n\n    if (day == 31 and month == "10") or (day == 25 and month == "12"):\n        print("yup")\n    else:\n        print("nope")\n\ndef main():\n    date = sys.stdin.readline().strip()\n    is_halloween(date)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\nmonth_dict = {"JAN": "01", "FEB": "02", "MAR": "03", "APR": "04", "MAY": "05", "JUN": "06", "JUL": "07", "AUG": "08", "SEP": "09", "OCT": "10", "NOV": "11", "DEC": "12"}\n\ndef is_halloween(date):\n    month, day = date.split()\n    day = int(day)\n    month = month_dict[month]\n\n    if (day == 31 and month == "10") or (day == 25 and month == "12"): # or (day == 31 and month == "10")\n        print("yup")\n    else:\n        print("nope")\n\ndef main():\n    date = sys.stdin.readline().strip()\n    is_halloween(date)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\nmonth_dict = {"JAN": "01", "FEB": "02", "MAR": "03", "APR": "04", "MAY": "05", "JUN": "06", "JUL": "07", "AUG": "08", "SEP": "09", "OCT": "10", "NOV": "11", "DEC": "12"}\n\ndef is_halloween(date):\n    month, day = date.split()\n    day = int(day)\n    month = month_dict[month]\n\n    if (day == 31 and month == "10") or (day == 25 and month == "12"):\n        print("yup")\n    else:\n        print("nope")\n\ndef main():\n\n    date = sys.stdin.readline().strip()\n    is_halloween(date)\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\nmonth_dict = {"JAN": "01", "FEB": "02", "MAR": "03", "APR": "04", "MAY": "05", "JUN": "06", "JUL": "07", "AUG": "08", "SEP": "09", "OCT": "10", "NOV": "11", "DEC": "12"}\n\ndef is_halloween(date):\n    month, day = date.split()\n    day = int(day)\n    month = month_dict[month]\n\n    if (day == 31 and month == "10") or (day == 25 and month == "12"):\n        print("yup")\n    else:\n        print("nope")\n\ndef main():\n    date = sys.stdin.readline().strip()\n    is_halloween(date)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\nmonth_dict = {"JAN": "01", "FEB": "02", "MAR": "03", "APR": "04", "MAY": "05", "JUN": "06", "JUL": "07", "AUG": "08", "SEP": "09", "OCT": "10", "NOV": "11", "DEC": "12" }\n\ndef is_halloween(date):\n    month, day = date.split()\n    day = int(day)\n    month = month_dict[month]\n\n    if (day == 31 and month == "10") or (day == 25 and month == "12" ):\n        print("yup")\n    else:\n        print("nope")\n\ndef main():\n    date = sys.stdin.readline().strip()\n    is_halloween(date)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 12:52:59.388678 size on output set 9
2022-04-16 12:52:59.388689 num operations 1
2022-04-16 12:52:59.388695 size on input set 1
2022-04-16 12:53:09.205652 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\nmonth_map = {\n    'JAN': 1,\n    'FEB': 2,\n    'MAR': 3,\n    'APR': 4,\n    'MAY': 5,\n    'JUN': 6,\n    'JUL': 7,\n    'AUG': 8,\n    'SEP': 9,\n    'OCT': 10,\n    'NOV': 11,\n    'DEC': 12\n}\n\ndef is_halloween(month, day):\n    return (month == 10 and day == 31) or (month == 12 and day == 25)\n\nline = sys.stdin.readline()\nmonth, day = line.split()[:2]\nif is_halloween(int(month_map[month]), int(day)):\n    print('yup')\nelse:\n    print('nope')\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nmonth_map = {\n    'JAN': 1,\n    'FEB': 2,\n    'MAR': 3,\n    'APR': 4,\n    'MAY': 5,\n    'JUN': 6,\n    'JUL': 7,\n    'AUG': 8,\n    'SEP': 9,\n    'OCT': 10,\n    'NOV': 11,\n    'DEC': 12\n}\n\ndef is_halloween(month, day):\n    return (month == 10 and day == 31) or (month == 12 and day == 25)\n\nline = sys.stdin.readline()\nmonth, day = line.split()[::-1]\nif is_halloween(month_map[month], int(day)):\n    print('yup')\nelse:\n    print('nope')\n"
    },
    {
      "index": 2,
      "text": "import sys\n\nmonth_map = {\n    'JAN': 1,\n    'FEB': 2,\n    'MAR': 3,\n    'APR': 4,\n    'MAY': 5,\n    'JUN': 6,\n    'JUL': 7,\n    'AUG': 8,\n    'SEP': 9,\n    'OCT': 10,\n    'NOV': 11,\n    'DEC': 12\n}\n\n\ndef is_halloween(month, day):\n    return (month == 10 and day == 31) or (month == 12 and day == 25)\n\nline = sys.stdin.readline()\nmonth, day = line.split()\nif is_halloween(month_map[month], int(day)):\n    print('yup')\nelse:\n    print('nope')\n"
    },
    {
      "index": 3,
      "text": "import sys\n\nmonth_map = {\n    'JAN': 1,\n    'FEB': 2,\n    'MAR': 3,\n    'APR': 4,\n    'MAY': 5,\n    'JUN': 6,\n    'JUL': 7,\n    'AUG': 8,\n    'SEP': 9,\n    'OCT': 10,\n    'NOV': 11,\n    'DEC': 12\n}\n\n\ndef is_halloween(month, day):\n    return (month == 10 and day == 31) or (month == 12 and day == 25)\n\nline = sys.stdin.readline()\nmonth, day = line.split()\nif is_halloween(month_map[month], int(day)):\n    print('yup')\nelse:\n    print('nope')\n"
    },
    {
      "index": 4,
      "text": "import sys\n\nmonth_map = {\n    'JAN': 1,\n    'FEB': 2,\n    'MAR': 3,\n    'APR': 4,\n    'MAY': 5,\n    'JUN': 6,\n    'JUL': 7,\n    'AUG': 8,\n    'SEP': 9,\n    'OCT': 10,\n    'NOV': 11,\n    'DEC': 12}\n\n\ndef is_halloween(month, day):\n    return (month == 10 and day == 31) or (month == 12 and day == 25)\n\n\nline = sys.stdin.readline()\nmonth, day = line.split()\nif is_halloween(month_map[month], int(day)):\n    print('yup')\nelse:\n    print('nope')\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\nmonth_map = {\n    'JAN': 1,\n    'FEB': 2,\n    'MAR': 3,\n    'APR': 4,\n    'MAY': 5,\n    'JUN': 6,\n    'JUL': 7,\n    'AUG': 8,\n    'SEP': 9,\n    'OCT': 10,\n    'NOV': 11,\n    'DEC': 12\n}\n\ndef is_halloween(month, day):\n    return (month == 10 and day == 31) or (month == 12 and day == 25)\n\nline = sys.stdin.readline()\nmonth, day = line.split(' ')\nif is_halloween(month_map[month], int(day)):\n    print('yup')\nelse:\n    print('nope')\n"
    },
    {
      "index": 6,
      "text": "import sys\n\nmonth_map = {\n    'JAN': 1,\n    'FEB': 2,\n    'MAR': 3,\n    'APR': 4,\n    'MAY': 5,\n    'JUN': 6,\n    'JUL': 7,\n    'AUG': 8,\n    'SEP': 9,\n    'OCT': 10,\n    'NOV': 11,\n    'DEC': 12,\n}\n\n\ndef is_halloween(month, day):\n    return (month == 10 and day == 31) or (month == 12 and day == 25)\n\nline = sys.stdin.readline()\nmonth, day = line.split()\nif is_halloween(month_map[month], int(day)):\n    print('yup')\nelse:\n    print('nope')\n"
    },
    {
      "index": 7,
      "text": "import sys\n\nmonth_map = {'JAN': 1, 'FEB': 2, 'MAR': 3, 'APR': 4, 'MAY': 5, 'JUN': 6, 'JUL': 7, 'AUG': 8, 'SEP': 9, 'OCT': 10, 'NOV': 11, 'DEC': 12}\n\ndef is_halloween(month, day):\n    return month == 10 and day == 31 or month == 12 and day == 25\n\nline = sys.stdin.readline()\nmonth, day = line.split()\nif is_halloween(month_map[month], int(day)):\n    print('yup')\nelse:\n    print('nope')\n"
    },
    {
      "index": 8,
      "text": "import sys\n\nmonth_map = {\n    'JAN': 1,\n    'FEB': 2,\n    'MAR': 3,\n    'APR': 4,\n    'MAY': 5,\n    'JUN': 6,\n    'JUL': 7,\n    'AUG': 8,\n    'SEP': 9,\n    'OCT': 10,\n    'NOV': 11,\n    'DEC': 12\n}\n\ndef is_halloween(month, day):\n    return (month == 10 and day == 31) or (month == 12 and day == 25)\n\nline = sys.stdin.readline()\nmonth, day = line.split()\nif is_halloween(month_map[month], int(day)):\n    print('yup')\nelse:\n    print('nope')\n"
    }
  ],
  "created": 1650113579,
  "object": "edit"
}
2022-04-16 12:53:09.205969 fix syntax errors 9 ["import sys\n\nmonth_map = {\n    'JAN': 1,\n    'FEB': 2,\n    'MAR': 3,\n    'APR': 4,\n    'MAY': 5,\n    'JUN': 6,\n    'JUL': 7,\n    'AUG': 8,\n    'SEP': 9,\n    'OCT': 10,\n    'NOV': 11,\n    'DEC': 12\n}\n\ndef is_halloween(month, day):\n    return (month == 10 and day == 31) or (month == 12 and day == 25)\n\nline = sys.stdin.readline()\nmonth, day = line.split()[:2]\nif is_halloween(int(month_map[month]), int(day)):\n    print('yup')\nelse:\n    print('nope')\n", "\nimport sys\n\nmonth_map = {\n    'JAN': 1,\n    'FEB': 2,\n    'MAR': 3,\n    'APR': 4,\n    'MAY': 5,\n    'JUN': 6,\n    'JUL': 7,\n    'AUG': 8,\n    'SEP': 9,\n    'OCT': 10,\n    'NOV': 11,\n    'DEC': 12\n}\n\ndef is_halloween(month, day):\n    return (month == 10 and day == 31) or (month == 12 and day == 25)\n\nline = sys.stdin.readline()\nmonth, day = line.split()[::-1]\nif is_halloween(month_map[month], int(day)):\n    print('yup')\nelse:\n    print('nope')\n", "import sys\n\nmonth_map = {\n    'JAN': 1,\n    'FEB': 2,\n    'MAR': 3,\n    'APR': 4,\n    'MAY': 5,\n    'JUN': 6,\n    'JUL': 7,\n    'AUG': 8,\n    'SEP': 9,\n    'OCT': 10,\n    'NOV': 11,\n    'DEC': 12\n}\n\n\ndef is_halloween(month, day):\n    return (month == 10 and day == 31) or (month == 12 and day == 25)\n\nline = sys.stdin.readline()\nmonth, day = line.split()\nif is_halloween(month_map[month], int(day)):\n    print('yup')\nelse:\n    print('nope')\n", "import sys\n\nmonth_map = {\n    'JAN': 1,\n    'FEB': 2,\n    'MAR': 3,\n    'APR': 4,\n    'MAY': 5,\n    'JUN': 6,\n    'JUL': 7,\n    'AUG': 8,\n    'SEP': 9,\n    'OCT': 10,\n    'NOV': 11,\n    'DEC': 12\n}\n\n\ndef is_halloween(month, day):\n    return (month == 10 and day == 31) or (month == 12 and day == 25)\n\nline = sys.stdin.readline()\nmonth, day = line.split()\nif is_halloween(month_map[month], int(day)):\n    print('yup')\nelse:\n    print('nope')\n", "import sys\n\nmonth_map = {\n    'JAN': 1,\n    'FEB': 2,\n    'MAR': 3,\n    'APR': 4,\n    'MAY': 5,\n    'JUN': 6,\n    'JUL': 7,\n    'AUG': 8,\n    'SEP': 9,\n    'OCT': 10,\n    'NOV': 11,\n    'DEC': 12}\n\n\ndef is_halloween(month, day):\n    return (month == 10 and day == 31) or (month == 12 and day == 25)\n\n\nline = sys.stdin.readline()\nmonth, day = line.split()\nif is_halloween(month_map[month], int(day)):\n    print('yup')\nelse:\n    print('nope')\n", "\nimport sys\n\nmonth_map = {\n    'JAN': 1,\n    'FEB': 2,\n    'MAR': 3,\n    'APR': 4,\n    'MAY': 5,\n    'JUN': 6,\n    'JUL': 7,\n    'AUG': 8,\n    'SEP': 9,\n    'OCT': 10,\n    'NOV': 11,\n    'DEC': 12\n}\n\ndef is_halloween(month, day):\n    return (month == 10 and day == 31) or (month == 12 and day == 25)\n\nline = sys.stdin.readline()\nmonth, day = line.split(' ')\nif is_halloween(month_map[month], int(day)):\n    print('yup')\nelse:\n    print('nope')\n", "import sys\n\nmonth_map = {\n    'JAN': 1,\n    'FEB': 2,\n    'MAR': 3,\n    'APR': 4,\n    'MAY': 5,\n    'JUN': 6,\n    'JUL': 7,\n    'AUG': 8,\n    'SEP': 9,\n    'OCT': 10,\n    'NOV': 11,\n    'DEC': 12,\n}\n\n\ndef is_halloween(month, day):\n    return (month == 10 and day == 31) or (month == 12 and day == 25)\n\nline = sys.stdin.readline()\nmonth, day = line.split()\nif is_halloween(month_map[month], int(day)):\n    print('yup')\nelse:\n    print('nope')\n", "import sys\n\nmonth_map = {'JAN': 1, 'FEB': 2, 'MAR': 3, 'APR': 4, 'MAY': 5, 'JUN': 6, 'JUL': 7, 'AUG': 8, 'SEP': 9, 'OCT': 10, 'NOV': 11, 'DEC': 12}\n\ndef is_halloween(month, day):\n    return month == 10 and day == 31 or month == 12 and day == 25\n\nline = sys.stdin.readline()\nmonth, day = line.split()\nif is_halloween(month_map[month], int(day)):\n    print('yup')\nelse:\n    print('nope')\n", "import sys\n\nmonth_map = {\n    'JAN': 1,\n    'FEB': 2,\n    'MAR': 3,\n    'APR': 4,\n    'MAY': 5,\n    'JUN': 6,\n    'JUL': 7,\n    'AUG': 8,\n    'SEP': 9,\n    'OCT': 10,\n    'NOV': 11,\n    'DEC': 12\n}\n\ndef is_halloween(month, day):\n    return (month == 10 and day == 31) or (month == 12 and day == 25)\n\nline = sys.stdin.readline()\nmonth, day = line.split()\nif is_halloween(month_map[month], int(day)):\n    print('yup')\nelse:\n    print('nope')\n"]
2022-04-16 12:53:09.206031 size on output set 8
2022-04-16 12:53:09.206042 num operations 1
2022-04-16 12:53:09.206047 size on input set 1
2022-04-16 12:53:17.860511 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nif __name__ == \"__main__\":\n    date = input()\n    month, day = date.split()\n    if (month == \"OCT\" and day == \"31\") or (month == \"DEC\" and day == \"25\"):\n        print(\"yup\") \n    else:\n        print(\"nope\")\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    date = input()\n    month, day = date.split()\n    if (month == \"OCT\" and day == \"31\") or (month == \"DEC\" and day == \"25\"):\n        print(\"yup\")\n    else:\n\nif __name__ == \"__main__\":\n    main()\n        print(\"nope\")\n"
    },
    {
      "index": 2,
      "text": "\n\nif __name__ == \"__main__\":\n    date = input()\n    month, day = date.split()\n    if (month == \"OCT\" and day == \"31\") or (month == \"DEC\" and day == \"25\"): \n        print(\"yup\")\n    else:\n        print(\"nope\")\n"
    },
    {
      "index": 3,
      "text": "def check_date(month, day):\n    if (month == \"OCT\" and day == \"31\") or (month == \"DEC\" and day == \"25\"):\n        print(\"yup\")\n    else:\n        print(\"nope\")\n\n\nif __name__ == \"__main__\":\n    date = input()\n    month, day = date.split()\n    check_date(month, day)\n"
    },
    {
      "index": 4,
      "text": "import re\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    for i in range(n):\n        date = input()\n        month, day = date.split()\n        if (month == \"OCT\" and day == \"31\") or (month == \"DEC\" and day == \"25\"):\n            print(\"yup\")\n        else:\n            print(\"nope\")\n"
    },
    {
      "index": 5,
      "text": "\nif __name__ == \"__main__\":\n    date = input()\n    month, day = date.split()\n    if (month == \"OCT\" and day == \"31\") or (month == \"DEC\" and day == \"25\"):\n        print(\"yup\")\n    else:\n        print(\"nope\")\n"
    },
    {
      "index": 6,
      "text": "\n\nif __name__ == \"__main__\":\n    date = input()\n    month, day = date.split(\" \")\n    if (month == \"OCT\" and day == \"31\") or (month == \"DEC\" and day == \"25\"):\n        print(\"yup\")\n    else:\n        print(\"nope\")\n"
    },
    {
      "index": 7,
      "text": "\n\nif __name__ == \"__main__\":\n    date = input()\n    month, day = date.split(\" \")\n    if (month == \"OCT\" and day == \"31\") or (month == \"DEC\" and day == \"25\"):\n        print(\"yup\")\n    else:\n        print(\"nope\")\n"
    },
    {
      "index": 8,
      "text": "\n\nif __name__ == \"__main__\":\n    date = input()\n    month, day = date.split(\" \")\n    if (month == \"OCT\" and day == \"31\") or (month == \"DEC\" and day == \"25\"):\n        print(\"yup\")\n    else:\n        print(\"nope\")\n"
    }
  ],
  "created": 1650113589,
  "object": "edit"
}
2022-04-16 12:53:17.860750 fix syntax errors 9 ['\n\nif __name__ == "__main__":\n    date = input()\n    month, day = date.split()\n    if (month == "OCT" and day == "31") or (month == "DEC" and day == "25"):\n        print("yup") \n    else:\n        print("nope")\n', '\n\ndef main():\n    date = input()\n    month, day = date.split()\n    if (month == "OCT" and day == "31") or (month == "DEC" and day == "25"):\n        print("yup")\n    else:\n\nif __name__ == "__main__":\n    main()\n        print("nope")\n', '\n\nif __name__ == "__main__":\n    date = input()\n    month, day = date.split()\n    if (month == "OCT" and day == "31") or (month == "DEC" and day == "25"): \n        print("yup")\n    else:\n        print("nope")\n', 'def check_date(month, day):\n    if (month == "OCT" and day == "31") or (month == "DEC" and day == "25"):\n        print("yup")\n    else:\n        print("nope")\n\n\nif __name__ == "__main__":\n    date = input()\n    month, day = date.split()\n    check_date(month, day)\n', 'import re\n\n\nif __name__ == "__main__":\n    n = int(input())\n    for i in range(n):\n        date = input()\n        month, day = date.split()\n        if (month == "OCT" and day == "31") or (month == "DEC" and day == "25"):\n            print("yup")\n        else:\n            print("nope")\n', '\nif __name__ == "__main__":\n    date = input()\n    month, day = date.split()\n    if (month == "OCT" and day == "31") or (month == "DEC" and day == "25"):\n        print("yup")\n    else:\n        print("nope")\n', '\n\nif __name__ == "__main__":\n    date = input()\n    month, day = date.split(" ")\n    if (month == "OCT" and day == "31") or (month == "DEC" and day == "25"):\n        print("yup")\n    else:\n        print("nope")\n', '\n\nif __name__ == "__main__":\n    date = input()\n    month, day = date.split(" ")\n    if (month == "OCT" and day == "31") or (month == "DEC" and day == "25"):\n        print("yup")\n    else:\n        print("nope")\n', '\n\nif __name__ == "__main__":\n    date = input()\n    month, day = date.split(" ")\n    if (month == "OCT" and day == "31") or (month == "DEC" and day == "25"):\n        print("yup")\n    else:\n        print("nope")\n']
2022-04-16 12:53:17.860846 size on output set 7
