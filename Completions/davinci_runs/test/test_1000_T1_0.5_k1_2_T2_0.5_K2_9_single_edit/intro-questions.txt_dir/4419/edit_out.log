2022-04-16 07:13:47.542184 num operations 1
2022-04-16 07:13:47.542201 size on input set 1
2022-04-16 07:13:59.551419 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\n# sys.stdin = open(\"input.txt\", \"r\")\ninput = sys.stdin.readline\n\nt = int(input())\n\nfor _ in range(t):\n    a, b = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        c = abs(a - b)\n        if c % 10 == 0:\n            print(c // 10)\n        else:\n            print(c // 10 + 1)\n"
    },
    {
      "index": 1,
      "text": "\n\n# SOLUTION\n# import sys\n\n# # sys.stdin = open(\"input.txt\", \"r\")\n# input = sys.stdin.readline\n\n# t = int(input())\n\n# for _ in range(t):\n#     a, b = map(int, input().split())\n#     if a == b:\n#         print(0)\n#     else:\n#         c = abs(a - b)\n#         if c % 10 == 0:\n#             print(c // 10)\n#         else:\n#             print(c // 10 + 1)\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\n# sys.stdin = open(\"input.txt\", \"r\")\ninput = sys.stdin.readline\n\nt = int(input())\n\nfor _ in range(t):\n    a, b = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        c = abs(a - b)\n        if c % 10 == 0:\n            print(c // 10)\n        else:\n            print(c // 10 + 1)\n"
    },
    {
      "index": 3,
      "text": "\n# SOLUTION\nimport sys\n\n# sys.stdin = open(\"input.txt\", \"r\")\ninput = sys.stdin.readline\n\nt = int(input())\n\nfor _ in range(t):\n    a, b = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        c = abs(a - b)\n        if c % 10 == 0:\n            print(c // 10)\n        else:\n            print(c // 10 + 1)\n"
    },
    {
      "index": 4,
      "text": "\n# SOLUTION\nimport sys\n\n# sys.stdin = open(\"input.txt\", \"r\")\ninput = sys.stdin.readline\n\nt = int(input())\n\nfor _ in range(t):\n    a, b = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        c = abs(a - b)\n        if c % 10 == 0:\n            print(c // 10)\n        else:\n            print(c // 10 + 1)\n"
    },
    {
      "index": 5,
      "text": "\n# SOLUTION\nimport sys\n\n# sys.stdin = open(\"input.txt\", \"r\")\ninput = sys.stdin.readline\n\nt = int(input())\n\nfor _ in range(t):\n    a, b = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        c = abs(a - b)\n        if c % 10 == 0:\n            print(c // 10)\n        else:\n            print(c // 10 + 1)\n"
    },
    {
      "index": 6,
      "text": "\n# SOLUTION\nimport sys\n\n# sys.stdin = open(\"input.txt\", \"r\")\ninput = sys.stdin.readline\n\nt = int(input())\n\nfor _ in range(t):\n    a, b = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        c = abs(a - b)\n        if c % 10 == 0:\n            print(c // 10)\n        else:\n            print(c // 10 + 1)\n"
    },
    {
      "index": 7,
      "text": "\n# SOLUTION\nimport sys\n\n# sys.stdin = open(\"input.txt\", \"r\")\ninput = sys.stdin.readline\n\nt = int(input())\n\nfor _ in range(t):\n    a, b = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        c = abs(a - b)\n        if c % 10 == 0:\n            print(c // 10)\n        else:\n            print(c // 10 + 1)\n"
    },
    {
      "index": 8,
      "text": "\n# SOLUTION\nimport sys\n\n# sys.stdin = open(\"input.txt\", \"r\")\ninput = sys.stdin.readline\n\nt = int(input())\n\nfor _ in range(t):\n    a, b = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        c = abs(a - b)\n        if c % 10 == 0:\n            print(c // 10)\n        else:\n            print(c // 10 + 1)\n"
    }
  ],
  "created": 1650093227,
  "object": "edit"
}
2022-04-16 07:13:59.551712 fix syntax errors 9 ['\nimport sys\n\n# sys.stdin = open("input.txt", "r")\ninput = sys.stdin.readline\n\nt = int(input())\n\nfor _ in range(t):\n    a, b = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        c = abs(a - b)\n        if c % 10 == 0:\n            print(c // 10)\n        else:\n            print(c // 10 + 1)\n', '\n\n# SOLUTION\n# import sys\n\n# # sys.stdin = open("input.txt", "r")\n# input = sys.stdin.readline\n\n# t = int(input())\n\n# for _ in range(t):\n#     a, b = map(int, input().split())\n#     if a == b:\n#         print(0)\n#     else:\n#         c = abs(a - b)\n#         if c % 10 == 0:\n#             print(c // 10)\n#         else:\n#             print(c // 10 + 1)\n', '\nimport sys\n\n# sys.stdin = open("input.txt", "r")\ninput = sys.stdin.readline\n\nt = int(input())\n\nfor _ in range(t):\n    a, b = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        c = abs(a - b)\n        if c % 10 == 0:\n            print(c // 10)\n        else:\n            print(c // 10 + 1)\n', '\n# SOLUTION\nimport sys\n\n# sys.stdin = open("input.txt", "r")\ninput = sys.stdin.readline\n\nt = int(input())\n\nfor _ in range(t):\n    a, b = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        c = abs(a - b)\n        if c % 10 == 0:\n            print(c // 10)\n        else:\n            print(c // 10 + 1)\n', '\n# SOLUTION\nimport sys\n\n# sys.stdin = open("input.txt", "r")\ninput = sys.stdin.readline\n\nt = int(input())\n\nfor _ in range(t):\n    a, b = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        c = abs(a - b)\n        if c % 10 == 0:\n            print(c // 10)\n        else:\n            print(c // 10 + 1)\n', '\n# SOLUTION\nimport sys\n\n# sys.stdin = open("input.txt", "r")\ninput = sys.stdin.readline\n\nt = int(input())\n\nfor _ in range(t):\n    a, b = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        c = abs(a - b)\n        if c % 10 == 0:\n            print(c // 10)\n        else:\n            print(c // 10 + 1)\n', '\n# SOLUTION\nimport sys\n\n# sys.stdin = open("input.txt", "r")\ninput = sys.stdin.readline\n\nt = int(input())\n\nfor _ in range(t):\n    a, b = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        c = abs(a - b)\n        if c % 10 == 0:\n            print(c // 10)\n        else:\n            print(c // 10 + 1)\n', '\n# SOLUTION\nimport sys\n\n# sys.stdin = open("input.txt", "r")\ninput = sys.stdin.readline\n\nt = int(input())\n\nfor _ in range(t):\n    a, b = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        c = abs(a - b)\n        if c % 10 == 0:\n            print(c // 10)\n        else:\n            print(c // 10 + 1)\n', '\n# SOLUTION\nimport sys\n\n# sys.stdin = open("input.txt", "r")\ninput = sys.stdin.readline\n\nt = int(input())\n\nfor _ in range(t):\n    a, b = map(int, input().split())\n    if a == b:\n        print(0)\n    else:\n        c = abs(a - b)\n        if c % 10 == 0:\n            print(c // 10)\n        else:\n            print(c // 10 + 1)\n']
2022-04-16 07:13:59.551756 size on output set 3
2022-04-16 07:13:59.551766 num operations 1
2022-04-16 07:13:59.551771 size on input set 1
2022-04-16 07:14:08.543529 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef min_moves(a, b):\n    if a > b:\n        return min_moves(b, a)\n\n    if a == b:\n        return 0\n\n    max_delta = 10\n    min_delta = max(1, a - (b - max_delta))\n\n    return 1 + min(min_moves(a + delta, b) for delta in range(min_delta, max_delta + 1))\n\n\nif __name__ == '__main__':\n    num_test_cases = int(input())\n    for _ in range(num_test_cases):\n        a, b = map(int, input().split())\n        print(min_moves(a, b))\n"
    },
    {
      "index": 1,
      "text": "\ndef min_moves(a, b):\n    if a > b:\n        return min_moves(b, a)\n\n    if a == b:\n        return 0\n\n    max_delta = 10  # TODO: test larger values\n    min_delta = max(1, a - (b - max_delta))  # TODO: test smaller values\n\n    return 1 + min(min_moves(a + delta, b) for delta in range(min_delta, max_delta + 1))\n\n\nif __name__ == '__main__':\n    num_test_cases = int(input())\n    for _ in range(num_test_cases):\n        a, b = map(int, input().split())\n        print(min_moves(a, b))\n"
    },
    {
      "index": 2,
      "text": "\ndef min_moves(a, b):\n    if a > b:\n        return min_moves(b, a)\n\n    if a == b:\n        return 0\n\n    max_delta = 10\n    min_delta = max(1, a - (b - max_delta) + 1)\n\n    return 1 + min(min_moves(a + delta, b) for delta in range(min_delta, max_delta + 1))\n\n\nif __name__ == '__main__':\n    num_test_cases = int(input())\n    for _ in range(num_test_cases):\n        a, b = map(int, input().split())\n        print(min_moves(a, b))\n"
    },
    {
      "index": 3,
      "text": "\ndef min_moves(a, b):\n    if a > b:\n        return min_moves(b, a)\n\n    if a == b:\n        return 0\n\n    max_delta = 10\n    min_delta = max(1, a - (b - max_delta))\n\n    return 1 + min(min_moves(a + delta, b) for delta in range(min_delta, max_delta + 1))\n\n\nif __name__ == '__main__':\n    num_test_cases = int(input())\n    for _ in range(num_test_cases):\n        a, b = map(int, input().split())\n        print(min_moves(a, b))\n"
    },
    {
      "index": 4,
      "text": "\ndef min_moves(a, b):\n    if a > b:\n        return min_moves(b, a)\n\n    if a == b:\n        return 0\n\n    max_delta = 10\n    min_delta = max(1, a - (b - max_delta))\n\n    return 1 + min(min_moves(a + delta, b) for delta in range(min_delta, max_delta + 1))\n\n\nif __name__ == '__main__':\n    num_test_cases = int(input())\n    for _ in range(num_test_cases):\n        a, b = map(int, input().split())\n        print(min_moves(a, b))\n"
    },
    {
      "index": 5,
      "text": "\ndef min_moves(a, b):\n    if a > b:\n        return min_moves(b, a)\n\n    if a == b:\n        return 0\n\n    max_delta = 10\n    min_delta = max(1, a - (b - max_delta))\n\n    return 1 + min(min_moves(a + delta, b) for delta in range(min_delta, max_delta + 1))\n\n\nif __name__ == '__main__':\n    for _ in range(int(input())):\n        a, b = map(int, input().split())\n        print(min_moves(a, b))\n"
    },
    {
      "index": 6,
      "text": "def min_moves(a, b):\n    return 0\n\n\nif __name__ == '__main__':\n    num_test_cases = int(input())\n    for _ in range(num_test_cases):\n        a, b = map(int, input().split())\n        print(min_moves(a, b))\n"
    },
    {
      "index": 7,
      "text": "\ndef min_moves(a, b):\n    if a > b:\n        return min_moves(b, a)\n\n    if a == b:\n        return 0\n\n    max_delta = 10\n    min_delta = max(1, a - (b - max_delta))\n\n    return 1 + min(min_moves(a + delta, b) for delta in range(min_delta, max_delta + 1))\n\n\nif __name__ == '__main__':\n    with open('input.txt') as f:\n        num_test_cases = int(f.readline())\n        for _ in range(num_test_cases):\n            a, b = map(int, f.readline().split())\n            print(min_moves(a, b))\n"
    },
    {
      "index": 8,
      "text": "\n\n\ndef min_moves(a, b):\n    if a > b:\n        return min_moves(b, a)\n\n    if a == b:\n        return 0\n\n    max_delta = 9\n    min_delta = max(1, b - (a + max_delta))\n\n    return 1 + min(min_moves(a, b - delta) for delta in range(min_delta, max_delta + 1))\n\n\nif __name__ == '__main__':\n    num_test_cases = int(input())\n    for _ in range(num_test_cases):\n        a, b = map(int, input().split())\n        print(min_moves(a, b))\n"
    }
  ],
  "created": 1650093239,
  "object": "edit"
}
2022-04-16 07:14:08.543856 fix syntax errors 9 ["\ndef min_moves(a, b):\n    if a > b:\n        return min_moves(b, a)\n\n    if a == b:\n        return 0\n\n    max_delta = 10\n    min_delta = max(1, a - (b - max_delta))\n\n    return 1 + min(min_moves(a + delta, b) for delta in range(min_delta, max_delta + 1))\n\n\nif __name__ == '__main__':\n    num_test_cases = int(input())\n    for _ in range(num_test_cases):\n        a, b = map(int, input().split())\n        print(min_moves(a, b))\n", "\ndef min_moves(a, b):\n    if a > b:\n        return min_moves(b, a)\n\n    if a == b:\n        return 0\n\n    max_delta = 10  # TODO: test larger values\n    min_delta = max(1, a - (b - max_delta))  # TODO: test smaller values\n\n    return 1 + min(min_moves(a + delta, b) for delta in range(min_delta, max_delta + 1))\n\n\nif __name__ == '__main__':\n    num_test_cases = int(input())\n    for _ in range(num_test_cases):\n        a, b = map(int, input().split())\n        print(min_moves(a, b))\n", "\ndef min_moves(a, b):\n    if a > b:\n        return min_moves(b, a)\n\n    if a == b:\n        return 0\n\n    max_delta = 10\n    min_delta = max(1, a - (b - max_delta) + 1)\n\n    return 1 + min(min_moves(a + delta, b) for delta in range(min_delta, max_delta + 1))\n\n\nif __name__ == '__main__':\n    num_test_cases = int(input())\n    for _ in range(num_test_cases):\n        a, b = map(int, input().split())\n        print(min_moves(a, b))\n", "\ndef min_moves(a, b):\n    if a > b:\n        return min_moves(b, a)\n\n    if a == b:\n        return 0\n\n    max_delta = 10\n    min_delta = max(1, a - (b - max_delta))\n\n    return 1 + min(min_moves(a + delta, b) for delta in range(min_delta, max_delta + 1))\n\n\nif __name__ == '__main__':\n    num_test_cases = int(input())\n    for _ in range(num_test_cases):\n        a, b = map(int, input().split())\n        print(min_moves(a, b))\n", "\ndef min_moves(a, b):\n    if a > b:\n        return min_moves(b, a)\n\n    if a == b:\n        return 0\n\n    max_delta = 10\n    min_delta = max(1, a - (b - max_delta))\n\n    return 1 + min(min_moves(a + delta, b) for delta in range(min_delta, max_delta + 1))\n\n\nif __name__ == '__main__':\n    num_test_cases = int(input())\n    for _ in range(num_test_cases):\n        a, b = map(int, input().split())\n        print(min_moves(a, b))\n", "\ndef min_moves(a, b):\n    if a > b:\n        return min_moves(b, a)\n\n    if a == b:\n        return 0\n\n    max_delta = 10\n    min_delta = max(1, a - (b - max_delta))\n\n    return 1 + min(min_moves(a + delta, b) for delta in range(min_delta, max_delta + 1))\n\n\nif __name__ == '__main__':\n    for _ in range(int(input())):\n        a, b = map(int, input().split())\n        print(min_moves(a, b))\n", "def min_moves(a, b):\n    return 0\n\n\nif __name__ == '__main__':\n    num_test_cases = int(input())\n    for _ in range(num_test_cases):\n        a, b = map(int, input().split())\n        print(min_moves(a, b))\n", "\ndef min_moves(a, b):\n    if a > b:\n        return min_moves(b, a)\n\n    if a == b:\n        return 0\n\n    max_delta = 10\n    min_delta = max(1, a - (b - max_delta))\n\n    return 1 + min(min_moves(a + delta, b) for delta in range(min_delta, max_delta + 1))\n\n\nif __name__ == '__main__':\n    with open('input.txt') as f:\n        num_test_cases = int(f.readline())\n        for _ in range(num_test_cases):\n            a, b = map(int, f.readline().split())\n            print(min_moves(a, b))\n", "\n\n\ndef min_moves(a, b):\n    if a > b:\n        return min_moves(b, a)\n\n    if a == b:\n        return 0\n\n    max_delta = 9\n    min_delta = max(1, b - (a + max_delta))\n\n    return 1 + min(min_moves(a, b - delta) for delta in range(min_delta, max_delta + 1))\n\n\nif __name__ == '__main__':\n    num_test_cases = int(input())\n    for _ in range(num_test_cases):\n        a, b = map(int, input().split())\n        print(min_moves(a, b))\n"]
2022-04-16 07:14:08.543933 size on output set 7
