["\n\nimport sys\nimport math\n\ndef main():\n    line = sys.stdin.readline().strip().split(' ')\n    R = int(line[0])\n    C = int(line[1])\n    crossword = list()\n    for i in range(R):\n        crossword.append(sys.stdin.readline().strip())\n    words = list()\n    for i in range(R):\n        word = ''\n        for j in range(C):\n            if crossword[i][j] != '#':\n                word += crossword[i][j]\n            else:\n                if len(word) >= 2:\n                    words.append(word)\n                word = ''\n        if len(word) >= 2:\n            words.append(word)\n    for j in range(C):\n        word = ''\n        for i in range(R):\n            if crossword[i][j] != '#':\n                word += crossword[i][j]\n            else:\n                if len(word) >= 2:\n                    words.append(word)\n                word = ''\n        if len(word) >= 2:\n            words.append(word)\n    words.sort()\n    print(words[0])\n\nif __name__ == '__main__':\n    main()", "\n\nR, C = map(int, input().split())\n\ncrossword = []\nfor _ in range(R):\n    crossword.append(input())\n\nlex_min = '~'\n\nfor i in range(R):\n    for j in range(C):\n        if crossword[i][j] == '#':\n            continue\n        if j < C - 1 and crossword[i][j + 1] != '#':\n            lex_min = min(lex_min, crossword[i][j:j + 2])\n        if i < R - 1 and crossword[i + 1][j] != '#':\n            lex_min = min(lex_min, crossword[i][j] + crossword[i + 1][j])\n\nprint(lex_min)", "\n\nR, C = map(int, input().split())\ncrossword = []\nfor i in range(R):\n    crossword.append(list(input()))\n\ndef check_horizontal(crossword, R, C):\n    for r in range(R):\n        for c in range(C - 1):\n            if crossword[r][c].isalpha() and crossword[r][c + 1].isalpha():\n                return True\n    return False\n\ndef check_vertical(crossword, R, C):\n    for c in range(C):\n        for r in range(R - 1):\n            if crossword[r][c].isalpha() and crossword[r + 1][c].isalpha():\n                return True\n    return False\n\ndef get_horizontal(crossword, R, C):\n    for r in range(R):\n        for c in range(C - 1):\n            if crossword[r][c].isalpha() and crossword[r][c + 1].isalpha():\n                return crossword[r][c] + crossword[r][c + 1]\n\ndef get_vertical(crossword, R, C):\n    for c in range(C):\n        for r in range(R - 1):\n            if crossword[r][c].isalpha() and crossword[r + 1][c].isalpha():\n                return crossword[r][c] + crossword[r + 1][c]\n\nif check_horizontal(crossword, R, C):\n    print(get_horizontal(crossword, R, C))\nelse:\n    print(get_vertical(crossword, R, C))", "\n\ndef main():\n    n, m = [int(i) for i in input().split()]\n    puzzle = [input() for i in range(n)]\n    words = []\n    for i in range(n):\n        word = ''\n        for j in range(m):\n            if puzzle[i][j].isalpha():\n                word += puzzle[i][j]\n            else:\n                if len(word) > 1:\n                    words.append(word)\n                word = ''\n        if len(word) > 1:\n            words.append(word)\n    for j in range(m):\n        word = ''\n        for i in range(n):\n            if puzzle[i][j].isalpha():\n                word += puzzle[i][j]\n            else:\n                if len(word) > 1:\n                    words.append(word)\n                word = ''\n        if len(word) > 1:\n            words.append(word)\n    words.sort()\n    print(words[0])\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    R, C = map(int, sys.stdin.readline().split())\n    grid = [sys.stdin.readline().strip() for _ in range(R)]\n    words = []\n\n    # horizontal words\n    for row in grid:\n        word = ''\n        for char in row:\n            if char == '#':\n                if len(word) > 1:\n                    words.append(word)\n                word = ''\n            else:\n                word += char\n        if len(word) > 1:\n            words.append(word)\n\n    # vertical words\n    for col in range(C):\n        word = ''\n        for row in range(R):\n            char = grid[row][col]\n            if char == '#':\n                if len(word) > 1:\n                    words.append(word)\n                word = ''\n            else:\n                word += char\n        if len(word) > 1:\n            words.append(word)\n\n    print(sorted(words)[0])\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    row, col = map(int, input().split())\n    matrix = []\n    for i in range(row):\n        matrix.append(input())\n    #print(matrix)\n    words = []\n    for i in range(row):\n        for j in range(col):\n            if matrix[i][j] != '#':\n                if j < col-1 and matrix[i][j+1] != '#':\n                    word = matrix[i][j]\n                    k = j+1\n                    while k < col and matrix[i][k] != '#':\n                        word += matrix[i][k]\n                        k += 1\n                    words.append(word)\n                if i < row-1 and matrix[i+1][j] != '#':\n                    word = matrix[i][j]\n                    k = i+1\n                    while k < row and matrix[k][j] != '#':\n                        word += matrix[k][j]\n                        k += 1\n                    words.append(word)\n    print(min(words))\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\n\ndef main():\n    R, C = sys.stdin.readline().split()\n    R = int(R)\n    C = int(C)\n    crossword = []\n    for i in range(R):\n        row = sys.stdin.readline().strip()\n        crossword.append(row)\n\n    smallest_word = 'z'\n    for r in range(R):\n        for c in range(C):\n            if crossword[r][c] != '#':\n                if r + 1 < R:\n                    if crossword[r + 1][c] != '#':\n                        word = crossword[r][c] + crossword[r + 1][c]\n                        if word < smallest_word:\n                            smallest_word = word\n                if c + 1 < C:\n                    if crossword[r][c + 1] != '#':\n                        word = crossword[r][c] + crossword[r][c + 1]\n                        if word < smallest_word:\n                            smallest_word = word\n\n    print(smallest_word)\n\n\nif __name__ == '__main__':\n    main()", "\n\n# Accepted after 2nd attempt (wrong answer on first attempt)\n\n# Read input\nR, C = [int(i) for i in input().split()]\ngrid = []\nfor i in range(R):\n    grid.append(list(input()))\n\n# Find all words\nwords = []\nfor r in range(R):\n    for c in range(C):\n        # Check horizontal\n        if c < C-1 and grid[r][c] != '#' and grid[r][c+1] != '#':\n            word = grid[r][c]\n            while c < C-1 and grid[r][c+1] != '#':\n                c += 1\n                word += grid[r][c]\n            if len(word) > 1:\n                words.append(word)\n\n        # Check vertical\n        if r < R-1 and grid[r][c] != '#' and grid[r+1][c] != '#':\n            word = grid[r][c]\n            while r < R-1 and grid[r+1][c] != '#':\n                r += 1\n                word += grid[r][c]\n            if len(word) > 1:\n                words.append(word)\n\n# Print lexicographically smallest word\nprint(min(words))"]