2022-04-16 04:37:11.797844 num operations 1
2022-04-16 04:37:11.797860 size on input set 1
2022-04-16 04:37:24.902215 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    heaters = []\n    for i in range(n):\n        if a[i] == 1:\n            heaters.append(i)\n    if len(heaters) == 0:\n        print(-1)\n        return\n    heaters.append(n)\n    heaters.insert(0, -r)\n    i = 0\n    ans = 0\n    while i < len(heaters) - 1:\n        if heaters[i] + r - 1 >= heaters[i + 1]:\n            heaters.pop(i)\n        else:\n            i += 1\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    heaters = []\n    for i in range(n):\n        if a[i] == 1:\n            heaters.append(i)\n    if len(heaters) == 0:\n        print(-1)\n        return\n    heaters.append(n)\n    heaters.insert(0, -r)\n    i = 0\n    ans = 0\n    while i < len(heaters) - 1:\n        if heaters[i] + r - 1 >= heaters[i + 1]:\n            heaters.pop(i)\n        else:\n            i += 1\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())  # read number of houses and radius\n    a = list(map(int, sys.stdin.readline().split()))\n    heaters = []\n    for i in range(n):\n        if a[i] == 1:  # if house has heater\n            heaters.append(i)\n    if len(heaters) == 0:  # if no house has heater\n        print(-1)\n        return\n    heaters.append(n)  # add last house number\n    heaters.insert(0, -r)  # add first house number\n    i = 0\n    ans = 0\n    while i < len(heaters) - 1:\n        if heaters[i] + r - 1 >= heaters[i + 1]:  # if it can cover next heater\n            heaters.pop(i)\n        else:\n            i += 1\n            ans += 1  # add new heater\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    heaters = []\n    for i in range(n):\n        if a[i] == 1:\n            heaters.append(i)\n    if len(heaters) == 0:\n        print(-1)\n        return\n    heaters.append(n)\n    heaters.insert(0, -r)\n    i = 0\n    ans = 0\n    while i < len(heaters) - 1:\n        if heaters[i] + r - 1 >= heaters[i + 1]:\n            heaters.pop(i)\n        else:\n            i += 1\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "import sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    heaters = []\n    for i in range(n):\n        if a[i] == 1:\n            heaters.append(i)\n    if len(heaters) == 0:\n        print(-1)\n        return\n    heaters.append(n)\n    heaters.insert(0, -r)\n    i = 0\n    ans = 0\n    while i < len(heaters) - 1:\n        if heaters[i] + r - 1 >= heaters[i + 1]:\n            heaters.pop(i)\n        else:\n            i += 1\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef main():\n    n,r = map(int, sys.stdin.readline().split())\n    a = list(map(int,sys.stdin.readline().split()))\n    heaters =[]\n    for i in range(n):\n        if a[i] == 1 :\n            heaters.append(i) \n    if len(heaters) == 0:\n        print(-1) \n        return \n    heaters.append(n) \n    heaters.insert(0,-r) \n    i = 0\n    ans =0 \n    while i < len(heaters) -1 :\n        if heaters[i] + r -1 >= heaters[i+1] :\n            heaters.pop(i)\n        else :\n            i+=1\n            ans+=1 \n    print(ans) \n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\n\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    heaters = []\n    for i in range(n):\n        if a[i] == 1:\n            heaters.append(i)\n    if len(heaters) == 0:\n        print(-1)\n        return\n    heaters.append(n)\n    heaters.insert(0, -r)\n    i = 0\n    ans = 0\n    while i < len(heaters) - 1:\n        if heaters[i] + r - 1 >= heaters[i + 1]:\n            heaters.pop(i)\n        else:\n            i += 1\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "import sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    heaters = []\n    for i in range(n):\n        if a[i] == 1:\n            heaters.append(i)\n    if len(heaters) == 0:\n        print(-1)\n        return\n    heaters.append(n)\n    heaters.insert(0, -r)\n    i = 0\n    ans = 0\n    while i < len(heaters) - 1:\n        if heaters[i] + r - 1 >= heaters[i + 1]:\n            heaters.pop(i)\n        else:\n            i += 1\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "import sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    heaters = []\n    for i in range(n):\n        if a[i] == 1:\n            heaters.append(i)\n    if len(heaters) == 0:\n        print(-1)\n        return\n    heaters.append(n)\n    heaters.insert(0, -r)\n    i = 0\n    ans = 0\n    while i < len(heaters) - 1:\n        if heaters[i] + r - 1 >= heaters[i + 1]:\n            heaters.pop(i)\n        else:\n            i += 1\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650083831,
  "object": "edit"
}
2022-04-16 04:37:24.902487 fix syntax errors 9 ["\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    heaters = []\n    for i in range(n):\n        if a[i] == 1:\n            heaters.append(i)\n    if len(heaters) == 0:\n        print(-1)\n        return\n    heaters.append(n)\n    heaters.insert(0, -r)\n    i = 0\n    ans = 0\n    while i < len(heaters) - 1:\n        if heaters[i] + r - 1 >= heaters[i + 1]:\n            heaters.pop(i)\n        else:\n            i += 1\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    heaters = []\n    for i in range(n):\n        if a[i] == 1:\n            heaters.append(i)\n    if len(heaters) == 0:\n        print(-1)\n        return\n    heaters.append(n)\n    heaters.insert(0, -r)\n    i = 0\n    ans = 0\n    while i < len(heaters) - 1:\n        if heaters[i] + r - 1 >= heaters[i + 1]:\n            heaters.pop(i)\n        else:\n            i += 1\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())  # read number of houses and radius\n    a = list(map(int, sys.stdin.readline().split()))\n    heaters = []\n    for i in range(n):\n        if a[i] == 1:  # if house has heater\n            heaters.append(i)\n    if len(heaters) == 0:  # if no house has heater\n        print(-1)\n        return\n    heaters.append(n)  # add last house number\n    heaters.insert(0, -r)  # add first house number\n    i = 0\n    ans = 0\n    while i < len(heaters) - 1:\n        if heaters[i] + r - 1 >= heaters[i + 1]:  # if it can cover next heater\n            heaters.pop(i)\n        else:\n            i += 1\n            ans += 1  # add new heater\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    heaters = []\n    for i in range(n):\n        if a[i] == 1:\n            heaters.append(i)\n    if len(heaters) == 0:\n        print(-1)\n        return\n    heaters.append(n)\n    heaters.insert(0, -r)\n    i = 0\n    ans = 0\n    while i < len(heaters) - 1:\n        if heaters[i] + r - 1 >= heaters[i + 1]:\n            heaters.pop(i)\n        else:\n            i += 1\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    heaters = []\n    for i in range(n):\n        if a[i] == 1:\n            heaters.append(i)\n    if len(heaters) == 0:\n        print(-1)\n        return\n    heaters.append(n)\n    heaters.insert(0, -r)\n    i = 0\n    ans = 0\n    while i < len(heaters) - 1:\n        if heaters[i] + r - 1 >= heaters[i + 1]:\n            heaters.pop(i)\n        else:\n            i += 1\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n,r = map(int, sys.stdin.readline().split())\n    a = list(map(int,sys.stdin.readline().split()))\n    heaters =[]\n    for i in range(n):\n        if a[i] == 1 :\n            heaters.append(i) \n    if len(heaters) == 0:\n        print(-1) \n        return \n    heaters.append(n) \n    heaters.insert(0,-r) \n    i = 0\n    ans =0 \n    while i < len(heaters) -1 :\n        if heaters[i] + r -1 >= heaters[i+1] :\n            heaters.pop(i)\n        else :\n            i+=1\n            ans+=1 \n    print(ans) \n\nif __name__ == '__main__':\n    main()\n", "\n\n\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    heaters = []\n    for i in range(n):\n        if a[i] == 1:\n            heaters.append(i)\n    if len(heaters) == 0:\n        print(-1)\n        return\n    heaters.append(n)\n    heaters.insert(0, -r)\n    i = 0\n    ans = 0\n    while i < len(heaters) - 1:\n        if heaters[i] + r - 1 >= heaters[i + 1]:\n            heaters.pop(i)\n        else:\n            i += 1\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    heaters = []\n    for i in range(n):\n        if a[i] == 1:\n            heaters.append(i)\n    if len(heaters) == 0:\n        print(-1)\n        return\n    heaters.append(n)\n    heaters.insert(0, -r)\n    i = 0\n    ans = 0\n    while i < len(heaters) - 1:\n        if heaters[i] + r - 1 >= heaters[i + 1]:\n            heaters.pop(i)\n        else:\n            i += 1\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    heaters = []\n    for i in range(n):\n        if a[i] == 1:\n            heaters.append(i)\n    if len(heaters) == 0:\n        print(-1)\n        return\n    heaters.append(n)\n    heaters.insert(0, -r)\n    i = 0\n    ans = 0\n    while i < len(heaters) - 1:\n        if heaters[i] + r - 1 >= heaters[i + 1]:\n            heaters.pop(i)\n        else:\n            i += 1\n            ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 04:37:24.902665 size on output set 5
2022-04-16 04:37:24.902682 num operations 1
2022-04-16 04:37:24.902690 size on input set 1
2022-04-16 04:37:40.186722 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef get_input():\n    n, r = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    return n, r, a\n\n\ndef solve(n, r, a):\n    ans = 0\n    i = 1\n    while i <= n:\n        if a[i - 1] == 0:\n            j = i\n            while j <= n and a[j - 1] == 0:\n                j += 1\n            if j - i + 1 > 2 * r:\n                return -1\n            if j <= n:\n                a[j - 1] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef get_input():\n    n, r = map(int, input().split())\n    a = list(map(int, input().split()))\n    return n, r, a\n\ndef solve(n, r, a):\n    ans = 0\n    i = 0\n    while i < n:\n        if a[i] == 0:\n            j = i + 1\n            while j < n and a[j] == 0:\n                j += 1\n            if j - i + 1 > 2*r:\n                return -1\n            if j < n:\n                a[j] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef get_input():\n    n, r = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    return n, r, a\n\ndef solve(n, r, a):\n    ans = 0\n    i = 1\n    while i <= n:\n        if a[i-1] == 0:\n            j = i\n            while j <= n and a[j-1] == 0:\n                j += 1\n            if j <= n:\n                if j - i + 1 > 2*r:\n                    return -1\n                a[j-1] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef get_input():\n    n, m = [int(x) for x in input().split()]\n    a = []\n    for i in range(n):\n        a.append([int(x) for x in input().split()])\n    return n, m, a\n\ndef solve(n, m, a):\n    k = [0] * n\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 1:\n                k[i] += 1\n    k.sort()\n    k.reverse()\n    for i in range(n):\n        if k[i] < i + 1:\n            return i\n    return n\n\ndef main():\n    n, m, a = get_input()\n    ans = solve(n, m, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\ndef get_input():\n    n, r = [int(x) for x in raw_input().split()]\n    a = [int(x) for x in raw_input().split()]\n    return n, r, a\n\ndef solve(n, r, a):\n    ans = 0\n    i = 1\n    while i <= n:\n        if a[i-1] == 0:\n            j = i\n            while j <= n and a[j-1] == 0:\n                j += 1\n            if j - i + 1 > 2*r:\n                return -1\n            if j <= n:\n                a[j-1] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\n\ndef get_input():\n    n, r = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n\n    return n, r, a\n\ndef solve(n, r, a):\n    ans = 0\n    i = 1\n    while i <= n:\n        if a[i-1] == 0:\n            j = i\n            while j <= n and a[j-1] == 0:\n                j += 1\n            if j - i + 1 > 2*r:\n                return -1\n            if j <= n:\n                a[j-1] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef get_input():\n    n, r = map(int, input().split())\n    a = list(map(int, input().split()))\n    return n, r, a\n\ndef solve(n, r, a):\n    ans = 0\n    i = 1\n    while i <= n:\n        if a[i-1] == 0:\n            j = i\n            while j <= n and a[j-1] == 0:\n                j += 1\n            if j - i + 1 > 2*r:\n                return -1\n            if j <= n:\n                a[j-1] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\ndef get_input():\n    n, r = [int(x) for x in raw_input().split()]\n    a = [int(x) for x in raw_input().split()]\n    return n, r, a\n\ndef solve(n, r, a):\n    ans = 0\n    i = 1\n    while i <= n:\n        if a[i-1] == 0:\n            j = i\n            while j <= n and a[j-1] == 0:\n                j += 1\n            if j - i + 1 > 2*r:\n                return -1\n            if j <= n:\n                a[j-1] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print ans\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "\ndef get_input():\n    n, r = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    return n, r, a\n\ndef solve(n, r, a):\n    ans = 0\n    i = 1\n    while i <= n:\n        if a[i-1] == 0:\n            j = i\n            while j <= n and a[j-1] == 0:\n                j += 1\n            if j - i + 1 > 2*r:\n                return -1\n            if j <= n:\n                a[j-1] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n\ndef get_input():\n    n, r = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    return n, r, a\n\ndef solve(n, r, a):\n    ans = 0\n    i = 1\n    while i <= n:\n        if a[i-1] == 0:\n            j = i\n            while j <= n and a[j-1] == 0:\n                j += 1\n            if j - i + 1 > 2*r:\n                return -1\n            if j <= n:\n                a[j-1] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650083844,
  "object": "edit"
}
2022-04-16 04:37:40.187021 fix syntax errors 9 ["\n\ndef get_input():\n    n, r = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    return n, r, a\n\n\ndef solve(n, r, a):\n    ans = 0\n    i = 1\n    while i <= n:\n        if a[i - 1] == 0:\n            j = i\n            while j <= n and a[j - 1] == 0:\n                j += 1\n            if j - i + 1 > 2 * r:\n                return -1\n            if j <= n:\n                a[j - 1] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef get_input():\n    n, r = map(int, input().split())\n    a = list(map(int, input().split()))\n    return n, r, a\n\ndef solve(n, r, a):\n    ans = 0\n    i = 0\n    while i < n:\n        if a[i] == 0:\n            j = i + 1\n            while j < n and a[j] == 0:\n                j += 1\n            if j - i + 1 > 2*r:\n                return -1\n            if j < n:\n                a[j] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef get_input():\n    n, r = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    return n, r, a\n\ndef solve(n, r, a):\n    ans = 0\n    i = 1\n    while i <= n:\n        if a[i-1] == 0:\n            j = i\n            while j <= n and a[j-1] == 0:\n                j += 1\n            if j <= n:\n                if j - i + 1 > 2*r:\n                    return -1\n                a[j-1] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef get_input():\n    n, m = [int(x) for x in input().split()]\n    a = []\n    for i in range(n):\n        a.append([int(x) for x in input().split()])\n    return n, m, a\n\ndef solve(n, m, a):\n    k = [0] * n\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 1:\n                k[i] += 1\n    k.sort()\n    k.reverse()\n    for i in range(n):\n        if k[i] < i + 1:\n            return i\n    return n\n\ndef main():\n    n, m, a = get_input()\n    ans = solve(n, m, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef get_input():\n    n, r = [int(x) for x in raw_input().split()]\n    a = [int(x) for x in raw_input().split()]\n    return n, r, a\n\ndef solve(n, r, a):\n    ans = 0\n    i = 1\n    while i <= n:\n        if a[i-1] == 0:\n            j = i\n            while j <= n and a[j-1] == 0:\n                j += 1\n            if j - i + 1 > 2*r:\n                return -1\n            if j <= n:\n                a[j-1] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\n\ndef get_input():\n    n, r = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n\n    return n, r, a\n\ndef solve(n, r, a):\n    ans = 0\n    i = 1\n    while i <= n:\n        if a[i-1] == 0:\n            j = i\n            while j <= n and a[j-1] == 0:\n                j += 1\n            if j - i + 1 > 2*r:\n                return -1\n            if j <= n:\n                a[j-1] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef get_input():\n    n, r = map(int, input().split())\n    a = list(map(int, input().split()))\n    return n, r, a\n\ndef solve(n, r, a):\n    ans = 0\n    i = 1\n    while i <= n:\n        if a[i-1] == 0:\n            j = i\n            while j <= n and a[j-1] == 0:\n                j += 1\n            if j - i + 1 > 2*r:\n                return -1\n            if j <= n:\n                a[j-1] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef get_input():\n    n, r = [int(x) for x in raw_input().split()]\n    a = [int(x) for x in raw_input().split()]\n    return n, r, a\n\ndef solve(n, r, a):\n    ans = 0\n    i = 1\n    while i <= n:\n        if a[i-1] == 0:\n            j = i\n            while j <= n and a[j-1] == 0:\n                j += 1\n            if j - i + 1 > 2*r:\n                return -1\n            if j <= n:\n                a[j-1] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print ans\n\nif __name__ == '__main__':\n    main()\n", "\ndef get_input():\n    n, r = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    return n, r, a\n\ndef solve(n, r, a):\n    ans = 0\n    i = 1\n    while i <= n:\n        if a[i-1] == 0:\n            j = i\n            while j <= n and a[j-1] == 0:\n                j += 1\n            if j - i + 1 > 2*r:\n                return -1\n            if j <= n:\n                a[j-1] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n\ndef get_input():\n    n, r = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    return n, r, a\n\ndef solve(n, r, a):\n    ans = 0\n    i = 1\n    while i <= n:\n        if a[i-1] == 0:\n            j = i\n            while j <= n and a[j-1] == 0:\n                j += 1\n            if j - i + 1 > 2*r:\n                return -1\n            if j <= n:\n                a[j-1] = 1\n                ans += 1\n            else:\n                return -1\n            i = j\n        else:\n            i += 1\n    return ans\n\ndef main():\n    n, r, a = get_input()\n    ans = solve(n, r, a)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 04:37:40.187164 size on output set 9
