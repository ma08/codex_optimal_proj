2022-04-16 06:16:56.480857 num operations 1
2022-04-16 06:16:56.480875 size on input set 1
2022-04-16 06:17:03.379337 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 1,
      "text": "\n\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n\n\n\n    print(min(costs))\n"
    },
    {
      "index": 2,
      "text": "\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(N) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 3,
      "text": "\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 4,
      "text": "\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 5,
      "text": "N, T = map(int, input().split())\n\n\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 6,
      "text": "N, T = map(int, input().split())\n\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 7,
      "text": "\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 8,
      "text": "\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    }
  ],
  "created": 1650089816,
  "object": "edit"
}
2022-04-16 06:17:03.379684 fix syntax errors 9 ["\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\n\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n\n\n\n    print(min(costs))\n", "\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(N) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "N, T = map(int, input().split())\n\n\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "N, T = map(int, input().split())\n\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"]
2022-04-16 06:17:03.379740 size on output set 5
2022-04-16 06:17:03.379758 num operations 1
2022-04-16 06:17:03.379766 size on input set 1
2022-04-16 06:17:13.346747 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1 # initialize the min_cost with a value larger than t\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t: \n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    print('Hello World')\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\nimport sys\n\ndef main():\n    s = list(input())\n    t = list(input())\n    s.sort()\n    t.sort(reverse=True)\n    s = ''.join(s)\n    t = ''.join(t)\n    print('Yes' if s < t else 'No')\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650089823,
  "object": "edit"
}
2022-04-16 06:17:13.347088 fix syntax errors 9 ['#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1 # initialize the min_cost with a value larger than t\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t: \n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    print(\'Hello World\')\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    s = list(input())\n    t = list(input())\n    s.sort()\n    t.sort(reverse=True)\n    s = \'\'.join(s)\n    t = \'\'.join(t)\n    print(\'Yes\' if s < t else \'No\')\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 06:17:13.347139 size on output set 7
