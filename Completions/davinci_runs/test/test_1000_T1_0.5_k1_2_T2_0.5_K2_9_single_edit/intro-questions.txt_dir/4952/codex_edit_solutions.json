["import sys\ndef main():\n    votes = []\n    for line in sys.stdin:\n        if line.strip() != '***':\n            votes.append(line.strip())\n        else:\n            break\n    max_votes = 0\n    for i in set(votes):\n        if votes.count(i) > max_votes:\n            max_votes = votes.count(i)\n            winner = i\n    if max_votes > len(votes)/2:\n        print(winner)\n    else:\n        print('Runoff!')\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    votes = []\n    for line in sys.stdin:\n        if line.strip() != '***'\n            votes.append(line.strip())\n        else:\n            break\n    max_votes = 0\n    for i in set(votes):\n        if votes.count(i) > max_votes:\n            max_votes = votes.count(i)\n            winner = i\n    if max_votes > len(votes)/2:\n        print(winner)\n    else:\n        print('Runoff!')\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    votes = {}\n    for line in sys.stdin:\n        if line.strip() == \"***\":\n            break\n        if line.strip() not in votes:\n            votes[line.strip()] = 1\n        else:\n            votes[line.strip()] += 1\n    max_votes = max(votes.values())\n    if list(votes.values()).count(max_votes) == 1:\n        print(list(votes.keys())[list(votes.values()).index(max_votes)])\n    else:\n        print(\"Runoff!\")\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nfrom collections import defaultdict \n\ndef main():\n    votes = defaultdict(int)\n    for line in sys.stdin:\n        if line == \"***\\n\":\n            break\n        votes[line.strip(\"\\n\")] += 1\n    total = sum(votes.values())\n    winner = max(votes, key=votes.get)\n    if votes[winner] > total / 2:\n        print(winner)\n    else:\n        print(\"Runoff!\")\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\nvotes = {}\n\nfor line in sys.stdin:\n    vote = line.strip()\n    if vote == '***':\n        break\n    else:\n        if vote in votes:\n            votes[vote] += 1\n        else:\n            votes[vote] = 1\n\ntotal = sum(votes.values())\n\nif len(votes) == 1:\n    print(votes.keys()[0])\nelse:\n    max_votes = max(votes.values())\n    winners = [k for k, v in votes.items() if v == max_votes]\n    if len(winners) == 1:\n        print(winners[0])\n    else:\n        print('Runoff!')\n", "\nimport sys\n\ndef main():\n    votes = []\n    for line in sys.stdin:\n        if line.strip() == \"***\":\n            break\n        votes.append(line.strip())\n    vote_dict = {}\n    for vote in votes:\n        if vote in vote_dict:\n            vote_dict[vote] += 1\n        else:\n            vote_dict[vote] = 1\n    max_votes = max(vote_dict.values())\n    if max_votes > len(votes) / 2:\n        print([name for name, count in vote_dict.items() if count == max_votes][0].strip())\n    else:\n        print(\"Runoff!\")\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef getMajority(votes):\n    # votes = sorted(votes)\n    # majority = votes[0]\n    # maxCount = 0\n    # count = 0\n    # for vote in votes:\n    #     if vote == majority:\n    #         count += 1\n    #         if count > maxCount:\n    #             maxCount = count\n    #     else:\n    #         majority = vote\n    #         count = 1\n    # if maxCount > len(votes)/2:\n    #     return majority\n    # return \"Runoff!\"\n    pass\n\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r')\n    sys.stdout = open(pname + '.out', 'w')\n\n    votes = []\n    while True:\n        line = input()\n        if line == \"***\":\n            break\n        votes.append(line)\n    print(getMajority(votes))\n\nif __name__ == \"__main__\":\n    main('vote')\n", "\n#\nimport sys\n\ndef main():\n    votes = []\n    for line in sys.stdin:\n        if line.strip() != '***':\n            votes.append(line.strip())\n        else:\n            break\n    max_votes = 0\n    for i in set(votes):\n        if votes.count(i) > max_votes:\n            max_votes = votes.count(i)\n            winner = i\n    if max_votes > len(votes)/2:\n        print(winner)\n    else:\n        print('Runoff!')\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nfrom collections import defaultdict\n\ndef main():\n\tvotes = defaultdict(int)\n\tfor line in sys.stdin:\n\t\tif line == \"***\\n\":\n\t\t\tbreak\n\t\tvotes[line.strip(\"\\n\")] += 1\n\ttotal = sum(votes.values())\n\twinner = max(votes, key=votes.get)\n\tif votes[winner] > total / 2:\n\t\tprint(winner)\n\telse:\n\t\tprint(\"Runoff!\")\n\nif __name__ == '__main__':\n\tmain()\n", "\nimport sys\n\ndef getMajority(votes):\n    votes = sorted(votes)\n    majority = votes[0]\n    maxCount = 0\n    count = 0\n    for vote in votes:\n        if vote == majority:\n            count += 1\n            if count > maxCount:\n                maxCount = count\n        else:\n            majority = vote\n            count = 1\n    if maxCount > len(votes)/2:\n        return majority\n    return \"Runoff!\"\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r')\n    sys.stdout = open(pname + '.out', 'w')\n\n    votes = []\n    while True:\n        line = input()\n        if line == \"***\":\n            break\n        votes.append(line)\n    print(getMajority(votes))\nif __name__ == \"__main__\":\n    main('vote')\n", "\nimport sys\nimport collections\n\ndef main():\n    votes = []\n    for line in sys.stdin:\n        if line.strip() == \"***\":\n            break\n        votes.append(line.strip())\n\n    votes = collections.Counter(votes)\n    max_votes = votes.most_common(1)[0][1]\n    if votes.most_common(2)[0][1] == votes.most_common(2)[1][1]:\n        print(\"Runoff!\")\n        return\n    else:\n        for name, num in votes.most_common():\n            if num == max_votes:\n                print(name)\n                return\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\nfrom collections import defaultdict\n\ndef main():\n    votes = defaultdict(int)\n    for line in sys.stdin:\n        if line == \"***\\n\":\n            break\n        votes[line.strip(\"\\n\")] += 1\n    total = sum(votes.values())\n    winner = max(votes, key=votes.get)\n    if votes[winner] > total / 2:\n        print(winner)\n    else:\n        print(\"Runoff!\")\n\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    votes = []\n    for line in sys.stdin.readlines()[0:-1]:\n        votes.append(line)\n    vote_dict = {}\n    for vote in votes:\n        if vote in vote_dict:\n            vote_dict[vote] += 1\n        else:\n            vote_dict[vote] = 1\n    max_votes = max(vote_dict.values())\n    if max_votes > len(votes) / 2:\n        print([name for name, count in vote_dict.items() if count == max_votes][0].strip())\n    else:\n        print(\"Runoff!\")\n\nif __name__ == '__main__':\n    main()\n", "\nfrom sys import stdin\n\ndef main():\n    votes = []\n    for line in stdin:\n        if line.strip() == \"***\":\n            break\n        votes.append(line.strip())\n    vote_dict = {}\n    for vote in votes:\n        if vote in vote_dict:\n            vote_dict[vote] += 1\n        else:\n            vote_dict[vote] = 1\n    max_votes = max(vote_dict.values())\n    if max_votes > len(votes) / 2:\n        print([name for name, count in vote_dict.items() if count == max_votes][0])\n    else:\n        print(\"Runoff!\")\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    votes = []\n    for line in sys.stdin:\n        if line.strip() == \"***\":\n            break\n        votes.append(line.strip())\n    vote_dict = {}\n    for vote in votes:\n        if vote in vote_dict:\n            vote_dict[vote] += 1\n        else:\n            vote_dict[vote] = 1\n    max_votes = max(vote_dict.values())\n    if max_votes > len(votes) / 2:\n        print([name for name, count in vote_dict.items() if count == max_votes][0]) #prints the name of the candidate with the most votes\n    else:\n        print(\"Runoff!\")\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n\tvotes = {}\n\tfor line in sys.stdin:\n\t\tif line.strip() == \"***\":\n\t\t\tbreak\n\t\tif line.strip() not in votes:\n\t\t\tvotes[line.strip()] = 1\n\t\telse:\n\t\t\tvotes[line.strip()] += 1\n\tmax_votes = max(votes.values())\n\tif list(votes.values()).count(max_votes) == 1:\n\t\tprint(list(votes.keys())[list(votes.values()).index(max_votes)])\n\telse:\n\t\tprint(\"Runoff!\")\nif __name__ == '__main__':\n\tmain()\n", "\nimport os\nimport sys\n\nvotes = {}\n\nfor line in sys.stdin:\n    vote = line.strip()\n    if vote == '***':\n        break\n    else:\n        if vote in votes:\n            votes[vote] += 1\n        else:\n            votes[vote] = 1\n\ntotal = sum(votes.values())\n\nif len(votes) == 1:\n    print(list(votes.keys())[0])\nelse:\n    max_votes = max(votes.values())\n    winners = [k for k, v in votes.items() if v == max_votes]\n    if len(winners) == 1:\n        print(winners[0])\n    else:\n        print('Runoff!')\n", "\n\nimport sys\n\ndef main():\n\tvotes = {}\n\tfor line in sys.stdin:\n\t\tif line.strip() == \"***\": #break on ***\n\t\t\tbreak\n\t\tif line.strip() not in votes: #if key not in votes, add it\n\t\t\tvotes[line.strip()] = 1\n\t\telse:\n\t\t\tvotes[line.strip()] += 1 #if key in votes, increment\n\tmax_votes = max(votes.values()) #find max votes\n\tif list(votes.values()).count(max_votes) == 1: #if max votes only occured once, print key with max votes\n\t\tprint(list(votes.keys())[list(votes.values()).index(max_votes)]) \n\telse:\n\t\tprint(\"Runoff!\") #if max votes occured more than once, print runoff\n\nif __name__ == '__main__':\n\tmain()\n", "\n\nimport sys\n\ndef getMajority(votes):\n    votes = sorted(votes)\n    majority = votes[0]\n    maxCount = 0\n    count = 0\n    for vote in votes:\n        if vote == majority:\n            count += 1\n            if count > maxCount:\n                maxCount = count\n        else:\n            majority = vote\n            count = 1\n    if maxCount > len(votes) // 2:\n        return majority\n    return \"Runoff!\"\n\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r')\n    sys.stdout = open(pname + '.out', 'w')\n\n    votes = []\n    while True:\n        line = input()\n        if line == \"***\":\n            break\n        votes.append(line)\n    print(getMajority(votes))\n\nif __name__ == \"__main__\":\n    main('vote')\n", "import sys\n\nnumVotes = 0\nvotes = []\n\nfor line in sys.stdin:\n    line = line.strip()\n    if line == '***':\n        break\n    numVotes += 1\n    votes.append(line)\n\ncandidates = {}\nfor vote in votes:\n    if vote in candidates:\n        candidates[vote] += 1\n    else:\n        candidates[vote] = 1\n\nmaxVotes = 0\nwinner = ''\nfor candidate, numVotesForCandidate in candidates.items():\n    if numVotesForCandidate > maxVotes:\n        maxVotes = numVotesForCandidate\n        winner = candidate\n\nif maxVotes > numVotes/2:\n    print(winner)\nelse:\n    print('Runoff!')\n", "\n\nimport sys\n\ndef getMajority(votes):\n    votes = sorted(votes)\n    majority = votes[0]\n    maxCount = 0\n    count = 0\n    for vote in votes:\n        if vote == majority:\n            count += 1\n            if count > maxCount:\n                maxCount = count\n        else:\n            majority = vote\n            count = 1\n    if maxCount > len(votes)/2:\n        return majority\n    return \"Runoff!\" #returns the majority vote\n\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r')\n    sys.stdout = open(pname + '.out', 'w')\n\n    votes = []\n    while True:\n        line = input()\n        if line == \"***\":\n            break\n        votes.append(line)\n    print(getMajority(votes))\n\nif __name__ == \"__main__\":\n    main('vote')\n", "\n\nimport sys\n\nimport collections\n\ndef main():\n    votes = []\n    for line in sys.stdin:\n        if line.strip() == '***':\n            break\n        votes.append(line.strip())\n\n    votes = collections.Counter(votes)\n    max_votes = votes.most_common(1)[0][1]\n    if votes.most_common(2)[0][1] == votes.most_common(2)[1][1]:\n        print('Runoff!')\n        return\n    else:\n        for name, num in votes.most_common():\n            if num == max_votes:\n                print(name)\n                return\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    votes = []\n    for line in sys.stdin:\n        if line.strip() != '***':\n            votes.append(line.strip())\n        else:\n            break\n    max_votes = 0\n    for i in set(votes):\n        if votes.count(i) > max_votes:\n            max_votes = votes.count(i)\n            winner = i\n    if max_votes > len(votes)//2:\n        print(winner)\n    else:\n        print('Runoff!')\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\nnumVotes = 0\nvotes = []\n\nfor line in sys.stdin:\n    line = line.strip()\n    if line == '***':  # end of input\n        break\n    numVotes += 1  # count number of votes\n    votes.append(line)\n\ncandidates = {}  # dictionary of candidates\nfor vote in votes:  # count votes for each candidate\n    if vote in candidates:\n        candidates[vote] += 1\n    else:\n        candidates[vote] = 1\n\nmaxVotes = 0  # highest number of votes\nwinner = ''  # candidate with highest number of votes\nfor candidate, numVotes in candidates.items():  # find highest number of votes\n    if numVotes > maxVotes:\n        maxVotes = numVotes\n        winner = candidate\n\nif maxVotes > numVotes / 2:  # highest number of votes is majority\n    print(winner)\nelse:  # highest number of votes is not majority\n    print('Runoff!')\n", "\nimport sys\n\ndef main():\n    votes = {}\n    for line in sys.stdin:\n        if line.strip() == \"***\":\n            break\n        if line.strip() not in votes:\n            votes[line.strip()] = 1\n        else:\n            votes[line.strip()] += 1\n    max_votes = max(votes.values())\n    if list(votes.values()).count(max_votes) == 1:\n        print(list(votes.keys())[list(votes.values()).index(max_votes)])\n    else:\n        print(\"Runoff!\")\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    votes = []\n    for line in sys.stdin:\n        if line.strip() != '***':\n            votes.append(line.strip())\n        else:\n            break\n    max_votes = 0\n    for i in set(votes):\n        if votes.count(i) > max_votes:\n            max_votes = votes.count(i)\n            winner = i\n    if max_votes > (len(votes)/2):\n        print(winner)\n    else:\n        print('Runoff!')\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nfrom collections import defaultdict\n\ndef main():\n    votes = defaultdict(int)\n    for line in sys.stdin:\n        if line == \"***\\n\":\n            break\n        votes[line.strip(\"\\n\")] += 1\n    total = sum(votes.values())\n    max_vote = max(votes.values())\n    if max_vote > total / 2:\n        for key, value in votes.items():\n            if value == max_vote:\n                print(key)\n                break\n    else:\n        print(\"Runoff!\")\n\nif __name__ == '__main__':\n    main()\n", "import sys\ndef main():\n    votes = []\n    for line in sys.stdin:\n        if line.strip() != '***':\n            votes.append(line.strip())\n        else:\n            break\n    max_votes = 0\n    for i in set(votes):\n        if votes.count(i) > max_votes:\n            max_votes = votes.count(i)\n            winner = i\n    if max_votes > len(votes)/2:\n        print(winner)\n    else:\n        print('Runoff!')\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    votes = []\n    for line in sys.stdin:\n        if line.strip() == \"***\":\n            break\n        votes.append(line.strip())\n    vote_dict = {}\n    for vote in votes:\n        if vote in vote_dict:\n            vote_dict[vote] += 1\n        else:\n            vote_dict[vote] = 1\n    max_votes = max(vote_dict.values())\n    if max_votes > len(votes) // 2:\n        print([name for name, count in vote_dict.items() if count == max_votes][0])\n    else:\n        print(\"Runoff!\")\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/python\n\nimport sys\nimport collections\n\ndef main():\n    votes = []\n    for line in sys.stdin:\n        if line.strip() == '***':\n            break\n        votes.append(line.strip())\n\n    votes = collections.Counter(votes)\n    max_votes = votes.most_common(1)[0][1]\n    if votes.most_common(2)[0][1] == votes.most_common(2)[1][1]:\n        print('Runoff!')\n        return\n    else:\n        for name, num in votes.most_common():\n            if num == max_votes:\n                print(name)\n                return\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef get_majority(votes):\n    votes = sorted(votes)\n    majority = votes[0]\n    maxCount = 0\n    count = 0\n    for vote in votes:\n        if vote == majority:\n            count += 1\n            if count > maxCount:\n                maxCount = count\n        else:\n            majority = vote\n            count = 1\n    if maxCount > len(votes)/2:\n        return majority\n    return \"Runoff!\"\n\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r')\n    sys.stdout = open(pname + '.out', 'w')\n\n    votes = []\n    while True:\n        line = input()\n        if line == \"***\":\n            break\n        votes.append(line)\n    print(get_majority(votes))\n\nif __name__ == \"__main__\":\n    main('vote')\n", "\nimport sys\n\n\ndef get_majority(votes):\n    votes = sorted(votes)\n    majority = votes[0]\n    maxCount = 0\n    count = 0\n    for vote in votes:\n        if vote == majority:\n            count += 1\n            if count > maxCount:\n                maxCount = count\n        else:\n            majority = vote\n            count = 1\n    if maxCount > len(votes) / 2:\n        return majority\n    return \"Runoff!\"\n\n\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r')\n    sys.stdout = open(pname + '.out', 'w')\n\n    votes = []\n    while True:\n        line = input()\n        if line == \"***\":\n            break\n        votes.append(line)\n    print(get_majority(votes))\n\n\nif __name__ == \"__main__\":\n    main('vote')\n", "\nimport sys\n\ndef main():\n    votes = []\n    for line in sys.stdin:\n        if line.strip() != '***':\n            votes.append(line.strip())\n        else:\n            break\n    max_votes = 0\n    for i in set(votes):\n        if votes.count(i) > max_votes:\n            max_votes = votes.count(i)\n            winner = i\n    if max_votes > len(votes)/2:\n        print(winner)\n    else:\n        print('Runoff!')\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n\tvotes = {}\n\tfor line in sys.stdin:\n\t\tif line.strip() == \"***\":\n\t\t\tbreak\n\t\tif line.strip() not in votes:\n\t\t\tvotes[line.strip()] = 1\n\t\telse:\n\t\t\tvotes[line.strip()] += 1\n\tmax_votes = max(votes.values())\n\tif list(votes.values()).count(max_votes) == 1:\n\t\tprint(list(votes.keys())[list(votes.values()).index(max_votes)], end='')\n\telse:\n\t\tprint(\"Runoff!\", end='')\n\nif __name__ == '__main__':\n\tmain()\n", "import sys\n\nnumVotes = 0\nvotes = []\n\nfor line in sys.stdin:\n    line = line.strip()\n    if line == '***':\n        break\n    numVotes += 1\n    votes.append(line)\n\ncandidates = {}\nfor vote in votes:\n    if vote in candidates:\n        candidates[vote] += 1\n    else:\n        candidates[vote] = 1\n\nmaxVotes = 0\nwinner = ''\nfor candidate, numVotes in candidates.items():\n    if numVotes > maxVotes:\n        maxVotes = numVotes\n        winner = candidate\n\nif maxVotes > numVotes/2:\n    print(winner)\nelse:\n    print('Runoff!')\n", "import sys\n\ndef main():\n\tvotes = {}\n\tfor line in sys.stdin:\n\t\tif line.strip() == \"***\":\n\t\t\tbreak\n\t\tif line.strip() not in votes:\n\t\t\tvotes[line.strip()] = 1\n\t\telse:\n\t\t\tvotes[line.strip()] += 1\n\tmax_votes = max(votes.values())\n\tif list(votes.values()).count(max_votes) == 1:\n\t\tprint(list(votes.keys())[list(votes.values()).index(max_votes)])\n\telse:\n\t\tprint(\"Runoff!\")\n\nif __name__ == '__main__':\n\tmain()\n", "import sys\n\nnum_votes = 0\nvotes = []\n\nfor line in sys.stdin:\n    line = line.strip()\n    if line == '***':\n        break\n    num_votes += 1\n    votes.append(line)\n\ncandidates = {}\nfor vote in votes:\n    if vote in candidates:\n        candidates[vote] += 1\n    else:\n        candidates[vote] = 1\n\nmax_votes = 0\nwinner = ''\nfor candidate, num_votes in candidates.items():\n    if num_votes > max_votes:\n        max_votes = num_votes\n        winner = candidate\n\nif max_votes > num_votes/2:\n    print(winner)\nelse:\n    print('Runoff!')\n", "\n\nimport sys\n\nimport collections\n\ndef main():\n    votes = []\n    for line in sys.stdin:\n        if line.strip() == '***':\n            break\n        votes.append(line.strip())\n\n    votes = collections.Counter(votes)\n    max_votes = votes.most_common(1)[0][1]\n    if votes.most_common(2)[0][1] == votes.most_common(2)[1][1]:\n        print('Runoff!')\n        return\n    else:\n        for name, num in votes.most_common():\n            if num == max_votes:\n                print(name)\n                return\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nfrom collections import defaultdict\n\ndef main():\n    votes = defaultdict(int)  # to store the votes\n    for line in sys.stdin:\n        if line == \"***\\n\":  # end of votes\n            break\n        votes[line.strip(\"\\n\")] += 1  # add vote\n    total = sum(votes.values())  # total votes\n    winner = max(votes, key=votes.get)  # get the winner\n    if votes[winner] > total / 2:  # check if winner won by majority\n        print(winner)\n    else:\n        print(\"Runoff!\")\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef getMajority(votes):\n    votes = sorted(votes)\n    majority = votes[0]\n    maxCount = 0\n    count = 0\n    for vote in votes:\n        if vote == majority:\n            count += 1\n            if count > maxCount:\n                maxCount = count\n        else:\n            majority = vote\n            count = 1\n    if maxCount > len(votes)/2:\n        return majority\n    return \"Runoff!\"\n\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r')\n    sys.stdout = open(pname + '.out', 'w')\n\n    votes = []\n    while True:\n        line = input()\n        if line == \"***\":\n            break\n        votes.append(line)\n    print(getMajority(votes))\n\nif __name__ == \"__main__\":\n    main('vote')\n", "\nimport sys\n\ndef main():\n    votes = []\n    for line in sys.stdin:\n        if line.strip() == \"***\":\n            break\n        votes.append(line.strip())\n    vote_dict = {}\n    for vote in votes:\n        if vote in vote_dict:\n            vote_dict[vote] += 1\n        else:\n            vote_dict[vote] = 1\n    max_votes = max(vote_dict.values())\n    if max_votes > len(votes) / 2:\n        print([name for name, count in vote_dict.items() if count == max_votes][0])  # noqa\n    else:\n        print(\"Runoff!\")\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    votes = []\n    for line in sys.stdin:\n        if line.strip() != '***':\n            votes.append(line.strip())\n        else:\n            break\n    max_votes = 0\n    for i in set(votes):\n        if votes.count(i) > max_votes:\n            max_votes = votes.count(i)\n            winner = i\n    if max_votes > len(votes)/2:\n        print(winner)\n    else:\n        print('Runoff!')\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\nvotes = {}\n\nfor line in sys.stdin:\n    vote = line.strip()\n    if vote == '***':\n        break\n    else:\n        if vote in votes:\n            votes[vote] += 1\n        else:\n            votes[vote] = 1\n\ntotal = sum(votes.values())\n\nif len(votes) == 1:\n    print(list(votes.keys())[0])\nelse:\n    max_votes = max(votes.values())\n    winners = [k for k, v in votes.items() if v == max_votes]\n    if len(winners) == 1:\n        print(winners[0])\n    else:\n        print('Runoff!')\n", "\n\n\nimport sys\n\ndef getMajority(votes):\n    votes = sorted(votes)\n    majority = votes[0]\n    maxCount = 0\n    count = 0\n    for vote in votes:\n        if vote == majority:\n            count += 1\n            if count > maxCount:\n                maxCount = count\n        else:\n            majority = vote\n            count = 1\n    if maxCount > len(votes)/2:\n        return majority\n    return \"Runoff!\"\n\n\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r')\n    sys.stdout = open(pname + '.out', 'w')\n\n    votes = []\n    while True:\n        line = input()\n        if line == \"***\":\n            break\n        votes.append(line)\n\n    print(getMajority(votes))\n\nif __name__ == \"__main__\":\n    main('vote')\n", "\nimport os\nimport sys\n\n    os.system(\"clear\")\ndef main():\n\tvotes = {}\n\tfor line in sys.stdin.readlines():\n\t\tif line.strip() == \"***\":\n\t\t\tbreak\n\t\tif line.strip() not in votes:\n\t\t\tvotes[line.strip()] = 1\n\t\telse:\n\t\t\tvotes[line.strip()] += 1\n\tmax_votes = max(votes.values())\n\tif list(votes.values()).count(max_votes) == 1:\n\t\tprint(list(votes.keys())[list(votes.values()).index(max_votes)])\n\telse:\n\t\tprint(\"Runoff!\")\n\nif __name__ == '__main__':\n\tmain()\n", "\nimport sys\nfrom collections import defaultdict\n\ndef main():\n    votes = defaultdict(int)\n    for line in sys.stdin:\n        if line == \"***\\n\":\n            break\n        votes[line.strip(\"\\n\")] += 1\n    total = sum(votes.values())\n    winner = max(votes, key=votes.get)\n    if votes[winner] > total / 2:\n        print(winner)\n    else:\n        print(\"Runoff!\")\n\nif __name__ == '__main__':\n    main()\n", "import sys\nfrom collections import defaultdict\nfrom collections import Counter\n\n\nvotes = defaultdict(int)\n\nfor line in sys.stdin:\n    vote = line.strip()\n    if vote == '***':\n        break\n    else:\n        votes[vote] += 1\n\ncounts = Counter(votes.values())\n\nif len(counts) == 1:\n    print(list(votes.keys())[0])\nelse:\n    max_votes = max(counts.keys())\n    winners = [k for k, v in votes.items() if v == max_votes]\n    if len(winners) == 1:\n        print(winners[0])\n    else:\n        print('Runoff!')\n", "\nimport sys\n\ndef main():\n\tvotes = {}\n\tfor line in sys.stdin:\n\t\tif line.strip() == \"***\":\n\t\t\tbreak\n\t\tif line.strip() not in votes:\n\t\t\tvotes[line.strip()] = 1\n\t\telse:\n\t\t\tvotes[line.strip()] += 1\n\tmax_votes = max(votes.values())\n\tif list(votes.values()).count(max_votes) == 1:\n\t\tprint(list(votes.keys())[list(votes.values()).index(max_votes)])\n\telse:\n\t\tprint(\"Runoff!\")\nif __name__ == '__main__':\n\tmain()\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Wed Jan 16 14:53:44 2019\n\n@author: hannaholdorf\n\"\"\"\n\nimport sys\nimport collections \n\n\ndef main():\n    \"\"\"\n    Main function that prints the winner of the voting election.\n    \n    Parameters\n    ----------\n    None\n    \n    Returns\n    -------\n    None\n    \"\"\"\n    # read in votes\n    votes = [line.strip() for line in sys.stdin]\n    \n    # count votes\n    # find most common vote\n    \n    # check if there is a runoff\n\n    votes = collections.Counter(votes)\n    max_votes = votes.most_common(1)[0][1]\n    if votes.most_common(2)[0][1] == votes.most_common(2)[1][1]:\n    # print the winner\n        print('Runoff!')\n        return\n    else:\n        for name, num in votes.most_common():\n            if num == max_votes:\n                print(name)\n                return\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    votes = {}\n    for line in sys.stdin:\n        if line.strip() == \"***\":\n            break\n        name, vote = line.strip().split()\n        if name in votes:\n            votes[name].append(vote)\n        else\n            votes[name] = [vote]\n    for name in votes:\n        vote_dict = {}\n        for vote in votes[name]:\n            if vote in vote_dict:\n                vote_dict[vote] += 1\n            else:\n                vote_dict[vote] = 1\n        max_votes = max(vote_dict.values())\n        if max_votes > len(votes[name]) / 2:\n            print([name for name, count in vote_dict.items() if count == max_votes][0])\n        else:\n            print(\"Runoff!\")\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\nnumVotes = 0\nvotes = []\n\nfor line in sys.stdin:\n    line = line.strip()\n    if line == '***':\n        break\n    numVotes += 1\n    votes.append(line)\n\ncandidates = {}\nfor vote in votes:\n    if vote in candidates:\n        candidates[vote] += 1\n    else:\n        candidates[vote] = 1\n\nmaxVotes = 0\nwinner = ''\nfor candidate, numVotes in candidates.items():\n    if numVotes > maxVotes:\n        maxVotes = numVotes\n        winner = candidate\n\nif maxVotes > numVotes / 2:\n    print(winner)\nelse:\n    print('Runoff!')\n", "\nimport sys\n\ndef main():\n    votes = []\n    for line in sys.stdin:\n        if line.strip() != '***':\n            votes.append(line.strip())\n        else:\n            break\n    max_votes = 0\n    for i in set(votes):\n        if votes.count(i) > max_votes:\n            max_votes = votes.count(i)\n            winner = i\n    if max_votes > len(votes)/2:\n        print(winner)\n    else:\n        print('Runoff!')\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    votes = []\n    for line in sys.stdin:\n        if line.strip() == \"***\":\n            break\n        votes.append(line.strip())\n    vote_dict = {}\n    for vote in votes:\n        if vote in vote_dict:\n            vote_dict[vote] += 1\n        else:\n            vote_dict[vote] = 1\n    max_votes = max(vote_dict.values())\n    if max_votes > len(votes) / 2:\n        print([name for name, count in vote_dict.items() if count == max_votes][0]) # this is a list comprehension\n    else:\n        print(\"Runoff!\")\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\nnumVotes = 0\nvotes = []\ncandidates = {}\n\nfor line in sys.stdin:\n    line = line.strip()\n    if line == '***':\n        break\n    numVotes += 1\n    votes.append(line)\n\nfor vote in votes:\n    if vote in candidates:\n        candidates[vote] += 1\n    else:\n        candidates[vote] = 1\n\nmaxVotes = 0\nwinner = ''\nfor candidate, numVotes in candidates.items():\n    if numVotes > maxVotes:\n        maxVotes = numVotes\n        winner = candidate\n\nif maxVotes > numVotes/2:\n    print(winner)\nelse:\n    print('Runoff!')\n", "\n\nimport sys\nfrom collections import defaultdict\n\ndef main():\n    votes = defaultdict(int)\n    for line in sys.stdin:\n        if line == \"***\":\n            break\n        votes[line.strip()] += 1\n    total = sum(votes.values())\n    winner = max(votes, key=votes.get)\n    if votes[winner] > total / 2:\n        print(winner)\n    else:\n        print(\"Runoff!\")\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nimport collections\n\ndef main():\n    votes = []\n    for line in sys.stdin:\n        if line.strip() == '***':\n            break\n        votes.append(line.strip())\n\n    votes = collections.Counter(votes)\n    max_votes = votes.most_common(1)[0][1]\n    if votes.most_common(2)[0][1] == votes.most_common(2)[1][1]:\n        print('Runoff!')\n        return\n    else:\n        for name, num in votes.most_common():\n            if num == max_votes:\n                print(name)\n                return\n\nif __name__ == '__main__':\n    main()\n", "import sys\nfrom collections import defaultdict\n\n\n\ndef main():\n    votes = defaultdict(int)\n    for line in sys.stdin:\n        if line == \"***\\n\":\n            break\n        votes[line.strip(\"\\n\")] += 1\n    total = sum(votes.values())\n    winner = max(votes, key=votes.get)\n    if votes[winner] > total / 2:\n        print(winner)\n    else:\n        print(\"Runoff!\")\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef getMajority(votes):\n    votes = sorted(votes)\n    majority = votes[0]\n    maxCount = 0\n    count = 0\n    for vote in votes:\n        if vote == majority:\n            count += 1\n            if count > maxCount:\n                maxCount = count\n        else:\n            majority = vote\n            count = 1\n    if maxCount > len(votes)//2:\n        return majority\n    return \"Runoff!\"\n\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r')\n    sys.stdout = open(pname + '.out', 'w')\n\n    votes = []\n    while True:\n        line = input()\n        if line == \"***\":\n            break\n        votes.append(line)\n    print(getMajority(votes))\n\nif __name__ == \"__main__\":\n    main('vote')\n", "import sys\ndef main():\n    votes = []\n    for line in sys.stdin:\n        if line.strip() == \"***\":\n            break\n        votes.append(line.strip())\n    vote_dict = {}\n    for vote in votes:\n        if vote in vote_dict:\n            vote_dict[vote] += 1\n        else:\n            vote_dict[vote] = 1\n    max_votes = max(vote_dict.values())\n    if max_votes > len(votes) / 2:\n        print([name for name, count in vote_dict.items() if count == max_votes][0])\n    else:\n        print(\"Runoff!\")\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\nimport collections\n\ndef main():\n    votes = []\n    for line in sys.stdin:\n        if line.strip() == '***':\n            break\n        votes.append(line.strip())\n\n    votes = collections.Counter(votes)\n    max_votes = votes.most_common(1)[0][1]\n    if votes.most_common(2)[0][1] == votes.most_common(2)[1][1]:\n        print('Runoff!')\n        return\n    else:\n        for name, num in votes.most_common():\n            if num == max_votes:\n                print(name)\n                return\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\nvotes = {}\n\nfor line in sys.stdin:\n    vote = line.strip()\n    if vote == '***':\n        break\n    else:\n        if vote in votes:\n            votes[vote] += 1\n        else:\n            votes[vote] = 1\n\ntotal = sum(votes.values())\n\nif len(votes) == 1:\n    print(list(votes.keys())[0])\nelse:\n    max_votes = max(votes.values())\n    winners = [k for k, v in votes.items() if v == max_votes]\n    if len(winners) == 1:\n        print(winners[0])\n    else:\n        print('Runoff!')\n", "import sys\n\nnumVotes = 0\nvotes = []\n\nfor line in sys.stdin:\n    line = line.strip()\n    if line == '***':\n        break\n    numVotes += 1\n    votes.append(line)\n\ncandidates = {}\nfor vote in votes:\n    if vote in candidates:\n        candidates[vote] += 1\n    else:\n        candidates[vote] = 1\n\nmaxVotes = 0\nwinner = ''\nfor candidate, votes in candidates.items():\n    if votes > maxVotes:\n        maxVotes = votes\n        winner = candidate\n\nif maxVotes > numVotes/2:\n    print(winner)\nelse:\n    print('Runoff!')\n"]