["\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2:\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp-9) + 9)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))", "\n\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] - 1 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if ls[cur] - 2 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))"]