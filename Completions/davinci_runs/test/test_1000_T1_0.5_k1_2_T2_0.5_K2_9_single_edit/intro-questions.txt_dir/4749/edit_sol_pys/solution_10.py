
def is_correct_sudoku(sudoku):
    # check if each row has unique numbers
    for row in sudoku:
        if not is_unique(row):
            return False
    # check if each column has unique numbers
    for i in range(9):
        column = [row[i] for row in sudoku]
        if not is_unique(column):
            return False
    # check if each 3x3 square has unique numbers
    for i in range(0, 9, 3):
        for j in range(0, 9, 3):
            square = []
            for k in range(3):
                square += sudoku[i + k][j:j + 3]
            if not is_unique(square):
                return False
    return True  # if all checks passed, the sudoku is correct

if __name__ == '__main__':
    sudoku = [list(map(int, input().split())) for _ in range(9)]
    if is_correct_sudoku(sudoku):
        print(1)
    else:
        print(0)


def is_unique(lst):
    return len(set(lst)) == len(lst)





























































































































































































































































































































































































































































































































































































































































































































































