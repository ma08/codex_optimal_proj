2022-04-16 08:54:28.347976 num operations 1
2022-04-16 08:54:28.347993 size on input set 1
2022-04-16 08:54:37.635940 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef isDancePossible(n, perm):\n    if n == 1:\n        return True\n    perm = [i - 1 for i in perm]\n    for i in range(1, n):\n        if abs(perm[i] - perm[i - 1]) != 1 and abs(perm[i] - perm[i - 1]) != n - 1:\n            return False\n\n    return True\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = list(map(int, input().split()))\n        print(\"YES\" if isDancePossible(n, perm) else \"NO\")\n"
    },
    {
      "index": 1,
      "text": "\ndef isDancePossible(n, perm):\n    pass\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = list(map(int, input().split()))\n        print(\"YES\" if isDancePossible(n, perm) else \"NO\")\n"
    },
    {
      "index": 2,
      "text": "\n\ndef isDancePossible(n, perm):\n    if n == 1:\n        return True\n    perm = [i - 1 for i in perm]\n    for i in range(1, n):\n        if abs(perm[i] - perm[i - 1]) != 1 and abs(perm[i] - perm[i - 1]) != n - 1:\n            return False\n\n    return True\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = [int(i) for i in input().split()]\n        print(\"YES\" if isDancePossible(n, perm) else \"NO\")\n"
    },
    {
      "index": 3,
      "text": "\n\ndef isDancePossible(n, perm):\n    if n == 1:\n        return True\n    perm = [i - 1 for i in perm]\n    for i in range(1, n):\n        if abs(perm[i] - perm[i-1]) != 1 and abs(perm[i] - perm[i-1]) != n-1:\n            return False\n    return True\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = list(map(int, input().split()))\n        print(\"YES\" if isDancePossible(n, perm) else \"NO\")\n"
    },
    {
      "index": 4,
      "text": "\n\ndef isDancePossible(n, perm):\n    if n == 1:\n        return True\n    perm = [i - 1 for i in perm]\n    for i in range(1, n):\n        if abs(perm[i] - perm[i - 1]) != 1 and abs(perm[i] - perm[i - 1]) != n - 1:\n            return False\n    return True\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = list(map(int, input().split()))\n        print(\"YES\" if isDancePossible(n, perm) else \"NO\")\n"
    },
    {
      "index": 5,
      "text": "\n\ndef is_dance_possible(n, perm):\n    if n == 1:\n        return True\n    perm = [i-1 for i in perm]\n    for i in range(1, n):\n        if abs(perm[i]-perm[i-1]) != 1 and abs(perm[i]-perm[i-1]) != n-1:\n            return False\n    return True\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = list(map(int, input().split()))\n        print(\"YES\" if is_dance_possible(n, perm) else \"NO\")\n"
    },
    {
      "index": 6,
      "text": "\ndef isDancePossible(n, perm):\n    if n == 1:\n        return True\n    perm = [i-1 for i in perm]\n    for i in range(1, n):\n        if abs(perm[i]-perm[i-1]) != 1 and abs(perm[i]-perm[i-1]) != n-1:\n            return False\n    return True\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = list(map(int, input().split()))\n        print(\"YES\" if isDancePossible(n, perm) else \"NO\")\n"
    },
    {
      "index": 7,
      "text": "\n\ndef isDancePossible(n, perm):\n    if n == 1:\n        return True\n    perm = [i - 1 for i in perm]\n    for i in range(1, n):\n        if abs(perm[i] - perm[i-1]) != 1 and abs(perm[i] - perm[i-1]) != n-1:\n            return False\n\n    return True\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = list(map(int, input().split()))\n        print(\"YES\" if isDancePossible(n, perm) else \"NO\")\n"
    },
    {
      "index": 8,
      "text": "\n"
    }
  ],
  "created": 1650099268,
  "object": "edit"
}
2022-04-16 08:54:37.636211 fix syntax errors 9 ['\n\ndef isDancePossible(n, perm):\n    if n == 1:\n        return True\n    perm = [i - 1 for i in perm]\n    for i in range(1, n):\n        if abs(perm[i] - perm[i - 1]) != 1 and abs(perm[i] - perm[i - 1]) != n - 1:\n            return False\n\n    return True\n\nif __name__ == "__main__":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = list(map(int, input().split()))\n        print("YES" if isDancePossible(n, perm) else "NO")\n', '\ndef isDancePossible(n, perm):\n    pass\n\nif __name__ == "__main__":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = list(map(int, input().split()))\n        print("YES" if isDancePossible(n, perm) else "NO")\n', '\n\ndef isDancePossible(n, perm):\n    if n == 1:\n        return True\n    perm = [i - 1 for i in perm]\n    for i in range(1, n):\n        if abs(perm[i] - perm[i - 1]) != 1 and abs(perm[i] - perm[i - 1]) != n - 1:\n            return False\n\n    return True\n\nif __name__ == "__main__":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = [int(i) for i in input().split()]\n        print("YES" if isDancePossible(n, perm) else "NO")\n', '\n\ndef isDancePossible(n, perm):\n    if n == 1:\n        return True\n    perm = [i - 1 for i in perm]\n    for i in range(1, n):\n        if abs(perm[i] - perm[i-1]) != 1 and abs(perm[i] - perm[i-1]) != n-1:\n            return False\n    return True\n\nif __name__ == "__main__":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = list(map(int, input().split()))\n        print("YES" if isDancePossible(n, perm) else "NO")\n', '\n\ndef isDancePossible(n, perm):\n    if n == 1:\n        return True\n    perm = [i - 1 for i in perm]\n    for i in range(1, n):\n        if abs(perm[i] - perm[i - 1]) != 1 and abs(perm[i] - perm[i - 1]) != n - 1:\n            return False\n    return True\n\nif __name__ == "__main__":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = list(map(int, input().split()))\n        print("YES" if isDancePossible(n, perm) else "NO")\n', '\n\ndef is_dance_possible(n, perm):\n    if n == 1:\n        return True\n    perm = [i-1 for i in perm]\n    for i in range(1, n):\n        if abs(perm[i]-perm[i-1]) != 1 and abs(perm[i]-perm[i-1]) != n-1:\n            return False\n    return True\n\nif __name__ == "__main__":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = list(map(int, input().split()))\n        print("YES" if is_dance_possible(n, perm) else "NO")\n', '\ndef isDancePossible(n, perm):\n    if n == 1:\n        return True\n    perm = [i-1 for i in perm]\n    for i in range(1, n):\n        if abs(perm[i]-perm[i-1]) != 1 and abs(perm[i]-perm[i-1]) != n-1:\n            return False\n    return True\n\nif __name__ == "__main__":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = list(map(int, input().split()))\n        print("YES" if isDancePossible(n, perm) else "NO")\n', '\n\ndef isDancePossible(n, perm):\n    if n == 1:\n        return True\n    perm = [i - 1 for i in perm]\n    for i in range(1, n):\n        if abs(perm[i] - perm[i-1]) != 1 and abs(perm[i] - perm[i-1]) != n-1:\n            return False\n\n    return True\n\nif __name__ == "__main__":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = list(map(int, input().split()))\n        print("YES" if isDancePossible(n, perm) else "NO")\n', '\n']
2022-04-16 08:54:37.636264 size on output set 9
2022-04-16 08:54:37.636277 num operations 1
2022-04-16 08:54:37.636282 size on input set 1
2022-04-16 08:54:51.802916 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# solution\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n == 1:\n        print(\"YES\")\n        continue\n    if n == 2:\n        if p[0] == 1 and p[1] == 2:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n        continue\n    if p[0] == 1:\n        start = 1\n        if p[1] == 2:\n            direction = 1\n        else:\n            direction = -1\n    else:\n        start = p.index(1)\n        if p[start - 1] == n:\n            direction = 1\n        else:\n            direction = -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n + 1:\n            print(\"NO\")\n            break\n    else:\n        print(\"YES\")\n"
    },
    {
      "index": 1,
      "text": "\n\n# SOLUTION #\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n == 1:\n        print(\"YES\")\n        continue\n    if n == 2:\n        if p[0] == 1 and p[1] == 2:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n        continue\n    if p[0] == 1:\n        start = 1\n        if p[1] == 2:\n            direction = 1\n        else:\n            direction = -1\n    else:\n        start = p.index(1)\n        if p[start - 1] == n:\n            direction = 1\n        else:\n            direction = -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n + 1:\n            print(\"NO\")\n            break\n    else:\n        print(\"YES\")\n"
    },
    {
      "index": 2,
      "text": "def main():\n    n = int(input())\n    s = list(input())\n    a = 0\n    for i in range(n):\n        if s[i] == 'A':\n            a += 1\n    if a > n - a:\n        print('Anton')\n    elif a < n - a:\n        print('Danik')\n    else:\n        print('Friendship')\nmain()\n"
    },
    {
      "index": 3,
      "text": "\n# SOLUTION\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n == 1:\n        print(\"YES\")\n        continue\n    if n == 2:\n        if p[0] == 1 and p[1] == 2:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n        continue\n    if p[0] == 1:\n        start = 1\n        if p[1] == 2:\n            direction = 1\n        else:\n            direction = -1\n    else:\n        start = p.index(1)\n        if p[start - 1] == n:\n            direction = 1\n        else:\n            direction = -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n + 1:\n            print(\"NO\")\n            break\n    else:\n        print(\"YES\")\n"
    },
    {
      "index": 4,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Wed Jun 24 22:37:51 2020\n\"\"\"\n\n# SOLUTION\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n == 1:\n        print(\"YES\")\n        continue\n    if n == 2:\n        if p[0] == 1 and p[1] == 2:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n        continue\n    if p[0] == 1:\n        start = 1\n        if p[1] == 2:\n            direction = 1\n        else:\n            direction = -1\n    else:\n        start = p.index(1)\n        if p[start - 1] == n:\n            direction = 1\n        else:\n            direction = -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n + 1:\n            print(\"NO\")\n            break\n    else:\n        print(\"YES\")\n"
    },
    {
      "index": 5,
      "text": "\n\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    print(n)\n"
    },
    {
      "index": 6,
      "text": "\n# SOLUTION\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n == 1:\n        print(\"YES\")\n        continue\n    if n == 2:\n        if p[0] == 1 and p[1] == 2:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n        continue\n    if p[0] == 1:\n        start = 1\n        if p[1] == 2:\n            direction = 1\n        else:\n            direction = -1\n    else:\n        start = p.index(1)\n        if p[start - 1] == n:\n            direction = 1\n        else:\n            direction = -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n + 1:\n            print(\"NO\")\n            break\n    else:\n        print(\"YES\")\n"
    },
    {
      "index": 7,
      "text": "\ndef solve(n, p):\n    if n == 1: return True\n    if n == 2: return p == [1, 2]\n    if p[0] == 1:\n        start = 1; direction = 1 if p[1] == 2 else -1\n    else: start = p.index(1); direction = 1 if p[start - 1] == n else -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n + 1: return False\n    return True\nfor _ in range(int(input())):\n    n = int(input()); p = list(map(int, input().split()))\n    print(\"YES\" if solve(n, p) else \"NO\")\n"
    },
    {
      "index": 8,
      "text": "\n# SOLUTION\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n == 1:\n        print(\"YES\")\n        continue\n    if n == 2:\n        if p[0] == 1 and p[1] == 2:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n        continue\n    if p[0] == 1:\n        start = 1\n        if p[1] == 2:\n            direction = 1\n        else:\n            direction = -1\n    else:\n        start = p.index(1)\n        if p[start - 1] == n:\n            direction = 1\n        else:\n            direction = -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n + 1:\n            print(\"NO\")\n            break\n    else:\n        print(\"YES\")\n"
    }
  ],
  "created": 1650099277,
  "object": "edit"
}
2022-04-16 08:54:51.803259 fix syntax errors 9 ['\n\n# solution\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n == 1:\n        print("YES")\n        continue\n    if n == 2:\n        if p[0] == 1 and p[1] == 2:\n            print("YES")\n        else:\n            print("NO")\n        continue\n    if p[0] == 1:\n        start = 1\n        if p[1] == 2:\n            direction = 1\n        else:\n            direction = -1\n    else:\n        start = p.index(1)\n        if p[start - 1] == n:\n            direction = 1\n        else:\n            direction = -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n + 1:\n            print("NO")\n            break\n    else:\n        print("YES")\n', '\n\n# SOLUTION #\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n == 1:\n        print("YES")\n        continue\n    if n == 2:\n        if p[0] == 1 and p[1] == 2:\n            print("YES")\n        else:\n            print("NO")\n        continue\n    if p[0] == 1:\n        start = 1\n        if p[1] == 2:\n            direction = 1\n        else:\n            direction = -1\n    else:\n        start = p.index(1)\n        if p[start - 1] == n:\n            direction = 1\n        else:\n            direction = -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n + 1:\n            print("NO")\n            break\n    else:\n        print("YES")\n', "def main():\n    n = int(input())\n    s = list(input())\n    a = 0\n    for i in range(n):\n        if s[i] == 'A':\n            a += 1\n    if a > n - a:\n        print('Anton')\n    elif a < n - a:\n        print('Danik')\n    else:\n        print('Friendship')\nmain()\n", '\n# SOLUTION\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n == 1:\n        print("YES")\n        continue\n    if n == 2:\n        if p[0] == 1 and p[1] == 2:\n            print("YES")\n        else:\n            print("NO")\n        continue\n    if p[0] == 1:\n        start = 1\n        if p[1] == 2:\n            direction = 1\n        else:\n            direction = -1\n    else:\n        start = p.index(1)\n        if p[start - 1] == n:\n            direction = 1\n        else:\n            direction = -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n + 1:\n            print("NO")\n            break\n    else:\n        print("YES")\n', '#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n"""\nCreated on Wed Jun 24 22:37:51 2020\n"""\n\n# SOLUTION\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n == 1:\n        print("YES")\n        continue\n    if n == 2:\n        if p[0] == 1 and p[1] == 2:\n            print("YES")\n        else:\n            print("NO")\n        continue\n    if p[0] == 1:\n        start = 1\n        if p[1] == 2:\n            direction = 1\n        else:\n            direction = -1\n    else:\n        start = p.index(1)\n        if p[start - 1] == n:\n            direction = 1\n        else:\n            direction = -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n + 1:\n            print("NO")\n            break\n    else:\n        print("YES")\n', '\n\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    print(n)\n', '\n# SOLUTION\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n == 1:\n        print("YES")\n        continue\n    if n == 2:\n        if p[0] == 1 and p[1] == 2:\n            print("YES")\n        else:\n            print("NO")\n        continue\n    if p[0] == 1:\n        start = 1\n        if p[1] == 2:\n            direction = 1\n        else:\n            direction = -1\n    else:\n        start = p.index(1)\n        if p[start - 1] == n:\n            direction = 1\n        else:\n            direction = -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n + 1:\n            print("NO")\n            break\n    else:\n        print("YES")\n', '\ndef solve(n, p):\n    if n == 1: return True\n    if n == 2: return p == [1, 2]\n    if p[0] == 1:\n        start = 1; direction = 1 if p[1] == 2 else -1\n    else: start = p.index(1); direction = 1 if p[start - 1] == n else -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n + 1: return False\n    return True\nfor _ in range(int(input())):\n    n = int(input()); p = list(map(int, input().split()))\n    print("YES" if solve(n, p) else "NO")\n', '\n# SOLUTION\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n == 1:\n        print("YES")\n        continue\n    if n == 2:\n        if p[0] == 1 and p[1] == 2:\n            print("YES")\n        else:\n            print("NO")\n        continue\n    if p[0] == 1:\n        start = 1\n        if p[1] == 2:\n            direction = 1\n        else:\n            direction = -1\n    else:\n        start = p.index(1)\n        if p[start - 1] == n:\n            direction = 1\n        else:\n            direction = -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n + 1:\n            print("NO")\n            break\n    else:\n        print("YES")\n']
2022-04-16 08:54:51.803386 size on output set 7
