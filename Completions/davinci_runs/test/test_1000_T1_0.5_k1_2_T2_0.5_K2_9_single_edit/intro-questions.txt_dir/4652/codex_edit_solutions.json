["\n\ndef isDancePossible(n, perm):\n    if n == 1:\n        return True\n    perm = [i - 1 for i in perm]\n    for i in range(1, n):\n        if abs(perm[i] - perm[i - 1]) != 1 and abs(perm[i] - perm[i - 1]) != n - 1:\n            return False\n\n    return True\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = [int(i) for i in input().split()]\n        print(\"YES\" if isDancePossible(n, perm) else \"NO\")\n", "\ndef isDancePossible(n, perm):\n    if n == 1:\n        return True\n    perm = [i-1 for i in perm]\n    for i in range(1, n):\n        if abs(perm[i]-perm[i-1]) != 1 and abs(perm[i]-perm[i-1]) != n-1:\n            return False\n    return True\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = list(map(int, input().split()))\n        print(\"YES\" if isDancePossible(n, perm) else \"NO\")\n", "\ndef isDancePossible(n, perm):\n    pass\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = list(map(int, input().split()))\n        print(\"YES\" if isDancePossible(n, perm) else \"NO\")\n", "\n\n# solution\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n == 1:\n        print(\"YES\")\n        continue\n    if n == 2:\n        if p[0] == 1 and p[1] == 2:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n        continue\n    if p[0] == 1:\n        start = 1\n        if p[1] == 2:\n            direction = 1\n        else:\n            direction = -1\n    else:\n        start = p.index(1)\n        if p[start - 1] == n:\n            direction = 1\n        else:\n            direction = -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n + 1:\n            print(\"NO\")\n            break\n    else:\n        print(\"YES\")\n", "\n\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    print(n)\n", "\n", "\n\ndef isDancePossible(n, perm):\n    if n == 1:\n        return True\n    perm = [i - 1 for i in perm]\n    for i in range(1, n):\n        if abs(perm[i] - perm[i-1]) != 1 and abs(perm[i] - perm[i-1]) != n-1:\n            return False\n    return True\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = list(map(int, input().split()))\n        print(\"YES\" if isDancePossible(n, perm) else \"NO\")\n", "\n\ndef isDancePossible(n, perm):\n    if n == 1:\n        return True\n    perm = [i - 1 for i in perm]\n    for i in range(1, n):\n        if abs(perm[i] - perm[i - 1]) != 1 and abs(perm[i] - perm[i - 1]) != n - 1:\n            return False\n\n    return True\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = list(map(int, input().split()))\n        print(\"YES\" if isDancePossible(n, perm) else \"NO\")\n", "\n\ndef is_dance_possible(n, perm):\n    if n == 1:\n        return True\n    perm = [i-1 for i in perm]\n    for i in range(1, n):\n        if abs(perm[i]-perm[i-1]) != 1 and abs(perm[i]-perm[i-1]) != n-1:\n            return False\n    return True\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = list(map(int, input().split()))\n        print(\"YES\" if is_dance_possible(n, perm) else \"NO\")\n", "\n\ndef isDancePossible(n, perm):\n    if n == 1:\n        return True\n    perm = [i - 1 for i in perm]\n    for i in range(1, n):\n        if abs(perm[i] - perm[i - 1]) != 1 and abs(perm[i] - perm[i - 1]) != n - 1:\n            return False\n    return True\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = list(map(int, input().split()))\n        print(\"YES\" if isDancePossible(n, perm) else \"NO\")\n", "def main():\n    n = int(input())\n    s = list(input())\n    a = 0\n    for i in range(n):\n        if s[i] == 'A':\n            a += 1\n    if a > n - a:\n        print('Anton')\n    elif a < n - a:\n        print('Danik')\n    else:\n        print('Friendship')\nmain()\n", "\n\n# SOLUTION #\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n == 1:\n        print(\"YES\")\n        continue\n    if n == 2:\n        if p[0] == 1 and p[1] == 2:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n        continue\n    if p[0] == 1:\n        start = 1\n        if p[1] == 2:\n            direction = 1\n        else:\n            direction = -1\n    else:\n        start = p.index(1)\n        if p[start - 1] == n:\n            direction = 1\n        else:\n            direction = -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n + 1:\n            print(\"NO\")\n            break\n    else:\n        print(\"YES\")\n", "\ndef solve(n, p):\n    if n == 1: return True\n    if n == 2: return p == [1, 2]\n    if p[0] == 1:\n        start = 1; direction = 1 if p[1] == 2 else -1\n    else: start = p.index(1); direction = 1 if p[start - 1] == n else -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n + 1: return False\n    return True\nfor _ in range(int(input())):\n    n = int(input()); p = list(map(int, input().split()))\n    print(\"YES\" if solve(n, p) else \"NO\")\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Wed Jun 24 22:37:51 2020\n\"\"\"\n\n# SOLUTION\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n == 1:\n        print(\"YES\")\n        continue\n    if n == 2:\n        if p[0] == 1 and p[1] == 2:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n        continue\n    if p[0] == 1:\n        start = 1\n        if p[1] == 2:\n            direction = 1\n        else:\n            direction = -1\n    else:\n        start = p.index(1)\n        if p[start - 1] == n:\n            direction = 1\n        else:\n            direction = -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n + 1:\n            print(\"NO\")\n            break\n    else:\n        print(\"YES\")\n", "\n# SOLUTION\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    p = list(map(int, input().split()))\n    if n == 1:\n        print(\"YES\")\n        continue\n    if n == 2:\n        if p[0] == 1 and p[1] == 2:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n        continue\n    if p[0] == 1:\n        start = 1\n        if p[1] == 2:\n            direction = 1\n        else:\n            direction = -1\n    else:\n        start = p.index(1)\n        if p[start - 1] == n:\n            direction = 1\n        else:\n            direction = -1\n    for i in range(n):\n        if p[(start + direction * i) % n] != (i + 1) % n + 1:\n            print(\"NO\")\n            break\n    else:\n        print(\"YES\")\n", "\n\ndef isDancePossible(n, perm):\n    if n == 1:\n        return True\n    perm = [i - 1 for i in perm]\n    for i in range(1, n):\n        if abs(perm[i] - perm[i-1]) != 1 and abs(perm[i] - perm[i-1]) != n-1:\n            return False\n\n    return True\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        n = int(input())\n        perm = list(map(int, input().split()))\n        print(\"YES\" if isDancePossible(n, perm) else \"NO\")\n"]