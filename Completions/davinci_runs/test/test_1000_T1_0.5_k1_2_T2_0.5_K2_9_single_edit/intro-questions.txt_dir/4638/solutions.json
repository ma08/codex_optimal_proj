["n, c = list(map(int, input().split()))\na = [int(ai) for ai in input().split()]\nb = [int(bi) for bi in input().split()]\n\ndpa, dpb = [0] * n, [0] * n\ndpa[1], dpb[1] = a[0], c + b[0]\nfor i in range(1, n - 1):\n    dpa[i + 1], dpb[i + 1] = min(dpa[i], dpb[i]) + a[i], min(dpa[i] + c, dpb[i]) + b[i]\n\nprint(*(min(dpa[i], dpb[i]) for i in range(n)))\n", "n, c = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ndp = [[0 for i in range(2)] for i in range(n + 1)]\ndp[0][0] = 0\ndp[0][1] = c\nprint(min(dp[0][0], dp[0][1]), end=\" \")\nfor i in range(1, n):\n    dp[i][0] = min(dp[i - 1][0] + a[i - 1], dp[i - 1][1] + a[i - 1])\n    dp[i][1] = min(dp[i - 1][0] + c + b[i - 1], dp[i - 1][1] + b[i - 1])\n    print(min(dp[i][0], dp[i][1]), end=\" \")", "import sys\ndef I():\n    return sys.stdin.readline().rstrip()\n\nn, c = list(map( int, I().split() ))\na = list( map( int, I().split() ) )\nb = list( map( int, I().split() ) )\n\ne = [ 0 ] + [ 1003 * n ] * ( n - 1 )\ns = [ 0 ] + [ 1003 * n ] * ( n - 1 )\n\nfor i in range( 0, n - 1 ):\n    e[ i + 1 ] = min( c + s[ i ] + b[ i ], e[ i ] + b[ i ] )\n    s[ i + 1 ] = min( s[ i ], e[ i ] ) + a[ i ]\n    if i == 0:\n        e[ i + 1 ] += c\n\nans = [ min( i, j ) for i, j in zip( e, s ) ]\nprint( *ans )\n", "n, c = list(map(int, input().split()))\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nsb = [0]\nfor i in B:\n    sb.append(sb[-1] + i)\nans = [0]\nhemin = 0\nfor i in range(1, n):\n    tw = min(ans[i - 1] + A[i - 1], hemin + c + sb[i])\n    ans.append(tw)\n    hemin = min(hemin, ans[i] - sb[i])\nprint(*ans)\n", "n,c=list(map(int,input().split()))\naa=list(map(int,input().split()))\nbb=list(map(int,input().split()))\ndp=[[0,c] for i in range(n)]\nfor i in range(1,n):\n    dp[i][0]=min(dp[i-1][0]+aa[i-1],dp[i-1][1]+aa[i-1])\n    dp[i][1]=min(dp[i-1][0]+c+bb[i-1],dp[i-1][1]+bb[i-1])\nprint(*[min(i) for i in dp])\n", "I = lambda: list(map(int, input().split()))\n\nn, c = I()\na = I()\nb = I()\ndp = [[0, 0] for i in range(300000)]\ndp[1][0] = a[0]\ndp[1][1] = c + b[0]\n\nfor i in range(2, n):\n    dp[i][0] = min(dp[i-1][0] + a[i-1], dp[i-1][1] + a[i-1])\n    dp[i][1] = min(dp[i-1][0] + c + b[i-1], dp[i-1][1] + b[i-1])\nfor i in range(n):\n    print(min(dp[i][0], dp[i][1]), end = ' ')\n", "n, c = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndp = [[0]*2 for i in range(n)]\ndp[0][1] = c\nfor i in range(n-1):\n    dp[i+1][0] = min(dp[i][0] + a[i], dp[i][1] + a[i])\n    dp[i+1][1] = min(dp[i][0] + b[i] + c, dp[i][1] + b[i])\nans = [0]*n\nfor i in range(n):\n    ans[i] = min(dp[i])\nprint(*ans)", "n, c = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ndp = [[0, 0] for i in range(n)]\ndp[0] = [0, c]\nfor i in range(1, n):\n    ans1 = dp[i - 1][0] + a[i - 1]\n    ans2 = dp[i - 1][1] + b[i - 1]\n    dp[i][1] = min(ans2, dp[i - 1][0] + c + b[i - 1])\n    dp[i][0] = min(ans1, dp[i][1])\nfor elem in dp:\n    print(min(elem[0], elem[1]), end=\" \")", "import sys\ninput = sys.stdin.readline\n\nn,c=list(map(int,input().split()))\n\nA=list(map(int,input().split()))\nB=list(map(int,input().split()))\n\nTIME0=[0]*n\nTIME1=[0]*n\n\nTIME1[0]=c\n\nfor i in range(1,n):\n    TIME0[i]=min(TIME0[i-1],TIME1[i-1])+A[i-1]\n    TIME1[i]=min(TIME0[i-1]+c+B[i-1],TIME1[i-1]+B[i-1])\n\nANS=[min(TIME0[i],TIME1[i]) for i in range(n)]\nprint(*ANS)\n", "\nn, c = map(int,input().split())\nA = list(map(int,input().split()))\nB = list(map(int,input().split()))\n\nT = [[0,0] for i in range(n)]\nT[0][1] = c/2\nfor i in range(1, n):\n    T[i][0] = min(T[i-1][0]+A[i-1], T[i-1][1]+B[i-1]+c/2)\n    T[i][1] = min(T[i-1][0]+A[i-1]+c/2, T[i-1][1]+B[i-1])\n\nprint(\" \".join([str(round(i[0])) for i in T]))", "n, c=map(int,input().split())\na = [0]+[int(i) for i in input().split()]\nb = [0]+[int(i) for i in input().split()]\np = [0] * n\nl = [0] * n\nt = [0] * n\nfor i in range(1,n):\n    p[i] = a[i] + t[i-1]\n    l[i] = b[i] + t[i-1] - (c if t[i-1] == l[i-1] + c else 0)\n    l[i] = min(l[i],l[i-1]+b[i])\n    t[i] = min(l[i]+c, p[i])\nfor i in t:\n    print(i,end=' ')\n", "n, c = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nans = 0\n\nw = [[0 for i in range(2)] for i in range(n)]\n\nw[0][1] = c\nfor i in range(1, n):\n    w[i][0] = min(w[i - 1][0] + a[i - 1],\n                  w[i - 1][1] + b[i - 1])\n    w[i][1] = min(w[i - 1][1] + b[i - 1],\n                  w[i][0] + c)\n\nfor i in range(n):\n    print(min(w[i]), end=' ', flush=False)\nprint()    ", "# n: floors\n# c: overhead\nn, c = map(int, input().split())\na = [0] + list(map(int, input().split())) # stairs time\nb = [0] + list(map(int, input().split())) # elevator time\n\ndp = [[0] * 2 for _ in range(n + 1)]\ndp[1][0] = 0 # Base case\ndp[1][1] = c # Base case\nfor i in range(2, n + 1):\n    dp[i][0] = min(dp[i - 1][0], dp[i - 1][1]) + a[i - 1]\n    dp[i][1] = min(dp[i - 1][0] + c, dp[i - 1][1]) + b[i - 1]\n\nprint (*[min(u) for u in dp][1:])", "\"\"\"\nNTC here\n\"\"\"\nfrom sys import stdin, setrecursionlimit\nsetrecursionlimit(10**7)\n\n\ndef iin(): return int(stdin.readline())\n \n \ndef lin(): return list(map(int, stdin.readline().split()))\n\n\n# range = xrange\n# input = raw_input\n\n\ndef main():\n    n,c=lin()\n    s=lin()\n    e=lin()\n    sol=[[0,0] for i in range(n)]\n    sol[0]=[c+e[0],s[0]]\n    for i in range(1,n-1):\n        sol[i]=[e[i]+min(sol[i-1][0], c+sol[i-1][1]),min(sol[i-1][0],sol[i-1][1])+s[i]]\n    ans=[0]+[min(sol[i]) for i in range(n-1)]\n    print(*ans)\n\n        \n\n\n\n\n\n\n\nmain()\n# try:\n#     main()\n# except Exception as e: print(e)\n", "from math import *\n\nn,k = map(int, input().split())\n\ndp = [[float(\"inf\"),float(\"inf\")] for i in range( 2*10**5 + 5) ]\ndp[0] = [0,k]\nesc = list(map(int,input().split()))\nasc = list(map(int,input().split()))\n\nprint(0, end = \" \")\n\nfor i in range(1, n):\n    dp[i][0] = min(dp[i-1]) + esc[i-1]\n    dp[i][1] = min(dp[i-1][1], dp[i-1][0] + k) + asc[i-1]\n\n    print(min(dp[i]), end = \" \")", "import sys\ninput = sys.stdin.readline\nn, c = list(map(int, input().strip().split()))\n\na = list(map(int, input().strip().split()))\nb = list(map(int, input().strip().split()))\n\nstairs = [0 for _ in range(n)]\nelevator = [0 for _ in range(n)]\nelevator[0] = c\n\nfor i in range(1, n):\n    stairs[i] = min(elevator[i-1], stairs[i-1])+a[i-1]\n    elevator[i] = min(elevator[i-1], stairs[i-1]+c)+b[i-1]\nprint(' '.join(str(min(elevator[i], stairs[i])) for i in range(n)))\n\n", "a = input('').split(' ')\nn = int(a[0])\nc = int(a[1])\nt = []\nfor i in range(n):\n    t.append([0,10**5])\na = list(map(int,input('').split(' ')))\nb = list(map(int,input('').split(' ')))\nprint(0,end = ' ')\nfor i in range(1,n,1):\n    t[i][0] = min(t[i-1][1],t[i-1][0]) + a[i-1]\n    t[i][1] = min(t[i-1][0]+c,t[i-1][1]) + b[i-1]\n    #print(t[i-1],c,b[i-1])\n    #print(t[i])\n    print(min(t[i][0],t[i][1]), end = ' ')", "\nn,c = list(map(int,input().split()))\n\nlis = []\n\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\nasum = 0\nbsum = c\n\nfor i in range(n):\n\n    lis.append (min(asum,bsum))\n\n    if i == n-1:\n        break\n\n    oasum = asum\n\n    asum = min(asum + a[i] , bsum + a[i])\n\n    bsum = min(oasum + b[i] + c , bsum + b[i])\n\nprint(\" \".join(map(str,lis)))\n", "n, c = map(int, input().split())\n\nS = list(map(int, input().split()))\nE = list(map(int, input().split()))\n\nlastS = S[0]\nlastE = E[0] + c\nprint('0 ',end='')\nprint(min(lastS, lastE), end= ' ')\n\nfor i in range(1, n - 1):\n    curS = min(lastS + S[i], lastE + S[i])\n    curE = min(lastS + c + E[i], lastE + E[i])\n    print(min(curS, curE), end=' ')\n    lastS = curS\n    lastE = curE", "#!/usr/bin/env python3\nimport sys\nfrom math import inf\n\n#lines = stdin.readlines()\ndef rint():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef input():\n    return sys.stdin.readline().rstrip('\\n')\n\ndef oint():\n    return int(input())\n\n\nn, c = rint()\n\na = list(rint())\nb = list(rint())\n\ne = 0\nans = [0]\ne = [0]*(n+2)\nmina = [inf]*(n+2)\nmine = [inf]*(n+2)\nmina[0] = a[0]\nmine[0] = b[0] + c\nfor i in range(1, n-1):\n    mine[i] = b[i] + min(mine[i-1], mina[i-1] + c, mine[i-2]  + mine[i-1])\n    mina[i] = a[i] + min(mina[i-1], mine[i-1])\n\nfor i in range(n-1):\n    ans.append(min(mine[i], mina[i]))\n\nprint(*ans)\n\n\n\n", "n, c = list(map(int, input().split()))\n\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\n\nr = [0]\np = [0]\nfor i in range(n-1):\n    x1 = r[-1] + a[i]\n\n    y1 = p[-1] + b[i]\n    if i == 0:\n        y1 += c\n    p.append(y1)\n\n    #print(\"x1:\", x1)\n    #print(\"y1:\", y1)\n\n    if r[-1] < p[-1]:\n        z1 = r[-1] + b[i] + c\n        #print(\"z1\", z1)\n        if z1 < y1:\n            y1 = z1\n            p[-1] = z1\n    #print(\"----\")\n    if x1 < y1:\n        r.append(x1)\n    else:\n        r.append(y1)\n\nprint(*r)\n# print(p)\n\n", "n, c = map(int, input().split())\nwalk = list(map(int, input().split()))\nlift = list(map(int, input().split()))\ndpl = [0] * n\ndpw = [0] * n\ndpl[0] = c\nprint(0, end=\" \")\nfor i in range(1, n):\n    dpl[i] = min(dpw[i - 1] + c, dpl[i - 1]) + lift[i - 1]\n    dpw[i] = min(dpw[i - 1], dpl[i - 1]) + walk[i - 1]\n    print(min(dpl[i], dpw[i]), end=\" \")\n", "# -*- coding: utf-8 -*-\n\nimport sys\n\nline_count = 0\nfor line in sys.stdin.readlines():\n    inputs = line.split()\n    if line_count == 0:\n        n = int(inputs[0])\n        c = int(inputs[1])\n    elif line_count == 1:\n        a = []\n        for i in range(n - 1):\n            a.append(int(inputs[i]))\n    elif line_count == 2:\n        b = []\n        for i in range(n - 1):\n            b.append(int(inputs[i]))\n    if line_count == 2:\n        break\n    line_count += 1\n\nby_stair = [0]\nby_elev = [c]\nprint(0, end = \" \")\n\nfor i in range(1, n):\n    pos_stair = min(by_stair[i - 1] + a[i - 1], by_elev[i - 1] + a[i - 1])\n    by_stair.append(pos_stair)\n    pos_elev = min(by_stair[i - 1] + c + b[i - 1], by_elev[i - 1] + b[i - 1])\n    by_elev.append(pos_elev)\n    print(min(pos_stair, pos_elev), end = \" \")\n", "n,c=map(int,input().split())\nl1=list(map(int,input().split()))\nl2=list(map(int,input().split()))\ndp=[[0]*2 for _ in range(n+1)]\ndp[1][1]=c\nfor i in range(2,n+1):\n    dp[i][0]=min(dp[i-1][0],dp[i-1][1])+l1[i-2]\n    dp[i][1]=min(dp[i-1][0]+l2[i-2]+c,dp[i-1][1]+l2[i-2])\nfor i in range(1,n+1):\n    print(min(dp[i]),end=\" \")\n    ", "n, c = [int(x) for x in input().split()]\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ndpst = [0] * (n + 1)\ndplift = [0] * (n + 1)\ndpst[2] = a[0]\ndplift[2] = c + b[0]\nfor i in range(3, n + 1):\n    dpst[i] = a[i - 2] + min(dpst[i - 1], dplift[i - 1])\n    dplift[i] = b[i - 2] + min(c + dpst[i - 1], dplift[i - 1])\n\nfor i in range(1, n + 1): print(min(dpst[i], dplift[i]), end = \" \")"]