["\nimport sys\n\ndef main():\n    n, a, b = map(int, sys.stdin.readline().split())\n    ans = 0\n\n    for i in range(1, n+1):\n        s = str(i)\n        digit_sum = 0\n        for c in s:\n            digit_sum += int(c)\n\n        if a <= digit_sum <= b:\n            ans += i\n\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nn, a, b = map(int, input().split())\n\ndef sum_of_digits(n):\n    return sum([int(i) for i in str(n)])\n\nres = 0\nfor i in range(1, n+1):\n    if a <= sum_of_digits(i) <= b:\n        res += i\nprint(res)\n", "import sys\nimport math\nfrom itertools import permutations\nfrom itertools import combinations\nfrom itertools import product\nfrom collections import deque\nfrom collections import Counter\n\ndef LI(): return list(map(int, sys.stdin.buffer.readline().split()))\ndef I(): return int(sys.stdin.buffer.readline())\ndef LS(): return sys.stdin.buffer.readline().rstrip().decode('utf-8').split()\ndef S(): return sys.stdin.buffer.readline().rstrip().decode('utf-8')\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef LSR(n): return [LS() for i in range(n)]\ndef SRL(n): return [list(S()) for i in range(n)]\ndef MSRL(n): return [[int(j) for j in list(S())] for i in range(n)]\n\n\nsys.setrecursionlimit(1000000)\n\n\nn, a, b = map(int, input().split())\n\ndef sum_of_digits(n):\n    return sum([int(i) for i in str(n)])\n\nres = 0\nfor i in range(1, n+1):\n    if a <= sum_of_digits(i) <= b:\n        res += i\n\nprint(res)\n", "import sys\nsys.setrecursionlimit(10 ** 7)\n\nn, a, b = map(int, input().split())\n\ndef sum_of_digits(n):\n    return sum([int(i) for i in str(n)])\n\nres = 0\nfor i in range(1, n+1):\n    if a <= sum_of_digits(i) <= b:\n        res += i\n\nprint(res)\n", "\nn, a, b = map(int, input().split())\n\n\ndef sum_of_digits(n): return sum([int(i) for i in str(n)])\n\n\nres = 0\nfor i in range(1, n+1):\n    if a <= sum_of_digits(i) <= b:\n        res += i\n\nprint(res)\n", "\n\n\nimport sys\n\ndef main():\n    n, a, b = map(int, sys.stdin.readline().split())\n    ans = 0\n\n    for i in range(1, n+1):\n        s = str(i)\n        digit_sum = 0\n        for c in s:\n            digit_sum += int(c)\n\n\n        if a <= digit_sum <= b:\n            ans += i\n\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    n, a, b = map(int, sys.stdin.readline().split())\n    ans = 0\n\n    for i in range(1, n + 1):\n        s = str(i)\n        digit_sum = 0\n        for c in s:\n            digit_sum += int(c)\n\n        if a <= digit_sum <= b:\n            ans += i\n\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n", "\nn, a, b = map(int, input().split())\n\nres = 0\nfor i in range(1, n+1):\n    if a <= sum([int(x) for x in str(i)]) <= b:\n        res += i\n\nprint(res)\n", "\nimport sys\n\ndef main():\n\tn, a, b = map(int, sys.stdin.readline().split())\n\tans = 0\n\n\tfor i in range(1, n+1):\n\t\ts = str(i)\n\t\tdigit_sum = 0\n\t\tfor c in s:\n\t\t\tdigit_sum += int(c)\n\n\t\tif a <= digit_sum <= b:\n\t\t\tans += i\n\n\tprint(ans)\n\nif __name__ == \"__main__\":\n\tmain()\n", "\n\na, b = map(int, input().split())\n\ndef sum_of_digits(x):\n    return sum([int(i) for i in str(x)])\n\nres = 0\nfor i in range(1, 10000):\n    if a <= sum_of_digits(i) <= b:\n        res += i\n\nprint(res)\n", "# coding: utf-8\n# Your code here!\n\nn, a, b = map(int, input().split())\n\ndef sum_of_digits(n):\n    return sum([int(i) for i in str(n)])\n\nres = 0\nfor i in range(1, n+1):\n    if a <= sum_of_digits(i) <= b:\n        res += i\n\nprint(res)\n", "\nimport sys\n\ndef main():\n    n, a, b = map(int, sys.stdin.readline().split())\n    ans = 0\n\n    for i in range(1, n+1):\n        s = str(i)  # int -> str\n        digit_sum = 0\n        for c in s:\n            digit_sum += int(c)  # str -> int\n\n        if a <= digit_sum <= b:\n            ans += i\n\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n", "\nn, a, b = map(int, input().split())\n\ndef sum_of_digits(n):\n    return sum([int(i) for i in str(n)])\n\nres = 0\nfor i in range(1, n+1):\n    if a <= sum_of_digits(i) <= b:\n        res += i\n\nprint(res)\n"]