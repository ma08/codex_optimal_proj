["\n#\nfrom collections import namedtuple\n\nN = int(input())\ncols = input().split()\n\nStudent = namedtuple('Student', cols)\nstudents = [Student(*input().split()) for _ in range(N)]\n\nprint(\"{:.2f}\".format(sum(float(s.MARKS) for s in students) / N))\n", "\nfrom collections import namedtuple\n\nN = int(input())\ncols = input().split()\nStudent = namedtuple('Student', cols)\nstudents = [Student(*input().split()) for _ in range(N)]\n\nprint(\"{:.2f}\".format(sum(float(s.MARKS) for s in students) / N))\n", "\n\nfrom __future__ import print_function\nfrom collections import namedtuple\n\nN = int(input())\nmarks = namedtuple('marks', input())\n\ntotal = 0.0\nfor i in range(N):\n    total += int(marks(*input().split()).MARKS)\n\nprint(total / N)\n", "\nfrom collections import namedtuple\n\nn = int(input())\ncolumns = input().split()\n\nstudent = namedtuple('student', columns)\nstudents = [student(*input().split()) for _ in range(n)]\n\nprint(\"{:.2f}\".format(sum(float(s.MARKS) for s in students) / n))\n", "\nprint(\"Hello World\")\n", "\n\nfrom collections import namedtuple\n\nN = int(input())\ncols = input().split()\n\nStudent = namedtuple('Student', cols)\nstudents = [Student(*input().split()) for _ in range(N)] \n\nprint(\"{:.2f}\".format(sum(float(s.MARKS) for s in students) / N))\n", "\nfrom __future__ import print_function\n\nfrom collections import namedtuple\n\nN = int(input())\nmarks = namedtuple('marks',input())\n\ntotal = 0.0\nfor i in range(N):\n    total += int(marks(*input().split()).MARKS)\n\nprint(total/N)\n", "from collections import namedtuple\n\nN = int(input())\ncols = input().split()\n\nStudent = namedtuple('Student', cols)\nstudents = [Student(*input().split()) for _ in range(N)]\n\nprint(\"{:.2f}\".format(sum(float(s.MARKS) for s in students) / N))\n", "\n\nfrom collections import namedtuple\n\nn = int(input())\ncols = input().split()\n\nStudent = namedtuple('Student', cols)\nstudents = [Student(*input().split()) for _ in range(n)]\n\nprint(\"{:.2f}\".format(sum(float(s.MARKS) for s in students) / n))\n", "\n", "\nfrom collections import namedtuple\n\nN = int(input())\ncols = input().split()\n\nStudent = namedtuple('Student', cols)\nstudents = [Student(*input().split()) for _ in range(N)]\n\nprint(\"{:.2f}\".format(sum(float(s.MARKS) for s in students) / N))\n", "\nfrom __future__ import print_function\nfrom collections import namedtuple\n\nN = int(input())\nmarks = namedtuple('marks', input())\n\ntotal = 0.0\nfor i in range(N):\n    total += int(marks(*input().split()).MARKS)\n\nprint(total / N)\n", "\nfrom __future__ import print_function\nfrom collections import namedtuple\n\nN = int(input())\nmarks = namedtuple('marks', input())\n\ntotal = 0.0\nfor i in range(N):\n    total += int(marks(*input().split()).MARKS)\n\nprint(total/N)\n", "\n\nfrom __future__ import print_function\nfrom collections import namedtuple\n\nN = int(input())\nmarks = namedtuple('marks', input())\n\ntotal = 0.0\nfor i in range(N):\n    total += int(marks(*input().split()).MARKS) # marks(*input().split()).MARKS\n\nprint(total/N) # total/N\n"]