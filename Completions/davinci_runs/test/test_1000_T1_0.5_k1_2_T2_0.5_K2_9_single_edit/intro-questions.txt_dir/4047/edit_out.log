2022-04-16 04:30:55.023731 num operations 1
2022-04-16 04:30:55.023748 size on input set 1
2022-04-16 04:31:03.803534 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    x.sort()\n    if n % 2 == 0:\n        print(x[n//2] - x[n//2 - 1])\n    else:\n        print(0)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    x.sort()\n    if n % 2 == 0:\n        print(x[n//2] - x[n//2 - 1])\n    else:\n        print(0)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\n\nimport sys\n\ndef main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    x.sort()\n    if n % 2 == 0:\n        print(x[n//2] - x[n//2 - 1])\n    else:\n        print(0)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "import sys\n\ndef main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    x.sort()\n    if n % 2 == 0:\n        print(x[n//2] - x[n//2 - 1])\n    else:\n        print(0)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if n % 2 == 0:\n        print(a[n//2] - a[n//2 - 1])\n    else:\n        print(0)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "import sys\n\n\ndef main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    x.sort()\n    if n % 2 == 0:\n        print(x[n//2] - x[n//2 - 1])\n    else:\n        print(0)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    x.sort() # sort\n    if n % 2 == 0: # even\n        print(x[n//2] - x[n//2 - 1]) # diff between 2 middle numbers\n    else:\n        print(0)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\n\nimport sys\n\ndef main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    x.sort()\n    if n % 2 == 0:\n        print(x[n//2] - x[n//2 - 1])\n    else:\n        print(0)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\ndef main():\n    n = int(input())\n    s = input()\n    t = input()\n    ans = 0\n    for i in range(n):\n        if s[i] != t[i]:\n            ans += 1\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650083455,
  "object": "edit"
}
2022-04-16 04:31:03.803806 fix syntax errors 9 ['import sys\n\ndef main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    x.sort()\n    if n % 2 == 0:\n        print(x[n//2] - x[n//2 - 1])\n    else:\n        print(0)\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    x.sort()\n    if n % 2 == 0:\n        print(x[n//2] - x[n//2 - 1])\n    else:\n        print(0)\n\nif __name__ == "__main__":\n    main()\n', '\n\n\nimport sys\n\ndef main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    x.sort()\n    if n % 2 == 0:\n        print(x[n//2] - x[n//2 - 1])\n    else:\n        print(0)\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    x.sort()\n    if n % 2 == 0:\n        print(x[n//2] - x[n//2 - 1])\n    else:\n        print(0)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if n % 2 == 0:\n        print(a[n//2] - a[n//2 - 1])\n    else:\n        print(0)\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\n\ndef main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    x.sort()\n    if n % 2 == 0:\n        print(x[n//2] - x[n//2 - 1])\n    else:\n        print(0)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    x.sort() # sort\n    if n % 2 == 0: # even\n        print(x[n//2] - x[n//2 - 1]) # diff between 2 middle numbers\n    else:\n        print(0)\n\nif __name__ == "__main__":\n    main()\n', '\n\n\nimport sys\n\ndef main():\n    n = int(input())\n    x = list(map(int, input().split()))\n    x.sort()\n    if n % 2 == 0:\n        print(x[n//2] - x[n//2 - 1])\n    else:\n        print(0)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    s = input()\n    t = input()\n    ans = 0\n    for i in range(n):\n        if s[i] != t[i]:\n            ans += 1\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 04:31:03.803846 size on output set 6
2022-04-16 04:31:03.803860 num operations 1
2022-04-16 04:31:03.803865 size on input set 1
2022-04-16 04:31:16.421342 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\nx = list(map(int, input().split()))\n\nx.sort()\n\nmin_cost = float('inf')\nfor i in range(n):\n    cost = 0\n    for j in range(n):\n        cost += abs(x[j] - x[i])\n    min_cost = min(min_cost, cost)\n\nprint(min_cost)\n"
    },
    {
      "index": 1,
      "text": "import sys\nsys.setrecursionlimit(10**7)\nINTMAX = 9223372036854775807\nINTMIN = -9223372036854775808\nDVSR = 1000000007\ndef POW(x, y): return pow(x, y, DVSR)\ndef INV(x, m=DVSR): return pow(x, m - 2, m)\ndef DIV(x, y, m=DVSR): return (x * INV(y, m)) % m\ndef LI(): return [int(x) for x in input().split()]\ndef LF(): return [float(x) for x in input().split()]\ndef LS(): return input().split()\ndef II(): return int(input())\n\n\n\n\nn = int(input())\nx = list(map(int, input().split()))\n\n# x = [1, 2, 3]\n# n = 3\n\nx.sort()\n\nmin_cost = float('inf')\nfor i in range(n):\n    cost = 0  # \u521d\u671f\u5316\n    for j in range(n):  # \u5404\u70b9\u3078\u306e\u79fb\u52d5\u8ddd\u96e2\u3092\u8a08\u7b97\n        cost += abs(x[j] - x[i])  # \u521d\u671f\u70b9\u304b\u3089\u306e\u79fb\u52d5\u8ddd\u96e2\u3092\u8a08\u7b97\n    min_cost = min(min_cost, cost)  # \u6700\u5c0f\u5024\u3092\u66f4\u65b0\n\nprint(min_cost)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\nx = list(map(int, input().split()))\n\n# x = [1, 2, 3]\n# n = 3\nx.sort()\n\nmin_cost = float('inf')\nfor i in range(n):\n    cost = 0\n    for j in range(n):\n        cost += abs(x[j] - x[i])\n    min_cost = min(min_cost, cost)\n\nprint(min_cost)\n"
    },
    {
      "index": 3,
      "text": "\nn = int(input())\nx = list(map(int, input().split()))\n\n# x = [1, 2, 3]\n# n = 3\n\nx.sort()\n\nmin_cost = float('inf')\nfor i in range(n):\n    cost = 0\n    for j in range(n):\n        cost += abs(x[j] - x[i])\n    min_cost = min(min_cost, cost)\n\nprint(min_cost)\n"
    },
    {
      "index": 4,
      "text": "\nn = int(input())\nx = list(map(int, input().split()))\n\nx.sort()\n\nmin_cost = float('inf')\nfor i in range(n):\n    cost = 0\n    for j in range(n):\n        cost += abs(x[j] - x[i])\n    min_cost = min(min_cost, cost)\n\nprint(min_cost)\n"
    },
    {
      "index": 5,
      "text": "\n\nn = int(input())\nx = list(map(int, input().split()))\n\n# x = [1, 2, 3]\n# n = 3\n\nx.sort()\n\nmin_cost = float('inf')\nfor i in range(n):\n    cost = 0\n    for j in range(n):\n        cost += abs(x[j] - x[i])\n    min_cost = min(min_cost, cost)\n\n\n\n# # n = int(input())\n# # x = list(map(int, input().split()))\n\n# x = [1, 2, 3]\n# n = 3\n\n# x.sort()\n\n# min_cost = float('inf')\n# for i in range(n):\n#     cost = 0\n#     for j in range(n):\n#         cost += abs(x[j] - x[i])\n#     min_cost = min(min_cost, cost)\n\n# print(min_cost)\nprint(min_cost)\n"
    },
    {
      "index": 6,
      "text": "\nn = int(input())\nx = list(map(int, input().split()))\n\n# x = [1, 2, 3]\n# n = 3\n\nx.sort()\n\nmin_cost = float('inf')\nfor i in range(n):\n    cost = 0  # cost = 0\n    for j in range(n):\n        cost += abs(x[j] - x[i])\n    min_cost = min(min_cost, cost)\n\nprint(min_cost)\n"
    },
    {
      "index": 7,
      "text": "\nn = int(input())\nx = list(map(int, input().split()))\n\n# x = [1, 2, 3]\n# n = 3\n\nx.sort()\n\nmin_cost = float('inf')\nfor i in range(n):\n    cost = 0\n    for j in range(n):\n        cost += abs(x[j] - x[i])\n    min_cost = min(min_cost, cost)\n\nprint(min_cost)\n"
    },
    {
      "index": 8,
      "text": "\n\nn = int(input())\nx = list(map(int, input().split()))\n\nx = [1, 2, 3]\nn = 3\n\nx.sort()\n\nmin_cost = float('inf')\nfor i in range(n):\n    cost = 0\n    for j in range(n):\n        cost += abs(x[j] - x[i])\n    min_cost = min(min_cost, cost)\n\nprint(min_cost)\n"
    }
  ],
  "created": 1650083463,
  "object": "edit"
}
2022-04-16 04:31:16.421681 fix syntax errors 9 ["\n\nn = int(input())\nx = list(map(int, input().split()))\n\nx.sort()\n\nmin_cost = float('inf')\nfor i in range(n):\n    cost = 0\n    for j in range(n):\n        cost += abs(x[j] - x[i])\n    min_cost = min(min_cost, cost)\n\nprint(min_cost)\n", "import sys\nsys.setrecursionlimit(10**7)\nINTMAX = 9223372036854775807\nINTMIN = -9223372036854775808\nDVSR = 1000000007\ndef POW(x, y): return pow(x, y, DVSR)\ndef INV(x, m=DVSR): return pow(x, m - 2, m)\ndef DIV(x, y, m=DVSR): return (x * INV(y, m)) % m\ndef LI(): return [int(x) for x in input().split()]\ndef LF(): return [float(x) for x in input().split()]\ndef LS(): return input().split()\ndef II(): return int(input())\n\n\n\n\nn = int(input())\nx = list(map(int, input().split()))\n\n# x = [1, 2, 3]\n# n = 3\n\nx.sort()\n\nmin_cost = float('inf')\nfor i in range(n):\n    cost = 0  # 初期化\n    for j in range(n):  # 各点への移動距離を計算\n        cost += abs(x[j] - x[i])  # 初期点からの移動距離を計算\n    min_cost = min(min_cost, cost)  # 最小値を更新\n\nprint(min_cost)\n", "\n\nn = int(input())\nx = list(map(int, input().split()))\n\n# x = [1, 2, 3]\n# n = 3\nx.sort()\n\nmin_cost = float('inf')\nfor i in range(n):\n    cost = 0\n    for j in range(n):\n        cost += abs(x[j] - x[i])\n    min_cost = min(min_cost, cost)\n\nprint(min_cost)\n", "\nn = int(input())\nx = list(map(int, input().split()))\n\n# x = [1, 2, 3]\n# n = 3\n\nx.sort()\n\nmin_cost = float('inf')\nfor i in range(n):\n    cost = 0\n    for j in range(n):\n        cost += abs(x[j] - x[i])\n    min_cost = min(min_cost, cost)\n\nprint(min_cost)\n", "\nn = int(input())\nx = list(map(int, input().split()))\n\nx.sort()\n\nmin_cost = float('inf')\nfor i in range(n):\n    cost = 0\n    for j in range(n):\n        cost += abs(x[j] - x[i])\n    min_cost = min(min_cost, cost)\n\nprint(min_cost)\n", "\n\nn = int(input())\nx = list(map(int, input().split()))\n\n# x = [1, 2, 3]\n# n = 3\n\nx.sort()\n\nmin_cost = float('inf')\nfor i in range(n):\n    cost = 0\n    for j in range(n):\n        cost += abs(x[j] - x[i])\n    min_cost = min(min_cost, cost)\n\n\n\n# # n = int(input())\n# # x = list(map(int, input().split()))\n\n# x = [1, 2, 3]\n# n = 3\n\n# x.sort()\n\n# min_cost = float('inf')\n# for i in range(n):\n#     cost = 0\n#     for j in range(n):\n#         cost += abs(x[j] - x[i])\n#     min_cost = min(min_cost, cost)\n\n# print(min_cost)\nprint(min_cost)\n", "\nn = int(input())\nx = list(map(int, input().split()))\n\n# x = [1, 2, 3]\n# n = 3\n\nx.sort()\n\nmin_cost = float('inf')\nfor i in range(n):\n    cost = 0  # cost = 0\n    for j in range(n):\n        cost += abs(x[j] - x[i])\n    min_cost = min(min_cost, cost)\n\nprint(min_cost)\n", "\nn = int(input())\nx = list(map(int, input().split()))\n\n# x = [1, 2, 3]\n# n = 3\n\nx.sort()\n\nmin_cost = float('inf')\nfor i in range(n):\n    cost = 0\n    for j in range(n):\n        cost += abs(x[j] - x[i])\n    min_cost = min(min_cost, cost)\n\nprint(min_cost)\n", "\n\nn = int(input())\nx = list(map(int, input().split()))\n\nx = [1, 2, 3]\nn = 3\n\nx.sort()\n\nmin_cost = float('inf')\nfor i in range(n):\n    cost = 0\n    for j in range(n):\n        cost += abs(x[j] - x[i])\n    min_cost = min(min_cost, cost)\n\nprint(min_cost)\n"]
2022-04-16 04:31:16.421741 size on output set 8
