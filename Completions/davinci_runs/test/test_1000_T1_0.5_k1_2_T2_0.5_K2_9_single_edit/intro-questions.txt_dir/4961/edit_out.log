2022-04-16 15:07:08.542551 num operations 1
2022-04-16 15:07:08.542569 size on input set 1
2022-04-16 15:07:23.998352 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nr, c = map(int, input().split())\n\nseats = []\nfor _ in range(r):\n    line = input()\n    seats.append(line)\n\n# print(seats)\n\ncount = 0\nfor i in range(r):\n    for j in range(c):\n        if seats[i][j] == 'o':\n            if j > 0 and seats[i][j-1] == 'o':\n                count += 1\n            if j < c-1 and seats[i][j+1] == 'o':\n                count += 1\n            if i > 0 and seats[i-1][j] == 'o':\n                count += 1\n            if i < r-1 and seats[i+1][j] == 'o':\n                count += 1\n            if i > 0 and j > 0 and seats[i-1][j-1] == 'o':\n                count += 1\n            if i < r-1 and j < s-1 and seats[i+1][j+1] == 'o':\n                count += 1\n            if i > 0 and j < c-1 and seats[i-1][j+1] == 'o':\n                count += 1\n            if i < r-1 and j > 0 and j < c-1 and seats[i+1][j-1] == 'o':\n                count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\nr, s = map(int, input().split())\n\nseats = []\nfor _ in range(r):\n    line = input()\n    seats.append(line)\n\n# print(seats)\n\ncount = 0\nfor i in range(r):\n    for j in range(s):\n        if seats[i][j] == 'o':\n            if j > 0 and seats[i][j-1] == 'o':\n                count += 1\n            if j < s-1 and seats[i][j+1] == 'o':\n                count += 1\n            if i > 0 and seats[i-1][j] == 'o':\n                count += 1\n            if i < r-1 and seats[i+1][j] == 'o':\n                count += 1\n            if i > 0 and j > 0 and seats[i-1][j-1] == 'o':\n                count += 1\n            if i < r-1 and j < s-1 and seats[i+1][j+1] == 'o':\n                count += 1\n            if i > 0 and j < s-1 and seats[i-1][j+1] == 'o':\n                count += 1\n            if i < r-1 and j > 0 and seats[i+1][j-1] == 'o':\n                count += 1\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\n# Find the number of couples\nr, s = map(int, input().split())\n\nseats = []\nfor _ in range(r):\n    line = input()\n    seats.append(line)\n\ncount = 0\nfor i in range(r):\n    for j in range(s):\n        if seats[i][j] == 'o':\n            if j > 0 and seats[i][j - 1] == 'o':\n                count += 1\n            if j < s - 1 and seats[i][j + 1] == 'o':\n                count += 1\n            if i > 0 and seats[i - 1][j] == 'o':\n                count += 1\n            if i < r - 1 and seats[i + 1][j] == 'o':\n                count += 1\n            if i > 0 and j > 0 and seats[i - 1][j - 1] == 'o':\n                count += 1\n            if i < r - 1 and j < s - 1 and seats[i + 1][j + 1] == 'o':\n                count += 1\n            if i > 0 and j < s - 1 and seats[i - 1][j + 1] == 'o':\n                count += 1\n            if i < r - 1 and j > 0 and seats[i + 1][j - 1] == 'o':\n                count += 1\n\nprint(count)\n"
    },
    {
      "index": 3,
      "text": "\nr, s = map(int, input().split())\n\nseats = []\nfor _ in range(r):\n    line = input()\n    seats.append(line)\n\n# print(seats)\n\ncount = 0\nfor i in range(r):\n    for j in range(s):\n        if seats[i][j] == 'o':\n            if j > 0 and seats[i][j-1] == 'o':\n                count += 1\n            if j < s-1 and seats[i][j+1] == 'o':\n                count += 1\n            if i > 0 and seats[i-1][j] == 'o':\n                count += 1\n            if i < r-1 and seats[i+1][j] == 'o':\n                count += 1\n            if i > 0 and j > 0 and seats[i-1][j-1] == 'o':\n                count += 1\n            if i < r-1 and j < s-1 and seats[i+1][j+1] == 'o':\n                count += 1\n            if i > 0 and j < s-1 and seats[i-1][j+1] == 'o':\n                count += 1\n            if i < r-1 and j > 0 and seats[i+1][j-1] == 'o':\n                count += 1\n\nprint(count)\n"
    },
    {
      "index": 4,
      "text": "\nr, s = map(int, input().split())\n\nseats = []\nfor _ in range(r):\n    line = input()\n    seats.append(line)\n\ncount = 0\nfor i in range(r):\n    for j in range(s):\n        if seats[i][j] == 'o':\n            if j > 0 and seats[i][j - 1] == 'o':\n                count += 1\n            if j < s - 1 and seats[i][j + 1] == 'o':\n                count += 1\n            if i > 0 and seats[i - 1][j] == 'o':\n                count += 1\n            if i < r - 1 and seats[i + 1][j] == 'o':\n                count += 1\n            if i > 0 and j > 0 and seats[i - 1][j - 1] == 'o':\n                count += 1\n            if i < r - 1 and j < s - 1 and seats[i + 1][j + 1] == 'o':\n                count += 1\n            if i > 0 and j < s - 1 and seats[i - 1][j + 1] == 'o':\n                count += 1\n            if i < r - 1 and j > 0 and seats[i + 1][j - 1] == 'o':\n                count += 1\n\nprint(count)\n"
    },
    {
      "index": 5,
      "text": "import math\n\n\ndef is_prime(n):\n    if n == 1:\n        return False\n\n    for k in range(2, int(math.sqrt(n)) + 1):\n        if n % k == 0:\n            return False\n\n    return True\n\n\n\nr, s = map(int, input().split())\n\nif is_prime(r) and is_prime(s):\n    print('Yes')\nelse:\n    print('No')\n\n"
    },
    {
      "index": 6,
      "text": "r, s = map(int, input().split())\n\nseats = []\nfor _ in range(r):\n    line = input()\n    seats.append(line)\n\ncount = 0\nfor i in range(r):\n    for j in range(s):\n        if seats[i][j] == 'o':\n            if j > 0 and seats[i][j-1] == 'o':\n                count += 1\n            if j < s-1 and seats[i][j+1] == 'o':\n                count += 1\n            if i > 0 and seats[i-1][j] == 'o':\n                count += 1\n            if i < r-1 and seats[i+1][j] == 'o':\n                count += 1\n            if i > 0 and j > 0 and seats[i-1][j-1] == 'o':\n                count += 1\n            if i < r-1 and j < s-1 and seats[i+1][j+1] == 'o':\n                count += 1\n            if i > 0 and j < s-1 and seats[i-1][j+1] == 'o':\n                count += 1\n            if i < r-1 and j > 0 and seats[i+1][j-1] == 'o':\n                count += 1\n\nprint(count)\n"
    },
    {
      "index": 7,
      "text": "\nr, s = map(int, input().split())\n\nseats = []\nfor _ in range(r):\n    line = input()\n    seats.append(line)\n\n# print(seats)\n\ncount = 0\nfor i in range(r):\n    for j in range(s):\n        if seats[i][j] == 'o':\n            if j > 0 and seats[i][j-1] == 'o':\n                count += 1\n            if j < s-1 and seats[i][j+1] == 'o':\n                count += 1\n            if i > 0 and seats[i-1][j] == 'o':\n                count += 1\n            if i < r-1 and seats[i+1][j] == 'o':\n                count += 1\n            if i > 0 and j > 0 and seats[i-1][j-1] == 'o':\n                count += 1\n            if i < r-1 and j < s-1 and seats[i+1][j+1] == 'o':\n                count += 1\n            if i > 0 and j < s-1 and seats[i-1][j+1] == 'o':\n                count += 1\n            if i < r-1 and j > 0 and seats[i+1][j-1] == 'o':\n                count += 1\n\nprint(count)\n"
    },
    {
      "index": 8,
      "text": "\nr, s = map(int, input().split())\n\nseats = []\nfor _ in range(r):\n    line = input()\n    seats.append(line)\n\n# print(seats)\n\ncount = 0\nfor i in range(r):\n    for j in range(s):\n        if seats[i][j] == 'o':\n            if j > 0 and seats[i][j-1] == 'o':\n                count += 1\n            if j < s-1 and seats[i][j+1] == 'o':\n                count += 1\n            if i > 0 and seats[i-1][j] == 'o':\n                count += 1\n            if i < r-1 and seats[i+1][j] == 'o':\n                count += 1\n            if i > 0 and j > 0 and seats[i-1][j-1] == 'o':\n                count += 1\n            if i < r-1 and j < s-1 and seats[i+1][j+1] == 'o':\n                count += 1\n            if i > 0 and j < s-1 and seats[i-1][j+1] == 'o':\n                count += 1\n            if i < r-1 and j > 0 and seats[i+1][j-1] == 'o':\n                count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1650121628,
  "object": "edit"
}
2022-04-16 15:07:23.998717 fix syntax errors 9 ["\n\nr, c = map(int, input().split())\n\nseats = []\nfor _ in range(r):\n    line = input()\n    seats.append(line)\n\n# print(seats)\n\ncount = 0\nfor i in range(r):\n    for j in range(c):\n        if seats[i][j] == 'o':\n            if j > 0 and seats[i][j-1] == 'o':\n                count += 1\n            if j < c-1 and seats[i][j+1] == 'o':\n                count += 1\n            if i > 0 and seats[i-1][j] == 'o':\n                count += 1\n            if i < r-1 and seats[i+1][j] == 'o':\n                count += 1\n            if i > 0 and j > 0 and seats[i-1][j-1] == 'o':\n                count += 1\n            if i < r-1 and j < s-1 and seats[i+1][j+1] == 'o':\n                count += 1\n            if i > 0 and j < c-1 and seats[i-1][j+1] == 'o':\n                count += 1\n            if i < r-1 and j > 0 and j < c-1 and seats[i+1][j-1] == 'o':\n                count += 1\n\nprint(count)\n", "\n\nr, s = map(int, input().split())\n\nseats = []\nfor _ in range(r):\n    line = input()\n    seats.append(line)\n\n# print(seats)\n\ncount = 0\nfor i in range(r):\n    for j in range(s):\n        if seats[i][j] == 'o':\n            if j > 0 and seats[i][j-1] == 'o':\n                count += 1\n            if j < s-1 and seats[i][j+1] == 'o':\n                count += 1\n            if i > 0 and seats[i-1][j] == 'o':\n                count += 1\n            if i < r-1 and seats[i+1][j] == 'o':\n                count += 1\n            if i > 0 and j > 0 and seats[i-1][j-1] == 'o':\n                count += 1\n            if i < r-1 and j < s-1 and seats[i+1][j+1] == 'o':\n                count += 1\n            if i > 0 and j < s-1 and seats[i-1][j+1] == 'o':\n                count += 1\n            if i < r-1 and j > 0 and seats[i+1][j-1] == 'o':\n                count += 1\nprint(count)\n", "\n# Find the number of couples\nr, s = map(int, input().split())\n\nseats = []\nfor _ in range(r):\n    line = input()\n    seats.append(line)\n\ncount = 0\nfor i in range(r):\n    for j in range(s):\n        if seats[i][j] == 'o':\n            if j > 0 and seats[i][j - 1] == 'o':\n                count += 1\n            if j < s - 1 and seats[i][j + 1] == 'o':\n                count += 1\n            if i > 0 and seats[i - 1][j] == 'o':\n                count += 1\n            if i < r - 1 and seats[i + 1][j] == 'o':\n                count += 1\n            if i > 0 and j > 0 and seats[i - 1][j - 1] == 'o':\n                count += 1\n            if i < r - 1 and j < s - 1 and seats[i + 1][j + 1] == 'o':\n                count += 1\n            if i > 0 and j < s - 1 and seats[i - 1][j + 1] == 'o':\n                count += 1\n            if i < r - 1 and j > 0 and seats[i + 1][j - 1] == 'o':\n                count += 1\n\nprint(count)\n", "\nr, s = map(int, input().split())\n\nseats = []\nfor _ in range(r):\n    line = input()\n    seats.append(line)\n\n# print(seats)\n\ncount = 0\nfor i in range(r):\n    for j in range(s):\n        if seats[i][j] == 'o':\n            if j > 0 and seats[i][j-1] == 'o':\n                count += 1\n            if j < s-1 and seats[i][j+1] == 'o':\n                count += 1\n            if i > 0 and seats[i-1][j] == 'o':\n                count += 1\n            if i < r-1 and seats[i+1][j] == 'o':\n                count += 1\n            if i > 0 and j > 0 and seats[i-1][j-1] == 'o':\n                count += 1\n            if i < r-1 and j < s-1 and seats[i+1][j+1] == 'o':\n                count += 1\n            if i > 0 and j < s-1 and seats[i-1][j+1] == 'o':\n                count += 1\n            if i < r-1 and j > 0 and seats[i+1][j-1] == 'o':\n                count += 1\n\nprint(count)\n", "\nr, s = map(int, input().split())\n\nseats = []\nfor _ in range(r):\n    line = input()\n    seats.append(line)\n\ncount = 0\nfor i in range(r):\n    for j in range(s):\n        if seats[i][j] == 'o':\n            if j > 0 and seats[i][j - 1] == 'o':\n                count += 1\n            if j < s - 1 and seats[i][j + 1] == 'o':\n                count += 1\n            if i > 0 and seats[i - 1][j] == 'o':\n                count += 1\n            if i < r - 1 and seats[i + 1][j] == 'o':\n                count += 1\n            if i > 0 and j > 0 and seats[i - 1][j - 1] == 'o':\n                count += 1\n            if i < r - 1 and j < s - 1 and seats[i + 1][j + 1] == 'o':\n                count += 1\n            if i > 0 and j < s - 1 and seats[i - 1][j + 1] == 'o':\n                count += 1\n            if i < r - 1 and j > 0 and seats[i + 1][j - 1] == 'o':\n                count += 1\n\nprint(count)\n", "import math\n\n\ndef is_prime(n):\n    if n == 1:\n        return False\n\n    for k in range(2, int(math.sqrt(n)) + 1):\n        if n % k == 0:\n            return False\n\n    return True\n\n\n\nr, s = map(int, input().split())\n\nif is_prime(r) and is_prime(s):\n    print('Yes')\nelse:\n    print('No')\n\n", "r, s = map(int, input().split())\n\nseats = []\nfor _ in range(r):\n    line = input()\n    seats.append(line)\n\ncount = 0\nfor i in range(r):\n    for j in range(s):\n        if seats[i][j] == 'o':\n            if j > 0 and seats[i][j-1] == 'o':\n                count += 1\n            if j < s-1 and seats[i][j+1] == 'o':\n                count += 1\n            if i > 0 and seats[i-1][j] == 'o':\n                count += 1\n            if i < r-1 and seats[i+1][j] == 'o':\n                count += 1\n            if i > 0 and j > 0 and seats[i-1][j-1] == 'o':\n                count += 1\n            if i < r-1 and j < s-1 and seats[i+1][j+1] == 'o':\n                count += 1\n            if i > 0 and j < s-1 and seats[i-1][j+1] == 'o':\n                count += 1\n            if i < r-1 and j > 0 and seats[i+1][j-1] == 'o':\n                count += 1\n\nprint(count)\n", "\nr, s = map(int, input().split())\n\nseats = []\nfor _ in range(r):\n    line = input()\n    seats.append(line)\n\n# print(seats)\n\ncount = 0\nfor i in range(r):\n    for j in range(s):\n        if seats[i][j] == 'o':\n            if j > 0 and seats[i][j-1] == 'o':\n                count += 1\n            if j < s-1 and seats[i][j+1] == 'o':\n                count += 1\n            if i > 0 and seats[i-1][j] == 'o':\n                count += 1\n            if i < r-1 and seats[i+1][j] == 'o':\n                count += 1\n            if i > 0 and j > 0 and seats[i-1][j-1] == 'o':\n                count += 1\n            if i < r-1 and j < s-1 and seats[i+1][j+1] == 'o':\n                count += 1\n            if i > 0 and j < s-1 and seats[i-1][j+1] == 'o':\n                count += 1\n            if i < r-1 and j > 0 and seats[i+1][j-1] == 'o':\n                count += 1\n\nprint(count)\n", "\nr, s = map(int, input().split())\n\nseats = []\nfor _ in range(r):\n    line = input()\n    seats.append(line)\n\n# print(seats)\n\ncount = 0\nfor i in range(r):\n    for j in range(s):\n        if seats[i][j] == 'o':\n            if j > 0 and seats[i][j-1] == 'o':\n                count += 1\n            if j < s-1 and seats[i][j+1] == 'o':\n                count += 1\n            if i > 0 and seats[i-1][j] == 'o':\n                count += 1\n            if i < r-1 and seats[i+1][j] == 'o':\n                count += 1\n            if i > 0 and j > 0 and seats[i-1][j-1] == 'o':\n                count += 1\n            if i < r-1 and j < s-1 and seats[i+1][j+1] == 'o':\n                count += 1\n            if i > 0 and j < s-1 and seats[i-1][j+1] == 'o':\n                count += 1\n            if i < r-1 and j > 0 and seats[i+1][j-1] == 'o':\n                count += 1\n\nprint(count)\n"]
2022-04-16 15:07:23.998801 size on output set 7
2022-04-16 15:07:23.998812 num operations 1
2022-04-16 15:07:23.998818 size on input set 1
2022-04-16 15:07:30.542497 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nlines = sys.stdin.readlines()\n\nR, S = [int(x) for x in lines[0].split()]\n\nseating = [list(s.strip()) for s in lines[1:]]\n\ndef handshakes(seating):\n    count = 0\n    for row in range(R):\n        for seat in range(S):\n            if seating[row][seat] == \"o\":\n                # Check left\n                if seat > 0 and seating[row][seat - 1] == \"o\":\n                    count += 1\n                # Check right\n                if seat < S - 1 and seating[row][seat + 1] == \"o\":\n                    count += 1\n                # Check up\n                if row > 0 and seating[row - 1][seat] == \"o\":\n                    count += 1\n                # Check down\n                if row < R - 1 and seating[row + 1][seat] == \"o\":\n                    count += 1\n                # Check up left\n                if seat > 0 and row > 0 and seating[row - 1][seat - 1] == \"o\":\n                    count += 1\n                # Check up right\n                if seat < S - 1 and row > 0 and seating[row - 1][seat + 1] == \"o\":\n                    count += 1\n                # Check down left\n                if seat > 0 and row < R - 1 and seating[row + 1][seat - 1] == \"o\":\n                    count += 1\n                # Check down right\n                if seat < S - 1 and row < R - 1 and seating[row + 1][seat + 1] == \"o\":\n                    count += 1\n    return count\n\nprint(handshakes(seating))\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nlines = sys.stdin.readlines()\n\nR, S = [int(x) for x in lines[0].split()]\n\nseating = [list(s.strip()) for s in lines[1:]]\n\ndef handshakes(seating):\n    count = 0\n    for row in range(R):\n        for seat in range(S):\n            if seating[row][seat] == \"o\":\n                # Check left\n                if seat > 0 and seating[row][seat - 1] == \"o\":\n                    count += 1\n                # Check right\n                if seat < S - 1 and seating[row][seat + 1] == \"o\":\n                    count += 1\n                # Check up\n                if row > 0 and seating[row - 1][seat] == \"o\":\n                    count += 1\n                # Check down\n                if row < R - 1 and seating[row + 1][seat] == \"o\":\n                    count += 1\n                # Check up left\n                if seat > 0 and row > 0 and seating[row - 1][seat - 1] == \"o\":\n                    count += 1\n                # Check up right\n                if seat < S - 1 and row > 0 and seating[row - 1][seat + 1] == \"o\":\n                    count += 1\n                # Check down left\n                if seat > 0 and row < R - 1 and seating[row + 1][seat - 1] == \"o\":\n                    count += 1\n                # Check down right\n                if seat < S - 1 and row < R - 1 and seating[row + 1][seat + 1] == \"o\":\n                    count += 1\n    return count\n\nprint(handshakes(seating))\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\nlines = sys.stdin.readlines()\nR, S = [int(x) for x in lines[0].split()]\n\nseating = [list(s.strip()) for s in lines[1:]]\n\ndef handshakes(seating):\n    count = 0\n    for row in range(R):\n        for seat in range(S):\n            if seating[row][seat] == \"o\":\n                # Check left\n                if seat > 0 and seating[row][seat - 1] == \"o\":\n                    count += 1\n                # Check right\n                if seat < S - 1 and seating[row][seat + 1] == \"o\":\n                    count += 1\n                # Check up\n                if row > 0 and seating[row - 1][seat] == \"o\":\n                    count += 1\n                # Check down\n                if row < R - 1 and seating[row + 1][seat] == \"o\":\n                    count += 1\n                # Check up left\n                if seat > 0 and row > 0 and seating[row - 1][seat - 1] == \"o\":\n                    count += 1\n                # Check up right\n                if seat < S - 1 and row > 0 and seating[row - 1][seat + 1] == \"o\":\n                    count += 1\n                # Check down left\n                if seat > 0 and row < R - 1 and seating[row + 1][seat - 1] == \"o\":\n                    count += 1\n                # Check down right\n                if seat < S - 1 and row < R - 1 and seating[row + 1][seat + 1] == \"o\":\n                    count += 1\n    return count\n\nprint(handshakes(seating))\n"
    },
    {
      "index": 3,
      "text": "import sys\nlines = sys.stdin.readlines()\nR, S = [int(x) for x in lines[0].split()]\nseating = [list(s.strip()) for s in lines[1:]]\n\ndef handshakes(seating):\n    count = 0\n    for row in range(R):\n        for seat in range(S):\n            if seating[row][seat] == \"o\":\n                # Check left\n                if seat > 0 and seating[row][seat - 1] == \"o\":\n                    count += 1\n                # Check right\n                if seat < S - 1 and seating[row][seat + 1] == \"o\":\n                    count += 1\n                # Check up\n                if row > 0 and seating[row - 1][seat] == \"o\":\n                    count += 1\n                # Check down\n                if row < R - 1 and seating[row + 1][seat] == \"o\":\n                    count += 1\n                # Check up left\n                if seat > 0 and row > 0 and seating[row - 1][seat - 1] == \"o\":\n                    count += 1\n                # Check up right\n                if seat < S - 1 and row > 0 and seating[row - 1][seat + 1] == \"o\":\n                    count += 1\n                # Check down left\n                if seat > 0 and row < R - 1 and seating[row + 1][seat - 1] == \"o\":\n                    count += 1\n                # Check down right\n                if seat < S - 1 and row < R - 1 and seating[row + 1][seat + 1] == \"o\":\n                    count += 1\n    return count\nprint(handshakes(seating))\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\nlines = sys.stdin.readlines()\n\nR, S = [int(x) for x in lines[0].split()]\n\nseating = [list(s.strip()) for s in lines[1:]]\n\ndef handshakes(seating):\n    count = 0\n    for row in range(R):\n        for seat in range(S):\n            if seating[row][seat] == \"o\":\n                # Check left\n                if seat > 0 and seating[row][seat - 1] == \"o\":\n                    count += 1\n                # Check right\n                if seat < S - 1 and seating[row][seat + 1] == \"o\":\n                    count += 1\n                # Check up\n                if row > 0 and seating[row - 1][seat] == \"o\":\n                    count += 1\n                # Check down\n                if row < R - 1 and seating[row + 1][seat] == \"o\":\n                    count += 1\n                # Check up left\n                if seat > 0 and row > 0 and seating[row - 1][seat - 1] == \"o\":\n                    count += 1\n                # Check up right\n                if seat < S - 1 and row > 0 and seating[row - 1][seat + 1] == \"o\":\n                    count += 1\n                # Check down left\n                if seat > 0 and row < R - 1 and seating[row + 1][seat - 1] == \"o\":\n                    count += 1\n                # Check down right\n                if seat < S - 1 and row < R - 1 and seating[row + 1][seat + 1] == \"o\":\n                    count += 1\n    return count\n\nprint(handshakes(seating))\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\nlines = sys.stdin.readlines()\nR, S = [int(x) for x in lines[0].split()]\nseating = [list(s.strip()) for s in lines[1:]]\n\ndef handshakes(seating):\n    count = 0\n    for row in range(R):\n        for seat in range(S):\n            if seating[row][seat] == \"o\":\n                # Check left\n                if seat > 0 and seating[row][seat - 1] == \"o\":\n                    count += 1\n                # Check right\n                if seat < S - 1 and seating[row][seat + 1] == \"o\":\n                    count += 1\n                # Check up\n                if row > 0 and seating[row - 1][seat] == \"o\":\n                    count += 1\n                # Check down\n                if row < R - 1 and seating[row + 1][seat] == \"o\":\n                    count += 1\n                # Check up left\n                if seat > 0 and row > 0 and seating[row - 1][seat - 1] == \"o\":\n                    count += 1\n                # Check up right\n                if seat < S - 1 and row > 0 and seating[row - 1][seat + 1] == \"o\":\n                    count += 1\n                # Check down left\n                if seat > 0 and row < R - 1 and seating[row + 1][seat - 1] == \"o\":\n                    count += 1\n                # Check down right\n                if seat < S - 1 and row < R - 1 and seating[row + 1][seat + 1] == \"o\":\n                    count += 1\n    return count\nprint(handshakes(seating))\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\nlines = sys.stdin.readlines()\nR, S = [int(x) for x in lines[0].split()]\n\nseating = [list(s.strip()) for s in lines[1:]]\n\ndef handshakes(seating):\n    count = 0\n    for row in range(R):\n        for seat in range(S):\n            if seating[row][seat] == \"o\":\n                # Check left\n                if seat > 0 and seating[row][seat - 1] == \"o\":\n                    count += 1\n                # Check right\n                if seat < S - 1 and seating[row][seat + 1] == \"o\":\n                    count += 1\n                # Check up\n                if row > 0 and seating[row - 1][seat] == \"o\":\n                    count += 1\n                # Check down\n                if row < R - 1 and seating[row + 1][seat] == \"o\":\n                    count += 1\n                # Check up left\n                if seat > 0 and row > 0 and seating[row - 1][seat - 1] == \"o\":\n                    count += 1\n                # Check up right\n                if seat < S - 1 and row > 0 and seating[row - 1][seat + 1] == \"o\":\n                    count += 1\n                # Check down left\n                if seat > 0 and row < R - 1 and seating[row + 1][seat - 1] == \"o\":\n                    count += 1\n                # Check down right\n                if seat < S - 1 and row < R - 1 and seating[row + 1][seat + 1] == \"o\":\n                    count += 1\n    return count\n\nprint(handshakes(seating))\n"
    },
    {
      "index": 7,
      "text": "\nimport sys\n\nlines = sys.stdin.readlines()\n\nR, S = [int(x) for x in lines[0].split()]\n\nseating = [list(s.strip()) for s in lines[1:]]\n\ndef handshakes(seating):\n    count = 0\n    for row in range(R):\n        for seat in range(S):\n            if seating[row][seat] == \"o\":\n                # Check left\n                if seat > 0 and seating[row][seat - 1] == \"o\":\n                    count += 1\n                # Check right\n                if seat < S - 1 and seating[row][seat + 1] == \"o\":\n                    count += 1\n                # Check up\n                if row > 0 and seating[row - 1][seat] == \"o\":\n                    count += 1\n                # Check down\n                if row < R - 1 and seating[row + 1][seat] == \"o\":\n                    count += 1\n                # Check up left\n                if seat > 0 and row > 0 and seating[row - 1][seat - 1] == \"o\":\n                    count += 1\n                # Check up right\n                if seat < S - 1 and row > 0 and seating[row - 1][seat + 1] == \"o\":\n                    count += 1\n                # Check down left\n                if seat > 0 and row < R - 1 and seating[row + 1][seat - 1] == \"o\":\n                    count += 1\n                # Check down right\n                if seat < S - 1 and row < R - 1 and seating[row + 1][seat + 1] == \"o\":\n                    count += 1\n    return count\n\nprint(handshakes(seating))\n"
    },
    {
      "index": 8,
      "text": "\n\nimport sys\n\n\nlines = sys.stdin.readlines()\n\nR, S = [int(x) for x in lines[0].split()]\n\n\nseating = [list(s.strip()) for s in lines[1:]]\n\ndef handshakes(seating):\n    count = 0\n    for row in range(R):\n        for seat in range(S):\n            if seating[row][seat] == \"o\":\n                # Check left\n                if seat > 0 and seating[row][seat - 1] == \"o\":\n                    count += 1\n                # Check right\n                if seat < S - 1 and seating[row][seat + 1] == \"o\":\n                    count += 1\n                # Check up\n                if row > 0 and seating[row - 1][seat] == \"o\":\n                    count += 1\n                # Check down\n                if row < R - 1 and seating[row + 1][seat] == \"o\":\n                    count += 1\n                # Check up left\n                if seat > 0 and row > 0 and seating[row - 1][seat - 1] == \"o\":\n                    count += 1\n                # Check up right\n                if seat < S - 1 and row > 0 and seating[row - 1][seat + 1] == \"o\":\n                    count += 1\n                # Check down left\n                if seat > 0 and row < R - 1 and seating[row + 1][seat - 1] == \"o\":\n                    count += 1\n                # Check down right\n                if seat < S - 1 and row < R - 1 and seating[row + 1][seat + 1] == \"o\":\n                    count += 1\n    return count\n\nprint(handshakes(seating))\n"
    }
  ],
  "created": 1650121644,
  "object": "edit"
}
2022-04-16 15:07:30.542865 fix syntax errors 9 ['\nimport sys\n\nlines = sys.stdin.readlines()\n\nR, S = [int(x) for x in lines[0].split()]\n\nseating = [list(s.strip()) for s in lines[1:]]\n\ndef handshakes(seating):\n    count = 0\n    for row in range(R):\n        for seat in range(S):\n            if seating[row][seat] == "o":\n                # Check left\n                if seat > 0 and seating[row][seat - 1] == "o":\n                    count += 1\n                # Check right\n                if seat < S - 1 and seating[row][seat + 1] == "o":\n                    count += 1\n                # Check up\n                if row > 0 and seating[row - 1][seat] == "o":\n                    count += 1\n                # Check down\n                if row < R - 1 and seating[row + 1][seat] == "o":\n                    count += 1\n                # Check up left\n                if seat > 0 and row > 0 and seating[row - 1][seat - 1] == "o":\n                    count += 1\n                # Check up right\n                if seat < S - 1 and row > 0 and seating[row - 1][seat + 1] == "o":\n                    count += 1\n                # Check down left\n                if seat > 0 and row < R - 1 and seating[row + 1][seat - 1] == "o":\n                    count += 1\n                # Check down right\n                if seat < S - 1 and row < R - 1 and seating[row + 1][seat + 1] == "o":\n                    count += 1\n    return count\n\nprint(handshakes(seating))\n', '\nimport sys\n\nlines = sys.stdin.readlines()\n\nR, S = [int(x) for x in lines[0].split()]\n\nseating = [list(s.strip()) for s in lines[1:]]\n\ndef handshakes(seating):\n    count = 0\n    for row in range(R):\n        for seat in range(S):\n            if seating[row][seat] == "o":\n                # Check left\n                if seat > 0 and seating[row][seat - 1] == "o":\n                    count += 1\n                # Check right\n                if seat < S - 1 and seating[row][seat + 1] == "o":\n                    count += 1\n                # Check up\n                if row > 0 and seating[row - 1][seat] == "o":\n                    count += 1\n                # Check down\n                if row < R - 1 and seating[row + 1][seat] == "o":\n                    count += 1\n                # Check up left\n                if seat > 0 and row > 0 and seating[row - 1][seat - 1] == "o":\n                    count += 1\n                # Check up right\n                if seat < S - 1 and row > 0 and seating[row - 1][seat + 1] == "o":\n                    count += 1\n                # Check down left\n                if seat > 0 and row < R - 1 and seating[row + 1][seat - 1] == "o":\n                    count += 1\n                # Check down right\n                if seat < S - 1 and row < R - 1 and seating[row + 1][seat + 1] == "o":\n                    count += 1\n    return count\n\nprint(handshakes(seating))\n', '\nimport sys\nlines = sys.stdin.readlines()\nR, S = [int(x) for x in lines[0].split()]\n\nseating = [list(s.strip()) for s in lines[1:]]\n\ndef handshakes(seating):\n    count = 0\n    for row in range(R):\n        for seat in range(S):\n            if seating[row][seat] == "o":\n                # Check left\n                if seat > 0 and seating[row][seat - 1] == "o":\n                    count += 1\n                # Check right\n                if seat < S - 1 and seating[row][seat + 1] == "o":\n                    count += 1\n                # Check up\n                if row > 0 and seating[row - 1][seat] == "o":\n                    count += 1\n                # Check down\n                if row < R - 1 and seating[row + 1][seat] == "o":\n                    count += 1\n                # Check up left\n                if seat > 0 and row > 0 and seating[row - 1][seat - 1] == "o":\n                    count += 1\n                # Check up right\n                if seat < S - 1 and row > 0 and seating[row - 1][seat + 1] == "o":\n                    count += 1\n                # Check down left\n                if seat > 0 and row < R - 1 and seating[row + 1][seat - 1] == "o":\n                    count += 1\n                # Check down right\n                if seat < S - 1 and row < R - 1 and seating[row + 1][seat + 1] == "o":\n                    count += 1\n    return count\n\nprint(handshakes(seating))\n', 'import sys\nlines = sys.stdin.readlines()\nR, S = [int(x) for x in lines[0].split()]\nseating = [list(s.strip()) for s in lines[1:]]\n\ndef handshakes(seating):\n    count = 0\n    for row in range(R):\n        for seat in range(S):\n            if seating[row][seat] == "o":\n                # Check left\n                if seat > 0 and seating[row][seat - 1] == "o":\n                    count += 1\n                # Check right\n                if seat < S - 1 and seating[row][seat + 1] == "o":\n                    count += 1\n                # Check up\n                if row > 0 and seating[row - 1][seat] == "o":\n                    count += 1\n                # Check down\n                if row < R - 1 and seating[row + 1][seat] == "o":\n                    count += 1\n                # Check up left\n                if seat > 0 and row > 0 and seating[row - 1][seat - 1] == "o":\n                    count += 1\n                # Check up right\n                if seat < S - 1 and row > 0 and seating[row - 1][seat + 1] == "o":\n                    count += 1\n                # Check down left\n                if seat > 0 and row < R - 1 and seating[row + 1][seat - 1] == "o":\n                    count += 1\n                # Check down right\n                if seat < S - 1 and row < R - 1 and seating[row + 1][seat + 1] == "o":\n                    count += 1\n    return count\nprint(handshakes(seating))\n', '\nimport sys\n\nlines = sys.stdin.readlines()\n\nR, S = [int(x) for x in lines[0].split()]\n\nseating = [list(s.strip()) for s in lines[1:]]\n\ndef handshakes(seating):\n    count = 0\n    for row in range(R):\n        for seat in range(S):\n            if seating[row][seat] == "o":\n                # Check left\n                if seat > 0 and seating[row][seat - 1] == "o":\n                    count += 1\n                # Check right\n                if seat < S - 1 and seating[row][seat + 1] == "o":\n                    count += 1\n                # Check up\n                if row > 0 and seating[row - 1][seat] == "o":\n                    count += 1\n                # Check down\n                if row < R - 1 and seating[row + 1][seat] == "o":\n                    count += 1\n                # Check up left\n                if seat > 0 and row > 0 and seating[row - 1][seat - 1] == "o":\n                    count += 1\n                # Check up right\n                if seat < S - 1 and row > 0 and seating[row - 1][seat + 1] == "o":\n                    count += 1\n                # Check down left\n                if seat > 0 and row < R - 1 and seating[row + 1][seat - 1] == "o":\n                    count += 1\n                # Check down right\n                if seat < S - 1 and row < R - 1 and seating[row + 1][seat + 1] == "o":\n                    count += 1\n    return count\n\nprint(handshakes(seating))\n', '\nimport sys\nlines = sys.stdin.readlines()\nR, S = [int(x) for x in lines[0].split()]\nseating = [list(s.strip()) for s in lines[1:]]\n\ndef handshakes(seating):\n    count = 0\n    for row in range(R):\n        for seat in range(S):\n            if seating[row][seat] == "o":\n                # Check left\n                if seat > 0 and seating[row][seat - 1] == "o":\n                    count += 1\n                # Check right\n                if seat < S - 1 and seating[row][seat + 1] == "o":\n                    count += 1\n                # Check up\n                if row > 0 and seating[row - 1][seat] == "o":\n                    count += 1\n                # Check down\n                if row < R - 1 and seating[row + 1][seat] == "o":\n                    count += 1\n                # Check up left\n                if seat > 0 and row > 0 and seating[row - 1][seat - 1] == "o":\n                    count += 1\n                # Check up right\n                if seat < S - 1 and row > 0 and seating[row - 1][seat + 1] == "o":\n                    count += 1\n                # Check down left\n                if seat > 0 and row < R - 1 and seating[row + 1][seat - 1] == "o":\n                    count += 1\n                # Check down right\n                if seat < S - 1 and row < R - 1 and seating[row + 1][seat + 1] == "o":\n                    count += 1\n    return count\nprint(handshakes(seating))\n', '\nimport sys\nlines = sys.stdin.readlines()\nR, S = [int(x) for x in lines[0].split()]\n\nseating = [list(s.strip()) for s in lines[1:]]\n\ndef handshakes(seating):\n    count = 0\n    for row in range(R):\n        for seat in range(S):\n            if seating[row][seat] == "o":\n                # Check left\n                if seat > 0 and seating[row][seat - 1] == "o":\n                    count += 1\n                # Check right\n                if seat < S - 1 and seating[row][seat + 1] == "o":\n                    count += 1\n                # Check up\n                if row > 0 and seating[row - 1][seat] == "o":\n                    count += 1\n                # Check down\n                if row < R - 1 and seating[row + 1][seat] == "o":\n                    count += 1\n                # Check up left\n                if seat > 0 and row > 0 and seating[row - 1][seat - 1] == "o":\n                    count += 1\n                # Check up right\n                if seat < S - 1 and row > 0 and seating[row - 1][seat + 1] == "o":\n                    count += 1\n                # Check down left\n                if seat > 0 and row < R - 1 and seating[row + 1][seat - 1] == "o":\n                    count += 1\n                # Check down right\n                if seat < S - 1 and row < R - 1 and seating[row + 1][seat + 1] == "o":\n                    count += 1\n    return count\n\nprint(handshakes(seating))\n', '\nimport sys\n\nlines = sys.stdin.readlines()\n\nR, S = [int(x) for x in lines[0].split()]\n\nseating = [list(s.strip()) for s in lines[1:]]\n\ndef handshakes(seating):\n    count = 0\n    for row in range(R):\n        for seat in range(S):\n            if seating[row][seat] == "o":\n                # Check left\n                if seat > 0 and seating[row][seat - 1] == "o":\n                    count += 1\n                # Check right\n                if seat < S - 1 and seating[row][seat + 1] == "o":\n                    count += 1\n                # Check up\n                if row > 0 and seating[row - 1][seat] == "o":\n                    count += 1\n                # Check down\n                if row < R - 1 and seating[row + 1][seat] == "o":\n                    count += 1\n                # Check up left\n                if seat > 0 and row > 0 and seating[row - 1][seat - 1] == "o":\n                    count += 1\n                # Check up right\n                if seat < S - 1 and row > 0 and seating[row - 1][seat + 1] == "o":\n                    count += 1\n                # Check down left\n                if seat > 0 and row < R - 1 and seating[row + 1][seat - 1] == "o":\n                    count += 1\n                # Check down right\n                if seat < S - 1 and row < R - 1 and seating[row + 1][seat + 1] == "o":\n                    count += 1\n    return count\n\nprint(handshakes(seating))\n', '\n\nimport sys\n\n\nlines = sys.stdin.readlines()\n\nR, S = [int(x) for x in lines[0].split()]\n\n\nseating = [list(s.strip()) for s in lines[1:]]\n\ndef handshakes(seating):\n    count = 0\n    for row in range(R):\n        for seat in range(S):\n            if seating[row][seat] == "o":\n                # Check left\n                if seat > 0 and seating[row][seat - 1] == "o":\n                    count += 1\n                # Check right\n                if seat < S - 1 and seating[row][seat + 1] == "o":\n                    count += 1\n                # Check up\n                if row > 0 and seating[row - 1][seat] == "o":\n                    count += 1\n                # Check down\n                if row < R - 1 and seating[row + 1][seat] == "o":\n                    count += 1\n                # Check up left\n                if seat > 0 and row > 0 and seating[row - 1][seat - 1] == "o":\n                    count += 1\n                # Check up right\n                if seat < S - 1 and row > 0 and seating[row - 1][seat + 1] == "o":\n                    count += 1\n                # Check down left\n                if seat > 0 and row < R - 1 and seating[row + 1][seat - 1] == "o":\n                    count += 1\n                # Check down right\n                if seat < S - 1 and row < R - 1 and seating[row + 1][seat + 1] == "o":\n                    count += 1\n    return count\n\nprint(handshakes(seating))\n']
2022-04-16 15:07:30.543012 size on output set 5
2022-04-16 15:07:30.543029 num operations 1
2022-04-16 15:07:30.543034 size on input set 1
2022-04-16 15:07:45.862593 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    rows, cols = map(int, sys.stdin.readline().strip().split())\n    seats = []\n    for i in range(rows):\n        seats.append(list(sys.stdin.readline().strip()))\n    count = 0\n    for r in range(rows):\n        for c in range(cols):\n            if seats[r][c] == 'o':\n                if r - 1 >= 0 and seats[r - 1][c] == 'o':\n                    count += 1\n                if r + 1 < rows and seats[r + 1][c] == 'o':\n                    count += 1\n                if c - 1 >= 0 and seats[r][c - 1] == 'o':\n                    count += 1\n                if c + 1 < cols and seats[r][c + 1] == 'o':\n                    count += 1\n                if r - 1 >= 0 and c - 1 >= 0 and seats[r - 1][c - 1] == 'o':\n                    count += 1\n                if r - 1 >= 0 and c + 1 < cols and seats[r - 1][c + 1] == 'o':\n                    count += 1\n                if r + 1 < rows and c - 1 >= 0 and seats[r + 1][c - 1] == 'o':\n                    count += 1\n                if r + 1 < rows and c + 1 < cols and seats[r + 1][c + 1] == 'o':\n                    count += 1\n    print count\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    rows, cols = map(int, sys.stdin.readline().strip().split())\n    seats = []\n    for i in range(rows):\n        seats.append(list(sys.stdin.readline().strip()))\n    count = 0\n    for r in range(rows):\n        for c in range(cols):\n            if seats[r][c] == 'o':\n                if r-1 >= 0 and seats[r-1][c] == 'o':\n                    count += 1\n                if r+1 < rows and seats[r+1][c] == 'o':\n                    count += 1\n                if c-1 >= 0 and seats[r][c-1] == 'o':\n                    count += 1\n                if c+1 < cols and seats[r][c+1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c-1 >= 0 and seats[r-1][c-1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c+1 < cols and seats[r-1][c+1] == 'o':\n                    count += 1\n                if r+1 < rows and c-1 >= 0 and seats[r+1][c-1] == 'o':\n                    count += 1\n                if r+1 < rows and c+1 < cols and seats[r+1][c+1] == 'o':\n                    count += 1\n    print count\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():    \n    S = raw_input()\n    T = raw_input()\n    S = S.lower()\n    T = T.lower()\n    if S == T:\n        print 0\n    elif S < T:\n        print -1\n    else:\n        print 1\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\n\ndef main():\n    rows, cols = map(int, sys.stdin.readline().strip().split())\n    seats = []\n    for i in range(rows):\n        seats.append(list(sys.stdin.readline().strip()))\n    count = 0\n    for r in range(rows):\n        for c in range(cols):\n            if seats[r][c] == 'o':\n                if r-1 >= 0 and seats[r-1][c] == 'o':\n                    count += 1\n                if r+1 < rows and seats[r+1][c] == 'o':\n                    count += 1\n                if c-1 >= 0 and seats[r][c-1] == 'o':\n                    count += 1\n                if c+1 < cols and seats[r][c+1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c-1 >= 0 and seats[r-1][c-1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c+1 < cols and seats[r-1][c+1] == 'o':\n                    count += 1\n                if r+1 < rows and c-1 >= 0 and seats[r+1][c-1] == 'o':\n                    count += 1\n                if r+1 < rows and c+1 < cols and seats[r+1][c+1] == 'o':\n                    count += 1\n    print count\nmain()\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\n\ndef main():\n    rows, cols = map(int, sys.stdin.readline().strip().split())\n    seats = []\n    for i in range(rows):\n        seats.append(list(sys.stdin.readline().strip()))\n    count = 0\n    for r in range(rows):\n        for c in range(cols):\n            if seats[r][c] == 'o':\n                if r-1 >= 0 and seats[r-1][c] == 'o':\n                    count += 1\n                if r+1 < rows and seats[r+1][c] == 'o':\n                    count += 1\n                if c-1 >= 0 and seats[r][c-1] == 'o':\n                    count += 1\n                if c+1 < cols and seats[r][c+1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c-1 >= 0 and seats[r-1][c-1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c+1 < cols and seats[r-1][c+1] == 'o':\n                    count += 1\n                if r+1 < rows and c-1 >= 0 and seats[r+1][c-1] == 'o':\n                    count += 1\n                if r+1 < rows and c+1 < cols and seats[r+1][c+1] == 'o':\n                    count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "import sys\n\ndef main():\n    rows, cols = map(int, sys.stdin.readline().strip().split())\n    seats = []\n    for i in range(rows):\n        seats.append(list(sys.stdin.readline().strip()))\n    count = 0\n    for r in range(rows):\n        for c in range(cols):\n            if seats[r][c] == 'o':\n                if r-1 >= 0 and seats[r-1][c] == 'o':\n                    count += 1\n                if r+1 < rows and seats[r+1][c] == 'o':\n                    count += 1\n                if c-1 >= 0 and seats[r][c-1] == 'o':\n                    count += 1\n                if c+1 < cols and seats[r][c+1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c-1 >= 0 and seats[r-1][c-1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c+1 < cols and seats[r-1][c+1] == 'o':\n                    count += 1\n                if r+1 < rows and c-1 >= 0 and seats[r+1][c-1] == 'o':\n                    count += 1\n                if r+1 < rows and c+1 < cols and seats[r+1][c+1] == 'o':\n                    count += 1\n    print(count)\n\nmain()\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\n\ndef main():\n    rows, cols = map(int, sys.stdin.readline().strip().split())\n    seats = []\n    for i in range(rows):\n        seats.append(list(sys.stdin.readline().strip()))\n    count = 0\n    for r in range(rows):\n        for c in range(cols):\n            if seats[r][c] == 'o':\n                if r-1 >= 0 and seats[r-1][c] == 'o':\n                    count += 1\n                if r+1 < rows and seats[r+1][c] == 'o':\n                    count += 1\n                if c-1 >= 0 and seats[r][c-1] == 'o':\n                    count += 1\n                if c+1 < cols and seats[r][c+1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c-1 >= 0 and seats[r-1][c-1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c+1 < cols and seats[r-1][c+1] == 'o':\n                    count += 1\n                if r+1 < rows and c-1 >= 0 and seats[r+1][c-1] == 'o':\n                    count += 1\n                if r+1 < rows and c+1 < cols and seats[r+1][c+1] == 'o':\n                    count += 1\n    print count\n\nmain()\n"
    },
    {
      "index": 7,
      "text": "\n\nimport sys\n\ndef main():\n    rows, cols = map(int, sys.stdin.readline().strip().split())\n    seats = []\n    for i in range(rows):\n        seats.append(list(sys.stdin.readline().strip()))\n    count = 0\n    for r in range(rows):\n        for c in range(cols):\n            if seats[r][c] == 'o':\n                if r-1 >= 0 and seats[r-1][c] == 'o':\n                    count += 1\n                if r+1 < rows and seats[r+1][c] == 'o':\n                    count += 1\n                if c-1 >= 0 and seats[r][c-1] == 'o':\n                    count += 1\n                if c+1 < cols and seats[r][c+1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c-1 >= 0 and seats[r-1][c-1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c+1 < cols and seats[r-1][c+1] == 'o':\n                    count += 1\n                if r+1 < rows and c-1 >= 0 and seats[r+1][c-1] == 'o':\n                    count += 1\n                if r+1 < rows and c+1 < cols and seats[r+1][c+1] == 'o':\n                    count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "#!/usr/bin/env python\n\n\nimport sys\n\ndef main():\n    rows, cols = map(int, sys.stdin.readline().strip().split())\n    seats = []\n    for i in range(rows):\n        seats.append(list(sys.stdin.readline().strip()))\n    count = 0\n    for r in range(rows):\n        for c in range(cols):\n            if seats[r][c] == 'o':\n                if r-1 >= 0 and seats[r-1][c] == 'o':\n                    count += 1\n                if r+1 < rows and seats[r+1][c] == 'o':\n                    count += 1\n                if c-1 >= 0 and seats[r][c-1] == 'o':\n                    count += 1\n                if c+1 < cols and seats[r][c+1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c-1 >= 0 and seats[r-1][c-1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c+1 < cols and seats[r-1][c+1] == 'o':\n                    count += 1\n                if r+1 < rows and c-1 >= 0 and seats[r+1][c-1] == 'o':\n                    count += 1\n                if r+1 < rows and c+1 < cols and seats[r+1][c+1] == 'o':\n                    count += 1\n    print(count)\n\nmain()\n"
    }
  ],
  "created": 1650121650,
  "object": "edit"
}
2022-04-16 15:07:45.862919 fix syntax errors 9 ["\nimport sys\n\ndef main():\n    rows, cols = map(int, sys.stdin.readline().strip().split())\n    seats = []\n    for i in range(rows):\n        seats.append(list(sys.stdin.readline().strip()))\n    count = 0\n    for r in range(rows):\n        for c in range(cols):\n            if seats[r][c] == 'o':\n                if r - 1 >= 0 and seats[r - 1][c] == 'o':\n                    count += 1\n                if r + 1 < rows and seats[r + 1][c] == 'o':\n                    count += 1\n                if c - 1 >= 0 and seats[r][c - 1] == 'o':\n                    count += 1\n                if c + 1 < cols and seats[r][c + 1] == 'o':\n                    count += 1\n                if r - 1 >= 0 and c - 1 >= 0 and seats[r - 1][c - 1] == 'o':\n                    count += 1\n                if r - 1 >= 0 and c + 1 < cols and seats[r - 1][c + 1] == 'o':\n                    count += 1\n                if r + 1 < rows and c - 1 >= 0 and seats[r + 1][c - 1] == 'o':\n                    count += 1\n                if r + 1 < rows and c + 1 < cols and seats[r + 1][c + 1] == 'o':\n                    count += 1\n    print count\n\nmain()\n", "\nimport sys\n\ndef main():\n    rows, cols = map(int, sys.stdin.readline().strip().split())\n    seats = []\n    for i in range(rows):\n        seats.append(list(sys.stdin.readline().strip()))\n    count = 0\n    for r in range(rows):\n        for c in range(cols):\n            if seats[r][c] == 'o':\n                if r-1 >= 0 and seats[r-1][c] == 'o':\n                    count += 1\n                if r+1 < rows and seats[r+1][c] == 'o':\n                    count += 1\n                if c-1 >= 0 and seats[r][c-1] == 'o':\n                    count += 1\n                if c+1 < cols and seats[r][c+1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c-1 >= 0 and seats[r-1][c-1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c+1 < cols and seats[r-1][c+1] == 'o':\n                    count += 1\n                if r+1 < rows and c-1 >= 0 and seats[r+1][c-1] == 'o':\n                    count += 1\n                if r+1 < rows and c+1 < cols and seats[r+1][c+1] == 'o':\n                    count += 1\n    print count\n\nmain()\n", '\ndef main():    \n    S = raw_input()\n    T = raw_input()\n    S = S.lower()\n    T = T.lower()\n    if S == T:\n        print 0\n    elif S < T:\n        print -1\n    else:\n        print 1\n', "\nimport sys\n\ndef main():\n    rows, cols = map(int, sys.stdin.readline().strip().split())\n    seats = []\n    for i in range(rows):\n        seats.append(list(sys.stdin.readline().strip()))\n    count = 0\n    for r in range(rows):\n        for c in range(cols):\n            if seats[r][c] == 'o':\n                if r-1 >= 0 and seats[r-1][c] == 'o':\n                    count += 1\n                if r+1 < rows and seats[r+1][c] == 'o':\n                    count += 1\n                if c-1 >= 0 and seats[r][c-1] == 'o':\n                    count += 1\n                if c+1 < cols and seats[r][c+1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c-1 >= 0 and seats[r-1][c-1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c+1 < cols and seats[r-1][c+1] == 'o':\n                    count += 1\n                if r+1 < rows and c-1 >= 0 and seats[r+1][c-1] == 'o':\n                    count += 1\n                if r+1 < rows and c+1 < cols and seats[r+1][c+1] == 'o':\n                    count += 1\n    print count\nmain()\n", "\n\nimport sys\n\ndef main():\n    rows, cols = map(int, sys.stdin.readline().strip().split())\n    seats = []\n    for i in range(rows):\n        seats.append(list(sys.stdin.readline().strip()))\n    count = 0\n    for r in range(rows):\n        for c in range(cols):\n            if seats[r][c] == 'o':\n                if r-1 >= 0 and seats[r-1][c] == 'o':\n                    count += 1\n                if r+1 < rows and seats[r+1][c] == 'o':\n                    count += 1\n                if c-1 >= 0 and seats[r][c-1] == 'o':\n                    count += 1\n                if c+1 < cols and seats[r][c+1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c-1 >= 0 and seats[r-1][c-1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c+1 < cols and seats[r-1][c+1] == 'o':\n                    count += 1\n                if r+1 < rows and c-1 >= 0 and seats[r+1][c-1] == 'o':\n                    count += 1\n                if r+1 < rows and c+1 < cols and seats[r+1][c+1] == 'o':\n                    count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    rows, cols = map(int, sys.stdin.readline().strip().split())\n    seats = []\n    for i in range(rows):\n        seats.append(list(sys.stdin.readline().strip()))\n    count = 0\n    for r in range(rows):\n        for c in range(cols):\n            if seats[r][c] == 'o':\n                if r-1 >= 0 and seats[r-1][c] == 'o':\n                    count += 1\n                if r+1 < rows and seats[r+1][c] == 'o':\n                    count += 1\n                if c-1 >= 0 and seats[r][c-1] == 'o':\n                    count += 1\n                if c+1 < cols and seats[r][c+1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c-1 >= 0 and seats[r-1][c-1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c+1 < cols and seats[r-1][c+1] == 'o':\n                    count += 1\n                if r+1 < rows and c-1 >= 0 and seats[r+1][c-1] == 'o':\n                    count += 1\n                if r+1 < rows and c+1 < cols and seats[r+1][c+1] == 'o':\n                    count += 1\n    print(count)\n\nmain()\n", "\nimport sys\n\ndef main():\n    rows, cols = map(int, sys.stdin.readline().strip().split())\n    seats = []\n    for i in range(rows):\n        seats.append(list(sys.stdin.readline().strip()))\n    count = 0\n    for r in range(rows):\n        for c in range(cols):\n            if seats[r][c] == 'o':\n                if r-1 >= 0 and seats[r-1][c] == 'o':\n                    count += 1\n                if r+1 < rows and seats[r+1][c] == 'o':\n                    count += 1\n                if c-1 >= 0 and seats[r][c-1] == 'o':\n                    count += 1\n                if c+1 < cols and seats[r][c+1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c-1 >= 0 and seats[r-1][c-1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c+1 < cols and seats[r-1][c+1] == 'o':\n                    count += 1\n                if r+1 < rows and c-1 >= 0 and seats[r+1][c-1] == 'o':\n                    count += 1\n                if r+1 < rows and c+1 < cols and seats[r+1][c+1] == 'o':\n                    count += 1\n    print count\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    rows, cols = map(int, sys.stdin.readline().strip().split())\n    seats = []\n    for i in range(rows):\n        seats.append(list(sys.stdin.readline().strip()))\n    count = 0\n    for r in range(rows):\n        for c in range(cols):\n            if seats[r][c] == 'o':\n                if r-1 >= 0 and seats[r-1][c] == 'o':\n                    count += 1\n                if r+1 < rows and seats[r+1][c] == 'o':\n                    count += 1\n                if c-1 >= 0 and seats[r][c-1] == 'o':\n                    count += 1\n                if c+1 < cols and seats[r][c+1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c-1 >= 0 and seats[r-1][c-1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c+1 < cols and seats[r-1][c+1] == 'o':\n                    count += 1\n                if r+1 < rows and c-1 >= 0 and seats[r+1][c-1] == 'o':\n                    count += 1\n                if r+1 < rows and c+1 < cols and seats[r+1][c+1] == 'o':\n                    count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python\n\n\nimport sys\n\ndef main():\n    rows, cols = map(int, sys.stdin.readline().strip().split())\n    seats = []\n    for i in range(rows):\n        seats.append(list(sys.stdin.readline().strip()))\n    count = 0\n    for r in range(rows):\n        for c in range(cols):\n            if seats[r][c] == 'o':\n                if r-1 >= 0 and seats[r-1][c] == 'o':\n                    count += 1\n                if r+1 < rows and seats[r+1][c] == 'o':\n                    count += 1\n                if c-1 >= 0 and seats[r][c-1] == 'o':\n                    count += 1\n                if c+1 < cols and seats[r][c+1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c-1 >= 0 and seats[r-1][c-1] == 'o':\n                    count += 1\n                if r-1 >= 0 and c+1 < cols and seats[r-1][c+1] == 'o':\n                    count += 1\n                if r+1 < rows and c-1 >= 0 and seats[r+1][c-1] == 'o':\n                    count += 1\n                if r+1 < rows and c+1 < cols and seats[r+1][c+1] == 'o':\n                    count += 1\n    print(count)\n\nmain()\n"]
2022-04-16 15:07:45.863032 size on output set 7
2022-04-16 15:07:45.863043 num operations 1
2022-04-16 15:07:45.863072 size on input set 1
2022-04-16 15:08:07.006218 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef solve(seats):\n    # Complete this function\n    R, S = len(seats), len(seats[0])\n    directions = [(-1, -1), (-1, 0), (-1, 1), (0, -1), (0, 1), (1, -1), (1, 0), (1, 1)]\n    result = 0\n    for i in range(R):\n        for j in range(S):\n            if seats[i][j] == \"o\":\n                for d in directions:\n                    if 0 <= i + d[0] < R and 0 <= j + d[1] < S:\n                        if seats[i + d[0]][j + d[1]] == \"o\":\n                            result += 1\n    return result // 2\n\nif __name__ == \"__main__\":\n    R, S = map(int, input().strip().split(' '))\n    seats = []\n    for _ in range(R):\n        seats.append(list(input().strip()))\n    result = solve(seats)\n    print(result)\n"
    },
    {
      "index": 1,
      "text": "\ndef solve(seats):\n    R, S = len(seats), len(seats[0])\n    directions = [(-1, -1), (-1, 0), (-1, 1), (0, -1), (0, 1), (1, -1), (1, 0), (1, 1)]\n    result = 0\n    for i in range(R):\n        for j in range(S):\n            if seats[i][j] == \"o\":\n                for d in directions:\n                    if 0 <= i + d[0] < R and 0 <= j + d[1] < S:\n                        if seats[i + d[0]][j + d[1]] == \"o\":\n                            result += 1\n    return result // 2\n\nif __name__ == \"__main__\":\n    R, S = map(int, input().strip().split(' '))\n    seats = []\n    for _ in range(R):\n        seats.append(list(input().strip()))\n    result = solve(seats)\n    print(result)\n"
    },
    {
      "index": 2,
      "text": "\ndef solve(seats):\n    # Complete this function\n    R, S = len(seats), len(seats[0])\n    directions = [(-1, -1), (-1, 0), (-1, 1), (0, -1), (0, 1), (1, -1), (1, 0), (1, 1)]\n    result = 0\n    for i in range(R):\n        for j in range(S):\n            if seats[i][j] == \"o\":\n                for d in directions:\n                    if 0 <= i + d[0] < R and 0 <= j + d[1] < S:\n                        if seats[i + d[0]][j + d[1]] == \"o\":\n                            result += 1\n    return result // 2\n\nif __name__ == \"__main__\":\n    R, S = map(int, input().strip().split(' '))\n    seats = []\n    for _ in range(R):\n        seats.append(list(input().strip()))\n    result = solve(seats)\n    print(result)\n"
    },
    {
      "index": 3,
      "text": "\n"
    },
    {
      "index": 4,
      "text": "\ndef solve(seats):\n    # Complete the function\n    R, S = len(seats), len(seats[0])\n    directions = [(-1, -1), (-1, 0), (-1, 1), (0, -1), (0, 1), (1, -1), (1, 0), (1, 1)]\n    result = 0\n    for i in range(R):\n        for j in range(S):\n            if seats[i][j] == \"o\":\n                for d in directions:\n                    if 0 <= i + d[0] < R and 0 <= j + d[1] < S and seats[i + d[0]][j + d[1]] == \"o\":\n                            result += 1\n    return result // 2\n\nif __name__ == \"__main__\":\n    R, S = map(int, input().strip().split(' '))\n    seats = []\n    for _ in range(R):\n        seats.append(list(input().strip()))\n    result = solve(seats)\n    print(result)\n"
    },
    {
      "index": 5,
      "text": "\ndef solve(seats):\n    # Complete this function\n    R, S = len(seats), len(seats[0])\n    directions = [(-1, -1), (-1, 0), (-1, 1), (0, -1), (0, 1), (1, -1), (1, 0), (1, 1)]\n    result = 0\n    for i in range(R):\n        for j in range(S):\n            if seats[i][j] == \"o\":\n                for d in directions:\n                    if 0 <= i + d[0] < R and 0 <= j + d[1] < S:\n                        if seats[i + d[0]][j + d[1]] == \"o\":\n                            result += 1\n    return result // 2\n\nif __name__ == \"__main__\":\n    R, S = map(int, input().strip().split(' '))\n    seats = []\n    for _ in range(R):\n        seats.append(list(input().strip()))\n    result = solve(seats)\n    print(result)\n"
    },
    {
      "index": 6,
      "text": "\n\ndef solve(seats):\n    # Complete this function\n    row_num = len(seats)\n    col_num = len(seats[0])\n    direction = [(-1, -1), (-1, 0), (-1, 1), (0, -1), (0, 1), (1, -1), (1, 0), (1, 1)]\n    count = 0\n    for i in range(row_num):\n        for j in range(col_num):\n            if seats[i][j] == 'o':\n                for d in direction:\n                    if 0 <= i + d[0] < row_num and 0 <= j + d[1] < col_num:\n                        if seats[i + d[0]][j + d[1]] == 'o':\n                            count += 1\n    return count // 2\n\nif __name__ == \"__main__\":\n    row_num, col_num = map(int, input().strip().split(' '))\n    seats = []\n    for _ in range(row_num):\n        seats.append(list(input().strip()))\n    result = solve(seats)\n    print(result)\n"
    },
    {
      "index": 7,
      "text": "\ndef solve(seats):\n    R, S = len(seats), len(seats[0])\n    directions = [(-1, -1), (-1, 0), (-1, 1), (0, -1), (0, 1), (1, -1), (1, 0), (1, 1)]\n    result = 0\n    for i in range(R):\n        for j in range(S):\n            if seats[i][j] == \"o\":\n                for d in directions:\n                    if 0 <= i + d[0] < R and 0 <= j + d[1] < S:\n                        if seats[i + d[0]][j + d[1]] == \"o\":\n                            result += 1\n    return result // 2\n\nif __name__ == \"__main__\":\n    R, S = map(int, input().strip().split(' '))\n    seats = []\n    for _ in range(R):\n        seats.append(list(input().strip()))\n    result = solve(seats)\n    print(result)\n"
    },
    {
      "index": 8,
      "text": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n\nimport sys\n\n\ndef solve(n, a):\n    \"\"\"\n    >>> solve(3, [1, 2, 3])\n    1\n    >>> solve(3, [1, 3, 2])\n    2\n    >>> solve(3, [2, 1, 3])\n    2\n    >>> solve(3, [2, 3, 1])\n    2\n    >>> solve(3, [3, 1, 2])\n    2\n    >>> solve(3, [3, 2, 1])\n    3\n    >>> solve(4, [1, 2, 3, 4])\n    1\n    >>> solve(4, [1, 3, 2, 4])\n    2\n    >>> solve(4, [1, 4, 2, 3])\n    2\n    >>> solve(4, [2, 1, 3, 4])\n    2\n    >>> solve(4, [2, 3, 1, 4])\n    2\n    >>> solve(4, [2, 4, 1, 3])\n    2\n    >>> solve(4, [3, 1, 2, 4])\n    2\n    >>> solve(4, [3, 2, 1, 4])\n    2\n    >>> solve(4, [3, 4, 1, 2])\n    2\n    >>> solve(4, [4, 1, 2, 3])\n    2\n    >>> solve(4, [4, 2, 1, 3])\n    2\n    >>> solve(4, [4, 3, 1, 2])\n    3\n    \"\"\"\n    min_count = sys.maxsize\n    for v in range(1, n + 1):\n        count = 0\n        for i, x in enumerate(a):\n            if x != v:\n                count += 1\n                if i + 1 < n and a[i + 1] == v:\n                    a[i], a[i + 1] = a[i + 1], a[i]\n                else:\n                    a[i], a[i - 1] = a[i - 1], a[i]\n        min_count = min(count, min_count)\n    return min_count\n\n\nif __name__ == \"__main__\":\n    n = int(input().strip())\n    a = list(map(int, input().strip().split(' ')))\n    print(solve(n, a))\n"
    }
  ],
  "created": 1650121665,
  "object": "edit"
}
2022-04-16 15:08:07.006498 fix syntax errors 9 ['\ndef solve(seats):\n    # Complete this function\n    R, S = len(seats), len(seats[0])\n    directions = [(-1, -1), (-1, 0), (-1, 1), (0, -1), (0, 1), (1, -1), (1, 0), (1, 1)]\n    result = 0\n    for i in range(R):\n        for j in range(S):\n            if seats[i][j] == "o":\n                for d in directions:\n                    if 0 <= i + d[0] < R and 0 <= j + d[1] < S:\n                        if seats[i + d[0]][j + d[1]] == "o":\n                            result += 1\n    return result // 2\n\nif __name__ == "__main__":\n    R, S = map(int, input().strip().split(\' \'))\n    seats = []\n    for _ in range(R):\n        seats.append(list(input().strip()))\n    result = solve(seats)\n    print(result)\n', '\ndef solve(seats):\n    R, S = len(seats), len(seats[0])\n    directions = [(-1, -1), (-1, 0), (-1, 1), (0, -1), (0, 1), (1, -1), (1, 0), (1, 1)]\n    result = 0\n    for i in range(R):\n        for j in range(S):\n            if seats[i][j] == "o":\n                for d in directions:\n                    if 0 <= i + d[0] < R and 0 <= j + d[1] < S:\n                        if seats[i + d[0]][j + d[1]] == "o":\n                            result += 1\n    return result // 2\n\nif __name__ == "__main__":\n    R, S = map(int, input().strip().split(\' \'))\n    seats = []\n    for _ in range(R):\n        seats.append(list(input().strip()))\n    result = solve(seats)\n    print(result)\n', '\ndef solve(seats):\n    # Complete this function\n    R, S = len(seats), len(seats[0])\n    directions = [(-1, -1), (-1, 0), (-1, 1), (0, -1), (0, 1), (1, -1), (1, 0), (1, 1)]\n    result = 0\n    for i in range(R):\n        for j in range(S):\n            if seats[i][j] == "o":\n                for d in directions:\n                    if 0 <= i + d[0] < R and 0 <= j + d[1] < S:\n                        if seats[i + d[0]][j + d[1]] == "o":\n                            result += 1\n    return result // 2\n\nif __name__ == "__main__":\n    R, S = map(int, input().strip().split(\' \'))\n    seats = []\n    for _ in range(R):\n        seats.append(list(input().strip()))\n    result = solve(seats)\n    print(result)\n', '\n', '\ndef solve(seats):\n    # Complete the function\n    R, S = len(seats), len(seats[0])\n    directions = [(-1, -1), (-1, 0), (-1, 1), (0, -1), (0, 1), (1, -1), (1, 0), (1, 1)]\n    result = 0\n    for i in range(R):\n        for j in range(S):\n            if seats[i][j] == "o":\n                for d in directions:\n                    if 0 <= i + d[0] < R and 0 <= j + d[1] < S and seats[i + d[0]][j + d[1]] == "o":\n                            result += 1\n    return result // 2\n\nif __name__ == "__main__":\n    R, S = map(int, input().strip().split(\' \'))\n    seats = []\n    for _ in range(R):\n        seats.append(list(input().strip()))\n    result = solve(seats)\n    print(result)\n', '\ndef solve(seats):\n    # Complete this function\n    R, S = len(seats), len(seats[0])\n    directions = [(-1, -1), (-1, 0), (-1, 1), (0, -1), (0, 1), (1, -1), (1, 0), (1, 1)]\n    result = 0\n    for i in range(R):\n        for j in range(S):\n            if seats[i][j] == "o":\n                for d in directions:\n                    if 0 <= i + d[0] < R and 0 <= j + d[1] < S:\n                        if seats[i + d[0]][j + d[1]] == "o":\n                            result += 1\n    return result // 2\n\nif __name__ == "__main__":\n    R, S = map(int, input().strip().split(\' \'))\n    seats = []\n    for _ in range(R):\n        seats.append(list(input().strip()))\n    result = solve(seats)\n    print(result)\n', '\n\ndef solve(seats):\n    # Complete this function\n    row_num = len(seats)\n    col_num = len(seats[0])\n    direction = [(-1, -1), (-1, 0), (-1, 1), (0, -1), (0, 1), (1, -1), (1, 0), (1, 1)]\n    count = 0\n    for i in range(row_num):\n        for j in range(col_num):\n            if seats[i][j] == \'o\':\n                for d in direction:\n                    if 0 <= i + d[0] < row_num and 0 <= j + d[1] < col_num:\n                        if seats[i + d[0]][j + d[1]] == \'o\':\n                            count += 1\n    return count // 2\n\nif __name__ == "__main__":\n    row_num, col_num = map(int, input().strip().split(\' \'))\n    seats = []\n    for _ in range(row_num):\n        seats.append(list(input().strip()))\n    result = solve(seats)\n    print(result)\n', '\ndef solve(seats):\n    R, S = len(seats), len(seats[0])\n    directions = [(-1, -1), (-1, 0), (-1, 1), (0, -1), (0, 1), (1, -1), (1, 0), (1, 1)]\n    result = 0\n    for i in range(R):\n        for j in range(S):\n            if seats[i][j] == "o":\n                for d in directions:\n                    if 0 <= i + d[0] < R and 0 <= j + d[1] < S:\n                        if seats[i + d[0]][j + d[1]] == "o":\n                            result += 1\n    return result // 2\n\nif __name__ == "__main__":\n    R, S = map(int, input().strip().split(\' \'))\n    seats = []\n    for _ in range(R):\n        seats.append(list(input().strip()))\n    result = solve(seats)\n    print(result)\n', '#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n\nimport sys\n\n\ndef solve(n, a):\n    """\n    >>> solve(3, [1, 2, 3])\n    1\n    >>> solve(3, [1, 3, 2])\n    2\n    >>> solve(3, [2, 1, 3])\n    2\n    >>> solve(3, [2, 3, 1])\n    2\n    >>> solve(3, [3, 1, 2])\n    2\n    >>> solve(3, [3, 2, 1])\n    3\n    >>> solve(4, [1, 2, 3, 4])\n    1\n    >>> solve(4, [1, 3, 2, 4])\n    2\n    >>> solve(4, [1, 4, 2, 3])\n    2\n    >>> solve(4, [2, 1, 3, 4])\n    2\n    >>> solve(4, [2, 3, 1, 4])\n    2\n    >>> solve(4, [2, 4, 1, 3])\n    2\n    >>> solve(4, [3, 1, 2, 4])\n    2\n    >>> solve(4, [3, 2, 1, 4])\n    2\n    >>> solve(4, [3, 4, 1, 2])\n    2\n    >>> solve(4, [4, 1, 2, 3])\n    2\n    >>> solve(4, [4, 2, 1, 3])\n    2\n    >>> solve(4, [4, 3, 1, 2])\n    3\n    """\n    min_count = sys.maxsize\n    for v in range(1, n + 1):\n        count = 0\n        for i, x in enumerate(a):\n            if x != v:\n                count += 1\n                if i + 1 < n and a[i + 1] == v:\n                    a[i], a[i + 1] = a[i + 1], a[i]\n                else:\n                    a[i], a[i - 1] = a[i - 1], a[i]\n        min_count = min(count, min_count)\n    return min_count\n\n\nif __name__ == "__main__":\n    n = int(input().strip())\n    a = list(map(int, input().strip().split(\' \')))\n    print(solve(n, a))\n']
2022-04-16 15:08:07.006639 size on output set 6
2022-04-16 15:08:07.006652 num operations 1
2022-04-16 15:08:07.006657 size on input set 1
2022-04-16 15:08:32.316722 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # Get input from user\n    input_list = []\n\n    while True:\n        try:\n            input_list.append(input())\n        except:\n            break\n\n    # Parse input\n    R, S = input_list[0].split()\n    R = int(R)\n    S = int(S)\n\n    # Initialize number of handshakes\n    num_handshakes = 0\n\n    # Iterate through matrix\n    for i in range(1, R+1):\n        for j in range(0, S):\n            if input_list[i][j] == 'o':\n                if i < R and input_list[i+1][j] == 'o':\n                    num_handshakes += 1\n                if i > 1 and input_list[i-1][j] == 'o':\n                    num_handshakes += 1\n                if j < S-1 and input_list[i][j+1] == 'o':\n                    num_handshakes += 1\n                if j > 0 and input_list[i][j-1] == 'o':\n                    num_handshakes += 1\n                if i < R and j < S-1 and input_list[i+1][j+1] == 'o':\n                    num_handshakes += 1\n                if i > 1 and j > 0 and input_list[i-1][j-1] == 'o':\n                    num_handshakes += 1\n                if i < R and j > 0 and input_list[i+1][j-1] == 'o':\n                    num_handshakes += 1\n                if i > 1 and j < S-1 and input_list[i-1][j+1] == 'o':\n                    num_handshakes += 1\n\n    # Print result\n    print(num_handshakes)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n# Get input from user\ninput_list = []\n\nwhile True:\n    try:\n        input_list.append(input())\n    except:\n        break\n\n# Parse input\nR, S = input_list[0].split()\nR = int(R)\nS = int(S)\n\n# Initialize number of handshakes\nnum_handshakes = 0\n\n# Iterate through matrix\nfor i in range(1, R+1):\n    for j in range(0, S-1):\n        if input_list[i][j] == 'o':\n            if i < R and input_list[i+1][j] == 'o':\n                num_handshakes += 1\n            if i > 1 and input_list[i-1][j] == 'o':\n                num_handshakes += 1\n            if j < S-1 and input_list[i][j+1] == 'o':\n                num_handshakes += 1\n            if j > 0 and input_list[i][j-1] == 'o':\n                num_handshakes += 1\n            if i < R-1 and j < S-1 and input_list[i+1][j+1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j > 0 and input_list[i-1][j-1] == 'o' and i < R-1 and j < S-1:\n                num_handshakes += 1\n            if i < R-1 and j > 0 and input_list[i+1][j-1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j < S-1 and input_list[i-1][j+1] == 'o' and i < R-1 and j < S-1:\n                num_handshakes += 1\n\n# Print result\nprint(num_handshakes)\n"
    },
    {
      "index": 2,
      "text": "\n# Get input from user\ninput_list = []\n\nwhile True:\n    try:\n        input_list.append(input())\n    except:\n        break\n\n# Parse input\nR, S = input_list[0].split()\nR = int(R)\nS = int(S)\n\n# Initialize number of handshakes\nnum_handshakes = 0\n\n# Iterate through matrix\nfor i in range(1, R+1):\n    for j in range(0, S):\n        if input_list[i][j] == 'o':\n            if i < R and input_list[i+1][j] == 'o':\n                num_handshakes += 1\n            if i > 1 and input_list[i-1][j] == 'o':\n                num_handshakes += 1\n            if j < S-1 and input_list[i][j+1] == 'o':\n                num_handshakes += 1\n            if j > 0 and input_list[i][j-1] == 'o':\n                num_handshakes += 1\n            if i < R and j < S-1 and input_list[i+1][j+1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j > 0 and input_list[i-1][j-1] == 'o':\n                num_handshakes += 1\n            if i < R and j > 0 and input_list[i+1][j-1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j < S-1 and input_list[i-1][j+1] == 'o':\n                num_handshakes += 1\n\n# Print result\nprint(num_handshakes)\n"
    },
    {
      "index": 3,
      "text": "\n\n# Get input from user.\ninput_list = []\n\nwhile True:\n    try:\n        input_list.append(input())\n    except:\n        break\n\n# Parse input.\nR, S = input_list[0].split()\nR = int(R)\nS = int(S)\n\n# Initialize number of handshakes.\nnum_handshakes = 0\n\n# Iterate through matrix.\nfor i in range(1, R+1):\n    for j in range(0, S):\n        if input_list[i][j] == 'o':\n            if i < R and input_list[i+1][j] == 'o':\n                num_handshakes += 1\n            if i > 1 and input_list[i-1][j] == 'o':\n                num_handshakes += 1\n            if j < S-1 and input_list[i][j+1] == 'o':\n                num_handshakes += 1\n            if j > 0 and input_list[i][j-1] == 'o':\n                num_handshakes += 1\n            if i < R and j < S-1 and input_list[i+1][j+1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j > 0 and input_list[i-1][j-1] == 'o':\n                num_handshakes += 1\n            if i < R and j > 0 and input_list[i+1][j-1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j < S-1 and input_list[i-1][j+1] == 'o':\n                num_handshakes += 1\n\n# Print result.\nprint(num_handshakes)\n"
    },
    {
      "index": 4,
      "text": "\n\n# Get input from user\ninput_list = [\"3 3\", \"o.o\", \".o.\", \"o.o\"]\n\n# while True:\n#     try:\n#         input_list.append(input())\n#     except:\n#         break\n\n# Parse input\nR, S = input_list[0].split()\nR = int(R)\nS = int(S)\n\n# Initialize number of handshakes\nnum_handshakes = 0\n\n# Iterate through matrix\nfor i in range(0, R):\n    for j in range(0, S-1):\n        if input_list[i][j] == 'o':\n            if i < R and input_list[i+1][j] == 'o':\n                num_handshakes += 1\n            if i > 0 and input_list[i-1][j] == 'o':\n                num_handshakes += 1\n            if j < S-1 and input_list[i][j+1] == 'o':\n                num_handshakes += 1\n            if j > 0 and input_list[i][j-1] == 'o':\n                num_handshakes += 1\n            if i < R and j < S-1 and input_list[i+1][j+1] == 'o':\n                num_handshakes += 1\n            if i > 0 and j > 0 and input_list[i-1][j-1] == 'o':\n                num_handshakes += 1\n            if i < R and j > 0 and input_list[i+1][j-1] == 'o':\n                num_handshakes += 1\n            if i > 0 and j < S-1 and input_list[i-1][j+1] == 'o':\n                num_handshakes += 1\n\n# Print result\nprint(num_handshakes)\n"
    },
    {
      "index": 5,
      "text": "\n\n# Get input from user\ninput_list = [input()]\n\nwhile True:\n    try:\n        input_list.append(input().strip())\n    except:\n        break\n\n# Parse input\nR, S = input_list[0].split()\nR = int(R)\nS = int(S)\n\n# Initialize number of handshakes\nnum_handshakes = 0\n\n# Iterate through matrix\nfor i in range(0, R):\n    for j in range(0, S):\n        if input_list[i][j] == 'o':\n            if i < R and input_list[i+1][j] == 'o':\n                num_handshakes += 1\n            if i > 1 and input_list[i-1][j] == 'o':\n                num_handshakes += 1\n            if j < S-1 and input_list[i][j+1] == 'o':\n                num_handshakes += 1\n            if j > 0 and input_list[i][j-1] == 'o':\n                num_handshakes += 1\n            if i < R and j < S-1 and input_list[i+1][j+1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j > 0 and input_list[i-1][j-1] == 'o':\n                num_handshakes += 1\n            if i < R and j > 0 and input_list[i+1][j-1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j < S-1 and input_list[i-1][j+1] == 'o':\n                num_handshakes += 1\n\n# Print result\nprint(num_handshakes)\n"
    },
    {
      "index": 6,
      "text": "\n# Get input from user\ninput_list = []\nwhile True:\n    try:\n        input_list.append(input())\n    except:\n        break\n# Parse input\nR, S = input_list[0].split()\nR = int(R)\nS = int(S)\n# Initialize number of handshakes\nnum_handshakes = 0\n# Iterate through matrix\nfor i in range(1, R+1):\n    for j in range(0, S):\n        if input_list[i][j] == 'o':\n            if i < R and input_list[i+1][j] == 'o':\n                num_handshakes += 1\n            if i > 1 and input_list[i-1][j] == 'o':\n                num_handshakes += 1\n            if j < S-1 and input_list[i][j+1] == 'o':\n                num_handshakes += 1\n            if j > 0 and input_list[i][j-1] == 'o':\n                num_handshakes += 1\n            if i < R and j < S-1 and input_list[i+1][j+1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j > 0 and input_list[i-1][j-1] == 'o':\n                num_handshakes += 1\n            if i < R and j > 0 and input_list[i+1][j-1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j < S-1 and input_list[i-1][j+1] == 'o':\n                num_handshakes += 1\n\n# Print result\nprint(num_handshakes)\n"
    },
    {
      "index": 7,
      "text": "\n# Get input from user\ninput_list = []\n\nwhile True:\n    try:\n        input_list.append(input())\n    except:\n        break\n\n# Parse input\nR, S = input_list[0].split()\nR = int(R)\nS = int(S)\n\n# Initialize number of handshakes\nnum_handshakes = 0\n\n# Iterate through matrix\nfor i in range(1, R+1):\n    for j in range(0, S):\n        if input_list[i][j] == 'o':\n            if i < R and input_list[i+1][j] == 'o':\n                num_handshakes += 1\n            if i > 1 and input_list[i-1][j] == 'o':\n                num_handshakes += 1\n            if j < S-1 and input_list[i][j+1] == 'o':\n                num_handshakes += 1\n            if j > 0 and input_list[i][j-1] == 'o':\n                num_handshakes += 1\n            if i < R and j < S-1 and input_list[i+1][j+1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j > 0 and input_list[i-1][j-1] == 'o':\n                num_handshakes += 1\n            if i < R and j > 0 and input_list[i+1][j-1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j < S-1 and input_list[i-1][j+1] == 'o':\n                num_handshakes += 1\n\n# Print result\nprint(num_handshakes)\n"
    },
    {
      "index": 8,
      "text": "\n# Get input from user\ninput_list = []\n\nwhile True:\n    try:\n        input_list.append(input())\n    except:\n        break\n\n# Parse input\nR, S = input_list[0].split()\nR = int(R)\nS = int(S)\n\n# Initialize number of handshakes\nnum_handshakes = 0\n\n# Iterate through matrix\nfor i in range(1, R+1):\n    for j in range(0, S):\n        if input_list[i][j] == 'o':\n            if i < R and input_list[i+1][j] == 'o':\n                num_handshakes += 1\n            if i > 1 and input_list[i-1][j] == 'o':\n                num_handshakes += 1\n            if j < S-1 and input_list[i][j+1] == 'o':\n                num_handshakes += 1\n            if j > 0 and input_list[i][j-1] == 'o':\n                num_handshakes += 1\n            if i < R and j < S-1 and input_list[i+1][j+1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j > 0 and input_list[i-1][j-1] == 'o':\n                num_handshakes += 1\n            if i < R and j > 0 and input_list[i+1][j-1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j < S-1 and input_list[i-1][j+1] == 'o':\n                num_handshakes += 1\n\n# Print result\nprint(num_handshakes)\n"
    }
  ],
  "created": 1650121687,
  "object": "edit"
}
2022-04-16 15:08:32.317095 fix syntax errors 9 ['\n\ndef main():\n    # Get input from user\n    input_list = []\n\n    while True:\n        try:\n            input_list.append(input())\n        except:\n            break\n\n    # Parse input\n    R, S = input_list[0].split()\n    R = int(R)\n    S = int(S)\n\n    # Initialize number of handshakes\n    num_handshakes = 0\n\n    # Iterate through matrix\n    for i in range(1, R+1):\n        for j in range(0, S):\n            if input_list[i][j] == \'o\':\n                if i < R and input_list[i+1][j] == \'o\':\n                    num_handshakes += 1\n                if i > 1 and input_list[i-1][j] == \'o\':\n                    num_handshakes += 1\n                if j < S-1 and input_list[i][j+1] == \'o\':\n                    num_handshakes += 1\n                if j > 0 and input_list[i][j-1] == \'o\':\n                    num_handshakes += 1\n                if i < R and j < S-1 and input_list[i+1][j+1] == \'o\':\n                    num_handshakes += 1\n                if i > 1 and j > 0 and input_list[i-1][j-1] == \'o\':\n                    num_handshakes += 1\n                if i < R and j > 0 and input_list[i+1][j-1] == \'o\':\n                    num_handshakes += 1\n                if i > 1 and j < S-1 and input_list[i-1][j+1] == \'o\':\n                    num_handshakes += 1\n\n    # Print result\n    print(num_handshakes)\n\nif __name__ == "__main__":\n    main()\n', "\n\n# Get input from user\ninput_list = []\n\nwhile True:\n    try:\n        input_list.append(input())\n    except:\n        break\n\n# Parse input\nR, S = input_list[0].split()\nR = int(R)\nS = int(S)\n\n# Initialize number of handshakes\nnum_handshakes = 0\n\n# Iterate through matrix\nfor i in range(1, R+1):\n    for j in range(0, S-1):\n        if input_list[i][j] == 'o':\n            if i < R and input_list[i+1][j] == 'o':\n                num_handshakes += 1\n            if i > 1 and input_list[i-1][j] == 'o':\n                num_handshakes += 1\n            if j < S-1 and input_list[i][j+1] == 'o':\n                num_handshakes += 1\n            if j > 0 and input_list[i][j-1] == 'o':\n                num_handshakes += 1\n            if i < R-1 and j < S-1 and input_list[i+1][j+1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j > 0 and input_list[i-1][j-1] == 'o' and i < R-1 and j < S-1:\n                num_handshakes += 1\n            if i < R-1 and j > 0 and input_list[i+1][j-1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j < S-1 and input_list[i-1][j+1] == 'o' and i < R-1 and j < S-1:\n                num_handshakes += 1\n\n# Print result\nprint(num_handshakes)\n", "\n# Get input from user\ninput_list = []\n\nwhile True:\n    try:\n        input_list.append(input())\n    except:\n        break\n\n# Parse input\nR, S = input_list[0].split()\nR = int(R)\nS = int(S)\n\n# Initialize number of handshakes\nnum_handshakes = 0\n\n# Iterate through matrix\nfor i in range(1, R+1):\n    for j in range(0, S):\n        if input_list[i][j] == 'o':\n            if i < R and input_list[i+1][j] == 'o':\n                num_handshakes += 1\n            if i > 1 and input_list[i-1][j] == 'o':\n                num_handshakes += 1\n            if j < S-1 and input_list[i][j+1] == 'o':\n                num_handshakes += 1\n            if j > 0 and input_list[i][j-1] == 'o':\n                num_handshakes += 1\n            if i < R and j < S-1 and input_list[i+1][j+1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j > 0 and input_list[i-1][j-1] == 'o':\n                num_handshakes += 1\n            if i < R and j > 0 and input_list[i+1][j-1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j < S-1 and input_list[i-1][j+1] == 'o':\n                num_handshakes += 1\n\n# Print result\nprint(num_handshakes)\n", "\n\n# Get input from user.\ninput_list = []\n\nwhile True:\n    try:\n        input_list.append(input())\n    except:\n        break\n\n# Parse input.\nR, S = input_list[0].split()\nR = int(R)\nS = int(S)\n\n# Initialize number of handshakes.\nnum_handshakes = 0\n\n# Iterate through matrix.\nfor i in range(1, R+1):\n    for j in range(0, S):\n        if input_list[i][j] == 'o':\n            if i < R and input_list[i+1][j] == 'o':\n                num_handshakes += 1\n            if i > 1 and input_list[i-1][j] == 'o':\n                num_handshakes += 1\n            if j < S-1 and input_list[i][j+1] == 'o':\n                num_handshakes += 1\n            if j > 0 and input_list[i][j-1] == 'o':\n                num_handshakes += 1\n            if i < R and j < S-1 and input_list[i+1][j+1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j > 0 and input_list[i-1][j-1] == 'o':\n                num_handshakes += 1\n            if i < R and j > 0 and input_list[i+1][j-1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j < S-1 and input_list[i-1][j+1] == 'o':\n                num_handshakes += 1\n\n# Print result.\nprint(num_handshakes)\n", '\n\n# Get input from user\ninput_list = ["3 3", "o.o", ".o.", "o.o"]\n\n# while True:\n#     try:\n#         input_list.append(input())\n#     except:\n#         break\n\n# Parse input\nR, S = input_list[0].split()\nR = int(R)\nS = int(S)\n\n# Initialize number of handshakes\nnum_handshakes = 0\n\n# Iterate through matrix\nfor i in range(0, R):\n    for j in range(0, S-1):\n        if input_list[i][j] == \'o\':\n            if i < R and input_list[i+1][j] == \'o\':\n                num_handshakes += 1\n            if i > 0 and input_list[i-1][j] == \'o\':\n                num_handshakes += 1\n            if j < S-1 and input_list[i][j+1] == \'o\':\n                num_handshakes += 1\n            if j > 0 and input_list[i][j-1] == \'o\':\n                num_handshakes += 1\n            if i < R and j < S-1 and input_list[i+1][j+1] == \'o\':\n                num_handshakes += 1\n            if i > 0 and j > 0 and input_list[i-1][j-1] == \'o\':\n                num_handshakes += 1\n            if i < R and j > 0 and input_list[i+1][j-1] == \'o\':\n                num_handshakes += 1\n            if i > 0 and j < S-1 and input_list[i-1][j+1] == \'o\':\n                num_handshakes += 1\n\n# Print result\nprint(num_handshakes)\n', "\n\n# Get input from user\ninput_list = [input()]\n\nwhile True:\n    try:\n        input_list.append(input().strip())\n    except:\n        break\n\n# Parse input\nR, S = input_list[0].split()\nR = int(R)\nS = int(S)\n\n# Initialize number of handshakes\nnum_handshakes = 0\n\n# Iterate through matrix\nfor i in range(0, R):\n    for j in range(0, S):\n        if input_list[i][j] == 'o':\n            if i < R and input_list[i+1][j] == 'o':\n                num_handshakes += 1\n            if i > 1 and input_list[i-1][j] == 'o':\n                num_handshakes += 1\n            if j < S-1 and input_list[i][j+1] == 'o':\n                num_handshakes += 1\n            if j > 0 and input_list[i][j-1] == 'o':\n                num_handshakes += 1\n            if i < R and j < S-1 and input_list[i+1][j+1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j > 0 and input_list[i-1][j-1] == 'o':\n                num_handshakes += 1\n            if i < R and j > 0 and input_list[i+1][j-1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j < S-1 and input_list[i-1][j+1] == 'o':\n                num_handshakes += 1\n\n# Print result\nprint(num_handshakes)\n", "\n# Get input from user\ninput_list = []\nwhile True:\n    try:\n        input_list.append(input())\n    except:\n        break\n# Parse input\nR, S = input_list[0].split()\nR = int(R)\nS = int(S)\n# Initialize number of handshakes\nnum_handshakes = 0\n# Iterate through matrix\nfor i in range(1, R+1):\n    for j in range(0, S):\n        if input_list[i][j] == 'o':\n            if i < R and input_list[i+1][j] == 'o':\n                num_handshakes += 1\n            if i > 1 and input_list[i-1][j] == 'o':\n                num_handshakes += 1\n            if j < S-1 and input_list[i][j+1] == 'o':\n                num_handshakes += 1\n            if j > 0 and input_list[i][j-1] == 'o':\n                num_handshakes += 1\n            if i < R and j < S-1 and input_list[i+1][j+1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j > 0 and input_list[i-1][j-1] == 'o':\n                num_handshakes += 1\n            if i < R and j > 0 and input_list[i+1][j-1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j < S-1 and input_list[i-1][j+1] == 'o':\n                num_handshakes += 1\n\n# Print result\nprint(num_handshakes)\n", "\n# Get input from user\ninput_list = []\n\nwhile True:\n    try:\n        input_list.append(input())\n    except:\n        break\n\n# Parse input\nR, S = input_list[0].split()\nR = int(R)\nS = int(S)\n\n# Initialize number of handshakes\nnum_handshakes = 0\n\n# Iterate through matrix\nfor i in range(1, R+1):\n    for j in range(0, S):\n        if input_list[i][j] == 'o':\n            if i < R and input_list[i+1][j] == 'o':\n                num_handshakes += 1\n            if i > 1 and input_list[i-1][j] == 'o':\n                num_handshakes += 1\n            if j < S-1 and input_list[i][j+1] == 'o':\n                num_handshakes += 1\n            if j > 0 and input_list[i][j-1] == 'o':\n                num_handshakes += 1\n            if i < R and j < S-1 and input_list[i+1][j+1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j > 0 and input_list[i-1][j-1] == 'o':\n                num_handshakes += 1\n            if i < R and j > 0 and input_list[i+1][j-1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j < S-1 and input_list[i-1][j+1] == 'o':\n                num_handshakes += 1\n\n# Print result\nprint(num_handshakes)\n", "\n# Get input from user\ninput_list = []\n\nwhile True:\n    try:\n        input_list.append(input())\n    except:\n        break\n\n# Parse input\nR, S = input_list[0].split()\nR = int(R)\nS = int(S)\n\n# Initialize number of handshakes\nnum_handshakes = 0\n\n# Iterate through matrix\nfor i in range(1, R+1):\n    for j in range(0, S):\n        if input_list[i][j] == 'o':\n            if i < R and input_list[i+1][j] == 'o':\n                num_handshakes += 1\n            if i > 1 and input_list[i-1][j] == 'o':\n                num_handshakes += 1\n            if j < S-1 and input_list[i][j+1] == 'o':\n                num_handshakes += 1\n            if j > 0 and input_list[i][j-1] == 'o':\n                num_handshakes += 1\n            if i < R and j < S-1 and input_list[i+1][j+1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j > 0 and input_list[i-1][j-1] == 'o':\n                num_handshakes += 1\n            if i < R and j > 0 and input_list[i+1][j-1] == 'o':\n                num_handshakes += 1\n            if i > 1 and j < S-1 and input_list[i-1][j+1] == 'o':\n                num_handshakes += 1\n\n# Print result\nprint(num_handshakes)\n"]
2022-04-16 15:08:32.317226 size on output set 7
2022-04-16 15:08:32.317237 num operations 1
2022-04-16 15:08:32.317242 size on input set 1
2022-04-16 15:08:46.993600 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nr,s = map(int,input().split())\n\nmatrix = []\n\nfor i in range(r):\n    matrix.append(list(input()))\n\ncount = 0\n\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'x':\n            if i != 0 and matrix[i-1][j] == 'x':\n                count += 1\n            if i != r-1 and matrix[i+1][j] == 'x':\n                count += 1\n            if j != 0 and matrix[i][j-1] == 'x':\n                count += 1\n            if j != s-1 and matrix[i][j+1] == 'x':\n                count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\nr, s = map(int, input().split())\nmatrix = []\nfor i in range(r):\n    matrix.append(list(input()))\ncount = 0\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i != 0 and matrix[i - 1][j] == 'o':\n                count += 1\n            if i != r - 1 and matrix[i + 1][j] == 'o':\n                count += 1\n            if j != 0 and matrix[i][j - 1] == 'o':\n                count += 1\n            if j != s - 1 and matrix[i][j + 1] == 'o':\n                count += 1\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\nr, s = map(int, input().split())\n\nmatrix = []\n\nfor i in range(r):\n    matrix.append(list(input()))\n\ncount = 0\n\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i != 0 and matrix[i - 1][j] == 'o':\n                count += 1\n            if i != r - 1 and matrix[i + 1][j] == 'o':\n                count += 1\n            if j != 0 and matrix[i][j - 1] == 'o':\n                count += 1\n            if j != s-1 and matrix[i][j+1] == 'o':\n                count += 1\n\nprint(count)\n"
    },
    {
      "index": 3,
      "text": "\n\nr, s = map(int, input().split())\n\nmatrix = []\n\nfor i in range(r):\n    matrix.append(list(input()))\n\ncount = 0\n\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i != 0 and matrix[i - 1][j] == 'o':\n                count += 1\n            if i != r - 1 and matrix[i + 1][j] == 'o':\n                count += 1\n            if j != 0 and matrix[i][j - 1] == 'o':\n                count += 1\n            if j != s - 1 and matrix[i][j + 1] == 'o':\n                count += 1\n\nprint(count)\n"
    },
    {
      "index": 4,
      "text": "\nr,s = map(int,input().split())\nmatrix = []\n\nfor i in range(r):\n    matrix.append(list(input()))\n\ncount = 0\n\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i != 0 and matrix[i-1][j] == 'o':\n                count += 1\n            if i != r-1 and matrix[i+1][j] == 'o':\n                count += 1\n            if j != 0 and matrix[i][j-1] == 'o':\n                count += 1\n            if j != s-1 and matrix[i][j+1] == 'o':\n                count += 1\n\nprint(count)\n"
    },
    {
      "index": 5,
      "text": "\nr,s = map(int,input().split())\n\nmatrix = []\n\nfor i in range(r):\n    matrix.append(list(input()))\n\ncount = 0\n\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i != 0 and matrix[i-1][j] == 'o':\n                count += 1\n            if i != r-1 and matrix[i+1][j] == 'o':\n                count += 1\n            if j != 0 and matrix[i][j-1] == 'o':\n                count += 1\n            if j != s-1 and matrix[i][j+1] == 'o':\n                count += 1\n\nprint(count)\n"
    },
    {
      "index": 6,
      "text": "\nr,s = map(int,input().split())\n\nmatrix = []\n\nfor i in range(r):\n    matrix.append(list(input()))\n\ncount = 0\n\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i != 0 and matrix[i-1][j] == 'o':\n                count += 1\n            if i != r-1 and matrix[i+1][j] == 'o':\n                count += 1\n            if j != 0 and matrix[i][j-1] == 'o':\n                count += 1\n            if j != s-1 and matrix[i][j+1] == 'o':\n                count += 1\n\nprint(count)\n"
    },
    {
      "index": 7,
      "text": "\nr, s = map(int, input().split())\n\nmatrix = []\n\nfor i in range(r):\n    matrix.append(list(input()))\n\ncount = 0\n\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i != 0 and matrix[i - 1][j] == 'o':\n                count += 1\n            if i != r - 1 and matrix[i + 1][j] == 'o':\n                count += 1\n            if j != 0 and matrix[i][j - 1] == 'o':\n                count += 1\n            if j != s-1 and matrix[i][j+1] == 'o':\n                count += 1\n\nprint(count)\n"
    },
    {
      "index": 8,
      "text": "\nr,s = map(int,input().split())\n\nmatrix = []\n\nfor i in range(r):\n    matrix.append(list(input()))\n\ncount = 0\n\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i != 0 and matrix[i-1][j] == 'o':\n                count += 1\n            if i != r-1 and matrix[i+1][j] == 'o':\n                count += 1\n            if j != 0 and matrix[i][j-1] == 'o':\n                count += 1\n            if j != s-1 and matrix[i][j+1] == 'o':\n                count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1650121712,
  "object": "edit"
}
2022-04-16 15:08:46.993853 fix syntax errors 9 ["\n\nr,s = map(int,input().split())\n\nmatrix = []\n\nfor i in range(r):\n    matrix.append(list(input()))\n\ncount = 0\n\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'x':\n            if i != 0 and matrix[i-1][j] == 'x':\n                count += 1\n            if i != r-1 and matrix[i+1][j] == 'x':\n                count += 1\n            if j != 0 and matrix[i][j-1] == 'x':\n                count += 1\n            if j != s-1 and matrix[i][j+1] == 'x':\n                count += 1\n\nprint(count)\n", "\nr, s = map(int, input().split())\nmatrix = []\nfor i in range(r):\n    matrix.append(list(input()))\ncount = 0\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i != 0 and matrix[i - 1][j] == 'o':\n                count += 1\n            if i != r - 1 and matrix[i + 1][j] == 'o':\n                count += 1\n            if j != 0 and matrix[i][j - 1] == 'o':\n                count += 1\n            if j != s - 1 and matrix[i][j + 1] == 'o':\n                count += 1\nprint(count)\n", "\nr, s = map(int, input().split())\n\nmatrix = []\n\nfor i in range(r):\n    matrix.append(list(input()))\n\ncount = 0\n\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i != 0 and matrix[i - 1][j] == 'o':\n                count += 1\n            if i != r - 1 and matrix[i + 1][j] == 'o':\n                count += 1\n            if j != 0 and matrix[i][j - 1] == 'o':\n                count += 1\n            if j != s-1 and matrix[i][j+1] == 'o':\n                count += 1\n\nprint(count)\n", "\n\nr, s = map(int, input().split())\n\nmatrix = []\n\nfor i in range(r):\n    matrix.append(list(input()))\n\ncount = 0\n\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i != 0 and matrix[i - 1][j] == 'o':\n                count += 1\n            if i != r - 1 and matrix[i + 1][j] == 'o':\n                count += 1\n            if j != 0 and matrix[i][j - 1] == 'o':\n                count += 1\n            if j != s - 1 and matrix[i][j + 1] == 'o':\n                count += 1\n\nprint(count)\n", "\nr,s = map(int,input().split())\nmatrix = []\n\nfor i in range(r):\n    matrix.append(list(input()))\n\ncount = 0\n\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i != 0 and matrix[i-1][j] == 'o':\n                count += 1\n            if i != r-1 and matrix[i+1][j] == 'o':\n                count += 1\n            if j != 0 and matrix[i][j-1] == 'o':\n                count += 1\n            if j != s-1 and matrix[i][j+1] == 'o':\n                count += 1\n\nprint(count)\n", "\nr,s = map(int,input().split())\n\nmatrix = []\n\nfor i in range(r):\n    matrix.append(list(input()))\n\ncount = 0\n\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i != 0 and matrix[i-1][j] == 'o':\n                count += 1\n            if i != r-1 and matrix[i+1][j] == 'o':\n                count += 1\n            if j != 0 and matrix[i][j-1] == 'o':\n                count += 1\n            if j != s-1 and matrix[i][j+1] == 'o':\n                count += 1\n\nprint(count)\n", "\nr,s = map(int,input().split())\n\nmatrix = []\n\nfor i in range(r):\n    matrix.append(list(input()))\n\ncount = 0\n\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i != 0 and matrix[i-1][j] == 'o':\n                count += 1\n            if i != r-1 and matrix[i+1][j] == 'o':\n                count += 1\n            if j != 0 and matrix[i][j-1] == 'o':\n                count += 1\n            if j != s-1 and matrix[i][j+1] == 'o':\n                count += 1\n\nprint(count)\n", "\nr, s = map(int, input().split())\n\nmatrix = []\n\nfor i in range(r):\n    matrix.append(list(input()))\n\ncount = 0\n\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i != 0 and matrix[i - 1][j] == 'o':\n                count += 1\n            if i != r - 1 and matrix[i + 1][j] == 'o':\n                count += 1\n            if j != 0 and matrix[i][j - 1] == 'o':\n                count += 1\n            if j != s-1 and matrix[i][j+1] == 'o':\n                count += 1\n\nprint(count)\n", "\nr,s = map(int,input().split())\n\nmatrix = []\n\nfor i in range(r):\n    matrix.append(list(input()))\n\ncount = 0\n\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i != 0 and matrix[i-1][j] == 'o':\n                count += 1\n            if i != r-1 and matrix[i+1][j] == 'o':\n                count += 1\n            if j != 0 and matrix[i][j-1] == 'o':\n                count += 1\n            if j != s-1 and matrix[i][j+1] == 'o':\n                count += 1\n\nprint(count)\n"]
2022-04-16 15:08:46.993990 size on output set 6
2022-04-16 15:08:46.994003 num operations 1
2022-04-16 15:08:46.994008 size on input set 1
2022-04-16 15:08:58.588866 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nr, s = [int(i) for i in input().split()]\n\nmatrix = []\nfor _ in range(r):\n    matrix.append(input())\n\nhandshakes = 0\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i > 0 and matrix[i-1][j] == 'o':\n                handshakes += 1\n            if i < r - 1 and matrix[i+1][j] == 'o':\n                handshakes += 1\n            if j > 0 and matrix[i][j-1] == 'o':\n                handshakes += 1\n            if j < s - 1 and matrix[i][j+1] == 'o':\n                handshakes += 1\n            if i > 0 and j > 0 and matrix[i-1][j-1] == 'o':\n                handshakes += 1\n            if i > 0 and j < s - 1 and matrix[i-1][j+1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j > 0 and matrix[i+1][j-1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j < s - 1 and matrix[i+1][j+1] == 'o':\n                handshakes += 1\nprint(handshakes)\n"
    },
    {
      "index": 1,
      "text": "\nr, s = [int(i) for i in input().split()]\n\nmatrix = []\nfor _ in range(r):\n    matrix.append(input())\n\nhandshakes = 0\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i > 0 and matrix[i-1][j] == 'o':\n                handshakes += 1\n            if i < r - 1 and matrix[i+1][j] == 'o':\n                handshakes += 1\n            if j > 0 and matrix[i][j-1] == 'o':\n                handshakes += 1\n            if j < s - 1 and matrix[i][j+1] == 'o':\n                handshakes += 1\n            if i > 0 and j > 0 and matrix[i-1][j-1] == 'o':\n                handshakes += 1\n            if i > 0 and j < s - 1 and matrix[i-1][j+1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j > 0 and matrix[i+1][j-1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j < s - 1 and matrix[i+1][j+1] == 'o':\n                handshakes += 1\nprint(handshakes)\n"
    },
    {
      "index": 2,
      "text": "\n\nr, s = [int(i) for i in raw_input().split()]\n\nmatrix = []\nfor _ in range(r):\n    matrix.append(raw_input())\n\nhandshakes = 0\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i > 0 and matrix[i-1][j] == 'o':\n                handshakes += 1\n            if i < r - 1 and matrix[i+1][j] == 'o':\n                handshakes += 1\n            if j > 0 and matrix[i][j-1] == 'o':\n                handshakes += 1\n            if j < s - 1 and matrix[i][j+1] == 'o':\n                handshakes += 1\n            if i > 0 and j > 0 and matrix[i-1][j-1] == 'o':\n                handshakes += 1\n            if i > 0 and j < s - 1 and matrix[i-1][j+1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j > 0 and matrix[i+1][j-1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j < s - 1 and matrix[i+1][j+1] == 'o':\n                handshakes += 1\nprint(handshakes)\n"
    },
    {
      "index": 3,
      "text": "\n#!/usr/bin/python3\nr, s = [int(i) for i in input().split()]\n\nmatrix = []\nfor _ in range(r):\n    matrix.append(input())\n\nhandshakes = 0\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i > 0 and matrix[i-1][j] == 'o':\n                handshakes += 1\n            if i < r - 1 and matrix[i+1][j] == 'o':\n                handshakes += 1\n            if j > 0 and matrix[i][j-1] == 'o':\n                handshakes += 1\n            if j < s - 1 and matrix[i][j+1] == 'o':\n                handshakes += 1\n            if i > 0 and j > 0 and matrix[i-1][j-1] == 'o':\n                handshakes += 1\n            if i > 0 and j < s - 1 and matrix[i-1][j+1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j > 0 and matrix[i+1][j-1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j < s - 1 and matrix[i+1][j+1] == 'o':\n                handshakes += 1\nprint(handshakes)\n"
    },
    {
      "index": 4,
      "text": "\n\nr, s = map(int, input().split())\n\nmatrix = []\nfor _ in range(r):\n    matrix.append(list(input()))\n\nhandshakes = 0\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i > 0 and matrix[i-1][j] == 'o':\n                handshakes += 1\n            if i < r - 1 and matrix[i+1][j] == 'o':\n                handshakes += 1\n            if j > 0 and matrix[i][j-1] == 'o':\n                handshakes += 1\n            if j < s - 1 and matrix[i][j+1] == 'o':\n                handshakes += 1\n            if i > 0 and j > 0 and matrix[i-1][j-1] == 'o':\n                handshakes += 1\n            if i > 0 and j < s - 1 and matrix[i-1][j+1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j > 0 and matrix[i+1][j-1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j < s - 1 and matrix[i+1][j+1] == 'o':\n                handshakes += 1\nprint(handshakes)\n"
    },
    {
      "index": 5,
      "text": "r, s = [int(i) for i in input().split()]\n\nmatrix = []\nfor _ in range(r):\n    matrix.append(input())\nhandshakes = 0\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i > 0 and matrix[i-1][j] == 'o':\n                handshakes += 1\n            if i < r - 1 and matrix[i+1][j] == 'o':\n                handshakes += 1\n            if j > 0 and matrix[i][j-1] == 'o':\n                handshakes += 1\n            if j < s - 1 and matrix[i][j+1] == 'o':\n                handshakes += 1\n            if i > 0 and j > 0 and matrix[i-1][j-1] == 'o':\n                handshakes += 1\n            if i > 0 and j < s - 1 and matrix[i-1][j+1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j > 0 and matrix[i+1][j-1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j < s - 1 and matrix[i+1][j+1] == 'o':\n                handshakes += 1\nprint(handshakes)\n"
    },
    {
      "index": 6,
      "text": "\nr, s = [int(i) for i in input().split()]\nmatrix = []\nfor _ in range(r):\n    matrix.append(input())\nhandshakes = 0\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i > 0 and matrix[i-1][j] == 'o':\n                handshakes += 1\n            if i < r - 1 and matrix[i+1][j] == 'o':\n                handshakes += 1\n            if j > 0 and matrix[i][j-1] == 'o':\n                handshakes += 1\n            if j < s - 1 and matrix[i][j+1] == 'o':\n                handshakes += 1\n            if i > 0 and j > 0 and matrix[i-1][j-1] == 'o':\n                handshakes += 1\n            if i > 0 and j < s - 1 and matrix[i-1][j+1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j > 0 and matrix[i+1][j-1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j < s - 1 and matrix[i+1][j+1] == 'o':\n                handshakes += 1\nprint(handshakes)\n"
    },
    {
      "index": 7,
      "text": "\n\nr, s = [int(i) for i in input().split()] # input()\n\nmatrix = []\nfor _ in range(r):\n    matrix.append(input()) # input()\n\nhandshakes = 0\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i > 0 and matrix[i-1][j] == 'o':\n                handshakes += 1\n            if i < r - 1 and matrix[i+1][j] == 'o':\n                handshakes += 1\n            if j > 0 and matrix[i][j-1] == 'o':\n                handshakes += 1\n            if j < s - 1 and matrix[i][j+1] == 'o':\n                handshakes += 1\n            if i > 0 and j > 0 and matrix[i-1][j-1] == 'o':\n                handshakes += 1\n            if i > 0 and j < s - 1 and matrix[i-1][j+1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j > 0 and matrix[i+1][j-1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j < s - 1 and matrix[i+1][j+1] == 'o':\n                handshakes += 1\nprint(handshakes)\n"
    },
    {
      "index": 8,
      "text": "\nr, s = [int(i) for i in input().split()]\n\nmatrix = []\nfor _ in range(r):\n    matrix.append(input())\n\nhandshakes = 0\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i > 0 and matrix[i-1][j] == 'o':\n                handshakes += 1\n            if i < r-1 and matrix[i+1][j] == 'o':\n                handshakes += 1\n            if j > 0 and matrix[i][j-1] == 'o':\n                handshakes += 1\n            if j < s-1 and matrix[i][j+1] == 'o':\n                handshakes += 1\n            if i > 0 and j > 0 and matrix[i-1][j-1] == 'o':\n                handshakes += 1\n            if i > 0 and j < s-1 and matrix[i-1][j+1] == 'o':\n                handshakes += 1\n            if i < r-1 and j > 0 and matrix[i+1][j-1] == 'o':\n                handshakes += 1\n            if i < r-1 and j < s-1 and matrix[i+1][j+1] == 'o':\n                handshakes += 1\nprint(handshakes)\n"
    }
  ],
  "created": 1650121727,
  "object": "edit"
}
2022-04-16 15:08:58.589293 fix syntax errors 9 ["\nr, s = [int(i) for i in input().split()]\n\nmatrix = []\nfor _ in range(r):\n    matrix.append(input())\n\nhandshakes = 0\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i > 0 and matrix[i-1][j] == 'o':\n                handshakes += 1\n            if i < r - 1 and matrix[i+1][j] == 'o':\n                handshakes += 1\n            if j > 0 and matrix[i][j-1] == 'o':\n                handshakes += 1\n            if j < s - 1 and matrix[i][j+1] == 'o':\n                handshakes += 1\n            if i > 0 and j > 0 and matrix[i-1][j-1] == 'o':\n                handshakes += 1\n            if i > 0 and j < s - 1 and matrix[i-1][j+1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j > 0 and matrix[i+1][j-1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j < s - 1 and matrix[i+1][j+1] == 'o':\n                handshakes += 1\nprint(handshakes)\n", "\nr, s = [int(i) for i in input().split()]\n\nmatrix = []\nfor _ in range(r):\n    matrix.append(input())\n\nhandshakes = 0\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i > 0 and matrix[i-1][j] == 'o':\n                handshakes += 1\n            if i < r - 1 and matrix[i+1][j] == 'o':\n                handshakes += 1\n            if j > 0 and matrix[i][j-1] == 'o':\n                handshakes += 1\n            if j < s - 1 and matrix[i][j+1] == 'o':\n                handshakes += 1\n            if i > 0 and j > 0 and matrix[i-1][j-1] == 'o':\n                handshakes += 1\n            if i > 0 and j < s - 1 and matrix[i-1][j+1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j > 0 and matrix[i+1][j-1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j < s - 1 and matrix[i+1][j+1] == 'o':\n                handshakes += 1\nprint(handshakes)\n", "\n\nr, s = [int(i) for i in raw_input().split()]\n\nmatrix = []\nfor _ in range(r):\n    matrix.append(raw_input())\n\nhandshakes = 0\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i > 0 and matrix[i-1][j] == 'o':\n                handshakes += 1\n            if i < r - 1 and matrix[i+1][j] == 'o':\n                handshakes += 1\n            if j > 0 and matrix[i][j-1] == 'o':\n                handshakes += 1\n            if j < s - 1 and matrix[i][j+1] == 'o':\n                handshakes += 1\n            if i > 0 and j > 0 and matrix[i-1][j-1] == 'o':\n                handshakes += 1\n            if i > 0 and j < s - 1 and matrix[i-1][j+1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j > 0 and matrix[i+1][j-1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j < s - 1 and matrix[i+1][j+1] == 'o':\n                handshakes += 1\nprint(handshakes)\n", "\n#!/usr/bin/python3\nr, s = [int(i) for i in input().split()]\n\nmatrix = []\nfor _ in range(r):\n    matrix.append(input())\n\nhandshakes = 0\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i > 0 and matrix[i-1][j] == 'o':\n                handshakes += 1\n            if i < r - 1 and matrix[i+1][j] == 'o':\n                handshakes += 1\n            if j > 0 and matrix[i][j-1] == 'o':\n                handshakes += 1\n            if j < s - 1 and matrix[i][j+1] == 'o':\n                handshakes += 1\n            if i > 0 and j > 0 and matrix[i-1][j-1] == 'o':\n                handshakes += 1\n            if i > 0 and j < s - 1 and matrix[i-1][j+1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j > 0 and matrix[i+1][j-1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j < s - 1 and matrix[i+1][j+1] == 'o':\n                handshakes += 1\nprint(handshakes)\n", "\n\nr, s = map(int, input().split())\n\nmatrix = []\nfor _ in range(r):\n    matrix.append(list(input()))\n\nhandshakes = 0\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i > 0 and matrix[i-1][j] == 'o':\n                handshakes += 1\n            if i < r - 1 and matrix[i+1][j] == 'o':\n                handshakes += 1\n            if j > 0 and matrix[i][j-1] == 'o':\n                handshakes += 1\n            if j < s - 1 and matrix[i][j+1] == 'o':\n                handshakes += 1\n            if i > 0 and j > 0 and matrix[i-1][j-1] == 'o':\n                handshakes += 1\n            if i > 0 and j < s - 1 and matrix[i-1][j+1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j > 0 and matrix[i+1][j-1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j < s - 1 and matrix[i+1][j+1] == 'o':\n                handshakes += 1\nprint(handshakes)\n", "r, s = [int(i) for i in input().split()]\n\nmatrix = []\nfor _ in range(r):\n    matrix.append(input())\nhandshakes = 0\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i > 0 and matrix[i-1][j] == 'o':\n                handshakes += 1\n            if i < r - 1 and matrix[i+1][j] == 'o':\n                handshakes += 1\n            if j > 0 and matrix[i][j-1] == 'o':\n                handshakes += 1\n            if j < s - 1 and matrix[i][j+1] == 'o':\n                handshakes += 1\n            if i > 0 and j > 0 and matrix[i-1][j-1] == 'o':\n                handshakes += 1\n            if i > 0 and j < s - 1 and matrix[i-1][j+1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j > 0 and matrix[i+1][j-1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j < s - 1 and matrix[i+1][j+1] == 'o':\n                handshakes += 1\nprint(handshakes)\n", "\nr, s = [int(i) for i in input().split()]\nmatrix = []\nfor _ in range(r):\n    matrix.append(input())\nhandshakes = 0\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i > 0 and matrix[i-1][j] == 'o':\n                handshakes += 1\n            if i < r - 1 and matrix[i+1][j] == 'o':\n                handshakes += 1\n            if j > 0 and matrix[i][j-1] == 'o':\n                handshakes += 1\n            if j < s - 1 and matrix[i][j+1] == 'o':\n                handshakes += 1\n            if i > 0 and j > 0 and matrix[i-1][j-1] == 'o':\n                handshakes += 1\n            if i > 0 and j < s - 1 and matrix[i-1][j+1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j > 0 and matrix[i+1][j-1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j < s - 1 and matrix[i+1][j+1] == 'o':\n                handshakes += 1\nprint(handshakes)\n", "\n\nr, s = [int(i) for i in input().split()] # input()\n\nmatrix = []\nfor _ in range(r):\n    matrix.append(input()) # input()\n\nhandshakes = 0\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i > 0 and matrix[i-1][j] == 'o':\n                handshakes += 1\n            if i < r - 1 and matrix[i+1][j] == 'o':\n                handshakes += 1\n            if j > 0 and matrix[i][j-1] == 'o':\n                handshakes += 1\n            if j < s - 1 and matrix[i][j+1] == 'o':\n                handshakes += 1\n            if i > 0 and j > 0 and matrix[i-1][j-1] == 'o':\n                handshakes += 1\n            if i > 0 and j < s - 1 and matrix[i-1][j+1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j > 0 and matrix[i+1][j-1] == 'o':\n                handshakes += 1\n            if i < r - 1 and j < s - 1 and matrix[i+1][j+1] == 'o':\n                handshakes += 1\nprint(handshakes)\n", "\nr, s = [int(i) for i in input().split()]\n\nmatrix = []\nfor _ in range(r):\n    matrix.append(input())\n\nhandshakes = 0\nfor i in range(r):\n    for j in range(s):\n        if matrix[i][j] == 'o':\n            if i > 0 and matrix[i-1][j] == 'o':\n                handshakes += 1\n            if i < r-1 and matrix[i+1][j] == 'o':\n                handshakes += 1\n            if j > 0 and matrix[i][j-1] == 'o':\n                handshakes += 1\n            if j < s-1 and matrix[i][j+1] == 'o':\n                handshakes += 1\n            if i > 0 and j > 0 and matrix[i-1][j-1] == 'o':\n                handshakes += 1\n            if i > 0 and j < s-1 and matrix[i-1][j+1] == 'o':\n                handshakes += 1\n            if i < r-1 and j > 0 and matrix[i+1][j-1] == 'o':\n                handshakes += 1\n            if i < r-1 and j < s-1 and matrix[i+1][j+1] == 'o':\n                handshakes += 1\nprint(handshakes)\n"]
2022-04-16 15:08:58.589392 size on output set 8
2022-04-16 15:08:58.589404 num operations 1
2022-04-16 15:08:58.589410 size on input set 1
2022-04-16 15:09:14.599677 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport math\n\ndef readline():\n    return sys.stdin.readline().strip()\n\ndef main():\n    R, S = [int(x) for x in readline().split()]\n    seats = []\n    for _ in range(R):\n        seats.append(list(readline()))\n    #print(seats)\n    #print(R, S)\n    #print(seats[0][0])\n    #print(seats[0][1])\n    #print(seats[1][0])\n    #print(seats[1][1])\n    #print(seats[0][2])\n    #print(seats[1][2])\n    #print(seats[0][3])\n    #print(seats[1][3])\n    #print(seats[2][0])\n    #print(seats[2][1])\n    #print(seats[2][2])\n    #print(seats[2][3])\n    #print(seats[3][0])\n    #print(seats[3][1])\n    #print(seats[3][2])\n    #print(seats[3][3])\n    #print(seats[0][4])\n    #print(seats[1][4])\n    #print(seats[2][4])\n    #print(seats[3][4])\n    #print(seats[0][5])\n    #print(seats[1][5])\n    #print(seats[2][5])\n    #print(seats[3][5])\n\n    handshakes = 0\n    for x in range(R):\n        for y in range(S):\n            #print(x, y)\n            if seats[x][y] == \"o\":\n                #print(\"o\")\n                if x > 0:\n                    if y > 0:\n                        if seats[x-1][y-1] == \"o\":\n                            handshakes += 1\n                    if seats[x-1][y] == \"o\":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x-1][y+1] == \"o\":\n                            handshakes += 1\n                if y > 0:\n                    if seats[x][y-1] == \"o\":\n                        handshakes += 1\n                if y+1 < S:\n                    if seats[x][y+1] == \"o\":\n                        handshakes += 1\n                if x+1 < R:\n                    if y > 0:\n                        if seats[x+1][y-1] == \"o\":\n                            handshakes += 1\n                    if seats[x+1][y] == \"o\":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x+1][y+1] == \"o\":\n                            handshakes += 1\n    print(handshakes)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nimport math\n\ndef readline():\n    return sys.stdin.readline().strip()\n\ndef main():\n    R, S = [int(x) for x in readline().split()]\n    seats = []\n    for _ in range(R):\n        seats.append(list(readline()))\n\n    handshakes = 0\n    for x in range(R):\n        for y in range(S):\n            if seats[x][y] == \"o\":\n                if x > 0:\n                    if y > 0:\n                        if seats[x-1][y-1] == \"o\":\n                            handshakes += 1\n                    if seats[x-1][y] == \"o\":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x-1][y+1] == \"o\":\n                            handshakes += 1\n                if y > 0:\n                    if seats[x][y-1] == \"o\":\n                        handshakes += 1\n                if y+1 < S:\n                    if seats[x][y+1] == \"o\":\n                        handshakes += 1\n                if x+1 < R:\n                    if y > 0:\n                        if seats[x+1][y-1] == \"o\":\n                            handshakes += 1\n                    if seats[x+1][y] == \"o\":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x+1][y+1] == \"o\":\n                            handshakes += 1\n    print(handshakes)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\nimport math\n\ndef readline():\n    return sys.stdin.readline().strip()\n\ndef main():\n    R, S = [int(x) for x in readline().split()]\n    seats = []\n    for _ in range(R):\n        seats.append(list(readline()))\n    #print(seats)\n    #print(R, S)\n    #print(seats[0][0])\n    #print(seats[0][1])\n    #print(seats[1][0])\n    #print(seats[1][1])\n    #print(seats[0][2])\n    #print(seats[1][2])\n    #print(seats[0][3])\n    #print(seats[1][3])\n    #print(seats[2][0])\n    #print(seats[2][1])\n    #print(seats[2][2])\n    #print(seats[2][3])\n    #print(seats[3][0])\n    #print(seats[3][1])\n    #print(seats[3][2])\n    #print(seats[3][3])\n    #print(seats[0][4])\n    #print(seats[1][4])\n    #print(seats[2][4])\n    #print(seats[3][4])\n    #print(seats[0][5])\n    #print(seats[1][5])\n    #print(seats[2][5])\n    #print(seats[3][5])\n\n    handshakes = 0\n    for x in range(R):\n        for y in range(S):\n            #print(x, y)\n            if seats[x][y] == \"o\":\n                #print(\"o\")\n                if x > 0:\n                    if y > 0:\n                        if seats[x-1][y-1] == \"o\":\n                            handshakes += 1\n                    if seats[x-1][y] == \"o\":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x-1][y+1] == \"o\":\n                            handshakes += 1\n                if y > 0:\n                    if seats[x][y-1] == \"o\":\n                        handshakes += 1\n                if y+1 < S:\n                    if seats[x][y+1] == \"o\":\n                        handshakes += 1\n                if x+1 < R:\n                    if y > 0:\n                        if seats[x+1][y-1] == \"o\":\n                            handshakes += 1\n                    if seats[x+1][y] == \"o\":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x+1][y+1] == \"o\":\n                            handshakes += 1\n    print(handshakes)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "\nimport sys\nimport math\n\ndef readline():\n    return sys.stdin.readline().strip()\n\ndef main():\n    R, S = [int(x) for x in readline().split()]\n    seats = []\n    for _ in range(R):\n        seats.append(list(readline()))\n    #print(seats)\n    #print(R, S)\n    #print(seats[0][0])\n    #print(seats[0][1])\n    #print(seats[1][0])\n    #print(seats[1][1])\n    #print(seats[0][2])\n    #print(seats[1][2])\n    #print(seats[0][3])\n    #print(seats[1][3])\n    #print(seats[2][0])\n    #print(seats[2][1])\n    #print(seats[2][2])\n    #print(seats[2][3])\n    #print(seats[3][0])\n    #print(seats[3][1])\n    #print(seats[3][2])\n    #print(seats[3][3])\n    #print(seats[0][4])\n    #print(seats[1][4])\n    #print(seats[2][4])\n    #print(seats[3][4])\n    #print(seats[0][5])\n    #print(seats[1][5])\n    #print(seats[2][5])\n    #print(seats[3][5])\n\n    handshakes = 0\n    for x in range(R):\n        for y in range(S):\n            #print(x, y)\n            if seats[x][y] == \"o\":\n                #print(\"o\")\n                if x > 0:\n                    if y > 0:\n                        if seats[x-1][y-1] == \"o\":\n                            handshakes += 1\n                    if seats[x-1][y] == \"o\":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x-1][y+1] == \"o\":\n                            handshakes += 1\n                if y > 0:\n                    if seats[x][y-1] == \"o\":\n                        handshakes += 1\n                if y+1 < S:\n                    if seats[x][y+1] == \"o\":\n                        handshakes += 1\n                if x+1 < R:\n                    if y > 0:\n                        if seats[x+1][y-1] == \"o\":\n                            handshakes += 1\n                    if seats[x+1][y] == \"o\":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x+1][y+1] == \"o\":\n                            handshakes += 1\n    print(handshakes)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\nimport math\n\ndef readline():\n    return sys.stdin.readline().strip()\n\ndef main():\n    R, S = [int(x) for x in readline().split()]\n    seats = []\n    for _ in range(R):\n        seats.append(list(readline()))\n\n    handshakes = 0\n    for x in range(R):\n        for y in range(S):\n            #print(x, y)\n            if seats[x][y] == \"o\":\n                #print(\"o\")\n                if x > 0:\n                    if y > 0:\n                        if seats[x-1][y-1] == \"o\":\n                            handshakes += 1\n                    if seats[x-1][y] == \"o\":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x-1][y+1] == \"o\":\n                            handshakes += 1\n                if y > 0:\n                    if seats[x][y-1] == \"o\":\n                        handshakes += 1\n                if y+1 < S:\n                    if seats[x][y+1] == \"o\":\n                        handshakes += 1\n                if x+1 < R:\n                    if y > 0:\n                        if seats[x+1][y-1] == \"o\":\n                            handshakes += 1\n                    if seats[x+1][y] == \"o\":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x+1][y+1] == \"o\":\n                            handshakes += 1\n    print(handshakes)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\nimport sys\nimport math\n\ndef readline():\n    return sys.stdin.readline().strip()\n\ndef main():\n    R, S = [int(x) for x in readline().split()]\n    seats = []\n    for _ in range(R):\n        seats.append(list(readline()))\n    #print(seats)\n    #print(R, S)\n    #print(seats[0][0])\n    #print(seats[0][1])\n    #print(seats[1][0])\n    #print(seats[1][1])\n    #print(seats[0][2])\n    #print(seats[1][2])\n    #print(seats[0][3])\n    #print(seats[1][3])\n    #print(seats[2][0])\n    #print(seats[2][1])\n    #print(seats[2][2])\n    #print(seats[2][3])\n    #print(seats[3][0])\n    #print(seats[3][1])\n    #print(seats[3][2])\n    #print(seats[3][3])\n    #print(seats[0][4])\n    #print(seats[1][4])\n    #print(seats[2][4])\n    #print(seats[3][4])\n    #print(seats[0][5])\n    #print(seats[1][5])\n    #print(seats[2][5])\n    #print(seats[3][5])\n\n    handshakes = 0\n    for x in range(R):\n        for y in range(S):\n            #print(x, y)\n            if seats[x][y] == \"o\":\n                #print(\"o\")\n                if x > 0:\n                    if y > 0:\n                        if seats[x-1][y-1] == \"o\":\n                            handshakes += 1\n                    if seats[x-1][y] == \"o\":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x-1][y+1] == \"o\":\n                            handshakes += 1\n                if y > 0:\n                    if seats[x][y-1] == \"o\":\n                        handshakes += 1\n                if y+1 < S:\n                    if seats[x][y+1] == \"o\":\n                        handshakes += 1\n                if x+1 < R:\n                    if y > 0:\n                        if seats[x+1][y-1] == \"o\":\n                            handshakes += 1\n                    if seats[x+1][y] == \"o\":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x+1][y+1] == \"o\":\n                            handshakes += 1\n    print(handshakes)\n"
    },
    {
      "index": 6,
      "text": "\nimport sys\nimport math\n\ndef readline():\n    return sys.stdin.readline().strip()\n\ndef main():\n    R, S = [int(x) for x in readline().split()]\n    seats = []\n    for _ in range(R):\n        seats.append(list(readline()))\n    #print(seats)\n    #print(R, S)\n    #print(seats[0][0])\n    #print(seats[0][1])\n    #print(seats[1][0])\n    #print(seats[1][1])\n    #print(seats[0][2])\n    #print(seats[1][2])\n    #print(seats[0][3])\n    #print(seats[1][3])\n    #print(seats[2][0])\n    #print(seats[2][1])\n    #print(seats[2][2])\n    #print(seats[2][3])\n    #print(seats[3][0])\n    #print(seats[3][1])\n    #print(seats[3][2])\n    #print(seats[3][3])\n    #print(seats[0][4])\n    #print(seats[1][4])\n    #print(seats[2][4])\n    #print(seats[3][4])\n    #print(seats[0][5])\n    #print(seats[1][5])\n    #print(seats[2][5])\n    #print(seats[3][5])\n\n    handshakes = 0\n    for x in range(R):\n        for y in range(S):\n            #print(x, y)\n            if seats[x][y] == \"o\":\n                #print(\"o\")\n                if x > 0:\n                    if y > 0:\n                        if seats[x-1][y-1] == \"o\":\n                            handshakes += 1\n                    if seats[x-1][y] == \"o\":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x-1][y+1] == \"o\":\n                            handshakes += 1\n                if y > 0:\n                    if seats[x][y-1] == \"o\":\n                        handshakes += 1\n                if y+1 < S:\n                    if seats[x][y+1] == \"o\":\n                        handshakes += 1\n                if x+1 < R:\n                    if y > 0:\n                        if seats[x+1][y-1] == \"o\":\n                            handshakes += 1\n                    if seats[x+1][y] == \"o\":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x+1][y+1] == \"o\":\n                            handshakes += 1\n    print(handshakes)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 7,
      "text": "\n\nimport sys\n\nimport math\n\ndef readline():\n    return sys.stdin.readline().strip()\n\n\ndef main():\n    R, S = [int(x) for x in readline().split()]\n    seats = [list(readline()) for _ in range(R)]\n\n    handshakes = 0\n    for x in range(R):\n        for y in range(S):\n            if seats[x][y] == \"o\":\n                if x > 0:\n                    if y > 0:\n                        if seats[x-1][y-1] == \"o\":\n                            handshakes += 1\n                    if seats[x-1][y] == \"o\":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x-1][y+1] == \"o\":\n                            handshakes += 1\n                if y > 0:\n                    if seats[x][y-1] == \"o\":\n                        handshakes += 1\n                if y+1 < S:\n                    if seats[x][y+1] == \"o\":\n                        handshakes += 1\n                if x+1 < R:\n                    if y > 0:\n                        if seats[x+1][y-1] == \"o\":\n                            handshakes += 1\n                    if seats[x+1][y] == \"o\":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x+1][y+1] == \"o\":\n                            handshakes += 1\n    print(handshakes)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\nimport sys\nimport math\n\ndef readline():\n    return sys.stdin.readline().strip()\n\ndef main():\n    R, S = [int(x) for x in readline().split()]\n    seats = []\n    for _ in range(R):\n        seats.append(list(readline()))\n\n    handshakes = 0\n    for x in range(R):\n        for y in range(S):\n            if seats[x][y] == \"o\":\n                if x > 0:\n                    if y > 0:\n                        if seats[x-1][y-1] == \"o\":\n                            handshakes += 1\n                    if seats[x-1][y] == \"o\":\n                        handshakes += 1\n                    if y + 1 < S:\n                        if seats[x-1][y+1] == \"o\":\n                            handshakes += 1\n                if y > 0:\n                    if seats[x][y-1] == \"o\":\n                        handshakes += 1\n                if y + 1 < S:\n                    if seats[x][y+1] == \"o\":\n                        handshakes += 1\n                if x + 1 < R:\n                    if y > 0:\n                        if seats[x+1][y-1] == \"o\":\n                            handshakes += 1\n                    if seats[x+1][y] == \"o\":\n                        handshakes += 1\n                    if y + 1 < S:\n                        if seats[x+1][y+1] == \"o\":\n                            handshakes += 1\n    print(handshakes)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650121738,
  "object": "edit"
}
2022-04-16 15:09:14.600095 fix syntax errors 9 ['\nimport sys\nimport math\n\ndef readline():\n    return sys.stdin.readline().strip()\n\ndef main():\n    R, S = [int(x) for x in readline().split()]\n    seats = []\n    for _ in range(R):\n        seats.append(list(readline()))\n    #print(seats)\n    #print(R, S)\n    #print(seats[0][0])\n    #print(seats[0][1])\n    #print(seats[1][0])\n    #print(seats[1][1])\n    #print(seats[0][2])\n    #print(seats[1][2])\n    #print(seats[0][3])\n    #print(seats[1][3])\n    #print(seats[2][0])\n    #print(seats[2][1])\n    #print(seats[2][2])\n    #print(seats[2][3])\n    #print(seats[3][0])\n    #print(seats[3][1])\n    #print(seats[3][2])\n    #print(seats[3][3])\n    #print(seats[0][4])\n    #print(seats[1][4])\n    #print(seats[2][4])\n    #print(seats[3][4])\n    #print(seats[0][5])\n    #print(seats[1][5])\n    #print(seats[2][5])\n    #print(seats[3][5])\n\n    handshakes = 0\n    for x in range(R):\n        for y in range(S):\n            #print(x, y)\n            if seats[x][y] == "o":\n                #print("o")\n                if x > 0:\n                    if y > 0:\n                        if seats[x-1][y-1] == "o":\n                            handshakes += 1\n                    if seats[x-1][y] == "o":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x-1][y+1] == "o":\n                            handshakes += 1\n                if y > 0:\n                    if seats[x][y-1] == "o":\n                        handshakes += 1\n                if y+1 < S:\n                    if seats[x][y+1] == "o":\n                        handshakes += 1\n                if x+1 < R:\n                    if y > 0:\n                        if seats[x+1][y-1] == "o":\n                            handshakes += 1\n                    if seats[x+1][y] == "o":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x+1][y+1] == "o":\n                            handshakes += 1\n    print(handshakes)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\nimport math\n\ndef readline():\n    return sys.stdin.readline().strip()\n\ndef main():\n    R, S = [int(x) for x in readline().split()]\n    seats = []\n    for _ in range(R):\n        seats.append(list(readline()))\n\n    handshakes = 0\n    for x in range(R):\n        for y in range(S):\n            if seats[x][y] == "o":\n                if x > 0:\n                    if y > 0:\n                        if seats[x-1][y-1] == "o":\n                            handshakes += 1\n                    if seats[x-1][y] == "o":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x-1][y+1] == "o":\n                            handshakes += 1\n                if y > 0:\n                    if seats[x][y-1] == "o":\n                        handshakes += 1\n                if y+1 < S:\n                    if seats[x][y+1] == "o":\n                        handshakes += 1\n                if x+1 < R:\n                    if y > 0:\n                        if seats[x+1][y-1] == "o":\n                            handshakes += 1\n                    if seats[x+1][y] == "o":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x+1][y+1] == "o":\n                            handshakes += 1\n    print(handshakes)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\nimport math\n\ndef readline():\n    return sys.stdin.readline().strip()\n\ndef main():\n    R, S = [int(x) for x in readline().split()]\n    seats = []\n    for _ in range(R):\n        seats.append(list(readline()))\n    #print(seats)\n    #print(R, S)\n    #print(seats[0][0])\n    #print(seats[0][1])\n    #print(seats[1][0])\n    #print(seats[1][1])\n    #print(seats[0][2])\n    #print(seats[1][2])\n    #print(seats[0][3])\n    #print(seats[1][3])\n    #print(seats[2][0])\n    #print(seats[2][1])\n    #print(seats[2][2])\n    #print(seats[2][3])\n    #print(seats[3][0])\n    #print(seats[3][1])\n    #print(seats[3][2])\n    #print(seats[3][3])\n    #print(seats[0][4])\n    #print(seats[1][4])\n    #print(seats[2][4])\n    #print(seats[3][4])\n    #print(seats[0][5])\n    #print(seats[1][5])\n    #print(seats[2][5])\n    #print(seats[3][5])\n\n    handshakes = 0\n    for x in range(R):\n        for y in range(S):\n            #print(x, y)\n            if seats[x][y] == "o":\n                #print("o")\n                if x > 0:\n                    if y > 0:\n                        if seats[x-1][y-1] == "o":\n                            handshakes += 1\n                    if seats[x-1][y] == "o":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x-1][y+1] == "o":\n                            handshakes += 1\n                if y > 0:\n                    if seats[x][y-1] == "o":\n                        handshakes += 1\n                if y+1 < S:\n                    if seats[x][y+1] == "o":\n                        handshakes += 1\n                if x+1 < R:\n                    if y > 0:\n                        if seats[x+1][y-1] == "o":\n                            handshakes += 1\n                    if seats[x+1][y] == "o":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x+1][y+1] == "o":\n                            handshakes += 1\n    print(handshakes)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\nimport math\n\ndef readline():\n    return sys.stdin.readline().strip()\n\ndef main():\n    R, S = [int(x) for x in readline().split()]\n    seats = []\n    for _ in range(R):\n        seats.append(list(readline()))\n    #print(seats)\n    #print(R, S)\n    #print(seats[0][0])\n    #print(seats[0][1])\n    #print(seats[1][0])\n    #print(seats[1][1])\n    #print(seats[0][2])\n    #print(seats[1][2])\n    #print(seats[0][3])\n    #print(seats[1][3])\n    #print(seats[2][0])\n    #print(seats[2][1])\n    #print(seats[2][2])\n    #print(seats[2][3])\n    #print(seats[3][0])\n    #print(seats[3][1])\n    #print(seats[3][2])\n    #print(seats[3][3])\n    #print(seats[0][4])\n    #print(seats[1][4])\n    #print(seats[2][4])\n    #print(seats[3][4])\n    #print(seats[0][5])\n    #print(seats[1][5])\n    #print(seats[2][5])\n    #print(seats[3][5])\n\n    handshakes = 0\n    for x in range(R):\n        for y in range(S):\n            #print(x, y)\n            if seats[x][y] == "o":\n                #print("o")\n                if x > 0:\n                    if y > 0:\n                        if seats[x-1][y-1] == "o":\n                            handshakes += 1\n                    if seats[x-1][y] == "o":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x-1][y+1] == "o":\n                            handshakes += 1\n                if y > 0:\n                    if seats[x][y-1] == "o":\n                        handshakes += 1\n                if y+1 < S:\n                    if seats[x][y+1] == "o":\n                        handshakes += 1\n                if x+1 < R:\n                    if y > 0:\n                        if seats[x+1][y-1] == "o":\n                            handshakes += 1\n                    if seats[x+1][y] == "o":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x+1][y+1] == "o":\n                            handshakes += 1\n    print(handshakes)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\nimport math\n\ndef readline():\n    return sys.stdin.readline().strip()\n\ndef main():\n    R, S = [int(x) for x in readline().split()]\n    seats = []\n    for _ in range(R):\n        seats.append(list(readline()))\n\n    handshakes = 0\n    for x in range(R):\n        for y in range(S):\n            #print(x, y)\n            if seats[x][y] == "o":\n                #print("o")\n                if x > 0:\n                    if y > 0:\n                        if seats[x-1][y-1] == "o":\n                            handshakes += 1\n                    if seats[x-1][y] == "o":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x-1][y+1] == "o":\n                            handshakes += 1\n                if y > 0:\n                    if seats[x][y-1] == "o":\n                        handshakes += 1\n                if y+1 < S:\n                    if seats[x][y+1] == "o":\n                        handshakes += 1\n                if x+1 < R:\n                    if y > 0:\n                        if seats[x+1][y-1] == "o":\n                            handshakes += 1\n                    if seats[x+1][y] == "o":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x+1][y+1] == "o":\n                            handshakes += 1\n    print(handshakes)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\nimport math\n\ndef readline():\n    return sys.stdin.readline().strip()\n\ndef main():\n    R, S = [int(x) for x in readline().split()]\n    seats = []\n    for _ in range(R):\n        seats.append(list(readline()))\n    #print(seats)\n    #print(R, S)\n    #print(seats[0][0])\n    #print(seats[0][1])\n    #print(seats[1][0])\n    #print(seats[1][1])\n    #print(seats[0][2])\n    #print(seats[1][2])\n    #print(seats[0][3])\n    #print(seats[1][3])\n    #print(seats[2][0])\n    #print(seats[2][1])\n    #print(seats[2][2])\n    #print(seats[2][3])\n    #print(seats[3][0])\n    #print(seats[3][1])\n    #print(seats[3][2])\n    #print(seats[3][3])\n    #print(seats[0][4])\n    #print(seats[1][4])\n    #print(seats[2][4])\n    #print(seats[3][4])\n    #print(seats[0][5])\n    #print(seats[1][5])\n    #print(seats[2][5])\n    #print(seats[3][5])\n\n    handshakes = 0\n    for x in range(R):\n        for y in range(S):\n            #print(x, y)\n            if seats[x][y] == "o":\n                #print("o")\n                if x > 0:\n                    if y > 0:\n                        if seats[x-1][y-1] == "o":\n                            handshakes += 1\n                    if seats[x-1][y] == "o":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x-1][y+1] == "o":\n                            handshakes += 1\n                if y > 0:\n                    if seats[x][y-1] == "o":\n                        handshakes += 1\n                if y+1 < S:\n                    if seats[x][y+1] == "o":\n                        handshakes += 1\n                if x+1 < R:\n                    if y > 0:\n                        if seats[x+1][y-1] == "o":\n                            handshakes += 1\n                    if seats[x+1][y] == "o":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x+1][y+1] == "o":\n                            handshakes += 1\n    print(handshakes)\n', '\nimport sys\nimport math\n\ndef readline():\n    return sys.stdin.readline().strip()\n\ndef main():\n    R, S = [int(x) for x in readline().split()]\n    seats = []\n    for _ in range(R):\n        seats.append(list(readline()))\n    #print(seats)\n    #print(R, S)\n    #print(seats[0][0])\n    #print(seats[0][1])\n    #print(seats[1][0])\n    #print(seats[1][1])\n    #print(seats[0][2])\n    #print(seats[1][2])\n    #print(seats[0][3])\n    #print(seats[1][3])\n    #print(seats[2][0])\n    #print(seats[2][1])\n    #print(seats[2][2])\n    #print(seats[2][3])\n    #print(seats[3][0])\n    #print(seats[3][1])\n    #print(seats[3][2])\n    #print(seats[3][3])\n    #print(seats[0][4])\n    #print(seats[1][4])\n    #print(seats[2][4])\n    #print(seats[3][4])\n    #print(seats[0][5])\n    #print(seats[1][5])\n    #print(seats[2][5])\n    #print(seats[3][5])\n\n    handshakes = 0\n    for x in range(R):\n        for y in range(S):\n            #print(x, y)\n            if seats[x][y] == "o":\n                #print("o")\n                if x > 0:\n                    if y > 0:\n                        if seats[x-1][y-1] == "o":\n                            handshakes += 1\n                    if seats[x-1][y] == "o":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x-1][y+1] == "o":\n                            handshakes += 1\n                if y > 0:\n                    if seats[x][y-1] == "o":\n                        handshakes += 1\n                if y+1 < S:\n                    if seats[x][y+1] == "o":\n                        handshakes += 1\n                if x+1 < R:\n                    if y > 0:\n                        if seats[x+1][y-1] == "o":\n                            handshakes += 1\n                    if seats[x+1][y] == "o":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x+1][y+1] == "o":\n                            handshakes += 1\n    print(handshakes)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\nimport math\n\ndef readline():\n    return sys.stdin.readline().strip()\n\n\ndef main():\n    R, S = [int(x) for x in readline().split()]\n    seats = [list(readline()) for _ in range(R)]\n\n    handshakes = 0\n    for x in range(R):\n        for y in range(S):\n            if seats[x][y] == "o":\n                if x > 0:\n                    if y > 0:\n                        if seats[x-1][y-1] == "o":\n                            handshakes += 1\n                    if seats[x-1][y] == "o":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x-1][y+1] == "o":\n                            handshakes += 1\n                if y > 0:\n                    if seats[x][y-1] == "o":\n                        handshakes += 1\n                if y+1 < S:\n                    if seats[x][y+1] == "o":\n                        handshakes += 1\n                if x+1 < R:\n                    if y > 0:\n                        if seats[x+1][y-1] == "o":\n                            handshakes += 1\n                    if seats[x+1][y] == "o":\n                        handshakes += 1\n                    if y+1 < S:\n                        if seats[x+1][y+1] == "o":\n                            handshakes += 1\n    print(handshakes)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\nimport math\n\ndef readline():\n    return sys.stdin.readline().strip()\n\ndef main():\n    R, S = [int(x) for x in readline().split()]\n    seats = []\n    for _ in range(R):\n        seats.append(list(readline()))\n\n    handshakes = 0\n    for x in range(R):\n        for y in range(S):\n            if seats[x][y] == "o":\n                if x > 0:\n                    if y > 0:\n                        if seats[x-1][y-1] == "o":\n                            handshakes += 1\n                    if seats[x-1][y] == "o":\n                        handshakes += 1\n                    if y + 1 < S:\n                        if seats[x-1][y+1] == "o":\n                            handshakes += 1\n                if y > 0:\n                    if seats[x][y-1] == "o":\n                        handshakes += 1\n                if y + 1 < S:\n                    if seats[x][y+1] == "o":\n                        handshakes += 1\n                if x + 1 < R:\n                    if y > 0:\n                        if seats[x+1][y-1] == "o":\n                            handshakes += 1\n                    if seats[x+1][y] == "o":\n                        handshakes += 1\n                    if y + 1 < S:\n                        if seats[x+1][y+1] == "o":\n                            handshakes += 1\n    print(handshakes)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-16 15:09:14.600264 size on output set 6
