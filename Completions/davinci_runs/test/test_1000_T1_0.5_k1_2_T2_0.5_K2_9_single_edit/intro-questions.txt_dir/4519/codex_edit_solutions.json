["\n\nn,k = map(int, input().split())\ns = list(input())\nfor j in range(n-1):\n    if s[j] == '1' and s[j+1] == '0' and k > 0:\n        s[j],s[j+1] = s[j+1],s[j]\n        k -= 1\nif k > 0:\n    for j in range(n-1):\n        if s[j] == '0' and s[j+1] == '1' and k > 0:\n            s[j],s[j+1] = s[j+1],s[j]\n            k -= 1\nprint(''.join(s))\n", "\n\ndef solve(n, k, s):\n    s = list(map(int, s))\n    while k > 0:\n        changed = False\n        for i in range(n-1):\n            if s[i] > s[i+1]:\n                s[i], s[i+1] = s[i+1], s[i]\n                k -= 1\n                changed = True\n                break\n        if not changed:\n            break\n    return \"\".join(s)\n\nfor _ in range(int(input())):\n    n, k = map(int, input().split())\n    s = input()\n    print(solve(n, k, s))\n", "\n\ndef solve(n, k, s):\n    s = list(s)\n    while k > 0:\n        changed = False\n        for i in range(n-1):\n            if s[i] > s[i+1]:\n                s[i], s[i+1] = s[i+1], s[i]\n                k -= 1\n                changed = True\n                break\n        if not changed:\n            break\n    return \"\".join(s)\n\nfor _ in range(int(input())):\n    n, k = map(int, input().split())\n    s = input()\n\n    print(solve(n, k, s))\n", "\n\nq = int(input())\n\nfor i in range(q):\n    n,k = map(int, input().split())\n    s = list(map(int, input()))\n    for j in range(n-1):\n        if s[j] == 1 and s[j+1] == 0 and k > 0:\n            s[j],s[j+1] = s[j+1],s[j]\n            k -= 1\n    if k > 0:\n        for j in range(n-1):\n            if s[j] == 0 and s[j+1] == 1 and k > 0:\n                s[j],s[j+1] = s[j+1],s[j]\n                k -= 1\n    print(''.join(s))\n", "\n\nq = int(input())\n\nfor i in range(q):\n    n,k = map(int, input().split())\n    s = list(input())\n    if k > 0 and s[0] == '1':\n        for j in range(n):\n            if s[j] == '1' and s[j+1] == '0' and k > 0:\n                s[j],s[j+1] = s[j+1],s[j]\n    if k > 0:\n        for j in range(n):\n            if s[j] == '0' and s[j+1] == '1' and k > 0:\n                s[j],s[j+1] = s[j+1],s[j]\n                k -= 1\n    if k > 0:\n        print(-1)\n        continue\n                k -= 1\n    print(''.join(s))\n", "\n\nq = int(input()) # number of queries\n\nfor i in range(q):\n    n,k = map(int, input().split()) # n = number of digits, k = number of swaps\n    s = list(input()) # s = list of digits\n    for j in range(n-1):\n        if s[j] == '1' and s[j+1] == '0' and k > 0:\n            s[j],s[j+1] = s[j+1],s[j]\n            k -= 1\n    if k > 0:\n        for j in range(n-1):\n            if s[j] == '0' and s[j+1] == '1' and k > 0:\n                s[j],s[j+1] = s[j+1],s[j]\n                k -= 1\n    print(''.join(s))\n", "q = int(input())\n\nfor i in range(q):\n    n,k = map(int, input().split())\n    s = list(input())\n    for j in range(n-1):\n        if s[j] == '1' and s[j+1] == '0' and k > 0:\n            s[j],s[j+1] = s[j+1],s[j]\n            k -= 1\n    if k > 0:\n        for j in range(n-1):\n            if s[j] == '0' and s[j+1] == '1' and k > 0:\n                s[j],s[j+1] = s[j+1],s[j]\n                k -= 1\n    print(''.join(s))\n", "\ndef solve(n, s):\n    if n % 2 == 1:\n        return -1\n    else:\n        s = list(s)\n        for i in range(n//2):\n            j = n-i-1\n            if s[i] != s[j]:\n                return -1\n        return n//2\n    \nfor _ in range(int(input())): \n    n = int(input())\n    s = input().strip()\n    print(solve(n, s))\n", "\n\ndef solve(n, k, s):\n    s = list(s)\n    while k > 0:\n        changed = False\n        for i in range(n-1):\n            if s[i] > s[i+1]:\n                s[i], s[i+1] = s[i+1], s[i]\n                k -= 1\n                changed = True\n                break\n        if not changed or k == 0:\n            break\n    return \"\".join(s)\n\nfor _ in range(int(input())):\n    n, k = map(int, input().split())\n    s = input()\n    print(solve(n, k, s))\n", "\ndef solve(n, k, s):\n    s = list(s)\n    while k > 0:\n        changed = False\n        for i in range(n-1):\n            if s[i] > s[i+1]:\n                s[i], s[i+1] = s[i+1], s[i]\n                k -= 1\n                changed = True\n                break\n        if not changed:\n            break\n    return \"\".join(s)\n\nfor _ in range(int(input())):\n    n, k = map(int, input().split())\n    s = input()\n    print(solve(n, k, s))\n", "\nprint(\"hello\")\n", "\nq = int(input())\n\nfor i in range(q):\n    n,k = map(int, input().split())\n    s = list(input())\n    for j in range(n-1):\n        if s[j] == '1' and s[j+1] == '0' and k > 0:\n            s[j],s[j+1] = s[j+1],s[j]\n            k -= 1\n    if k > 0:\n        for j in range(n-1):\n            if s[j] == '0' and s[j+1] == '1' and k > 0:\n                s[j],s[j+1] = s[j+1],s[j]\n                k -= 1\n    print(''.join(s))\n", "\ndef solve(n, k, s):\n    s = list(s)\n    while k > 0:\n        changed = False\n        for i in range(n-1):\n            if s[i] < s[i+1]:\n                s[i], s[i+1] = s[i+1], s[i]\n                k -= 1\n                changed = True\n                break\n        if not changed:\n            break\n    return \"\".join(s)\n\nfor _ in range(int(input())):\n    n, k = map(int, input().split())\n    s = input()\n    print(solve(n, k, s))\n", "\nq = int(input())\n\nfor i in range(q):\n    n, k = map(int, input().split())\n    s = list(input())\n    for j in range(n - 1):\n        if s[j] == '1' and s[j + 1] == '0' and k > 0:\n            s[j], s[j + 1] = s[j + 1], s[j]\n            k -= 1\n    if k > 0:\n        for j in range(n - 1):\n            if s[j] == '0' and s[j + 1] == '1' and k > 0:\n                s[j], s[j + 1] = s[j + 1], s[j]\n                k -= 1\n    print(''.join(s))\n", "\n\ndef solve(n, k, s):\n    s = list(s)\n    while k > 0:\n        changed = False\n        for i in range(n - 1):\n            if s[i] > s[i + 1]:\n                s[i], s[i + 1] = s[i + 1], s[i]\n                k -= 1\n                changed = True\n                break\n        if not changed:\n            break\n    return \"\".join(s)\n\nfor _ in range(int(input())):\n    n, k = map(int, input().split())\n    s = input()\n    print(solve(n, k, s))\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Mon May 13 22:39:28 2019\n\n@author: suryakantkumar\n\"\"\"\n\n'''\nProblem : Given a string of lowercase letters in the range ascii[a-z], determine a character that can be removed to make the string a palindrome. There may be more than one solution, but any will do. \nFor example, if your string is \"bcbc\", you can either remove 'b' at index  or 'c' at index . If the word is already a palindrome or there is no solution, return -1. Otherwise, return the index of a character to remove.\n\nFunction Description : Complete the palindromeIndex function in the editor below. It must return the index of the character to remove or .\npalindromeIndex has the following parameter(s):\ns: a string to analyze\n\nInput Format : The first line contains an integer , the number of queries. \nEach of the next  lines contains a query string .\n\nConstraints : \nAll characters are in the range ascii[a-z].\n\nOutput Format : Print an integer denoting the zero-indexed position of the character to remove to make  a palindrome. If  is already a palindrome or no such character exists, print .\n\nSample Input : \n3\naaab\nbaa\naaa\n\nSample Output : \n3\n0\n-1\n\n'''\n\nimport os\n\ndef palindromeIndex(s):\n    if s == s[::-1]:\n        return -1\n    \n    for i in range(len(s)//2):\n        if s[i] != s[len(s)-1-i]:\n            if s[i] == s[len(s)-2-i]:\n                return len(s)-1-i\n            elif s[i+1] == s[len(s)-1-i]:\n                return i\n    return -1\n\nif __name__ == '__main__':\n    fptr = open(os.environ['OUTPUT_PATH'], 'w')\n    q = int(input())\n    for q_itr in range(q):\n        s = input()\n        result = palindromeIndex(s)\n        fptr.write(str(result) + '\\n')\n    fptr.close()\n\n'''\n# Other Solution\n\ndef solve(n, k, s):\n    s = list(s)\n    while k > 0:\n        changed = False\n        for i in range(n-1):\n            if s[i] > s[i+1]:\n                s[i], s[i+1] = s[i+1], s[i]\n                k -= 1\n                changed = True\n                break\n        if not changed:\n            break\n    return \"\".join(s)\n\nfor _ in range(int(input())):\n    n, k = map(int, input().split())\n    s = input()\n'''\n    print(solve(n, k, s))\n", "\n\nq = int(input())\n\nfor i in range(q):\n    n, k = map(int, input().split())\n    s = list(input())\n    for j in range(n - 1):\n        if s[j] == '1' and s[j + 1] == '0' and k > 0:\n            s[j], s[j + 1] = s[j + 1], s[j]\n            k -= 1\n    if k > 0:\n        for j in range(n - 1):\n            if s[j] == '0' and s[j + 1] == '1' and k > 0:\n                s[j], s[j + 1] = s[j + 1], s[j]\n                k -= 1\n    print(''.join(s))\n"]