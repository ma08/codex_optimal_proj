["\nimport sys\nimport math\n\ns, v1, v2 = [int(i) for i in sys.stdin.readline().split()]\n\nif s % v2 == 0:\n    print(0, s // v2)\nelif s % v1 == 0:\n    print(s // v1, 0)\nelif s < v1:\n    print(1, 0)\nelse:\n    x = s // v1\n    y = s % v1 // v2\n    while s % v1 != 0 and s % v1 < v2:\n        x -= 1\n        y = s % v1 // v2\n    if s % v1 != 0:\n        print(x, y + 1)\n    else:\n        print(x, y)\n", "\n\nimport sys\n\n\ndef main():\n    s, v1, v2 = map(int, sys.stdin.readline().split())\n    if s % v1 == 0:\n        print(s // v1, 0)\n    elif s % v2 == 0:\n        print(0, s // v2)\n    elif s % v2 == v1 % v2:\n        print(s // v1, (s % v1) // v2)\n    else:\n        print(\"Impossible\")\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    s, v1, v2 = map(int,sys.stdin.readline().split())\n    if s % v1 == 0:\n        print(s//v1,0)\n    elif s % v2 == 0:\n        print(0,s//v2)\n    elif s % v2 == v1 % v2:\n        print(s//v1,(s%v1)//v2)\n    else:\n        print(\"Impossible\")        \n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nimport math\n\n# Grab the volume of the shipment and the volumes of the two types of bottles\nshipment_volume, bottle_one_volume, bottle_two_volume = [int(i) for i in sys.stdin.readline().split()]\n\n# If the shipment volume is greater than the volume of a bottle one, or if the\n# volume of a bottle one is not greater than the volume of a bottle two, it is\n# impossible to store the oil\nif (shipment_volume > bottle_one_volume) or (bottle_one_volume <= bottle_two_volume):\n    print(\"Impossible\")\n    sys.exit(0)\n\n# Otherwise, the amount of oil that can be stored in a bottle one is equal to\n# the amount of oil that can be stored in a bottle two plus the difference\n# between the volume of a bottle one and the volume of a bottle two\nbottle_one_amount = (bottle_two_volume + (bottle_one_volume - bottle_two_volume))\n\n# The number of bottles of size one needed to store the oil is equal to the\n# shipment volume divided by the amount of oil that can be stored in a bottle\n# one. The number of bottles of size two needed to store the oil is equal to\n# the remainder of the shipment volume divided by the amount of oil that can be\n# stored in a bottle one divided by the volume of a bottle two\nbottle_one_count = math.floor(shipment_volume / bottle_one_amount)\nbottle_two_count = math.floor((shipment_volume % bottle_one_amount) / bottle_two_volume)\n\n# Print the number of bottles of size one and the number of bottles of size two\nprint(str(bottle_one_count) + \" \" + str(bottle_two_count))\n", "\nimport sys\n\ns,v1,v2 = map(int,sys.stdin.readline().split())\n\n# if s is divisible by v1, then we can just use s/v1 v1 bottles\nif s % v1 == 0:\n    print(s//v1, 0)\n    sys.exit(0)\n\n# if s is not divisible by v1, then we will need to use some v2 bottles\nv1_bottles = s//v1\nv2_bottles = 0\n\n# if v1_bottles * v1 + v2_bottles * v2 = s, then we are done\nwhile v1_bottles * v1 + v2_bottles * v2 < s:\n    # if we have used all v1 bottles, but still not enough v2 bottles, then we cannot meet the requirements\n    if v1_bottles == 0:\n        print(\"Impossible\")\n        sys.exit(0)\n    # remove one v1 bottle, and add one v2 bottle\n    v1_bottles -= 1\n    v2_bottles += 1\n\nprint(v1_bottles,v2_bottles)\n", "import sys\n\ndef main():\n    s, v1, v2 = map(float, sys.stdin.readline().split())\n    if s % (v1 + v2) == 0:\n        print(s // (v1 + v2), 0)\n    elif s % v2 == s % (v1 + v2):\n        print(s // (v1 + v2), (s % (v1 + v2)) // v2)\n    else:\n        print(\"Impossible\")\n\nif __name__ == '__main__':\n    main()\n", "\n#------------------------------------------------------------------------------\n\nimport sys\n\n#------------------------------------------------------------------------------\n\ndef main():\n    \"\"\"\n    Main program.\n    \"\"\"\n    # Read the input\n    s, v1, v2 = [int(x) for x in sys.stdin.read().split()]\n\n    # If the smaller bottle can't hold anything, then there is no solution\n    if v2 == 0:\n        print(\"Impossible\")\n        return\n\n    # If the larger bottle is smaller than the shipment, then there is no solution\n    if v1 < s:\n        print(\"Impossible\")\n        return\n\n    # If the larger bottle is the same size as the shipment, then we only need one bottle\n    if v1 == s:\n        print(\"1 0\")\n        return\n\n    # If the smaller bottle is bigger than the shipment, then we need to use the smaller bottle\n    if v2 >= s:\n        print(\"0 %d\" % s//v2)\n        return\n\n    # If we get here, then we have to use both bottles. We'll start by filling the larger bottle\n    large_bottles = s // v1\n    small_bottles = 0\n    remaining = s - large_bottles * v1\n\n    # Now we'll fill the smaller bottles with whatever is left\n    small_bottles = remaining // v2\n    remaining = remaining - small_bottles * v2\n\n    # If there is still some left over, we need to add another large bottle\n    if remaining > 0:\n        large_bottles += 1\n\n    # Print the result\n    print(\"%d %d\" % (large_bottles, small_bottles))\n\n#------------------------------------------------------------------------------\n\nif __name__ == \"__main__\":\n    main()\n", "#SOLUTION:\n\ns, v1, v2 = input().split()\ns,v1,v2=int(s),int(v1),int(v2)\nif s%v2==0:\n print(s//v2,0)\nelif s%v1==0:\n print(0,s//v1)\nelif s%(v1-v2)==0:\n print(s//(v1-v2),0)\nelif s%(v1-v2)<=v2:\n print(s//(v1-v2)-1,1)\nelse :\n print(\"Impossible\")\n", "\n\n\nimport sys\n\ndef main():\n    s, v1, v2 = [int(x) for x in sys.stdin.readline().split()]\n\n    if s < v1 and s < v2:\n        print('Impossible')\n        return\n\n    n1 = s // v1\n    n2 = (s - (n1 * v1)) // v2\n    while n1 >= 0 and n2 * v2 < (s - (n1 * v1)):\n        n2 += 1\n        if n2 * v2 > (s - (n1 * v1)):\n            n1 -= 1\n            n2 = (s - (n1 * v1)) // v2\n\n    if n1 * v1 + n2 * v2 != s:\n        print('Impossible')\n        return\n\n    print(n1, n2)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n\n# Grab the volume of the shipment and the volumes of the two types of bottles\nshipment_volume, bottle_one_volume, bottle_two_volume = [int(i) for i in sys.stdin.readline().split()]\n\n# If the shipment volume is greater than the volume of a bottle one, or if the volume of a bottle one is not greater than the volume of a bottle two, it is impossible to store the oil\nif (shipment_volume > bottle_one_volume) or (bottle_one_volume <= bottle_two_volume):\n    print(\"Impossible\")\n    sys.exit(0)\n\n# Otherwise, the amount of oil that can be stored in a bottle one is equal to the amount of oil that can be stored in a bottle two plus the difference between the volume of a bottle one and the volume of a bottle two\nbottle_one_amount = (bottle_two_volume + (bottle_one_volume - bottle_two_volume))\n\n# The number of bottles of size one needed to store the oil is equal to the shipment volume divided by the amount of oil that can be stored in a bottle one. The number of bottles of size two needed to store the oil is equal to the remainder of the shipment volume divided by the amount of oil that can be stored in a bottle one divided by the volume of a bottle two\nbottle_one_count = math.floor(shipment_volume / bottle_one_amount)\nbottle_two_count = math.floor((shipment_volume % bottle_one_amount) / bottle_two_volume)\n\n# Print the number of bottles of size one and the number of bottles of size two.\nprint(str(bottle_one_count) + \" \" + str(bottle_two_count))\n", "#!/usr/bin/env python3\n\nimport sys\nimport math\n\n# Grab the volume of the shipment and the volumes of the two types of bottles\nshipment_volume, bottle_one_volume, bottle_two_volume = [int(i) for i in sys.stdin.readline().split()]\n\n# If the shipment volume is greater than the volume of a bottle one, or if the\n# volume of a bottle one is not greater than the volume of a bottle two, it is\n# impossible to store the oil\nif (shipment_volume > bottle_one_volume) or (bottle_one_volume <= bottle_two_volume):\n    print(\"Impossible\")\n    sys.exit(0)\n\n# Otherwise, the amount of oil that can be stored in a bottle one is equal to\n# the amount of oil that can be stored in a bottle two plus the difference\n# between the volume of a bottle one and the volume of a bottle two\nbottle_one_amount = (bottle_two_volume + (bottle_one_volume - bottle_two_volume))\n\n# The number of bottles of size one needed to store the oil is equal to the\n# shipment volume divided by the amount of oil that can be stored in a bottle\n# one. The number of bottles of size two needed to store the oil is equal to\n# the remainder of the shipment volume divided by the amount of oil that can be\n# stored in a bottle one divided by the volume of a bottle two\nbottle_one_count = math.floor(shipment_volume / bottle_one_amount)\nbottle_two_count = math.floor((shipment_volume % bottle_one_amount) / bottle_two_volume)\n\n# Print the number of bottles of size one and the number of bottles of size two\nprint(str(bottle_one_count) + \" \" + str(bottle_two_count))\n", "import sys\n\ndef main():\n    s, v1, v2 = [int(x) for x in sys.stdin.readline().split()]\n\n    if s % v2 != 0:\n        print(\"Impossible\")\n        return\n\n    ans = s // v2\n    v1_cnt = 0\n    while ans > 0:\n        if ans % v1 != 0:\n            v1_cnt += 1\n            ans -= v2\n        else:\n            break\n\n    print(ans // v1, v1_cnt)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\ns,v1,v2 = map(int,sys.stdin.readline().split())\n\n# if s is divisible by v1, then we can just use s/v1 v1 bottles\nif s % v1 == 0:\n    print(s//v1, 0)\n    sys.exit(0)\n# if s is not divisible by v1, then we will need to use some v2 bottles\nv1_bottles = s//v1\nv2_bottles = 0\n# if v1_bottles * v1 + v2_bottles * v2 = s, then we are done\nwhile v1_bottles * v1 + v2_bottles * v2 < s:\n    # if we have used all v1 bottles, but still not enough v2 bottles, then we cannot meet the requirements\n    if v1_bottles == 0:\n        print(\"Impossible\")\n        sys.exit(0)\n    # remove one v1 bottle, and add one v2 bottle\n    v1_bottles -= 1\n    v2_bottles += 1\nprint(v1_bottles,v2_bottles)\n", "\n#------------------------------------------------------------------------------\n\nimport sys\n\n#------------------------------------------------------------------------------\n\ndef main():\n    \"\"\"\n    Main program.\n    \"\"\"\n    # Read the input\n    s, v1, v2 = [int(x) for x in sys.stdin.read().split()]\n\n    # If the smaller bottle can't hold anything, then there is no solution\n    if v2 == 0:\n        print(\"Impossible\")\n        return\n\n    # If the larger bottle is smaller than the shipment, then there is no solution\n    if v1 < s:\n        print(\"Impossible\")\n        return\n\n    # If the larger bottle is the same size as the shipment, then we only need one bottle\n    if v1 == s:\n        print(\"1 0\")\n        return\n\n    # If the smaller bottle is bigger than the shipment, then we need to use the smaller bottle\n    if v2 >= s:\n        print(\"0 {}\".format(s // v2))\n        return\n\n    # If we get here, then we have to use both bottles. We'll start by filling the larger bottle\n    large_bottles = s // v1\n    small_bottles = 0\n    remaining = s - large_bottles * v1\n\n    # Now we'll fill the smaller bottles with whatever is left\n    small_bottles = remaining // v2\n    remaining = remaining - small_bottles * v2\n\n    # If there is still some left over, we need to add another large bottle\n    if remaining > 0:\n        large_bottles += 1\n\n    # Print the result\n    print(\"{} {}\".format(large_bottles, small_bottles))\n\n#------------------------------------------------------------------------------\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ns,v1,v2 = map(int,sys.stdin.readline().split())\n\n# if s is divisible by v1, then we can just use s/v1 v1 bottles\nif s % v1 == 0:\n    print(s//v1, 0)\n    sys.exit(0)\n\n# if s is not divisible by v1, then we will need to use some v2 bottles\nv1_bottles = s//v1\nv2_bottles = 0\n\n# if v1_bottles * v1 + v2_bottles * v2 >= s, then we are done\nwhile v1_bottles * v1 + v2_bottles * v2 >= s:\n    # if we have used all v1 bottles, but still not enough v2 bottles, then we cannot meet the requirements\n    if v1_bottles == 0:\n        print(\"Impossible\")\n        sys.exit(0)\n    # remove one v1 bottle, and add one v2 bottle\n    v1_bottles -= 1\n    v2_bottles += 1\n\nprint(v1_bottles,v2_bottles)\n", "\n\n\nimport sys\n\ndef main():\n    s, v1, v2 = map(int, sys.stdin.readline().split())\n    if s % v1 == 0:\n        print(s // v1, 0)\n    elif s % v2 == 0:\n        print(0, s // v2)\n    elif s % v2 == v1 % v2:\n        print(s // v1, (s % v1) // v2)\n    else:\n        print(\"Impossible\")\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    s, v1, v2 = map(int, sys.stdin.readline().split())\n    if s % v1 == 0: # \u0435\u0441\u043b\u0438 \u0447\u0438\u0441\u043b\u043e \u0434\u0435\u043b\u0438\u0442\u0441\u044f \u043d\u0430 \u043f\u0435\u0440\u0432\u043e\u0435 \u0447\u0438\u0441\u043b\u043e\n        print(s // v1, 0) # \u043f\u0435\u0447\u0430\u0442\u0430\u0435\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0430\u0437 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430 \u0438 \u043d\u043e\u043b\u044c\n    elif s % v2 == 0: # \u0435\u0441\u043b\u0438 \u0447\u0438\u0441\u043b\u043e \u0434\u0435\u043b\u0438\u0442\u0441\u044f \u043d\u0430 \u0432\u0442\u043e\u0440\u043e\u0435 \u0447\u0438\u0441\u043b\u043e\n        print(0, s // v2) # \u043f\u0435\u0447\u0430\u0442\u0430\u0435\u043c \u043d\u043e\u043b\u044c \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0430\u0437 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430\n    elif s % v2 == v1 % v2: # \u0435\u0441\u043b\u0438 \u043e\u0441\u0442\u0430\u0442\u043e\u043a \u043e\u0442 \u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043d\u0430 \u043f\u0435\u0440\u0432\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0440\u0430\u0432\u0435\u043d \u043e\u0441\u0442\u0430\u0442\u043a\u0443 \u043e\u0442 \u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043d\u0430 \u0432\u0442\u043e\u0440\u043e\u0435 \u0447\u0438\u0441\u043b\u043e\n        print(s // v1, (s % v1) // v2) # \u043f\u0435\u0447\u0430\u0442\u0430\u0435\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0430\u0437 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430 \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0430\u0437 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430\n    else:\n        print(\"Impossible\") # \u0438\u043d\u0430\u0447\u0435 \u043f\u0435\u0447\u0430\u0442\u0430\u0435\u043c \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    s, v1, v2 = [int(x) for x in sys.stdin.readline().split()]\n\n    if s % v2 != 0 or v1 >= v2:\n        print(\"Impossible\")\n        return\n\n    ans = s // v2\n    v1_cnt = 0\n    while ans > 0:\n        if ans % v1 != 0:\n            v1_cnt += 1\n            ans -= v2\n        else:\n            break\n\n    print(ans // v1, v1_cnt)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys, os, math\n\n# Grab the volume of the shipment and the volumes of the two types of bottles\nshipment_volume, bottle_one_volume, bottle_two_volume = [int(i) for i in sys.stdin.readline().split()] \n\n# If the shipment volume is greater than the volume of a bottle one, or if the\n# volume of a bottle one is not greater than the volume of a bottle two, it is\n# impossible to store the oil\nif (shipment_volume > bottle_one_volume) or (bottle_one_volume <= bottle_two_volume):\n    print(\"Impossible\")\n    sys.exit(0)\n\n# Otherwise, the amount of oil that can be stored in a bottle one is equal to\n# the amount of oil that can be stored in a bottle two plus the difference\n# between the volume of a bottle one and the volume of a bottle two\nbottle_one_amount = (bottle_two_volume + (bottle_one_volume - bottle_two_volume))\n\n# The number of bottles of size one needed to store the oil is equal to the\n# shipment volume divided by the amount of oil that can be stored in a bottle\n# one. The number of bottles of size two needed to store the oil is equal to\n# the remainder of the shipment volume divided by the amount of oil that can be\n# stored in a bottle one divided by the volume of a bottle two\nbottle_one_count = math.floor(shipment_volume / bottle_one_amount)\nbottle_two_count = math.floor((shipment_volume % bottle_one_amount) / bottle_two_volume)\n\n# Print the number of bottles of size one and the number of bottles of size two\nprint(str(bottle_one_count) + \" \" + str(bottle_two_count))\n", "\n\nimport sys\nimport math\n\n# Grab the volume of the shipment and the volumes of the two types of bottles\nshipment_volume, bottle_one_volume, bottle_two_volume = [int(i) for i in sys.stdin.readline().split(\" \")]\n\n# If the shipment volume is greater than the volume of a bottle one, or if the\n# volume of a bottle one is not greater than the volume of a bottle two, it is\n# impossible to store the oil\nif (shipment_volume > bottle_one_volume) or (bottle_one_volume <= bottle_two_volume):\n    print(\"Impossible\")\n    sys.exit(0)\n\n# Otherwise, the amount of oil that can be stored in a bottle one is equal to\n# the amount of oil that can be stored in a bottle two plus the difference\n# between the volume of a bottle one and the volume of a bottle two\nbottle_one_amount = (bottle_two_volume + (bottle_one_volume - bottle_two_volume))\n\n# The number of bottles of size one needed to store the oil is equal to the\n# shipment volume divided by the amount of oil that can be stored in a bottle\n# one. The number of bottles of size two needed to store the oil is equal to\n# the remainder of the shipment volume divided by the amount of oil that can be\n# stored in a bottle one divided by the volume of a bottle two\nbottle_one_count = math.floor(shipment_volume / bottle_one_amount)\nbottle_two_count = math.floor((shipment_volume % bottle_one_amount) / bottle_two_volume)\n\n# Print the number of bottles of size one and the number of bottles of size two\nprint(str(bottle_one_count) + \" \" + str(bottle_two_count))\n", "#------------------------------------------------------------------------------\n\nimport sys\n\n#------------------------------------------------------------------------------\n\ndef main():\n    \"\"\"\n    Main program.\n    \"\"\"\n    # Read the input\n    s, v1, v2 = [int(x) for x in sys.stdin.read().split()]\n\n    # If the smaller bottle can't hold anything, then there is no solution\n    if v2 == 0:\n        print(\"Impossible\")\n        return\n\n    # If the larger bottle is smaller than the shipment, then there is no solution\n    if v1 < s:\n        print(\"Impossible\")\n        return\n\n    # If the larger bottle is the same size as the shipment, then we only need one bottle\n    if v1 == s:\n        print(\"1 0\")\n        return\n\n    # If the smaller bottle is bigger than the shipment, then we need to use the smaller bottle\n    if v2 >= s:\n        print(\"0 {}\".format(s//v2))\n        return\n\n    # If we get here, then we have to use both bottles. We'll start by filling the larger bottle\n    large_bottles = s // v1\n    small_bottles = 0\n    remaining = s - large_bottles * v1\n\n    # Now we'll fill the smaller bottles with whatever is left\n    small_bottles = remaining // v2\n    remaining = remaining - small_bottles * v2\n\n    # If there is still some left over, we need to add another large bottle\n    if remaining > 0:\n        large_bottles += 1\n\n    # Print the result\n    print(\"{} {}\".format(large_bottles, small_bottles))\n\n#------------------------------------------------------------------------------\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ns, v1, v2 = map(int, sys.stdin.readline().split())\n\n# if s is divisible by v1, then we can just use s/v1 v1 bottles\nif s % v1 == 0:\n    print(s // v1, 0)\n    sys.exit(0)\n\n# if s is not divisible by v1, then we will need to use some v2 bottles\nv1_bottles = s // v1\nv2_bottles = 0\n\n# if v1_bottles * v1 + v2_bottles * v2 = s, then we are done\nwhile v1_bottles * v1 + v2_bottles * v2 < s:\n    # if we have used all v1 bottles, but still not enough v2 bottles, then we cannot meet the requirements\n    if v1_bottles == 0:\n        print(\"Impossible\")\n        sys.exit(0)\n    # remove one v1 bottle, and add one v2 bottle\n    v1_bottles -= 1\n    v2_bottles += 1\n\nprint(v1_bottles, v2_bottles)\n", "\nimport sys\n\ndef main():\n    s, v1, v2 = [int(x) for x in sys.stdin.readline().split()]\n\n    if s < v1 and s < v2:\n        print('Impossible')\n        return\n\n    n1 = s // v1\n    n2 = (s - (n1 * v1)) // v2\n    while n1 >= 0 and n2 * v2 < (s - (n1 * v1)):\n        n2 += 1\n        if n2 * v2 > (s - (n1 * v1)):\n            n1 -= 1\n            n2 = (s - (n1 * v1)) // v2\n\n    if n1 * v1 + n2 * v2 != s:\n        print('Impossible')\n        return\n\n    print(n1, n2)\n\n\nif __name__ == '__main__':\n    main()\n", "\n#------------------------------------------------------------------------------\n\nimport sys\n\n#------------------------------------------------------------------------------\n\ndef main():\n    \"\"\"\n    Main program.\n    \"\"\"\n    # Read the input\n    s, v1, v2 = [int(x) for x in sys.stdin.read().split()]\n\n    # If the smaller bottle can't hold anything, then there is no solution\n    if v2 == 0:\n        print(\"Impossible\")\n        return\n\n    # If the larger bottle is smaller than the shipment, then there is no solution\n    if v1 < s:\n        print(\"Impossible\")\n        return\n\n    # If the larger bottle is the same size as the shipment, then we only need one bottle\n    if v1 == s:\n        print(\"1 0\")\n        return\n\n    # If the smaller bottle is bigger than the shipment, then we need to use the smaller bottle\n    if v2 >= s:\n        print(\"0 {}\".format(s//v2))\n        return\n\n    # If we get here, then we have to use both bottles. We'll start by filling the larger bottle\n    large_bottles = s // v1 # integer division\n    small_bottles = 0\n    remaining = s - large_bottles * v1\n\n    # Now we'll fill the smaller bottles with whatever is left\n    small_bottles = remaining // v2 # integer division\n    remaining = remaining - small_bottles * v2\n\n    # If there is still some left over, we need to add another large bottle\n    if remaining > 0:\n        large_bottles += 1\n\n    # Print the result\n    print(\"{} {}\".format(large_bottles, small_bottles))\n\n#------------------------------------------------------------------------------\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    s, v1, v2 = (int(x) for x in sys.stdin.readline().split())\n\n    if s < v1 and s < v2:\n        print('Impossible')\n        return\n\n    n1 = s // v1\n    n2 = (s - (n1 * v1)) // v2\n    while n1 >= 0 and n2 * v2 < (s - (n1 * v1)):\n        n2 += 1\n        if n2 * v2 > (s - (n1 * v1)):\n            n1 -= 1\n            n2 = (s - (n1 * v1)) // v2\n\n    if n1 * v1 + n2 * v2 != s:\n        print('Impossible')\n        return\n\n    print(n1, n2)\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nimport math\n\ns, v1, v2 = [int(i) for i in sys.stdin.readline().split()]\nprint(s // v1, s // v2)\n", "# This is a comment\n\nimport sys\nimport math\n\n# Grab the volume of the shipment and the volumes of the two types of bottles\nshipment_volume, bottle_one_volume, bottle_two_volume = [int(i) for i in sys.stdin.readline().split()]\n\n# If the shipment volume is greater than the volume of a bottle one, or if the\n# volume of a bottle one is not greater than the volume of a bottle two, it is\n# impossible to store the oil\nif (shipment_volume > bottle_one_volume) or (bottle_one_volume <= bottle_two_volume):\n    print(\"Impossible\")\n    sys.exit(0)\n\n# Otherwise, the amount of oil that can be stored in a bottle one is equal to\n# the amount of oil that can be stored in a bottle two plus the difference\n# between the volume of a bottle one and the volume of a bottle two\nbottle_one_amount = (bottle_two_volume + (bottle_one_volume - bottle_two_volume))\n\n# The number of bottles of size one needed to store the oil is equal to the\n# shipment volume divided by the amount of oil that can be stored in a bottle\n# one. The number of bottles of size two needed to store the oil is equal to\n# the remainder of the shipment volume divided by the amount of oil that can be\n# stored in a bottle one divided by the volume of a bottle two\nbottle_one_count = math.floor(shipment_volume / bottle_one_amount)\nbottle_two_count = math.floor((shipment_volume % bottle_one_amount) / bottle_two_volume)\n\n# Print the number of bottles of size one and the number of bottles of size two\nprint(str(bottle_one_count) + \" \" + str(bottle_two_count))\n", "import sys\n\ndef main():\n    s, v1, v2 = [int(x) for x in sys.stdin.readline().split()]\n\n    if s < v1 and s < v2:\n        print('Impossible')\n        return\n\n    n1 = s // v1\n    n2 = (s - (n1 * v1)) // v2\n    while n1 >= 0 and n2 * v2 < (s - (n1 * v1)):\n        n2 += 1\n        if n2 * v2 > (s - (n1 * v1)):\n            n1 -= 1\n            n2 = (s - (n1 * v1)) // v2\n\n    if n1 * v1 + n2 * v2 != s:\n        print('Impossible')\n        return\n\n    print(n1, n2)\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    s, v1, v2 = [int(x) for x in sys.stdin.readline().split()]\n\n    if s < v1 and s < v2:\n        print('Impossible')\n        return\n\n    n1 = s // v1\n    n2 = (s - (n1 * v1)) // v2\n    while n1 >= 0 and n2 * v2 < (s - (n1 * v1)):\n        n2 += 1\n        if n2 * v2 > (s - (n1 * v1)):\n            n1 -= 1\n            n2 = (s - (n1 * v1)) // v2\n\n    if n1 * v1 + n2 * v2 != s:\n        print('Impossible')\n        return\n    print(n1, n2)\n\n\nif __name__ == '__main__':\n    main()\n", "\n#------------------------------------------------------------------------------\n\nimport sys\n\n#------------------------------------------------------------------------------\n\ndef main():\n    \"\"\"\n    Main program.\n    \"\"\"\n    # Read the input\n    s, v1, v2 = [int(x) for x in sys.stdin.read().split()]\n\n    # If the smaller bottle can't hold anything, then there is no solution\n    if v2 == 0:\n        print(\"Impossible\")\n        return\n\n    # If the larger bottle is smaller than the shipment, then there is no solution\n    if v1 < s:\n        print(\"Impossible\")\n        return\n\n    # If the larger bottle is the same size as the shipment, then we only need one bottle\n    if v1 == s:\n        print(\"1 0\")\n        return\n\n    # If the smaller bottle is bigger than the shipment, then we need to use the smaller bottle\n    if v2 >= s:\n        print(\"0 {}\".format(s / v2))\n        return\n\n    # If we get here, then we have to use both bottles. We'll start by filling the larger bottle\n    large_bottles = s / v1\n    small_bottles = 0\n    remaining = s - large_bottles * v1\n\n    # Now we'll fill the smaller bottles with whatever is left\n    small_bottles = remaining / v2\n    remaining = remaining - small_bottles * v2\n\n    # If there is still some left over, we need to add another large bottle\n    if remaining > 0:\n        large_bottles += 1\n\n    # Print the result\n    print(\"{} {}\".format(large_bottles, small_bottles))\n\n#------------------------------------------------------------------------------\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\nimport math\n\n# Grab the volume of the shipment and the volumes of the two types of bottles.\nshipment_volume, bottle_one_volume, bottle_two_volume = [\n    int(i) for i in sys.stdin.readline().split()\n]\n\n# If the shipment volume is greater than the volume of a bottle one, or if the\n# volume of a bottle one is not greater than the volume of a bottle two, it is\n# impossible to store the oil.\nif (shipment_volume > bottle_one_volume) or (bottle_one_volume <= bottle_two_volume):\n    print(\"Impossible\")\n    sys.exit(0)\n\n# Otherwise, the amount of oil that can be stored in a bottle one is equal to\n# the amount of oil that can be stored in a bottle two plus the difference\n# between the volume of a bottle one and the volume of a bottle two.\nbottle_one_amount = (bottle_two_volume + (bottle_one_volume - bottle_two_volume))\n\n# The number of bottles of size one needed to store the oil is equal to the\n# shipment volume divided by the amount of oil that can be stored in a bottle\n# one. The number of bottles of size two needed to store the oil is equal to\n# the remainder of the shipment volume divided by the amount of oil that can be\n# stored in a bottle one divided by the volume of a bottle two.\nbottle_one_count = math.floor(shipment_volume / bottle_one_amount)\nbottle_two_count = math.floor((shipment_volume % bottle_one_amount) / bottle_two_volume)\n\n# Print the number of bottles of size one and the number of bottles of size two.\nprint(str(bottle_one_count) + \" \" + str(bottle_two_count))\n", "\n\nimport sys\n\ns, v1, v2 = [int(i) for i in sys.stdin.readline().split()]\n\nif s % v2 == 0:\n    print(0, s // v2)\nelif s % v1 == 0:\n    print(s // v1, 0)\nelif s < v1:\n    print(1, 0)\nelse:\n    x = s // v1\n    y = s % v1 // v2\n    while s % v1 != 0 and s % v1 < v2:\n        x -= 1\n        y = s % v1 // v2\n    if s % v1 != 0:\n        print(x, y + 1)\n    else:\n        print(x, y)\n", "\nimport sys\n\ndef main():\n    s, v1, v2 = map(int, sys.stdin.readline().split())\n    if s % v1 == 0:\n        print(s // v1, 0)\n    elif s % v2 == 0:\n        print(0, s // v2)\n    elif s % v2 == v1 % v2:\n        print(s // v1, (s % v1) // v2)\n    else:\n        print(\"Impossible\")\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\nimport math\n\n# Grab the volume of the shipment and the volumes of the two types of bottles.\nshipment_volume, bottle_one_volume, bottle_two_volume = [\n    int(i) for i in sys.stdin.readline().split()\n]\n\n# If the shipment volume is greater than the volume of a bottle one, or if the volume of a bottle one is not greater than the volume of a bottle two, it is impossible to store the oil\nif (shipment_volume > bottle_one_volume) or (bottle_one_volume <= bottle_two_volume):\n    print(\"Impossible\")\n    sys.exit(0)\n\n# Otherwise, the amount of oil that can be stored in a bottle one is equal to the amount of oil that can be stored in a bottle two plus the difference between the volume of a bottle one and the volume of a bottle two\nbottle_one_amount = (bottle_two_volume + (bottle_one_volume - bottle_two_volume))\n\n# The number of bottles of size one needed to store the oil is equal to the shipment volume divided by the amount of oil that can be stored in a bottle one. The number of bottles of size two needed to store the oil is equal to the remainder of the shipment volume divided by the amount of oil that can be stored in a bottle one divided by the volume of a bottle two\nbottle_one_count = math.floor(shipment_volume / bottle_one_amount)\nbottle_two_count = math.floor((shipment_volume % bottle_one_amount) / bottle_two_volume)\n\n# Print the number of bottles of size one and the number of bottles of size two.\nprint(str(bottle_one_count) + \" \" + str(bottle_two_count))\n", "\nimport sys\nimport math\n\ns, v1, v2 = [int(i) for i in input().split()]\n\nif s % v2 == 0:\n    print(0, s // v2, end=\" \")\nelif s % v1 == 0:\n    print(s // v1, 0, end=\" \")\nelif s < v1:\n    print(1, 0, end=\" \")\nelse:\n    x = s // v1\n    y = s % v1 // v2\n    while s % v1 != 0 and s % v1 < v2:\n        x -= 1\n        y = s % v1 // v2\n    if s % v1 != 0:\n        print(x, y + 1, end=\" \")\n    else:\n        print(x, y, end=\" \")\n", "\n\nimport sys\nimport math\n\ns, v1, v2 = [int(i) for i in sys.stdin.readline().split()]\n\ndef solve():\n    if s < v1:\n        print(1, 0)\n    elif s % v1 == 0:\n        print(s // v1, 0)\n    elif s % v2 == 0:\n        print(0, s // v2)\n    else:\n        x = s // v1\n        y = s % v1 // v2\n        while s % v1 != 0 and s % v1 < v2:\n            x -= 1\n            y = s % v1 // v2\n        if s % v1 != 0:\n            print(x, y + 1)\n        else:\n            print(x, y)\n\n\n\nif s % v2 == 0:\n    print(0, s // v2)\nelse:\n    solve()\n", "\nimport sys\n\ndef main():\n    s, v1, v2 = [int(x) for x in sys.stdin.readline().split()]\n\n    if s % v2 != 0:\n        print(\"Impossible\")\n        return\n\n    ans = s // v2\n    v1_cnt = 0\n    while ans > 0:\n        if ans % v1 != 0:\n            v1_cnt += 1\n            ans -= v2\n        else:\n            break\n\n    print(ans // v1, v1_cnt)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# SOLUTION:\n\ns, v1, v2 = input().split()\ns, v1, v2 = int(s), int(v1), int(v2)\n\nif s % v2 == 0:\n    print(s // v2, 0)\nelif s % v1 == 0:\n    print(0, s // v1)\nelif s % (v1 - v2) == 0:\n    print(s // (v1 - v2), 0)\nelif s % (v1 - v2) <= v2:\n    print(s // (v1 - v2) - 1, 1)\nelse:\n    print(\"Impossible\")\n", "\n\nimport sys\n\ndef main():\n    s, v1, v2 = sys.stdin.readline().split()\n    s, v1, v2 = int(s), int(v1), int(v2)\n\n    if s % v2 != 0:\n        print(\"Impossible\")\n        return\n\n    ans = s // v2\n    v1_cnt = 0\n    while ans > 0:\n        if ans % v1 != 0:\n            v1_cnt += 1\n            ans -= v2\n        else:\n            break\n\n    print(ans // v1, v1_cnt)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    s, v1, v2 = [int(x) for x in input().split()]\n\n    if s < v1 and s < v2:\n        print('Impossible')\n        return\n\n    n1 = s // v1\n    n2 = (s - (n1 * v1)) // v2\n    while n1 >= 0 and n2 * v2 < (s - (n1 * v1)):\n        n2 += 1\n        if n2 * v2 > (s - (n1 * v1)):\n            n1 -= 1\n            n2 = (s - (n1 * v1)) // v2\n\n    if n1 * v1 + n2 * v2 != s:\n        print('Impossible')\n        return\n\n    print(n1, n2)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ns, v1, v2 = map(int, sys.stdin.readline().split())\n\n# if s is divisible by v1, then we can just use s/v1 v1 bottles\nif s % v1 == 0:\n    print(s // v1, 0)\n    sys.exit(0)\n\n# if s is not divisible by v1, then we will need to use some v2 bottles\nv1_bottles = s // v1\nv2_bottles = 0\n\n# if v1_bottles * v1 + v2_bottles * v2 = s, then we are done\nwhile v1_bottles * v1 + v2_bottles * v2 < s:\n    # if we have used all v1 bottles, but still not enough v2 bottles, then we cannot meet the requirements\n    if v1_bottles == 0:\n        print(\"Impossible\")\n        sys.exit(0)\n    # remove one v1 bottle, and add one v2 bottle\n    v1_bottles -= 1\n    v2_bottles += 1\n\nprint(v1_bottles, v2_bottles)\n", "\n\nimport sys\n\nimport math\n\ns, v1, v2 = [int(i) for i in sys.stdin.readline().split()]\n\nif s % v2 == 0:\n    print(0, s // v2)\nelif s % v1 == 0:\n    print(s // v1, 0)\nelif s < v1:\n    print(1, 0)\nelse:\n    x = s // v1\n    y = s % v1 // v2\n    while s % v1 != 0 and s % v1 < v2:\n        x -= 1\n        y = s % v1 // v2\n    if s % v1 != 0:\n        print(x, y + 1)\n    else:\n        print(x, y)\n", "\n\nimport sys, math\n\n# Grab the volume of the shipment and the volumes of the two types of bottles\nshipment_volume, bottle_one_volume, bottle_two_volume = [int(i) for i in sys.stdin.readline().split()]\n\n# If the shipment volume is greater than the volume of a bottle one, or if the\n# volume of a bottle one is not greater than the volume of a bottle two, it is\n# impossible to store the oil\nif (shipment_volume > bottle_one_volume) or (bottle_one_volume <= bottle_two_volume):\n    print(\"Impossible\")\n    sys.exit(0)\n\n# Otherwise, the amount of oil that can be stored in a bottle one is equal to\n# the amount of oil that can be stored in a bottle two plus the difference\n# between the volume of a bottle one and the volume of a bottle two\nbottle_one_amount = (bottle_two_volume + (bottle_one_volume - bottle_two_volume))\n\n# The number of bottles of size one needed to store the oil is equal to the\n# shipment volume divided by the amount of oil that can be stored in a bottle\n# one. The number of bottles of size two needed to store the oil is equal to\n# the remainder of the shipment volume divided by the amount of oil that can be\n# stored in a bottle one divided by the volume of a bottle two\nbottle_one_count = math.floor(shipment_volume / bottle_one_amount)\nbottle_two_count = math.floor((shipment_volume % bottle_one_amount) / bottle_two_volume)\n\n# Print the number of bottles of size one and the number of bottles of size two\nprint(str(bottle_one_count) + \" \" + str(bottle_two_count))\n", "\n#!/usr/bin/env python3\n\n#------------------------------------------------------------------------------\n\nimport sys\n\n#------------------------------------------------------------------------------\n\ndef main():\n    \"\"\"\n    Main program.\n    \"\"\"\n    # Read the input\n    s, v1, v2 = [int(x) for x in sys.stdin.read().split()]\n\n    # If the smaller bottle can't hold anything, then there is no solution\n    if v2 == 0:\n        print(\"Impossible\")\n        return\n\n    # If the larger bottle is smaller than the shipment, then there is no solution\n    if v1 < s:\n        print(\"Impossible\")\n        return\n\n    # If the larger bottle is the same size as the shipment, then we only need one bottle\n    if v1 == s:\n        print(\"1 0\")\n        return\n\n    # If the smaller bottle is bigger than the shipment, then we need to use the smaller bottle\n    if v2 >= s:\n        print(\"0 {}\".format(s // v2))\n        return\n\n    # If we get here, then we have to use both bottles. We'll start by filling the larger bottle\n    large_bottles = s // v1\n    small_bottles = 0\n    remaining = s - large_bottles * v1\n\n    # Now we'll fill the smaller bottles with whatever is left\n    small_bottles = remaining // v2\n    remaining = remaining - small_bottles * v2\n\n    # If there is still some left over, we need to add another large bottle\n    if remaining > 0:\n        large_bottles += 1\n\n    # Print the result\n    print(\"{} {}\".format(large_bottles, small_bottles))\n\n#------------------------------------------------------------------------------\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ns, v1, v2 = input().split()\ns, v1, v2 = int(s), int(v1), int(v2)\n\nif s % v2 == 0:\n    print(s // v2, 0)\nelif s % v1 == 0:\n    print(0, s // v1)\nelif s % (v1 - v2) == 0:\n    print(s // (v1 - v2), 0)\nelif s % (v1 - v2) <= v2:\n    print(s // (v1 - v2) - 1, 1)\nelse:\n    print(\"Impossible\")\n", "\n# read input\nimport sys\n\ns,v1,v2 = map(int,sys.stdin.readline().split())\n\n# if s is divisible by v1, then we can just use s/v1 v1 bottles\nif s % v1 == 0:\n    print(s//v1, 0)\n    sys.exit(0)\n\n# if s is not divisible by v1, then we will need to use some v2 bottles\nv1_bottles = s//v1\nv2_bottles = 0\n\n# if v1_bottles * v1 + v2_bottles * v2 = s, then we are done\nwhile v1_bottles * v1 + v2_bottles * v2 < s:\n    # if we have used all v1 bottles, but still not enough v2 bottles, then we cannot meet the requirements\n    if v1_bottles == 0:\n        print(\"Impossible\")\n        sys.exit(0)\n    # remove one v1 bottle, and add one v2 bottle\n    v1_bottles -= 1\n    v2_bottles += 1\n\nprint(v1_bottles,v2_bottles)\n", "\n\nimport sys\nimport os\nimport math\n\ns, v1, v2 = [int(i) for i in sys.stdin.readline().split()]\n\nif s % v2 == 0:\n    print(0, s // v2)\nelif s % v1 == 0:\n    print(s // v1, 0)\nelif s < v1:\n    print(1, 0)\nelse:\n    x = s // v1\n    y = s % v1 // v2\n    while s % v1 != 0 and s % v1 < v2:\n        x -= 1\n        y = s % v1 // v2\n    if s % v1 != 0:\n        print(x, y + 1)\n    else:\n        print(x, y)\n"]