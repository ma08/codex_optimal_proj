["\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in comb:\n    if sum(c[:2]) > c[2] and sum(c[1:]) > c[0] and sum(c[::2]) > c[1]:\n        count += 1\n\nprint(count)\n", "\nfrom itertools import combinations\n\n_ = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n", "\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n", "from itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\nprint(count)\n", "\nS = input()\nif S == \"Sunny\":\n    print(\"Cloudy\")\nelif S == \"Cloudy\":\n    print(\"Rainy\")\nelse:\n    print(\"Sunny\")\n", "\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n", "# ABC085B\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\ncomb = combinations(L, 3)\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n", "from itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\ncomb = combinations(L, 3)\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\nprint(count)\n", "from itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n", "\nimport math\nprint(math.sin(90))\n", "\n\ndef f(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return f(n-1) + f(n-2)\n\ndef fib(n):\n    a, b = 0, 1\n    for i in range(n):\n        a, b = b, a+b\n    return a\n\nprint(fib(5))\n", "\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())), reverse=True)\n\nprint(sum(1 for i in combinations(l, 3) if i[0] < i[1] + i[2]))\n", "\n#\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n", "from itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n", "\nfrom math import factorial\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n"]