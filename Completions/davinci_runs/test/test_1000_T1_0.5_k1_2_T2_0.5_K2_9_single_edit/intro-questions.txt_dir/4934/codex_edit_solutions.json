["\nimport sys\nimport math\n\nh, v = [int(i) for i in sys.stdin.readline().split()]\n\nprint(math.ceil(h / math.sin(math.radians(v))))\n", "\n\nimport math\n\nh, v = map(float, input().split())\n\nprint(math.ceil(h / math.sin(math.radians(v))))\n", "\nimport sys\nimport math\n\nh, v = [int(i) for i in input().split()]\n\nprint(math.ceil(h/math.sin(math.radians(v))))\n", "\nfrom math import sin, radians, ceil\n\nh, v = map(int, input().split())\nprint(ceil(h/sin(radians(v))))\n", "\nfrom math import *\n\nh, v = map(int, input().split())\nprint(ceil(h/sin(radians(v))))\n", "\nfrom math import *\nh, v = map(int, input().split())\nprint(ceil(h/sin(radians(v))))\n", "\nimport sys\nimport math\n\ndef main():\n    h, v = map(int, sys.stdin.readline().split())\n    print(math.ceil(h / math.sin(math.radians(v))))\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\nh, v = map(int, input().split())\nprint(int(round(h / math.sin(math.radians(v)))))\n", "import math\n\nh, v = [int(i) for i in input().split()]\n\nv = v*math.pi/180\n\nprint(math.ceil(h/math.sin(v)))\n", "\nimport sys\nimport math\n\nh, v = map(int, sys.stdin.readline().split())\n\nprint(math.ceil(h / math.sin(math.radians(v))))\n", "\nfrom math import *\n\nh, v = map(int, input().split())\nprint(ceil(h / sin(radians(v))))\n", "\nimport math\n\nh, v = map(int, input().split())\n\nprint(math.ceil(h / math.sin(math.radians(v))))  # prints the number of camera required\n", "# catching the wrong angle\n\nimport math\n\nh, v = [int(i) for i in input().split()]\n\nv = v*math.pi/180\n\nprint(math.ceil(h/math.sin(v)))\n", "from math import *\n\nh, v = map(int, input().split())\nprint(ceil(h/sin(radians(v))))\n", "\n\nimport sys\nimport random\nimport math\n\nrandom.seed()\n\ndef gen_list(size):\n    return [random.randint(0, size) for i in range(size)]\n\ndef merge(left, right):\n    if not len(left) or not len(right):\n        return left or right\n\n    result = []\n    i, j = 0, 0\n    while (len(result) < len(left) + len(right)):\n        if left[i] < right[j]:\n            result.append(left[i])\n            i+= 1\n        else:\n            result.append(right[j])\n            j+= 1\n        if i == len(left) or j == len(right):\n            result.extend(left[i:] or right[j:])\n            break \n\n    return result\n\ndef merge_sort(list):\n    if len(list) < 2:\n        return list\n\n    middle = len(list) // 2\n    left = merge_sort(list[:middle])\n    right = merge_sort(list[middle:])\n\n    return merge(left, right)\n\ndef main():\n    num_list = gen_list(10)\n    print(num_list)\n    print(merge_sort(num_list))\n\nif __name__ == '__main__':\n    main()\n", "# -*- coding: utf-8 -*-\n\nfrom math import *\n\nh, v = map(int, input().split())\nprint(ceil(h/sin(radians(v)))) # print(h/sin(radians(v)) + 1)\n", "#!/usr/bin/env python3\n\nimport sys\nimport math\n\ndef main():\n    h, v = map(float, sys.stdin.readline().split())\n    print(math.ceil(h / math.sin(math.radians(v)))) \n\nif __name__ == '__main__':\n    main()\n", "# write a program that calculates the minimum number of bricks needed to reach the top of a building\n\nfrom math import *\n\nh, v = map(int, input().split())\nprint(ceil(h/sin(radians(v))))\n", "import math\nh, v = map(int, input().split())\nprint(math.ceil(h / math.sin(math.radians(v))))\n\n", "\nimport math\nh, v = map(int, input().split())\n\nprint(math.ceil(h / math.sin(math.radians(v))))\n", "\n\nimport math \n\nh, v = [int(i) for i in input().split()] \n\nv = v*math.pi/180 \n\nprint(math.ceil(h/math.sin(v)))\n", "#!/usr/bin/env python3\n\nfrom math import *\n\nh, v = map(int, input().split())\nprint(ceil(h/sin(radians(v))))\n", "\nimport math\n\nh, v = map(int, input().split())\n\nprint(math.ceil(h / math.sin(math.radians(v))))\n", "\nimport math\n\nh, v = map(int, input().split())\nprint(int(math.ceil(h / math.sin(math.radians(v)))))\n", "\nimport math\n\nh, v = map(int, input().split())\nprint(int(round(h / math.sin(math.radians(v)))))\n", "import sys\nimport math\n\nh, v = map(int, sys.stdin.readline().split())\n\nprint(math.ceil(h / math.sin(math.radians(v))))\n", "import math\n\nh, v = map(int, input().split())\nprint(int(round(h / math.sin(math.radians(v)))))\n", "\n\nimport math\n\nh = int(input())\nv = int(input())\n\nprint(int(round(h / math.sin(math.radians(v))))) # \u041d\u0430\u0439\u0442\u0438 \u043f\u0440\u043e\u0442\u0438\u0432\u043e\u043b\u0435\u0436\u0430\u0449\u0438\u0439 \u0443\u0433\u043e\u043b\n", "\nimport math\n\nh, v = [int(i) for i in input().split()]\n\nv = v*math.pi/180\n\nprint(math.ceil(h/math.sin(v)))\n", "\nimport sys\nimport math\n\nh, v = [int(i) for i in sys.stdin.readline().split()]\n\nprint(math.ceil(h/math.sin(math.radians(v))))\n", "#!/usr/bin/env python3\n\nimport math\n\nh, v = [int(i) for i in input().split()]\n\nv = v*math.pi/180\n\nprint(math.ceil(h/math.sin(v)))\n", "\n\nimport sys\nimport math\n\nh, v = map(int, sys.stdin.readline().split())\n\n\nprint(math.ceil(h / math.sin(math.radians(v))))\n", "\n\nimport math\n\nh, v = [int(i) for i in input().split()]\n\nprint(math.ceil(h/math.sin(math.radians(v))))\n", "import sys\nimport math\n\ndef main():\n    h, v = map(int, sys.stdin.readline().split())\n    print(math.ceil(h / math.sin(math.radians(v))))\n\nif __name__ == '__main__':\n    main()\n"]