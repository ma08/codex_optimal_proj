["\n\ndef main():\n\n    s = input()\n\n\n    print(s.replace('s', 'x'))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    s = input(\"\")\n\n    print(s.replace('s', 'x'))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    s = input()\n    print(s.replace('s', 'x'))\n\nif __name__ == '__main__':\n    main()\n", "S = input()\n\nprint('x' * len(S))\n", "\n\ndef main():\n    s = input()\n\n    print(s.replace('s', 'x')) #replace s with x\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    s = input()\n\n    print(s.replace('s', 'x', 2))\n\nif __name__ == '__main__':\n    main()\n", "\n\nS = input()\n\nprint(S.replace('x', 'y'))\n", "\n\ndef main():\n    s = raw_input()\n\n    print(s.replace('s', 'x'))\n\nif __name__ == '__main__':\n    main()\n", "\n\nprint('x' * int(input()))\n", "\nS = input()\n\nprint('x' * len(S))\n", "\n\ndef main():\n    s = input()  # input() returns a string\n\n    print(s.replace('s', 'x'))  # replace() returns a string\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    s = input() # get the string\n\n    print(s.replace('s', 'x')) # replace 's' with 'x'\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    s = input()\n    print(s.replace('s', 'x'))\n\n\n\nif __name__ == '__main__':\n    main()\n"]