["\nimport math\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = [int(x) for x in input().split()]\n        print(min_moves(a, n))\n\ndef min_moves(a, n):\n    if n % 2 != 0:\n        return -1\n    moves = 0\n    for i in range(n):\n        if i % 2 != a[i] % 2:\n            moves += 1\n    return int(moves / 2)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport math\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = [int(x) for x in input().split()]\n        print(min_moves(a, n))\n\ndef min_moves(a, n):\n    if n % 2 != 0:\n        return -1\n    moves = 0\n    for i in range(n):\n        if i % 2 != a[i] % 2:\n            moves += 1\n    return int(moves / 2)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef solve(a):\n    if len(a) % 2 == 0 and a.count(1) % 2:\n        # even number of elements\n        #   if there are an odd number of odd elements, then we cannot\n        #   make the array good\n        #   if there are an even number of odd elements, then we can\n        #   make the array good\n        return -1\n    elif len(a) % 2 and a.count(1) % 2:\n        # odd number of elements\n        #   if there are an odd number of odd elements, then we can\n        #   make the array good\n        #   if there are an even number of odd elements, then we can\n        #   make the array good\n        return 0\n        return 0\n    elif a.count(1) % 2:\n        return a.count(1)\n    else:\n        return 0\n\nif __name__ == '__main__':\n\n    t = int(sys.stdin.readline())\n\n    for i in range(t):\n        n = int(sys.stdin.readline())\n        a = map(int, sys.stdin.readline().strip().split())\n\n        print solve(a)\n", "\nimport sys\n\ndef solve(a):\n    if len(a) % 2 == 0:\n        # even number of elements\n        #   if there are an odd number of odd elements, then we cannot\n        #   make the array good\n        #   if there are an even number of odd elements, then we can\n        #   make the array good\n        return -1 if a.count(1) % 2 else 0\n    else:\n        # odd number of elements\n        #   if there are an odd number of odd elements, then we can\n        #   make the array good\n        #   if there are an even number of odd elements, then we can\n        #   make the array good\n        return 0\n\nif __name__ == '__main__':\n\n    t = int(sys.stdin.readline())\n\n    for i in range(t):\n        n = int(sys.stdin.readline())\n        a = map(int, sys.stdin.readline().strip().split())\n\n        print solve(a)\n", "\n\nimport math\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = [int(x) for x in input().split()]\n        print(min_moves(a, n))\n\ndef min_moves(a, n):\n    if not n % 2:\n        return -1\n    moves = 0\n    for i in range(n):\n        if i % 2 ^ a[i] % 2:\n            moves += 1\n    return int(moves / 2)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef solve(a, b):\n    # Write your code here\n    pass\n\nif __name__ == '__main__':\n\n    t = int(sys.stdin.readline())\n\n    for i in range(t):\n        n = int(sys.stdin.readline())\n        a = map(int, sys.stdin.readline().strip().split())[:n]\n        b = map(int, sys.stdin.readline().strip().split())[:n]\n\n        print solve(a, b)\n", "\nimport sys\n\ndef solve(a):\n    if len(a) % 2 == 0:\n        # even number of elements\n        #   if there are an odd number of odd elements, then we cannot\n        #   make the array good\n        #   if there are an even number of odd elements, then we can\n        #   make the array good\n        return -1 if a.count(1) % 2 == 1 else 0\n    else:\n        # odd number of elements\n        #   if there are an odd number of odd elements, then we can\n        #   make the array good\n        #   if there are an even number of odd elements, then we can\n        #   make the array good\n        return 0\n\nif __name__ == '__main__':\n\n    t = int(sys.stdin.readline())\n\n    for i in range(t):\n        n = int(sys.stdin.readline())\n        a = map(int, sys.stdin.readline().strip().split())\n\n        print solve(a)\n", "\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = [int(x) for x in input().split()]\n        print(min_moves(a))\n\ndef min_moves(a):\n    if len(a) % 2 != 0:\n        return -1\n    moves = 0\n    for i in range(len(a)):\n        if i % 2 != a[i] % 2:\n            moves += 1\n    return int(moves / 2)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        print(min_moves(n))\n\ndef min_moves(n):\n    if n % 2 != 0:\n        return -1\n    moves = 0\n    for i in range(n):\n        if i % 2 != a[i] % 2:\n            moves += 1\n    return int(moves / 2)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef solve(a):\n    if len(a) % 2 == 0:\n        # even number of elements\n        #   if there are an odd number of odd elements, then we cannot\n        #   make the array good\n        #   if there are an even number of odd elements, then we can\n        #   make the array good\n        return -1 if a.count(1) % 2 else 0\n    else:\n        # odd number of elements\n        #   if there are an odd number of odd elements, then we can\n        #   make the array good\n        #   if there are an even number of odd elements, then we can\n        #   make the array good\n        return 0\nif __name__ == '__main__':\n    t = int(sys.stdin.readline())\n    for i in range(t):\n        n = int(sys.stdin.readline())\n        a = map(int, sys.stdin.readline().strip().split())\n\n        print solve(a)\n", "\n\nimport sys\n\ndef solve(a):\n    return 0\n\nif __name__ == '__main__':\n\n    t = int(sys.stdin.readline())\n\n    for i in range(t):\n        n = int(sys.stdin.readline())\n        a = map(int, sys.stdin.readline().strip().split())\n\n        print solve(a)\n", "\nimport sys\n\ndef solve(a):\n    return 0\n\n\nif __name__ == '__main__':\n\n    t = int(sys.stdin.readline())\n\n    for i in range(t):\n        n = int(sys.stdin.readline())\n        a = map(int, sys.stdin.readline().strip().split())\n\n        print solve(a)\n", "#!/usr/bin/python\n\nimport sys\n\ndef solve(a):\n    odd = 0\n    for i in a:\n        if i % 2 == 1:\n            odd += 1\n\n    if odd % 2 == 0:\n        return 0\n    else:\n        return -1\n\nif __name__ == '__main__':\n\n    t = int(sys.stdin.readline())\n\n    for i in range(t):\n        n = int(sys.stdin.readline())\n        a = list(map(int, sys.stdin.readline().strip().split()))\n\n        print solve(a)\n", "\nimport math\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    print(min_moves(a, n))\n\ndef min_moves(a, n):\n    if n % 2 == 0:\n        for i in range(n):\n            if i % 2 != a[i] % 2:\n                moves += 1\n        return int(moves / 2)\n    else:\n        for i in range(n):\n            if i % 2 == a[i] % 2:\n                moves += 1\n        return int(moves / 2) + 1\n\ndef min_moves2(a, n):\n    moves = 0\n    for i in range(n):\n        if i % 2 != a[i] % 2 and i % 2 == 0:\n            moves += 1\n    if moves % 2 == 0:\n        return moves // 2\n    else:\n        return moves // 2 + 1\n\ndef min_moves3(a, n):\n    moves = 0\n    for i in range(n):\n        if i % 2 == a[i] % 2:\n            moves += 1\n    if moves % 2 == 0:\n        return moves // 2\n    else:\n        return moves // 2 + 1\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    pass\n\n\nif __name__ == '__main__':\n    main()\n"]