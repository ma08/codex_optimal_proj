2022-04-16 05:48:15.737401 num operations 1
2022-04-16 05:48:15.737418 size on input set 1
2022-04-16 05:48:31.467665 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(n)]\n    abcd.sort(key=lambda x: (x[1], -x[2]))\n    dp = [[0 for _ in range(m+1)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(c, m):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]\n    abcd.sort(key=lambda x: (x[1], x[0]))\n    dp = [[0 for _ in range(m)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(c, m):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]\n    abcd.sort(key=lambda x: (x[1], x[0], x[2], x[3]))\n    dp[0] = [0 for _ in range(m)]\n    dp = [[0 for _ in range(m)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(c-1, m):\n            dp[b][j] = max(dp[b][j], dp[a-1][j-c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "from collections import defaultdict\n\ndef make_divisors(n):\n    divisors = []\n    for i in range(1, int(n**0.5)+1):\n        if n % i == 0:\n            divisors.append(i)\n            if i != n // i:\n                divisors.append(n//i)\n\n    divisors.sort()\n    return divisors\n\n\ndef main():\n    n = int(input())\n    for i in range(1, n+1):\n        divisors = make_divisors(i)\n        print(divisors)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n\n    a.sort()\n    b.sort(reverse=True)\n\n    for i in range(k):\n        if a[i] < b[i]:\n            a[i], b[i] = b[i], a[i]\n        else:\n            break\n    print(sum(a))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\n\ndef main():\n    n, m, q = map(int, input().split())\n    dp = [[0 for _ in range(m)] for _ in range(n)]\n    for _ in range(q):\n        a, b, c, d = map(int, input().split())\n        for i in range(a-1, b):\n            for j in range(c-1, m):\n                dp[i][j] = max(dp[i][j], dp[i][j-c] + d)\n\n    print(max(map(max, dp)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 6,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    s = [list(map(int, input().split())) for _ in range(n)]\n    t = [list(map(int, input().split())) for _ in range(m)]\n\n    for i in range(n):\n        for j in range(n):\n            if s[i][j] == t[i][j]:\n                continue\n            for k in range(n):\n                s[i][k] ^= 1\n            for k in range(n):\n                s[k][j] ^= 1\n\n    for i in range(n):\n        for j in range(n):\n            if s[i][j] != t[i][j]:\n                print('No')\n                exit()\n    print('Yes')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 7,
      "text": "\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]\n    abcd.sort(key=lambda x: (x[1], x[0]))\n    dp = [[0 for _ in range(m)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(c, m):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 8,
      "text": "\n\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]\n    abcd.sort(key=lambda x: (x[0], x[1]))\n    dp = [[0 for _ in range(m)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(b, m):\n            dp[i][j] = max(dp[i][j], dp[i-1][j-c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650088095,
  "object": "edit"
}
2022-04-16 05:48:31.467980 fix syntax errors 9 ["\n\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(n)]\n    abcd.sort(key=lambda x: (x[1], -x[2]))\n    dp = [[0 for _ in range(m+1)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(c, m):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]\n    abcd.sort(key=lambda x: (x[1], x[0]))\n    dp = [[0 for _ in range(m)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(c, m):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]\n    abcd.sort(key=lambda x: (x[1], x[0], x[2], x[3]))\n    dp[0] = [0 for _ in range(m)]\n    dp = [[0 for _ in range(m)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(c-1, m):\n            dp[b][j] = max(dp[b][j], dp[a-1][j-c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n", "from collections import defaultdict\n\ndef make_divisors(n):\n    divisors = []\n    for i in range(1, int(n**0.5)+1):\n        if n % i == 0:\n            divisors.append(i)\n            if i != n // i:\n                divisors.append(n//i)\n\n    divisors.sort()\n    return divisors\n\n\ndef main():\n    n = int(input())\n    for i in range(1, n+1):\n        divisors = make_divisors(i)\n        print(divisors)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n\n    a.sort()\n    b.sort(reverse=True)\n\n    for i in range(k):\n        if a[i] < b[i]:\n            a[i], b[i] = b[i], a[i]\n        else:\n            break\n    print(sum(a))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, m, q = map(int, input().split())\n    dp = [[0 for _ in range(m)] for _ in range(n)]\n    for _ in range(q):\n        a, b, c, d = map(int, input().split())\n        for i in range(a-1, b):\n            for j in range(c-1, m):\n                dp[i][j] = max(dp[i][j], dp[i][j-c] + d)\n\n    print(max(map(max, dp)))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, m = map(int, input().split())\n    s = [list(map(int, input().split())) for _ in range(n)]\n    t = [list(map(int, input().split())) for _ in range(m)]\n\n    for i in range(n):\n        for j in range(n):\n            if s[i][j] == t[i][j]:\n                continue\n            for k in range(n):\n                s[i][k] ^= 1\n            for k in range(n):\n                s[k][j] ^= 1\n\n    for i in range(n):\n        for j in range(n):\n            if s[i][j] != t[i][j]:\n                print('No')\n                exit()\n    print('Yes')\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]\n    abcd.sort(key=lambda x: (x[1], x[0]))\n    dp = [[0 for _ in range(m)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(c, m):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]\n    abcd.sort(key=lambda x: (x[0], x[1]))\n    dp = [[0 for _ in range(m)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(b, m):\n            dp[i][j] = max(dp[i][j], dp[i-1][j-c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-16 05:48:31.468121 size on output set 8
