["\n# Solution 1\n\nn, k = [int(x) for x in input().split()]\ns = input()\n\ncost = 0\nfor i in range(1, n + 1):\n    if s[i - 1] == '1':\n        cost += i\n        continue\n    if i - k - 1 >= 0 and s[i - k - 1] == '1':\n        continue\n    if i + k - 1 < n and s[i + k - 1] == '1':\n        continue\n    cost += i\n\nprint(cost)\n", "\n\ndef main():\n    # read input and convert to integers\n    n, k = map(int, input().split())\n\n    # read input and convert to integers\n    s = list(map(int, input().split()))\n\n    # initialize the array to store the cost of placing a router in the room and the cost of placing a router in the room\n    cost = [0] * n  # cost of placing a router in the room\n    total_cost = 0  # total cost\n\n    for i in range(n):\n        if s[i] == 1:\n            cost[i] = i + 1\n            total_cost += cost[i]\n\n    # update the cost based on the routers' range and update the total cost\n    for i in range(k, n):\n        if s[i] == 1:\n            cost[i] = min(cost[i], cost[i - k] + i + 1)\n            total_cost += cost[i]\n\n    # Output\n    print(total_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # Read input\n    n, k = [int(i) for i in input().split()]\n    s = input()\n\n    # Initialize the array to store the cost of placing a router in the room\n    cost = [0] * (n + 1)\n    for i in range(n):\n        if s[i] == '1':\n            cost[i] = i + 1\n\n    # Update the cost based on the router's range\n    for i in range(k, n + 1):\n        cost[i] = min(cost[i], cost[i - k] + i + 1)\n\n    # Sum the cost\n    total_cost = sum(cost)\n\n    # Output\n    print(total_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # Read input and store in variables\n    n, k = [int(i) for i in input().split()]  # n = number of rooms, k = range of router\n    s = input()  # s = string of rooms\n\n    # Initialize the array to store the cost of placing a router in the room.\n    # The cost of placing a router in a room with no router is 0.\n    cost = [0] * n  # cost = array of cost\n    for i in range(n):\n        if s[i] == '1':  # If the room has a router, the cost is the room number (i + 1)\n            cost[i] = i + 1  # cost[i] = cost of placing a router in room i\n\n    # Update the cost based on the router's range.\n    # The cost of placing a router in a room with a router is the minimum of the cost of placing a router in the room\n    # and the cost of placing a router in the previous room (i - k) + the room number (i + 1)\n    for i in range(k, n):  # Loop through the rooms\n        cost[i] = min(cost[i], cost[i - k] + i + 1)  # cost[i] = minimum of cost[i] and cost[i - k] + i + 1\n\n    # Sum the cost.\n    total_cost = sum(cost)  # total_cost = sum of cost\n\n    # Output\n    print(total_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # Read input\n    n, k = [int(i) for i in input().split()]\n    s = input()\n\n    # initialize the array to store the cost of placing a router in the room\n    cost = [0] * n\n    for i in range(n):\n        if s[i] == '1':\n            cost[i] = i + 1\n\n    # update the cost based on the routers' range\n    for i in range(k, n):\n        cost[i] = min(cost[i], cost[i - k] + i + 1)\n\n    # Sum the cost\n    total_cost = sum(cost)\n\n    # Output\n    print(total_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n", "# Solution\n\nn, k = [int(x) for x in input().split()]\ns = input()\n\ncost = 0\nfor i in range(1, n + 1):\n    if s[i - 1] == '1' or (i - k - 1 >= 0 and s[i - k - 1] == '1') or (i + k - 1 < n and s[i + k - 1] == '1'):\n        cost += i\n        continue\n    cost += i * 2\n\nprint(cost)\n", "\n# Solution\n\nn, k = [int(x) for x in input().split()]\ns = input()\n\ncost = 0\nfor i in range(n):\n    if s[i] == '1':\n        cost += i + 1\n        continue\n    if i - k >= 0 and s[i - k] == '1':\n        continue\n    if i + k < n and s[i + k] == '1':\n        continue\n    cost += i + 1\n\nprint(cost)\n"]