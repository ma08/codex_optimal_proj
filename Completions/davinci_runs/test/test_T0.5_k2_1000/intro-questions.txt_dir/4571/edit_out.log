2022-04-11 21:06:04.652044 num operations 2
2022-04-11 21:06:04.652097 size on input set 1
2022-04-11 21:06:08.220946 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\n\ndef main():\n    n, m = map(int, stdin.readline().split())\n    if m == 0:\n        print(n * 100)\n    elif m == 1:\n        print(n * 100 + 1900)\n    else:\n        print(n * 100 + 1900 * sum([(1 / 2) ** i for i in range(m)]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\n\ndef main():\n    n, m = map(int, stdin.readline().split())\n    if m == 0:\n        print(n * 100)\n    elif m == 1:\n        print(n * 100 + 1900)\n    else:\n        print(n * 100 + 1900 * sum([(1 / 2) ** i for i in range(1, m)]))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649725565,
  "object": "edit"
}
2022-04-11 21:06:08.221348 fix spelling mistakes 2 ["\n\nfrom sys import stdin\n\ndef main():\n    n, m = map(int, stdin.readline().split())\n    if m == 0:\n        print(n * 100)\n    elif m == 1:\n        print(n * 100 + 1900)\n    else:\n        print(n * 100 + 1900 * sum([(1 / 2) ** i for i in range(m)]))\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\n\ndef main():\n    n, m = map(int, stdin.readline().split())\n    if m == 0:\n        print(n * 100)\n    elif m == 1:\n        print(n * 100 + 1900)\n    else:\n        print(n * 100 + 1900 * sum([(1 / 2) ** i for i in range(1, m)]))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 21:06:08.221424 size on output set 2
2022-04-11 21:06:08.221437 size on input set 2
2022-04-11 21:06:14.108490 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom sys import stdin\n\ndef main():\n    n, m = map(int, stdin.readline().split())  # n: \u5e74\u6570, m: \u5206\u5c90\u56de\u6570\n    if m == 0:\n        print(n * 100)  # \u5206\u5c90\u56de\u6570\u304c0\u56de\u306e\u5834\u5408\n    elif m == 1:\n        print(n * 100 + 1900)  # \u5206\u5c90\u56de\u6570\u304c1\u56de\u306e\u5834\u5408\n    else:\n        print(n * 100 + 1900 * sum([(1 / 2) ** i for i in range(1, m)]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\n\ndef main():\n    n, m = map(int, stdin.readline().split())\n    if m == 0:\n        print(n * 100)\n    elif m == 1:\n        print(n * 100 + 1900)\n    else:\n        print(n * 100 + 1900 * sum([(1 / 2) ** i for i in range(m)]))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649725568,
  "object": "edit"
}
2022-04-11 21:06:14.108679 fix syntax errors 2 ["\nfrom sys import stdin\n\ndef main():\n    n, m = map(int, stdin.readline().split())  # n: 年数, m: 分岐回数\n    if m == 0:\n        print(n * 100)  # 分岐回数が0回の場合\n    elif m == 1:\n        print(n * 100 + 1900)  # 分岐回数が1回の場合\n    else:\n        print(n * 100 + 1900 * sum([(1 / 2) ** i for i in range(1, m)]))\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\n\ndef main():\n    n, m = map(int, stdin.readline().split())\n    if m == 0:\n        print(n * 100)\n    elif m == 1:\n        print(n * 100 + 1900)\n    else:\n        print(n * 100 + 1900 * sum([(1 / 2) ** i for i in range(m)]))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 21:06:18.104482 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\n\ndef main():\n    n, m = map(int, stdin.readline().split())\n    if m == 0:\n        print(n * 100)\n    elif m == 1:\n        print(n * 100 + 1900)\n    else:\n        print(n * 100 + 1900 * sum([(1 / 2) ** i for i in range(m + 1)]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\n\ndef main():\n    n, m = map(int, stdin.readline().split())\n    print(n * 100 + 1900 * sum([(1 / 2) ** i for i in range(m)]))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649725574,
  "object": "edit"
}
2022-04-11 21:06:18.104680 fix syntax errors 2 ["\n\nfrom sys import stdin\n\ndef main():\n    n, m = map(int, stdin.readline().split())\n    if m == 0:\n        print(n * 100)\n    elif m == 1:\n        print(n * 100 + 1900)\n    else:\n        print(n * 100 + 1900 * sum([(1 / 2) ** i for i in range(m + 1)]))\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\n\ndef main():\n    n, m = map(int, stdin.readline().split())\n    print(n * 100 + 1900 * sum([(1 / 2) ** i for i in range(m)]))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 21:06:18.104714 size on output set 4
2022-04-11 21:06:18.104741 num operations 2
2022-04-11 21:06:18.104749 size on input set 1
2022-04-11 21:06:20.976546 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    N, M = map(int, input().split())\n    success_prob = 1\n    for i in range(M):\n        success_prob /= 2\n    print(1900*M*success_prob + 100*(N-M)) \n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    N, M = map(int, input().split())\n    success_prob = 1\n    for i in range(M):\n        success_prob /= 2\n    print(int(1900*M*success_prob + 100*(N-M)))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649725578,
  "object": "edit"
}
2022-04-11 21:06:20.976918 fix spelling mistakes 2 ["\n\ndef main():\n    N, M = map(int, input().split())\n    success_prob = 1\n    for i in range(M):\n        success_prob /= 2\n    print(1900*M*success_prob + 100*(N-M)) \n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, M = map(int, input().split())\n    success_prob = 1\n    for i in range(M):\n        success_prob /= 2\n    print(int(1900*M*success_prob + 100*(N-M)))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 21:06:20.976957 size on output set 2
2022-04-11 21:06:20.976965 size on input set 2
2022-04-11 21:06:23.903042 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    N, M = map(int, input().split())\n    success_prob = 1\n    for i in range(M):\n        success_prob /= 2\n    print(int(1900 * M * success_prob + 100 * (N - M)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    N, M = map(int, input().split())\n    success_prob = 1\n    for i in range(M):\n        success_prob /= 2\n    print(int(1900 * M * success_prob + 100 * (N - M)))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649725581,
  "object": "edit"
}
2022-04-11 21:06:23.903146 fix syntax errors 2 ["\n\ndef main():\n    N, M = map(int, input().split())\n    success_prob = 1\n    for i in range(M):\n        success_prob /= 2\n    print(int(1900 * M * success_prob + 100 * (N - M)))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, M = map(int, input().split())\n    success_prob = 1\n    for i in range(M):\n        success_prob /= 2\n    print(int(1900 * M * success_prob + 100 * (N - M)))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 21:06:26.660537 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    N, M = map(int, input().split())\n    success_prob = 1\n    for i in range(M):\n        success_prob /= 2\n    print(1900*M*success_prob + 100*(N-M))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    N, M = map(int, input().split())\n    success_prob = 1\n    for i in range(M):\n        success_prob /= 2\n    print(int(1900*M*success_prob + 100*(N-M))) \n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649725584,
  "object": "edit"
}
2022-04-11 21:06:26.660858 fix syntax errors 2 ["\n\ndef main():\n    N, M = map(int, input().split())\n    success_prob = 1\n    for i in range(M):\n        success_prob /= 2\n    print(1900*M*success_prob + 100*(N-M))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, M = map(int, input().split())\n    success_prob = 1\n    for i in range(M):\n        success_prob /= 2\n    print(int(1900*M*success_prob + 100*(N-M))) \n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 21:06:26.661057 size on output set 4
