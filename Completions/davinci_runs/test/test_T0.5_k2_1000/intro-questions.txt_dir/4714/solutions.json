["a,b = map(int,input().split())\nans = 0\nfor i in range(a,b+1):\n    c = str(i)\n    l = len(c)\n    d = l // 2\n    cnt = 0\n    for i in range(d):\n        if c[i] == c[-i-1]:\n            cnt += 1\n    if cnt == d:\n        ans += 1\nprint(ans)", "A,B = list(map(str,input().split()))\nLa = [int(A[:3]),int(A[3:])]\nLb = [int(B[:3]),int(B[3:])]\nL = 900 - (La[0] - 100) - (999 - Lb[0])\nch1 = int(A[1] + A[0])\nch2 = int(B[1] + B[0])\nif Lb[1] < ch2:\n  L -= 1\nif ch1 < La[1]:\n  L -= 1\nprint(L)\n  \n", "A, B = [int(x) for x in input().split()]\nans = 0\nfor i in range(A, B+1):\n  s = str(i)\n  S = list(s)\n  if(S[0]==S[4] and S[1]==S[3]):\n    ans += 1\nprint(ans)", "A, B = map(int, input().split())\n\ncount = 0\n\nfor i in range(A, B+1):\n    check = 0\n    str_i = str(i)\n    for j in range(0, (len(str_i)//2)+1):\n        if int(str_i[j]) != int(str_i[-1-j]):\n            check += 1\n    if check == 0:\n        count += 1\n\nprint(\"{}\".format(count))", "A,B = map(int,input().split())\n\nans = 0\n\nfor i in range(1,10):\n    for j in range(10):\n        for k in range(10):\n            if A <= i*10000+j*1000+k*100+j*10+i <= B:\n                ans += 1\nprint(ans)", "a, b = list(map(int, input().split()))\ncnt = 0\n\nfor i in range(a, b+1):\n    l = []\n    while (i > 0):\n        l.append(i%10)\n        i//=10\n    if (l[0] == l[4] and l[1] == l[3]):\n        cnt+=1\nprint(cnt)\n", "a,b=map(int,input().split())\ncount=0\nfor i in range(a,b+1):\n  i=str(i)\n  if i[0]==i[4] and i[1]==i[3]:\n    count+=1\n  \nprint(count)", "A, B = map(int, input().split())\n\ncount = 0\nfor i in range(A, B+1):\n    num = str(i)\n    if num[0] == num[4]:\n        if num[1] == num[3]:\n            count += 1\n\nprint(count)", "A, B = map(int,input().split())\n\ncount = 0\nfor i in range(A, B+1):\n    if str(i) == str(i)[::-1]:\n        count += 1\n\nprint(count)", "A, B = map(int, input().split())\n\ncount = 0\nfor i in range(A, B+1):\n    if(str(i) == str(i)[::-1]):\n        count += 1\n    else: continue\nprint(count)", "# import math\n# import statistics\n# a=input()\n#b,c=int(input()),int(input())\n# c=[]\n# for i in a:\n#     c.append(i)\ne1,e2 = map(str,input().split())\n# f = list(map(int,input().split()))\n#g = [input() for _ in range(a)]\n# h = []\n# for i in range(e1):\n#     h.append(list(map(int,input().split())))\nc=[]\ncount=0\nans=0\nfor i in range(int(e1),int(e2)+1):\n    count=0\n    for k in range(len(str(i))//2):\n        if str(i)[k]==str(i)[-(k+1)]:\n            count+=1\n            if len(str(i))//2 == count:\n                ans+=1\n\nprint(ans)", "a, b = map(int, input().split())\nans = 0\nfor i in range(a,b+1):\n    num = 0\n    j = i\n    while j > 0:\n        r = j % 10\n        j //= 10\n        num = num * 10 + r\n    if i == num:\n        ans += 1\n\n\nprint(ans)", "a,b=input().split()\na=int(a)\nb=int(b)\nc=0\nfor i in range(a,b+1):\n    i=str(i)\n    if i[0]==i[4] and i[1]==i[3]:\n        c+=1\nprint(c)", "A, B = map(int, input().split())\ncount = 0\n\nfor i in range(A, B+1):\n    if str(i)[0] == str(i)[4]:\n        if str(i)[1] == str(i)[3]:\n            count += 1\n            \nprint(count)", "A,B=list(map(int,input().split()))\ndef ans090(A:int,B:int):\n    ans_count = 0\n    for i in range(A,B+1):\n        if str(i) == str(i)[::-1]:\n            ans_count+=1\n    return ans_count\nprint((ans090(A,B)))\n", "A, B = map(int,input().split())\n\ncnt = 0\nfor i in range(A, B + 1):\n    i = str(i)\n    x = len(i) // 2\n    left = i[0: x]\n    right = i[x + 1 :]\n    reverse_right = right[::-1]\n    if left == reverse_right:\n        cnt += 1\nprint(cnt)", "A, B = map(int,input().split())\n\nNumbers = []\n\nfor i in range(A,B+1):\n    number = str(A)\n    # print(number)\n    if number[0] == number[4] and number[1] == number[3]:\n        Numbers.append(number)\n    A += 1\n\nprint(len(Numbers))", "A, B = list(map(int, input().split()))\ncnt = 0\nfor i in range(A, B + 1):\n\tif str(i) == str(i)[::-1]:\n\t\tcnt += 1\nprint(cnt)\n", "a, b = map(int, input().split())\ncount = 0\nfor i in range(a, b + 1):\n    s = str(i)\n    if s[0] == s[4] and s[1] == s[3]:\n        count += 1\nprint(count)", "a, b = map(int, input().split())\n\nans = 0\nfor i in range(a, b+1):\n    i = list(str(i))\n    t_size = len(i)\n    if t_size%2 == 0:\n        if i[:t_size//2] == list(reversed(i[t_size//2:])):\n            ans+=1\n    else:\n        if i[:t_size//2] == list(reversed(i[t_size//2+1:])):\n            ans+=1\nprint(ans)", "ab = list(map(int, input().split()))\na, b = ab[0], ab[1]\ncount = 0\n\nfor num in range(a, b + 1):\n    str_num = str(num)\n    str_num_reversed = \"\".join(list(reversed(str_num)))\n    if str_num == str_num_reversed:\n        count += 1\n\nprint(count)\n", "lst = input().split()\n\ncount = 0\n\ndef judge(n):\n   if str(n) == str(n)[::-1]:\n      return True\n   else:\n      return False\n\nfor i in range(int(lst[0]), int(lst[1]) + 1):\n   if judge(i):\n      count += 1\n\nprint(count)", "A,B = map(int,input().split())\n\ncnt = 0\nfor i in range(A,B+1):\n  s = str(i)\n  half = len(s) // 2\n  add = len(s) % 2\n  #print(s,-1, s[0:half],-1, s[half+add:][::-1])\n  if s[0:half] == s[half+add:][::-1]:\n    cnt += 1\n    \nprint(cnt)", "a, b = map(int, input().split())\nanswer = 0\n\nfor k in range(a, b + 1):\n    kk = str(k)\n    if kk == kk[::-1]:\n        answer += 1\n\nprint(answer)", "a, b = (int(i) for i in input().split())\nans = 0\nfor i in range(a, b + 1):\n    str_i = str(i)\n    if str_i[0] == str_i[-1] and str_i[1] == str_i[-2]: ans += 1\nprint(ans)", "a, b = input().split()\n\ncount = 0\nfor i in range(int(a), int(b) + 1):\n    mylist = list(str(i))\n    if mylist[0] == mylist[4] and mylist[1] == mylist[3]:\n        count +=1\n\nprint(count)\n", "A, B = list(map(int, input().split()))\nans = 0\n\nfor nums in range(A, B + 1):\n    nums = str(nums)\n    if nums == nums[::-1]:\n        ans += 1\n\nprint(ans)\n", "a, b = map(int, input().split())\nans = 0\nfor i in range(a, b+1):\n    if str(i)[0] == str(i)[4] and str(i)[1] == str(i)[3]:\n        ans += 1\nprint(ans)", "A,B = map(int,input().split())\n\ncnt = 0\nfor i in range(A,B+1):\n  i = str(i)\n  if i == i[::-1]:\n    cnt += 1\n    \nprint(cnt)", "A, B = map(int, input().split())\n\nans = 0\nfor i in range(A, B+1):\n  if str(i) == str(i)[::-1]:\n    ans += 1\nprint(ans)", "#from statistics import median\n#import collections\n#aa = collections.Counter(a) # list to list || .most_common(2)\u3067\u6700\u5927\u306e2\u500b\u3068\u308a\u3060\u305b\u308b\u304a a[0][0]\nfrom math import gcd\nfrom itertools import combinations,permutations,accumulate, product # (string,3) 3\u56de\n#from collections import deque\nfrom collections import deque,defaultdict,Counter\nimport decimal\nimport re\nimport math\nimport bisect\nimport heapq\n#\n#\n#\n# python\u3067\u7121\u7406\u306a\u3068\u304d\u306f\u3001pypy\u3067\u3084\u308b\u3068\u6b63\u89e3\u3059\u308b\u304b\u3082\uff01\uff01\n#\n#\n# my_round_int = lambda x:np.round((x*2 + 1)//2)\n# \u56db\u6368\u4e94\u5165g\n#\n# \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u7cfb\n# int min_y = max(0, i - 2), max_y = min(h - 1, i + 2);\n# int min_x = max(0, j - 2), max_x = min(w - 1, j + 2);\n#\n#\nimport sys\nsys.setrecursionlimit(10000000)\nmod = 10**9 + 7\n# mod = 9982443453\n# mod = 998244353\nINF = float('inf')\nfrom sys import stdin\nreadline = stdin.readline\ndef readInts():\n  return list(map(int,readline().split()))\ndef readTuples():\n    return tuple(map(int,readline().split()))\ndef I():\n    return int(readline())\na,b = readInts()\nans = 0\nfor num in range(a,b+1):\n    s = str(num)\n    if s == s[::-1]:\n        ans += 1\nprint(ans)\n", "a,b=list(map(int,input().split()))\n\nc=0\nfor i in range(a,b+1):\n  s=str(i)\n  if s==s[::-1]:\n    c+=1\nprint(c)\n", "#!/usr/bin/env python3\n\na, b = list(map(int, input().split()))\n\nans = 0\nfor i in range(a, b+1):\n    i = str(i)\n    if i[0] == i[-1] and i[1] == i[-2]:\n        ans += 1\n\nprint(ans)\n", "a,b=map(int, input().split())  \ncnt=0\nfor i in range(a,b+1):\n    if i//10000==i%10 and (i//1000)%10==(i%100)//10:\n        cnt+=1\nprint(cnt)", "A, B =list(map(int, input().split()))\nnum_palin = [0] * (B+1)\nfor i in range(1,B+1):\n    if str(i) == str(i)[::-1]:\n        num_palin[i] = num_palin[i-1] + 1\n    else:\n        num_palin[i] = num_palin[i-1]\nprint((num_palin[B]-num_palin[A-1]))\n", "a,b = input().split()\ncnt = 0\nfor n in range(int(a),int(b)+1):\n    if str(n) == str(n)[::-1]:\n        cnt += 1\nprint(cnt)", "a, b = map(int, input().split())\n\nresult = 0\nfor x in range(a, b+1):\n  if str(x) == ''.join(reversed(str(x))):\n    result += 1\nprint(result)", "A, B = map(str, input().split())\nl = list(range(int(A), int(B)+1))\nc = 0\nfor i in l:\n  t = str(i)\n  if t[0] == t[4] and t[1] == t[3]:\n    c += 1\nprint(c)", "a,b = map(int,input().split())\nans = 0\nfor i in range(a,b+1):\n  s = str(i)\n  if s[0] == s[4] and s[1] == s[3]:\n    ans += 1\nprint(ans)", "a,b = map(int,input().split())\ncnt = 0\nfor i in range(a,b+1):\n    if str(i)==str(i)[::-1]:\n        cnt += 1\nprint(cnt)", "a,b = map(int,input().split())\nans = 0\nfor i in range(a,b+1):\n    c = str(i)\n    if c[0] == c[4] and c[1] == c[3]:\n        ans += 1\nprint(ans)", "A,B=list(map(int,input().split()))\nans=0\nfor x in range(A,B+1):\n    S=str(x)\n    if S==S[::-1]:\n        ans+=1\nprint(ans)\n", "a, b = list(map(int, input().split()))\n\nans = 0\nfor x in range(a, b + 1):\n    if x // 10000 == x % 10 and (x // 1000) % 10 == (x // 10) % 10:\n        ans += 1\nprint(ans)\n", "a,b = list(map(int,input().split()))\ncnt = 0\n\nfor i in range(a,b+1):\n  lis_i = list(str(i))\n  lis_i.reverse()\n  rev_i = int(''.join(lis_i))\n  if rev_i == i:\n    cnt += 1\n    \nprint(cnt)\n", "a,b = list(map(int,input().split()))\nc = \"\"\nd = \"\"\nans = 0\nfor i in range(a,b+1):\n  c = str(i)\n  d = c[::-1]\n  if c == d:\n    ans += 1\nprint(ans)\n\n\n\n", "a,b =  list(map(int,input().split()))\ncnt = 0\n\nfor i in range(b-a+1):\n    r = str(a+i)[::-1]\n    if a+i == int(r):\n        cnt += 1\nprint(cnt)\n", "A, B = list(map(int, input().split()))\nans = 0\nfor i in range(A, B + 1):\n    S = str(i)\n    N = len(S)\n    if all(S[i] == S[-i - 1] for i in range(N // 2)):\n        ans += 1\nprint(ans)\n", "def mapt(fn, *args):\n    return tuple(map(fn, *args))\n\n\ndef Input():\n    return mapt(int, input().split(\" \"))\n\n\ndef main():\n    a, b = Input()\n    ans = 0\n    for i in range(a, b + 1):\n        str_i = list(str(i))\n        if str_i[0] == str_i[-1] and str_i[1] == str_i[-2]:\n            ans += 1\n    print(ans)\n\n\nmain()", "A,B=map(int,input().split())\n\ndef ans090(A:int, B:int):\n    count=0\n    for i in range(A,B+1):\n        if str(i)[0]==str(i)[-1] and str(i)[1]==str(i)[-2]:\n            count+=1\n    return count\n\nprint(ans090(A,B))", "a,b=map(int,input().split())\nans=0\nfor i in range(a,b+1):\n    i=str(i)\n    if i==i[::-1]:\n        ans+=1\nprint(ans)", "a,b = list(map(int, input().split()))\n\nans = 0\nfor i in range(a, b+1):\n    s = str(i)\n    ok = True\n    for j in range(2):\n        ok = ok and s[j] == s[4-j]\n    if ok:\n        ans += 1\n\nprint(ans)\n", "def isPal(s):\n    s = str(s)\n    n = len(s)\n    f = 1\n    for i in range(n//2):\n        f &= s[i] == s[n-i-1]\n    return f\n\na, b = list(map(int, input().split()))\n\nans = 0\nfor i in range(a, b+1):\n    if(isPal(i)):\n        ans += 1\n\nprint(ans)\n\n", "A,B=map(int,input().split())\nresult=0\nfor i in range(A,B+1):\n  i=str(i)\n  for j in range(int(((len(i))-1)/2)+1):\n    if not i[j]==i[-j-1]:\n      break\n  else:\n    result+=1\nprint(result)", "A, B = list(map(int, input().split()))\n\nans = 0\n\nfor i in range(A, B+1, 1):\n  x = list(str(i))\n  if x[0] == x[4] and x[1] == x[3]:\n    ans += 1\nelse:\n  print(ans)\n", "a, b = map(int, input().split())\n\ncnt = 0\nfor i in range(a, b+1, 1):\n    i = str(i)\n    if i[0] == i[4] and i[1] == i[3]:\n        cnt += 1\n    else:\n        continue\n\nprint(cnt)", "a, b = list(map(int, input().split()))\nres = 0\nfor i in range(a, b + 1):\n    str_i = str(i)\n    if str_i[0] == str_i[-1] and str_i[1] == str_i[-2]:\n        res += 1\n\nprint(res)\n", "def reverse(num):\n    test_num = 0\n    while (num > 0):\n        remainder = num % 10\n        test_num = (test_num * 10) + remainder\n        num = num // 10\n    return test_num\n\na,b = list(map(int,input().split()))\nc = 0\nfor i in range(a,b+1):\n    if i == reverse(i):\n        c+=1\nprint(c)", "a,b=map(int,input().split())\ncount = 0\nfor i in range(a,b+1):\n  if str(i)[0]==str(i)[4] and str(i)[1]==str(i)[3]:\n    count+=1\nprint(count)", "a, b = map(int, input().split())\ncnt = 0\nfor i in range(a, b+1):\n    i = str(i)\n    if i[0] == i[-1] and i[1] == i[-2]:\n        cnt += 1\nprint(cnt)", "a, b = map(int, input().split())\nans = 0\n\nfor i in range(a//10000, b//10000+1):\n    for j in range(0,10):\n        for k in range(0,10):\n            x = i*10001 + j*1010 + k*100\n            if a<=x<=b:\n                ans+=1\nprint(ans, flush=True)\n\n", "A, B = list(map(int, input().split()))\ncnt = 0\nfor num in range(A, B+1):\n    num = list(str(num))\n    for i in range(len(num)//2):\n        if num[i] != num[len(num)-i-1]:\n            break\n    else:\n        cnt += 1\nprint(cnt)\n", "a, b = map(int, input().split())\nprint(sum(num == num[::-1] for num in map(str,range(a, b+1))))", "A,B= map(int,input().split())\n\nans=0\n\nfor i in range(A,B+1):\n    for j in range(len(str(i))):\n        zen = j\n        kou = len(str(i))-1-j\n        if zen >= kou:\n            ans+=1\n            break\n        if str(i)[zen] != str(i)[kou]:\n            break\n    \nprint(ans)", "A, B = map(int,input().split())\nans_cou = 0\nfor i in range(A, B + 1):\n    str_i = str(i)\n    reverse_str_i = ''.join(list(reversed(str_i)))\n    reverse_int_i = int(reverse_str_i)\n    if i == reverse_int_i:\n        ans_cou += 1\nprint(ans_cou)", "a, b = map(int, input().split())\nans = []\nfor i in range(a, b + 1):\n    c = [j for j in str(i)]\n    if c[0] == c[-1] and c[1] == c[-2]:\n        ans.append(i)\nprint(len(ans))", "A,B=map(int,input().split())\ncount=0\nfor i in range(A,B+1):\n    if str(i)[0:2] == str(i)[::-1][:2]: count += 1\nprint(count)", "def kaibun(n):\n    if str(n)[0]==str(n)[-1] and str(n)[1]==str(n)[-2]:\n        return True\n    else:\n        return False\n\na,b=map(int,input().split())\nans=0\nfor i in range(a,b+1):\n    if kaibun(i):\n        ans+=1\nprint(ans)", "def answer(a: int, b: int) -> int:\n    count = 0\n    for i in range(a, b + 1):\n        i_str = str(i)\n        if i_str[0] == i_str[-1] and i_str[1] == i_str[-2]:\n            count += 1\n\n    return count\n\n\ndef main():\n    a, b = list(map(int, input().split()))\n    print((answer(a, b)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "a, b = map(int, input().split())\nans = 0\nfor i in range(a, b+1):\n    s = str(i)\n    if s == s[::-1]:\n        ans += 1\nprint(ans)", "a,b=map(int,input().split())\n\ncnt=0\nfor i in range(1,10):\n  for j in range(0,10):\n    for k in range(0,10):\n      num=int(str(i)+str(j)+str(k)+str(j)+str(i))\n      if a<=num<=b:\n        cnt+=1\n        \nprint(cnt)", "a, b = list(map(int, input().split()))\nans = 0\nfor i in range(a,b+1):\n    key = str(i)\n    #print(key)\n    if key[:2] == key[4]+key[3]:\n        ans += 1\nprint(ans)\n", "a, b = map(int, input().split())\ncnt = 0\nfor i in range(a, b+1):\n\ts = str(i)\n\tif s[0] == s[4] and s[1] == s[3]:\n\t\tcnt += 1\nprint(cnt)", "a, b = list(map(int, input().split()))\nk = 0\n\nfor i in range(a,b+1):\n    if str(i) == ''.join(list(reversed(str(i)))):\n        k += 1\n\nprint(k)\n", "a,b=map(int,input().split())\ntotal=0\nfor i in range(a,b+1):\n    x=str(i)\n    y=int(x[::-1])\n    if i==y:\n        total+=1\nprint(total)", "import sys\nimport copy\nimport math\nimport itertools\nimport numpy as np\nl = [int(c) for c in input().split()]\nA = l[0]\nB = l[1]\ncnt=0\nfor i in range(A,B+1):\n    if str(i)[0]==str(i)[4] and str(i)[1]==str(i)[3]:\n        cnt+=1\nprint(cnt)", "a,b=map(int,input().split())\ncnt = 0\nfor i in range(a,b+1):\n    i = str(i)\n    if i == i[::-1]:\n        cnt +=1\nprint(cnt)", "a,b = map(int, input().split())\ncnt = 0\nfor i in range(a, b+1):\n    l,r = list(str(i))[:3], list(str(i))[2:][::-1]\n    if l == r: cnt += 1\nprint(cnt)", "a,b = map(int,input().split())\nc = 0\nfor i in range(a,b+1):\n    if str(i)[0] == str(i)[-1] and str(i)[1] == str(i)[-2]:\n        c += 1\nprint(c)", "N = {} #10000\u4ee5\u4e0akey\u4ee5\u4e0b\u306e\u56de\u6587\u6570\u306e\u500b\u6570\ncnt = 0\nfor i in range(10000, 100000):\n    L = list(str(i))\n    if L == list(reversed(L)):\n        cnt += 1\n    N[i] = cnt\nA, B = map(int, input().split())\nprint(N[B]-N[A-1] if A > 10000 else N[B])", "a,b = map(int,input().split())\nans = 0\nfor i in range(a,b+1):\n    x = str(i)\n    y = x[::-1]\n    if x == y:\n        ans += 1\nprint(ans)", "a, b = map(int, input().split())\nc = 0\nfor i in range(a, b+1):\n  s = str(i)\n  if s == s[::-1]:\n    c += 1\nprint(c)", "a,b = list(map(int,input().split()))\ncount = 0\nfor i in range(a,b+1):\n    s = str(i)\n    if s == s[::-1]:\n        count += 1\nprint(count)\n", "# -*- coding: utf-8 -*-\n\ndef judege_palindromic(val_str):\n    length = len(val_str)\n    match = True\n    for i in range(length//2):\n        if val_str[i] != val_str[length-i-1]:\n            match = False\n            break\n\n    return match       \n\n\nA, B = map(int, input().split())\n\ncnt = 0\nfor i in range(A, B+1, 1):\n    if judege_palindromic(str(i)):\n        cnt += 1\n\nprint(cnt)", "A, B = map(int, input().split())\n\ncnt = 0\nfor i in range(A, B + 1):\n    if str(i) == str(i)[::-1]:\n        cnt += 1\nprint(cnt)", "a,b = [int(x) for x in input().split()]\n\ndef check(p):\n  p = str(p)\n  if p[0] == p[4] and p[1] == p[3]:\n    return True\n  return False\n\nres = 0\nfor i in range(a,b+1):\n  if check(i):\n    res += 1\nprint(res)", "a, b = list(map(int, input().split()))\ncnt = 0\nl = []\nnewl = []\n\nfor i in range(a, b+1):\n    l = []\n    while (i > 0):\n        l.append(i%10)\n        i//=10\n    newl = l[::-1]\n    if (l == newl):\n        cnt+=1\nprint(cnt)\n", "a,b=map(int,input().split())\nans=0\nfor i in range(a,b+1):\n  if str(i)==str(i)[::-1]:\n    ans += 1\nprint(ans)", "#-*-coding:utf-8-*-\nimport sys\ninput=sys.stdin.readline\n\ndef main():\n    numbers=[]\n    a,b = map(int,input().split())\n    numbers=list(range(a,b+1))\n    count=0\n\n    for number in numbers:\n        if str(number)[0]==str(number)[-1] and str(number)[1]== str(number)[3]:\n            count+=1\n    print(count)\n\ndef __starting_point():\n    main()\n__starting_point()", "A, B = map(int, input().split())\n\ncnt = 0\n\nfor i in range(A, B+1):\n    l = list(str(i))\n    if l[0] == l[4] and l[1] == l[3]:\n        cnt += 1\n\nprint(cnt)", "a,b=input().split()\na=int(a)\nb=int(b)\nc=0\nfor i in range(a,b+1):\n  if (i//10000)==(i-(i//10)*10) and (i//1000-(i//10000)*10) ==(i//10-(i//100)*10):\n    c=c+1\nprint(c)", "A,B = map(int, input().split())\ncount = 0\nfor i in range(A,B+1):\n    i = str(i)\n    if i == i[::-1]:\n        count += 1\nprint(count)", "a, b = map(int, input().split())\n\nres = 0\nfor n in range(a, b+1):\n    s = str(n)\n    if(s == s[::-1]): res += 1\n\nprint(res)", "a, b = list(map(int, input().split()))\n\ncnt = 0\n\nfor i in range(a, b + 1):\n    if str(i) == str(i)[::-1]:\n        cnt += 1\n\nprint(cnt)\n", "A, B = map(int,input().split())\nans = 0\n\nfor i in range(A, B+1):\n    num = str(i)\n    #print(i,num[0:2],num[::-1][0:2])\n    if num[0:2] == num[::-1][0:2]:\n        ans += 1\nprint(ans)", "a, b = map(int, input().split())\ncount = 0\nfor i in range(a,b+1):\n    if list(map(int, list(str(i)))) == list(reversed(list(map(int, list(str(i)))))):\n        count += 1\nprint(count)", "a, b = map(int,input().split())\ncount = 0\nfor i in range(1,10):\n    for j in range(10):\n        for k in range(10):\n            if a <= 10000*i+1000*j+100*k+10*j+i <= b:\n                count += 1\nprint(count)", "A, B = map(int, input().split())\nres = 0\nfor i in range(A, B+1):\n  if str(i) == str(i)[::-1]:\n    res += 1\n    \nprint(res)", "a, b = map(int, input().split())\n\ncnt = 0\nfor i in range(a, b+1):\n  str_i = str(i)\n  if str_i[0] == str_i[4] and str_i[1] == str_i[3]:\n    cnt += 1\nprint(cnt)", "a,b = map(int, input().split())\ncnt = 0\n\nfor i in range(a,b+1):\n    if str(i) == str(i)[::-1]:\n        cnt += 1\nprint(cnt)", "a, b = list(map(int, input().split()))\ncnt = 0\nfor i in range(a, b+1):\n    s = str(i)\n    if s[0] == s[4] and s[1] == s[3]:\n        cnt += 1\n\nprint(cnt)\n"]