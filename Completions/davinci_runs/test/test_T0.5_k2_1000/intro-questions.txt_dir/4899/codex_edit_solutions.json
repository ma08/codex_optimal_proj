["\nprint(\"he\" + (\"e\" * len(input())) + \"y\")\n", "\n\ndef main():\n    s = input()\n    if s[-1] == 'y' and s[-2] != 'a' and s[-2] != 'i' and s[-2] != 'u' and s[-2] != 'e' and s[-2] != 'o':\n        print(s[:-1] + 'ies')\n    elif s[-1] == 'o' or s[-1] == 's' or s[-1] == 'x':\n        print(s + 'es')\n    elif s[-2:] == 'ch' or s[-2:] == 'sh':\n        print(s + 'es')\n    else:\n        print(s + 's')\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef double_ee(s):\n    if (s[0] == 'h') and (s[1] == 'e') and (s[-1] == 'y') and (len(s) > 2):\n        return s[0] + s[1] + s[1] + s[-1]\n    else:\n        return 'Invalid Input'\n\nprint(double_ee(input()))\n", "\n\ndef main():\n    s = input()\n    print(s[:2] + \"e\"*(2*s.count(\"e\")-1) + s[-1])\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef double_ee(s):\n    if (s[0] == 'h') and (s[1] == 'e') and (s[-1] == 'y') and (len(s) > 2):\n        return s[0] + s[1] + s[1] + s[2:-1] + s[-1]\n    else:\n        return 'Invalid Input'\n\nprint(double_ee(input()))\n", "\n\ndef main():\n    s = input()\n    if s[-1] == 'y':\n        print(s[:-1] + 'ies')\n    elif s[-1] == 'o' or s[-1] == 's' or s[-1] == 'x' or s[-1] == 'h':\n        print(s + 'es')\n    elif s[-2:] == 'ch' or s[-2:] == 'sh':\n        print(s + 'es')\n    else:\n        print(s + 's')\n\nif __name__ == '__main__':\n    main()\n", "\n\nprint(\"he\" + (\"l\" * len(input())) + \"o\")\n", "\n\ndef main():\n    s = input()\n    print(s[:2] + \"e\"*(2*s.count(\"e\")-1) + s[-2:]) \n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # Read in the input\n    s = raw_input()\n    # Create the output\n    out = \"\"\n    # Loop through the input string\n    for i in range(len(s)):\n        # If the current character is an 'e', add two of them\n        if s[i] == 'e':\n            out += \"ee\"\n        # Otherwise, add the character\n        else:\n            out += s[i]\n    # Print the output\n    print out\n\nmain()\n", "\ndef main():\n    greeting = input().strip()\n    new_greeting = greeting.replace('e', 'ee', 2)\n    print(new_greeting)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef double_e(s):\n    if (s[0] == 'h') and (s[1] == 'e') and (s[-1] == 'y') and (s[-2] == 'l') and (len(s) >= 4):\n        return s[0] + s[1] + s[1] + s[2:-2] + s[-2] + s[-1]\n    else:\n        return 'Invalid Input'\n\nprint(double_e(input()))\n", "\n\nprint(\"he\"+(\"e\"*len(input()))+\"y\")\n", "\n\nprint(input().replace(\"ey\", \"eey\").replace(\"e\", \"ee\").replace(\"i\", \"ii\").replace(\"o\", \"oo\").replace(\"u\", \"uu\"))\n", "\n\nprint(\"he\"+(\"l\"*len(input()))+\"o\") \n", "\n\nimport sys\n\ndef main():\n    string = sys.stdin.read().splitlines()[0]\n    count = string.count('e')\n    print(\"h\" + \"e\"*count + \"y\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nprint(input().replace(\"ey\", \"eey\").replace(\"eigh\", \"eeigh\").replace(\"ie\", \"ei\").replace(\"igh\", \"ie\").replace(\"y\", \"i\").replace(\"eey\", \"ey\").replace(\"eeigh\", \"eigh\").replace(\"ei\", \"ie\").replace(\"oi\", \"ooi\").replace(\"ou\", \"oo\").replace(\"ooi\", \"oi\").replace(\"oo\", \"ou\"))\n", "\n\ndef main():\n\t# Read in the input.\n\ts = input()\n\t# Create the output.\n\tout = \"\"\n\t# Loop through the input string.\n\tfor i in range(len(s)):\n\t\t# If the current character is an 'e', add two of them\n\t\tif s[i] == 'e':\n\t\t\tout += \"ee\"\n\t\t# Otherwise, add the character.\n\t\telse:\n\t\t\tout += s[i]\n\t# Print the output.\n\tprint(out)\n\nmain()\n", "\n\nprint(input().replace(\"ey\", \"eey\").replace(\"eigh\", \"eeigh\").replace(\"ie\", \"ei\").replace(\"igh\", \"ie\").replace(\"y\", \"i\").replace(\"eey\", \"ey\").replace(\"eeigh\", \"eigh\").replace(\"ei\", \"ie\").replace(\"ie\", \"igh\"))\n", "\n\nprint(input().replace(\"ey\", \"eey\").replace(\"e\", \"eee\"))\n", "\n\ndef double_e(s):\n    if (s[0] == 'h') and (s[1] == 'e') and (s[-1] == 'y') and (s[-2] == 'l') and (len(s) > 3):\n        return s[0] + s[1] + s[1] + s[-2] + s[-1]\n    else:\n        return 'Invalid Input'\n\nprint(double_e(input()))\n", "\n\ndef main():\n    s = input()\n    print(s[:2] + \"e\" * (2 * s.count(\"e\") - 1) + s[-2:])\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    s = input()\n    if s[-1] == 'y':\n        print(s[:-1] + 'ies') #print(s[0:-1] + 'ies')\n    else:\n        print(s)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    print('Hello World!')\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    string = sys.stdin.read().splitlines()[0]\n    count = string.count('e')\n    print(\"h\" + \"e\"*count + \"y\" + \" \" + \"e\"*count + \"y\", end=\"\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # Read in the input\n    s = raw_input()\n    # Create the output\n    out = \"\"\n    # Loop through the input string\n    for i in range(len(s)):\n        # If the current character is an 'e', add two of them\n        if s[i] == 'e':\n            out += \"ee\"\n        # Otherwise, add the character\n        else:\n            out += s[i]\n    # Print the output\n    print(out)\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    string = sys.stdin.read().splitlines()[0]\n    count = string.count('e')\n    print(\"h\" + \"e\"*count + \"y\" + \" \" + \"e\"*count + \"y\" + \" \" + \"e\"*count + \"y\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # Read in the input.\n    s = raw_input()\n    # Create the output.\n    out = \"\"\n    # Loop through the input string.\n    for i in range(len(s)):\n        # If the current character is an 'e', add two of them\n        if s[i] == 'e':\n            out += \"ee\"\n        # Otherwise, add the character.\n        else:\n            out += s[i]\n    # Print the output.\n    print out\n\nmain()\n"]