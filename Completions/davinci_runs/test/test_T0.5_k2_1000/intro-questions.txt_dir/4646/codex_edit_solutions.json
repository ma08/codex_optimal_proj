["\nimport sys\n\ndef solve(a):\n    if len(a) % 2 == 0:\n        # even number of elements\n        #   if there are an odd number of odd elements, then we can\n        #   make the array good\n        #   if there are an even number of odd elements, then we can\n        #   make the array good\n        return -1 if a.count(1) % 2 else 0\n    else:\n        # odd number of elements\n        #   if there are an odd number of odd elements, then we can\n        #   make the array good\n        #   if there are an even number of odd elements, then we can\n        #   make the array good\n        return 0\n\nif __name__ == '__main__':\n\n    t = int(sys.stdin.readline())\n\n    for i in range(t):\n        n = int(sys.stdin.readline())\n        a = map(int, sys.stdin.readline().strip().split())\n\n        print solve(a)\n", "\n\nimport sys\n\ndef solve(a):\n    if len(a) % 2 == 0:\n        # even number of elements\n        #   if there are an odd number of odd elements, then we can't\n        #   make the array good\n        #   if there are an even number of odd elements, then we can\n        #   make the array good\n        return -1 if a.count(1) % 2 == 1 else 0\n    else:\n        # odd number of elements\n        #   if there are an odd number of odd elements, then we can\n        #   make the array good\n        #   if there are an even number of odd elements, then we can\n        #   make the array good\n        return 0\n\nif __name__ == '__main__':\n\n    t = int(sys.stdin.readline())\n\n    for i in range(t):\n        n = int(sys.stdin.readline())\n        a = map(int, sys.stdin.readline().strip().split())\n\n        print solve(a)\n", "\n# \nimport math\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = [int(x) for x in input().split()]\n        print(min_moves(a, n))\n\ndef min_moves(a, n):\n    if n % 2 != 0:\n        return -1\n    moves = 0\n    for i in range(n):\n        if i % 2 != a[i] % 2:\n            moves += 1\n    return int(moves / 2)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef solve(a):\n    if len(a) % 2 == 0:\n        # even number of elements\n        #   if there are an odd number of odd elements, then we can't\n        #   make the array good\n        #   if there are an even number of odd elements, then we can\n        #   make the array good\n        return -1 if a.count(1) % 2 == 1 else 0\n    else:\n        # odd number of elements\n        #   if there are an odd number of odd elements, then we can\n        #   make the array good\n        #   if there are an even number of odd elements, then we can\n        #   make the array good\n        return 0\n\nif __name__ == '__main__':\n\n    t = int(sys.stdin.readline())\n\n    for i in range(t):\n        n = int(sys.stdin.readline())\n        a = map(int, sys.stdin.readline().strip().split())\n\n        print solve(a)\n", "def main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef solve(a):\n    if len(a) % 2 == 0:\n        # even number of elements\n        #   if there are an odd number of odd elements, then we can\n        #   make the array good\n        #   if there are an even number of odd elements, then we can\n        #   make the array good\n        return -1 if a.count(1) % 2 == 1 else 0\n    else:\n        # odd number of elements\n        #   if there are an odd number of odd elements, then we can\n        #   make the array good\n        #   if there are an even number of odd elements, then we can\n        #   make the array good\n        return 0\n\nif __name__ == '__main__':\n\n    t = int(sys.stdin.readline())\n\n    for i in range(t):\n        n = int(sys.stdin.readline())\n        a = map(int, sys.stdin.readline().strip().split())\n\n        print solve(a)\n", "\nimport math\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = [int(x) for x in input().split()]\n        print(min_moves(a, n))\n\ndef min_moves(a, n):\n    moves = 0\n    for i in range(n):\n        if i % 2 != a[i] % 2 and a[i] % 2 != 0:\n            moves += 1\n    return int(moves / 2)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = [int(x) for x in input().split()]\n        print(min_moves(a, n))\n\ndef min_moves(a, n):\n    if n % 2 != 0:\n        return -1\n    moves = 0\n    for i in range(n):\n        if i % 2 != a[i] % 2:\n            moves += 1\n    return int(moves / 2)\n\nif __name__ == '__main__':\n    main()\n"]