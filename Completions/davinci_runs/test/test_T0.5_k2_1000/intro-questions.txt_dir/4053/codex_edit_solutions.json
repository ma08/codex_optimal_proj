["n = int(input())\nprefixes = []\nsuffixes = []\nfor i in range(n-1):\n    prefixes.append(input())\nfor i in range(n-1):\n    suffixes.append(input())\n\nprefixes = sorted(prefixes, key=lambda x: len(x))\nsuffixes = sorted(suffixes, key=lambda x: len(x))\n\ns = ''\nfor i in range(len(prefixes)):\n    if prefixes[i] == suffixes[i]:\n        s += 'P'\n    else:\n        s += 'S'\nfor i in range(len(suffixes)-1, -1, -1):\n    if prefixes[i] == suffixes[i]:\n        s += 'P'\n    else:\n        s += 'S'\nprint(s)\n", "\n\ndef game(n, words):\n    \"\"\"\n    >>> game(5, ['ba', 'a', 'abab', 'a', 'aba', 'baba', 'ab', 'aba']) == 'SPPSPSPS'\n    True\n    >>> game(3, ['a', 'aa', 'aa', 'a']) == 'PPSS'\n    True\n    >>> game(2, ['a', 'c']) == 'PS'\n    True\n    \"\"\"\n    prefixes = ['']\n    suffixes = ['']\n    for word in words:\n        if word.endswith(prefixes[-1]):\n            prefixes.append(word)\n        else:\n            suffixes.append(word)\n    return ''.join(['P' if word in prefixes else 'S' for word in words])\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    words = [input() for _ in range(2*n-2)]\n    print(game(n, words))\n", "# https://codeforces.com/contest/1326/problem/C\n\nn = int(input())  # number of elements\na = list(map(int, input().split()))  # elements\nq = int(input())  # number of queries\nfor i in range(q):\n    query = list(map(int, input().split()))\n    if query[0] == 1:\n        a[query[1]-1] = query[2]\n    else:\n        print(a[query[1]-1] ^ a[query[2]-1])\n", "# https://codeforces.com/contest/1325/problem/C\n\nn = int(input())\nprefixes = []\nsuffixes = []\nfor i in range(n-1):\n    prefixes.append(input())\nfor i in range(n-1):\n    suffixes.append(input())\n\nprefixes = sorted(prefixes, key=lambda x: len(x))\nsuffixes = sorted(suffixes, key=lambda x: len(x))\n\ns = ''\nfor i in range(len(prefixes)):\n    if prefixes[i] == suffixes[i]:\n        s += 'P'\n    else:\n        s += 'S'\nfor i in range(len(suffixes)-1, -1, -1):  # -1 is needed\n    if prefixes[i] == suffixes[i]:\n        s += 'P'\n    else:\n        s += 'S'\nprint(s)\n", "import sys\nn = int(input())\nprefixes = []\nsuffixes = []\nfor i in range(n):\n    prefixes.append(sys.stdin.readline().strip())\nfor i in range(n):\n    suffixes.append(sys.stdin.readline().strip())\n\nprefixes = sorted(prefixes, key=lambda x: len(x))\nsuffixes = sorted(suffixes, key=lambda x: len(x))\n\ns = []\nfor i in range(len(prefixes)):\n    if prefixes[i] == suffixes[i]:\n        s.append('P')\n    else:\n        s.append('S')\nfor i in range(len(suffixes)-1, -1, -1):\n    if prefixes[i] == suffixes[i]:\n        s.append('P')\n    else:\n        s.append('S')\nprint(''.join(s))\n", "\n\ndef game(n, words):\n    prefixes = ['']\n    suffixes = ['']\n    for word in words:\n        if word.startswith(prefixes[-1]):\n            prefixes.append(word)\n        else:\n            suffixes.append(word)\n    return ''.join(['P' if word in prefixes else 'S' for word in words])\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    words = [input() for _ in range(2*n-2)]\n    print(game(n, words))\n", "\n\ndef game(n, words):\n    \"\"\"\n    >>> game(5, ['ba', 'a', 'abab', 'a', 'aba', 'baba', 'ab', 'aba']) == 'SPPSPSPS'\n    True\n    >>> game(3, ['a', 'aa', 'aa', 'a']) == 'PPSS'\n    True\n    >>> game(2, ['a', 'c']) == 'PS'\n    True\n    \"\"\"\n    prefixes = ['']\n    suffixes = ['']\n    for word in words:\n        if word.startswith(prefixes[-1]):\n            prefixes.append(word)\n        else:\n            suffixes.append(word)\n    return ''.join(['P' if word in prefixes else 'S' for word in words])\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    words = [input() for _ in range(2*n-2)]\n    print(game(n, words))\n"]