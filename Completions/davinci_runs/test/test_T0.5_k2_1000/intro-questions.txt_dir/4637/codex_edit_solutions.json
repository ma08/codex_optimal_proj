["\n\ndef max_sum_after_k_swaps(arr, b, k):\n    arr.sort(reverse=True)\n    return sum(arr[:k]) + sum(b[:k])\n\ndef main():\n    t = int(input())\n    while t > 0:\n        t -= 1\n        n, k = map(int, input().split())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n        print(max_sum_after_k_swaps(a, b, k))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef max_sum_after_k_swaps(a, b, k):\n    n = len(a)\n    a.sort()\n    b.sort()\n    ans = 0\n    for i in range(n):\n        if i < k:\n            if a[i] < b[n - i - 1]:\n                a[i], b[n - i - 1] = b[n - i - 1], a[i]\n        ans += a[i]\n    return ans\n\ndef main():\n    t = int(input())\n    while t > 0:\n        t -= 1\n        n, k = map(int, input().split())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n        print(max_sum_after_k_swaps(a, b, k))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef max_sum_after_k_swaps(a, b, k):\n    n = len(a)\n    a.sort()\n    b.sort()\n    ans = 0\n    for i in range(n):\n        if i < k:\n            if a[i] < b[n - i - 1]:\n                a[i], b[n - i - 1] = b[n - i - 1], a[i]\n        ans += a[i]\n    return ans\n\ndef main():\n    t = int(input())\n    while t > 0:\n        t -= 1\n        n, k = map(int, input().split())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n        print(max_sum_after_k_swaps(a, b, k, n))\n\nif __name__ == '__main__':\n    main()\n", "\ndef solve_problem():\n    # Get number of test cases\n    t = int(input())\n\n    # Iterate over test cases\n    for i in range(t):\n        # Read input\n        n, k = map(int, input().split())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n\n        # Sort both arrays\n        a.sort()\n        b.sort(reverse=True)\n\n        # Compute sum of first k elements of a and\n        # replace the first k elements of a\n        # with the first k elements of b\n        result = sum(a[0:k])\n        a[0:k] = b[0:k]\n\n        # Print result\n        print(result)\n\n\nif __name__ == '__main__':\n    solve_problem()\n", "\n\ndef max_sum_after_k_swaps(a, b, k):\n    a.sort(reverse=True)\n    b.sort(reverse=True)\n    return sum(a[:k]) + sum(b[:k])\n\ndef main():\n    t = int(input())\n    while t > 0:\n        t -= 1\n        n, k = map(int, input().split())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n        print(max_sum_after_k_swaps(a, b, k))\n\nif __name__ == '__main__':\n    main()\n", "\ndef solve_problem():\n    # Get number of test cases\n    t = int(input())\n\n    # Iterate over test cases\n    for i in range(t):\n        # Read input\n        n, k = map(int, input().split())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n\n        # Sort both arrays\n        a.sort()\n        b.sort(reverse=True)\n\n        # Compute sum of first k elements of a and replace the first k elements of a with the first k elements of b\n        result = sum(a[0:k])\n        a[0:k] = b[0:k]\n\n        # Print result\n        print(result)\n\n\nif __name__ == '__main__':\n    solve_problem()\n", "\n    \"\"\"\n    This is a solution to the problem at\n    https://www.hackerrank.com/challenges/angry-children/problem\n    \"\"\"\ndef solve_problem():\n    # Get number of test cases\n    t = int(input())\n\n    # Iterate over test cases\n    for i in range(t):\n        # Read input\n        n, k = map(int, input().split())\n        a = list(map(int, input().split()))\n        b = list(map(int, input().split()))\n\n        # Sort both arrays\n        a.sort()\n        b.sort(reverse=True)\n\n        # Compute sum of first k elements of a and\n        # replace the first k elements of a\n        # with the first k elements of b\n        result = sum(a[0:k])\n        a[0:k] = b[0:k]\n\n        # Print result\n        print(result)\n\n\nif __name__ == '__main__':\n    solve_problem()\n"]