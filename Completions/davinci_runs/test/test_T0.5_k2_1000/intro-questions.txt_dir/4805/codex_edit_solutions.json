["\ndef main():\n    # read input\n    words = input().split()\n    # create a set to store the words\n    word_set = set()\n    # initialize a boolean flag\n    no_repetition = True\n    # loop over the words\n    for word in words:\n        # check if the word is already in the set\n        if word in word_set:\n            # if it is, change the flag to false and break the loop\n            no_repetition = False\n            break\n        else:\n            # if it isn't, add it to the set\n            word_set.add(word)\n    # print the result\n    print(\"yes\" if no_repetition else \"no\")\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    words = [word for word in sys.stdin.readline().strip().split(\" \")]\n    if len(words) == len(set(words)):\n        print(\"yes\")\n    else:\n        print(\"no\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    words = input().split()\n    seen = set()\n    for word in words:\n        if word in seen:\n            print('no')\n            return\n        seen.add(word)\n    print('yes')\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    # Read each test case\n    for line in sys.stdin:\n        # Create a list of the words in the line\n        words = line.strip().split()\n        # Create a set to store the words\n        seen = set()\n        # Check to see if each word is in the set\n        for word in words:\n            if word in seen:\n                # If it is, print no.\n                print('no')\n                break\n            else:\n                # If it isn't, add it to the set and continue.\n                seen.add(word)\n        else:\n            # If the for loop completes without breaking, then print yes\n            print('yes')\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # Read input.\n    phrase = input(\"Enter a phrase: \")\n    # Split input into words.\n    words = phrase.split()\n    # Initialize a set of words.\n    unique_words = set()\n    # Iterate over words.\n    for word in words:\n        # Check if word has already been added to set.\n        if word in unique_words:\n            # If yes, print no and exit.\n            print(\"no\")\n            exit()\n        # If not, add word to set.\n        else:\n            unique_words.add(word)\n    # If no word has been repeated, print yes.\n    print(\"yes\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n#!/usr/bin/env python3\n\ndef main():\n    phrase = input()\n    words = phrase.split()\n    seen = set()\n    for word in words:\n        if word in seen:\n            print(\"no\")\n            return\n        seen.add(word)\n    print(\"yes\")\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    while True:\n        try:\n            words1 = list(set(input().split()))\n            words2 = input().split()\n            if len(words1) == len(words2):\n                print(\"yes\")\n            else:\n                print(\"no\")\n        except:\n            break\n\nmain()\n", "\n\n#!/usr/bin/env python3\n\ndef main():\n    phrase = input(\"Enter a phrase: \")\n    words = phrase.split()\n    seen = set()\n    for word in words:\n        if word in seen:\n            print(\"No\")\n            return\n        seen.add(word)\n    print(\"Yes\")\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    # read input\n    words = input().split()\n    # create a set to store the words\n    word_set = set()\n    # initialize a boolean flag\n    no_repetition = True\n    # loop over the words\n    for word in words:\n        # check if the word is already in the set\n        if word in word_set:\n            # if it is, change the flag to false and break the loop\n            no_repetition = False\n            break\n        else:\n            # if it isn't, add it to the set\n            word_set.add(word)\n    # print the result\n    print(\"yes\" if no_repetition else \"no\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # Read input\n    phrase = input() \n    # Split input into words\n    words = phrase.split() \n    # Initialize a set of words\n    unique_words = set() \n    # Iterate over words\n    for word in words: \n        # Check if word has already been added to set\n        if word in unique_words: \n            # If yes, print no and exit\n            print(\"no\") \n            exit() \n        # If not, add word to set\n        else: \n            unique_words.add(word) \n    # If no word has been repeated, print yes\n    print(\"yes\") \n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    while True:\n        try:\n            words = list(set(raw_input().split()))\n            if len(words) == len(raw_input().split()):\n                print(\"yes\")\n            else:\n                print(\"no\")\n        except:\n            break\n\nmain()\n", "# this is a comment\nimport sys\n\ndef main():\n    # Read each test case\n    for line in sys.stdin:\n        # Create a list of the words in the line\n        words = line.split()\n        # Create a set to store the words\n        seen = set()\n        # Check to see if each word is in the set\n        for word in words:\n            if word in seen:\n                # If it is, print no\n                print(\"no\")\n                break\n            else:\n                # If it isn't, add it to the set and continue\n                seen.add(word)\n        else:\n            # If the for loop completes without breaking, then print yes\n            print(\"yes\")\n\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\ndef main():\n    phrase = input()\n    words = phrase.split()\n    seen = set()\n    for word in words:\n        if word in seen:\n            print(\"no\")\n            return\n        seen.add(word)\n    print(\"yes\")\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    words = sys.stdin.readline().strip().split()\n    words_set = set()\n    for word in words:\n        if word in words_set:\n            print('no')\n            return\n        words_set.add(word)\n    print('yes')\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # Read the input\n    words = input().split(' ')\n    # Create a set to store the words\n    word_set = set()\n    # Initialize a boolean flag\n    no_repetition = True\n    # Loop over the words\n    for word in words:\n        # Check if the word is already in the set\n        if word in word_set:\n            # If it is, change the flag to false and break the loop\n            no_repetition = False\n            break\n        else:\n            # If it isn't, add it to the set\n            word_set.add(word)\n    # Print the result\n    print(\"yes\" if no_repetition else \"no\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n#!/usr/bin/env python\n\ndef main():\n    phrase = raw_input()\n    words = phrase.split(\" \")\n    seen = set()\n    for word in words:\n        if word in seen:\n            print(\"no\")\n            return\n        seen.add(word)\n    print(\"yes\")\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    words = sys.stdin.readline().strip().split()\n    words_set = set()\n    for word in words:\n        if word in words_set:\n            print('no')\n            return\n        words_set.add(word)\n    print('yes')\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    words = [word for word in sys.stdin.readline().strip().split()]  # read input from stdin\n    if len(words) == len(set(words)):\n        print(\"yes\")\n    else:\n        print(\"no\")\n\nif __name__ == \"__main__\":\n    main()\n", "def main():\n    while True:\n        try:\n            words = input().split()\n            if len(words) == len(set(words)):\n                print(\"yes\")\n            else:\n                print(\"no\")\n        except:\n            break\n\n\nmain()\n", "\n# this is a comment\nimport sys\n\ndef main():\n    # Read each test case\n    for line in sys.stdin:\n        # Create a list of the words in the line\n        words = line.split()\n        # Create a set to store the words\n        seen = set()\n        # Check to see if each word is in the set\n        for word in words:\n            if word in seen:\n                # If it is, print no\n                print(\"no\")\n                break\n            else:\n                # If it isn't, add it to the set and continue\n                seen.add(word)\n        else:\n            # If the for loop completes without breaking, then print yes\n            print(\"yes\")\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # Read the input and convert it to an integer\n    n = int(input())\n    # Create a list to store the numbers\n    numbers = []\n    # Loop over the numbers\n    for i in range(n):\n        # Read the number and convert it to an integer\n        number = int(input())\n        # Add it to the list\n        numbers.append(number)\n    # Sort the list\n    numbers.sort()\n    # Print the result\n    print(numbers)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    words = [word for word in sys.stdin.readline().strip().split()]\n    if len(words) == len(set(words)):\n        print(\"yes\")\n    else:\n        print(\"no\")\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    while True:\n        try:\n            words = list(set(input().split())) # remove duplicate words\n            if len(words) == len(input().split()): # check if two lists have same length\n                print(\"yes\")\n            else:\n                print(\"no\")\n        except:\n            break\nmain()\n", "\nimport sys\n\ndef main():\n    # Read each test case.\n    for line in sys.stdin:\n        # Create a list of the words in the line.\n        words = line.split()\n        # Create a set to store the words.\n        seen = set()\n        # Check to see if each word is in the set.\n        for word in words:\n            if word in seen:\n                # If it is, print no.\n                print(\"no\")\n                break\n            else:\n                # If it isn't, add it to the set and continue.\n                seen.add(word)\n        else:\n            # If the for loop completes without breaking, then print yes.\n            print(\"yes\")\n\nif __name__ == '__main__':\n    main()\n"]