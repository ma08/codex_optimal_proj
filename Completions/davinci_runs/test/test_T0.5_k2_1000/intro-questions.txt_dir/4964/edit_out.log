2022-04-12 04:03:23.284004 num operations 2
2022-04-12 04:03:23.284059 size on input set 1
2022-04-12 04:03:27.489782 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#Solution:\n\nN, H, L = map(int, input().split())\nhorror = set(map(int, input().split())) #horror movies\n\nsimilar = {} #similar movies\nfor _ in range(L):\n    a, b = map(int, input().split())\n    similar[a] = similar.get(a, set()).union({b})\n    similar[b] = similar.get(b, set()).union({a})\n\nHI = [0] * N #Hate Index\nfor h in horror:\n    HI[h] = 0\n\nQ = 0 #Question\nwhile Q < N:\n    Q = max(HI) + 1\n    for i in range(N):\n        if HI[i] == 0:\n            continue\n        else:\n            HI[i] = Q if all(HI[j] == 0 for j in similar.get(i, [])) else float('inf')\n\nprint(HI.index(max(HI)))\n"
    },
    {
      "index": 1,
      "text": "\n\n# solution:\n\nN, H, L = map(int, input().split())\nhorror = set(map(int, input().split()))\n\nsimilar = {}\nfor _ in range(L):\n    a, b = map(int, input().split())\n    similar[a] = similar.get(a, set()).union({b})\n    similar[b] = similar.get(b, set()).union({a})\n\nHI = [0] * N\nfor h in horror:\n    HI[h] = 0\n\nQ = 0\nwhile Q < N:\n    Q = max(HI) + 1\n    for i in range(N):\n        if HI[i] == 0:\n            continue\n        else:\n            HI[i] = Q if all(HI[j] == 0 for j in similar.get(i, [])) else float('inf')\n\nprint(HI.index(max(HI)))\n"
    }
  ],
  "created": 1649750603,
  "object": "edit"
}
2022-04-12 04:03:27.489982 fix spelling mistakes 2 ["\n\n#Solution:\n\nN, H, L = map(int, input().split())\nhorror = set(map(int, input().split())) #horror movies\n\nsimilar = {} #similar movies\nfor _ in range(L):\n    a, b = map(int, input().split())\n    similar[a] = similar.get(a, set()).union({b})\n    similar[b] = similar.get(b, set()).union({a})\n\nHI = [0] * N #Hate Index\nfor h in horror:\n    HI[h] = 0\n\nQ = 0 #Question\nwhile Q < N:\n    Q = max(HI) + 1\n    for i in range(N):\n        if HI[i] == 0:\n            continue\n        else:\n            HI[i] = Q if all(HI[j] == 0 for j in similar.get(i, [])) else float('inf')\n\nprint(HI.index(max(HI)))\n", "\n\n# solution:\n\nN, H, L = map(int, input().split())\nhorror = set(map(int, input().split()))\n\nsimilar = {}\nfor _ in range(L):\n    a, b = map(int, input().split())\n    similar[a] = similar.get(a, set()).union({b})\n    similar[b] = similar.get(b, set()).union({a})\n\nHI = [0] * N\nfor h in horror:\n    HI[h] = 0\n\nQ = 0\nwhile Q < N:\n    Q = max(HI) + 1\n    for i in range(N):\n        if HI[i] == 0:\n            continue\n        else:\n            HI[i] = Q if all(HI[j] == 0 for j in similar.get(i, [])) else float('inf')\n\nprint(HI.index(max(HI)))\n"]
2022-04-12 04:03:27.490007 size on output set 2
2022-04-12 04:03:27.490013 size on input set 2
2022-04-12 04:03:29.646916 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#Solution:\n\nN, H, L = map(int, input().split())\nhorror = set(map(int, input().split())) #horror movies\n\nsimilar = {} #similar movies\nfor _ in range(L):\n    a, b = map(int, input().split())\n    similar[a] = similar.get(a, set()).union({b})\n    similar[b] = similar.get(b, set()).union({a})\n\nHI = [0] * N #Hate Index\nfor h in horror:\n    HI[h] = 0\n\nQ = 0 #Question\nwhile Q < N:\n    Q = max(HI) + 1\n    for i in range(N):\n        if HI[i] == 0:\n            continue\n        else:\n            HI[i] = Q if all(HI[j] == 0 for j in similar.get(i, [])) else float('inf')\n\nprint(HI.index(max(HI)))\n"
    },
    {
      "index": 1,
      "text": "\n#!/usr/bin/env python3\n#Solution:\n\nN, H, L = map(int, input().split())\nhorror = set(map(int, input().split())) #horror movies\n\nsimilar = {} #similar movies\nfor _ in range(L):\n    a, b = map(int, input().split())\n    similar[a] = similar.get(a, set()).union({b})\n    similar[b] = similar.get(b, set()).union({a})\n\nHI = [0] * N #Hate Index\nfor h in horror:\n    HI[h] = 0\n\nQ = 0 #Question\nwhile Q < N:\n    Q = max(HI) + 1\n    for i in range(N):\n        if HI[i] == 0:\n            continue\n        else:\n            HI[i] = Q if all(HI[j] == 0 for j in similar.get(i, [])) else float('inf')\n\nprint(HI.index(max(HI)))\n"
    }
  ],
  "created": 1649750607,
  "object": "edit"
}
2022-04-12 04:03:29.647084 fix syntax errors 2 ["\n#Solution:\n\nN, H, L = map(int, input().split())\nhorror = set(map(int, input().split())) #horror movies\n\nsimilar = {} #similar movies\nfor _ in range(L):\n    a, b = map(int, input().split())\n    similar[a] = similar.get(a, set()).union({b})\n    similar[b] = similar.get(b, set()).union({a})\n\nHI = [0] * N #Hate Index\nfor h in horror:\n    HI[h] = 0\n\nQ = 0 #Question\nwhile Q < N:\n    Q = max(HI) + 1\n    for i in range(N):\n        if HI[i] == 0:\n            continue\n        else:\n            HI[i] = Q if all(HI[j] == 0 for j in similar.get(i, [])) else float('inf')\n\nprint(HI.index(max(HI)))\n", "\n#!/usr/bin/env python3\n#Solution:\n\nN, H, L = map(int, input().split())\nhorror = set(map(int, input().split())) #horror movies\n\nsimilar = {} #similar movies\nfor _ in range(L):\n    a, b = map(int, input().split())\n    similar[a] = similar.get(a, set()).union({b})\n    similar[b] = similar.get(b, set()).union({a})\n\nHI = [0] * N #Hate Index\nfor h in horror:\n    HI[h] = 0\n\nQ = 0 #Question\nwhile Q < N:\n    Q = max(HI) + 1\n    for i in range(N):\n        if HI[i] == 0:\n            continue\n        else:\n            HI[i] = Q if all(HI[j] == 0 for j in similar.get(i, [])) else float('inf')\n\nprint(HI.index(max(HI)))\n"]
2022-04-12 04:03:37.126957 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# solution:\n\nN, H, L = map(int, input().split())\nhorror = set(map(int, input().split()))  # set of horror movies\n\nsimilar = {}  # similar[i] = set of similar movies to i\nfor _ in range(L):\n    a, b = map(int, input().split())\n    similar[a] = similar.get(a, set()).union({b})\n    similar[b] = similar.get(b, set()).union({a})\n\nHI = [0] * N  # HI[i] = number of horror movies in the longest chain of similar movies that ends with movie i\nfor h in horror:\n    HI[h] = 0\n\nQ = 0\nwhile Q < N:\n    Q = max(HI) + 1\n    for i in range(N):\n        if HI[i] == 0:\n            continue\n        else:\n            HI[i] = Q if all(HI[j] == 0 for j in similar.get(i, [])) else float('inf')\n\nprint(HI.index(max(HI)))\n"
    },
    {
      "index": 1,
      "text": "\n#\n# solution:\n\nN, H, L = map(int, input().split())\nhorror = set(map(int, input().split()))\n\nsimilar = {}\nfor _ in range(L):\n    a, b = map(int, input().split())\n    similar[a] = similar.get(a, set()).union({b})\n    similar[b] = similar.get(b, set()).union({a})\n\nHI = [0] * N\nfor h in horror:\n    HI[h] = 0\n\nQ = 0\nwhile Q < N:\n    Q = max(HI) + 1\n    for i in range(N):\n        if HI[i] == 0:\n            continue\n        else:\n            HI[i] = Q if all(HI[j] == 0 for j in similar.get(i, [])) else float('inf')\n\nprint(HI.index(max(HI)))\n"
    }
  ],
  "created": 1649750609,
  "object": "edit"
}
2022-04-12 04:03:37.127254 fix syntax errors 2 ["\n\n# solution:\n\nN, H, L = map(int, input().split())\nhorror = set(map(int, input().split()))  # set of horror movies\n\nsimilar = {}  # similar[i] = set of similar movies to i\nfor _ in range(L):\n    a, b = map(int, input().split())\n    similar[a] = similar.get(a, set()).union({b})\n    similar[b] = similar.get(b, set()).union({a})\n\nHI = [0] * N  # HI[i] = number of horror movies in the longest chain of similar movies that ends with movie i\nfor h in horror:\n    HI[h] = 0\n\nQ = 0\nwhile Q < N:\n    Q = max(HI) + 1\n    for i in range(N):\n        if HI[i] == 0:\n            continue\n        else:\n            HI[i] = Q if all(HI[j] == 0 for j in similar.get(i, [])) else float('inf')\n\nprint(HI.index(max(HI)))\n", "\n#\n# solution:\n\nN, H, L = map(int, input().split())\nhorror = set(map(int, input().split()))\n\nsimilar = {}\nfor _ in range(L):\n    a, b = map(int, input().split())\n    similar[a] = similar.get(a, set()).union({b})\n    similar[b] = similar.get(b, set()).union({a})\n\nHI = [0] * N\nfor h in horror:\n    HI[h] = 0\n\nQ = 0\nwhile Q < N:\n    Q = max(HI) + 1\n    for i in range(N):\n        if HI[i] == 0:\n            continue\n        else:\n            HI[i] = Q if all(HI[j] == 0 for j in similar.get(i, [])) else float('inf')\n\nprint(HI.index(max(HI)))\n"]
2022-04-12 04:03:37.127479 size on output set 4
2022-04-12 04:03:37.127496 num operations 2
2022-04-12 04:03:37.127504 size on input set 1
2022-04-12 04:03:39.438989 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nclass Solution:\n    def solve(self, input_lines):\n        # TODO: Implement solution here\n        return \"1\"\n"
    },
    {
      "index": 1,
      "text": "\n\nclass Solution:\n    def solve(self, input_lines):\n        # TODO: Implement solution here\n        return \"1\"\n"
    }
  ],
  "created": 1649750617,
  "object": "edit"
}
2022-04-12 04:03:39.439140 fix spelling mistakes 2 ['\n\nclass Solution:\n    def solve(self, input_lines):\n        # TODO: Implement solution here\n        return "1"\n', '\n\nclass Solution:\n    def solve(self, input_lines):\n        # TODO: Implement solution here\n        return "1"\n']
2022-04-12 04:03:39.439162 size on output set 1
2022-04-12 04:03:39.439169 size on input set 1
2022-04-12 04:03:41.769399 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nclass Solution:\n    def solve(self, input_lines):\n        # TODO: Implement solution here\n        return \"1\" \n"
    },
    {
      "index": 1,
      "text": "\n\n\nclass Solution:\n    def solve(self, input_lines):\n        # TODO: Implement solution here\n        return \"1\\n\"\n"
    }
  ],
  "created": 1649750619,
  "object": "edit"
}
2022-04-12 04:03:41.769689 fix syntax errors 2 ['\n\nclass Solution:\n    def solve(self, input_lines):\n        # TODO: Implement solution here\n        return "1" \n', '\n\n\nclass Solution:\n    def solve(self, input_lines):\n        # TODO: Implement solution here\n        return "1\\n"\n']
2022-04-12 04:03:41.769735 size on output set 2
2022-04-12 04:03:41.769750 num operations 2
2022-04-12 04:03:41.769756 size on input set 1
2022-04-12 04:03:45.541956 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nimport numpy as np\n\ndef main():\n    N, H, L = (int(x) for x in sys.stdin.readline().split())\n    horror_list = set([int(x) - 1 for x in sys.stdin.readline().split()])\n    similar = np.zeros((N, N), dtype=np.int8)\n    for _ in range(L):\n        a, b = (int(x) - 1 for x in sys.stdin.readline().split())\n        similar[a][b] = 1\n        similar[b][a] = 1\n    horror_index = [0] * N\n    for i in range(N):\n        if i in horror_list:\n            continue\n        horror_index[i] = np.inf\n        for j in range(N):\n            if similar[i][j] == 1:\n                horror_index[i] = min(horror_index[i], horror_index[j] + 1)\n    print(np.argmax(horror_index))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nimport numpy as np\n\ndef main():\n    N, H, L = (int(x) for x in sys.stdin.readline().split())\n    horror_list = set([int(x) - 1 for x in sys.stdin.readline().split()])\n    similar = np.zeros((N, N), dtype=np.int8)\n    for _ in range(L):\n        a, b = (int(x) - 1 for x in sys.stdin.readline().split())\n        similar[a][b] = 1\n        similar[b][a] = 1\n    horror_index = [0] * N\n    for i in range(N):\n        if i in horror_list:\n            continue\n        horror_index[i] = np.inf\n        for j in range(N):\n            if similar[i][j] == 1:\n                horror_index[i] = min(horror_index[i], horror_index[j] + 1)\n    print(np.argmax(horror_index))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649750621,
  "object": "edit"
}
2022-04-12 04:03:45.542101 fix spelling mistakes 2 ['\n\nimport sys\nimport numpy as np\n\ndef main():\n    N, H, L = (int(x) for x in sys.stdin.readline().split())\n    horror_list = set([int(x) - 1 for x in sys.stdin.readline().split()])\n    similar = np.zeros((N, N), dtype=np.int8)\n    for _ in range(L):\n        a, b = (int(x) - 1 for x in sys.stdin.readline().split())\n        similar[a][b] = 1\n        similar[b][a] = 1\n    horror_index = [0] * N\n    for i in range(N):\n        if i in horror_list:\n            continue\n        horror_index[i] = np.inf\n        for j in range(N):\n            if similar[i][j] == 1:\n                horror_index[i] = min(horror_index[i], horror_index[j] + 1)\n    print(np.argmax(horror_index))\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\nimport numpy as np\n\ndef main():\n    N, H, L = (int(x) for x in sys.stdin.readline().split())\n    horror_list = set([int(x) - 1 for x in sys.stdin.readline().split()])\n    similar = np.zeros((N, N), dtype=np.int8)\n    for _ in range(L):\n        a, b = (int(x) - 1 for x in sys.stdin.readline().split())\n        similar[a][b] = 1\n        similar[b][a] = 1\n    horror_index = [0] * N\n    for i in range(N):\n        if i in horror_list:\n            continue\n        horror_index[i] = np.inf\n        for j in range(N):\n            if similar[i][j] == 1:\n                horror_index[i] = min(horror_index[i], horror_index[j] + 1)\n    print(np.argmax(horror_index))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 04:03:45.542132 size on output set 1
2022-04-12 04:03:45.542140 size on input set 1
2022-04-12 04:03:49.493776 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport numpy as np\n\ndef main():\n    N, H, L = (int(x) for x in sys.stdin.readline().split())\n    horror_list = set([int(x) - 1 for x in sys.stdin.readline().split()])\n    similar = np.zeros((N, N), dtype=np.int8)\n    for _ in range(L):\n        a, b = (int(x) - 1 for x in sys.stdin.readline().split())\n        similar[a][b] = 1\n        similar[b][a] = 1\n    horror_index = [0] * N\n    for i in range(N):\n        if i in horror_list:\n            continue\n        horror_index[i] = np.inf\n        for j in range(N):\n            if similar[i][j] == 1:\n                horror_index[i] = min(horror_index[i], horror_index[j] + 1)\n    print(np.argmax(horror_index))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nimport numpy as np\n\ndef main():\n    N, H, L = (int(x) for x in sys.stdin.readline().split())\n    horror_list = set([int(x) - 1 for x in sys.stdin.readline().split()][1:])\n    similar = np.zeros((N, N), dtype=np.int8)\n    for _ in range(L):\n        a, b = (int(x) - 1 for x in sys.stdin.readline().split()[1:])\n        similar[a][b] = 1\n        similar[b][a] = 1\n    horror_index = [0] * N\n    for i in range(N):\n        if i in horror_list:\n            continue\n        horror_index[i] = np.inf\n        for j in range(N):\n            if similar[i][j] == 1:\n                horror_index[i] = min(horror_index[i], horror_index[j] + 1)\n    print(np.argmax(horror_index))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649750625,
  "object": "edit"
}
2022-04-12 04:03:49.494089 fix syntax errors 2 ['\nimport sys\nimport numpy as np\n\ndef main():\n    N, H, L = (int(x) for x in sys.stdin.readline().split())\n    horror_list = set([int(x) - 1 for x in sys.stdin.readline().split()])\n    similar = np.zeros((N, N), dtype=np.int8)\n    for _ in range(L):\n        a, b = (int(x) - 1 for x in sys.stdin.readline().split())\n        similar[a][b] = 1\n        similar[b][a] = 1\n    horror_index = [0] * N\n    for i in range(N):\n        if i in horror_list:\n            continue\n        horror_index[i] = np.inf\n        for j in range(N):\n            if similar[i][j] == 1:\n                horror_index[i] = min(horror_index[i], horror_index[j] + 1)\n    print(np.argmax(horror_index))\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\nimport numpy as np\n\ndef main():\n    N, H, L = (int(x) for x in sys.stdin.readline().split())\n    horror_list = set([int(x) - 1 for x in sys.stdin.readline().split()][1:])\n    similar = np.zeros((N, N), dtype=np.int8)\n    for _ in range(L):\n        a, b = (int(x) - 1 for x in sys.stdin.readline().split()[1:])\n        similar[a][b] = 1\n        similar[b][a] = 1\n    horror_index = [0] * N\n    for i in range(N):\n        if i in horror_list:\n            continue\n        horror_index[i] = np.inf\n        for j in range(N):\n            if similar[i][j] == 1:\n                horror_index[i] = min(horror_index[i], horror_index[j] + 1)\n    print(np.argmax(horror_index))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 04:03:49.494256 size on output set 2
2022-04-12 04:03:49.494268 num operations 2
2022-04-12 04:03:49.494272 size on input set 1
2022-04-12 04:03:52.590764 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    N, H, L = map(int, sys.stdin.readline().split())\n    hot = set(map(int, sys.stdin.readline().split()))\n    sim = {}\n    for i in range(L):\n        a, b = map(int, sys.stdin.readline().split())\n        sim.setdefault(a, set()).add(b)\n        sim.setdefault(b, set()).add(a)\n    HI = [0] * N\n    for i in range(N):\n        if i in hot:\n            HI[i] = 0\n        else:\n            HI[i] = max([HI[j] for j in sim[i]] + [float('inf')]) + 1\n    print(HI.index(max(HI)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    N, H, L = map(int, sys.stdin.readline().split())\n    horror = set(map(int, sys.stdin.readline().split()))\n    sim = {}\n    for i in range(L):\n        a, b = map(int, sys.stdin.readline().split())\n        sim.setdefault(a, set()).add(b)\n        sim.setdefault(b, set()).add(a)\n    HI = [float('inf')] * N\n    for i in range(N):\n        if i in horror:\n            HI[i] = float('inf')\n        else:\n            HI[i] = max([HI[j] for j in sim[i]] + [float('inf')]) + 1\n    print(HI.index(max(HI)))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649750629,
  "object": "edit"
}
2022-04-12 04:03:52.590995 fix spelling mistakes 2 ["\n\nimport sys\n\ndef main():\n    N, H, L = map(int, sys.stdin.readline().split())\n    hot = set(map(int, sys.stdin.readline().split()))\n    sim = {}\n    for i in range(L):\n        a, b = map(int, sys.stdin.readline().split())\n        sim.setdefault(a, set()).add(b)\n        sim.setdefault(b, set()).add(a)\n    HI = [0] * N\n    for i in range(N):\n        if i in hot:\n            HI[i] = 0\n        else:\n            HI[i] = max([HI[j] for j in sim[i]] + [float('inf')]) + 1\n    print(HI.index(max(HI)))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    N, H, L = map(int, sys.stdin.readline().split())\n    horror = set(map(int, sys.stdin.readline().split()))\n    sim = {}\n    for i in range(L):\n        a, b = map(int, sys.stdin.readline().split())\n        sim.setdefault(a, set()).add(b)\n        sim.setdefault(b, set()).add(a)\n    HI = [float('inf')] * N\n    for i in range(N):\n        if i in horror:\n            HI[i] = float('inf')\n        else:\n            HI[i] = max([HI[j] for j in sim[i]] + [float('inf')]) + 1\n    print(HI.index(max(HI)))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 04:03:52.591028 size on output set 2
2022-04-12 04:03:52.591035 size on input set 2
2022-04-12 04:03:55.022860 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    N, H, L = map(int, sys.stdin.readline().split())\n    hot = set(map(int, sys.stdin.readline().split()))\n    sim = dict()\n    for i in range(L):\n        a, b = map(int, sys.stdin.readline().split())\n        sim.setdefault(a, set()).add(b)\n        sim.setdefault(b, set()).add(a)\n    HI = [0] * N\n    for i in range(N):\n        if i in hot:\n            HI[i] = 0\n        else:\n            HI[i] = max([HI[j] for j in sim[i]] + [float('inf')]) + 1\n    print(HI.index(max(HI)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    N, H, L = map(int, sys.stdin.readline().split())\n    hot = set(map(int, sys.stdin.readline().split()))\n    sim = {}\n    for i in range(L):\n        a, b = map(int, sys.stdin.readline().split())\n        sim.setdefault(a, set()).add(b)\n        sim.setdefault(b, set()).add(a)\n    HI = [0] * N\n    for i in range(N):\n        if i in hot:\n            HI[i] = 0\n        else:\n            HI[i] = max([HI[j] for j in sim[i]] + [float('inf')]) + 1\n    print(HI.index(max(HI)))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649750632,
  "object": "edit"
}
2022-04-12 04:03:55.023002 fix syntax errors 2 ["\nimport sys\n\ndef main():\n    N, H, L = map(int, sys.stdin.readline().split())\n    hot = set(map(int, sys.stdin.readline().split()))\n    sim = dict()\n    for i in range(L):\n        a, b = map(int, sys.stdin.readline().split())\n        sim.setdefault(a, set()).add(b)\n        sim.setdefault(b, set()).add(a)\n    HI = [0] * N\n    for i in range(N):\n        if i in hot:\n            HI[i] = 0\n        else:\n            HI[i] = max([HI[j] for j in sim[i]] + [float('inf')]) + 1\n    print(HI.index(max(HI)))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    N, H, L = map(int, sys.stdin.readline().split())\n    hot = set(map(int, sys.stdin.readline().split()))\n    sim = {}\n    for i in range(L):\n        a, b = map(int, sys.stdin.readline().split())\n        sim.setdefault(a, set()).add(b)\n        sim.setdefault(b, set()).add(a)\n    HI = [0] * N\n    for i in range(N):\n        if i in hot:\n            HI[i] = 0\n        else:\n            HI[i] = max([HI[j] for j in sim[i]] + [float('inf')]) + 1\n    print(HI.index(max(HI)))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 04:04:03.526516 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    N, H, L = map(int, sys.stdin.readline().split())\n    horror = set(map(int, sys.stdin.readline().split()))\n    sim = {}\n    for i in range(L):\n        a, b = map(int, sys.stdin.readline().split())\n        sim.setdefault(a, set()).add(b)\n        sim.setdefault(b, set()).add(a)\n    HI = [float('inf')] * (N + 1)\n    for i in range(N):\n        if i in horror:\n            HI[i] = float('inf')\n        else:\n            HI[i] = max([HI[j] for j in sim.get(i, [])] + [float('inf')]) + 1\n    print(HI.index(max(HI)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    N, H, L = map(int, sys.stdin.readline().split())\n    horror = set(map(int, sys.stdin.readline().split()))\n    sim = {}\n    for i in range(L):\n        a, b = map(int, sys.stdin.readline().split())\n        sim.setdefault(a, set()).add(b)\n        sim.setdefault(b, set()).add(a)\n    HI = [float('inf')] * N\n    for i in range(N):\n        if i in horror:\n            HI[i] = float('inf')\n        else:\n            HI[i] = max([HI[j] for j in sim[i]] + [float('inf')]) + 1\n    print(HI.index(max(HI)))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649750635,
  "object": "edit"
}
2022-04-12 04:04:03.527385 fix syntax errors 2 ["\nimport sys\n\ndef main():\n    N, H, L = map(int, sys.stdin.readline().split())\n    horror = set(map(int, sys.stdin.readline().split()))\n    sim = {}\n    for i in range(L):\n        a, b = map(int, sys.stdin.readline().split())\n        sim.setdefault(a, set()).add(b)\n        sim.setdefault(b, set()).add(a)\n    HI = [float('inf')] * (N + 1)\n    for i in range(N):\n        if i in horror:\n            HI[i] = float('inf')\n        else:\n            HI[i] = max([HI[j] for j in sim.get(i, [])] + [float('inf')]) + 1\n    print(HI.index(max(HI)))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    N, H, L = map(int, sys.stdin.readline().split())\n    horror = set(map(int, sys.stdin.readline().split()))\n    sim = {}\n    for i in range(L):\n        a, b = map(int, sys.stdin.readline().split())\n        sim.setdefault(a, set()).add(b)\n        sim.setdefault(b, set()).add(a)\n    HI = [float('inf')] * N\n    for i in range(N):\n        if i in horror:\n            HI[i] = float('inf')\n        else:\n            HI[i] = max([HI[j] for j in sim[i]] + [float('inf')]) + 1\n    print(HI.index(max(HI)))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 04:04:03.527483 size on output set 4
2022-04-12 04:04:03.527501 num operations 2
2022-04-12 04:04:03.527507 size on input set 1
2022-04-12 04:04:09.918865 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Solution\ndef solve():\n    N, H, L = map(int, input().split())\n    horror_list = list(map(int, input().split()))\n    similarities = [list(map(int, input().split())) for _ in range(L)]\n    HI = [0] * N\n    for i in range(N):\n        if i in horror_list:\n            HI[i] = 0\n        else:\n            HI[i] = float('inf')\n    for a, b in similarities:\n        if HI[a] < HI[b]:\n            HI[b] = HI[a] + 1\n        elif HI[b] < HI[a]:\n            HI[a] = HI[b] + 1\n    print(HI.index(max(HI)))\n\nsolve()\n"
    },
    {
      "index": 1,
      "text": "\n\n# Solution\ndef solve():\n    N, H, L = map(int, input().split())\n    horror_list = list(map(int, input().split()))\n    similarities = [list(map(int, input().split())) for _ in range(L)]\n    HI = [0] * (N + 1)\n    for i in range(N):\n        if i + 1 in horror_list:\n            HI[i + 1] = 0\n        else:\n            HI[i + 1] = float('inf')\n    for a, b in similarities:\n        if HI[a] + 1 < HI[b]:\n            HI[b] = HI[a] + 1 \n        elif HI[b] + 1 < HI[a]:\n            HI[a] = HI[b] + 1 \n    print(HI.index(max(HI)))\n\nsolve()\n"
    }
  ],
  "created": 1649750643,
  "object": "edit"
}
2022-04-12 04:04:09.918980 fix spelling mistakes 2 ["\n\n# Solution\ndef solve():\n    N, H, L = map(int, input().split())\n    horror_list = list(map(int, input().split()))\n    similarities = [list(map(int, input().split())) for _ in range(L)]\n    HI = [0] * N\n    for i in range(N):\n        if i in horror_list:\n            HI[i] = 0\n        else:\n            HI[i] = float('inf')\n    for a, b in similarities:\n        if HI[a] < HI[b]:\n            HI[b] = HI[a] + 1\n        elif HI[b] < HI[a]:\n            HI[a] = HI[b] + 1\n    print(HI.index(max(HI)))\n\nsolve()\n", "\n\n# Solution\ndef solve():\n    N, H, L = map(int, input().split())\n    horror_list = list(map(int, input().split()))\n    similarities = [list(map(int, input().split())) for _ in range(L)]\n    HI = [0] * (N + 1)\n    for i in range(N):\n        if i + 1 in horror_list:\n            HI[i + 1] = 0\n        else:\n            HI[i + 1] = float('inf')\n    for a, b in similarities:\n        if HI[a] + 1 < HI[b]:\n            HI[b] = HI[a] + 1 \n        elif HI[b] + 1 < HI[a]:\n            HI[a] = HI[b] + 1 \n    print(HI.index(max(HI)))\n\nsolve()\n"]
2022-04-12 04:04:09.918994 size on output set 2
2022-04-12 04:04:09.918998 size on input set 2
2022-04-12 04:04:16.390394 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Solution\ndef solve():\n    N, H, L = map(int, input().split())\n    horror_list = list(map(int, input().split()))\n    similarities = [list(map(int, input().split())) for _ in range(L)]\n    HI = [float('inf')] * (N + 1)\n    for i in range(N):\n        if i + 1 in horror_list:\n            HI[i + 1] = 0 \n    for a, b in similarities:\n        if HI[a] + 1 < HI[b]:\n            HI[b] = HI[a] + 1 \n        elif HI[b] + 1 < HI[a]:\n            HI[a] = HI[b] + 1 \n    print(HI.index(max(HI)))\n\nsolve()\n"
    },
    {
      "index": 1,
      "text": "\n\n# Solution\ndef solve():\n    N, H, L = map(int, input().split())\n    horror_list = list(map(int, input().split()))\n    similarities = [list(map(int, input().split())) for _ in range(L)]\n    HI = [0] * (N + 1)  # HI[i] = i\u756a\u76ee\u306e\u6620\u753b\u304c\u30db\u30e9\u30fc\u6620\u753b\u304b\u3069\u3046\u304b\n    for i in range(N):\n        if i + 1 in horror_list:\n            HI[i + 1] = 0\n        else:\n            HI[i + 1] = float('inf')  # \u30db\u30e9\u30fc\u6620\u753b\u3067\u306a\u3044\n    for a, b in similarities:\n            HI[b] = HI[a] + 1  # a\u304c\u30db\u30e9\u30fc\u6620\u753b\u3067\u306a\u3044\u306a\u3089\u3070b\u3082\u30db\u30e9\u30fc\u6620\u753b\u3067\u306a\u3044\n        elif HI[b] + 1 < HI[a]:  # b\u304c\u30db\u30e9\u30fc\u6620\u753b\u3067\u306a\u3044\u306a\u3089\u3070a\u3082\u30db\u30e9\u30fc\u6620\u753b\u3067\u306a\u3044\n            HI[a] = HI[b] + 1\n    print(HI.index(max(HI)))\n\nsolve()\n"
    }
  ],
  "created": 1649750650,
  "object": "edit"
}
2022-04-12 04:04:16.390543 fix syntax errors 2 ["\n\n# Solution\ndef solve():\n    N, H, L = map(int, input().split())\n    horror_list = list(map(int, input().split()))\n    similarities = [list(map(int, input().split())) for _ in range(L)]\n    HI = [float('inf')] * (N + 1)\n    for i in range(N):\n        if i + 1 in horror_list:\n            HI[i + 1] = 0 \n    for a, b in similarities:\n        if HI[a] + 1 < HI[b]:\n            HI[b] = HI[a] + 1 \n        elif HI[b] + 1 < HI[a]:\n            HI[a] = HI[b] + 1 \n    print(HI.index(max(HI)))\n\nsolve()\n", "\n\n# Solution\ndef solve():\n    N, H, L = map(int, input().split())\n    horror_list = list(map(int, input().split()))\n    similarities = [list(map(int, input().split())) for _ in range(L)]\n    HI = [0] * (N + 1)  # HI[i] = i番目の映画がホラー映画かどうか\n    for i in range(N):\n        if i + 1 in horror_list:\n            HI[i + 1] = 0\n        else:\n            HI[i + 1] = float('inf')  # ホラー映画でない\n    for a, b in similarities:\n            HI[b] = HI[a] + 1  # aがホラー映画でないならばbもホラー映画でない\n        elif HI[b] + 1 < HI[a]:  # bがホラー映画でないならばaもホラー映画でない\n            HI[a] = HI[b] + 1\n    print(HI.index(max(HI)))\n\nsolve()\n"]
2022-04-12 04:04:32.642949 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# -*- coding: utf-8 -*-\n\n# Solution\ndef solve():\n    N, H, L = map(int, input().split())\n    horror_list = list(map(int, input().split()))\n    similarities = [list(map(int, input().split())) for _ in range(L)]\n    HI = [0] * N\n    for i in range(N):\n        if i in horror_list:\n            HI[i] = 0\n        else:\n            HI[i] = float('inf')\n    for a, b in similarities:\n        if HI[a] < HI[b]:\n            HI[b] = HI[a] + 1\n        elif HI[b] < HI[a]:\n            HI[a] = HI[b] + 1\n    print(HI.index(max(HI)))\n\nsolve()\n"
    },
    {
      "index": 1,
      "text": "# -*- coding: utf-8 -*-\n\n# Solution\ndef solve():\n    N, M = map(int, input().split())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    C = list(map(int, input().split()))\n    D = list(map(int, input().split()))\n    E = list(map(int, input().split()))\n    F = list(map(int, input().split()))\n    G = list(map(int, input().split()))\n    H = list(map(int, input().split()))\n    I = list(map(int, input().split()))\n    J = list(map(int, input().split()))\n    K = list(map(int, input().split()))\n    L = list(map(int, input().split()))\n    M = list(map(int, input().split()))\n    N = list(map(int, input().split()))\n    O = list(map(int, input().split()))\n    P = list(map(int, input().split()))\n    Q = list(map(int, input().split()))\n    R = list(map(int, input().split()))\n    S = list(map(int, input().split()))\n    T = list(map(int, input().split()))\n    U = list(map(int, input().split()))\n    V = list(map(int, input().split()))\n    W = list(map(int, input().split()))\n    X = list(map(int, input().split()))\n    Y = list(map(int, input().split()))\n    Z = list(map(int, input().split()))\n    print(A)\n    print(B)\n    print(C)\n    print(D)\n    print(E)\n    print(F)\n    print(G)\n    print(H)\n    print(I)\n    print(J)\n    print(K)\n    print(L)\n    print(M)\n    print(N)\n    print(O)\n    print(P)\n    print(Q)\n    print(R)\n    print(S)\n    print(T)\n    print(U)\n    print(V)\n    print(W)\n    print(X)\n    print(Y)\n    print(Z)\n\nsolve()\n"
    }
  ],
  "created": 1649750656,
  "object": "edit"
}
2022-04-12 04:04:32.643293 fix syntax errors 2 ["# -*- coding: utf-8 -*-\n\n# Solution\ndef solve():\n    N, H, L = map(int, input().split())\n    horror_list = list(map(int, input().split()))\n    similarities = [list(map(int, input().split())) for _ in range(L)]\n    HI = [0] * N\n    for i in range(N):\n        if i in horror_list:\n            HI[i] = 0\n        else:\n            HI[i] = float('inf')\n    for a, b in similarities:\n        if HI[a] < HI[b]:\n            HI[b] = HI[a] + 1\n        elif HI[b] < HI[a]:\n            HI[a] = HI[b] + 1\n    print(HI.index(max(HI)))\n\nsolve()\n", '# -*- coding: utf-8 -*-\n\n# Solution\ndef solve():\n    N, M = map(int, input().split())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    C = list(map(int, input().split()))\n    D = list(map(int, input().split()))\n    E = list(map(int, input().split()))\n    F = list(map(int, input().split()))\n    G = list(map(int, input().split()))\n    H = list(map(int, input().split()))\n    I = list(map(int, input().split()))\n    J = list(map(int, input().split()))\n    K = list(map(int, input().split()))\n    L = list(map(int, input().split()))\n    M = list(map(int, input().split()))\n    N = list(map(int, input().split()))\n    O = list(map(int, input().split()))\n    P = list(map(int, input().split()))\n    Q = list(map(int, input().split()))\n    R = list(map(int, input().split()))\n    S = list(map(int, input().split()))\n    T = list(map(int, input().split()))\n    U = list(map(int, input().split()))\n    V = list(map(int, input().split()))\n    W = list(map(int, input().split()))\n    X = list(map(int, input().split()))\n    Y = list(map(int, input().split()))\n    Z = list(map(int, input().split()))\n    print(A)\n    print(B)\n    print(C)\n    print(D)\n    print(E)\n    print(F)\n    print(G)\n    print(H)\n    print(I)\n    print(J)\n    print(K)\n    print(L)\n    print(M)\n    print(N)\n    print(O)\n    print(P)\n    print(Q)\n    print(R)\n    print(S)\n    print(T)\n    print(U)\n    print(V)\n    print(W)\n    print(X)\n    print(Y)\n    print(Z)\n\nsolve()\n']
2022-04-12 04:04:32.643330 size on output set 4
2022-04-12 04:04:32.643366 num operations 2
2022-04-12 04:04:32.643370 size on input set 1
2022-04-12 04:04:40.840453 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n, h, l = map(int, sys.stdin.readline().split())\n    horror = set(map(int, sys.stdin.readline().split()))\n    horror_index = [0] * n # 0 is not horror, 1 is horror\n    for i in horror: # set horror\n        horror_index[i] = 1\n    for i in range(l):\n        a, b = map(int, sys.stdin.readline().split())\n        if a in horror:\n            horror_index[b] = 1\n        elif b in horror:\n            horror_index[a] = 1\n    for i in range(n):\n        if horror_index[i] == 1:\n            continue\n        horror_index[i] = float('inf') # infinity\n        for j in range(l):\n            a, b = map(int, sys.stdin.readline().split())\n            if a == i:\n                horror_index[i] = min(horror_index[i], horror_index[b] + 1)\n            elif b == i:\n                horror_index[i] = min(horror_index[i], horror_index[a] + 1)\n        if horror_index[i] == float('inf'): # if not connected\n            horror_index[i] = -1\n    max_hi = max(horror_index)\n    max_indices = []\n    for i in range(n):\n        if horror_index[i] == max_hi:\n            max_indices.append(i)\n    print(min(max_indices))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n, h, l = map(int, sys.stdin.readline().split())\n    horror = list(map(int, sys.stdin.readline().split()))\n    horror_set = set(horror)\n    horror_index = [0] * n\n    for i in horror:\n        horror_index[i] = 1\n    for i in range(l):\n        a, b = map(int, sys.stdin.readline().split())\n        if a in horror_set:\n            horror_index[b] = 1\n        elif b in horror_set:\n            horror_index[a] = 1\n    for i in range(n):\n        if horror_index[i] == 1:\n            continue\n        horror_index[i] = float('inf')\n        for j in range(l):\n            a, b = map(int, sys.stdin.readline().split())\n            if a == i:\n                horror_index[i] = min(horror_index[i], horror_index[b] + 1)\n            elif b == i:\n                horror_index[i] = min(horror_index[i], horror_index[a] + 1)\n        if horror_index[i] == float('inf'):\n            horror_index[i] = -1\n    max_hi = max(horror_index)\n    max_indices = []\n    for i in range(n):\n        if horror_index[i] == max_hi:\n            max_indices.append(i)\n    print(min(max_indices))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649750672,
  "object": "edit"
}
2022-04-12 04:04:40.840639 fix spelling mistakes 2 ["\n\nimport sys\n\ndef main():\n    n, h, l = map(int, sys.stdin.readline().split())\n    horror = set(map(int, sys.stdin.readline().split()))\n    horror_index = [0] * n # 0 is not horror, 1 is horror\n    for i in horror: # set horror\n        horror_index[i] = 1\n    for i in range(l):\n        a, b = map(int, sys.stdin.readline().split())\n        if a in horror:\n            horror_index[b] = 1\n        elif b in horror:\n            horror_index[a] = 1\n    for i in range(n):\n        if horror_index[i] == 1:\n            continue\n        horror_index[i] = float('inf') # infinity\n        for j in range(l):\n            a, b = map(int, sys.stdin.readline().split())\n            if a == i:\n                horror_index[i] = min(horror_index[i], horror_index[b] + 1)\n            elif b == i:\n                horror_index[i] = min(horror_index[i], horror_index[a] + 1)\n        if horror_index[i] == float('inf'): # if not connected\n            horror_index[i] = -1\n    max_hi = max(horror_index)\n    max_indices = []\n    for i in range(n):\n        if horror_index[i] == max_hi:\n            max_indices.append(i)\n    print(min(max_indices))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, h, l = map(int, sys.stdin.readline().split())\n    horror = list(map(int, sys.stdin.readline().split()))\n    horror_set = set(horror)\n    horror_index = [0] * n\n    for i in horror:\n        horror_index[i] = 1\n    for i in range(l):\n        a, b = map(int, sys.stdin.readline().split())\n        if a in horror_set:\n            horror_index[b] = 1\n        elif b in horror_set:\n            horror_index[a] = 1\n    for i in range(n):\n        if horror_index[i] == 1:\n            continue\n        horror_index[i] = float('inf')\n        for j in range(l):\n            a, b = map(int, sys.stdin.readline().split())\n            if a == i:\n                horror_index[i] = min(horror_index[i], horror_index[b] + 1)\n            elif b == i:\n                horror_index[i] = min(horror_index[i], horror_index[a] + 1)\n        if horror_index[i] == float('inf'):\n            horror_index[i] = -1\n    max_hi = max(horror_index)\n    max_indices = []\n    for i in range(n):\n        if horror_index[i] == max_hi:\n            max_indices.append(i)\n    print(min(max_indices))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 04:04:40.840666 size on output set 2
2022-04-12 04:04:40.840671 size on input set 2
2022-04-12 04:04:44.510145 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, h, l = map(int, sys.stdin.readline().split())\n    horror = list(map(int, sys.stdin.readline().split()))\n    horror_set = set(horror)\n    horror_index = [0] * (n + 1)\n    for i in horror:\n        horror_index[i] = 1\n    for i in range(l):\n        a, b = map(int, sys.stdin.readline().split())\n        if a in horror_set:\n            horror_index[b] = 1\n        elif b in horror_set:\n            horror_index[a] = 1\n    for i in range(1, n + 1):\n        if horror_index[i] == 1:\n            continue\n        horror_index[i] = float('inf')\n        for j in range(l):\n            a, b = map(int, sys.stdin.readline().split())\n            if a == i:\n                horror_index[i] = min(horror_index[i], horror_index[b] + 1)\n            elif b == i:\n                horror_index[i] = min(horror_index[i], horror_index[a] + 1)\n        if horror_index[i] == float('inf'):\n            horror_index[i] = -1\n    max_hi = max(horror_index)\n    max_indices = []\n    for i in range(1, n + 1):\n        if horror_index[i] == max_hi:\n            max_indices.append(i)\n    print(min(max_indices))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n, h, l = map(int, sys.stdin.readline().split())\n    horror = list(map(int, sys.stdin.readline().split()))\n    horror_set = set(horror)\n    horror_index = [0] * (n + 1)\n    for i in horror:\n        horror_index[i] = 1\n    for i in range(l):\n        a, b = map(int, sys.stdin.readline().split())\n        if a in horror_set:\n            horror_index[b] = 1\n        elif b in horror_set:\n            horror_index[a] = 1\n    for i in range(1, n + 1):\n        if horror_index[i] == 1:\n            continue\n        horror_index[i] = float('inf')\n        for j in range(l):\n            a, b = map(int, sys.stdin.readline().split())\n            if a == i:\n                horror_index[i] = min(horror_index[i], horror_index[b] + 1)\n            elif b == i:\n                horror_index[i] = min(horror_index[i], horror_index[a] + 1)\n        if horror_index[i] == float('inf'):\n            horror_index[i] = -1\n    max_hi = max(horror_index)\n    max_indices = []\n    for i in range(1, n + 1):\n        if horror_index[i] == max_hi:\n            max_indices.append(i)\n    print(min(max_indices))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649750681,
  "object": "edit"
}
2022-04-12 04:04:44.510343 fix syntax errors 2 ["\nimport sys\n\ndef main():\n    n, h, l = map(int, sys.stdin.readline().split())\n    horror = list(map(int, sys.stdin.readline().split()))\n    horror_set = set(horror)\n    horror_index = [0] * (n + 1)\n    for i in horror:\n        horror_index[i] = 1\n    for i in range(l):\n        a, b = map(int, sys.stdin.readline().split())\n        if a in horror_set:\n            horror_index[b] = 1\n        elif b in horror_set:\n            horror_index[a] = 1\n    for i in range(1, n + 1):\n        if horror_index[i] == 1:\n            continue\n        horror_index[i] = float('inf')\n        for j in range(l):\n            a, b = map(int, sys.stdin.readline().split())\n            if a == i:\n                horror_index[i] = min(horror_index[i], horror_index[b] + 1)\n            elif b == i:\n                horror_index[i] = min(horror_index[i], horror_index[a] + 1)\n        if horror_index[i] == float('inf'):\n            horror_index[i] = -1\n    max_hi = max(horror_index)\n    max_indices = []\n    for i in range(1, n + 1):\n        if horror_index[i] == max_hi:\n            max_indices.append(i)\n    print(min(max_indices))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, h, l = map(int, sys.stdin.readline().split())\n    horror = list(map(int, sys.stdin.readline().split()))\n    horror_set = set(horror)\n    horror_index = [0] * (n + 1)\n    for i in horror:\n        horror_index[i] = 1\n    for i in range(l):\n        a, b = map(int, sys.stdin.readline().split())\n        if a in horror_set:\n            horror_index[b] = 1\n        elif b in horror_set:\n            horror_index[a] = 1\n    for i in range(1, n + 1):\n        if horror_index[i] == 1:\n            continue\n        horror_index[i] = float('inf')\n        for j in range(l):\n            a, b = map(int, sys.stdin.readline().split())\n            if a == i:\n                horror_index[i] = min(horror_index[i], horror_index[b] + 1)\n            elif b == i:\n                horror_index[i] = min(horror_index[i], horror_index[a] + 1)\n        if horror_index[i] == float('inf'):\n            horror_index[i] = -1\n    max_hi = max(horror_index)\n    max_indices = []\n    for i in range(1, n + 1):\n        if horror_index[i] == max_hi:\n            max_indices.append(i)\n    print(min(max_indices))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 04:04:50.666858 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n, h, l = map(int, sys.stdin.readline().split())\n    horror = set(map(int, sys.stdin.readline().split()))\n    horror_index = [0] * n # 0 is not horror, 1 is horror\n    for i in horror: # set horror\n        horror_index[i] = 1\n    for i in range(l):\n        a, b = map(int, sys.stdin.readline().split())\n        if a in horror:\n            horror_index[b] = 1\n        elif b in horror:\n            horror_index[a] = 1\n    for i in range(n):\n        if horror_index[i] == 1:\n            continue\n        horror_index[i] = float('inf') # infinity (float)\n        for j in range(l):\n            a, b = map(int, sys.stdin.readline().split())\n            if a == i:\n                horror_index[i] = min(horror_index[i], horror_index[b] + 1)\n            elif b == i:\n                horror_index[i] = min(horror_index[i], horror_index[a] + 1)\n        if horror_index[i] == float('inf'): # if not connected\n            horror_index[i] = -1\n    max_hi = max(horror_index)\n    max_indices = []\n    for i in range(n):\n        if horror_index[i] == max_hi:\n            max_indices.append(i)\n    print(min(max_indices))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, h, l = map(int, sys.stdin.readline().split())\n    horror = set(map(int, sys.stdin.readline().split()))\n    horror_index = [0] * n # 0 is not horror, 1 is horror\n    for i in horror: # set horror\n        horror_index[i] = 1\n    for i in range(l):\n        a, b = map(int, sys.stdin.readline().split())\n        if a in horror:\n            horror_index[b] = 1\n        elif b in horror:\n            horror_index[a] = 1\n    for i in range(n):\n        if horror_index[i] == 1:\n            continue\n        horror_index[i] = float('inf') # infinity\n        for j in range(l):\n            a, b = map(int, sys.stdin.readline().split())\n            if a == i:\n                horror_index[i] = min(horror_index[i], horror_index[b] + 1)\n            elif b == i:\n                horror_index[i] = min(horror_index[i], horror_index[a] + 1)\n        if horror_index[i] == float('inf'): # if not connected\n            horror_index[i] = -1\n    max_hi = max(horror_index)\n    max_indices = []\n    for i in range(n):\n        if horror_index[i] == max_hi:\n            max_indices.append(i)\n    print(min(max_indices))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649750684,
  "object": "edit"
}
2022-04-12 04:04:50.666964 fix syntax errors 2 ["\n\nimport sys\n\ndef main():\n    n, h, l = map(int, sys.stdin.readline().split())\n    horror = set(map(int, sys.stdin.readline().split()))\n    horror_index = [0] * n # 0 is not horror, 1 is horror\n    for i in horror: # set horror\n        horror_index[i] = 1\n    for i in range(l):\n        a, b = map(int, sys.stdin.readline().split())\n        if a in horror:\n            horror_index[b] = 1\n        elif b in horror:\n            horror_index[a] = 1\n    for i in range(n):\n        if horror_index[i] == 1:\n            continue\n        horror_index[i] = float('inf') # infinity (float)\n        for j in range(l):\n            a, b = map(int, sys.stdin.readline().split())\n            if a == i:\n                horror_index[i] = min(horror_index[i], horror_index[b] + 1)\n            elif b == i:\n                horror_index[i] = min(horror_index[i], horror_index[a] + 1)\n        if horror_index[i] == float('inf'): # if not connected\n            horror_index[i] = -1\n    max_hi = max(horror_index)\n    max_indices = []\n    for i in range(n):\n        if horror_index[i] == max_hi:\n            max_indices.append(i)\n    print(min(max_indices))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, h, l = map(int, sys.stdin.readline().split())\n    horror = set(map(int, sys.stdin.readline().split()))\n    horror_index = [0] * n # 0 is not horror, 1 is horror\n    for i in horror: # set horror\n        horror_index[i] = 1\n    for i in range(l):\n        a, b = map(int, sys.stdin.readline().split())\n        if a in horror:\n            horror_index[b] = 1\n        elif b in horror:\n            horror_index[a] = 1\n    for i in range(n):\n        if horror_index[i] == 1:\n            continue\n        horror_index[i] = float('inf') # infinity\n        for j in range(l):\n            a, b = map(int, sys.stdin.readline().split())\n            if a == i:\n                horror_index[i] = min(horror_index[i], horror_index[b] + 1)\n            elif b == i:\n                horror_index[i] = min(horror_index[i], horror_index[a] + 1)\n        if horror_index[i] == float('inf'): # if not connected\n            horror_index[i] = -1\n    max_hi = max(horror_index)\n    max_indices = []\n    for i in range(n):\n        if horror_index[i] == max_hi:\n            max_indices.append(i)\n    print(min(max_indices))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 04:04:50.666986 size on output set 4
2022-04-12 04:04:50.666993 num operations 2
2022-04-12 04:04:50.666996 size on input set 1
2022-04-12 04:04:52.801882 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#Programme\nn,h,l = map(int,input().split())\nhorror_list = list(map(int,input().split()))\nsimilar = {}\nfor _ in range(l):\n    a,b = map(int,input().split())\n    if a not in similar:\n        similar[a] = [b]\n    else:\n        similar[a].append(b)\n    if b not in similar:\n        similar[b] = [a]\n    else:\n        similar[b].append(a)\n\nhi = [0]*n\nfor i in horror_list:\n    hi[i] = 0\nfor i in horror_list:\n    for j in similar[i]:\n        if hi[j] == 0:\n            continue\n        elif hi[j] == 1:\n            hi[j] = 0\n        else:\n            hi[j] = 1\n\nmax_hi = max(hi)\nmax_hi_movies = []\nfor i in range(n):\n    if hi[i] == max_hi:\n        max_hi_movies.append(i)\nprint(min(max_hi_movies))\n"
    },
    {
      "index": 1,
      "text": "\n\n#Programme\nn,h,l = map(int,input().split())\nhorror_list = list(map(int,input().split()))\nsimilar = {}\nfor _ in range(l):\n    a,b = map(int,input().split())\n    if a not in similar:\n        similar[a] = [b]\n    else:\n        similar[a].append(b)\n    if b not in similar:\n        similar[b] = [a]\n    else:\n        similar[b].append(a)\n\nhi = [0]*n\nfor i in horror_list:\n    hi[i] = 0\nfor i in horror_list:\n    for j in similar[i]:\n        if hi[j] == 0:\n            continue\n        elif hi[j] == 1:\n            hi[j] = 0\n        else:\n            hi[j] = 1\n\nmax_hi = max(hi)\nmax_hi_movies = []\nfor i in range(n):\n    if hi[i] == max_hi:\n        max_hi_movies.append(i)\nprint(min(max_hi_movies))\n"
    }
  ],
  "created": 1649750690,
  "object": "edit"
}
2022-04-12 04:04:52.802099 fix spelling mistakes 2 ['\n\n#Programme\nn,h,l = map(int,input().split())\nhorror_list = list(map(int,input().split()))\nsimilar = {}\nfor _ in range(l):\n    a,b = map(int,input().split())\n    if a not in similar:\n        similar[a] = [b]\n    else:\n        similar[a].append(b)\n    if b not in similar:\n        similar[b] = [a]\n    else:\n        similar[b].append(a)\n\nhi = [0]*n\nfor i in horror_list:\n    hi[i] = 0\nfor i in horror_list:\n    for j in similar[i]:\n        if hi[j] == 0:\n            continue\n        elif hi[j] == 1:\n            hi[j] = 0\n        else:\n            hi[j] = 1\n\nmax_hi = max(hi)\nmax_hi_movies = []\nfor i in range(n):\n    if hi[i] == max_hi:\n        max_hi_movies.append(i)\nprint(min(max_hi_movies))\n', '\n\n#Programme\nn,h,l = map(int,input().split())\nhorror_list = list(map(int,input().split()))\nsimilar = {}\nfor _ in range(l):\n    a,b = map(int,input().split())\n    if a not in similar:\n        similar[a] = [b]\n    else:\n        similar[a].append(b)\n    if b not in similar:\n        similar[b] = [a]\n    else:\n        similar[b].append(a)\n\nhi = [0]*n\nfor i in horror_list:\n    hi[i] = 0\nfor i in horror_list:\n    for j in similar[i]:\n        if hi[j] == 0:\n            continue\n        elif hi[j] == 1:\n            hi[j] = 0\n        else:\n            hi[j] = 1\n\nmax_hi = max(hi)\nmax_hi_movies = []\nfor i in range(n):\n    if hi[i] == max_hi:\n        max_hi_movies.append(i)\nprint(min(max_hi_movies))\n']
2022-04-12 04:04:52.802129 size on output set 1
2022-04-12 04:04:52.802136 size on input set 1
2022-04-12 04:05:05.940421 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# #Programme\n# n,h,l = map(int,input().split())\n# horror_list = list(map(int,input().split()))\n# similar = {}\n# for _ in range(l):\n#     a,b = map(int,input().split())\n#     if a not in similar:\n#         similar[a] = [b]\n#     else:\n#         similar[a].append(b)\n#     if b not in similar:\n#         similar[b] = [a]\n#     else:\n#         similar[b].append(a)\n#\n# hi = [0]*n\n# for i in horror_list:\n#     hi[i] = 0\n# for i in horror_list:\n#     for j in similar[i]:\n#         if hi[j] == 0:\n#             continue\n#         elif hi[j] == 1:\n#             hi[j] = 0\n#         else:\n#             hi[j] = 1\n#\n# max_hi = max(hi)\n# max_hi_movies = []\n# for i in range(n):\n#     if hi[i] == max_hi:\n#         max_hi_movies.append(i)\n# print(min(max_hi_movies))\n"
    },
    {
      "index": 1,
      "text": "\nn,h,l = map(int,input().split())\nhorror_list = list(map(int,input().split()))\nsimilar = {}\nfor _ in range(l):\n    a,b = map(int,input().split())\n    similar.setdefault(a,[]).append(b)\n    similar.setdefault(b,[]).append(a)\n\nhi = [0]*n\nfor i in horror_list:\n    hi[i] = 0\nfor i in horror_list:\n    for j in similar[i]:\n        if hi[j] == 0:\n            continue\n        elif hi[j] == 1:\n            hi[j] = 0\n        else:\n            hi[j] = 1\n\nmax_hi = max(hi)\nmax_hi_movies = []\nfor i in range(n):\n    if hi[i] == max_hi:\n        max_hi_movies.append(i)\nprint(min(max_hi_movies))\n"
    }
  ],
  "created": 1649750693,
  "object": "edit"
}
2022-04-12 04:05:05.940546 fix syntax errors 2 ['\n\n# #Programme\n# n,h,l = map(int,input().split())\n# horror_list = list(map(int,input().split()))\n# similar = {}\n# for _ in range(l):\n#     a,b = map(int,input().split())\n#     if a not in similar:\n#         similar[a] = [b]\n#     else:\n#         similar[a].append(b)\n#     if b not in similar:\n#         similar[b] = [a]\n#     else:\n#         similar[b].append(a)\n#\n# hi = [0]*n\n# for i in horror_list:\n#     hi[i] = 0\n# for i in horror_list:\n#     for j in similar[i]:\n#         if hi[j] == 0:\n#             continue\n#         elif hi[j] == 1:\n#             hi[j] = 0\n#         else:\n#             hi[j] = 1\n#\n# max_hi = max(hi)\n# max_hi_movies = []\n# for i in range(n):\n#     if hi[i] == max_hi:\n#         max_hi_movies.append(i)\n# print(min(max_hi_movies))\n', '\nn,h,l = map(int,input().split())\nhorror_list = list(map(int,input().split()))\nsimilar = {}\nfor _ in range(l):\n    a,b = map(int,input().split())\n    similar.setdefault(a,[]).append(b)\n    similar.setdefault(b,[]).append(a)\n\nhi = [0]*n\nfor i in horror_list:\n    hi[i] = 0\nfor i in horror_list:\n    for j in similar[i]:\n        if hi[j] == 0:\n            continue\n        elif hi[j] == 1:\n            hi[j] = 0\n        else:\n            hi[j] = 1\n\nmax_hi = max(hi)\nmax_hi_movies = []\nfor i in range(n):\n    if hi[i] == max_hi:\n        max_hi_movies.append(i)\nprint(min(max_hi_movies))\n']
2022-04-12 04:05:05.940566 size on output set 2
2022-04-12 04:05:05.940573 num operations 2
2022-04-12 04:05:05.940576 size on input set 1
2022-04-12 04:05:09.210419 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, h, l = map(int, input().split())\n    horror = set(map(int, input().split())) - {0}\n    similar = [[] for _ in range(n)]\n    for _ in range(l):\n        a, b = map(int, input().split())\n        similar[a].append(b)\n        similar[b].append(a)\n    horror_index = [0] * n\n    for i in range(n):\n        if i not in horror:\n            horror_index[i] = max(horror_index[j] for j in similar[i]) + 1\n    print(horror_index.index(max(horror_index)))\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, h, l = map(int, input().split())\n    horror_movies = set(map(int, input().split()))\n    similar = [[] for _ in range(n)]\n    for _ in range(l):\n        a, b = map(int, input().split())\n        similar[a].append(b)\n        similar[b].append(a)\n    horror_index = [0] * n\n    for i in range(n):\n        if i not in horror_movies:\n            horror_index[i] = max(horror_index[j] for j in similar[i]) + 1\n    print(horror_index.index(max(horror_index)))\n\nmain()\n"
    }
  ],
  "created": 1649750706,
  "object": "edit"
}
2022-04-12 04:05:09.210580 fix spelling mistakes 2 ['\n\ndef main():\n    n, h, l = map(int, input().split())\n    horror = set(map(int, input().split())) - {0}\n    similar = [[] for _ in range(n)]\n    for _ in range(l):\n        a, b = map(int, input().split())\n        similar[a].append(b)\n        similar[b].append(a)\n    horror_index = [0] * n\n    for i in range(n):\n        if i not in horror:\n            horror_index[i] = max(horror_index[j] for j in similar[i]) + 1\n    print(horror_index.index(max(horror_index)))\n\nmain()\n', '\n\ndef main():\n    n, h, l = map(int, input().split())\n    horror_movies = set(map(int, input().split()))\n    similar = [[] for _ in range(n)]\n    for _ in range(l):\n        a, b = map(int, input().split())\n        similar[a].append(b)\n        similar[b].append(a)\n    horror_index = [0] * n\n    for i in range(n):\n        if i not in horror_movies:\n            horror_index[i] = max(horror_index[j] for j in similar[i]) + 1\n    print(horror_index.index(max(horror_index)))\n\nmain()\n']
2022-04-12 04:05:09.210675 size on output set 2
2022-04-12 04:05:09.210684 size on input set 2
2022-04-12 04:05:12.186878 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, h, l = map(int, input().split())\n    horror = set(map(int, input().split()))\n    similar = [[] for _ in range(n)]\n    for _ in range(l):\n        a, b = map(int, input().split())\n        similar[a].append(b)\n        similar[b].append(a)\n    horror_index = [0] * n\n    for i in range(n):\n        if i in horror:\n            horror_index[i] = max(horror_index[j] for j in similar[i]) + 1\n    print(horror_index.index(max(horror_index)))\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, h, l = map(int, input().split())\n    horror = set(map(int, input().split()))\n    similar = [[] for _ in range(n)]\n    for _ in range(l):\n        a, b = map(int, input().split())\n        similar[a].append(b)\n        similar[b].append(a)\n    horror_index = [0] * n\n    for i in range(n):\n        if i not in horror and similar[i]:\n            horror_index[i] = max(horror_index[j] for j in similar[i]) + 1\n    print(horror_index.index(max(horror_index)))\n\nmain()\n"
    }
  ],
  "created": 1649750709,
  "object": "edit"
}
2022-04-12 04:05:12.187026 fix syntax errors 2 ['\n\ndef main():\n    n, h, l = map(int, input().split())\n    horror = set(map(int, input().split()))\n    similar = [[] for _ in range(n)]\n    for _ in range(l):\n        a, b = map(int, input().split())\n        similar[a].append(b)\n        similar[b].append(a)\n    horror_index = [0] * n\n    for i in range(n):\n        if i in horror:\n            horror_index[i] = max(horror_index[j] for j in similar[i]) + 1\n    print(horror_index.index(max(horror_index)))\n\nmain()\n', '\n\ndef main():\n    n, h, l = map(int, input().split())\n    horror = set(map(int, input().split()))\n    similar = [[] for _ in range(n)]\n    for _ in range(l):\n        a, b = map(int, input().split())\n        similar[a].append(b)\n        similar[b].append(a)\n    horror_index = [0] * n\n    for i in range(n):\n        if i not in horror and similar[i]:\n            horror_index[i] = max(horror_index[j] for j in similar[i]) + 1\n    print(horror_index.index(max(horror_index)))\n\nmain()\n']
2022-04-12 04:05:16.729667 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, h, l = map(int, input().split())\n    horror_movies = set(map(int, input().split())) - 1\n    similar = [[] for _ in range(n)]\n    for _ in range(l):\n        a, b = map(int, input().split())\n        similar[a - 1].append(b - 1)\n        similar[b - 1].append(a - 1)\n    horror_index = [0] * n\n    for i in range(n):\n        if i not in horror_movies:\n            horror_index[i] = max(horror_index[j] for j in similar[i]) + 1\n    print(horror_index.index(max(horror_index)))\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, h, l = map(int, input().split())\n    horror_movies = set(map(int, input().split())) - 1\n    similar = [[] for _ in range(n)]\n    for _ in range(l):\n        a, b = map(int, input().split())\n        similar[a].append(b)\n        similar[b].append(a)\n    horror_index = [0] * (n + 1)\n    for i in range(n):\n        horror_index[i + 1] = max(horror_index[j] for j in similar[i]) + 1 if i + 1 not in horror_movies else 0\n    print(horror_index.index(max(horror_index)))\n\nmain()\n"
    }
  ],
  "created": 1649750712,
  "object": "edit"
}
2022-04-12 04:05:16.729952 fix syntax errors 2 ['\n\ndef main():\n    n, h, l = map(int, input().split())\n    horror_movies = set(map(int, input().split())) - 1\n    similar = [[] for _ in range(n)]\n    for _ in range(l):\n        a, b = map(int, input().split())\n        similar[a - 1].append(b - 1)\n        similar[b - 1].append(a - 1)\n    horror_index = [0] * n\n    for i in range(n):\n        if i not in horror_movies:\n            horror_index[i] = max(horror_index[j] for j in similar[i]) + 1\n    print(horror_index.index(max(horror_index)))\n\nmain()\n', '\n\ndef main():\n    n, h, l = map(int, input().split())\n    horror_movies = set(map(int, input().split())) - 1\n    similar = [[] for _ in range(n)]\n    for _ in range(l):\n        a, b = map(int, input().split())\n        similar[a].append(b)\n        similar[b].append(a)\n    horror_index = [0] * (n + 1)\n    for i in range(n):\n        horror_index[i + 1] = max(horror_index[j] for j in similar[i]) + 1 if i + 1 not in horror_movies else 0\n    print(horror_index.index(max(horror_index)))\n\nmain()\n']
2022-04-12 04:05:16.729998 size on output set 4
