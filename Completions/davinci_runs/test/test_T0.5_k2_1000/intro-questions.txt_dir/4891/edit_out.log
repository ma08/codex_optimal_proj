2022-04-12 02:22:01.614857 num operations 2
2022-04-12 02:22:01.614884 size on input set 1
2022-04-12 02:22:04.342708 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\npieces = list(map(int, input().split()))\n\nfor i in range(6):\n    if i == 0:\n        print(1 - pieces[i], end=' ') \n    elif i == 1:\n        print(1 - pieces[i], end=' ')\n    elif i == 2:\n        print(2 - pieces[i], end=' ')\n    elif i == 3:\n        print(2 - pieces[i], end=' ')\n    elif i == 4:\n        print(2 - pieces[i], end=' ')\n    else:\n        print(8 - pieces[i], end=' ')\n"
    },
    {
      "index": 1,
      "text": "\n\npieces = list(map(int, input().split())) # input\n\nfor i in range(6):\n    if i == 0:\n        print(1 - pieces[i], end=' ')\n    elif i == 1:\n        print(1 - pieces[i], end=' ')\n    elif i == 2:\n        print(2 - pieces[i], end=' ')\n    elif i == 3:\n        print(2 - pieces[i], end=' ')\n    elif i == 4:\n        print(2 - pieces[i], end=' ')\n    else:\n        print(8 - pieces[i], end=' ')\n"
    }
  ],
  "created": 1649744521,
  "object": "edit"
}
2022-04-12 02:22:04.342888 fix spelling mistakes 2 ["\n\npieces = list(map(int, input().split()))\n\nfor i in range(6):\n    if i == 0:\n        print(1 - pieces[i], end=' ') \n    elif i == 1:\n        print(1 - pieces[i], end=' ')\n    elif i == 2:\n        print(2 - pieces[i], end=' ')\n    elif i == 3:\n        print(2 - pieces[i], end=' ')\n    elif i == 4:\n        print(2 - pieces[i], end=' ')\n    else:\n        print(8 - pieces[i], end=' ')\n", "\n\npieces = list(map(int, input().split())) # input\n\nfor i in range(6):\n    if i == 0:\n        print(1 - pieces[i], end=' ')\n    elif i == 1:\n        print(1 - pieces[i], end=' ')\n    elif i == 2:\n        print(2 - pieces[i], end=' ')\n    elif i == 3:\n        print(2 - pieces[i], end=' ')\n    elif i == 4:\n        print(2 - pieces[i], end=' ')\n    else:\n        print(8 - pieces[i], end=' ')\n"]
2022-04-12 02:22:04.342924 size on output set 2
2022-04-12 02:22:04.342936 size on input set 2
2022-04-12 02:22:07.045740 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\npieces = list(map(int, input().split()))\n\nfor i in range(6):\n    if i == 0:\n        print(1 - pieces[i], end=' ')\n    elif i == 1:\n        print(1 - pieces[i], end=' ')\n    elif i == 2:\n        print(2 - pieces[i], end=' ')\n    elif i == 3:\n        print(2 - pieces[i], end=' ')\n    elif i == 4:\n        print(2 - pieces[i], end=' ')\n    else:\n        print(8 - pieces[i], end=' ')\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\npieces = list(map(int, input().split()))\n\nfor i in range(6):\n    if i == 0:\n        print(1 - pieces[i], end=' ') \n    elif i == 1:\n        print(1 - pieces[i], end=' ')\n    elif i == 2:\n        print(2 - pieces[i], end=' ')\n    elif i == 3:\n        print(2 - pieces[i], end=' ')\n    elif i == 4:\n        print(2 - pieces[i], end=' ')\n    else:\n        print(8 - pieces[i], end=' ')\n"
    }
  ],
  "created": 1649744524,
  "object": "edit"
}
2022-04-12 02:22:07.045930 fix syntax errors 2 ["\npieces = list(map(int, input().split()))\n\nfor i in range(6):\n    if i == 0:\n        print(1 - pieces[i], end=' ')\n    elif i == 1:\n        print(1 - pieces[i], end=' ')\n    elif i == 2:\n        print(2 - pieces[i], end=' ')\n    elif i == 3:\n        print(2 - pieces[i], end=' ')\n    elif i == 4:\n        print(2 - pieces[i], end=' ')\n    else:\n        print(8 - pieces[i], end=' ')\n", "#!/usr/bin/env python3\n\npieces = list(map(int, input().split()))\n\nfor i in range(6):\n    if i == 0:\n        print(1 - pieces[i], end=' ') \n    elif i == 1:\n        print(1 - pieces[i], end=' ')\n    elif i == 2:\n        print(2 - pieces[i], end=' ')\n    elif i == 3:\n        print(2 - pieces[i], end=' ')\n    elif i == 4:\n        print(2 - pieces[i], end=' ')\n    else:\n        print(8 - pieces[i], end=' ')\n"]
2022-04-12 02:22:09.678844 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\npieces = list(map(int, input().split()))  # input\n\nfor i in range(6):\n    if i == 0:\n        print(1 - pieces[i], end=' ')\n    elif i == 1:\n        print(1 - pieces[i], end=' ')\n    elif i == 2:\n        print(2 - pieces[i], end=' ')\n    elif i == 3:\n        print(2 - pieces[i], end=' ')\n    elif i == 4:\n        print(2 - pieces[i], end=' ')\n    else:\n        print(8 - pieces[i], end=' ')\n"
    },
    {
      "index": 1,
      "text": "\n\npieces = list(map(int, input().split()))\n\nfor i in range(6):\n    if i == 0:\n        print(1 - pieces[i], end=' ')\n    elif i == 1:\n        print(1 - pieces[i], end=' ')\n    elif i == 2:\n        print(2 - pieces[i], end=' ')\n    elif i == 3:\n        print(2 - pieces[i], end=' ')\n    elif i == 4:\n        print(2 - pieces[i], end=' ')\n    else:\n        print(8 - pieces[i], end=' ')\n"
    }
  ],
  "created": 1649744527,
  "object": "edit"
}
2022-04-12 02:22:09.679194 fix syntax errors 2 ["\npieces = list(map(int, input().split()))  # input\n\nfor i in range(6):\n    if i == 0:\n        print(1 - pieces[i], end=' ')\n    elif i == 1:\n        print(1 - pieces[i], end=' ')\n    elif i == 2:\n        print(2 - pieces[i], end=' ')\n    elif i == 3:\n        print(2 - pieces[i], end=' ')\n    elif i == 4:\n        print(2 - pieces[i], end=' ')\n    else:\n        print(8 - pieces[i], end=' ')\n", "\n\npieces = list(map(int, input().split()))\n\nfor i in range(6):\n    if i == 0:\n        print(1 - pieces[i], end=' ')\n    elif i == 1:\n        print(1 - pieces[i], end=' ')\n    elif i == 2:\n        print(2 - pieces[i], end=' ')\n    elif i == 3:\n        print(2 - pieces[i], end=' ')\n    elif i == 4:\n        print(2 - pieces[i], end=' ')\n    else:\n        print(8 - pieces[i], end=' ')\n"]
2022-04-12 02:22:09.679220 size on output set 4
2022-04-12 02:22:09.679233 num operations 2
2022-04-12 02:22:09.679237 size on input set 1
2022-04-12 02:22:12.145509 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\npieces = [1, 1, 2, 2, 2, 8]\ncount = [int(i) for i in input().split()]\n#\nfor i in range(6):\n    print(pieces[i] - count[i], end=\" \")\n"
    },
    {
      "index": 1,
      "text": "\n\npieces = [1, 1, 2, 2, 2, 8] # pieces of chess\ncount = [int(i) for i in input().split()]\n\nfor i in range(6):\n    print(pieces[i] - count[i], end=\" \")\n"
    }
  ],
  "created": 1649744529,
  "object": "edit"
}
2022-04-12 02:22:12.145714 fix spelling mistakes 2 ['\n\npieces = [1, 1, 2, 2, 2, 8]\ncount = [int(i) for i in input().split()]\n#\nfor i in range(6):\n    print(pieces[i] - count[i], end=" ")\n', '\n\npieces = [1, 1, 2, 2, 2, 8] # pieces of chess\ncount = [int(i) for i in input().split()]\n\nfor i in range(6):\n    print(pieces[i] - count[i], end=" ")\n']
2022-04-12 02:22:12.145741 size on output set 2
2022-04-12 02:22:12.145751 size on input set 2
2022-04-12 02:22:14.744675 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\npieces = [1, 1, 2, 2, 2, 8]  # pieces of chess\ncount = [int(i) for i in input().split()]\n\nfor i in range(6):\n    print(pieces[i] - count[i], end=\" \")\n"
    },
    {
      "index": 1,
      "text": "\npieces = [1, 1, 2, 2, 2, 8] # pieces of chess\ncount = [int(i) for i in input().split()]\n\nfor i in range(6):\n    print(pieces[i] - count[i], end=\" \")\n"
    }
  ],
  "created": 1649744532,
  "object": "edit"
}
2022-04-12 02:22:14.744868 fix syntax errors 2 ['\n\npieces = [1, 1, 2, 2, 2, 8]  # pieces of chess\ncount = [int(i) for i in input().split()]\n\nfor i in range(6):\n    print(pieces[i] - count[i], end=" ")\n', '\npieces = [1, 1, 2, 2, 2, 8] # pieces of chess\ncount = [int(i) for i in input().split()]\n\nfor i in range(6):\n    print(pieces[i] - count[i], end=" ")\n']
2022-04-12 02:22:16.784212 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\npieces = [1, 1, 2, 2, 2, 8]\ncount = [int(i) for i in input().split()]\n\nfor i in range(6):\n    print(pieces[i] - count[i], end=\" \")\n"
    },
    {
      "index": 1,
      "text": "\npieces = [1, 1, 2, 2, 2, 8]\ncount = [int(i) for i in input().split()]\n\nfor i in range(6):\n    print(pieces[i] - count[i], end=\" \")\n"
    }
  ],
  "created": 1649744534,
  "object": "edit"
}
2022-04-12 02:22:16.784509 fix syntax errors 2 ['\n\npieces = [1, 1, 2, 2, 2, 8]\ncount = [int(i) for i in input().split()]\n\nfor i in range(6):\n    print(pieces[i] - count[i], end=" ")\n', '\npieces = [1, 1, 2, 2, 2, 8]\ncount = [int(i) for i in input().split()]\n\nfor i in range(6):\n    print(pieces[i] - count[i], end=" ")\n']
2022-04-12 02:22:16.784537 size on output set 4
2022-04-12 02:22:16.784553 num operations 2
2022-04-12 02:22:16.784561 size on input set 1
2022-04-12 02:22:19.594731 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nking, queen, rook, bishop, knight, pawn = [int(x) for x in input().split()] \n\nprint(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)\n"
    },
    {
      "index": 1,
      "text": "\n\nking, queen, rook, bishop, knight, pawn = [int(x) for x in input().split()] #input\n\nprint(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)\n"
    }
  ],
  "created": 1649744536,
  "object": "edit"
}
2022-04-12 02:22:19.594833 fix spelling mistakes 2 ['\n\nking, queen, rook, bishop, knight, pawn = [int(x) for x in input().split()] \n\nprint(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)\n', '\n\nking, queen, rook, bishop, knight, pawn = [int(x) for x in input().split()] #input\n\nprint(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)\n']
2022-04-12 02:22:19.594843 size on output set 2
2022-04-12 02:22:19.594847 size on input set 2
2022-04-12 02:22:23.310709 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nking, queen, rook, bishop, knight, pawn = [int(x) for x in input().split()]\n\nprint(1 - king, 1 - queen, 2 - rook, 2 - bishop, 2 - knight, 8 - pawn)\n"
    },
    {
      "index": 1,
      "text": "\nking, queen, rook, bishop, knight, pawn = [int(x) for x in input().split()] \n\nprint(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)\n"
    }
  ],
  "created": 1649744539,
  "object": "edit"
}
2022-04-12 02:22:23.310870 fix syntax errors 2 ['\n\nking, queen, rook, bishop, knight, pawn = [int(x) for x in input().split()]\n\nprint(1 - king, 1 - queen, 2 - rook, 2 - bishop, 2 - knight, 8 - pawn)\n', '\nking, queen, rook, bishop, knight, pawn = [int(x) for x in input().split()] \n\nprint(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)\n']
2022-04-12 02:22:26.121265 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nking, queen, rook, bishop, knight, pawn = [int(x) for x in input().split()]\n\nprint(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)\n"
    },
    {
      "index": 1,
      "text": "\n\nking, queen, rook, bishop, knight, pawn = [int(x) for x in input().split()]\n\nprint(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)\n"
    }
  ],
  "created": 1649744543,
  "object": "edit"
}
2022-04-12 02:22:26.121625 fix syntax errors 2 ['\n\nking, queen, rook, bishop, knight, pawn = [int(x) for x in input().split()]\n\nprint(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)\n', '\n\nking, queen, rook, bishop, knight, pawn = [int(x) for x in input().split()]\n\nprint(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)\n']
2022-04-12 02:22:26.121667 size on output set 3
2022-04-12 02:22:26.121683 num operations 2
2022-04-12 02:22:26.121693 size on input set 1
2022-04-12 02:22:29.064891 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    inp = [int(x) for x in input().split()]\n    for i, num in enumerate(inp):\n        if i == 0:\n            print(1-num, end=\" \")\n        elif i == 1:\n            print(1-num, end=\" \")\n        elif i == 2:\n            print(2-num, end=\" \")\n        elif i == 3:\n            print(2-num, end=\" \")\n        elif i == 4:\n            print(2-num, end=\" \")\n        else:\n            print(8-num)\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    inp = [int(x) for x in input().split()]\n    for i, num in enumerate(inp):\n        if i == 0:\n            print(1-num, end=\" \")\n        elif i == 1:\n            print(1-num, end=\" \")\n        elif i == 2:\n            print(2-num, end=\" \")\n        elif i == 3:\n            print(2-num, end=\" \")\n        elif i == 4:\n            print(2-num, end=\" \")\n        else:\n            print(8-num)\n\nmain()\n"
    }
  ],
  "created": 1649744546,
  "object": "edit"
}
2022-04-12 02:22:29.065065 fix spelling mistakes 2 ['\n\ndef main():\n    inp = [int(x) for x in input().split()]\n    for i, num in enumerate(inp):\n        if i == 0:\n            print(1-num, end=" ")\n        elif i == 1:\n            print(1-num, end=" ")\n        elif i == 2:\n            print(2-num, end=" ")\n        elif i == 3:\n            print(2-num, end=" ")\n        elif i == 4:\n            print(2-num, end=" ")\n        else:\n            print(8-num)\n\nmain()\n', '\n\ndef main():\n    inp = [int(x) for x in input().split()]\n    for i, num in enumerate(inp):\n        if i == 0:\n            print(1-num, end=" ")\n        elif i == 1:\n            print(1-num, end=" ")\n        elif i == 2:\n            print(2-num, end=" ")\n        elif i == 3:\n            print(2-num, end=" ")\n        elif i == 4:\n            print(2-num, end=" ")\n        else:\n            print(8-num)\n\nmain()\n']
2022-04-12 02:22:29.065103 size on output set 1
2022-04-12 02:22:29.065112 size on input set 1
2022-04-12 02:22:34.469678 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    inp = [int(x) for x in input().split()]\n    for i, num in enumerate(inp):\n        if i == 0:\n            print(1 - num, end=\" \")\n        elif i == 1:\n            print(1 - num, end=\" \")\n        elif i == 2:\n            print(2 - num, end=\" \")\n        elif i == 3:\n            print(2 - num, end=\" \")\n        elif i == 4:\n            print(2 - num, end=\" \")\n        else:\n            print(8 - num)\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    inp = [int(x) for x in input().split()]\n    for i, num in enumerate(inp):\n        if i == 0:\n            print(1 - num, end=\" \")\n        elif i == 1:\n            print(1 - num, end=\" \")\n        elif i == 2:\n            print(2 - num, end=\" \")\n        elif i == 3:\n            print(2 - num, end=\" \")\n        elif i == 4:\n            print(2 - num, end=\" \")\n        else:\n            print(8 - num)\n\n\nmain()\n"
    }
  ],
  "created": 1649744549,
  "object": "edit"
}
2022-04-12 02:22:34.469777 fix syntax errors 2 ['\n\ndef main():\n    inp = [int(x) for x in input().split()]\n    for i, num in enumerate(inp):\n        if i == 0:\n            print(1 - num, end=" ")\n        elif i == 1:\n            print(1 - num, end=" ")\n        elif i == 2:\n            print(2 - num, end=" ")\n        elif i == 3:\n            print(2 - num, end=" ")\n        elif i == 4:\n            print(2 - num, end=" ")\n        else:\n            print(8 - num)\n\nmain()\n', '\ndef main():\n    inp = [int(x) for x in input().split()]\n    for i, num in enumerate(inp):\n        if i == 0:\n            print(1 - num, end=" ")\n        elif i == 1:\n            print(1 - num, end=" ")\n        elif i == 2:\n            print(2 - num, end=" ")\n        elif i == 3:\n            print(2 - num, end=" ")\n        elif i == 4:\n            print(2 - num, end=" ")\n        else:\n            print(8 - num)\n\n\nmain()\n']
2022-04-12 02:22:34.469791 size on output set 2
2022-04-12 02:22:34.469797 num operations 2
2022-04-12 02:22:34.469800 size on input set 1
2022-04-12 02:22:38.168369 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())\n    print(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn) \n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split()) #input\n    print(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn) #output\n\nmain()\n"
    }
  ],
  "created": 1649744554,
  "object": "edit"
}
2022-04-12 02:22:38.168577 fix spelling mistakes 2 ['\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())\n    print(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn) \n\nmain()\n', '\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split()) #input\n    print(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn) #output\n\nmain()\n']
2022-04-12 02:22:38.168596 size on output set 2
2022-04-12 02:22:38.168600 size on input set 2
2022-04-12 02:22:41.045097 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())\n    print(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())\n    print(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)\n\nmain()\n"
    }
  ],
  "created": 1649744558,
  "object": "edit"
}
2022-04-12 02:22:41.045198 fix syntax errors 2 ['\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())\n    print(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)\n\nmain()\n', '\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())\n    print(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)\n\nmain()\n']
2022-04-12 02:22:45.018703 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())\n    print(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())  # input\n    print(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)  # output\n\nmain()\n"
    }
  ],
  "created": 1649744561,
  "object": "edit"
}
2022-04-12 02:22:45.019021 fix syntax errors 2 ['\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())\n    print(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)\n\nmain()\n', '\n\ndef main():\n    king, queen, rook, bishop, knight, pawn = map(int, input().split())  # input\n    print(1-king, 1-queen, 2-rook, 2-bishop, 2-knight, 8-pawn)  # output\n\nmain()\n']
2022-04-12 02:22:45.019056 size on output set 2
2022-04-12 02:22:45.019071 num operations 2
2022-04-12 02:22:45.019080 size on input set 1
2022-04-12 02:22:47.398171 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\n# Get input\npieces = [int(x) for x in sys.stdin.readline().split()]\n\n# Check if each piece is in the correct quantities\nprint(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\n# Get input from user\npieces = [int(x) for x in sys.stdin.readline().split()]\n\n# Check if each piece is in the correct quantity\nprint(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n"
    }
  ],
  "created": 1649744565,
  "object": "edit"
}
2022-04-12 02:22:47.398271 fix spelling mistakes 2 ['\n\nimport sys\n\n# Get input\npieces = [int(x) for x in sys.stdin.readline().split()]\n\n# Check if each piece is in the correct quantities\nprint(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n', '\n\nimport sys\n\n# Get input from user\npieces = [int(x) for x in sys.stdin.readline().split()]\n\n# Check if each piece is in the correct quantity\nprint(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n']
2022-04-12 02:22:47.398283 size on output set 2
2022-04-12 02:22:47.398287 size on input set 2
2022-04-12 02:22:51.194751 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\n# Get input from user\npieces = [int(x) for x in sys.stdin.readline().split()]\n\n# Check if each piece is in the correct quantity\nprint(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5], sep=' ')\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\n# Get input from user\npieces = [int(x) for x in sys.stdin.readline().split()]\n\n# Check if each piece is in the correct quantity\nprint(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5]) \n"
    }
  ],
  "created": 1649744567,
  "object": "edit"
}
2022-04-12 02:22:51.194892 fix syntax errors 2 ["\nimport sys\n\n# Get input from user\npieces = [int(x) for x in sys.stdin.readline().split()]\n\n# Check if each piece is in the correct quantity\nprint(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5], sep=' ')\n", '\n\nimport sys\n\n# Get input from user\npieces = [int(x) for x in sys.stdin.readline().split()]\n\n# Check if each piece is in the correct quantity\nprint(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5]) \n']
2022-04-12 02:23:27.318737 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    # Get input\n    pieces = [int(x) for x in sys.stdin.readline().split()]\n\n    # Check if each piece is in the correct quantities\n    print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649744571,
  "object": "edit"
}
2022-04-12 02:23:27.318984 fix syntax errors 2 ['\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\n\n# import sys\n\n# # Get input\n# pieces = [int(x) for x in sys.stdin.readline().split()]\n\n# # Check if each piece is in the correct quantities\n# print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n', '\n\nimport sys\n\ndef main():\n    # Get input\n    pieces = [int(x) for x in sys.stdin.readline().split()]\n\n    # Check if each piece is in the correct quantities\n    print(1 - pieces[0], 1 - pieces[1], 2 - pieces[2], 2 - pieces[3], 2 - pieces[4], 8 - pieces[5])\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 02:23:27.319046 size on output set 4
2022-04-12 02:23:27.319057 num operations 2
2022-04-12 02:23:27.319064 size on input set 1
2022-04-12 02:23:29.605263 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # Read the input\n    pieces = [int(x) for x in input().split(\" \")]\n\n    # Output the result\n    print(\"1 0 0 0 0 1 0\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # Read the input\n    pieces = [int(x) for x in input().split(\" \")]\n\n    # Output the result\n    print(\"1 0 0 0 0 0\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649744607,
  "object": "edit"
}
2022-04-12 02:23:29.605447 fix spelling mistakes 2 ['\n\ndef main():\n    # Read the input\n    pieces = [int(x) for x in input().split(" ")]\n\n    # Output the result\n    print("1 0 0 0 0 1 0")\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # Read the input\n    pieces = [int(x) for x in input().split(" ")]\n\n    # Output the result\n    print("1 0 0 0 0 0")\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 02:23:29.605476 size on output set 2
2022-04-12 02:23:29.605485 size on input set 2
2022-04-12 02:23:32.014769 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # Read the input\n    pieces = [int(x) for x in input().split()]\n\n    # Output the result\n    print(\"1 0 0 0 0 1 0\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # Read the input\n    pieces = [int(x) for x in input().split(\" \")]\n\n    # Output the result\n    print(\"1 0 0 0 0 1 0 0\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649744609,
  "object": "edit"
}
2022-04-12 02:23:32.015025 fix syntax errors 2 ['\n\ndef main():\n    # Read the input\n    pieces = [int(x) for x in input().split()]\n\n    # Output the result\n    print("1 0 0 0 0 1 0")\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # Read the input\n    pieces = [int(x) for x in input().split(" ")]\n\n    # Output the result\n    print("1 0 0 0 0 1 0 0")\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 02:23:35.186705 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # Read the input\n    pieces = [int(x) for x in input().split(\" \")] # read the input\n\n    # Output the result\n    print(\"1 0 0 0 0 0\") # output the result\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # Read the input\n    pieces = [int(x) for x in input().split()]\n\n    # Output the result\n    print(\"1 0 0 0 0 0\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649744612,
  "object": "edit"
}
2022-04-12 02:23:35.186875 fix syntax errors 2 ['\n\ndef main():\n    # Read the input\n    pieces = [int(x) for x in input().split(" ")] # read the input\n\n    # Output the result\n    print("1 0 0 0 0 0") # output the result\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # Read the input\n    pieces = [int(x) for x in input().split()]\n\n    # Output the result\n    print("1 0 0 0 0 0")\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 02:23:35.186892 size on output set 4
2022-04-12 02:23:35.186907 num operations 2
2022-04-12 02:23:35.186911 size on input set 1
2022-04-12 02:23:47.210829 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\npcs = [int(x) for x in input().split()] #input the numbers\n\nfor i in range(len(pcs)): #for loop\n    if i == 0:\n        if pcs[i] > 1: #if the number is greater than 1\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1: #if the number is less than 1\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1: #if the number is greater than 1\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1: #if the number is less than 1\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2: #if the number is greater than 2\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2: #if the number is less than 2\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2: #if the number is greater than 2\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2: #if the number is less than 2\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2: #if the number is greater than 2\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2: #if the number is less than 2\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8: #if the number is greater than 8\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8: #if the number is less than 8\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs) #print the new list\n"
    },
    {
      "index": 1,
      "text": "\npcs = [int(x) for x in input().split()]\n\nfor i in range(len(pcs)):\n    if i == 0:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8:\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8:\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs)\n"
    }
  ],
  "created": 1649744615,
  "object": "edit"
}
2022-04-12 02:23:47.211310 fix spelling mistakes 2 ['\n\npcs = [int(x) for x in input().split()] #input the numbers\n\nfor i in range(len(pcs)): #for loop\n    if i == 0:\n        if pcs[i] > 1: #if the number is greater than 1\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1: #if the number is less than 1\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1: #if the number is greater than 1\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1: #if the number is less than 1\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2: #if the number is greater than 2\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2: #if the number is less than 2\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2: #if the number is greater than 2\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2: #if the number is less than 2\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2: #if the number is greater than 2\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2: #if the number is less than 2\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8: #if the number is greater than 8\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8: #if the number is less than 8\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs) #print the new list\n', '\npcs = [int(x) for x in input().split()]\n\nfor i in range(len(pcs)):\n    if i == 0:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8:\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8:\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs)\n']
2022-04-12 02:23:47.211384 size on output set 2
2022-04-12 02:23:47.211401 size on input set 2
2022-04-12 02:23:49.836342 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "pcs = [int(x) for x in input().split()]\n\nfor i in range(len(pcs)):\n    if i == 0:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8:\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8:\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs)\n"
    },
    {
      "index": 1,
      "text": "\npcs = [int(x) for x in input().split(\" \")]\n\nfor i in range(len(pcs)):\n    if i == 0:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8:\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8:\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs)\n"
    }
  ],
  "created": 1649744627,
  "object": "edit"
}
2022-04-12 02:23:49.836448 fix syntax errors 2 ['pcs = [int(x) for x in input().split()]\n\nfor i in range(len(pcs)):\n    if i == 0:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8:\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8:\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs)\n', '\npcs = [int(x) for x in input().split(" ")]\n\nfor i in range(len(pcs)):\n    if i == 0:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1:\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2:\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8:\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8:\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs)\n']
2022-04-12 02:24:03.694738 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\npcs = [int(x) for x in input().split()] #input the numbers\nfor i in range(len(pcs)): #for loop\n    if i == 0:\n        if pcs[i] > 1: #if the number is greater than 1\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1: #if the number is less than 1\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1: #if the number is greater than 1\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1: #if the number is less than 1\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2: #if the number is greater than 2\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2: #if the number is less than 2\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2: #if the number is greater than 2\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2: #if the number is less than 2\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2: #if the number is greater than 2\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2: #if the number is less than 2\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8: #if the number is greater than 8\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8: #if the number is less than 8\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs) #print the new list\n"
    },
    {
      "index": 1,
      "text": "\n\npcs = [int(x) for x in input().split()]  # input the numbers\n\nfor i in range(len(pcs)):  # for loop\n    if i == 0:\n        if pcs[i] > 1:  # if the number is greater than 1\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:  # if the number is less than 1\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1:  # if the number is greater than 1\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:  # if the number is less than 1\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2:  # if the number is greater than 2\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:  # if the number is less than 2\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2:  # if the number is greater than 2\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:  # if the number is less than 2\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2:  # if the number is greater than 2\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:  # if the number is less than 2\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8:  # if the number is greater than 8\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8:  # if the number is less than 8\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs)  # print the new list\n"
    }
  ],
  "created": 1649744630,
  "object": "edit"
}
2022-04-12 02:24:03.695038 fix syntax errors 2 ['\npcs = [int(x) for x in input().split()] #input the numbers\nfor i in range(len(pcs)): #for loop\n    if i == 0:\n        if pcs[i] > 1: #if the number is greater than 1\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1: #if the number is less than 1\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1: #if the number is greater than 1\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1: #if the number is less than 1\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2: #if the number is greater than 2\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2: #if the number is less than 2\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2: #if the number is greater than 2\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2: #if the number is less than 2\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2: #if the number is greater than 2\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2: #if the number is less than 2\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8: #if the number is greater than 8\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8: #if the number is less than 8\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs) #print the new list\n', '\n\npcs = [int(x) for x in input().split()]  # input the numbers\n\nfor i in range(len(pcs)):  # for loop\n    if i == 0:\n        if pcs[i] > 1:  # if the number is greater than 1\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:  # if the number is less than 1\n            pcs[i] = pcs[i] + 1\n    elif i == 1:\n        if pcs[i] > 1:  # if the number is greater than 1\n            pcs[i] = pcs[i] - 1\n        elif pcs[i] < 1:  # if the number is less than 1\n            pcs[i] = pcs[i] + 1\n    elif i == 2:\n        if pcs[i] > 2:  # if the number is greater than 2\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:  # if the number is less than 2\n            pcs[i] = pcs[i] + 2\n    elif i == 3:\n        if pcs[i] > 2:  # if the number is greater than 2\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:  # if the number is less than 2\n            pcs[i] = pcs[i] + 2\n    elif i == 4:\n        if pcs[i] > 2:  # if the number is greater than 2\n            pcs[i] = pcs[i] - 2\n        elif pcs[i] < 2:  # if the number is less than 2\n            pcs[i] = pcs[i] + 2\n    elif i == 5:\n        if pcs[i] > 8:  # if the number is greater than 8\n            pcs[i] = pcs[i] - 8\n        elif pcs[i] < 8:  # if the number is less than 8\n            pcs[i] = pcs[i] + 8\n\nprint(*pcs)  # print the new list\n']
2022-04-12 02:24:03.695068 size on output set 4
