2022-04-11 18:46:42.625694 num operations 2
2022-04-11 18:46:42.625723 size on input set 1
2022-04-11 18:46:46.491476 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    survivors = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        survivors -= set(map(int, sys.stdin.readline().split()))\n    print(len(survivors))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    survivors = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        survivors -= set(map(int, sys.stdin.readline().split()))\n    print(len(survivors))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649717202,
  "object": "edit"
}
2022-04-11 18:46:46.491658 fix spelling mistakes 2 ["\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    survivors = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        survivors -= set(map(int, sys.stdin.readline().split()))\n    print(len(survivors))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    survivors = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        survivors -= set(map(int, sys.stdin.readline().split()))\n    print(len(survivors))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 18:46:46.491681 size on output set 1
2022-04-11 18:46:46.491685 size on input set 1
2022-04-11 18:46:50.749336 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    print(a)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    survivors = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        survivors -= set(map(int, sys.stdin.readline().split()))\n    print(len(survivors))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649717206,
  "object": "edit"
}
2022-04-11 18:46:50.749523 fix syntax errors 2 ["\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    print(a)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n    survivors = set([i for i in range(1, n+1)])\n    for _ in range(k):\n        d = int(sys.stdin.readline())\n        survivors -= set(map(int, sys.stdin.readline().split()))\n    print(len(survivors))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 18:46:50.749550 size on output set 2
2022-04-11 18:46:50.749578 num operations 2
2022-04-11 18:46:50.749588 size on input set 1
2022-04-11 18:46:55.274169 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN, K = map(int, input().split())\nA = []\n\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = set()\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom functools import partial \n\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n"
    }
  ],
  "created": 1649717210,
  "object": "edit"
}
2022-04-11 18:46:55.274347 fix spelling mistakes 2 ['\n\nN, K = map(int, input().split())\nA = []\n\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = set()\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n', '\n\nfrom functools import partial \n\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n']
2022-04-11 18:46:55.274375 size on output set 2
2022-04-11 18:46:55.274384 size on input set 2
2022-04-11 18:46:57.442182 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom functools import partial\n\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n"
    }
  ],
  "created": 1649717215,
  "object": "edit"
}
2022-04-11 18:46:57.442473 fix syntax errors 2 ['\n\nfrom functools import partial\n\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n', '\nN, K = map(int, input().split())\n\nA = []\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = []\nfor i in range(K):\n    A_flat.extend(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n']
2022-04-11 18:46:59.735255 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN, K = map(int, input().split())\nA = []\n\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = set()\nfor i in range(K):\n    A_flat.update(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\nN, K = map(int, input().split())\nA = []\n\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = set()\nfor i in range(K):\n    A_flat.update(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n"
    }
  ],
  "created": 1649717217,
  "object": "edit"
}
2022-04-11 18:46:59.735435 fix syntax errors 2 ['\n\nN, K = map(int, input().split())\nA = []\n\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = set()\nfor i in range(K):\n    A_flat.update(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n', '\n\nN, K = map(int, input().split())\nA = []\n\nfor i in range(K):\n    d = int(input())\n    A.append(list(map(int, input().split())))\n\nA_flat = set()\nfor i in range(K):\n    A_flat.update(A[i])\nA_flat = set(A_flat)\n\nans = N - len(A_flat)\nprint(ans)\n']
2022-04-11 18:46:59.735463 size on output set 3
