2022-04-11 23:16:15.568305 num operations 2
2022-04-11 23:16:15.568442 size on input set 1
2022-04-11 23:16:18.950791 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef square_cake(n, h, v):\n\n    # Find the dimensions of the largest piece of cake.\n    x = min(h, n - h, v, n - v)\n\n    # Find the volume of the largest piece of cake\n    return x * x * 4\n\nprint(square_cake(10, 4, 7))\nprint(square_cake(5, 2, 2))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef square_cake(n, h, v):\n\n    # Find the dimensions of the largest piece of cake.\n    x = min(h, n - h, v, n - v)\n\n    # Find the volume of the largest piece of cake.\n    return x * x * 4\n\nprint(square_cake(10, 4, 7))\nprint(square_cake(5, 2, 2))\n"
    }
  ],
  "created": 1649733375,
  "object": "edit"
}
2022-04-11 23:16:18.951149 fix spelling mistakes 2 ['\n\ndef square_cake(n, h, v):\n\n    # Find the dimensions of the largest piece of cake.\n    x = min(h, n - h, v, n - v)\n\n    # Find the volume of the largest piece of cake\n    return x * x * 4\n\nprint(square_cake(10, 4, 7))\nprint(square_cake(5, 2, 2))\n', '\n\ndef square_cake(n, h, v):\n\n    # Find the dimensions of the largest piece of cake.\n    x = min(h, n - h, v, n - v)\n\n    # Find the volume of the largest piece of cake.\n    return x * x * 4\n\nprint(square_cake(10, 4, 7))\nprint(square_cake(5, 2, 2))\n']
2022-04-11 23:16:18.951185 size on output set 2
2022-04-11 23:16:18.951198 size on input set 2
2022-04-11 23:16:22.569596 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef square_cake(n, h, v):\n\n    # Find the dimensions of the largest piece of cake.\n    x = min(h, n - h, v, n - v)\n\n    # Find the volume of the largest piece of cake.\n    return x * x * 4;\n\nprint(square_cake(10, 4, 7));\nprint(square_cake(5, 2, 2));\n"
    },
    {
      "index": 1,
      "text": "\n\ndef square_cake(n, h, v):\n\n    # Find the dimensions of the largest piece of cake.\n    x = min(h, n - h, v, n - v) / 2\n\n    # Find the volume of the largest piece of cake.\n    return x * x * 4\n\nprint(square_cake(10, 4, 7))\nprint(square_cake(5, 2, 2))\n"
    }
  ],
  "created": 1649733379,
  "object": "edit"
}
2022-04-11 23:16:22.569785 fix syntax errors 2 ['\n\ndef square_cake(n, h, v):\n\n    # Find the dimensions of the largest piece of cake.\n    x = min(h, n - h, v, n - v)\n\n    # Find the volume of the largest piece of cake.\n    return x * x * 4;\n\nprint(square_cake(10, 4, 7));\nprint(square_cake(5, 2, 2));\n', '\n\ndef square_cake(n, h, v):\n\n    # Find the dimensions of the largest piece of cake.\n    x = min(h, n - h, v, n - v) / 2\n\n    # Find the volume of the largest piece of cake.\n    return x * x * 4\n\nprint(square_cake(10, 4, 7))\nprint(square_cake(5, 2, 2))\n']
2022-04-11 23:16:25.408302 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef square_cake(n, h, v):\n\n    # Find the dimensions of the largest piece of cake.\n    x = min(h, n - h, v, n - v) / 2\n\n    # Find the volume of the largest piece of cake\n    return x * x * 4\n\nprint(square_cake(10, 4, 7))\nprint(square_cake(5, 2, 2))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef square_cake(n, h, v):\n\n    # Find the dimensions of the largest piece of cake\n    x = min(h, n - h, v, n - v)\n\n    # Find the volume of the largest piece of cake\n    return x * x * 4\n\nprint(square_cake(10, 4, 7))\nprint(square_cake(5, 2, 2))\n"
    }
  ],
  "created": 1649733382,
  "object": "edit"
}
2022-04-11 23:16:25.408426 fix syntax errors 2 ['\n\ndef square_cake(n, h, v):\n\n    # Find the dimensions of the largest piece of cake.\n    x = min(h, n - h, v, n - v) / 2\n\n    # Find the volume of the largest piece of cake\n    return x * x * 4\n\nprint(square_cake(10, 4, 7))\nprint(square_cake(5, 2, 2))\n', '\n\ndef square_cake(n, h, v):\n\n    # Find the dimensions of the largest piece of cake\n    x = min(h, n - h, v, n - v)\n\n    # Find the volume of the largest piece of cake\n    return x * x * 4\n\nprint(square_cake(10, 4, 7))\nprint(square_cake(5, 2, 2))\n']
2022-04-11 23:16:25.408447 size on output set 4
2022-04-11 23:16:25.408461 num operations 2
2022-04-11 23:16:25.408465 size on input set 1
2022-04-11 23:16:34.082714 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # read input\n    n, h, v = [int(x) for x in input().split()]\n\n    # compute largest volume\n    volume = (n - max(h, n - h)) * (n - max(v, n - v)) * 4\n\n    # display result\n    print(volume)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # Read input \n    n, h, v = [int(x) for x in input().split()] \n\n    # Compute largest volume \n    volume = (n - max(h, n - h)) * (n - max(v, n - v)) * 4 \n\n    # Display result\n    print(volume)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649733385,
  "object": "edit"
}
2022-04-11 23:16:34.082917 fix spelling mistakes 2 ['\n\ndef main():\n    # read input\n    n, h, v = [int(x) for x in input().split()]\n\n    # compute largest volume\n    volume = (n - max(h, n - h)) * (n - max(v, n - v)) * 4\n\n    # display result\n    print(volume)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # Read input \n    n, h, v = [int(x) for x in input().split()] \n\n    # Compute largest volume \n    volume = (n - max(h, n - h)) * (n - max(v, n - v)) * 4 \n\n    # Display result\n    print(volume)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 23:16:34.082947 size on output set 2
2022-04-11 23:16:34.082957 size on input set 2
2022-04-11 23:16:39.348452 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # Read input\n    n, h, v = [int(x) for x in input().split()]\n\n    # Compute largest volume\n    volume = (n - max(h, n - h)) * (n - max(v, n - v)) * 4\n\n    # Display result\n    print(volume)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # Read input\n    n, h, v = [int(x) for x in input().split()]\n\n    # Compute largest volume\n    volume = (n - max(h, n - h)) * (n - max(v, n - v)) * 4\n\n    # Display result\n    print(volume)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649733394,
  "object": "edit"
}
2022-04-11 23:16:39.348722 fix syntax errors 2 ['\n\ndef main():\n    # Read input\n    n, h, v = [int(x) for x in input().split()]\n\n    # Compute largest volume\n    volume = (n - max(h, n - h)) * (n - max(v, n - v)) * 4\n\n    # Display result\n    print(volume)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # Read input\n    n, h, v = [int(x) for x in input().split()]\n\n    # Compute largest volume\n    volume = (n - max(h, n - h)) * (n - max(v, n - v)) * 4\n\n    # Display result\n    print(volume)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 23:16:43.673505 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # read input\n    n, h, v = [int(x) for x in input().split()] # pylint: disable=unused-variable\n\n    # compute largest volume\n    volume = (n - max(h, n - h)) * (n - max(v, n - v)) * 4\n\n    # display result\n    print(volume)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # read input\n    n, h, v = [int(x) for x in input().split()]  # type: int\n\n    # compute largest volume\n    volume = (n - max(h, n - h)) * (n - max(v, n - v)) * 4  # type: int\n\n    # display result\n    print(volume)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649733399,
  "object": "edit"
}
2022-04-11 23:16:43.673862 fix syntax errors 2 ['\n\ndef main():\n    # read input\n    n, h, v = [int(x) for x in input().split()] # pylint: disable=unused-variable\n\n    # compute largest volume\n    volume = (n - max(h, n - h)) * (n - max(v, n - v)) * 4\n\n    # display result\n    print(volume)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # read input\n    n, h, v = [int(x) for x in input().split()]  # type: int\n\n    # compute largest volume\n    volume = (n - max(h, n - h)) * (n - max(v, n - v)) * 4  # type: int\n\n    # display result\n    print(volume)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 23:16:43.674134 size on output set 3
2022-04-11 23:16:43.674150 num operations 2
2022-04-11 23:16:43.674156 size on input set 1
2022-04-11 23:16:48.714755 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nimport math\n\nn, h, v = [int(i) for i in sys.stdin.readline().split()]\n\n# Calculate the volume of the cake.\nvolume = n * n * 4\n\n# Calculate the volume of the largest piece of cake.\nvolume_max = max(volume / 4, (n - h) * (n - v) * 4, h * v * 4, h * (n - v) * 4, (n - h) * v * 4)\n\n# Print the volume of the largest piece of cake\nprint(volume_max)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nimport math\n\nn, h, v = [int(i) for i in sys.stdin.readline().split()]\n\n# Calculate the volume of the cake.\nvolume = n * n * 4\n\n# Calculate the volume of the largest piece of cake.\nvolume_max = max(volume / 4, (n - h) * (n - v) * 4, h * v * 4, h * (n - v) * 4, (n - h) * v * 4)\n\n# Print the volume of the largest piece of cake\nprint(volume_max)\n"
    }
  ],
  "created": 1649733403,
  "object": "edit"
}
2022-04-11 23:16:48.715150 fix spelling mistakes 2 ['\n\nimport sys\nimport math\n\nn, h, v = [int(i) for i in sys.stdin.readline().split()]\n\n# Calculate the volume of the cake.\nvolume = n * n * 4\n\n# Calculate the volume of the largest piece of cake.\nvolume_max = max(volume / 4, (n - h) * (n - v) * 4, h * v * 4, h * (n - v) * 4, (n - h) * v * 4)\n\n# Print the volume of the largest piece of cake\nprint(volume_max)\n', '\n\nimport sys\nimport math\n\nn, h, v = [int(i) for i in sys.stdin.readline().split()]\n\n# Calculate the volume of the cake.\nvolume = n * n * 4\n\n# Calculate the volume of the largest piece of cake.\nvolume_max = max(volume / 4, (n - h) * (n - v) * 4, h * v * 4, h * (n - v) * 4, (n - h) * v * 4)\n\n# Print the volume of the largest piece of cake\nprint(volume_max)\n']
2022-04-11 23:16:48.715190 size on output set 1
2022-04-11 23:16:48.715200 size on input set 1
2022-04-11 23:16:53.264359 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport math\n\nn, h, v = [int(i) for i in sys.stdin.readline().split()]\n\n# Calculate the volume of the cake.\nvolume = n * n * 4\n\n# Calculate the volume of the largest piece of cake.\nvolume_max = max(volume / 4, (n - h) * (n - v) * 4, h * v * 4,\n                 h * (n - v) * 4, (n - h) * v * 4)\n\n# Print the volume of the largest piece of cake\nprint(volume_max)\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nn, h, v = [int(i) for i in sys.stdin.readline().split()]\n\n# Calculate the volume of the cake.\nvolume = n * n * 4\n\n# Calculate the volume of the largest piece of cake.\nvolume_max = max(volume / 4, (n - h) * (n - v) * 4, h * v * 4,\n                 h * (n - v) * 4, (n - h) * v * 4)\n\n# Print the volume of the largest piece of cake\nprint(volume_max)\n"
    }
  ],
  "created": 1649733408,
  "object": "edit"
}
2022-04-11 23:16:53.264656 fix syntax errors 2 ['\nimport sys\nimport math\n\nn, h, v = [int(i) for i in sys.stdin.readline().split()]\n\n# Calculate the volume of the cake.\nvolume = n * n * 4\n\n# Calculate the volume of the largest piece of cake.\nvolume_max = max(volume / 4, (n - h) * (n - v) * 4, h * v * 4,\n                 h * (n - v) * 4, (n - h) * v * 4)\n\n# Print the volume of the largest piece of cake\nprint(volume_max)\n', '\nimport sys\n\nn, h, v = [int(i) for i in sys.stdin.readline().split()]\n\n# Calculate the volume of the cake.\nvolume = n * n * 4\n\n# Calculate the volume of the largest piece of cake.\nvolume_max = max(volume / 4, (n - h) * (n - v) * 4, h * v * 4,\n                 h * (n - v) * 4, (n - h) * v * 4)\n\n# Print the volume of the largest piece of cake\nprint(volume_max)\n']
2022-04-11 23:16:53.264693 size on output set 2
2022-04-11 23:16:53.264711 num operations 2
2022-04-11 23:16:53.264720 size on input set 1
2022-04-11 23:16:55.231772 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, h, v = map(int, sys.stdin.readline().split())\n    print((n-h)*(n-v)*4)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, h, v = map(int, sys.stdin.readline().split())\n    print((n-h)*(n-v)*4)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649733413,
  "object": "edit"
}
2022-04-11 23:16:55.231964 fix spelling mistakes 2 ['\nimport sys\n\ndef main():\n    n, h, v = map(int, sys.stdin.readline().split())\n    print((n-h)*(n-v)*4)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, h, v = map(int, sys.stdin.readline().split())\n    print((n-h)*(n-v)*4)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 23:16:55.231980 size on output set 1
2022-04-11 23:16:55.231986 size on input set 1
2022-04-11 23:16:57.870541 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, h, v = map(int, sys.stdin.readline().split())\n    print((n-h)*(n-v)*4) \n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, h, v = map(int, sys.stdin.readline().split())\n    print((n-h)*(n-v)*4) \n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649733415,
  "object": "edit"
}
2022-04-11 23:16:57.871034 fix syntax errors 2 ['\nimport sys\n\ndef main():\n    n, h, v = map(int, sys.stdin.readline().split())\n    print((n-h)*(n-v)*4) \n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, h, v = map(int, sys.stdin.readline().split())\n    print((n-h)*(n-v)*4) \n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 23:16:57.871083 size on output set 1
2022-04-11 23:16:57.871096 num operations 2
2022-04-11 23:16:57.871102 size on input set 1
2022-04-11 23:17:00.098752 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nn, h, v = map(int, input().split())\n\ndef volume(n, h, v):\n    return 2 * (n - h) * (n - v) * 4\n\nprint(max(volume(n, h, v), volume(n, n - h, v), volume(n, h, n - v), volume(n, n - h, n - v)))\n"
    },
    {
      "index": 1,
      "text": "\nn, h, v = map(int, input().split())\n\ndef volume(n, h, v):\n    return 2 * (n - h) * (n - v) * 4\n\nprint(max(volume(n, h, v), volume(n, n - h, v), volume(n, h, n - v), volume(n, n - h, n - v)))\n"
    }
  ],
  "created": 1649733418,
  "object": "edit"
}
2022-04-11 23:17:00.098853 fix spelling mistakes 2 ['\nn, h, v = map(int, input().split())\n\ndef volume(n, h, v):\n    return 2 * (n - h) * (n - v) * 4\n\nprint(max(volume(n, h, v), volume(n, n - h, v), volume(n, h, n - v), volume(n, n - h, n - v)))\n', '\nn, h, v = map(int, input().split())\n\ndef volume(n, h, v):\n    return 2 * (n - h) * (n - v) * 4\n\nprint(max(volume(n, h, v), volume(n, n - h, v), volume(n, h, n - v), volume(n, n - h, n - v)))\n']
2022-04-11 23:17:00.098864 size on output set 1
2022-04-11 23:17:00.098868 size on input set 1
2022-04-11 23:17:07.620867 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n, h, v = map(int, input().split())\n\ndef volume(n, h, v, x, y):\n    return 2 * (n - x) * (n - y) * 4\n\nprint(max(volume(n, h, v), volume(n, n - h, v), volume(n, h, n - v), volume(n, n - h, n - v)))\n"
    },
    {
      "index": 1,
      "text": "n, h, v = map(int, input().split())\n\ndef volume(n, h, v, d):\n    return 2 * (n - h) * (n - v) * d\n\nprint(max(volume(n, h, v), volume(n, n - h, v), volume(n, h, n - v), volume(n, n - h, n - v)))\n"
    }
  ],
  "created": 1649733420,
  "object": "edit"
}
2022-04-11 23:17:07.621168 fix syntax errors 2 ['n, h, v = map(int, input().split())\n\ndef volume(n, h, v, x, y):\n    return 2 * (n - x) * (n - y) * 4\n\nprint(max(volume(n, h, v), volume(n, n - h, v), volume(n, h, n - v), volume(n, n - h, n - v)))\n', 'n, h, v = map(int, input().split())\n\ndef volume(n, h, v, d):\n    return 2 * (n - h) * (n - v) * d\n\nprint(max(volume(n, h, v), volume(n, n - h, v), volume(n, h, n - v), volume(n, n - h, n - v)))\n']
2022-04-11 23:17:07.621215 size on output set 2
2022-04-11 23:17:07.621227 num operations 2
2022-04-11 23:17:07.621233 size on input set 1
2022-04-11 23:17:09.741907 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#Program start here\nimport sys\n\nn,h,v = map(int,sys.stdin.readline().split())\n\nprint(max(n*h*4,n*v*4,(n-h)*(n-v)*4))\n"
    },
    {
      "index": 1,
      "text": "\n\n#Program starts here.\nimport sys\n\nn,h,v = map(int,sys.stdin.readline().split())\n\nprint(max(n*h*4,n*v*4,(n-h)*(n-v)*4))\n"
    }
  ],
  "created": 1649733427,
  "object": "edit"
}
2022-04-11 23:17:09.742167 fix spelling mistakes 2 ['\n\n#Program start here\nimport sys\n\nn,h,v = map(int,sys.stdin.readline().split())\n\nprint(max(n*h*4,n*v*4,(n-h)*(n-v)*4))\n', '\n\n#Program starts here.\nimport sys\n\nn,h,v = map(int,sys.stdin.readline().split())\n\nprint(max(n*h*4,n*v*4,(n-h)*(n-v)*4))\n']
2022-04-11 23:17:09.742196 size on output set 2
2022-04-11 23:17:09.742202 size on input set 2
2022-04-11 23:17:11.730879 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#Program start here\nimport sys\n\nn,h,v = map(int,sys.stdin.readline().split())\n\nprint(max(n*h*4,n*v*4,(n-h)*(n-v)*4))\n"
    },
    {
      "index": 1,
      "text": "\n#Program start here\nimport sys\n\nn,h,v = map(int,sys.stdin.readline().split())\n\nprint(max(n*h*4,n*v*4,(n-h)*(n-v)*4))\n"
    }
  ],
  "created": 1649733429,
  "object": "edit"
}
2022-04-11 23:17:11.731155 fix syntax errors 2 ['\n#Program start here\nimport sys\n\nn,h,v = map(int,sys.stdin.readline().split())\n\nprint(max(n*h*4,n*v*4,(n-h)*(n-v)*4))\n', '\n#Program start here\nimport sys\n\nn,h,v = map(int,sys.stdin.readline().split())\n\nprint(max(n*h*4,n*v*4,(n-h)*(n-v)*4))\n']
2022-04-11 23:17:16.406791 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#Program starts here.\nimport sys\n\nn, h, v = map(int, sys.stdin.readline().split())\n\nprint(max(n*h*4, n*v*4, (n-h)*(n-v)*4))\n"
    },
    {
      "index": 1,
      "text": "\n#Program starts here.\nimport sys\n\nn,h,v = map(int,sys.stdin.readline().split())\n\nprint(max(n*h*4,n*v*4,(n-h)*(n-v)*4))\n"
    }
  ],
  "created": 1649733431,
  "object": "edit"
}
2022-04-11 23:17:16.406964 fix syntax errors 2 ['\n#Program starts here.\nimport sys\n\nn, h, v = map(int, sys.stdin.readline().split())\n\nprint(max(n*h*4, n*v*4, (n-h)*(n-v)*4))\n', '\n#Program starts here.\nimport sys\n\nn,h,v = map(int,sys.stdin.readline().split())\n\nprint(max(n*h*4,n*v*4,(n-h)*(n-v)*4))\n']
2022-04-11 23:17:16.406986 size on output set 3
2022-04-11 23:17:16.407009 num operations 2
2022-04-11 23:17:16.407019 size on input set 1
2022-04-11 23:17:18.914744 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, h, v = [int(i) for i in input().split()]\n    print(h * v * n * 4) \n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, h, v = [int(i) for i in input().split()]\n    print(h * v * 4)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649733436,
  "object": "edit"
}
2022-04-11 23:17:18.915036 fix spelling mistakes 2 ["\n\ndef main():\n    n, h, v = [int(i) for i in input().split()]\n    print(h * v * n * 4) \n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, h, v = [int(i) for i in input().split()]\n    print(h * v * 4)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 23:17:18.915086 size on output set 2
2022-04-11 23:17:18.915099 size on input set 2
2022-04-11 23:17:21.666813 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, h, v = [int(i) for i in input().split()]\n    print(max(h, n - h) * max(v, n - v) * 4)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, h, v = [int(i) for i in input().split()]\n    print(max(h, n - h) * max(v, n - v) * 4)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649733439,
  "object": "edit"
}
2022-04-11 23:17:21.667101 fix syntax errors 2 ["\n\ndef main():\n    n, h, v = [int(i) for i in input().split()]\n    print(max(h, n - h) * max(v, n - v) * 4)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, h, v = [int(i) for i in input().split()]\n    print(max(h, n - h) * max(v, n - v) * 4)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 23:17:24.188099 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, h, v = [int(i) for i in input().split()]\n    print(h * v * n * 4)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, h, v = [int(i) for i in input().split()]\n    print(h * v * n * 4)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649733441,
  "object": "edit"
}
2022-04-11 23:17:24.188224 fix syntax errors 2 ["\n\ndef main():\n    n, h, v = [int(i) for i in input().split()]\n    print(h * v * n * 4)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, h, v = [int(i) for i in input().split()]\n    print(h * v * n * 4)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 23:17:24.188244 size on output set 2
2022-04-11 23:17:24.188250 num operations 2
2022-04-11 23:17:24.188253 size on input set 1
2022-04-11 23:17:26.170867 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n#\nn, h, v = map(int, input().split())\n\nprint((n-h) * (n-v) * 4)\n"
    },
    {
      "index": 1,
      "text": "\nn, h, v = map(int, input().split())\n\nprint((n-h) * (n-v) * 4)\n"
    }
  ],
  "created": 1649733444,
  "object": "edit"
}
2022-04-11 23:17:26.171160 fix spelling mistakes 2 ['\n#\nn, h, v = map(int, input().split())\n\nprint((n-h) * (n-v) * 4)\n', '\nn, h, v = map(int, input().split())\n\nprint((n-h) * (n-v) * 4)\n']
2022-04-11 23:17:26.171187 size on output set 2
2022-04-11 23:17:26.171199 size on input set 2
2022-04-11 23:17:28.688780 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# https://codeforces.com/contest/1353/problem/A\nn, h, v = map(int, input().split())\n\nprint((n-h) * (n-v) * 4)\n"
    },
    {
      "index": 1,
      "text": "\nn, h, v = map(int, input().split())\n\nprint((n-h) * (n-v) * 4)\n"
    }
  ],
  "created": 1649733446,
  "object": "edit"
}
2022-04-11 23:17:28.689002 fix syntax errors 2 ['\n# https://codeforces.com/contest/1353/problem/A\nn, h, v = map(int, input().split())\n\nprint((n-h) * (n-v) * 4)\n', '\nn, h, v = map(int, input().split())\n\nprint((n-h) * (n-v) * 4)\n']
2022-04-11 23:17:31.394148 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, h, v = map(int, input().split())\n\nprint((n-h) * (n-v) * 4) \n"
    },
    {
      "index": 1,
      "text": "\nn, h, v = map(int, input().split())\n\nprint((n-h) * (n-v) * 4) \n"
    }
  ],
  "created": 1649733448,
  "object": "edit"
}
2022-04-11 23:17:31.394469 fix syntax errors 2 ['\nn, h, v = map(int, input().split())\n\nprint((n-h) * (n-v) * 4) \n', '\nn, h, v = map(int, input().split())\n\nprint((n-h) * (n-v) * 4) \n']
2022-04-11 23:17:31.394645 size on output set 3
