["\n\nn = int(input())\n\nvaccinated = []\ncontrol = []\n\nfor i in range(n):\n    line = input()\n    if line[0] == 'V':\n        vaccinated.append(line)\n    else:\n        control.append(line)\n\nstrains = ['A', 'B', 'C']\n\nfor strain in strains:\n    count = 0\n    for person in vaccinated:\n        if person[strains.index(strain) + 1] == '1':\n            count += 1\n    if count == 0:\n        print(\"Not Effective\")\n        continue\n    rate = count / len(vaccinated)\n    count = 0\n    for person in control:\n        if person[strains.index(strain) + 1] == '1':\n            count += 1\n    if count == 0:\n        print(\"Not Effective\")\n        continue\n    rate2 = count / len(control)\n    print(100 - rate / rate2 * 100)\n", "\n\nN = int(input())\nvaccinated = [0, 0, 0, 0]\ncontrol = [0, 0, 0, 0]\n\nfor i in range(N):\n    line = input()\n    if line[0] == 'Y':\n        vaccinated[0] += 1\n        if line[1] == 'Y':\n            vaccinated[1] += 1\n        if line[2] == 'Y':\n            vaccinated[2] += 1\n        if line[3] == 'Y':\n            vaccinated[3] += 1\n    else:\n        control[0] += 1\n        if line[1] == 'Y':\n            control[1] += 1\n        if line[2] == 'Y':\n            control[2] += 1\n        if line[3] == 'Y':\n            control[3] += 1\n\nprint(format((vaccinated[1] / vaccinated[0]) / (control[1] / control[0]) * 100, '.6f'))\nprint(format((vaccinated[2] / vaccinated[0]) / (control[2] / control[0]) * 100, '.6f'))\nprint(format((vaccinated[3] / vaccinated[0]) / (control[3] / control[0]) * 100, '.6f'))\n", "N = int(input())\n\nvaccinated = []\nunvaccinated = []\nfor i in range(N):\n    temp = input()\n    if temp[0] == 'Y':\n        vaccinated.append(temp)\n    else:\n        unvaccinated.append(temp)\n\nstrains = ['A', 'B', 'C']\nfor i in range(3):\n    infected_v = 0\n    infected_u = 0\n    for j in range(len(vaccinated)):\n        if vaccinated[j][i+1] == 'Y':\n            infected_v += 1\n    for j in range(len(unvaccinated)):\n        if unvaccinated[j][i+1] == 'Y':\n            infected_u += 1\n    if infected_v == 0:\n        print(\"Not Effective\")\n    else:\n        print(100 - (infected_v/len(vaccinated))/(infected_u/len(unvaccinated))*100, end=\"\")\n        if i != 2:\n            print(\" \", end=\"\")\n", "\n\nn = int(input())\n\nvaccinated = []\ncontrol = []\n\nfor i in range(n):\n    line = input()\n    if line[0] == 'Y':\n        vaccinated.append(line)\n    else:\n        control.append(line)\n\nstrains = ['A', 'B', 'C']\n\nfor strain in strains:\n    count = 0\n    for person in vaccinated:\n        if person[strains.index(strain) + 1] == 'Y':\n            count += 1\n    if count == 0:\n        print(\"Not Effective\")\n        continue\n    rate = count / len(vaccinated)\n    count = 0\n    for person in control:\n        if person[strains.index(strain) + 1] == 'Y':\n            count += 1\n    if count == 0:\n        print(\"Not Effective\")\n        continue\n    rate2 = count / len(control)\n    print(round(100 - rate2 / rate * 100, 2))\n", "\n\nimport sys\n\n# Read input\nnum_participants = int(sys.stdin.readline())\nvaccinated = []\ninfected = []\nfor i in range(num_participants):\n    participant = sys.stdin.readline()\n    vaccinated.append(participant[0])\n    infected.append(participant[1:])\n\n# Calculate vaccine efficacies\nefficacy = []\nfor i in range(3):\n    # Count infected and not infected for each group\n    num_infected_vaccinated = 0\n    num_not_infected_vaccinated = 0\n    num_infected_control = 0\n    num_not_infected_control = 0\n    for j in range(num_participants):\n        if infected[j][i] == 'Y':\n            if vaccinated[j] == 'Y':\n                num_infected_vaccinated += 1\n            else:\n                num_infected_control += 1\n        else:\n            if vaccinated[j] == 'Y':\n                num_not_infected_vaccinated += 1\n            else:\n                num_not_infected_control += 1\n    # Calculate percentage infected for each group\n    percent_infected_vaccinated = float(num_infected_vaccinated) / (num_infected_vaccinated + num_not_infected_vaccinated)\n    percent_infected_control = float(num_infected_control) / (num_infected_control + num_not_infected_control)\n    # Calculate vaccine efficacies\n    if percent_infected_vaccinated < percent_infected_control:\n        efficacy.append(100 - percent_infected_vaccinated / percent_infected_control * 100.0)\n    else:\n        efficacy.append(\"Not Effective\")\n\n# Print vaccine efficacies\nprint(efficacy[0])\nprint(efficacy[1])\nprint(efficacy[2])\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    vac = [0, 0, 0]\n    ctrl = [0, 0, 0]\n    for i in range(n):\n        line = sys.stdin.readline().strip()\n        if line[0] == 'Y':\n            for j in range(3):\n                if line[j+1] == 'Y':\n                    vac[j] += 1\n        else:\n            for j in range(3):\n                if line[j+1] == 'Y':\n                    ctrl[j] += 1\n    for i in range(3):\n        if ctrl[i] == 0:\n            print(\"Not Effective\")\n        else:\n            print(\"{:.6f}\".format((float(vac[i])/float(ctrl[i]))*100))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\nvaccinated, control = [], []\n\nfor line in sys.stdin:\n    if line.startswith('N'):\n        control.append(line)\n    else:\n        vaccinated.append(line)\n\ninfected = {'A': 0, 'B': 0, 'C': 0}\nfor line in control:\n    for i in range(1, 4):\n        if line[i] == 'Y':\n            infected[chr(ord('A') + i - 1)] += 1\n\nfor line in vaccinated:\n    for i in range(1, 4):\n        if line[i] == 'Y':\n            infected[chr(ord('A') + i - 1)] -= 1\n\nfor i in range(3):\n    print('Not Effective' if infected[chr(ord('A') + i)] >= 0 else '{:.6f}'.format(infected[chr(ord('A') + i)] / len(control) * 100) + '%', end='\\n')\n", "#!/usr/bin/python3\n\nimport sys\n\n# Read input\nnum_participants = int(sys.stdin.readline())\nvaccinated = []\ninfected = []\nfor i in range(num_participants):\n    participant = sys.stdin.readline()\n    vaccinated.append(participant[0])\n    infected.append(participant[1:])\n\n# Calculate vaccine efficacies\nefficacy = []\nfor i in range(3):\n    # Count infected and not infected for each group\n    num_infected_vaccinated = 0\n    num_not_infected_vaccinated = 0\n    num_infected_control = 0\n    num_not_infected_control = 0\n    for j in range(num_participants):\n        if infected[j][i] == 'Y':\n            if vaccinated[j] == 'Y':\n                num_infected_vaccinated += 1\n            else:\n                num_infected_control += 1\n        else:\n            if vaccinated[j] == 'Y':\n                num_not_infected_vaccinated += 1\n            else:\n                num_not_infected_control += 1\n    # Calculate percentage infected for each group\n    percent_infected_vaccinated = num_infected_vaccinated / (num_infected_vaccinated + num_not_infected_vaccinated)\n    percent_infected_control = num_infected_control / (num_infected_control + num_not_infected_control)\n    # Calculate vaccine efficacy\n    if percent_infected_vaccinated < percent_infected_control:\n        efficacy.append(100 - percent_infected_vaccinated / percent_infected_control * 100)\n    else:\n        efficacy.append(\"Not Effective\")\n\n# Print vaccine efficacies\nprint(efficacy[0])\nprint(efficacy[1])\nprint(efficacy[2])\n", "\nimport sys\n\ndef main():\n    # Read the input\n    N = int(sys.stdin.readline())\n    control = []\n    vaccine = []\n    for i in range(N):\n        line = sys.stdin.readline().strip()\n        if line[0] == 'Y':\n            vaccine.append(line[1:])\n        else:\n            control.append(line[1:])\n\n    # Find the number of infected people in the control and vaccinated groups\n    control_infections = [0, 0, 0]\n    vaccine_infections = [0, 0, 0]\n    for i in range(len(control)):\n        for j in range(3):\n            if control[i][j] == 'Y':\n                control_infections[j] += 1\n    for i in range(len(vaccine)):\n        for j in range(3):\n            if vaccine[i][j] == 'Y':\n                vaccine_infections[j] += 1\n\n    # Calculate the percentage of infected people in the control and vaccinated groups\n    control_percent = [x / len(control) * 100 for x in control_infections]\n    vaccine_percent = [x / len(vaccine) * 100 for x in vaccine_infections]\n\n    # Calculate the efficacy\n    efficacy = [0, 0, 0]\n    for i in range(3):\n        if control_percent[i] == 0:\n            efficacy[i] = 'Not Effective'\n        else:\n            efficacy[i] = 100 - vaccine_percent[i] / control_percent[i] * 100\n\n    # Output the result\n    for i in range(3):\n        print(efficacy[i])\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    # Read the input\n    N = int(sys.stdin.readline())\n    control = []\n    vaccine = []\n    for i in range(N):\n        line = sys.stdin.readline().strip()\n        if line[0] == 'Y':\n            vaccine.append(line[1:])\n        else:\n            control.append(line[1:])\n\n    # Find the number of infected people in the control and vaccine groups\n    control_infections = [0, 0, 0]\n    vaccine_infections = [0, 0, 0]\n    for i in range(len(control)):\n        for j in range(3):\n            if control[i][j] == 'Y':\n                control_infections[j] += 1\n    for i in range(len(vaccine)):\n        for j in range(3):\n            if vaccine[i][j] == 'Y':\n                vaccine_infections[j] += 1\n\n    # Calculate the percentages of infected people in the control and vaccine groups\n    control_percent = [x / len(control) * 100 for x in control_infections]\n    vaccine_percent = [x / len(vaccine) * 100 for x in vaccine_infections]\n\n    # Calculate the efficacy\n    efficacy = [0, 0, 0]\n    for i in range(3):\n        if control_percent[i] == 0:\n            efficacy[i] = 'Not Effective'\n        else:\n            efficacy[i] = 100 - vaccine_percent[i] / control_percent[i] * 100\n\n    # Output the result\n    for i in range(3):\n        print(efficacy[i])\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\nvaccinated, control = [], []\n\nfor line in sys.stdin:\n    if line.startswith('N'):\n        control.append(line)\n    else:\n        vaccinated.append(line)\n\ninfected = {'A': 0, 'B': 0, 'C': 0}\nfor line in control:\n    for i in range(1, 4):\n        if line[i] == 'Y':\n            infected[chr(ord('A') + i - 1)] += 1\n\nfor line in vaccinated:\n    for i in range(1, 4):\n        if line[i] == 'Y':\n            infected[chr(ord('A') + i - 1)] -= 1\n\nfor i in range(3):\n    print('Not Effective' if infected[chr(ord('A') + i)] >= 0 else '{:.6f}'.format(infected[chr(ord('A') + i)] / len(control) * 100) + '%', end='')\n", "\n\nn = int(input())\n\nvaccinated = []\ncontrol = []\n\nfor i in range(n):\n    line = input()\n    if line[0] == 'V':\n        vaccinated.append(line)\n    else:\n        control.append(line)\n\nstrains = ['A', 'B', 'C']\n\nfor strain in strains:\n    count = 0\n    for person in vaccinated:\n        if person[strains.index(strain) + 1] == 'V':\n            count += 1\n    if count == 0:\n        print(\"Not Effective\")\n        continue\n    rate = count / len(vaccinated)\n    count = 0\n    for person in control:\n        if person[strains.index(strain) + 1] == 'V':\n            count += 1\n    if count == 0:\n        print(\"Not Effective\")\n        continue\n    rate2 = count / len(control)\n    print(str(100 - rate / rate2 * 100) + '%')\n", "\n\nN = int(input())\n\nvaccinated = []\nunvaccinated = []\n\nfor i in range(N):\n    temp = input()\n    if temp[0] == 'Y':\n        vaccinated.append(temp)\n    else:\n        unvaccinated.append(temp)\n\nstrains = ['A', 'B', 'C']\nfor i in range(3):\n    infected_v = 0\n    infected_u = 0\n    for j in range(len(vaccinated)):\n        if vaccinated[j][i+1] == 'Y':\n            infected_v += 1\n    for j in range(len(unvaccinated)):\n        if unvaccinated[j][i+1] == 'Y':\n            infected_u += 1\n    if infected_v == 0:\n        print(\"Not Effective\")\n    else:\n        print(100 - (infected_v/len(vaccinated))/(infected_u/len(unvaccinated))*100, end='% ')\n", "\n\nn = int(input())\n\nvaccinated = []\ncontrol = []\n\nfor i in range(n):\n    line = input()\n    if line[0] == 'Y':\n        vaccinated.append(line)\n    else:\n        control.append(line)\n\nstrains = ['A', 'B', 'C']\n\nfor strain in strains:\n    count = 0\n    for person in vaccinated:\n        if person[strains.index(strain) + 1] == 'Y':\n            count += 1\n    if count == 0 or len(vaccinated) == 0:\n        print(\"Not Effective\")\n        continue\n    rate = count / len(vaccinated)\n    count = 0\n    for person in control:\n        if person[strains.index(strain) + 1] == 'Y':\n            count += 1\n    if count == 0 or len(control) == 0:\n        print(\"Not Effective\")\n        continue\n    rate2 = count / len(control)\n    print(100 - rate2 / rate * 100)\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    vac = [0, 0, 0]\n    ctrl = [0, 0, 0]\n    for i in range(n):\n        line = sys.stdin.readline().strip()\n        if line[0] == 'Y':\n            for j in range(3):\n                if line[j+1] == 'Y':\n                    vac[j] += 1\n        else:\n            for j in range(3):\n                if line[j+1] == 'Y':\n                    ctrl[j] += 1\n    for i in range(3):\n        if ctrl[i] == 0:\n            print(\"Not Effective\")\n        else:\n            print(\"{:.6f}\".format((vac[i]/ctrl[i])*100))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nN = int(input())\n\nvaccinated = []\ncontrol = []\n\nfor i in range(N):\n    participant = input()\n    if participant[0] == 'Y':\n        vaccinated.append(participant[1:])\n    else:\n        control.append(participant[1:])\n\ndef efficacy(infection):\n    vaccinated_infection = sum(map(lambda x: x[infection], vaccinated)) / len(vaccinated) * 100\n    control_infection = sum(map(lambda x: x[infection], control)) / len(control) * 100\n    if vaccinated_infection >= control_infection:\n        return 'Not effective'\n    else:\n        return str(1 - vaccinated_infection/control_infection)\n\nfor i in range(3):\n    print(efficacy(i))\n", "\n\nN = int(input())\n\nvaccinated = []\ncontrol = []\n\nfor i in range(N):\n    participant = input()\n    if participant[0] == 'Y':\n        vaccinated.append(participant[1:])\n    else:\n        control.append(participant[1:])\n\ndef efficacy(infection):\n    vaccinated_infection = sum(map(lambda x: x[infection], vaccinated)) / len(vaccinated) * 100.0\n    control_infection = sum(map(lambda x: x[infection], control)) / len(control) * 100.0\n    if vaccinated_infection >= control_infection:\n        return 'Not Effective'\n    else:\n        return str(round((1 - vaccinated_infection/control_infection) * 100, 2))\n\nfor i in range(3):\n    print(efficacy(i))\n", "\nimport sys\n\n# Read input\nnum_participants = int(sys.stdin.readline())\nvaccinated = []\ninfected = []\nfor i in range(num_participants):\n    participant = sys.stdin.readline().strip()\n    vaccinated.append(participant[0])\n    infected.append(participant[1:])\n\n# Calculate vaccine efficacies\nefficacy = []\nfor i in range(3):\n    # Count infected and not infected for each group\n    num_infected_vaccinated = 0\n    num_not_infected_vaccinated = 0\n    num_infected_control = 0\n    num_not_infected_control = 0\n    for j in range(num_participants):\n        if infected[j][i] == 'Y':\n            if vaccinated[j] == 'Y':\n                num_infected_vaccinated += 1\n            else:\n                num_infected_control += 1\n        else:\n            if vaccinated[j] == 'Y':\n                num_not_infected_vaccinated += 1\n            else:\n                num_not_infected_control += 1\n    # Calculate percentage infected for each group\n    percent_infected_vaccinated = float(num_infected_vaccinated) / (num_infected_vaccinated + num_not_infected_vaccinated)\n    percent_infected_control = float(num_infected_control) / (num_infected_control + num_not_infected_control)\n    # Calculate vaccine efficacy\n    if percent_infected_vaccinated < percent_infected_control:\n        efficacy.append(100 - percent_infected_vaccinated / percent_infected_control * 100.0)\n    else:\n        efficacy.append(\"Not Effective\")\n\n# Print vaccine efficacies\nprint(str(efficacy[0]))\nprint(str(efficacy[1]))\nprint(str(efficacy[2]))\n", "\nN = int(input())\nvaccinated = [0,0,0,0]\ncontrol = [0,0,0,0]\n\nfor i in range(N):\n    line = input()\n    if line[0] == 'Y':\n        vaccinated[0] += 1\n        if line[1] == 'Y':\n            vaccinated[1] += 1\n        if line[2] == 'Y':\n            vaccinated[2] += 1\n        if line[3] == 'Y':\n            vaccinated[3] += 1\n    else:\n        control[0] += 1\n        if line[1] == 'Y':\n            control[1] += 1\n        if line[2] == 'Y':\n            control[2] += 1\n        if line[3] == 'Y':\n            control[3] += 1\n\nprint(format((vaccinated[1]/vaccinated[0])/(control[1]/control[0])*100, '.6f'))\nprint(format((vaccinated[2]/vaccinated[0])/(control[2]/control[0])*100, '.6f'))\nprint(format((vaccinated[3]/vaccinated[0])/(control[3]/control[0])*100, '.6f'))\n", "\nimport sys\n\ndef main():\n    # Read the input\n    N = int(sys.stdin.readline())\n    control = []\n    vaccine = []\n    for i in range(N):\n        line = sys.stdin.readline().strip()\n        if line[0] == 'Y':\n            vaccine.append(line[1:])\n        else:\n            control.append(line[1:])\n    \n    # Find the number of infected people in the control and vaccinated groups\n    control_infections = [0, 0, 0]\n    vaccine_infections = [0, 0, 0]\n    for i in range(len(control)):\n        for j in range(3):\n            if control[i][j] == 'Y':\n                control_infections[j] += 1\n    for i in range(len(vaccine)):\n        for j in range(3):\n            if vaccine[i][j] == 'Y':\n                vaccine_infections[j] += 1\n    \n    # Calculate the percentage of infected people in the control and vaccinated groups\n    control_percent = [x / len(control) * 100 for x in control_infections]\n    vaccine_percent = [x / len(vaccine) * 100 for x in vaccine_infections]\n    \n    # Calculate the efficacy\n    efficacy = [0, 0, 0]\n    for i in range(3):\n        if control_percent[i] == 0:\n            efficacy[i] = 'Not Effective'\n        else:\n            efficacy[i] = 100 - vaccine_percent[i] / control_percent[i] * 100\n    \n    # Output the result\n    for i in range(3):\n        print(efficacy[i])\n\nif __name__ == '__main__':\n    main()\n", "\nN = int(input())\n\nvaccinated = []\nunvaccinated = []\nfor i in range(N):\n    temp = input()\n    if temp[0] == 'Y':\n        vaccinated.append(temp)\n    else:\n        unvaccinated.append(temp)\n\nstrains = ['A', 'B', 'C']\nfor i in range(3):\n    infected_v = 0\n    infected_u = 0\n    for j in range(len(vaccinated)):\n        if vaccinated[j][i+1] == 'Y':\n            infected_v += 1\n    for j in range(len(unvaccinated)):\n        if unvaccinated[j][i+1] == 'Y':\n            infected_u += 1\n    if infected_v == 0:\n        print(\"Not Effective\")\n    else:\n        print(int(100 - (infected_v/len(vaccinated))/(infected_u/len(unvaccinated))*100))\n", "\n\nN = int(input())\n\nvaccinated = []\ncontrol = []\n\nfor i in range(N):\n    participant = input()\n    if participant[0] == 'Y':\n        vaccinated.append(participant[1:])\n    else:\n        control.append(participant[1:])\n\ndef efficacy(infection):\n    vaccinated_infection = sum(map(lambda x: x[infection], vaccinated)) / len(vaccinated)\n    control_infection = sum(map(lambda x: x[infection], control)) / len(control)\n    if vaccinated_infection >= control_infection or vaccinated_infection == 0:\n        return 'Not effective'\n    else:\n        return str((1 - vaccinated_infection/control_infection) * 100)\n\nfor i in range(3):\n    print(efficacy(i))\n", "\n\nimport sys\n\ndef main():\n    # Read the input\n    N = int(sys.stdin.readline())\n    control = []\n    vaccine = []\n    for i in range(N):\n        line = sys.stdin.readline().strip()\n        if line[0] == 'Y':\n            vaccine.append(line[1:])\n        else:\n            control.append(line[1:])\n    \n    # Find the number of infected people in the control and vaccine groups\n    control_infections = [0, 0, 0]\n    vaccine_infections = [0, 0, 0]\n    for i in range(len(control)):\n        for j in range(3):\n            if control[i][j] == 'Y':\n                control_infections[j] += 1\n    for i in range(len(vaccine)):\n        for j in range(3):\n            if vaccine[i][j] == 'Y':\n                vaccine_infections[j] += 1\n    \n    # Calculate the percentages of infected people in the control and vaccine groups\n    control_percent = [x / float(len(control)) * 100 for x in control_infections]\n    vaccine_percent = [x / float(len(vaccine)) * 100 for x in vaccine_infections]\n    \n    # Calculate the efficacy\n    efficacy = [0, 0, 0]\n    for i in range(3):\n        if control_percent[i] == 0:\n            efficacy[i] = 'Not Effective'\n        else:\n            efficacy[i] = 100 - vaccine_percent[i] / float(control_percent[i]) * 100\n    \n    # Output the result\n    for i in range(3):\n        print(efficacy[i])\n\nif __name__ == '__main__':\n    main()\n"]