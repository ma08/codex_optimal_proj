["\ndef main():\n    n, k = map(int, input().split())\n    s = input() \n\n    if k > (1 << n) - 1:\n        print(-1)\n        return\n\n    s = [c for c in s]\n    s.sort()\n    s = \"\".join(s)\n    print(s)\n\n    curr = s[0]\n    prev = s[0]\n    res = 0\n    i = 1\n    while i < len(s):\n        if s[i] != prev:\n            res += len(curr)\n            curr = \"\"\n        prev = s[i]\n        curr += s[i]\n        i += 1\n    res += len(curr)\n\n    print(res)\n\nmain()\n\ndef main():\n    n, k = map(int, input().split())\n    s = input() \n\n    if k > (1 << n) - 1:\n        print(-1)\n        return\n\n    s = [c for c in s]\n    s.sort()\n    s = \"\".join(s)\n    print(s)\n\n    curr = s[0]\n    prev = s[0]\n    res = 0\n    i = 1\n    while i < len(s):\n        if s[i] != prev:\n            res += len(curr)\n            curr = \"\"\n        prev = s[i]\n        curr += s[i]\n        i += 1\n    res += len(curr)\n\n    print(res)\n\nmain()\n", "\n# -*- coding: utf-8 -*-\n\ndef main():\n    n, k = map(int, raw_input().split())\n    s = raw_input()\n    # print n, k, s\n    if k > 2**n:\n        print -1\n    else:\n        ans = 0\n        for i in xrange(n):\n            if k & (1 << i):\n                ans += n - i\n        print ans\n\nif __name__ == '__main__':\n    main()\n", "\n\n# -*- coding: utf-8 -*\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    # print n, k, s \n    if k > 2**n:\n        print -1\n    else:\n        ans = 0\n        for i in xrange(n):\n            if k & (1 << i):\n                ans += n - i\n        print ans\n        \nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k = map(int, input().split())  # n is the number of characters in the string, k is the number of distinct characters in the string\n    s = input()  # the string\n\n    if k > (1 << n) - 1:  # if k is greater than the number of possible distinct characters in the string, print -1\n        print(-1)\n        return\n\n    s = [c for c in s]  # convert the string to a list of characters\n    s.sort()  # sort the list of characters\n    s = \"\".join(s)  # convert the list of characters back to a string\n    print(s)  # print the sorted string\n\n    curr = s[0]  # the current character\n    prev = s[0]  # the previous character\n    res = 0  # the number of distinct characters in the string\n    i = 1  # the index of the current character\n    while i < len(s):  # iterate through the string\n        if s[i] != prev:  # if the current character is not the same as the previous character\n            res += len(curr)  # add the length of the current character to the number of distinct characters\n            curr = \"\"  # reset the current character\n        prev = s[i]  # update the previous character\n        curr += s[i]  # update the current character\n        i += 1  # update the index of the current character\n    res += len(curr)  # add the length of the current character to the number of distinct characters\n\n    print(res)  # print the number of distinct characters in the string\n\nmain()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n\n    if k > (1 << n) - 1:\n        print(-1)\n        return\n\n    s = [c for c in s]\n    s.sort()\n    s = \"\".join(s)\n    print(s)\n\n    curr = s[0]\n    prev = s[0]\n    res = 0\n    i = 1\n    while i < len(s):\n        if s[i] != prev:\n            res += len(curr)\n            curr = \"\"\n        prev = s[i]\n        curr += s[i]\n        i += 1\n    res += len(curr)\n\n    print(res)\n\nmain()\n", "\n\n# -*- coding: utf-8 -*-\n\ndef main():\n    n, k = map(int, raw_input().split())\n    s = raw_input()\n    # print(n, k, s)\n    if k > 2**n:\n        print(-1)\n    else:\n        ans = 0\n        for i in xrange(n):\n            if k & (1 << i):\n                ans += n - i\n        print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# -*- coding: utf-8 -*\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    # print n, k, s \n    if k > 2**n:\n        print(-1)\n    else:\n        ans = 0\n        for i in xrange(n):\n            if k & (1 << i):\n                ans += n - i\n        print(ans)\n        \nif __name__ == '__main__':\n    main()\n"]