["a=int(input())\nb=int(input())\nc=int(input())\nd=int(input())\ne=int(input())\nx=int(input())\nls=[a,b,c,d,e]\nif (e-a)<=x:\n  print(\"Yay!\")\nelse:\n  print(\":(\")", "a = int (input ())\nb = int (input ())\nc = int (input ())\nd = int (input ())\ne = int (input ())\nk = int (input ())\nif k >= e-a:\n  print ('Yay!')\nelse:\n  print (':(')", "a = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = int(input())\nk = int(input())\nnums = [a,b,c,d,e]\nfor i in nums:\n  for j in nums:\n    if abs(i-j) > k:\n      print(\":(\")\n      return\nprint(\"Yay!\")", "a = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = int(input())\nk = int(input())\n\nprint('Yay!' if max(b-a, c-a, d-a, e-a, c-b, d-b, e-b, d-c, e-c, e-d) <= k else ':(')", "a = [int(input()) for _ in range(5)]\nk = int(input())\n\nif max(a) - min(a) > k:\n    print(':(')\nelse:\n    print('Yay!')", "antennas=[]\nfor i in range(5):\n    antennas.append(int(input('')))\nlimit=int(input(''))\n\nif antennas[4]-antennas[0]>limit:\n    print(\":(\")\nelse:\n    print(\"Yay!\")    \n", "v = [int(input()) for _ in range(6)]\na = v[0]\ne = v[-2]\nk = v[-1]\n    \nprint((':(' if e - a > k else 'Yay!'))\n", "A = [int(input()) for i in range(5)]\nk = int(input())\n\nfor j in range(4):\n    for h in range(j+1,5):\n        if k < abs(A[j] - A[h]):\n            print(\":(\")\n            return\nprint(\"Yay!\")\n", "import sys\n\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nsys.setrecursionlimit(10 ** 9)\nINF = 1 << 60\nMOD = 1000000007\n\n\ndef main():\n    (*A,) = list(map(int, read().split()))\n    k = A[-1]\n\n    for i in range(5):\n        for j in range(i + 1, 5):\n            if A[j] - A[i] > k:\n                print(':(')\n                return\n\n    print('Yay!')\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "a = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = int(input())\nk = int(input())\n\n# \u6700\u9577\u8ddd\u96e2\u304ck\u4ee5\u4e0b\u306a\u3089\u3070\u3001\u5168\u3066\u306e\u30a2\u30f3\u30c6\u30ca\u304c\u76f4\u63a5\u901a\u4fe1\u3067\u304d\u308b \n# \u76f4\u63a5\u901a\u4fe1\u3067\u304d\u306a\u3044\u30a2\u30f3\u30c6\u30ca\u306e\u7d44\u306f\u5b58\u5728\u3057\u306a\u3044 => Yay! \u3092\u51fa\u529b\n# \u6700\u9577\u8ddd\u96e2\u304ck\u3088\u308a\u5927\u304d\u3044\u306a\u3089\u3070\u3001\u76f4\u63a5\u901a\u4fe1\u3067\u304d\u306a\u3044\u30a2\u30f3\u30c6\u30ca\u306e\u7d44\u306f\u5c11\u306a\u304f\u3068\u30821\u3064\u5b58\u5728\u3059\u308b\nif e-a <= k: print('Yay!')\nelse: print(':(')", "a = [int(input()) for i in range(5)]\nk = int(input())\nif a[4] - a[0] > k:\n    print(\":(\")\n    return\nprint(\"Yay!\")\n", "a=int(input())\ninput()\ninput()\ninput()\ne=int(input())\nk=int(input())\nprint(\"Yay!\" if k>=e-a else \":(\")", "a = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = int(input())\nk = int(input())\nif max(e-a,e-b,e-c,e-d) <= k:\n    print('Yay!')\nelse:\n    print(':(')", "import sys\nimport math\n\na = [int(input()) for i in range(5)]\nk = int(input())\nfor i in range(5):\n    for j in range(5):\n        if (a[i] - a[j]) > k:\n            print(\":(\")\n            return\nprint(\"Yay!\")", "l = [int(input()) for _ in range(6)]\nprint(\"Yay!\" if l[4]-l[0] <= l[5] else \":(\")", "a = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = int(input())\nk = int(input())\n\nl = []\nl.append(a)\nl.append(b)\nl.append(c)\nl.append(d)\nl.append(e)\nans = 0\nfor i in range(5):\n    for j in range(i+1,5):\n        if l[j] - l[i] > k :\n            ans += 1\n\nif ans == 0 :\n    print(\"Yay!\")\nelse :\n    print(\":(\")\n", "#!/usr/bin/env python3\nimport sys\n\n\ndef solve(a: int, b: int, c: int, d: int, e: int, k: int):\n    print(('Yay!' if e - a <= k else ':('))\n\n\n\n# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    a = int(next(tokens))  # type: int\n    b = int(next(tokens))  # type: int\n    c = int(next(tokens))  # type: int\n    d = int(next(tokens))  # type: int\n    e = int(next(tokens))  # type: int\n    k = int(next(tokens))  # type: int\n    solve(a, b, c, d, e, k)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def f():\n    x = [int(input()) for _ in range(5)]\n    k = int(input())\n    for i in range(5):\n        for j in range(5):\n            if abs(x[i] - x[j]) > k:\n                return\":(\"\n    return \"Yay!\"\nprint(f())", "a = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = int(input())\nk = int(input())\nif e - a <= k:\n    print('Yay!')\nelse:\n    print(':(')", "a,b,c,d,e,k=[int(input()) for i in range(6)]\nprint(\"Yay!\" if e-a<=k else \":(\")", "a = []\nfor i in range(5):\n    a.append(int(input()))\nk = int(input())\nisOK = True\nfor i in range(5):\n    for j in range(i+1,5):\n        if abs(a[i]-a[j])>k:\n            isOK = False\n            break\nif isOK:\n    print('Yay!')\nelse:\n    print(':(')", "abcde = [int(input()) for _ in range(5)]\nk = int(input())\n\nfor i in range(4):\n    for j in range(i, 5):\n        if abcde[j] - abcde[i] > k:\n            print(':(')\n            return\nprint('Yay!')", "a=[int(input()) for _ in range(5)]\nk=int(input())\nflag=False\nfor i in range(5):\n\tfor j in range(i+1,5):\n\t\ttmp=abs(a[i]-a[j])\n\t\tif tmp > k:\n\t\t\tflag=True\n\t\t\tbreak\n\tif flag:\n\t\tbreak\nif flag:\n\tprint(\":(\")\nelse:\n\tprint(\"Yay!\")", "ans = 0\nposition = []\nfor i in range(5):\n    x = int(input())\n    position.append(x)\nk = int(input())\ndistance_list = []\nfor i in range(5):\n    for j in range(5):\n        if i != j:\n            distance = abs(position[i] - position[j]) \n            distance_list.append(distance)\n\ny = max(distance_list)\nif y <= k:\n    print('Yay!')\nelse:\n    print(':(')\n\n", "a = []\nfor i in range(5):\n  a.append(int(input()))\nb = int(input())\nif a[4] - a[0] > b:\n  print(\":(\")\nelse:\n  print(\"Yay!\")\n\n", "a=int(input())\nb=int(input())\nc=int(input())\nd=int(input())\ne=int(input())\nk=int(input())\nif e-a<=k:\n  print(\"Yay!\")\nelse:\n  print(\":(\")", "a=[int(input()) for _ in range(5)]\nk=int(input())\na.sort()\nif a[-1]-a[0]>k:\n    print(\":(\")\nelse:\n    print(\"Yay!\")\n", "def Input():\n    return mapt(int, input().split(\" \"))\n\n\ndef calc(i, h):\n    return all(h[i] >= h[j] for j in range(i))\n\n\ndef main():\n    data = [int(input()) for _ in range(5)]\n    k = int(input())\n    print(\"Yay!\" if k >= data[-1] - data[0] else \":(\")\n\n\nmain()", "a=[]\nfor i in range(6):\n    temp=int(input())\n    a.append(temp)\nfor i in range(4):\n    for j in range(1,5):\n        if a[j]-a[i]>a[5]:\n            print(':(')\n            return\nprint('Yay!')", "A = [int(input()) for i in range(5)]\nk = int(input())\n\nfor i in range(5):\n    for j in range(i+1,5):\n        if A[j]-A[i] > k:\n            print(':(')\n            return\nprint('Yay!')", "a,b,c,d,e = [int(input()) for _ in range(5)]\nk = int(input())\n \nd1 = b-a\nd2 = c-a\nd3 = d-a\nd4 = e-a\nd5 = c-b\nd6 = d-b\nd7 = e-b\nd8 = d-c\nd9 = e-c\nd10= e-d\n \nif d1 > k or d2 > k or d3 > k or d4 > k or d5 > k or d6 > k or d7 > k or d8 > k or d9 > k or d10 > k: print(':(')\nelse: print('Yay!')", "a = [int(input()) for x in range(5)]\nk = int(input())\n\nflg = False\n\nfor i, x in enumerate(a):\n  for j, y in enumerate(a):\n    if i == j:\n      continue\n      \n    flg = flg or abs(y-x) > k\n    \nprint(':(' if flg else \"Yay!\")", "antennas = []\nfor i in range(5):\n    antennas.append(int(input()))\nk = int(input())\n\nfor e in antennas[:0:-1]:\n    if e - antennas[0] > k:\n        print(':(')\n        break\nelse:\n    print('Yay!')\n", "x=[int(input()) for _ in range(6)]\nprint([\"Yay!\",\":(\"][x[4]-x[0]>x[5]])", "A = [int(input()) for _ in range(5)]\nk = int(input())\nfor i in range(5):\n    for j in range(i+1, 5):\n        if A[j] - A[i] > k:\n            print(':(')\n            return\nprint('Yay!')", "A = []\nfor i in range(5):\n  A.append(int(input()))\nk = int(input())\nans = False\nfor i in range(5):\n  for j in range(i+1, 5):\n    if abs(A[i] - A[j]) > k:\n      ans = True\n      break\nif ans == False:\n  print(\"Yay!\")\nelse:\n  print(\":(\")", "x = [int(input())  for i in range(5)]\nk=int(input())\nif x[4]-x[0]<=k:\n  print('Yay!')\nelse:\n  print(':(')", "a = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = int(input())\nk = int(input())\nif k >= e-a:\n  print(\"Yay!\")\nelse:\n  print(\":(\")\n", "a = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = int(input())\nk = int(input())\n  \nif e-a <= k: print('Yay!')\nelse: print(':(')", "from itertools import combinations\ns=[int(input())for _ in[0]*6]\nk=s.pop()\nr=\"Yay!\"\nfor i,j in combinations(s,2):\n\tif j-i>k:\n\t\tr=\":(\";break\nprint(r)", "import sys\ninp = lambda: sys.stdin.readline()\nmi = lambda: map(int, inp().split())\nli = lambda: list(map(int, inp().split()))\nmf = lambda: map(float,inp().split())\nlf = lambda: list(map(float,inp().split()))\n\nA = int(inp())\nB = int(inp())\nC = int(inp())\nD = int(inp())\nE = int(inp())\nK = int(inp())\nprint(\"Yay!\" if E - A <= K else \":(\")", "n_l = [int(input()) for _ in range(6)]\n\nif n_l[-2] - n_l[0] > n_l[-1]:\n    print(':(')\nelse:\n    print('Yay!')", "a,b,c,d,e,k=[int(input()) for _ in range(6)]\nif e-a<=k:\n  print(\"Yay!\")\nelse:\n  print(\":(\")", "x = [int(input()) for _ in range(5)]\nk = int(input())\nM = max(x)\nm = min(x)\nif M-m > k:\n    print(':(')\nelse:\n    print('Yay!')", "a=[int(input()) for i in range(5)]\nk=int(input())\nfor i in range(4):\n    for j in range(i+1,5):\n        if a[j]-a[i]>k:\n            print(\":(\")\n            return\nprint(\"Yay!\")", "# import sys\n# sys.setrecursionlimit(10 ** 6)\n# import bisect\n# from collections import deque\nimport numpy as np\n# from decorator import stop_watch\n# \n# \n# @stop_watch\ndef solve(a, b, c, d, e, k):\n    arr = np.array([a, b, c, d, e])\n    # print(arr)\n    arr, arr2 = [a.flatten() for a in np.meshgrid(arr, arr)]\n    # print(arr)\n    arr = np.c_[arr, arr2]\n    # print(arr)\n    arr = np.array(list([abs(x[0] - x[1]) for x in arr]))\n    # print(arr)\n    print((':(' if arr.max() > k else 'Yay!'))\n\n\ndef __starting_point():\n    a, b, c, d, e, k = [int(input()) for _ in range(6)]\n    # print(a, b, c, d, e, k)\n    solve(a, b, c, d, e, k)\n\n    # # test\n    # from random import randint\n    # from func import random_str\n    # solve()\n\n\n__starting_point()", "a = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = int(input())\nk = int(input())\n\nif e-a <= k:\n    print(\"Yay!\")\n\nelse:\n    print(\":(\")", "antena = [int(input()) for i in range(5)]\nk = int(input())\n\nif antena[-1] - antena[0] <= k:\n    print('Yay!')\nelse:\n    print(':(')", "antenna = [input() for _ in range(5)]\nk = int(input())\n\ncheck = True\nfor i in range(4):\n  for j in range(i+1,5):\n    if int(antenna[j]) - int(antenna[i]) > k:\n      check = False\n\nprint(\"Yay!\" if check else \":(\")", "import itertools\na = []\nfor i in range(5):\n    a.append(int(input()))\nk = int(input())\n\ncnt = 0\nl = list(itertools.combinations(a,2))\nfor i in range(len(l)):\n    if abs(l[i][0] - l[i][1]) > k:\n        cnt += 1\n\nif cnt >= 1:\n    print(\":(\")\nelse:\n    print(\"Yay!\")", "#!/usr/bin/env python3\nimport sys\n\n\ndef solve(a: int, b: int, c: int, d: int, e: int, k: int):\n    print(('Yay!' if e - a <= k else ':('))\n\n\n\n# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    a = int(next(tokens))  # type: int\n    b = int(next(tokens))  # type: int\n    c = int(next(tokens))  # type: int\n    d = int(next(tokens))  # type: int\n    e = int(next(tokens))  # type: int\n    k = int(next(tokens))  # type: int\n    solve(a, b, c, d, e, k)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "a = []\nfor i in range(5):\n    a.append(int(input()))\nb = int(input())\nfor i in range(4):\n    if abs(a[0] - a[i+1]) > b:\n        print(\":(\")\n        return\nfor i in range(3):\n    if abs(a[1] - a[i+2]) > b:\n        print(\":(\")\n        return\nfor i in range(2):\n    if abs(a[2] - a[i+3]) > b:\n        print(\":(\")\n        return\nfor i in range(1):\n    if abs(a[3] - a[i+4]) > b:\n        print(\":(\")\n        return\nprint(\"Yay!\")", "a = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = int(input())\nk = int(input())\nprint(\"Yay!\" if abs(a-e) <= k else \":(\")", "dis = []\nfor i in range(5):\n  dis.append(int(input()))\n\nk = int(input())\n\nif dis[4] - dis[0] <= k:\n  print('Yay!')\nelse:\n  print(':(')\n", "import sys\n\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nsys.setrecursionlimit(10 ** 9)\nINF = 1 << 60\nMOD = 1000000007\n\n\ndef main():\n    a, b, c, d, e, k = list(map(int, read().split()))\n\n    if e - a > k:\n        print(':(')\n    else:\n        print('Yay!')\n\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "a=int(input())\nb=int(input())\nc=int(input())\nd=int(input())\ne=int(input())\n\nk=int(input())\n\nif e-a>k:\n  print(\":(\")\nelse:\n  print(\"Yay!\")\n", "a,*x,e,k = [int(input()) for _ in range(6)]\nprint(\"Yay!\" if e-a<=k else \":(\")", "l = [int(input()) for i in range(5)]\nk = int(input())\n\nif max(l)-min(l) <= k:\n  print('Yay!')\nelse:\n  print(':(')", "import itertools\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = int(input())\nk = int(input())\n\nlst = [a, b, c, d, e]\nc = list(itertools.combinations(lst, 2))\nfor i, j in c:\n    if j - i > k:\n        print(':(')\n        break\nelse:\n    print('Yay!')", "a = int(input())\nfor i in range(3):\n\tinput()\ne = int(input())\nprint('Yay!' if e - a <= int(input()) else ':(')", "l=[]\nfor i in range(6):\n    l.append(int(input()))\nif l[4]-l[0]>l[5]:\n    print(\":(\")\nelse:\n    print(\"Yay!\")", "s = []\nfor i in range(5):\n    s.append(int(input()))\nk = int(input())\nfor i in range(4):\n    if s[i+1]-s[0] >k:\n        print(\":(\")\n        break\nelse:\n    print(\"Yay!\")", "#!/usr/bin/env python3\nimport sys\n\n\ndef solve(a: int, b: int, c: int, d: int, e: int, k: int):\n    print(('Yay!' if e - a <= k else ':('))\n\n\n\n# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    a = int(next(tokens))  # type: int\n    b = int(next(tokens))  # type: int\n    c = int(next(tokens))  # type: int\n    d = int(next(tokens))  # type: int\n    e = int(next(tokens))  # type: int\n    k = int(next(tokens))  # type: int\n    solve(a, b, c, d, e, k)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "dis = [0 for i in range(5)]\nfor i in range(5):\n  dis[i] = int(input())\nk = int(input())\n\nif dis[4]-dis[0] > k:\n  print(':(')\nelse:\n  print('Yay!')", "\nl = [int(input()) for i in range(6)]\nk = l[-1]\n\nsub=l[-2]-l[0]\n\nif(sub<=k):\n    print('Yay!')\nelse:\n    print(':(')\n", "lists = []\nfor _ in range(5):\n    lists.append(int(input()))\nk = int(input())\n\nlists.sort()\nmaximum = lists[-1]\nminimum = lists[0]\n\nif k < maximum - minimum:\n    ans = ':('\nelse:\n    ans = 'Yay!'\n\nprint(ans)", "a = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = int(input())\nk = int(input())\n\nif e - a > k:\n  print(\":(\")\nelse:\n  print(\"Yay!\")\n", "from itertools import combinations\ndef test():\n  num_list = [int(input()) for _ in range(5)]\n  k=int(input())\n  l=list(combinations(num_list,2))\n  for i,j in l:\n    if abs(i-j) >k:\n      print(\":(\")\n      return\n  print(\"Yay!\")\ntest()", "#!/usr/bin/env python3\nimport sys\n\n\ndef solve(a: int, b: int, c: int, d: int, e: int, k: int):\n    print(('Yay!' if e - a <= k else ':('))\n\n\n\n# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    a = int(next(tokens))  # type: int\n    b = int(next(tokens))  # type: int\n    c = int(next(tokens))  # type: int\n    d = int(next(tokens))  # type: int\n    e = int(next(tokens))  # type: int\n    k = int(next(tokens))  # type: int\n    solve(a, b, c, d, e, k)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import itertools\n\n\nL=[int(input()) for _ in range(5)]\nK=int(input())\nLcombi=itertools.combinations(L,2)\n\nfor lc in Lcombi:\n\tif abs(lc[0]-lc[1])>K:\n\t\tprint(\":(\")\n\t\treturn\n\nprint(\"Yay!\")", "l = []\nflg = False\n\nfor i in range(5):\n  l.append(int(input()))\n  \nk = int(input())\nl.sort(reverse = True)\n  \nfor i in range(len(l)):\n  for j in range(len(l)-i):\n    if(l[i]-l[j]>k):\n      flg=True\n      \nprint(':(' if flg else 'Yay!')", "a = []\nfor i in range(5):\n    a.append(int(input()))\nk = int(input())\n\nfor i in range(5):\n    for j in range(i, 5):\n        if a[j] - a[i] > k:\n            print(':(')\n            return\nprint('Yay!')", "a = int(input())\n_ = int(input())\n_ = int(input())\n_ = int(input())\ne = int(input())\nk = int(input())\nprint((\"Yay!\" if e - a <= k else \":(\"))\n", "a=[int(input()) for i in range(6)]\nprint(\"Yay!\" if abs(a[0]-a[4])<=a[5] else \":(\")", "num_list = []\ncount_cant_go = 0\n\nfor i in range(5):\n    num_list.append(int(input()))\n\nnum_list.append(int(input()))\n\nif max(num_list) - min(num_list) <= num_list[-1]:\n    print('Yay!')\nelse:\n    print(':(')\n", "a,b,c,d,e,k=int(input()),int(input()),int(input()),int(input()),int(input()),int(input())\nif e-a<=k:print(\"Yay!\")\nelse:print(\":(\")", "a = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = int(input())\nk = int(input())\n \nd1 = b-a\nd2 = c-a\nd3 = d-a\nd4 = e-a\nd5 = c-b\nd6 = d-b\nd7 = e-b\nd8 = d-c\nd9 = e-c\nd10= e-d\n \nif d1 > k or d2 > k or d3 > k or d4 > k or d5 > k or d6 > k or d7 > k or d8 > k or d9 > k or d10 > k: print(':(')\nelse: print('Yay!')", "a = [0]*5\nfor i in range(5):\n    a[i] = int(input())\nk = int(input())\nif a[-1] - a[0] > k:\n    s = 0\nelse:\n    s = 1\nprint([\":(\",\"Yay!\"][s])", "cor = [0 for i in range(5)]\nfor i in range(5):\n  cor[i] = int(input())\nk = int(input())\n\nflag = True\nfor i in range(5):\n  for j in range(i, 5):\n    if abs(cor[i]-cor[j]) > k:\n      flag = False\nif flag:\n  print('Yay!')\nelse:\n  print(':(')", "w = int(input())\nfor i in range(3):\n  input()\ne = int(input())\nk = int(input())\nif e - w <= k:\n  print(\"Yay!\")\nelse:\n  print(\":(\")", "num = [int(input()) for i in range(5)]\nk = int(input())\nx = 'Yay!'\nfor h in num:\n    for j in num:\n        if k < j-h:\n            x = ':('\nprint(x)", "a, b, c, d, e, k = [int(input()) for _ in range(6)]\n\n# \u6700\u9577\u8ddd\u96e2(=e-a)\u304ck\u4ee5\u4e0b => \u5168\u3066\u306e\u30a2\u30f3\u30c6\u30ca\u304c\u76f4\u63a5\u901a\u4fe1\u3067\u304d\u308b => \u76f4\u63a5\u901a\u4fe1\u3067\u304d\u306a\u3044\u30a2\u30f3\u30c6\u30ca\u306e\u7d44\u306f\u5b58\u5728\u3057\u306a\u3044\n# \u6700\u9577\u8ddd\u96e2\u304ck\u3088\u308a\u5927\u304d\u3044 => \u76f4\u63a5\u901a\u4fe1\u3067\u304d\u306a\u3044\u30a2\u30f3\u30c6\u30ca\u306e\u7d44\u306f\u5c11\u306a\u304f\u3068\u30821\u3064\u5b58\u5728\u3059\u308b\nif e-a <= k: print('Yay!')\nelse: print(':(')", "a = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = int(input())\nk = int(input())\n\nif e - a <= k:\n    print('Yay!')\nelse:\n    print(':(')", "a = []\nfor i in range(5):\n  a.append(int(input()))\na.sort()\nj = int(input())\nk = a[4] - a[0]\nif k <= j:\n  print(\"Yay!\")\nelse:\n  print(\":(\")", "#!/usr/bin/env python3\n\ndef main():\n    antenna = [int(input()) for i in range(5)]\n    k = int(input())\n    print((\":(\" if max(antenna) - min(antenna) > k else \"Yay!\"))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import math\ns = [int(input()) for i in range(5)]\nk=int(input())\nq=0\nif abs(s[4]-s[0])<=k:\n   q=1\nif q==1:\n   print('Yay!')\nif q==0:\n  print(':(')\n", "a,b,c,d,e,k=int(input()), int(input()),int(input()),int(input()),int(input()),int(input())\n\nif e-a<=k:\n    print(\"Yay!\")\n    \nelse:\n    print(\":(\")", "a = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = int(input())\nK = int(input())\n\nLIST = [a,b,c,d,e]\nLIST = sorted(LIST)\nif LIST[-1] - LIST[0] <= K:\n    print('Yay!')\nelse:\n    print(':(')", "a=list(int(input()) for i in range(5))\nk=int(input())\nif a[4]-a[0]<=k:\n    print(\"Yay!\")\nelse:\n    print(\":(\")", "a,_,_,_,e,k=[int(input()) for _ in range(6)]\nprint([\"Yay!\",\":(\"][e-a>k])", "l = [int(input()) for _ in range(5)]\nk = int(input())\nfor i in range(5):\n    for j in range(i+1,5):\n        if l[j]-l[i] > k:\n            print(\":(\")\n            return\nprint(\"Yay!\")", "antenna = [int(input()) for _ in range(5)]\nk = int(input())\nans = 'Yay!'\n\nfor i in range(5):\n    for j in range(5):\n        if i < j:\n            if antenna[j] - antenna[i] > k:\n                ans = ':('\n                break\n    else:\n        continue\n    break\n\nprint(ans)", "details = []\nfor i in range(6):\n    details.append(int(input()))\nchecker = []\nfor i in details[:len(details)-1]:\n    for j in details[:len(details)-1]:\n        checker.append(j-i)\n\nif (max(checker) > details[-1]):\n    print(\":(\")\nelse:\n    print(\"Yay!\")\n", "a,b,c,d,e,k=int(input()),int(input()),int(input()),int(input()),int(input()),int(input())\nif k>=max(a,b,c,d,e)-min(a,b,c,d,e):\n  print('Yay!')\nelse:\n  print(':(')", "import itertools\nL = []\nfor i in range(5):\n    L.append(int(input()))\nk = int(input())\n\nM = []\nfor v in itertools.combinations(L, 2):\n\tM.append(list(v))\n\ndist = []\nfor m in M:\n    dist.append(abs(m[0]-m[1]))\n\n#print(dist)\n\nif max(dist) > k:\n    print(':(')\nelse:\n    print('Yay!')\n", "t=[]\nfor i in range(5):\n    t.append(int(input()))\nk=int(input())\nt.sort()\nif t[4]-t[0]>k:\n    print(\":(\")\nelse:\n    print(\"Yay!\")\n", "ls =[]\nans = 'Yay!'\nfor i in range(5):\n    ls.append(int(input()))\nk = int(input())\nfor i in range(5):\n    for j in range(5):\n        if abs(ls[i]-ls[j]) > k:\n            ans = ':('\n            break\nprint(ans)", "a = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\ne = int(input())\nk = int(input())\nif(e-a <= k):\n    print(\"Yay!\")\nelse:\n    print(\":(\")", "li=[0]*5\nans=\"Yay!\"\nfor i in range(5):\n    li[i]=int(input())\nk=int(input())\n\nfor j in range(5):\n    for l in range(5):\n        if j<l:\n            if k-(li[l]-li[j])<0:\n                ans=\":(\"\nprint(ans)\n", "abcde = [input() for i in range(5)]\n\nk = int(input())\n\nfor ii in range(5):\n    for jj in range(ii, 5):\n        if int(abcde[jj]) - int(abcde[ii]) > k:\n            print(':(')\n            return\n\nprint('Yay!')"]