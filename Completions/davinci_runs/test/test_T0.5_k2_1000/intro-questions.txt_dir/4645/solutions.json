["T = int(input())\nfor _ in range(T):\n    n = int(input())\n    if n <= 3:\n        print(-1)\n    else:\n        left = []\n        for i in range(1, n + 1, 2):\n            left.append(i)\n        right = []\n        right.append(4)\n        right.append(2)\n        for i in range(6, n + 1, 2):\n            right.append(i)\n        right.reverse()\n\n        for i in left:\n            right.append(i)\n        \n        for i in right:\n            print(i, end = \" \")\n        print(\"\")", "t = int(input())\nfor __ in range(t):\n    n = int(input())\n    if n <= 3:\n        print(-1)\n    else:\n        ps = [[2,4,1,3],[3,1,4,2,5],[1,4,2,5,3,6],[5,1,3,6,2,4,7]]\n        ret = ps[n%4]\n        for i in range((n%4) + 4, n, 4):\n            ret.extend([i+2,i+4,i+1,i+3])\n        print(\" \".join(map(str, ret)))", "#  =========     /\\       /|    |====/|\n#      |        /  \\       |    |   / |\n#      |       /____\\      |    |  /  |\n#      |      /      \\     |    | /   |\n#  ========= /        \\  =====  |/====|  \n#  code\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        if n == 2 or n == 3:\n            print(-1)\n            continue\n        if n == 4:\n            print('3 1 4 2')\n            continue\n        a = [2 * i + 1 for i in range((n + 1) // 2)]\n        a.append(a[-1] - 3)\n        if a[-1] + 2 == (n // 2) * 2:\n            a.append(a[-1] + 2)\n        else:\n            a.append(a[-1] + 4)\n        b = [2 * i + 2 for i in range(n // 2)]\n        b = b[::-1]\n        for i in b:\n            if i not in a:\n                a.append(i)\n        print(*a)\n    return\n\ndef __starting_point():\n    main()\n__starting_point()", "t = int(input())\nfor aoaoao in range(t):\n    n = int(input())\n    if n == 1:\n        print(1)\n    elif n < 5:\n    \tif n == 4:\n    \t\tprint(\"3 1 4 2\")\n    \telse:\n\t        print(-1)\n    else:\n        a = [[], [], [], [], []]\n        a[0] = [1, 3, 5, 2, 4]\n        a[1] = [1, 3, 5, 2, 6, 4]\n        a[2] = [1, 3, 5, 7, 4, 2, 6]\n        a[3] = [1, 3, 5, 8, 6, 2, 4, 7]\n        a[4] = [1, 3, 5, 9, 7, 4, 2, 6, 8]\n        f = -1\n        for x in a[n % 5]:\n            print(x, end = \" \")\n        f = max(a[n % 5])\n        while f < n:\n            for x in a[0]:\n                print(f + x, end = \" \")\n            f += 5\n        print()\n        ", "def Zs(): return list(map(int, input().split()))\ndef Z(): return int(input())\n\ndef solve(n):\n    if n <= 3: return None\n    ans = []\n    k = 1\n    while n >= 8:\n        ans.extend([k + 1, k + 3, k, k + 2])\n        n -= 4\n        k += 4\n    if n == 4:\n        ans.extend([x + k for x in [2, 0, 3, 1]])\n    elif n == 5:\n        ans.extend([x + k for x in [2, 0, 4, 1, 3]])\n    elif n == 6:\n        ans.extend([x + k for x in [2, 0, 4, 1, 3, 5]])\n    else:\n        ans.extend([x + k for x in [2, 0, 4, 1, 5, 3, 6]])\n    return ans\n\nfor _ in range(Z()):\n    n = Z()\n    ans = solve(n)\n    if ans is not None:\n        print(*ans)\n    else:\n        print(-1)\n\n\n", "for _ in range(int(input())):\n\tn = int(input())\n\tif n == 4:\n\t\tprint(3, 1, 4, 2)\n\t\tcontinue\n\tif n < 5:\n\t\tprint(-1)\n\t\tcontinue\n\tarr = []\n\tdone = [False] * n\n\tfor i in range(0, n, 2):\n\t\tarr.append(i)\n\t\tdone[i] = True\n\tfor i in range(arr[-1]-3, 0, -4):\n\t\tarr.append(i)\n\t\tdone[i] = True\n\tfor i in range(n):\n\t\tif not done[i]:\n\t\t\tarr.append(i)\n\n\tprint(*[e+1 for e in arr])\n", "def solve(l,r):\n\tn=r-l+1\n\t#print(l,r,n)\n\tif n==0:\n\t\treturn []\n\telif n%4==0:\n\t\treturn [l+1,l+3,l,l+2]+solve(l+4,r)\n\telif n%4==1:\n\t\treturn [l]+solve(l+1,r)\n\telif n%4==2:\n\t\treturn [l]+solve(l+1,r-1)+[r]\n\treturn [5, 1, 3, 6, 2, 4, 7]+solve(l+7,r)\nt=int(input())\nfor i in range(t):\n\tn=int(input())\n\tif n<=3:\n\t\tprint(-1)\n\telse:\n\t\tprint(*solve(1,n))", "#!/usr/bin/env python3\nfrom sys import stdin\nimport collections\n\n\ndef solve(tc):\n    n = int(stdin.readline().strip())\n    if n<4:\n        print(-1)\n        return\n    base = collections.deque()\n    base.extend([2,4,1,3])\n    p = 5\n    while p+1<=n:\n        base.append(p)\n        base.appendleft(p+1)\n        p += 2\n    \n    if p==n:\n        base.append(p)\n\n    for x in base:\n        print(x, end=' ')\n    print()\n    \nLOCAL_TEST = not __debug__\nif LOCAL_TEST:\n    infile = __file__.split('.')[0] + \"-test.in\"\n    stdin = open(infile, 'r')\n\ntcs = int(stdin.readline().strip())\ntc = 1\nwhile tc <= tcs:\n    solve(tc)\n    tc += 1", "from sys import stdin\n \nfor _ in range(int(stdin.readline())):\n    inp = int(stdin.readline())\n    if inp<4:\n        print('-1')\n    else:\n        odd = list(range(5,inp+1,2))\n        odd.reverse()\n        even = list(range(6,inp+1,2))\n        r = odd+[3,1,4,2]+even\n        print(' '.join(map(str,r)))\n        \n", "# cook your dish here\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    if n==2 or n==3 :\n        print(-1)\n        #break\n    elif n==4:\n        print(\"3 1 4 2\")\n    else:\n        c=1\n        if n%2==0:\n            for i in range(1,n,2):\n                print(i,end=\" \")\n            if n-4>0:\n                print(n-4,end=\" \")\n            for i in range(n,0,-2):\n                if i !=(n-4) and i!=0:\n                    print(i,end=\" \")\n        else:\n            for i in range(1,n+1,2):\n                print(i,end=\" \")\n            if n-3>0:\n                print(n-3,end=\" \")\n            for i in range(n-1,0,-2):\n                if i!=(n-3) and i!=0:\n                    print(i,end=\" \")\n            \n            \n        print()\n    \n        ", "t = int(input())\nfor _ in range(t):\n    out = []\n    works = True\n    n = int(input())\n    while n:\n        if n == 1:\n            out.append(1)\n            break\n        elif n == 2:\n            works = False\n            break\n        elif n == 3:\n            works = False\n            break\n        elif n == 4:\n            out += [3, 1, 4, 2]\n            break\n        elif n == 5:\n            out += [5,2,4,1,3]\n            break\n        elif n == 7:\n            out += [7, 4, 2, 6, 3, 1, 5]\n            break\n        elif n == 8:\n            out += [8, 4, 7, 3, 6, 2, 5, 1]\n            break\n        elif n == 9:\n            out += [9, 7, 4, 2, 6, 8, 5, 1, 3]\n            break\n        else:\n            out.append(n)\n            out.append(n - 3)\n            out.append(n - 1)\n            out.append(n - 4)\n            out.append(n - 2)\n            n -= 5\n    if works:\n        print(*out)\n    else:\n        print(-1)\n        \n", "t = int( input() )\n\nfor i in range( t ):\n  n = int( input() )\n\n  if n<=3:\n    print( \"-1\" )\n    continue\n\n  ans = [ 2 , 4 , 1 , 3 ]\n\n  m = 4\n  idx = 1\n\n  while m < n:\n    m = m+1\n    ans.append( m )\n\n    m = m+1\n    if m<=n:\n      idx = 1\n      while idx < len( ans ):\n        if m-ans[idx-1] >= 2 and m-ans[idx-1]<=4 and m-ans[idx]>=2 and m-ans[idx]<=4:\n          break\n        idx = idx+1\n      ans.insert( idx , m ) \n\n  for p in ans:\n    print( p , end = \" \" )\n  print( \"\\n\" ) \n\n\n  ", "t = int(input())\nfor i in range(t):\n    n=int(input())\n    if n==2:\n        print(-1)\n        continue\n    if n==3:\n        print(-1)\n        continue\n    if n==4:\n        print(3,1,4,2)\n        continue\n    if n==5:\n        print(1,3,5,2,4)\n        continue\n    if n%2==0:\n        for i in range(n//2):\n            print(i*2+1,end=' ')\n        print(n - 4, n, n - 2, end=' ')\n        for i in range(n//2-3):\n            print(n-6-2*i, end=' ')\n        print()\n    if n%2==1:\n        for i in range(n//2+1):\n            print(i*2+1,end=' ')\n        print(n-3, n-1, end=' ')\n        for i in range(n//2-2):\n            print(n-5-2*i, end=' ')\n        print()\n        \n    \n        ", "t = int(input())\n\nwhile t!=0:\n    t-=1 \n    n = int(input())\n    if n==2 or n==3:\n        print(-1)\n    else:\n        odd = [i for i in range(1,n+1,2)]\n        eve = [i for i in range(2, n+1,2)]\n        odd.reverse()\n        eve[0] , eve[1] = eve[1] , eve[0]\n        odd+=eve \n        print(*odd)\n", "t = int(input())\nfor _ in range(t):\n\tn = int(input())\n\tif n == 2 or n == 3:\n\t\tprint(-1)\n\t\tcontinue\n\tif n >= 4:\n\t\tans = []\n\t\tif n%4 == 0:\n\t\t\tfor i in range(1, n+1, 4):\n\t\t\t\tans += [i+1, i+3, i, i+2]\n\t\telse:\n\t\t\td = n//4 - 1\n\t\t\tcur = 1\n\t\t\tfor i in range(d):\n\t\t\t\tans += [cur+1, cur+3, cur, cur+2]\n\t\t\t\tcur += 4\n\t\t\tif n%4 == 1:\n\t\t\t\tans += [cur+1, cur+3, cur, cur+2, cur+4]\n\t\t\telif n%4 == 2:\n\t\t\t\tans += [cur, cur+2, cur+4, cur+1, cur+3, cur+5]\n\t\t\telse:\n\t\t\t\tans += [cur, cur+3, cur+1, cur+5, cur+2, cur+4, cur+6]\t\t\t\t\n\n\n\t\tprint(*ans)\n", "# HEY STALKER\nfor _ in range(int(input())):\n    n = int(input())\n    if n <= 3:\n        print(-1)\n    else:\n        k = []\n        for t in range(n, 0, -2):\n            k.append(t)\n        l = []\n        for t in range(n-3, 0, -2):\n            l.append(t)\n        l.insert(1, n-1)\n        l.reverse()\n        print(*l, *k)", "for _ in range(int(input())):\n    n = int(input())\n    ar = []\n    kek = set()\n    for i in range(1, n + 1):\n        kek.add(i)\n    kek.discard(n - 1)\n    ar.append(n - 1)\n    for i in range(n):\n        if ar[-1] - 3 in kek:\n            kek.discard(ar[-1] - 3)\n            ar.append(ar[-1] - 3)\n        elif ar[-1] - 2 in kek:\n            kek.discard(ar[-1] - 2)\n            ar.append(ar[-1] - 2)\n        elif ar[-1] - 4 in kek:\n            kek.discard(ar[-1] - 4)\n            ar.append(ar[-1] - 4)\n        elif ar[-1] + 3 in kek:\n            kek.discard(ar[-1] + 3)\n            ar.append(ar[-1] + 3)\n        elif ar[-1] + 2 in kek:\n            kek.discard(ar[-1] + 2)\n            ar.append(ar[-1] + 2)\n        elif ar[-1] + 4 in kek:\n            kek.discard(ar[-1] + 4)\n            ar.append(ar[-1] + 4)\n    if n == 2 or n == 3 or n == 1:\n        print(-1)\n    else:\n        print(*ar)"]