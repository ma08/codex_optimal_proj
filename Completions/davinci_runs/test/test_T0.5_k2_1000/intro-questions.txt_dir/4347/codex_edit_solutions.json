["\n#Solution \n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n", "\n#!/bin/python3\n#Solution \n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n", "\n# Solution\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n", "\n\nimport math\n\ndef round_dance(n, k):\n    return math.factorial(n) // (k * math.factorial(n // k))\n\nif __name__ == '__main__':\n    n = int(input())\n    k = int(input())\n    print(round_dance(n, k))\n", "\n\n# Solution 1\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nn = int(input()) # input\n\nprint(factorial(n) // (factorial(n // 2) ** 2)) # output\n\n\n# Solution 2\n\nn = int(input()) # input\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n", "\nimport math\n\ndef round_dance(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2))\n\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dance(n))\n"]