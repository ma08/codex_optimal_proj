2022-04-11 19:32:37.231106 num operations 2
2022-04-11 19:32:37.231135 size on input set 1
2022-04-11 19:32:40.038901 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport math\n\ndef round_dance(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2))\n\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dance(n))\n"
    },
    {
      "index": 1,
      "text": "\n\nimport math\n\ndef round_dance(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2))\n\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dance(n))\n"
    }
  ],
  "created": 1649719957,
  "object": "edit"
}
2022-04-11 19:32:40.039333 fix spelling mistakes 2 ["\n\nimport math\n\ndef round_dance(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2))\n\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dance(n))\n", "\n\nimport math\n\ndef round_dance(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2))\n\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dance(n))\n"]
2022-04-11 19:32:40.039426 size on output set 1
2022-04-11 19:32:40.039443 size on input set 1
2022-04-11 19:32:43.675257 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport math\n\ndef round_dance(n, k):\n    return math.factorial(n) // (k * math.factorial(n // k))\n\nif __name__ == '__main__':\n    n = int(input())\n    k = int(input())\n    print(round_dance(n, k))\n"
    },
    {
      "index": 1,
      "text": "\nimport math\n\ndef round_dance(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2))\n\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dance(n))\n"
    }
  ],
  "created": 1649719960,
  "object": "edit"
}
2022-04-11 19:32:43.675727 fix syntax errors 2 ["\n\nimport math\n\ndef round_dance(n, k):\n    return math.factorial(n) // (k * math.factorial(n // k))\n\nif __name__ == '__main__':\n    n = int(input())\n    k = int(input())\n    print(round_dance(n, k))\n", "\nimport math\n\ndef round_dance(n):\n    return math.factorial(n) // (2 * math.factorial(n // 2))\n\nif __name__ == '__main__':\n    n = int(input())\n    print(round_dance(n))\n"]
2022-04-11 19:32:43.675773 size on output set 2
2022-04-11 19:32:43.675805 num operations 2
2022-04-11 19:32:43.675811 size on input set 1
2022-04-11 19:32:45.700928 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#Solution \n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n"
    },
    {
      "index": 1,
      "text": "\n\n# Solution\n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n"
    }
  ],
  "created": 1649719963,
  "object": "edit"
}
2022-04-11 19:32:45.701135 fix spelling mistakes 2 ['\n\n#Solution \n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n', '\n\n# Solution\n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n']
2022-04-11 19:32:45.701149 size on output set 2
2022-04-11 19:32:45.701153 size on input set 2
2022-04-11 19:32:51.222753 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Solution\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n"
    },
    {
      "index": 1,
      "text": "\n\n# Solution 1\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nn = int(input()) # input\n\nprint(factorial(n) // (factorial(n // 2) ** 2)) # output\n\n\n# Solution 2\n\nn = int(input()) # input\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n"
    }
  ],
  "created": 1649719965,
  "object": "edit"
}
2022-04-11 19:32:51.222975 fix syntax errors 2 ['\n# Solution\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n', '\n\n# Solution 1\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nn = int(input()) # input\n\nprint(factorial(n) // (factorial(n // 2) ** 2)) # output\n\n\n# Solution 2\n\nn = int(input()) # input\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n']
2022-04-11 19:32:53.235401 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#Solution \n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n"
    },
    {
      "index": 1,
      "text": "\n#!/bin/python3\n#Solution \n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n"
    }
  ],
  "created": 1649719971,
  "object": "edit"
}
2022-04-11 19:32:53.235732 fix syntax errors 2 ['\n#Solution \n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n', '\n#!/bin/python3\n#Solution \n\nn = int(input())\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\nprint(factorial(n) // (factorial(n // 2) ** 2))\n']
2022-04-11 19:32:53.235773 size on output set 4
