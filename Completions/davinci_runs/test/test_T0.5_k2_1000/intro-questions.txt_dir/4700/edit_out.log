2022-04-11 22:00:00.931111 num operations 2
2022-04-11 22:00:00.931152 size on input set 1
2022-04-11 22:00:04.135719 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\nn,m = [int(i) for i in input().split()]\n\nh = [int(i) for i in input().split()]\n\na = [int(i) for i in input().split()]\n\nprint(n)\nprint(m)\nprint(h)\nprint(a)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\nn,m = [int(i) for i in input().split()]\n\nh = [int(i) for i in input().split()]\n\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\n\nprint(n)\nprint(m)\nprint(h)\nprint(b)\nprint(a)\n"
    }
  ],
  "created": 1649728801,
  "object": "edit"
}
2022-04-11 22:00:04.136056 fix spelling mistakes 2 ['\n\nimport sys\n\nn,m = [int(i) for i in input().split()]\n\nh = [int(i) for i in input().split()]\n\na = [int(i) for i in input().split()]\n\nprint(n)\nprint(m)\nprint(h)\nprint(a)\n', '\n\nimport sys\n\nn,m = [int(i) for i in input().split()]\n\nh = [int(i) for i in input().split()]\n\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\n\nprint(n)\nprint(m)\nprint(h)\nprint(b)\nprint(a)\n']
2022-04-11 22:00:04.136092 size on output set 2
2022-04-11 22:00:04.136101 size on input set 2
2022-04-11 22:00:07.200867 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nn,m = [int(i) for i in input().split()]\nh = [int(i) for i in input().split()]\n\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\n\nprint(n)\nprint(m)\nprint(h)\nprint(b)\nprint(a)\n"
    },
    {
      "index": 1,
      "text": "\n#!/usr/bin/env python3\n\nn,m = [int(i) for i in input().split()]\n\nh = [int(i) for i in input().split()]\n\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\n\nprint(n,m)\nprint(h,a,b)\n"
    }
  ],
  "created": 1649728804,
  "object": "edit"
}
2022-04-11 22:00:07.201177 fix syntax errors 2 ['\nimport sys\nn,m = [int(i) for i in input().split()]\nh = [int(i) for i in input().split()]\n\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\n\nprint(n)\nprint(m)\nprint(h)\nprint(b)\nprint(a)\n', '\n#!/usr/bin/env python3\n\nn,m = [int(i) for i in input().split()]\n\nh = [int(i) for i in input().split()]\n\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\n\nprint(n,m)\nprint(h,a,b)\n']
2022-04-11 22:00:13.767185 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nn, m = [int(i) for i in input().split()]\n\nh = [int(i) for i in input().split()]  # heights\n\na = [int(i) for i in input().split()]  # widths\n\n# print(n)\n# print(m)\n# print(h)\n# print(a)\n\n\ndef find_max_height(h, a):\n    max_height = 0\n    for i in range(m):\n        max_height = max(max_height, h[a[i]-1])\n    return max_height\n\n\nmax_height = find_max_height(h, a)\nprint(max_height)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\nn, m = [int(i) for i in input().split()]\n\nh = [int(i) for i in input().split()]\n\na = [int(i) for i in input().split()]\n\nprint(n, m, h, a)\n"
    }
  ],
  "created": 1649728807,
  "object": "edit"
}
2022-04-11 22:00:13.767494 fix syntax errors 2 ['\nimport sys\n\nn, m = [int(i) for i in input().split()]\n\nh = [int(i) for i in input().split()]  # heights\n\na = [int(i) for i in input().split()]  # widths\n\n# print(n)\n# print(m)\n# print(h)\n# print(a)\n\n\ndef find_max_height(h, a):\n    max_height = 0\n    for i in range(m):\n        max_height = max(max_height, h[a[i]-1])\n    return max_height\n\n\nmax_height = find_max_height(h, a)\nprint(max_height)\n', '\n\nimport sys\n\nn, m = [int(i) for i in input().split()]\n\nh = [int(i) for i in input().split()]\n\na = [int(i) for i in input().split()]\n\nprint(n, m, h, a)\n']
2022-04-11 22:00:13.767526 size on output set 4
2022-04-11 22:00:13.767560 num operations 2
2022-04-11 22:00:13.767569 size on input set 1
2022-04-11 22:00:30.957410 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    h = list(map(int, input().split()))\n    ab = [list(map(int, input().split())) for _ in range(m)]\n\n    # \u5404\u89b3\u6e2c\u6240\u304b\u3089\u306e\u6700\u4f4e\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    # \u6a19\u9ad8\u3092\u6c42\u3081\u308b\u305f\u3081\u306b\u3001\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u4f4e\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    # \u5404\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u4f4e\u6a19\u9ad8\u3092\u6c42\u3081\u308b\u305f\u3081\u306b\u3001\u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\n    # \u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u3001\u9053\u8def\u306e\u60c5\u5831\u3092\u4f7f\u7528\u3059\u308b\n    # \u9053\u8def\u306e\u60c5\u5831\u304b\u3089\u3001\u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\n    # \u5404\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u4f4e\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    # \u5404\u89b3\u6e2c\u6240\u304b\u3089\u306e\u6700\u4f4e\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n\n    # \u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\n    roads = [[] for _ in range(n)]\n    for a, b in ab:\n        roads[a-1].append(b-1)\n        roads[b-1].append(a-1)\n\n    # \u5404\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u4f4e\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    min_h = [0 for _ in range(n)]\n    for i in range(n):\n        for j in roads[i]:\n            if h[j] < min_h[i]:\n                min_h[i] = h[j]\n\n    # \u5404\u89b3\u6e2c\u6240\u304b\u3089\u306e\u6700\u4f4e\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    ans = 0\n    for i in range(n):\n        if h[i] > min_h[i]:\n            ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    h = list(map(int, input().split()))\n    ab = [list(map(int, input().split())) for _ in range(m)]\n\n    # \u5404\u89b3\u6e2c\u6240\u304b\u3089\u306e\u6700\u4f4e\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    # \u6a19\u9ad8\u3092\u6c42\u3081\u308b\u305f\u3081\u306b\u3001\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u4f4e\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    # \u5404\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u4f4e\u6a19\u9ad8\u3092\u6c42\u3081\u308b\u305f\u3081\u306b\u3001\u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\n    # \u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u3001\u9053\u8def\u306e\u60c5\u5831\u3092\u4f7f\u7528\u3059\u308b\n    # \u9053\u8def\u306e\u60c5\u5831\u304b\u3089\u3001\u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\n    # \u5404\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u4f4e\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    # \u5404\u89b3\u6e2c\u6240\u304b\u3089\u306e\u6700\u4f4e\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n\n    # \u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\n    roads = [[] for _ in range(n)]\n    for a, b in ab:\n        roads[a-1].append(b-1)\n        roads[b-1].append(a-1)\n\n    # \u5404\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u4f4e\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    min_h = [0 for _ in range(n)]\n    for i in range(n):\n        for j in roads[i]:\n            if h[j] < min_h[i]:\n                min_h[i] = h[j]\n\n    # \u5404\u89b3\u6e2c\u6240\u304b\u3089\u306e\u6700\u4f4e\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    ans = 0\n    for i in range(n):\n        if h[i] > min_h[i]:\n            ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649728814,
  "object": "edit"
}
2022-04-11 22:00:30.957722 fix spelling mistakes 2 ["\n\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    h = list(map(int, input().split()))\n    ab = [list(map(int, input().split())) for _ in range(m)]\n\n    # 各観測所からの最低標高を求める\n    # 標高を求めるために、観測所ごとに最低標高を求める\n    # 各観測所ごとに最低標高を求めるために、道路のリストを作成する\n    # 道路のリストを作成するために、道路の情報を使用する\n    # 道路の情報から、道路のリストを作成する\n    # 各観測所ごとに最低標高を求める\n    # 各観測所からの最低標高を求める\n\n    # 道路のリストを作成する\n    roads = [[] for _ in range(n)]\n    for a, b in ab:\n        roads[a-1].append(b-1)\n        roads[b-1].append(a-1)\n\n    # 各観測所ごとに最低標高を求める\n    min_h = [0 for _ in range(n)]\n    for i in range(n):\n        for j in roads[i]:\n            if h[j] < min_h[i]:\n                min_h[i] = h[j]\n\n    # 各観測所からの最低標高を求める\n    ans = 0\n    for i in range(n):\n        if h[i] > min_h[i]:\n            ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    h = list(map(int, input().split()))\n    ab = [list(map(int, input().split())) for _ in range(m)]\n\n    # 各観測所からの最低標高を求める\n    # 標高を求めるために、観測所ごとに最低標高を求める\n    # 各観測所ごとに最低標高を求めるために、道路のリストを作成する\n    # 道路のリストを作成するために、道路の情報を使用する\n    # 道路の情報から、道路のリストを作成する\n    # 各観測所ごとに最低標高を求める\n    # 各観測所からの最低標高を求める\n\n    # 道路のリストを作成する\n    roads = [[] for _ in range(n)]\n    for a, b in ab:\n        roads[a-1].append(b-1)\n        roads[b-1].append(a-1)\n\n    # 各観測所ごとに最低標高を求める\n    min_h = [0 for _ in range(n)]\n    for i in range(n):\n        for j in roads[i]:\n            if h[j] < min_h[i]:\n                min_h[i] = h[j]\n\n    # 各観測所からの最低標高を求める\n    ans = 0\n    for i in range(n):\n        if h[i] > min_h[i]:\n            ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 22:00:30.957954 size on output set 1
2022-04-11 22:00:30.957961 size on input set 1
2022-04-11 22:00:38.837377 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    h = list(map(int, input().split()))\n    ab = [list(map(int, input().split())) for _ in range(m)]\n\n    # \u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\n    roads = [[] for _ in range(n)]\n    for a, b in ab:\n        roads[a-1].append(b-1)\n        roads[b-1].append(a-1)\n\n    # \u5404\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u4f4e\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    min_h = [10**10 for _ in range(n)]\n    for i in range(n):\n        for j in roads[i]:\n            if h[j] <= min_h[i]:\n                min_h[i] = h[j]\n\n    # \u5404\u89b3\u6e2c\u6240\u304b\u3089\u306e\u6700\u4f4e\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    ans = 0\n    for i in range(n):\n        if h[i] > min_h[i]:\n            ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    h = list(map(int, input().split()))\n    ab = [list(map(int, input().split())) for _ in range(m)]\n\n    # \u5404\u89b3\u6e2c\u6240\u304b\u3089\u306e\u6700\u4f4e\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    # \u6a19\u9ad8\u3092\u6c42\u3081\u308b\u305f\u3081\u306b\u3001\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u4f4e\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    # \u5404\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u4f4e\u6a19\u9ad8\u3092\u6c42\u3081\u308b\u305f\u3081\u306b\u3001\u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\n    # \u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u3001\u9053\u8def\u306e\u60c5\u5831\u3092\u4f7f\u7528\u3059\u308b\n    # \u9053\u8def\u306e\u60c5\u5831\u304b\u3089\u3001\u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\n    # \u5404\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u4f4e\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    # \u5404\u89b3\u6e2c\u6240\u304b\u3089\u306e\u6700\u4f4e\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n\n    # \u9053\u8def\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\n    roads = [[] for _ in range(n)]\n    for a, b in ab:\n        roads[a-1].append(b-1)\n        roads[b-1].append(a-1)\n\n    # \u5404\u89b3\u6e2c\u6240\u3054\u3068\u306b\u6700\u4f4e\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    min_h = [0 for _ in range(n)]\n    for i in range(n):\n        for j in roads[i]:\n            if h[j] < min_h[i]:\n                min_h[i] = h[j]\n\n    # \u5404\u89b3\u6e2c\u6240\u304b\u3089\u306e\u6700\u4f4e\u6a19\u9ad8\u3092\u6c42\u3081\u308b\n    ans = 0\n    for i in range(n):\n        if h[i] > min_h[i]:\n            ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649728831,
  "object": "edit"
}
2022-04-11 22:00:38.837597 fix syntax errors 2 ["\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    h = list(map(int, input().split()))\n    ab = [list(map(int, input().split())) for _ in range(m)]\n\n    # 道路のリストを作成する\n    roads = [[] for _ in range(n)]\n    for a, b in ab:\n        roads[a-1].append(b-1)\n        roads[b-1].append(a-1)\n\n    # 各観測所ごとに最低標高を求める\n    min_h = [10**10 for _ in range(n)]\n    for i in range(n):\n        for j in roads[i]:\n            if h[j] <= min_h[i]:\n                min_h[i] = h[j]\n\n    # 各観測所からの最低標高を求める\n    ans = 0\n    for i in range(n):\n        if h[i] > min_h[i]:\n            ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    h = list(map(int, input().split()))\n    ab = [list(map(int, input().split())) for _ in range(m)]\n\n    # 各観測所からの最低標高を求める\n    # 標高を求めるために、観測所ごとに最低標高を求める\n    # 各観測所ごとに最低標高を求めるために、道路のリストを作成する\n    # 道路のリストを作成するために、道路の情報を使用する\n    # 道路の情報から、道路のリストを作成する\n    # 各観測所ごとに最低標高を求める\n    # 各観測所からの最低標高を求める\n\n    # 道路のリストを作成する\n    roads = [[] for _ in range(n)]\n    for a, b in ab:\n        roads[a-1].append(b-1)\n        roads[b-1].append(a-1)\n\n    # 各観測所ごとに最低標高を求める\n    min_h = [0 for _ in range(n)]\n    for i in range(n):\n        for j in roads[i]:\n            if h[j] < min_h[i]:\n                min_h[i] = h[j]\n\n    # 各観測所からの最低標高を求める\n    ans = 0\n    for i in range(n):\n        if h[i] > min_h[i]:\n            ans += 1\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 22:00:38.837657 size on output set 2
