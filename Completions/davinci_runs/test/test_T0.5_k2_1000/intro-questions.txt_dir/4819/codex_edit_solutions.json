["\n# Get input\nnums = []\nfor _ in range(10):\n    nums.append(int(input()))\n\n# Get distinct number\nnums = list(set([x % 42 for x in nums]))\n\n# Print output\nprint(len(nums))\n", "\ndef distinct_modulos(nums):\n    modulo_nums = [num % 42 for num in nums]\n\n    return len(set(modulo_nums))\n\ndef main():\n    nums = []\n    for _ in range(10):\n        nums.append(int(input()))\n    print(distinct_modulos(nums))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# Accepts 10 inputs and outputs the number of distinct numbers modulo 42.\ndef main():\n    # Dictionary to store the modulo values.\n    mod = []\n    # Loop through 10 inputs.\n    for i in range(10):\n        # Store the modulo of the input.\n        mod.append(int(input()) % 42)\n    # Output the number of distinct modulo values.\n    print(len(set(mod)))\n\nmain()\n", "\ndef distinct_modulo(numbers):\n    modulo_numbers = [number % 42 for number in numbers]\n\n    return len(set(modulo_numbers))\n\ndef main():\n    numbers = []\n    for _ in range(10):\n        numbers.append(int(input()))\n    print(distinct_modulo(numbers))\n\n\nif __name__ == \"__main__\":\n    main()\n", "mod = 42\nnums = []\n\nfor _ in range(10):\n    num = int(input()) % mod\n    if num not in nums:\n        nums.append(num)\n\nprint(len(nums))\n", "\nmodulo = 10\nnumbers = []\nfor i in range(5):\n    numbers.append(int(input()) % modulo)\n\nprint(len(set(numbers)))\n", "\ndef main():\n    # input numbers\n    nums = []\n    for i in range(10):\n        num = int(input())\n        num %= 42\n        nums.append(num)\n\n    # output number of distinct numbers\n    print(len(set(nums)))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# Accepts 10 numbers, outputs number of distinct numbers modulo 42.\ndef distinct():\n    # Create a list of the 10 numbers.\n    nums = []\n    for i in range(10):\n        nums.append(input())\n    # Create a list of the 10 numbers modulo 42.\n    nums_mod = []\n    for i in range(10):\n        nums_mod.append(nums[i] % 42)\n    # Create a set of the 10 numbers modulo 42.\n    nums_mod_set = set(nums_mod)\n    #Output the length of the set.\n    print(len(nums_mod_set))\n\n#Test the function.\ndistinct()\n", "#!/usr/bin/env python3\n\n# Accepts 10 inputs and outputs the number of distinct numbers modulo 42.\ndef main():\n    # Dictionary to store the modulo values.\n    mod = {}\n    # Loop through 10 inputs\n    for i in range(10):\n        # Store the modulo of the input\n        mod[i] = int(input()) % 42\n    # Output the number of distinct modulo values\n    print(len(set(mod.values())))\n\nif __name__ == \"__main__\":\n    main()\n", "\n# Accepts 10 inputs and outputs the number of distinct numbers modulo 42.\ndef main():\n    # Dictionary to store the modulo values.\n    mod = {}\n    # Loop through 10 inputs\n    for i in range(10):\n        # Store the modulo of the input\n        mod[i] = int(input()) % 42\n    # Output the number of distinct modulo values\n    print(len(set(mod.values())))\n\n\nif __name__ == \"__main__\":\n    main()\n", "# \u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u0434\u0430\u043d\u043e \u0434\u0432\u0430 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u043b\u0430 1\u2264n\u226450000 \u0438 1\u2264m\u226450000 \u2014 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0442\u0440\u0435\u0437\u043a\u043e\u0432 \u0438 \u0442\u043e\u0447\u0435\u043a \u043d\u0430 \u043f\u0440\u044f\u043c\u043e\u0439, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e.\\\n# \u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 n \u0441\u0442\u0440\u043e\u043a \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442 \u043f\u043e \u0434\u0432\u0430 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u043b\u0430 ai \u0438 bi (ai\u2264bi) \u2014 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u043a\u043e\u043d\u0446\u043e\u0432 \u043e\u0442\u0440\u0435\u0437\u043a\u043e\u0432.\\\n# \u041f\u043e\u0441\u043b\u0435\u0434\u043d\u044f\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 m \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b \u2014 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u0442\u043e\u0447\u0435\u043a.\\\n# \u0412\u0441\u0435 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u043d\u0435 \u043f\u0440\u0435\u0432\u044b\u0448\u0430\u044e\u0442 10^8 \u043f\u043e \u043c\u043e\u0434\u0443\u043b\u044e. \u0422\u043e\u0447\u043a\u0430 \u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0430\u0449\u0435\u0439 \u043e\u0442\u0440\u0435\u0437\u043a\u0443, \u0435\u0441\u043b\u0438 \u043e\u043d\u0430 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432\u043d\u0443\u0442\u0440\u0438 \u043d\u0435\u0433\u043e \u0438\u043b\u0438 \u043d\u0430 \u0433\u0440\u0430\u043d\u0438\u0446\u0435.\\\n# \u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u0442\u043e\u0447\u043a\u0438 \u0432 \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u043f\u043e\u044f\u0432\u043b\u0435\u043d\u0438\u044f \u0432\u043e \u0432\u0432\u043e\u0434\u0435 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435, \u0441\u043a\u043e\u043b\u044c\u043a\u0438\u043c \u043e\u0442\u0440\u0435\u0437\u043a\u0430\u043c \u043e\u043d\u0430 \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0438\u0442.\\\n\nmod = 42\nnums = []\n\nfor _ in range(10):\n    num = int(input()) % mod\n    if num not in nums:\n        nums.append(num)\n\nprint(len(nums))\n", "modulo = 42\nnumbers = []\nfor i in range(10):\n    numbers.append(int(input()) % modulo)\n\nprint(len(set(numbers)))\n", "\ndef distinct_modulos(nums):\n    modulo_nums = [num % 42 for num in nums]\n    return len(set(modulo_nums))\n\ndef main():\n    nums = []\n    for _ in range(10):\n        nums.append(int(input()))\n    print(distinct_modulos(nums))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # input\n    nums = []\n    for i in range(10):\n        num = int(input())\n        num %= 42\n        nums.append(num)\n\n    # output\n    print(len(set(nums)))\n\nif __name__ == \"__main__\":\n    main()\n", "\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\na.sort()\nb.sort()\n\nans = 0\nfor i in range(n):\n    ans += a[i] * b[n - i - 1]\n\nprint(ans)\n", "#!/usr/bin/env python3\n\n#Accepts 10 numbers, outputs number of distinct numbers modulo 42.\ndef distinct():\n    #Create a list of the 10 numbers.\n    nums = []\n    for i in range(10):\n        nums.append(input())\n    #Create a list of the 10 numbers modulo 42.\n    nums_mod = []\n    for i in range(10):\n        nums_mod.append(nums[i] % 42)\n    #Create a set of the 10 numbers modulo 42\n    nums_mod_set = set(nums_mod)\n    #Output the length of the set\n    print(len(nums_mod_set))\n\n#Test the function\ndistinct()\n", "\n\nnums = [int(input()) for i in range(10)]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprint(len(set([n % 42 for n in nums])))\n", "\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\na.sort()\nb.sort()\n\nans = 0\nfor i in range(n):\n    ans += a[i] * b[n - i - 1]\nprint(ans)\n", "\n# Accepts 10 inputs and outputs the number of distinct numbers modulo 42.\ndef main():\n    # Dictionary to store the modulo values.\n    mod = {}\n    # Loop through 10 inputs.\n    for i in range(10):\n        # Store the modulo of the input.\n        mod[i] = int(input()) % 42\n    # Output the number of distinct modulo values.\n    print(len(set(mod.values())))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n# Accepts 10 numbers, outputs number of distinct numbers modulo 42.\n\n\ndef distinct():\n    # Create a list of the 10 numbers.\n    nums = []\n    for i in range(10):\n        nums.append(input())\n    # Create a list of the 10 numbers modulo 42.\n    nums_mod = []\n    for i in range(10):\n        nums_mod.append(nums[i] % 42)\n    # Create a set of the 10 numbers modulo 42\n    nums_mod_set = set(nums_mod)\n    # Output the length of the set\n    print(len(nums_mod_set))\n\n# Test the function\ndistinct()\n", "\nnums = [int(input()) for _ in range(10)]\nprint(len(set([n % 42 for n in nums])))\n", "\nmodulo = 42\nnumbers = []\nfor i in range(10):\n    numbers.append(int(input()) % modulo) \n\nprint(len(set(numbers)))\n"]