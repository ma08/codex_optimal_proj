["\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5*10**8+1): # 5*10**8 is the max number of operations\n    for j in range(n):\n        if a[j] == 2*i-1:\n            a[j] = 2*i\n        elif a[j] == 2*i:\n            a[j] = 2*i-1\n\nfor i in range(n):\n    print(a[i], end=' ')\n", "def adjacent_replacement_algorithm(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacement_algorithm(n, a))\n", "\nn = int(input())\na = [int(i) for i in input().split()]\n\nfor i in range(1, 5*10**8+2):\n    for j in range(n):\n        if a[j] == 2*i-1 or a[j] == 2*i:\n            a[j] = 2*i-1 if a[j] == 2*i else 2*i\n\nfor i in range(n):\n    print(a[i], end=' ')\n", "\ndef adjacent_replacement_algorithm(n, a):\n    b = []\n    for i in range(n):\n        if a[i] % 2 == 0:\n            b.append(a[i] - 1)\n        else:\n            b.append(a[i])\n    return b\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(*adjacent_replacement_algorithm(n, a))\n"]