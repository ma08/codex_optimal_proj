2022-04-12 02:08:01.937383 num operations 2
2022-04-12 02:08:01.937413 size on input set 1
2022-04-12 02:08:05.226735 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\nn,m = map(int,sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip().lower()\ncipher = sys.stdin.readline().strip().lower()\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26)%26 + ord('a')))\n    if i >= n:\n        keyword += plain[i]\n\nprint(\"\".join(plain))\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\nn,m = map(int,sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26) % 26 + ord('a')))\n    if i >= n:\n        keyword += plain[i]\n\nprint(\"\".join(plain))\n"
    }
  ],
  "created": 1649743682,
  "object": "edit"
}
2022-04-12 02:08:05.226959 fix spelling mistakes 2 ['\n\nimport sys\n\nn,m = map(int,sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip().lower()\ncipher = sys.stdin.readline().strip().lower()\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26)%26 + ord(\'a\')))\n    if i >= n:\n        keyword += plain[i]\n\nprint("".join(plain))\n', '\n\nimport sys\n\nn,m = map(int,sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26) % 26 + ord(\'a\')))\n    if i >= n:\n        keyword += plain[i]\n\nprint("".join(plain))\n']
2022-04-12 02:08:05.226992 size on output set 2
2022-04-12 02:08:05.227002 size on input set 2
2022-04-12 02:08:09.141028 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nn, m = map(int, sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26) % 26 + ord(\"a\")))\n    if i >= n:\n        keyword += plain[i]\n\nprint(\"\".join(plain))\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nn, m = map(int, sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26) % 26 + ord('a')))\n    if i >= n:\n        keyword += plain[i]\n\nprint(\"\".join(plain))\n"
    }
  ],
  "created": 1649743685,
  "object": "edit"
}
2022-04-12 02:08:09.141168 fix syntax errors 2 ['\nimport sys\n\nn, m = map(int, sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26) % 26 + ord("a")))\n    if i >= n:\n        keyword += plain[i]\n\nprint("".join(plain))\n', '\nimport sys\n\nn, m = map(int, sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip()\ncipher = sys.stdin.readline().strip()\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26) % 26 + ord(\'a\')))\n    if i >= n:\n        keyword += plain[i]\n\nprint("".join(plain))\n']
2022-04-12 02:08:13.078287 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nn, m = map(int, sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip().lower()\ncipher = sys.stdin.readline().strip().lower()\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26) % 26 + ord('a')))\n    if i >= n:\n        keyword += plain[i]\n\nprint(\"\".join(plain))\n"
    },
    {
      "index": 1,
      "text": "import sys\n\nn,m = map(int,sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip().lower()\ncipher = sys.stdin.readline().strip().lower()\nplain = []\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26)%26 + ord('a')))\n    if i >= n:\n        keyword += plain[i]\nprint(\"\".join(plain))\n"
    }
  ],
  "created": 1649743689,
  "object": "edit"
}
2022-04-12 02:08:13.078472 fix syntax errors 2 ['\nimport sys\n\nn, m = map(int, sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip().lower()\ncipher = sys.stdin.readline().strip().lower()\n\nplain = []\n\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26) % 26 + ord(\'a\')))\n    if i >= n:\n        keyword += plain[i]\n\nprint("".join(plain))\n', 'import sys\n\nn,m = map(int,sys.stdin.readline().split())\nkeyword = sys.stdin.readline().strip().lower()\ncipher = sys.stdin.readline().strip().lower()\nplain = []\nfor i in range(m):\n    plain.append(chr((ord(cipher[i]) - ord(keyword[i]) + 26)%26 + ord(\'a\')))\n    if i >= n:\n        keyword += plain[i]\nprint("".join(plain))\n']
2022-04-12 02:08:13.078503 size on output set 4
2022-04-12 02:08:13.078523 num operations 2
2022-04-12 02:08:13.078531 size on input set 1
2022-04-12 02:08:15.128941 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#---------------------------------#\n# Code:\n\ndef decipher(n, m, last, cipher):\n\t\"\"\"\n\t\"\"\"\n\tplain = \"\"\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == '__main__':\n\tmain()\n"
    },
    {
      "index": 1,
      "text": "\n\n#---------------------------------#\n# Code:\n\ndef decipher(n, m, last, cipher):\n\t\"\"\"\n\t\"\"\"\n\tplain = \"\"\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == '__main__':\n\tmain()\n"
    }
  ],
  "created": 1649743693,
  "object": "edit"
}
2022-04-12 02:08:15.129065 fix spelling mistakes 2 ['\n\n#---------------------------------#\n# Code:\n\ndef decipher(n, m, last, cipher):\n\t"""\n\t"""\n\tplain = ""\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == \'__main__\':\n\tmain()\n', '\n\n#---------------------------------#\n# Code:\n\ndef decipher(n, m, last, cipher):\n\t"""\n\t"""\n\tplain = ""\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == \'__main__\':\n\tmain()\n']
2022-04-12 02:08:15.129083 size on output set 1
2022-04-12 02:08:15.129088 size on input set 1
2022-04-12 02:08:22.436591 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#---------------------------------#\n# Code:\n\ndef decipher(n, m, last, cipher):\n    \"\"\"\n    \"\"\"\n    plain = \"\"\n    for i in range(m):\n        if i < n:\n            plain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n        else:\n            plain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n    return plain\n\ndef main():\n    n, m = map(int, input().split())\n    last = input()\n    cipher = input()\n    print(decipher(n, m, last, cipher))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "#---------------------------------#\n# Title:\n# Author:\n# Date:\n# Description:\n# ChangeLog:\n\n#---------------------------------#\n# Code:\n\ndef decipher(n, m, last, cipher):\n\t\"\"\"\n\t\"\"\"\n\tplain = \"\"\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == '__main__':\n\tmain()\n"
    }
  ],
  "created": 1649743695,
  "object": "edit"
}
2022-04-12 02:08:22.436756 fix syntax errors 2 ['\n#---------------------------------#\n# Code:\n\ndef decipher(n, m, last, cipher):\n    """\n    """\n    plain = ""\n    for i in range(m):\n        if i < n:\n            plain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n        else:\n            plain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n    return plain\n\ndef main():\n    n, m = map(int, input().split())\n    last = input()\n    cipher = input()\n    print(decipher(n, m, last, cipher))\n\nif __name__ == \'__main__\':\n    main()\n', '#---------------------------------#\n# Title:\n# Author:\n# Date:\n# Description:\n# ChangeLog:\n\n#---------------------------------#\n# Code:\n\ndef decipher(n, m, last, cipher):\n\t"""\n\t"""\n\tplain = ""\n\tfor i in range(m):\n\t\tif i < n:\n\t\t\tplain += chr( ((ord(last[i]) - ord(cipher[i])) % 26) + 97 )\n\t\telse:\n\t\t\tplain += chr( ((ord(plain[i-n]) - ord(cipher[i])) % 26) + 97 )\n\n\treturn plain\n\ndef main():\n\tn, m = map(int, input().split())\n\tlast = input()\n\tcipher = input()\n\tprint(decipher(n, m, last, cipher))\n\nif __name__ == \'__main__\':\n\tmain()\n']
2022-04-12 02:08:22.436771 size on output set 2
2022-04-12 02:08:22.436777 num operations 2
2022-04-12 02:08:22.436780 size on input set 1
2022-04-12 02:08:24.990704 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n\nplain = \"\"\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letter of the key, mod 26\nfor i in range(m-n):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n\nprint(plain)\n"
    },
    {
      "index": 1,
      "text": "\n\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n\nplain = \"\"\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letter of the key mod 26\nfor i in range(m-n):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n\nprint(plain)\n"
    }
  ],
  "created": 1649743702,
  "object": "edit"
}
2022-04-12 02:08:24.990813 fix spelling mistakes 2 ['\n\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n\nplain = ""\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letter of the key, mod 26\nfor i in range(m-n):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n\nprint(plain)\n', '\n\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n\nplain = ""\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letter of the key mod 26\nfor i in range(m-n):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n\nprint(plain)\n']
2022-04-12 02:08:24.990825 size on output set 2
2022-04-12 02:08:24.990829 size on input set 2
2022-04-12 02:08:27.270717 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n\nplain = \"\"\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letter of the key, mod 26\nfor i in range(n, m):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n\nprint(plain)\n"
    },
    {
      "index": 1,
      "text": "\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n\nplain = \"\"\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letter of the key, mod 26\nfor i in range(m-n):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n\nprint(plain)\n"
    }
  ],
  "created": 1649743705,
  "object": "edit"
}
2022-04-12 02:08:27.270881 fix syntax errors 2 ['\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n\nplain = ""\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letter of the key, mod 26\nfor i in range(n, m):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n\nprint(plain)\n', '\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n\nplain = ""\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letter of the key, mod 26\nfor i in range(m-n):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n\nprint(plain)\n']
2022-04-12 02:08:29.190771 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n\nplain = \"\"\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letter of the key mod 26\nfor i in range(m-n):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n\nprint(plain)\n"
    },
    {
      "index": 1,
      "text": "\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n\nplain = \"\"\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letter of the key mod 26\nfor i in range(m-n):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n\nprint(plain)\n"
    }
  ],
  "created": 1649743707,
  "object": "edit"
}
2022-04-12 02:08:29.190887 fix syntax errors 2 ['\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n\nplain = ""\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letter of the key mod 26\nfor i in range(m-n):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n\nprint(plain)\n', '\nn, m = map(int, input().split())\nkey = input()\ncipher = input()\n\nplain = ""\n\n# first n letters of plaintext are the same as the key\nplain += key\n\n# next m-n letters of plaintext are the ciphertext minus the corresponding letter of the key mod 26\nfor i in range(m-n):\n    plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n\nprint(plain)\n']
2022-04-12 02:08:29.190901 size on output set 3
2022-04-12 02:08:29.190911 num operations 2
2022-04-12 02:08:29.190915 size on input set 1
2022-04-12 02:08:33.748501 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    \"\"\"\n    Main function.\n    \"\"\"\n    # Read the first line\n    line = sys.stdin.readline() \n    # Read the second line\n    line = sys.stdin.readline() \n    # Read the third line\n    line = sys.stdin.readline() \n    # Print the result\n    print(line) \n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    \"\"\"\n    Main function.\n    \"\"\"\n    # Read the first line\n    line = sys.stdin.readline()\n    # Read the second line\n    line = sys.stdin.readline()\n    # Read the third line\n    line = sys.stdin.readline()\n    # Print the result\n    print(line)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649743709,
  "object": "edit"
}
2022-04-12 02:08:33.748754 fix spelling mistakes 2 ['\n\nimport sys\n\ndef main():\n    """\n    Main function.\n    """\n    # Read the first line\n    line = sys.stdin.readline() \n    # Read the second line\n    line = sys.stdin.readline() \n    # Read the third line\n    line = sys.stdin.readline() \n    # Print the result\n    print(line) \n\nif __name__ == \'__main__\':\n    main()\n', '\n\nimport sys\n\ndef main():\n    """\n    Main function.\n    """\n    # Read the first line\n    line = sys.stdin.readline()\n    # Read the second line\n    line = sys.stdin.readline()\n    # Read the third line\n    line = sys.stdin.readline()\n    # Print the result\n    print(line)\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-12 02:08:33.748789 size on output set 2
2022-04-12 02:08:33.748799 size on input set 2
2022-04-12 02:08:37.286941 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    \"\"\"\n    Main function.\n    \"\"\"\n    # Read the first line\n    line = sys.stdin.readline().strip()\n    # Read the second line\n    line = sys.stdin.readline().strip()\n    # Read the third line\n    line = sys.stdin.readline().strip()\n    # Print the result\n    print(line)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    \"\"\"\n    Main function.\n    \"\"\"\n    # Read the first line\n    line = sys.stdin.readline()\n    # Read the second line\n    line = sys.stdin.readline()\n    # Read the third line\n    line = sys.stdin.readline()\n    # Print the result\n    print(line)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649743713,
  "object": "edit"
}
2022-04-12 02:08:37.287051 fix syntax errors 2 ['\n\nimport sys\n\ndef main():\n    """\n    Main function.\n    """\n    # Read the first line\n    line = sys.stdin.readline().strip()\n    # Read the second line\n    line = sys.stdin.readline().strip()\n    # Read the third line\n    line = sys.stdin.readline().strip()\n    # Print the result\n    print(line)\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    """\n    Main function.\n    """\n    # Read the first line\n    line = sys.stdin.readline()\n    # Read the second line\n    line = sys.stdin.readline()\n    # Read the third line\n    line = sys.stdin.readline()\n    # Print the result\n    print(line)\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-12 02:08:41.534693 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    \"\"\"\n    Main function.\n    \"\"\"\n    # Read the first line\n    line = sys.stdin.readline()\n    # Read the second line\n    line = sys.stdin.readline()\n    # Read the third line\n    line = sys.stdin.readline()\n    # Print the result\n    print(line)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    \"\"\"\n    Main function.\n    \"\"\"\n    # Read the first line\n    line = sys.stdin.readline()\n    # Read the second line\n    line = sys.stdin.readline()\n    # Read the third line\n    line = sys.stdin.readline()\n    # Print the result\n    print(line)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649743717,
  "object": "edit"
}
2022-04-12 02:08:41.534983 fix syntax errors 2 ['#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    """\n    Main function.\n    """\n    # Read the first line\n    line = sys.stdin.readline()\n    # Read the second line\n    line = sys.stdin.readline()\n    # Read the third line\n    line = sys.stdin.readline()\n    # Print the result\n    print(line)\n\nif __name__ == \'__main__\':\n    main()\n', '\n\nimport sys\n\ndef main():\n    """\n    Main function.\n    """\n    # Read the first line\n    line = sys.stdin.readline()\n    # Read the second line\n    line = sys.stdin.readline()\n    # Read the third line\n    line = sys.stdin.readline()\n    # Print the result\n    print(line)\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-12 02:08:41.535019 size on output set 4
2022-04-12 02:08:41.535056 num operations 2
2022-04-12 02:08:41.535061 size on input set 1
2022-04-12 02:08:47.718823 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip() # last n characters of plaintext\n    ciphertext = sys.stdin.readline().strip()\n    plaintext = \"\"\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_n[i]) + 26) % 26 + ord('a')) # decrypt the current character\n        if i >= n - 1:\n            last_n += plaintext[i]\n    print(plaintext)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip().lower()\n    ciphertext = sys.stdin.readline().strip()\n    plaintext = \"\"\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_n[i]) + 26) % 26 + ord('A'))\n        if i >= n - 1:\n            last_n += plaintext[i]\n    print(plaintext)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649743721,
  "object": "edit"
}
2022-04-12 02:08:47.719027 fix spelling mistakes 2 ['\n\nimport sys\n\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip() # last n characters of plaintext\n    ciphertext = sys.stdin.readline().strip()\n    plaintext = ""\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_n[i]) + 26) % 26 + ord(\'a\')) # decrypt the current character\n        if i >= n - 1:\n            last_n += plaintext[i]\n    print(plaintext)\n\nif __name__ == \'__main__\':\n    main()\n', '\n\nimport sys\n\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip().lower()\n    ciphertext = sys.stdin.readline().strip()\n    plaintext = ""\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_n[i]) + 26) % 26 + ord(\'A\'))\n        if i >= n - 1:\n            last_n += plaintext[i]\n    print(plaintext)\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-12 02:08:47.719063 size on output set 2
2022-04-12 02:08:47.719072 size on input set 2
2022-04-12 02:08:51.860803 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip().upper()\n    ciphertext = sys.stdin.readline().strip()\n    plaintext = \"\"\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_n[i]) + 26) % 26 + ord('a'))\n        if i >= n - 1:\n            last_n += plaintext[i]\n    print(plaintext)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip().upper()\n    ciphertext = sys.stdin.readline().strip()\n    plaintext = \"\"\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_n[i]) + 26) % 26 + ord('a'))\n        if i >= n - 1:\n            last_n += plaintext[i]\n    print(plaintext)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649743727,
  "object": "edit"
}
2022-04-12 02:08:51.860952 fix syntax errors 2 ['import sys\n\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip().upper()\n    ciphertext = sys.stdin.readline().strip()\n    plaintext = ""\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_n[i]) + 26) % 26 + ord(\'a\'))\n        if i >= n - 1:\n            last_n += plaintext[i]\n    print(plaintext)\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip().upper()\n    ciphertext = sys.stdin.readline().strip()\n    plaintext = ""\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_n[i]) + 26) % 26 + ord(\'a\'))\n        if i >= n - 1:\n            last_n += plaintext[i]\n    print(plaintext)\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-12 02:08:56.234355 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()  # last n characters of plaintext\n    ciphertext = sys.stdin.readline().strip()\n    plaintext = \"\"\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_n[i]) + 26) % 26 + ord('a'))  # decrypt the current character\n        if i >= n - 1:\n            last_n += plaintext[i]\n    print(plaintext)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    plaintext = \"\"\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_n[i]) + 26) % 26 + ord('a'))\n        if i >= n - 1:\n            last_n += plaintext[i]\n    print(plaintext)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649743732,
  "object": "edit"
}
2022-04-12 02:08:56.234593 fix syntax errors 2 ['\nimport sys\n\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()  # last n characters of plaintext\n    ciphertext = sys.stdin.readline().strip()\n    plaintext = ""\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_n[i]) + 26) % 26 + ord(\'a\'))  # decrypt the current character\n        if i >= n - 1:\n            last_n += plaintext[i]\n    print(plaintext)\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    n,m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    plaintext = ""\n    for i in range(m):\n        plaintext += chr((ord(ciphertext[i]) - ord(last_n[i]) + 26) % 26 + ord(\'a\'))\n        if i >= n - 1:\n            last_n += plaintext[i]\n    print(plaintext)\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-12 02:08:56.234629 size on output set 4
2022-04-12 02:08:56.234645 num operations 2
2022-04-12 02:08:56.234653 size on input set 1
2022-04-12 02:08:59.183234 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    prefix = last_n[-n:]\n    plaintext = \"\"\n    for i in range(m):\n        c = ciphertext[i]\n        if i < n:\n            p = prefix[i]\n        else:\n            p = plaintext[i-n]\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord('a'))\n    print(plaintext)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    prefix = last_n[-n:]\n    plaintext = \"\"\n    for i in range(m):\n        c = ciphertext[i]\n        if i < n:\n            p = prefix[i]\n        else:\n            p = plaintext[i-n]\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord('a'))\n    print(plaintext)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649743736,
  "object": "edit"
}
2022-04-12 02:08:59.183336 fix spelling mistakes 2 ['\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    prefix = last_n[-n:]\n    plaintext = ""\n    for i in range(m):\n        c = ciphertext[i]\n        if i < n:\n            p = prefix[i]\n        else:\n            p = plaintext[i-n]\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord(\'a\'))\n    print(plaintext)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip()\n    ciphertext = sys.stdin.readline().strip()\n    prefix = last_n[-n:]\n    plaintext = ""\n    for i in range(m):\n        c = ciphertext[i]\n        if i < n:\n            p = prefix[i]\n        else:\n            p = plaintext[i-n]\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord(\'a\'))\n    print(plaintext)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 02:08:59.183352 size on output set 1
2022-04-12 02:08:59.183356 size on input set 1
2022-04-12 02:09:03.358791 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip().lower()\n    ciphertext = sys.stdin.readline().strip().lower()\n    prefix = last_n[-n:].lower()\n    plaintext = \"\"\n    for i in range(m):\n        c = ciphertext[i]\n        if i < n:\n            p = prefix[i]\n        else:\n            p = plaintext[i-n]\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord('a'))\n    print(plaintext)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip().lower()\n    ciphertext = sys.stdin.readline().strip()\n    prefix = last_n[-n:].lower()\n    plaintext = \"\"\n    for i in range(m):\n        c = ciphertext[i].lower()\n        if i < n:\n            p = prefix[i].lower()\n        else:\n            p = plaintext[i-n]\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord('a'))\n    print(plaintext)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649743739,
  "object": "edit"
}
2022-04-12 02:09:03.358951 fix syntax errors 2 ['\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip().lower()\n    ciphertext = sys.stdin.readline().strip().lower()\n    prefix = last_n[-n:].lower()\n    plaintext = ""\n    for i in range(m):\n        c = ciphertext[i]\n        if i < n:\n            p = prefix[i]\n        else:\n            p = plaintext[i-n]\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord(\'a\'))\n    print(plaintext)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    last_n = sys.stdin.readline().strip().lower()\n    ciphertext = sys.stdin.readline().strip()\n    prefix = last_n[-n:].lower()\n    plaintext = ""\n    for i in range(m):\n        c = ciphertext[i].lower()\n        if i < n:\n            p = prefix[i].lower()\n        else:\n            p = plaintext[i-n]\n        plaintext += chr((ord(c) - ord(p) + 26) % 26 + ord(\'a\'))\n    print(plaintext)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 02:09:03.359080 size on output set 2
2022-04-12 02:09:03.359097 num operations 2
2022-04-12 02:09:03.359106 size on input set 1
2022-04-12 02:09:06.222731 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    last = input().strip()\n    cipher = input().strip()\n    key = last + cipher[:m-n-1]\n    plain = \"\"\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n    print(plain)\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    first = input()\n    cipher = input()\n    key = first + cipher[:m-n]\n    plain = \"\"\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n    print(plain)\n\nmain()\n"
    }
  ],
  "created": 1649743743,
  "object": "edit"
}
2022-04-12 02:09:06.222857 fix spelling mistakes 2 ['\n\ndef main():\n    n, m = map(int, input().split())\n    last = input().strip()\n    cipher = input().strip()\n    key = last + cipher[:m-n-1]\n    plain = ""\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n    print(plain)\n\nmain()\n', '\n\ndef main():\n    n, m = map(int, input().split())\n    first = input()\n    cipher = input()\n    key = first + cipher[:m-n]\n    plain = ""\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n    print(plain)\n\nmain()\n']
2022-04-12 02:09:06.222871 size on output set 2
2022-04-12 02:09:06.222876 size on input set 2
2022-04-12 02:09:09.586774 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, m = map(int, input().split()) # n = key length, m = cipher length\n    last = input().strip()\n    cipher = input().strip()\n    key = last + cipher[:m-n-1] # key = last n-1 letters of cipher\n    plain = \"\"\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n    print(plain)\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    last = input().strip()\n    cipher = input().strip()\n    key = last + cipher[:m - n - 1]\n    plain = \"\"\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n    print(plain)\n\n\nmain()\n"
    }
  ],
  "created": 1649743746,
  "object": "edit"
}
2022-04-12 02:09:09.586880 fix syntax errors 2 ['\n\ndef main():\n    n, m = map(int, input().split()) # n = key length, m = cipher length\n    last = input().strip()\n    cipher = input().strip()\n    key = last + cipher[:m-n-1] # key = last n-1 letters of cipher\n    plain = ""\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n    print(plain)\n\nmain()\n', '\n\ndef main():\n    n, m = map(int, input().split())\n    last = input().strip()\n    cipher = input().strip()\n    key = last + cipher[:m - n - 1]\n    plain = ""\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n    print(plain)\n\n\nmain()\n']
2022-04-12 02:09:12.138700 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n, m = map(int, input().split())\n    first = input()\n    cipher = input()\n    key = first + cipher[:m - n]\n    plain = \"\"\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n    print(plain)\n\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    first = input()\n    cipher = input()\n    key = first + cipher[:m - n]\n    plain = \"\"\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n    print(plain)\n\nmain()\n"
    }
  ],
  "created": 1649743749,
  "object": "edit"
}
2022-04-12 02:09:12.138828 fix syntax errors 2 ['\ndef main():\n    n, m = map(int, input().split())\n    first = input()\n    cipher = input()\n    key = first + cipher[:m - n]\n    plain = ""\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n    print(plain)\n\n\nmain()\n', '\n\ndef main():\n    n, m = map(int, input().split())\n    first = input()\n    cipher = input()\n    key = first + cipher[:m - n]\n    plain = ""\n    for i in range(m):\n        plain += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord(\'a\'))\n    print(plain)\n\nmain()\n']
2022-04-12 02:09:12.138842 size on output set 4
2022-04-12 02:09:12.138850 num operations 2
2022-04-12 02:09:12.138853 size on input set 1
2022-04-12 02:09:15.600292 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(1, m):\n        plain.append(chr((ord(cipher[i]) - ord(keyword[i])) % 26 + 97))\n    print(\"\".join(plain)) \n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    key = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(1, m):\n        plain.append(chr((ord(cipher[i]) - ord(key[i])) % 26 + 97))\n    print(\"\".join(plain))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649743752,
  "object": "edit"
}
2022-04-12 02:09:15.600393 fix spelling mistakes 2 ['\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(1, m):\n        plain.append(chr((ord(cipher[i]) - ord(keyword[i])) % 26 + 97))\n    print("".join(plain)) \n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    key = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(1, m):\n        plain.append(chr((ord(cipher[i]) - ord(key[i])) % 26 + 97))\n    print("".join(plain))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 02:09:15.600407 size on output set 2
2022-04-12 02:09:15.600411 size on input set 2
2022-04-12 02:09:18.770700 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    key = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(0, m):\n        plain.append(chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + 97))\n    print(\"\".join(plain))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    key = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(m):\n        plain.append(chr((ord(cipher[i]) - ord(key[i])) % 26 + 97))\n    print(\"\".join(plain))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649743755,
  "object": "edit"
}
2022-04-12 02:09:18.771090 fix syntax errors 2 ['\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    key = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(0, m):\n        plain.append(chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + 97))\n    print("".join(plain))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    key = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(m):\n        plain.append(chr((ord(cipher[i]) - ord(key[i])) % 26 + 97))\n    print("".join(plain))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 02:09:21.218092 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(0, m):\n        plain.append(chr((ord(cipher[i]) - ord(keyword[i])) % 26 + 97))\n    print(\"\".join(plain)) \n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(1, m):\n        plain.append(chr((ord(cipher[i]) - ord(keyword[i])) % 26 + 97))\n    print(\"\".join(plain))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649743758,
  "object": "edit"
}
2022-04-12 02:09:21.218214 fix syntax errors 2 ['\n\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(0, m):\n        plain.append(chr((ord(cipher[i]) - ord(keyword[i])) % 26 + 97))\n    print("".join(plain)) \n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    keyword = sys.stdin.readline().strip()\n    cipher = sys.stdin.readline().strip()\n    plain = []\n    for i in range(1, m):\n        plain.append(chr((ord(cipher[i]) - ord(keyword[i])) % 26 + 97))\n    print("".join(plain))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 02:09:21.218230 size on output set 4
