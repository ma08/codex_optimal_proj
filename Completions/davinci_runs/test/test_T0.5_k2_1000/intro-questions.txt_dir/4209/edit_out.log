2022-04-11 18:41:04.845715 num operations 2
2022-04-11 18:41:04.845741 size on input set 1
2022-04-11 18:41:13.535307 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef solve(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef solve(s):\n    dp = [[0] * len(s) for _ in range(len(s))]\n    for i in range(len(s)):\n        dp[i][i] = 1\n    for i in range(len(s) - 1, -1, -1):\n        for j in range(i + 1, len(s)):\n            if s[i] == s[j]:\n                dp[i][j] = dp[i + 1][j - 1] + 2\n            else:\n                dp[i][j] = max(dp[i + 1][j], dp[i][j - 1])\n    return dp[0][len(s) - 1]\n\ndef main():\n    s = sys.stdin.readline().strip()\n    print(solve(s))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649716865,
  "object": "edit"
}
2022-04-11 18:41:13.535737 fix spelling mistakes 2 ["\nimport sys\n\ndef solve(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef solve(s):\n    dp = [[0] * len(s) for _ in range(len(s))]\n    for i in range(len(s)):\n        dp[i][i] = 1\n    for i in range(len(s) - 1, -1, -1):\n        for j in range(i + 1, len(s)):\n            if s[i] == s[j]:\n                dp[i][j] = dp[i + 1][j - 1] + 2\n            else:\n                dp[i][j] = max(dp[i + 1][j], dp[i][j - 1])\n    return dp[0][len(s) - 1]\n\ndef main():\n    s = sys.stdin.readline().strip()\n    print(solve(s))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 18:41:13.535790 size on output set 2
2022-04-11 18:41:13.535802 size on input set 2
2022-04-11 18:41:19.726548 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef solve(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i in range(n):\n        if dp[i] == max(dp):\n            print(i - dp[i] + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef solve(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(n):\n        for j in range(i):\n            if a[j] <= a[i]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649716873,
  "object": "edit"
}
2022-04-11 18:41:19.726822 fix syntax errors 2 ["import sys\n\ndef solve(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(1, n):\n        for j in range(i - 1, -1, -1):\n            if a[i] == a[j]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i in range(n):\n        if dp[i] == max(dp):\n            print(i - dp[i] + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef solve(a):\n    n = len(a)\n    dp = [1] * n\n    for i in range(n):\n        for j in range(i):\n            if a[j] <= a[i]:\n                dp[i] = max(dp[i], dp[j] + 1)\n    return dp\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = solve(a)\n    print(max(dp))\n    for i, d in enumerate(dp):\n        if d == max(dp):\n            print(i - d + 2, i + 1)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 18:41:21.871238 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef solve(s):\n    dp = [[0] * len(s) for _ in range(len(s))]\n    for i in range(len(s)):\n        dp[i][i] = 1\n    for i in range(len(s) - 1, -1, -1):\n        for j in range(i + 1, len(s)):\n            if s[i] == s[j]:\n                dp[i][j] = dp[i + 1][j - 1] + 2\n            else:\n                dp[i][j] = max(dp[i + 1][j], dp[i][j - 1])\n    return dp[0][len(s) - 1]\n\ndef main():\n    s = sys.stdin.readline().strip()\n    print(solve(s))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef solve(s):\n    dp = [[0] * len(s) for _ in range(len(s))]\n    for i in range(len(s)):\n        dp[i][i] = 1\n    for i in range(len(s) - 1, -1, -1):\n        for j in range(i + 1, len(s)):\n            if s[i] == s[j]:\n                dp[i][j] = dp[i + 1][j - 1] + 2\n            else:\n                dp[i][j] = max(dp[i + 1][j], dp[i][j - 1])\n    return dp[0][len(s) - 1]\n\ndef main():\n    s = sys.stdin.readline().strip()\n    print(solve(s))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649716879,
  "object": "edit"
}
2022-04-11 18:41:21.871421 fix syntax errors 2 ["#!/usr/bin/env python3\n\nimport sys\n\ndef solve(s):\n    dp = [[0] * len(s) for _ in range(len(s))]\n    for i in range(len(s)):\n        dp[i][i] = 1\n    for i in range(len(s) - 1, -1, -1):\n        for j in range(i + 1, len(s)):\n            if s[i] == s[j]:\n                dp[i][j] = dp[i + 1][j - 1] + 2\n            else:\n                dp[i][j] = max(dp[i + 1][j], dp[i][j - 1])\n    return dp[0][len(s) - 1]\n\ndef main():\n    s = sys.stdin.readline().strip()\n    print(solve(s))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef solve(s):\n    dp = [[0] * len(s) for _ in range(len(s))]\n    for i in range(len(s)):\n        dp[i][i] = 1\n    for i in range(len(s) - 1, -1, -1):\n        for j in range(i + 1, len(s)):\n            if s[i] == s[j]:\n                dp[i][j] = dp[i + 1][j - 1] + 2\n            else:\n                dp[i][j] = max(dp[i + 1][j], dp[i][j - 1])\n    return dp[0][len(s) - 1]\n\ndef main():\n    s = sys.stdin.readline().strip()\n    print(solve(s))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 18:41:21.871457 size on output set 4
2022-04-11 18:41:21.871483 num operations 2
2022-04-11 18:41:21.871492 size on input set 1
2022-04-11 18:41:27.647259 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef solve(n, a):\n    \"\"\"\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3])\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1])\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    \"\"\"\n    sum_ = [0] * (n+1)\n    for i in range(1, n+1):\n        sum_[i] = sum_[i-1] + a[i-1]\n    # print(sum_)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sum_[i] - sum_[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sum_[i] - sum_[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef solve(n, a):\n    \"\"\"\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3])\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1])\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    \"\"\"\n    sums = [0] * (n+1)\n    for i in range(1, n+1):\n        sums[i] = sums[i-1] + a[i-1]\n    # print(sums)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sums[i] - sums[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n"
    }
  ],
  "created": 1649716882,
  "object": "edit"
}
2022-04-11 18:41:27.647483 fix spelling mistakes 2 ['\n\nimport sys\n\ndef solve(n, a):\n    """\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3])\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1])\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    """\n    sum_ = [0] * (n+1)\n    for i in range(1, n+1):\n        sum_[i] = sum_[i-1] + a[i-1]\n    # print(sum_)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sum_[i] - sum_[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sum_[i] - sum_[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == \'__main__\':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n', '\nimport sys\n\ndef solve(n, a):\n    """\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3])\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1])\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    """\n    sums = [0] * (n+1)\n    for i in range(1, n+1):\n        sums[i] = sums[i-1] + a[i-1]\n    # print(sums)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sums[i] - sums[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == \'__main__\':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n']
2022-04-11 18:41:27.647518 size on output set 2
2022-04-11 18:41:27.647522 size on input set 2
2022-04-11 18:41:38.339209 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef solve(n, a):\n    \"\"\"\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3])\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1])\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    \"\"\"\n    sum_ = [0] * n\n    for i in range(1, n):\n        sum_[i] = sum_[i - 1] + a[i - 1]\n    dp = [0] * n\n    dp[1] = 1\n    for i in range(2, n):\n        dp[i] = dp[i - 1]\n        for j in range(1, i + 1):\n            if sum_[i - 1] - sum_[j - 1] == 0:\n                dp[i] = max(dp[i], dp[j - 1] + 1)\n    print(dp[n - 1])\n    i = n - 1\n    while i > 0:\n        j = i - 1\n        while j > 0:\n            if sum_[i - 1] - sum_[j - 1] == 0 and dp[i] == dp[j - 1] + 1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef solve(n, a):\n    \"\"\"\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3])\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1])\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    \"\"\"\n    sum_ = [0] * (n+1)\n    for i in range(1, n+1):\n        sum_[i] = sum_[i-1] + a[i-1]\n    # print(sum_)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sum_[i] - sum_[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sum_[i] - sum_[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n"
    }
  ],
  "created": 1649716887,
  "object": "edit"
}
2022-04-11 18:41:38.339366 fix syntax errors 2 ['\nimport sys\n\ndef solve(n, a):\n    """\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3])\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1])\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    """\n    sum_ = [0] * n\n    for i in range(1, n):\n        sum_[i] = sum_[i - 1] + a[i - 1]\n    dp = [0] * n\n    dp[1] = 1\n    for i in range(2, n):\n        dp[i] = dp[i - 1]\n        for j in range(1, i + 1):\n            if sum_[i - 1] - sum_[j - 1] == 0:\n                dp[i] = max(dp[i], dp[j - 1] + 1)\n    print(dp[n - 1])\n    i = n - 1\n    while i > 0:\n        j = i - 1\n        while j > 0:\n            if sum_[i - 1] - sum_[j - 1] == 0 and dp[i] == dp[j - 1] + 1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == \'__main__\':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n', '\nimport sys\n\ndef solve(n, a):\n    """\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3])\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1])\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    """\n    sum_ = [0] * (n+1)\n    for i in range(1, n+1):\n        sum_[i] = sum_[i-1] + a[i-1]\n    # print(sum_)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sum_[i] - sum_[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sum_[i] - sum_[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == \'__main__\':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n']
2022-04-11 18:41:46.764947 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef solve(n, a):\n    \"\"\"\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3])\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1])\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    \"\"\"\n    pass\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef solve(n, a):\n    \"\"\"\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3]) #doctest: +NORMALIZE_WHITESPACE\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]) #doctest: +NORMALIZE_WHITESPACE\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1]) #doctest: +NORMALIZE_WHITESPACE\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    \"\"\"\n    sums = [0] * (n+1)\n    for i in range(1, n+1):\n        sums[i] = sums[i-1] + a[i-1]\n    # print(sums)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sums[i] - sums[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == '__main__':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n"
    }
  ],
  "created": 1649716898,
  "object": "edit"
}
2022-04-11 18:41:46.765419 fix syntax errors 2 ['\nimport sys\n\ndef solve(n, a):\n    """\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3])\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1])\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    """\n    pass\n\nif __name__ == \'__main__\':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n', '#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef solve(n, a):\n    """\n    >>> solve(7, [4, 1, 2, 2, 1, 5, 3]) #doctest: +NORMALIZE_WHITESPACE\n    3\n    7 7\n    2 3\n    4 5\n    >>> solve(11, [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]) #doctest: +NORMALIZE_WHITESPACE\n    2\n    3 4\n    1 1\n    >>> solve(4, [1, 1, 1, 1]) #doctest: +NORMALIZE_WHITESPACE\n    4\n    4 4\n    1 1\n    2 2\n    3 3\n    """\n    sums = [0] * (n+1)\n    for i in range(1, n+1):\n        sums[i] = sums[i-1] + a[i-1]\n    # print(sums)\n    dp = [0] * (n+1)\n    dp[1] = 1\n    for i in range(2, n+1):\n        dp[i] = dp[i-1]\n        for j in range(1, i):\n            if sums[i] - sums[j] == 0:\n                dp[i] = max(dp[i], dp[j]+1)\n    # print(dp)\n    print(dp[n])\n    i = n\n    while i > 0:\n        j = i-1\n        while j > 0:\n            if sums[i] - sums[j] == 0 and dp[i] == dp[j]+1:\n                print(j, i)\n                i = j\n                break\n            j -= 1\n        else:\n            print(i, i)\n            i -= 1\n\nif __name__ == \'__main__\':\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split()))\n    solve(n, a)\n']
2022-04-11 18:41:46.765482 size on output set 4
