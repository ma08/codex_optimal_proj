["#!/usr/bin/env python\n\nimport sys\n\ndef reverse_binary(n):\n    return int(bin(n)[2:][::-1], 2)\n\nif __name__ == \"__main__\":\n    n = int(sys.stdin.readline())\n    print(reverse_binary(n))\n", "\ndef reverse_bin(n):\n    return int(bin(n)[2:][::-1], 2)\n\nif __name__ == \"__main__\":\n    print(reverse_bin(int(input())))\n", "import sys\n\ndef main():\n    num = int(sys.stdin.readline().strip())\n    rev_num = 0\n    while num > 0:\n        rev_num = rev_num << 1\n        rev_num = rev_num | (num & 1)\n        num = num >> 1\n    print(rev_num)\n\nif __name__ == '__main__':\n    main()\n", "# this is a comment\n\ndef main():\n    n = int(input())\n    print(int(bin(n)[2:][::-1], 2))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef reverse_binary(number):\n    return int(str(bin(number))[2:][::-1], 2)\n\nprint(reverse_binary(int(input())))\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(int(bin(n)[2:][::-1], 2), end=\"\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    print(int(bin(n)[2:][::-1], 2))  # [2:] to remove 0b and [::-1] to reverse the string.\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef reverse_binary(n):  # reverse binary number\n    return int(bin(n)[2:][::-1], 2)  # [2:] to remove 0b\n\nprint(reverse_binary(int(input())))\n", "\n\n\ndef reverse_bin(n):\n    return int(bin(n)[2:][::-1], 2)  # [::-1] reverse the string\n\nif __name__ == \"__main__\":\n    print(reverse_bin(int(input())))\n", "# this is a comment\n\ndef main():\n    n = int(input())\n    print(int(bin(n)[2:][::-1], 2))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef reverse_binary(n):\n    return int(str(bin(n))[:1:-1], 2) \n\nprint(reverse_binary(int(input())))\n", "\n\ndef reverse_bin(n: int) -> int:\n    return int(bin(n)[2:][::-1], 2)  # [2:] to remove 0b prefix\n\nif __name__ == \"__main__\":\n    print(reverse_bin(int(input())))\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(int(bin(n)[:1:-1], 2)\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n = int(input())\n    print(int(bin(n)[2:][::-1], 2), end='')\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef reverse_binary(n):\n    return int(str(bin(n))[:1:-1], 2)\n\nprint(reverse_binary(int(input())))\n", "\n\ndef main():\n    n = int(input())\n    print(int(bin(n)[2:][::-1], 2))  # bin() returns the binary representation of an integer\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    print(int(bin(n)[2:][::-1], 2)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    print(int(bin(n)[2:][::-1], 2))  # bin() returns the binary representation of an integer\n\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python\n\nimport sys\n\ndef reverse_binary_number(n):\n    return int(bin(n)[2:][::-1], 2)\n\nif __name__ == \"__main__\":\n    n = int(sys.stdin.readline())\n    print(reverse_binary_number(n))\n", "\n\ndef reverse_binary(n): # reverse binary number\n    return int(bin(n)[2:][::-1], 2) # [2:] to remove 0b, [::-1] to reverse\n\nprint(reverse_binary(int(input())))\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(int(bin(n)[:1:-1], 2))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef reverse_binary(n):\n    return int(bin(n)[2:][::-1], 2)\n\nprint(reverse_binary(int(input())))\n"]