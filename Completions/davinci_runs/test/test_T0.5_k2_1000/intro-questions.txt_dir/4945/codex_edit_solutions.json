["\n\n#SOLUTION 2\n#inputs\na, b = map(int, input().split())\nm, sigma = map(int, input().split())\n\n#initialize max rent\nmax_rent = 0\n\n#loop through each possible x\nfor x in range(1, m//2 + 2):\n    #calculate y\n    y = m - x\n    #check if the number of outlets is satisfied\n    if(2*x + y <= sigma):\n        #calculate rent\n        rent = a*x + b*y\n        #if rent is greater than max rent\n        if(rent > max_rent):\n            #update max rent\n            max_rent = rent\n\n#output\nprint(max_rent)\n", "\n\n#inputs\na, b = map(int, input().split())\nm, sigma = map(int, input().split())\n\n#initialize max rent\nmax_rent = 0\n\n#loop through each possible x\nfor x in range(1, m//2 + 1):\n    #calculate y\n    y = m - x\n    #check if the number of outlets is satisfied\n    if(2*x + y >= sigma):\n        #calculate rent\n        rent = a*x + b*y\n        #if rent is greater than max rent\n        if(rent > max_rent):\n            #update max rent\n            max_rent = rent\n\n#output\nprint(max_rent)\n", "\na, b = map(int, input().split()) # read a and b\nm, sigma = map(float, input().split()) # read m and sigma\n\nif sigma <= 2:\n    print(a*m)\nelse:\n    y = (sigma - 2) / 3.0\n    x = m - y\n    print(a*x + b*y)\n", "\n\ndef main():\n    a, b = map(int, input().split())\n    m, sigma = map(float, input().split())\n\n    if sigma > m:\n        print(0)\n    else:\n        print(max(0, (m-sigma)*a + sigma*b/2.0))\n\nif __name__ == '__main__':\n    main()\n", "\n\n#input\na, b = map(int, input().split())\nn, sigma = map(int, input().split())\n\n#initialize max revenue\nmax_revenue = 0\n\n#loop through each possible x\nfor x in range(1, n//2 + 1):\n    #calculate y\n    y = n - x\n    #check if the number of outlets is satisfied\n    if(2*x + y >= sigma):\n        #calculate rent\n        rent = a*x + b*y\n        if(rent > max_revenue):\n            #update max revenue\n            max_revenue = rent\n\n#output\nprint(max_revenue)\n", "\n\ndef solve(a, b, m, s): # a is the cost of the first item, b is the cost of the second item, m is the number of the first item, s is the number of the second item, x is the number of the first item that will be bought, y is the number of the second item that will be bought\n    x = s - b\n    if x < 0:\n        x = 0\n    else:\n        x /= 2\n    y = m - x\n    if y < 0:\n        y = 0\n    return (a * x) + (b * y)\n\ndef main():\n    a, b = [int(x) for x in raw_input().split()]\n    m, s = [int(x) for x in raw_input().split()]\n    print solve(a, b, m, s)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    a, b = map(int, sys.stdin.readline().split())\n    m, sigma = map(int, sys.stdin.readline().split())\n\n    # let x = y, then 2x + y = sigma, 3x = sigma, x = sigma/3\n    # x + y <= m, 2x <= m, x <= m/2\n    # x >= 1, y >= 1\n    # so we have sigma/3 >= x >= m/2\n    # we want the max of 3x^2 - 2ax + a, which is the rent\n    # derivative is 6x - 2a\n    # 6x - 2a = 0, 3x = a, x = a/3\n    # 3x^2 - 2ax + a = 3(a/3)^2 - 2a(a/3) + a = a^2/3 - a^2/3 + a = a\n    # so max rent is a\n\n    print(a)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    a, b = map(float, input().split())\n    m, sigma = map(float, input().split())\n\n    if sigma > m:\n        print(0)\n    else:\n        print(max(0, (m-sigma)*a + sigma*b/2))\n\nif __name__ == '__main__':\n    main()\n", "a, b = map(int, input().split())\nm, sigma = map(float, input().split())\n\nif sigma <= 2:\n    print(a * m)\nelse:\n    y = (sigma - 2) / 3\n    x = m - y\n    print(a * x + b * y)\n", "\nimport sys\n\ndef main():\n    a, b = map(int, sys.stdin.readline().split())\n    m, sigma = map(int, sys.stdin.readline().split())\n\n    # let x = y, then 2x + y >= sigma, 3x >= sigma, x >= sigma/3.\n    # x + y <= m, 2x <= m, x <= m/2.\n    # x >= 1, y >= 1.\n    # so we have sigma/3 <= x <= m/2.\n    # we want the max of 3x^2 - 2ax + a, which is the rent.\n    # derivative is 6x - 2a.\n    # 6x - 2a = 0, 3x = a, x = a/3.\n    # 3x^2 - 2ax + a = 3(a/3)^2 - 2a(a/3) + a = a^2/3 - a^2/3 + a = a.\n    # so max rent is a.\n\n    print(a)\n\nif __name__ == \"__main__\":\n    main()\n", "a, b = map(int, input().split())\nm, sigma = map(float, input().split())\n\nif sigma <= 2:\n    print(a * m)\nelse:\n    y = (sigma - 2) / 3.0\n    x = m - y\n    print(a * x + b * y)\n", "\n\ndef solve(a, b, m, s): # a is the cost of the first item, b is the cost of the second item, m is the number of the first item, s is the number of the second item\n    x = s - b\n    if x < 0:\n        x = 0\n    else:\n        x /= 2\n    y = m - x\n    if y < 0:\n        y = 0\n    return (a * y) + (b * x)\n\ndef main():\n    a, b = [int(x) for x in raw_input().split()] # a is the cost of the first item, b is the cost of the second item\n    m, s = [int(x) for x in raw_input().split()]\n    print solve(a, b, m, s)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# Submission\n# Attempt 1 - Accepted\nimport sys\n\ndef main():\n    input = sys.stdin.read().splitlines()\n    prices = input[0].split()\n    a = int(prices[0])\n    b = int(prices[1])\n    maxes = input[1].split()\n    m = int(maxes[0])\n    sigma = int(maxes[1])\n    maxRent = 0\n    for x in range(1, m // 2 + 1):\n        y = m - x\n        if y < 1:\n            break\n        if 2 * x + y >= sigma:\n            rent = a * x + b * y\n            if rent > maxRent:\n                maxRent = rent\n    print(maxRent)\n\nmain()\n", "\n\n#input\na, b = map(int, input().split())\nm, sigma = map(int, input().split())\n\n#initialize max revenue\nmax_revenue = 0\n\n#loop through each possible x\nfor x in range(1, m//2 + 1):\n    #calculate y\n    y = m - x\n    #check if the number of outlets is satisfied\n    if(2*x + y >= sigma):\n        #calculate rent\n        rent = a*x + b*y\n        if(rent > max_revenue):\n            #update max revenue\n            max_revenue = rent\n\n#output\nprint(max_revenue)\n", "\n\na, b = map(int, input().split()) # a = 1, b = 2\nm, sum = map(int, input().split()) # m = 3, sum = 4\n\nmax_rent = 0\nfor y in range(1, m//2 + 1): # y = 1, 2\n    x = sum - 2*y\n    if x >= 1: # x = 1, 2\n        max_rent = max(max_rent, a*x + b*y)\n\nprint(max_rent)\n", "\n\n# Submissions: 1\n# Attempt 1 - Accepted\nimport sys\n\ndef main():\n    input = sys.stdin.read().splitlines()\n    prices = input[0].split()\n    a = int(prices[0])\n    b = int(prices[1])\n    maxes = input[1].split()\n    m = int(maxes[0])\n    sigma = int(maxes[1])\n    maxRent = 0\n    for x in range(1, m//2+1):\n        y = m - x\n        if y < 1:\n            break\n        if 2*x + y >= sigma:\n            rent = a*x + b*y\n            if rent > maxRent:\n                maxRent = rent\n    print(maxRent)\n\nmain()\n", "\n\ndef main():\n    a, b = map(int, input().split())\n    m, s = map(int, input().split())\n    maxR = 0\n    for x in range(1, m//2+1):\n        y = (s - 2*x)\n        if y < 1:\n            continue\n        R = a*x + b*y\n        if R > maxR:\n            maxR = R\n    print(maxR)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    a, b = map(int, sys.stdin.readline().split())\n    m, sigma = map(int, sys.stdin.readline().split())\n\n    # let x = y, then 2x + y >= sigma, 3x >= sigma, x >= sigma/3, y >= sigma/3, x + y <= m, 2x <= m, x <= m/2, x >= 1, y >= 1\n    # so we have sigma/3 <= x <= m/2, we want the max of 3x^2 - 2ax + a, derivative is 6x - 2a, 6x - 2a = 0, 3x = a, x = a/3\n    # 3x^2 - 2ax + a = 3(a/3)^2 - 2a(a/3) + a = a^2/3 - a^2/3 + a = a, so max rent is a\n\n    print(a)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# Submission\n# Attempt 1 - Accepted\nimport sys\n\n\ndef main():\n    input = sys.stdin.read().splitlines()\n    prices = input[0].split()\n    a = int(prices[0])\n    b = int(prices[1])\n    maxes = input[1].split()\n    m = int(maxes[0])\n    sigma = int(maxes[1])\n    maxRent = 0\n    for x in range(1, m//2+1):\n        y = m - x\n        if y < 1:\n            break\n        if 2*x + y >= sigma:\n            rent = a*x + b*y\n            if rent > maxRent:\n                maxRent = rent\n    print(maxRent)\n\nmain()\n", "\n\ndef solve(a, b, m, s):\n    x = s - b\n    if x < 0:\n        x = 0\n    else:\n        x /= 2\n    y = m - x\n    if y < 0:\n        y = 0\n    return (a * x) + (b * y)\n\ndef main():\n    a, b = [int(x) for x in raw_input().split()]\n    m, s = [int(x) for x in raw_input().split()]\n    print solve(a, b, m, s)\n\nif __name__ == '__main__':\n    main()\n", "\na, b = map(int, input().split())\nm, s = map(int, input().split())\n\nmax_rent = 0\nfor y in range(1, m//2 + 1):\n    x = s - 2*y\n    if x >= 1:\n        max_rent = max(max_rent, a*x + b*y)\n\nprint(max_rent)\n", "\n\ndef solve(a, b, m, s): # a is the cost of a single ticket, b is the cost of a pair of tickets, m is the number of single tickets, s is the number of pairs of tickets\n    x = s - b # x is the number of pairs of tickets that can be bought\n    if x < 0:\n        x = 0\n    else:\n        x *= 2 # x is doubled because each pair of tickets is equivalent to 2 single tickets\n    y = m - x # y is the number of single tickets that can be bought\n    if y < 0:\n        y = 0\n    return (a * x) + (b * y)\n\ndef main():\n    a, b = [int(x) for x in raw_input().split()]\n    m, s = [int(x) for x in raw_input().split()]\n    print solve(a, b, m, s)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# Submissions\n# Attempt 1 - Accepted - 0.00\nimport sys\n\ndef main():\n    input = sys.stdin.read().splitlines()\n    prices = input[0].split()\n    a = int(prices[0])\n    b = int(prices[1])\n    maxes = input[1].split()\n    m = int(maxes[0])\n    sigma = int(maxes[1])\n    maxRent = 0\n    for x in range(1, m//2 + 1):\n        y = m - x\n        if y < 1:\n            break\n        if 2*x + y >= sigma:\n            rent = a*x + b*y\n            if rent > maxRent:\n                maxRent = rent\n    print(maxRent)\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    a, b = map(int, sys.stdin.readline().split())\n    m, sigma = map(int, sys.stdin.readline().split())\n\n    # let x = y, then 2x + y >= sigma, 3x >= sigma, x >= sigma/3, y >= sigma/3 \n    # x + y <= m, 2x <= m, x <= m/2 \n    # x >= 1, y >= 1 \n    # so we have sigma/3 <= x <= m/2 \n    # we want the max of 3x^2 - 2ax + a \n    # derivative is 6x - 2a \n    # 6x - 2a = 0, 3x = a, x = a/3 \n    # 3x^2 - 2ax + a = 3(a/3)^2 - 2a(a/3) + a = a^2/3 - a^2/3 + a = a \n    # so max rent is a \n\n    print(a)\n\nif __name__ == \"__main__\":\n    main()\n"]