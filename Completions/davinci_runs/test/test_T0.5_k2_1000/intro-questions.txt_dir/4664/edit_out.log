2022-04-11 21:47:23.286018 num operations 2
2022-04-11 21:47:23.286065 size on input set 1
2022-04-11 21:47:26.103398 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Enter your code here. Read input from STDIN. Print output to STDOUT.\n\nm = int(input())\nM = set(map(int, input().split()))\nn = int(input())\nN = set(map(int, input().split()))\n\nsym_diff = M.difference(N).union(N.difference(M))\n\nfor i in sorted(sym_diff):\n    print(i)\n"
    },
    {
      "index": 1,
      "text": "\nm = int(input())\nM = set(map(int, input().split()))\nn = int(input())\nN = set(map(int, input().split()))\n\nsym_diff = M.difference(N).union(N.difference(M))\n\nfor i in sorted(sym_diff):\n    print(i)\n"
    }
  ],
  "created": 1649728043,
  "object": "edit"
}
2022-04-11 21:47:26.103674 fix spelling mistakes 2 ['\n\n# Enter your code here. Read input from STDIN. Print output to STDOUT.\n\nm = int(input())\nM = set(map(int, input().split()))\nn = int(input())\nN = set(map(int, input().split()))\n\nsym_diff = M.difference(N).union(N.difference(M))\n\nfor i in sorted(sym_diff):\n    print(i)\n', '\nm = int(input())\nM = set(map(int, input().split()))\nn = int(input())\nN = set(map(int, input().split()))\n\nsym_diff = M.difference(N).union(N.difference(M))\n\nfor i in sorted(sym_diff):\n    print(i)\n']
2022-04-11 21:47:26.103701 size on output set 2
2022-04-11 21:47:26.103706 size on input set 2
2022-04-11 21:47:28.140980 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "m = int(input())\nM = set(map(int, input().split()))\nn = int(input())\nN = set(map(int, input().split()))\n\nsym_diff = M.difference(N).union(N.difference(M))\n\nfor i in sorted(sym_diff):\n    print(i)\n"
    },
    {
      "index": 1,
      "text": "m = int(input())\nM = set(map(int, input().split()))\nn = int(input())\nN = set(map(int, input().split()))\n\nsym_diff = M.difference(N).union(N.difference(M))\n\nfor i in sorted(sym_diff):\n    print(i)\n"
    }
  ],
  "created": 1649728046,
  "object": "edit"
}
2022-04-11 21:47:28.141284 fix syntax errors 2 ['m = int(input())\nM = set(map(int, input().split()))\nn = int(input())\nN = set(map(int, input().split()))\n\nsym_diff = M.difference(N).union(N.difference(M))\n\nfor i in sorted(sym_diff):\n    print(i)\n', 'm = int(input())\nM = set(map(int, input().split()))\nn = int(input())\nN = set(map(int, input().split()))\n\nsym_diff = M.difference(N).union(N.difference(M))\n\nfor i in sorted(sym_diff):\n    print(i)\n']
2022-04-11 21:47:31.553438 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Enter your code here. Read input from STDIN. Print output to STDOUT.\n\nm = int(input())\nM = set(map(int, input().split()))\nn = int(input())\nN = set(map(int, input().split()))\n\nsym_diff = M.difference(N).union(N.difference(M))\n\nfor i in sorted(sym_diff):\n    print(i)\n"
    },
    {
      "index": 1,
      "text": "\nm = int(input())\nM = set(map(int, input().split()))\nn = int(input())\nN = set(map(int, input().split()))\n\nsym_diff = M.difference(N).union(N.difference(M))  # union() returns the union of two sets\n\nfor i in sorted(sym_diff):\n    print(i)\n"
    }
  ],
  "created": 1649728048,
  "object": "edit"
}
2022-04-11 21:47:31.553759 fix syntax errors 2 ['\n# Enter your code here. Read input from STDIN. Print output to STDOUT.\n\nm = int(input())\nM = set(map(int, input().split()))\nn = int(input())\nN = set(map(int, input().split()))\n\nsym_diff = M.difference(N).union(N.difference(M))\n\nfor i in sorted(sym_diff):\n    print(i)\n', '\nm = int(input())\nM = set(map(int, input().split()))\nn = int(input())\nN = set(map(int, input().split()))\n\nsym_diff = M.difference(N).union(N.difference(M))  # union() returns the union of two sets\n\nfor i in sorted(sym_diff):\n    print(i)\n']
2022-04-11 21:47:31.553811 size on output set 3
2022-04-11 21:47:31.553852 num operations 2
2022-04-11 21:47:31.553862 size on input set 1
2022-04-11 21:47:35.261371 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\n\nm = raw_input()\nm_list = raw_input().split()\nn = raw_input()\nn_list = raw_input().split()\n\nset1 = set(m_list)\nset2 = set(n_list)\n\nsym_diff = set1.symmetric_difference(set2)\n\nfor i in sorted(sym_diff):\n    print i\n"
    },
    {
      "index": 1,
      "text": "\n\n\nm = raw_input()\nm_list = raw_input().split()\nn = raw_input()\nn_list = raw_input().split()\n\nset1 = set(m_list)\nset2 = set(n_list)\n\nsym_diff = set1.symmetric_difference(set2)\n\nfor i in sorted(sym_diff):\n    print i\n"
    }
  ],
  "created": 1649728051,
  "object": "edit"
}
2022-04-11 21:47:35.261587 fix spelling mistakes 2 ['\n\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\n\nm = raw_input()\nm_list = raw_input().split()\nn = raw_input()\nn_list = raw_input().split()\n\nset1 = set(m_list)\nset2 = set(n_list)\n\nsym_diff = set1.symmetric_difference(set2)\n\nfor i in sorted(sym_diff):\n    print i\n', '\n\n\nm = raw_input()\nm_list = raw_input().split()\nn = raw_input()\nn_list = raw_input().split()\n\nset1 = set(m_list)\nset2 = set(n_list)\n\nsym_diff = set1.symmetric_difference(set2)\n\nfor i in sorted(sym_diff):\n    print i\n']
2022-04-11 21:47:35.261625 size on output set 2
2022-04-11 21:47:35.261637 size on input set 2
2022-04-11 21:47:37.611830 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\nm = raw_input()\nm_list = raw_input().split()\nn = raw_input()\nn_list = raw_input().split()\n\nset1 = set(m_list)\nset2 = set(n_list)\n\nsym_diff = set1.symmetric_difference(set2)\n\nfor i in sorted(sym_diff):\n    print(i)\n"
    },
    {
      "index": 1,
      "text": "m = raw_input()\nm_list = raw_input().split()\nn = raw_input()\nn_list = raw_input().split()\n\nset1 = set(m_list)\nset2 = set(n_list)\n\nsym_diff = set1.symmetric_difference(set2)\n\nfor i in sorted(sym_diff):\n    print(i)\n"
    }
  ],
  "created": 1649728055,
  "object": "edit"
}
2022-04-11 21:47:37.612094 fix syntax errors 2 ['\n\n\nm = raw_input()\nm_list = raw_input().split()\nn = raw_input()\nn_list = raw_input().split()\n\nset1 = set(m_list)\nset2 = set(n_list)\n\nsym_diff = set1.symmetric_difference(set2)\n\nfor i in sorted(sym_diff):\n    print(i)\n', 'm = raw_input()\nm_list = raw_input().split()\nn = raw_input()\nn_list = raw_input().split()\n\nset1 = set(m_list)\nset2 = set(n_list)\n\nsym_diff = set1.symmetric_difference(set2)\n\nfor i in sorted(sym_diff):\n    print(i)\n']
2022-04-11 21:47:40.501410 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Enter your code here. Read input from STDIN. Print output to STDOUT\nm = raw_input()\nm_list = raw_input().split()\nn = raw_input()\nn_list = raw_input().split()\nset1 = set(m_list)\nset2 = set(n_list)\nsym_diff = set1.symmetric_difference(set2)\n\nfor i in sorted(sym_diff):\n    print i\n"
    },
    {
      "index": 1,
      "text": "\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\nm = raw_input()\nm_list = raw_input().split()\nn = raw_input()\nn_list = raw_input().split()\nset1 = set(m_list)\nset2 = set(n_list)\nsym_diff = set1.symmetric_difference(set2)\n\nfor i in sorted(sym_diff):\n    print i\n"
    }
  ],
  "created": 1649728057,
  "object": "edit"
}
2022-04-11 21:47:40.501687 fix syntax errors 2 ['\n# Enter your code here. Read input from STDIN. Print output to STDOUT\nm = raw_input()\nm_list = raw_input().split()\nn = raw_input()\nn_list = raw_input().split()\nset1 = set(m_list)\nset2 = set(n_list)\nsym_diff = set1.symmetric_difference(set2)\n\nfor i in sorted(sym_diff):\n    print i\n', '\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n\nm = raw_input()\nm_list = raw_input().split()\nn = raw_input()\nn_list = raw_input().split()\nset1 = set(m_list)\nset2 = set(n_list)\nsym_diff = set1.symmetric_difference(set2)\n\nfor i in sorted(sym_diff):\n    print i\n']
2022-04-11 21:47:40.501727 size on output set 4
