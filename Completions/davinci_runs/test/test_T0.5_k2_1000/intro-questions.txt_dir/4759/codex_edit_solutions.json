["\nn = int(input())\na = [int(i) for i in input().split()]\nb = [i for i in a if i != 0]\nprint(sum(b)/len(b))\n", "n = int(input())\na = [int(i) for i in input().split()]\nb = [i for i in a if i != -1]\nprint(sum(b)/len(b))\n", "n = int(input())\nat_bats = list(map(int, input().split()))\n\nofficial = 0\nbases = 0\nfor i in at_bats:\n    if i != -1:\n        bases += i\n        official += 1\n\nprint(bases / official)\n", "import sys\n\nn = int(sys.stdin.readline())\nbases = list(map(int, sys.stdin.readline().split()))\n# The number of official at-bats is the number of bases that are not walks.\nofficial_at_bats = len([base for base in bases if base != -1])  # list comprehension\n# The total number of bases is the sum of all bases\ntotal_bases = sum(bases)\n# The slugging percentage is total bases divided by official at-bats\nslugging_percentage = total_bases / official_at_bats\nprint(slugging_percentage)\n", "\n\nn = int(input())\nat_bats = list(map(int, input().split())) \n#n = 3\n#at_bats = [3, 0, 2]\n\ntotal_bases = 0\ntotal_at_bats = 0\n\nfor at_bat in at_bats:\n    if at_bat != -1:\n        total_bases += at_bat\n        total_at_bats += 1\n\nprint(total_bases / total_at_bats)\n", "\nn = int(input())\nbases = [int(x) for x in input().split()]\n\n# Calculate the number of valid at bats.\nvalid_at_bats = 0.0\nfor base in bases:\n    if base != -1:\n        valid_at_bats += 1\n\n# Calculate the total bases.\ntotal_bases = 0.0\nfor base in bases:\n    if base != -1:\n        total_bases += base\n\n# Calculate and print the slugging percentage\nprint(total_bases / valid_at_bats)\n", "n = int(input())\nl = list(map(int, input().split()))\nc = 0\ns = 0\nfor i in range(n):\n\tif l[i] != -1:\n\t\ts += l[i]\n\t\tc += 1\nprint(s/c)\n", "\n\nimport sys\nimport math\n\nn = int(input())\nat_bats = list(map(int, input().split()))\n\nbases = 0\nofficial_at_bats = 0\n\nfor at_bat in at_bats:\n    if at_bat == -1:\n        continue\n    else:\n        official_at_bats += 1\n        bases += at_bat\n\nslugging_percentage = bases / official_at_bats\n\nprint(slugging_percentage)\n", "\n\nn = int(input())\nat_bats = list(map(int, input().split())) \n\ntotal_bases = 0\ntotal_at_bats = 0\n\nfor at_bat in at_bats:\n    if at_bat != -1:\n        total_bases += at_bat\n        total_at_bats += 1\n\nprint(total_bases / total_at_bats)\n", "\nimport sys\n\nn = int(sys.stdin.readline())\nbases = list(map(int, sys.stdin.readline().split()))\n\n# The number of official at bats is the number of bases that are not walks\nofficial_at_bats = len([base for base in bases if base != -1])\n\n# The total number of bases is the sum of all bases\ntotal_bases = sum(bases)\n\n# The slugging percentage is total bases divided by official at bats\nslugging_percentage = total_bases / official_at_bats\n\nprint(slugging_percentage)\n", "n = int(input())\nl = list(map(int, input().split()))\n\nc = 0\ns = 0\n\nfor i in range(n):\n    if l[i] != -1:\n        s += l[i]\n        c += 1\n\nprint(s/c)\n", "\nimport sys\n\nn = int(sys.stdin.readline())\nbases = list(map(int, sys.stdin.readline().split()))\n\n# The number of official at-bats is the number of bases that are not walks.\nofficial_at_bats = len([base for base in bases if base != -1])\n\n# The total number of bases is the sum of all bases\ntotal_bases = sum(bases)\n\n# The slugging percentage is total bases divided by official at-bats\nslugging_percentage = total_bases / official_at_bats\n\nprint(slugging_percentage)\n", "#!/usr/bin/python3\n\nimport sys\nimport math\n\nn = int(input())\nat_bats = list(map(int, input().split()))  # at_bats is a list of ints\n\nbases = 0\nofficial_at_bats = 0  # official_at_bats is the number of at_bats that are not -1\n\nfor at_bat in at_bats:\n    if at_bat == -1:  # if at_bat is -1, then it is not an official at_bat\n        continue\n    else:\n        official_at_bats += 1  # add 1 to official_at_bats\n        bases += at_bat  # add at_bat to bases\n\nslugging_percentage = bases / official_at_bats  # slugging_percentage is the number of bases divided by the number of official_at_bats\n\nprint(slugging_percentage)\n", "\nn = int(input())\nbases = [int(x) for x in input().split()]\n\n# Calculate the number of valid at bats\nvalid_at_bats = 0\nfor base in bases:\n    if base != -1:\n        valid_at_bats += 1\n\n# Calculate the total bases\ntotal_bases = 0\nfor base in bases:\n    if base != -1:\n        total_bases += base\n\n# Calculate and print the slugging percentage\nprint(total_bases / valid_at_bats)\n", "s = input()\nprint(s.replace('@', ''))\n", "\nimport sys\n\ndef slugging_percentage(at_bats):\n    total_bases = 0\n    total_at_bats = 0\n    for ab in at_bats:\n        if ab >= 0:\n            total_bases += ab\n            total_at_bats += 1\n    return total_bases / float(total_at_bats)\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    at_bats = list(map(int, sys.stdin.readline().strip().split()))\n    print(slugging_percentage(at_bats))\n\nif __name__ == '__main__':\n    main()\n", "import sys\nimport math\n\nn = int(input())\nat_bats = list(map(int, input().split()))  # at_bats is a list of ints\n\nbases = 0\nofficial_at_bats = 0  # official_at_bats is the number of at_bats that are not -1\n\nfor at_bat in at_bats:\n    if at_bat == -1:  # if at_bat is -1, then it is not an official at_bat\n        continue\n    else:\n        official_at_bats += 1  # add 1 to official_at_bats\n        bases += at_bat  # add at_bat to bases\n\nslugging_percentage = bases / official_at_bats  # slugging_percentage is the number of bases divided by the number of official_at_bats\n\nprint(slugging_percentage)\n"]