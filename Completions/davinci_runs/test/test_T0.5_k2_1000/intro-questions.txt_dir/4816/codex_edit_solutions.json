["\n\nx, y, x1, y1, x2, y2 = [int(i) for i in input().split()]\n\nif x1 <= x <= x2 and y1 <= y <= y2:\n    x = min(abs(x1 - x), abs(x2 - x))\n    y = min(abs(y1 - y), abs(y2 - y))\n    print(min(x, y))\n\nelif x1 <= x <= x2:\n    print(min(abs(y1 - y), abs(y2 - y)))\n\nelif y1 <= y <= y2:\n    print(min(abs(x1 - x), abs(x2 - x)))\n\nelse:\n    print(min(abs(x - x1) + abs(y - y1), abs(x - x2) + abs(y - y1), abs(x - x1) + abs(y - y2), abs(x - x2) + abs(y - y2)))\n", "\ndef main():\n    x, y, x1, y1, x2, y2 = map(int, input().split())\n    if x <= x1:\n        if y <= y1:\n            print(((x1 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x1 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x1 - x)\n    elif x >= x2:\n        if y <= y1:\n            print(((x2 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x2 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x - x2)\n    else:\n        if y <= y1:\n            print(y1 - y)\n        else:\n            print(y - y2)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nx, y, x1, y1, x2, y2 = [int(i) for i in input().split()]\n\nif x < x1:\n    print(x1 - x)\nelif x > x2:\n    print(x - x2)\nelif y < y1:\n    print(y1 - y)\nelse:\n    print(y - y2)\n", "\ndef main():\n    x, y, x1, y1, x2, y2 = map(int, input().split()) \n    print(min(min(y - y1, y2 - y), min(x - x1, x2 - x))) \n\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n\n# Read from stdin.\nx, y, x1, y1, x2, y2 = [int(x) for x in input().split()]\n\n# Calculate the min distance.\nmin_dist = min(abs(x - x1), abs(x - x2), abs(y - y1), abs(y - y2))\n\n# Print the result.\nprint(min_dist)\n", "\nx, y, x1, y1, x2, y2 = [int(z) for z in input().split()]\n\nprint(max(0, x1 - x, x - x2, y1 - y, y - y2))\n", "import math\n\nx, y, x1, y1, x2, y2 = map(int, input().split()) # Read input\n\ndx = min(abs(x-x1), abs(x-x2)) # Find the distances to the sides of the rectangle\ndy = min(abs(y-y1), abs(y-y2)) # Find the distances to the sides of the rectangle\n\nprint(math.sqrt(dx*dx + dy*dy)) # Print the minimum distance\n", "\nx, y, x1, y1, x2, y2 = [int(i) for i in input().split()]\n\nif x1 <= x <= x2 and y1 <= y <= y2:\n    x = min(abs(x1 - x), abs(x2 - x))\n    y = min(abs(y1 - y), abs(y2 - y))\n    print(min(x, y))\n\nelif x1 <= x <= x2:\n    print(min(abs(y1 - y), abs(y2 - y)))\n\nelif y1 <= y <= y2:\n    print(min(abs(x1 - x), abs(x2 - x)))\n\nelse:\n    print(min(abs(x - x1) + abs(y - y1), abs(x - x2) + abs(y - y1), abs(x - x1) + abs(y - y2), abs(x - x2) + abs(y - y2)))\n", "import sys\nimport math\n\ndef main():\n    x, y, x1, y1, x2, y2 = map(int, sys.stdin.readline().split())\n    min_dist = min(math.hypot(x - x1, y - y1),\n                   math.hypot(x - x1, y - y2),\n                   math.hypot(x - x2, y - y1),\n                   math.hypot(x - x2, y - y2))\n    print(min_dist)\n\nif __name__ == \"__main__\":\n    main()\n", "import math\n\nx, y, x1, y1, x2, y2 = map(int, input().split())  # Read input\n\ndx = min(abs(x-x1), abs(x-x2))  # Find the distances to the sides of the rectangle\ndy = min(abs(y-y1), abs(y-y2))  # Find the distances to the sides of the rectangle\n\n# Print the minimum distance\nprint(math.sqrt(dx*dx + dy*dy))\n", "\n# Read from stdin \nx, y, x1, y1, x2, y2 = [int(x) for x in input().split()]\n\n# Calculate the min distance \nmin_dist = min(abs(x - x1), abs(x - x2), abs(y - y1), abs(y - y2))\n\n# Print the result \nprint(min_dist)\n", "\n# Read from stdin.\nx, y, x1, y1, x2, y2 = [int(x) for x in input().split()]\n\n# Calculate the min distance.\nmin_dist = min(abs(x - x1), abs(x - x2), abs(y - y1), abs(y - y2))\n\n# Print the result.\nprint(min_dist)\n", "\nx, y, x1, y1, x2, y2 = [int(i) for i in input().split()]\n\nif x < x1 or x > x2:\n    print(x1 - x)\nelif y < y1 or y > y2:\n    print(y1 - y)\nelse:\n    print(y - y2)\n", "\nimport math\n\n# Read input\nx, y, x1, y1, x2, y2 = map(int, input().split())\n\n# Find the distances to the sides of the rectangle\ndx = min(abs(x-x1), abs(x-x2))\ndy = min(abs(y-y1), abs(y-y2))\n\n# Print the minimum distance\nprint(math.sqrt(dx*dx + dy*dy))\n", "\n\nimport math\n\n# Read input\nx, y, x1, y1, x2, y2 = map(int, input().split())\n\n# Find the distances to the sides of the rectangle\ndx = min(abs(x-x1), abs(x-x2))\ndy = min(abs(y-y1), abs(y-y2))\n\n# Print the minimum distance \nprint(math.sqrt(dx*dx + dy*dy)) \n", "# -*- coding: utf-8 -*-\n\n\ndef main():\n    x, y, x1, y1, x2, y2 = map(int, input().split())\n    if x <= x1:\n        if y <= y1:\n            print(((x1 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x1 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x1 - x)\n    elif x >= x2:\n        if y <= y1:\n            print(((x2 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x2 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x - x2)\n    else:\n        if y <= y1:\n            print(y1 - y)\n        else:\n            print(y - y2)\n\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = [int(i) for i in sys.stdin.readline().split()]\n    print(a)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport math\n\ndef main():\n    x, y, x1, y1, x2, y2 = [int(x) for x in input().split()]\n\n    # check if the goat can reach the house from the top or left side\n    if x < x1:\n        # check if the goat can reach the house from the top side\n        if y > y2:\n            distance = math.sqrt((x-x1)**2 + (y-y2)**2)\n        # check if the goat can reach the house from the left side\n        else:\n            distance = math.sqrt((x-x1)**2 + (y-y1)**2)\n    # check if the goat can reach the house from the bottom or right side\n    else:\n        # check if the goat can reach the house from the bottom side\n        if y < y1:\n            distance = math.sqrt((x-x2)**2 + (y-y1)**2)\n        # check if the goat can reach the house from the right side\n        else:\n            distance = math.sqrt((x-x2)**2 + (y-y2)**2)\n\n    print(distance)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, m = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    b = [list(map(int, input().split())) for _ in range(n)]\n    for i in range(n):\n        for j in range(m):\n            print(a[i][j] + b[i][j], end=\" \")\n        print()\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nx, y, x1, y1, x2, y2 = [int(i) for i in input().split()]  # \u0412\u0432\u043e\u0434 \u0434\u0430\u043d\u043d\u044b\u0445\n\nif x1 <= x <= x2 and y1 <= y <= y2:  # \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u043f\u043e\u043f\u0430\u0434\u0430\u043d\u0438\u0435 \u0432 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\n    x = min(abs(x1 - x), abs(x2 - x))\n    y = min(abs(y1 - y), abs(y2 - y))\n    print(min(x, y))\n\nelif x1 <= x <= x2:  # \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u043f\u043e\u043f\u0430\u0434\u0430\u043d\u0438\u0435 \u0432 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\n    print(min(abs(y1 - y), abs(y2 - y)))\n\nelif y1 <= y <= y2:\n    print(min(abs(x1 - x), abs(x2 - x)))\n\nelse:\n    print(min(abs(x - x1) + abs(y - y1), abs(x - x2) + abs(y - y1), abs(x - x1) + abs(y - y2), abs(x - x2) + abs(y - y2)))\n", "#!/usr/bin/env python3\n\n# Read from stdin \nx, y, x1, y1, x2, y2 = [int(x) for x in input().split()] \n\n# Calculate the min distance \nmin_dist = min(abs(x - x1), abs(x - x2), abs(y - y1), abs(y - y2)) \n\n# Print the result \nprint(min_dist) \n", "\n\nx, y, x1, y1, x2, y2 = map(int, input().split())\n\nif x < x1:\n    print(x1 - x)\nelif x > x2:\n    print(x - x2)\nelif y < y1:\n    print(y1 - y)\nelse:\n    print(y - y2)\n"]