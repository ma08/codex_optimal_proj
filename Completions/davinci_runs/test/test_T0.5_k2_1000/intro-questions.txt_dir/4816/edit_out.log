2022-04-12 00:40:09.064486 num operations 2
2022-04-12 00:40:09.064509 size on input set 1
2022-04-12 00:40:20.769206 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nx, y, x1, y1, x2, y2 = [int(i) for i in input().split()] #\u0412\u0432\u043e\u0434 \u0434\u0430\u043d\u043d\u044b\u0445\n\nif x1 <= x <= x2 and y1 <= y <= y2: #\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u043f\u043e\u043f\u0430\u0434\u0430\u043d\u0438\u0435 \u0432 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\n    x = min(abs(x1 - x), abs(x2 - x))\n    y = min(abs(y1 - y), abs(y2 - y))\n    print(min(x, y))\n\nelif x1 <= x <= x2: #\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u043f\u043e\u043f\u0430\u0434\u0430\u043d\u0438\u0435 \u0432 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\n    print(min(abs(y1 - y), abs(y2 - y)))\n\nelif y1 <= y <= y2:\n    print(min(abs(x1 - x), abs(x2 - x)))\n\nelse:\n    print(min(abs(x - x1) + abs(y - y1), abs(x - x2) + abs(y - y1), abs(x - x1) + abs(y - y2), abs(x - x2) + abs(y - y2)))\n"
    },
    {
      "index": 1,
      "text": "\n\nx, y, x1, y1, x2, y2 = [int(i) for i in input().split()]  # \u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u0432\u0441\u0435 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b\n\nif x1 <= x <= x2 and y1 <= y <= y2:\n    x = min(abs(x1 - x), abs(x2 - x))\n    y = min(abs(y1 - y), abs(y2 - y))\n    print(min(x, y))\n\nelif x1 <= x <= x2:\n    print(min(abs(y1 - y), abs(y2 - y)))\n\nelif y1 <= y <= y2:\n    print(min(abs(x1 - x), abs(x2 - x)))\n\nelse:\n    print(min(abs(x - x1) + abs(y - y1), abs(x - x2) + abs(y - y1), abs(x - x1) + abs(y - y2), abs(x - x2) + abs(y - y2)))\n"
    }
  ],
  "created": 1649738409,
  "object": "edit"
}
2022-04-12 00:40:20.769419 fix spelling mistakes 2 ['\n\nx, y, x1, y1, x2, y2 = [int(i) for i in input().split()] #Ввод данных\n\nif x1 <= x <= x2 and y1 <= y <= y2: #Проверка на попадание в прямоугольник\n    x = min(abs(x1 - x), abs(x2 - x))\n    y = min(abs(y1 - y), abs(y2 - y))\n    print(min(x, y))\n\nelif x1 <= x <= x2: #Проверка на попадание в прямоугольник\n    print(min(abs(y1 - y), abs(y2 - y)))\n\nelif y1 <= y <= y2:\n    print(min(abs(x1 - x), abs(x2 - x)))\n\nelse:\n    print(min(abs(x - x1) + abs(y - y1), abs(x - x2) + abs(y - y1), abs(x - x1) + abs(y - y2), abs(x - x2) + abs(y - y2)))\n', '\n\nx, y, x1, y1, x2, y2 = [int(i) for i in input().split()]  # считываем все координаты\n\nif x1 <= x <= x2 and y1 <= y <= y2:\n    x = min(abs(x1 - x), abs(x2 - x))\n    y = min(abs(y1 - y), abs(y2 - y))\n    print(min(x, y))\n\nelif x1 <= x <= x2:\n    print(min(abs(y1 - y), abs(y2 - y)))\n\nelif y1 <= y <= y2:\n    print(min(abs(x1 - x), abs(x2 - x)))\n\nelse:\n    print(min(abs(x - x1) + abs(y - y1), abs(x - x2) + abs(y - y1), abs(x - x1) + abs(y - y2), abs(x - x2) + abs(y - y2)))\n']
2022-04-12 00:40:20.769464 size on output set 2
2022-04-12 00:40:20.769471 size on input set 2
2022-04-12 00:40:29.604749 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nx, y, x1, y1, x2, y2 = [int(i) for i in input().split()]  # \u0412\u0432\u043e\u0434 \u0434\u0430\u043d\u043d\u044b\u0445\n\nif x1 <= x <= x2 and y1 <= y <= y2:  # \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u043f\u043e\u043f\u0430\u0434\u0430\u043d\u0438\u0435 \u0432 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\n    x = min(abs(x1 - x), abs(x2 - x))\n    y = min(abs(y1 - y), abs(y2 - y))\n    print(min(x, y))\n\nelif x1 <= x <= x2:  # \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u043f\u043e\u043f\u0430\u0434\u0430\u043d\u0438\u0435 \u0432 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\n    print(min(abs(y1 - y), abs(y2 - y)))\n\nelif y1 <= y <= y2:\n    print(min(abs(x1 - x), abs(x2 - x)))\n\nelse:\n    print(min(abs(x - x1) + abs(y - y1), abs(x - x2) + abs(y - y1), abs(x - x1) + abs(y - y2), abs(x - x2) + abs(y - y2)))\n"
    },
    {
      "index": 1,
      "text": "\n\nx, y, x1, y1, x2, y2 = [int(i) for i in input().split()]\n\nif x1 <= x <= x2 and y1 <= y <= y2:\n    x = min(abs(x1 - x), abs(x2 - x))\n    y = min(abs(y1 - y), abs(y2 - y))\n    print(min(x, y))\n\nelif x1 <= x <= x2:\n    print(min(abs(y1 - y), abs(y2 - y)))\n\nelif y1 <= y <= y2:\n    print(min(abs(x1 - x), abs(x2 - x)))\n\nelse:\n    print(min(abs(x - x1) + abs(y - y1), abs(x - x2) + abs(y - y1), abs(x - x1) + abs(y - y2), abs(x - x2) + abs(y - y2)))\n"
    }
  ],
  "created": 1649738421,
  "object": "edit"
}
2022-04-12 00:40:29.604962 fix syntax errors 2 ['\n\nx, y, x1, y1, x2, y2 = [int(i) for i in input().split()]  # Ввод данных\n\nif x1 <= x <= x2 and y1 <= y <= y2:  # Проверка на попадание в прямоугольник\n    x = min(abs(x1 - x), abs(x2 - x))\n    y = min(abs(y1 - y), abs(y2 - y))\n    print(min(x, y))\n\nelif x1 <= x <= x2:  # Проверка на попадание в прямоугольник\n    print(min(abs(y1 - y), abs(y2 - y)))\n\nelif y1 <= y <= y2:\n    print(min(abs(x1 - x), abs(x2 - x)))\n\nelse:\n    print(min(abs(x - x1) + abs(y - y1), abs(x - x2) + abs(y - y1), abs(x - x1) + abs(y - y2), abs(x - x2) + abs(y - y2)))\n', '\n\nx, y, x1, y1, x2, y2 = [int(i) for i in input().split()]\n\nif x1 <= x <= x2 and y1 <= y <= y2:\n    x = min(abs(x1 - x), abs(x2 - x))\n    y = min(abs(y1 - y), abs(y2 - y))\n    print(min(x, y))\n\nelif x1 <= x <= x2:\n    print(min(abs(y1 - y), abs(y2 - y)))\n\nelif y1 <= y <= y2:\n    print(min(abs(x1 - x), abs(x2 - x)))\n\nelse:\n    print(min(abs(x - x1) + abs(y - y1), abs(x - x2) + abs(y - y1), abs(x - x1) + abs(y - y2), abs(x - x2) + abs(y - y2)))\n']
2022-04-12 00:40:33.498102 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nx, y, x1, y1, x2, y2 = [int(i) for i in input().split()]\n\nif x1 <= x <= x2 and y1 <= y <= y2:\n    x = min(abs(x1 - x), abs(x2 - x))\n    y = min(abs(y1 - y), abs(y2 - y))\n    print(min(x, y))\n\nelif x1 <= x <= x2:\n    print(min(abs(y1 - y), abs(y2 - y)))\n\nelif y1 <= y <= y2:\n    print(min(abs(x1 - x), abs(x2 - x)))\n\nelse:\n    print(min(abs(x - x1) + abs(y - y1), abs(x - x2) + abs(y - y1), abs(x - x1) + abs(y - y2), abs(x - x2) + abs(y - y2)))\n"
    },
    {
      "index": 1,
      "text": "\nx, y, x1, y1, x2, y2 = [int(i) for i in input().split()]\n\nif x1 <= x <= x2 and y1 <= y <= y2:\n    x = min(abs(x1 - x), abs(x2 - x))\n    y = min(abs(y1 - y), abs(y2 - y))\n    print(min(x, y))\n\nelif x1 <= x <= x2:\n    print(min(abs(y1 - y), abs(y2 - y)))\n\nelif y1 <= y <= y2:\n    print(min(abs(x1 - x), abs(x2 - x)))\n\nelse:\n    print(min(abs(x - x1) + abs(y - y1), abs(x - x2) + abs(y - y1), abs(x - x1) + abs(y - y2), abs(x - x2) + abs(y - y2)))\n"
    }
  ],
  "created": 1649738429,
  "object": "edit"
}
2022-04-12 00:40:33.498251 fix syntax errors 2 ['\n\nx, y, x1, y1, x2, y2 = [int(i) for i in input().split()]\n\nif x1 <= x <= x2 and y1 <= y <= y2:\n    x = min(abs(x1 - x), abs(x2 - x))\n    y = min(abs(y1 - y), abs(y2 - y))\n    print(min(x, y))\n\nelif x1 <= x <= x2:\n    print(min(abs(y1 - y), abs(y2 - y)))\n\nelif y1 <= y <= y2:\n    print(min(abs(x1 - x), abs(x2 - x)))\n\nelse:\n    print(min(abs(x - x1) + abs(y - y1), abs(x - x2) + abs(y - y1), abs(x - x1) + abs(y - y2), abs(x - x2) + abs(y - y2)))\n', '\nx, y, x1, y1, x2, y2 = [int(i) for i in input().split()]\n\nif x1 <= x <= x2 and y1 <= y <= y2:\n    x = min(abs(x1 - x), abs(x2 - x))\n    y = min(abs(y1 - y), abs(y2 - y))\n    print(min(x, y))\n\nelif x1 <= x <= x2:\n    print(min(abs(y1 - y), abs(y2 - y)))\n\nelif y1 <= y <= y2:\n    print(min(abs(x1 - x), abs(x2 - x)))\n\nelse:\n    print(min(abs(x - x1) + abs(y - y1), abs(x - x2) + abs(y - y1), abs(x - x1) + abs(y - y2), abs(x - x2) + abs(y - y2)))\n']
2022-04-12 00:40:33.498276 size on output set 3
2022-04-12 00:40:33.498296 num operations 2
2022-04-12 00:40:33.498303 size on input set 1
2022-04-12 00:40:44.642153 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport math\n\ndef main():\n    x, y, x1, y1, x2, y2 = [int(x) for x in input().split()]\n\n    # check if the goat can reach the house from the top or left side.\n    if x < x1:\n        # check if the goat can reach the house from the top side.\n        if y > y2:\n            distance = math.sqrt((x-x1)**2 + (y-y2)**2)\n        # check if the goat can reach the house from the left side.\n        else:\n            distance = math.sqrt((x-x1)**2 + (y-y1)**2)\n    # check if the goat can reach the house from the bottom or right side.\n    else:\n        # check if the goat can reach the house from the bottom side\n        if y < y1:\n            distance = math.sqrt((x-x2)**2 + (y-y1)**2)\n        # check if the goat can reach the house from the right side\n        else:\n            distance = math.sqrt((x-x2)**2 + (y-y2)**2)\n\n    print(distance)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport math\n\ndef main():\n    x, y, x1, y1, x2, y2 = [int(x) for x in input().split()]\n\n    # check if the goat can reach the house from the top or left side.\n    if x < x1:\n        # check if the goat can reach the house from the top side.\n        if y > y2:\n            distance = math.sqrt((x-x1)**2 + (y-y2)**2)\n        # check if the goat can reach the house from the left side.\n        else:\n            distance = math.sqrt((x-x1)**2 + (y-y1)**2)\n    # check if the goat can reach the house from the bottom or right side.\n    else:\n        # check if the goat can reach the house from the bottom side\n        if y < y1:\n            distance = math.sqrt((x-x2)**2 + (y-y1)**2)\n        # check if the goat can reach the house from the right side\n        else:\n            distance = math.sqrt((x-x2)**2 + (y-y2)**2)\n\n    print(distance)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649738433,
  "object": "edit"
}
2022-04-12 00:40:44.642467 fix spelling mistakes 2 ["\n\nimport math\n\ndef main():\n    x, y, x1, y1, x2, y2 = [int(x) for x in input().split()]\n\n    # check if the goat can reach the house from the top or left side.\n    if x < x1:\n        # check if the goat can reach the house from the top side.\n        if y > y2:\n            distance = math.sqrt((x-x1)**2 + (y-y2)**2)\n        # check if the goat can reach the house from the left side.\n        else:\n            distance = math.sqrt((x-x1)**2 + (y-y1)**2)\n    # check if the goat can reach the house from the bottom or right side.\n    else:\n        # check if the goat can reach the house from the bottom side\n        if y < y1:\n            distance = math.sqrt((x-x2)**2 + (y-y1)**2)\n        # check if the goat can reach the house from the right side\n        else:\n            distance = math.sqrt((x-x2)**2 + (y-y2)**2)\n\n    print(distance)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport math\n\ndef main():\n    x, y, x1, y1, x2, y2 = [int(x) for x in input().split()]\n\n    # check if the goat can reach the house from the top or left side.\n    if x < x1:\n        # check if the goat can reach the house from the top side.\n        if y > y2:\n            distance = math.sqrt((x-x1)**2 + (y-y2)**2)\n        # check if the goat can reach the house from the left side.\n        else:\n            distance = math.sqrt((x-x1)**2 + (y-y1)**2)\n    # check if the goat can reach the house from the bottom or right side.\n    else:\n        # check if the goat can reach the house from the bottom side\n        if y < y1:\n            distance = math.sqrt((x-x2)**2 + (y-y1)**2)\n        # check if the goat can reach the house from the right side\n        else:\n            distance = math.sqrt((x-x2)**2 + (y-y2)**2)\n\n    print(distance)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 00:40:44.642513 size on output set 1
2022-04-12 00:40:44.642523 size on input set 1
2022-04-12 00:40:50.578912 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport math\n\ndef main():\n    x, y, x1, y1, x2, y2 = [int(x) for x in input().split()]\n\n    # check if the goat can reach the house from the top or left side\n    if x < x1:\n        # check if the goat can reach the house from the top side\n        if y > y2:\n            distance = math.sqrt((x-x1)**2 + (y-y2)**2)\n        # check if the goat can reach the house from the left side\n        else:\n            distance = math.sqrt((x-x1)**2 + (y-y1)**2)\n    # check if the goat can reach the house from the bottom or right side\n    else:\n        # check if the goat can reach the house from the bottom side\n        if y < y1:\n            distance = math.sqrt((x-x2)**2 + (y-y1)**2)\n        # check if the goat can reach the house from the right side\n        else:\n            distance = math.sqrt((x-x2)**2 + (y-y2)**2)\n\n    print(distance)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport math\n\ndef main():\n    x, y, x1, y1, x2, y2 = [int(x) for x in input().split()]\n\n    # check if the goat can reach the house from the top or left side\n    if x < x1:\n        # check if the goat can reach the house from the top side\n        if y > y2:\n            distance = math.sqrt((x-x1)**2 + (y-y2)**2)\n        # check if the goat can reach the house from the left side\n        else:\n            distance = math.sqrt((x-x1)**2 + (y-y1)**2)\n    # check if the goat can reach the house from the bottom or right side\n    else:\n        # check if the goat can reach the house from the bottom side\n        if y < y1:\n            distance = math.sqrt((x-x2)**2 + (y-y1)**2)\n        # check if the goat can reach the house from the right side\n        else:\n            distance = math.sqrt((x-x2)**2 + (y-y2)**2)\n\n    print(distance)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649738444,
  "object": "edit"
}
2022-04-12 00:40:50.579398 fix syntax errors 2 ["\n\nimport math\n\ndef main():\n    x, y, x1, y1, x2, y2 = [int(x) for x in input().split()]\n\n    # check if the goat can reach the house from the top or left side\n    if x < x1:\n        # check if the goat can reach the house from the top side\n        if y > y2:\n            distance = math.sqrt((x-x1)**2 + (y-y2)**2)\n        # check if the goat can reach the house from the left side\n        else:\n            distance = math.sqrt((x-x1)**2 + (y-y1)**2)\n    # check if the goat can reach the house from the bottom or right side\n    else:\n        # check if the goat can reach the house from the bottom side\n        if y < y1:\n            distance = math.sqrt((x-x2)**2 + (y-y1)**2)\n        # check if the goat can reach the house from the right side\n        else:\n            distance = math.sqrt((x-x2)**2 + (y-y2)**2)\n\n    print(distance)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport math\n\ndef main():\n    x, y, x1, y1, x2, y2 = [int(x) for x in input().split()]\n\n    # check if the goat can reach the house from the top or left side\n    if x < x1:\n        # check if the goat can reach the house from the top side\n        if y > y2:\n            distance = math.sqrt((x-x1)**2 + (y-y2)**2)\n        # check if the goat can reach the house from the left side\n        else:\n            distance = math.sqrt((x-x1)**2 + (y-y1)**2)\n    # check if the goat can reach the house from the bottom or right side\n    else:\n        # check if the goat can reach the house from the bottom side\n        if y < y1:\n            distance = math.sqrt((x-x2)**2 + (y-y1)**2)\n        # check if the goat can reach the house from the right side\n        else:\n            distance = math.sqrt((x-x2)**2 + (y-y2)**2)\n\n    print(distance)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 00:40:50.579492 size on output set 1
2022-04-12 00:40:50.579510 num operations 2
2022-04-12 00:40:50.579518 size on input set 1
2022-04-12 00:40:52.586749 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    x, y, x1, y1, x2, y2 = map(int, input().split())\n    print(min(min(y - y1, y2 - y), min(x - x1, x2 - x)))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    x, y, x1, y1, x2, y2 = map(int, input().split())\n    print(min(min(y - y1, y2 - y), min(x - x1, x2 - x)))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649738450,
  "object": "edit"
}
2022-04-12 00:40:52.586952 fix spelling mistakes 2 ['\ndef main():\n    x, y, x1, y1, x2, y2 = map(int, input().split())\n    print(min(min(y - y1, y2 - y), min(x - x1, x2 - x)))\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    x, y, x1, y1, x2, y2 = map(int, input().split())\n    print(min(min(y - y1, y2 - y), min(x - x1, x2 - x)))\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 00:40:52.586973 size on output set 1
2022-04-12 00:40:52.586980 size on input set 1
2022-04-12 00:40:58.018509 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    x, y, x1, y1, x2, y2 = map(int, input().split()) \n    print(min(min(y - y1, y2 - y), min(x - x1, x2 - x))) \n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n, m = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    b = [list(map(int, input().split())) for _ in range(n)]\n    for i in range(n):\n        for j in range(m):\n            print(a[i][j] + b[i][j], end=\" \")\n        print()\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649738452,
  "object": "edit"
}
2022-04-12 00:40:58.018679 fix syntax errors 2 ['\ndef main():\n    x, y, x1, y1, x2, y2 = map(int, input().split()) \n    print(min(min(y - y1, y2 - y), min(x - x1, x2 - x))) \n\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n, m = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    b = [list(map(int, input().split())) for _ in range(n)]\n    for i in range(n):\n        for j in range(m):\n            print(a[i][j] + b[i][j], end=" ")\n        print()\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 00:40:58.018765 size on output set 2
2022-04-12 00:40:58.018778 num operations 2
2022-04-12 00:40:58.018785 size on input set 1
2022-04-12 00:41:04.240885 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Read from stdin \nx, y, x1, y1, x2, y2 = [int(x) for x in input().split()] \n\n# Calculate the min distance \nmin_dist = min(abs(x - x1), abs(x - x2), abs(y - y1), abs(y - y2)) \n\n# Print the result \nprint(min_dist) \n"
    },
    {
      "index": 1,
      "text": "\n\n# Read from stdin.\nx, y, x1, y1, x2, y2 = [int(x) for x in input().split()]\n\n# Calculate the min distance.\nmin_dist = min(abs(x - x1), abs(x - x2), abs(y - y1), abs(y - y2))\n\n# Print the result.\nprint(min_dist)\n"
    }
  ],
  "created": 1649738458,
  "object": "edit"
}
2022-04-12 00:41:04.240983 fix spelling mistakes 2 ['\n\n# Read from stdin \nx, y, x1, y1, x2, y2 = [int(x) for x in input().split()] \n\n# Calculate the min distance \nmin_dist = min(abs(x - x1), abs(x - x2), abs(y - y1), abs(y - y2)) \n\n# Print the result \nprint(min_dist) \n', '\n\n# Read from stdin.\nx, y, x1, y1, x2, y2 = [int(x) for x in input().split()]\n\n# Calculate the min distance.\nmin_dist = min(abs(x - x1), abs(x - x2), abs(y - y1), abs(y - y2))\n\n# Print the result.\nprint(min_dist)\n']
2022-04-12 00:41:04.240996 size on output set 2
2022-04-12 00:41:04.240999 size on input set 2
2022-04-12 00:41:06.358266 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\n# Read from stdin.\nx, y, x1, y1, x2, y2 = [int(x) for x in input().split()]\n\n# Calculate the min distance.\nmin_dist = min(abs(x - x1), abs(x - x2), abs(y - y1), abs(y - y2))\n\n# Print the result.\nprint(min_dist)\n"
    },
    {
      "index": 1,
      "text": "\n# Read from stdin.\nx, y, x1, y1, x2, y2 = [int(x) for x in input().split()]\n\n# Calculate the min distance.\nmin_dist = min(abs(x - x1), abs(x - x2), abs(y - y1), abs(y - y2))\n\n# Print the result.\nprint(min_dist)\n"
    }
  ],
  "created": 1649738464,
  "object": "edit"
}
2022-04-12 00:41:06.358458 fix syntax errors 2 ['#!/usr/bin/env python3\n\n# Read from stdin.\nx, y, x1, y1, x2, y2 = [int(x) for x in input().split()]\n\n# Calculate the min distance.\nmin_dist = min(abs(x - x1), abs(x - x2), abs(y - y1), abs(y - y2))\n\n# Print the result.\nprint(min_dist)\n', '\n# Read from stdin.\nx, y, x1, y1, x2, y2 = [int(x) for x in input().split()]\n\n# Calculate the min distance.\nmin_dist = min(abs(x - x1), abs(x - x2), abs(y - y1), abs(y - y2))\n\n# Print the result.\nprint(min_dist)\n']
2022-04-12 00:41:11.838791 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Read from stdin \nx, y, x1, y1, x2, y2 = [int(x) for x in input().split()]\n\n# Calculate the min distance \nmin_dist = min(abs(x - x1), abs(x - x2), abs(y - y1), abs(y - y2))\n\n# Print the result \nprint(min_dist)\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\n# Read from stdin \nx, y, x1, y1, x2, y2 = [int(x) for x in input().split()] \n\n# Calculate the min distance \nmin_dist = min(abs(x - x1), abs(x - x2), abs(y - y1), abs(y - y2)) \n\n# Print the result \nprint(min_dist) \n"
    }
  ],
  "created": 1649738466,
  "object": "edit"
}
2022-04-12 00:41:11.838910 fix syntax errors 2 ['\n# Read from stdin \nx, y, x1, y1, x2, y2 = [int(x) for x in input().split()]\n\n# Calculate the min distance \nmin_dist = min(abs(x - x1), abs(x - x2), abs(y - y1), abs(y - y2))\n\n# Print the result \nprint(min_dist)\n', '#!/usr/bin/env python3\n\n# Read from stdin \nx, y, x1, y1, x2, y2 = [int(x) for x in input().split()] \n\n# Calculate the min distance \nmin_dist = min(abs(x - x1), abs(x - x2), abs(y - y1), abs(y - y2)) \n\n# Print the result \nprint(min_dist) \n']
2022-04-12 00:41:11.838924 size on output set 4
2022-04-12 00:41:11.838938 num operations 2
2022-04-12 00:41:11.838941 size on input set 1
2022-04-12 00:41:14.153505 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    x, y, x1, y1, x2, y2 = map(float, input().split())\n    if x <= x1:\n        if y <= y1:\n            print(((x1 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x1 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x1 - x)\n    elif x >= x2:\n        if y <= y1:\n            print(((x2 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x2 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x - x2)\n    else:\n        if y <= y1:\n            print(y1 - y)\n        else:\n            print(y - y2)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "# -*- coding: utf-8 -*-\n\n\ndef main():\n    x, y, x1, y1, x2, y2 = map(float, input().split())\n    if x <= x1:\n        if y <= y1:\n            print(((x1 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x1 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x1 - x)\n    elif x >= x2:\n        if y <= y1:\n            print(((x2 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x2 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x - x2)\n    else:\n        if y <= y1:\n            print(y1 - y)\n        else:\n            print(y - y2)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649738472,
  "object": "edit"
}
2022-04-12 00:41:14.153613 fix spelling mistakes 2 ['\ndef main():\n    x, y, x1, y1, x2, y2 = map(float, input().split())\n    if x <= x1:\n        if y <= y1:\n            print(((x1 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x1 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x1 - x)\n    elif x >= x2:\n        if y <= y1:\n            print(((x2 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x2 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x - x2)\n    else:\n        if y <= y1:\n            print(y1 - y)\n        else:\n            print(y - y2)\n\n\nif __name__ == "__main__":\n    main()\n', '# -*- coding: utf-8 -*-\n\n\ndef main():\n    x, y, x1, y1, x2, y2 = map(float, input().split())\n    if x <= x1:\n        if y <= y1:\n            print(((x1 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x1 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x1 - x)\n    elif x >= x2:\n        if y <= y1:\n            print(((x2 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x2 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x - x2)\n    else:\n        if y <= y1:\n            print(y1 - y)\n        else:\n            print(y - y2)\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 00:41:14.153685 size on output set 2
2022-04-12 00:41:14.153690 size on input set 2
2022-04-12 00:41:17.106776 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    x, y, x1, y1, x2, y2 = map(int, input().split())\n    if x <= x1:\n        if y <= y1:\n            print(((x1 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x1 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x1 - x)\n    elif x >= x2:\n        if y <= y1:\n            print(((x2 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x2 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x - x2)\n    else:\n        if y <= y1:\n            print(y1 - y)\n        else:\n            print(y - y2)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    x, y, x1, y1, x2, y2 = map(int, input().split())\n    if x <= x1:\n        if y <= y1:\n            print(((x1 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x1 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x1 - x)\n    elif x >= x2:\n        if y <= y1:\n            print(((x2 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x2 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x - x2)\n    else:\n        if y <= y1:\n            print(y1 - y)\n        else:\n            print(y - y2)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649738474,
  "object": "edit"
}
2022-04-12 00:41:17.107048 fix syntax errors 2 ['\ndef main():\n    x, y, x1, y1, x2, y2 = map(int, input().split())\n    if x <= x1:\n        if y <= y1:\n            print(((x1 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x1 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x1 - x)\n    elif x >= x2:\n        if y <= y1:\n            print(((x2 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x2 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x - x2)\n    else:\n        if y <= y1:\n            print(y1 - y)\n        else:\n            print(y - y2)\n\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    x, y, x1, y1, x2, y2 = map(int, input().split())\n    if x <= x1:\n        if y <= y1:\n            print(((x1 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x1 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x1 - x)\n    elif x >= x2:\n        if y <= y1:\n            print(((x2 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x2 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x - x2)\n    else:\n        if y <= y1:\n            print(y1 - y)\n        else:\n            print(y - y2)\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 00:41:20.070533 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# -*- coding: utf-8 -*-\n\n\ndef main():\n    x, y, x1, y1, x2, y2 = map(int, input().split())\n    if x <= x1:\n        if y <= y1:\n            print(((x1 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x1 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x1 - x)\n    elif x >= x2:\n        if y <= y1:\n            print(((x2 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x2 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x - x2)\n    else:\n        if y <= y1:\n            print(y1 - y)\n        else:\n            print(y - y2)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "# -*- coding: utf-8 -*-\n\n\ndef main():\n    x, y, x1, y1, x2, y2 = map(int, input().split())\n    if x <= x1:\n        if y <= y1:\n            print(((x1 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x1 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x1 - x)\n    elif x >= x2:\n        if y <= y1:\n            print(((x2 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x2 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x - x2)\n    else:\n        if y <= y1:\n            print(y1 - y)\n        else:\n            print(y - y2)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649738477,
  "object": "edit"
}
2022-04-12 00:41:20.070785 fix syntax errors 2 ['# -*- coding: utf-8 -*-\n\n\ndef main():\n    x, y, x1, y1, x2, y2 = map(int, input().split())\n    if x <= x1:\n        if y <= y1:\n            print(((x1 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x1 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x1 - x)\n    elif x >= x2:\n        if y <= y1:\n            print(((x2 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x2 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x - x2)\n    else:\n        if y <= y1:\n            print(y1 - y)\n        else:\n            print(y - y2)\n\n\nif __name__ == "__main__":\n    main()\n', '# -*- coding: utf-8 -*-\n\n\ndef main():\n    x, y, x1, y1, x2, y2 = map(int, input().split())\n    if x <= x1:\n        if y <= y1:\n            print(((x1 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x1 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x1 - x)\n    elif x >= x2:\n        if y <= y1:\n            print(((x2 - x) ** 2 + (y1 - y) ** 2) ** 0.5)\n        elif y >= y2:\n            print(((x2 - x) ** 2 + (y2 - y) ** 2) ** 0.5)\n        else:\n            print(x - x2)\n    else:\n        if y <= y1:\n            print(y1 - y)\n        else:\n            print(y - y2)\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 00:41:20.070834 size on output set 2
2022-04-12 00:41:20.070845 num operations 2
2022-04-12 00:41:20.070853 size on input set 1
2022-04-12 00:41:22.062760 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport math\n\ndef main():\n    x, y, x1, y1, x2, y2 = map(int, sys.stdin.readline().split())\n    min_dist = min(math.hypot(x - x1, y - y1), math.hypot(x - x1, y - y2),\n                   math.hypot(x - x2, y - y1), math.hypot(x - x2, y - y2))\n    print(min_dist)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport math\n\ndef main():\n    x, y, x1, y1, x2, y2 = map(int, sys.stdin.readline().split())\n    min_dist = min(math.hypot(x - x1, y - y1), math.hypot(x - x1, y - y2),\n                   math.hypot(x - x2, y - y1), math.hypot(x - x2, y - y2))\n    print(min_dist)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649738480,
  "object": "edit"
}
2022-04-12 00:41:22.063129 fix spelling mistakes 2 ['\nimport sys\nimport math\n\ndef main():\n    x, y, x1, y1, x2, y2 = map(int, sys.stdin.readline().split())\n    min_dist = min(math.hypot(x - x1, y - y1), math.hypot(x - x1, y - y2),\n                   math.hypot(x - x2, y - y1), math.hypot(x - x2, y - y2))\n    print(min_dist)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\nimport math\n\ndef main():\n    x, y, x1, y1, x2, y2 = map(int, sys.stdin.readline().split())\n    min_dist = min(math.hypot(x - x1, y - y1), math.hypot(x - x1, y - y2),\n                   math.hypot(x - x2, y - y1), math.hypot(x - x2, y - y2))\n    print(min_dist)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 00:41:22.063181 size on output set 1
2022-04-12 00:41:22.063191 size on input set 1
2022-04-12 00:41:27.416464 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = [int(i) for i in sys.stdin.readline().split()]\n    print(a)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\nimport math\n\ndef main():\n    x, y, x1, y1, x2, y2 = map(int, sys.stdin.readline().split())\n    min_dist = min(math.hypot(x - x1, y - y1),\n                   math.hypot(x - x1, y - y2),\n                   math.hypot(x - x2, y - y1),\n                   math.hypot(x - x2, y - y2))\n    print(min_dist)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649738482,
  "object": "edit"
}
2022-04-12 00:41:27.416681 fix syntax errors 2 ['import sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = [int(i) for i in sys.stdin.readline().split()]\n    print(a)\n\nif __name__ == "__main__":\n    main()\n', 'import sys\nimport math\n\ndef main():\n    x, y, x1, y1, x2, y2 = map(int, sys.stdin.readline().split())\n    min_dist = min(math.hypot(x - x1, y - y1),\n                   math.hypot(x - x1, y - y2),\n                   math.hypot(x - x2, y - y1),\n                   math.hypot(x - x2, y - y2))\n    print(min_dist)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 00:41:27.416715 size on output set 2
2022-04-12 00:41:27.416727 num operations 2
2022-04-12 00:41:27.416734 size on input set 1
2022-04-12 00:41:30.474773 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nx, y, x1, y1, x2, y2 = [int(z) for z in input().split()]\n\nif x < x1:\n    print(x1 - x)\nelif x > x2:\n    print(x - x2)\nelif y < y1:\n    print(y1 - y)\nelse:\n    print(y - y2)\n"
    },
    {
      "index": 1,
      "text": "\n\nx, y, x1, y1, x2, y2 = [int(i) for i in input().split()]\n\nif x < x1:\n    print(x1 - x)\nelif x > x2:\n    print(x - x2)\nelif y < y1:\n    print(y1 - y)\nelse:\n    print(y - y2)\n"
    }
  ],
  "created": 1649738487,
  "object": "edit"
}
2022-04-12 00:41:30.475056 fix spelling mistakes 2 ['\n\nx, y, x1, y1, x2, y2 = [int(z) for z in input().split()]\n\nif x < x1:\n    print(x1 - x)\nelif x > x2:\n    print(x - x2)\nelif y < y1:\n    print(y1 - y)\nelse:\n    print(y - y2)\n', '\n\nx, y, x1, y1, x2, y2 = [int(i) for i in input().split()]\n\nif x < x1:\n    print(x1 - x)\nelif x > x2:\n    print(x - x2)\nelif y < y1:\n    print(y1 - y)\nelse:\n    print(y - y2)\n']
2022-04-12 00:41:30.475084 size on output set 2
2022-04-12 00:41:30.475093 size on input set 2
2022-04-12 00:41:34.626745 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nx, y, x1, y1, x2, y2 = [int(z) for z in input().split()]\n\nprint(max(0, x1 - x, x - x2, y1 - y, y - y2))\n"
    },
    {
      "index": 1,
      "text": "\n\nx, y, x1, y1, x2, y2 = map(int, input().split())\n\nif x < x1:\n    print(x1 - x)\nelif x > x2:\n    print(x - x2)\nelif y < y1:\n    print(y1 - y)\nelse:\n    print(y - y2)\n"
    }
  ],
  "created": 1649738490,
  "object": "edit"
}
2022-04-12 00:41:34.626932 fix syntax errors 2 ['\nx, y, x1, y1, x2, y2 = [int(z) for z in input().split()]\n\nprint(max(0, x1 - x, x - x2, y1 - y, y - y2))\n', '\n\nx, y, x1, y1, x2, y2 = map(int, input().split())\n\nif x < x1:\n    print(x1 - x)\nelif x > x2:\n    print(x - x2)\nelif y < y1:\n    print(y1 - y)\nelse:\n    print(y - y2)\n']
2022-04-12 00:41:39.728337 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nx, y, x1, y1, x2, y2 = [int(i) for i in input().split()]\n\nif x < x1 or x > x2:\n    print(x1 - x)\nelif y < y1 or y > y2:\n    print(y1 - y)\nelse:\n    print(y - y2)\n"
    },
    {
      "index": 1,
      "text": "\nx, y, x1, y1, x2, y2 = [int(i) for i in input().split()]\n\nif x < x1:\n    print(x1 - x)\nelif x > x2:\n    print(x - x2)\nelif y < y1:\n    print(y1 - y)\nelse:\n    print(y - y2)\n"
    }
  ],
  "created": 1649738494,
  "object": "edit"
}
2022-04-12 00:41:39.728512 fix syntax errors 2 ['\nx, y, x1, y1, x2, y2 = [int(i) for i in input().split()]\n\nif x < x1 or x > x2:\n    print(x1 - x)\nelif y < y1 or y > y2:\n    print(y1 - y)\nelse:\n    print(y - y2)\n', '\nx, y, x1, y1, x2, y2 = [int(i) for i in input().split()]\n\nif x < x1:\n    print(x1 - x)\nelif x > x2:\n    print(x - x2)\nelif y < y1:\n    print(y1 - y)\nelse:\n    print(y - y2)\n']
2022-04-12 00:41:39.728539 size on output set 4
2022-04-12 00:41:39.728547 num operations 2
2022-04-12 00:41:39.728550 size on input set 1
2022-04-12 00:41:46.378789 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport math\n\n# Read input\nx, y, x1, y1, x2, y2 = map(int, input().split())\n\n# Find the distances to the sides of the rectangle\ndx = min(abs(x-x1), abs(x-x2))\ndy = min(abs(y-y1), abs(y-y2))\n\n# Print the minimum distance\nprint(math.sqrt(dx*dx + dy*dy))\n"
    },
    {
      "index": 1,
      "text": "\n\nimport math\n\n# Read input \nx, y, x1, y1, x2, y2 = map(int, input().split()) \n\n# Find the distances to the sides of the rectangle \ndx = min(abs(x-x1), abs(x-x2)) \ndy = min(abs(y-y1), abs(y-y2)) \n\n# Print the minimum distance \nprint(math.sqrt(dx*dx + dy*dy)) \n"
    }
  ],
  "created": 1649738499,
  "object": "edit"
}
2022-04-12 00:41:46.379140 fix spelling mistakes 2 ['\nimport math\n\n# Read input\nx, y, x1, y1, x2, y2 = map(int, input().split())\n\n# Find the distances to the sides of the rectangle\ndx = min(abs(x-x1), abs(x-x2))\ndy = min(abs(y-y1), abs(y-y2))\n\n# Print the minimum distance\nprint(math.sqrt(dx*dx + dy*dy))\n', '\n\nimport math\n\n# Read input \nx, y, x1, y1, x2, y2 = map(int, input().split()) \n\n# Find the distances to the sides of the rectangle \ndx = min(abs(x-x1), abs(x-x2)) \ndy = min(abs(y-y1), abs(y-y2)) \n\n# Print the minimum distance \nprint(math.sqrt(dx*dx + dy*dy)) \n']
2022-04-12 00:41:46.379196 size on output set 2
2022-04-12 00:41:46.379201 size on input set 2
2022-04-12 00:41:56.973804 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport math\n\n# Read input\nx, y, x1, y1, x2, y2 = map(int, input().split())\n\n# Find the distances to the sides of the rectangle\ndx = min(abs(x-x1), abs(x-x2))\ndy = min(abs(y-y1), abs(y-y2))\n\n# Print the minimum distance \nprint(math.sqrt(dx*dx + dy*dy)) \n"
    },
    {
      "index": 1,
      "text": "\nimport math\n\n# Read input\nx, y, x1, y1, x2, y2 = map(int, input().split())\n\n# Find the distances to the sides of the rectangle\ndx = min(abs(x-x1), abs(x-x2))\ndy = min(abs(y-y1), abs(y-y2))\n\n# Print the minimum distance\nprint(math.sqrt(dx*dx + dy*dy))\n"
    }
  ],
  "created": 1649738506,
  "object": "edit"
}
2022-04-12 00:41:56.974191 fix syntax errors 2 ['\n\nimport math\n\n# Read input\nx, y, x1, y1, x2, y2 = map(int, input().split())\n\n# Find the distances to the sides of the rectangle\ndx = min(abs(x-x1), abs(x-x2))\ndy = min(abs(y-y1), abs(y-y2))\n\n# Print the minimum distance \nprint(math.sqrt(dx*dx + dy*dy)) \n', '\nimport math\n\n# Read input\nx, y, x1, y1, x2, y2 = map(int, input().split())\n\n# Find the distances to the sides of the rectangle\ndx = min(abs(x-x1), abs(x-x2))\ndy = min(abs(y-y1), abs(y-y2))\n\n# Print the minimum distance\nprint(math.sqrt(dx*dx + dy*dy))\n']
2022-04-12 00:42:07.910733 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import math\n\nx, y, x1, y1, x2, y2 = map(int, input().split()) # Read input\n\ndx = min(abs(x-x1), abs(x-x2)) # Find the distances to the sides of the rectangle\ndy = min(abs(y-y1), abs(y-y2)) # Find the distances to the sides of the rectangle\n\nprint(math.sqrt(dx*dx + dy*dy)) # Print the minimum distance\n"
    },
    {
      "index": 1,
      "text": "import math\n\nx, y, x1, y1, x2, y2 = map(int, input().split())  # Read input\n\ndx = min(abs(x-x1), abs(x-x2))  # Find the distances to the sides of the rectangle\ndy = min(abs(y-y1), abs(y-y2))  # Find the distances to the sides of the rectangle\n\n# Print the minimum distance\nprint(math.sqrt(dx*dx + dy*dy))\n"
    }
  ],
  "created": 1649738517,
  "object": "edit"
}
2022-04-12 00:42:07.910969 fix syntax errors 2 ['import math\n\nx, y, x1, y1, x2, y2 = map(int, input().split()) # Read input\n\ndx = min(abs(x-x1), abs(x-x2)) # Find the distances to the sides of the rectangle\ndy = min(abs(y-y1), abs(y-y2)) # Find the distances to the sides of the rectangle\n\nprint(math.sqrt(dx*dx + dy*dy)) # Print the minimum distance\n', 'import math\n\nx, y, x1, y1, x2, y2 = map(int, input().split())  # Read input\n\ndx = min(abs(x-x1), abs(x-x2))  # Find the distances to the sides of the rectangle\ndy = min(abs(y-y1), abs(y-y2))  # Find the distances to the sides of the rectangle\n\n# Print the minimum distance\nprint(math.sqrt(dx*dx + dy*dy))\n']
2022-04-12 00:42:07.910993 size on output set 4
