["#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = read_int()\n    nums = [read_int() for _ in range(n)]\n    result = 0\n    for num in nums:\n        result += solve(num)\n    print(result)\n\ndef solve(num):\n    num_str = str(num)\n    length = len(num_str)\n    if length == 1:\n        return int(num_str)\n    else:\n        return int(num_str[0])**(length-1) + int(num_str[1:])\n\ndef read_int():\n    return int(sys.stdin.readline().strip())\n\nif __name__ == '__main__':\n    main()\n", "\n\nN = int(input())\noutput = 0\nfor i in range(N):\n    power = 0\n    number = input()\n    for j in range(len(number)):\n        power += int(number[j])\n    output += power ** len(number)\nprint(output)\n", "\nN = int(input())\n\nfor i in range(N):\n    P = int(input())\n    if len(str(P)) == 2:\n        print(int(str(P)[0])**int(str(P)[1])+int(str(P)[1])**int(str(P)[0]), end=\"+\")\n    else:\n        print(int(str(P)[0])**int(str(P)[1])+int(str(P)[1])**int(str(P)[2])+int(str(P)[2])**int(str(P)[0]), end=\"+\")\n", "n = int(input())\nlist_of_values = []\nwhile n > 0:\n    number = input()\n    list_of_values.append(number)\n    n -= 1\n\nresult = 0\nfor i in list_of_values:\n    for j in range(1, len(i)):\n        if int(i[j]) != 0:\n            result += int(i[:j]) ** int(i[j])\n            break\nprint(result)\n", "\n\ndef main():\n    num = int(input())\n    nums = []\n    for i in range(num):\n        nums.append(int(input()))\n    total = 0\n    for i in nums:\n        if i >= 10 and i < 100:\n            total += (i % 10) ** 1\n        elif i >= 100 and i < 1000:\n            total += (i // 100) ** 2\n        elif i >= 1000 and i < 10000: \n            total += (i // 1000) ** 3\n    print(total)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = read_integer()\n    nums = [read_integer() for _ in range(n)]\n    result = 0\n    for num in nums:\n        result += solve(num)\n    print(result)\n    \ndef solve(num):\n    num = str(num)\n    length = len(num)\n    if length == 1:\n        return int(num)\n    return int(num[0])**(length-1) + int(num[1:])\n\ndef read_integer():\n    return int(sys.stdin.readline().strip())\n\nif __name__ == '__main__':\n    main()\n", "\nn = int(input())\ntotal = 0\n\nfor _ in range(n):\n    total += int(input()) \nprint(total)\n", "\n\n# Work out the lengths of the numbers.\n# Then, for each number, work out the base of the number by dividing the length by 2.\n# Then, work out the power of the number by subtracting the base from the length.\n# Finally, work out the value of the number by taking the base to the power of the power.\n# Add up all of those values.\n\nimport math\n\ndef main():\n    n = int(input())\n    numbers = []\n    for i in range(n):\n        numbers.append(int(input()))\n    total = 0\n    for number in numbers:\n        length = len(str(number))\n        base = int(length / 2)\n        power = length - base\n        total += int(math.pow(base, power))\n    print(total)\n\nmain()\n", "N = int(input())\nX = 0\nfor i in range(N):\n    P = input()\n    X += int(P[-1]) ** int(P[0])\nprint(X)\n", "\n\ndef main():\n    num = int(input())\n    nums = []\n    for i in range(num):\n        nums.append(int(input()))\n    total = 0\n    for i in nums:\n        if i >= 10 and i < 100:\n            total += i % 10\n        elif i >= 100 and i < 1000:\n            total += (i // 100) ** 2\n        elif i >= 1000 and i < 10000:\n            total += (i // 1000) ** 3\n    print(total)\n\nif __name__ == '__main__':\n    main()\n", "n = int(input())\ntotal = 0\n\nfor _ in range(n):\n    total += int(input())\nprint(total)\n", "\n\nN = int(input())\n\nfor i in range(N):\n    P = int(input())\n    if len(str(P)) == 2:\n        print(int(str(P)[0])**int(str(P)[1])+int(str(P)[1])**int(str(P)[0]), end=\" \")\n    else:\n        print(int(str(P)[0])**int(str(P)[1])+int(str(P)[1])**int(str(P)[2])+int(str(P)[2])**int(str(P)[0]), end=\" \")\n    if i < N-1: print(\"+\", end=\" \")\n", "\nn = int(input())\ntotal = 0\nfor _ in range(n):\n    total += int(input())\nprint(total)\n", "\nN = int(input())\n\nfor i in range(N):\n    P = int(input())\n    if len(str(P)) == 2:\n        print(int(str(P)[0])**int(str(P)[1])+int(str(P)[1])**int(str(P)[0]), end=\" \")\n    else:\n        print(int(str(P)[0])**int(str(P)[1])+int(str(P)[1])**int(str(P)[2])+int(str(P)[2])**int(str(P)[0]), end=\" \")\n    if i < N-1:\n        print(\"+\", end=\" \")\n", "\nN = int(input())\noutput = 0\nfor i in range(N):\n    power = 0\n    number = input()\n    for i in range(len(number)):\n        power += int(number[i])\n    output += power ** len(number)\nprint(output)\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    N = int(input())\n\n    X = 0\n\n    for i in range(N):\n        P = input()\n        X += int(P[-1]) ** int(P[0])\n\n    print(X)\n\nif __name__ == '__main__':\n    main()\n", "N = int(input())\nX = 0\n\nfor i in range(N):\n    P = input()\n    X += int(P[-1]) ** int(P[0]) % 10\nprint(X)\n", "#!/usr/bin/python\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    for i in range(n):\n        num = int(sys.stdin.readline().strip())\n        print(solve(num))\n\ndef solve(num):\n    num = str(num)\n    length = len(num)\n    if length == 1:\n        return int(num)\n    else:\n        return int(num[0])**(length-1) + int(num[1:])\n\nif __name__ == '__main__':\n    main()\n", "N = int(input())\nX = 0\n\nfor i in range(N):\n    P = input()\n    X += int(P[-1]) ** int(P[0])\nprint(X)\n", "\nn = int(input())\n \ntotal = 0\n\nfor _ in range(n):\n    total += int(input())\n\nprint(total)\n", "\n\n# Find the number of unique characters in the string\n# Find the number of unique characters in the substring\n# Find the number of unique characters in the string that are not in the substring\n# Find the number of unique characters in the substring that are not in the string\n# Add up all of those numbers\n\ndef main():\n    s = input()\n    t = input()\n    s_unique = len(set(s))\n    t_unique = len(set(t))\n    s_not_t = len(set(s) - set(t))\n    t_not_s = len(set(t) - set(s))\n    print(s_unique + t_unique - s_not_t - t_not_s)\n\n\nmain()\n", "\n\nN = int(input())\n\nfor i in range(N):\n    P = int(input())\n    if len(str(P)) == 2: # if the number has 2 digits\n        print(int(str(P)[0])**int(str(P)[1])+int(str(P)[1])**int(str(P)[0]), end=\"\")\n    else:\n        print(int(str(P)[0])**int(str(P)[1])+int(str(P)[1])**int(str(P)[2])+int(str(P)[2])**int(str(P)[0]), end=\"\")\n    if i < N-1:\n        print(\"+\", end=\"\")\n", "N = int(input())\noutput = 0\nfor i in range(N):\n    pow = 0\n    number = input()\n    for i in range(len(number)):\n        pow += int(number[i])\n    output += pow ** len(number)\nprint(output)\n"]