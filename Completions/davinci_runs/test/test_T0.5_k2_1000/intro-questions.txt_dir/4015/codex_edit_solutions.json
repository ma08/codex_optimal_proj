["\ndef get_input():\n    return [int(x) for x in input().split()]  # read a list of integers, 2 in this case\n\n\ndef solve(a, b):\n    if a == b:  # equal\n        return 0\n    if a > b:  # impossible to generate\n        return -1\n    if b % a != 0:  # impossible to generate\n        return -1\n    return solve(a * 2, b) + 1 if b % (a * 2) == 0 else solve(a * 3, b) + 1  # either of them is ok\n\n\nif __name__ == '__main__':\n    n, m = get_input()\n    print(solve(n, m))\n", "\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(a, b):\n    if a == b:\n        return 0\n    if a > b:\n        return -1\n    if b % a != 0:\n        return -1\n    return solve(a * 2, b) + 1 if b % (a * 2) == 0 else solve(a * 3, b) + 1\n\n\nif __name__ == '__main__':\n    n, m = get_input()\n    print(solve(n, m))\n", "\n#-----Solution-----\n\n# This is a greedy algorithm.\n# The idea is to greedily multiply by 3 until the number is greater than m.\n# Then, multiply by 2 as many times as possible, until the number is greater than m.\n# If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n", "\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(a, b):\n    if a == b:\n        return 0\n    if a > b:\n        return -1\n    if b % a != 0:\n        return -1\n    return solve(a * 2, b) + 1 if b % (a * 2) == 0 else solve(a * 3, b) + 1\n\n\nif __name__ == '__main__':\n    a, b = get_input()\n    print(solve(a, b))\n", "\n\n#-----Solution-----#\n\n#This is a greedy algorithm.\n#The idea is to greedily multiply by 3 until the number is greater than or equal to m.\n#Then, multiply by 2 as many times as possible, until the number is greater than or equal to m.\n#If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n", "\n#-----Solution-----\n\n# This is a greedy algorithm.\n# The idea is to greedily multiply by 3 until the number is greater than m.\n# Then, multiply by 2 as many times as possible, until the number is greater than m.\n# If the number is not m, then the answer is -1.\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n", "\n\n#-----Solution-----\n\n#This is a greedy algorithm.\n#The idea is to greedily multiply by 3 until the number is greater than or equal to m.\n#Then, multiply by 2 as many times as possible, until the number is greater than or equal to m.\n#If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n\n\n#-----Solution-----\n\n#This is a greedy algorithm.\n#The idea is to greedily multiply by 3 until the number is greater than or equal to m.\n#Then, multiply by 2 as many times as possible, until the number is greater than or equal to m.\n#If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n", "\n\ndef get_input():\n    return [int(x) for x in input().split()][0]\n\n\ndef solve(a, b):\n    if a == b:\n        return 0\n    if a > b:\n        return -1\n    if b % a != 0:\n        return -1\n    return solve(a * 2, b) + 1 if b % (a * 2) == 0 else solve(a * 3, b) + 1\n\n\nif __name__ == '__main__':\n    a = get_input()\n    b = get_input()\n    print(solve(a, b))\n"]