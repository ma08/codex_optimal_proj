2022-04-12 04:52:09.524316 num operations 2
2022-04-12 04:52:09.524339 size on input set 1
2022-04-12 04:52:17.204664 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Read input\npoints = []\nfor _ in range(3):\n    points.append([int(x) for x in input().split()])\n\n# Get the fourth point.\nfor i in range(3):\n    for j in range(i+1, 3):\n        if points[i][0] == points[j][0] and points[i][1] != points[j][1]:\n            # Two points have the same x coordinate, but different y coordinates.\n            # The fourth point must have the same x coordinate as the other two, but the same y coordinate as the other point.\n            print(points[i][0], points[3-i-j][1])\n            break\n        elif points[i][1] == points[j][1] and points[i][0] != points[j][0]:\n            # Two points have the same y coordinate, but different x coordinates.\n            # The fourth point must have the same y coordinate as the other two, but the same x coordinate as the other point.\n            print(points[3-i-j][0], points[i][1])\n            break\n        elif i == 2 and j == 3:\n            # If we haven't found the fourth point, that means the points are not collinear.\n            # The fourth point must have the same x coordinate as one point, and the same y coordinate as the other point.\n            print(points[0][0], points[2][1])\n"
    },
    {
      "index": 1,
      "text": "\n\n# Read input\npoints = []\nfor _ in range(3):\n    points.append([int(x) for x in input().split()])\n\n# Get the fourth point\nfor i in range(3):\n    for j in range(i+1, 3):\n        if points[i][0] == points[j][0] and points[i][1] != points[j][1]:\n            # Two points have the same x coordinate, but different y coordinates\n            # The fourth point must have the same x coordinate as the other two, but the same y coordinate as the other point.\n            print(points[i][0], points[3-i-j][1])\n            break\n        elif points[i][1] == points[j][1] and points[i][0] != points[j][0]:\n            # Two points have the same y coordinate, but different x coordinates\n            # The fourth point must have the same y coordinate as the other two, but the same x coordinate as the other point.\n            print(points[3-i-j][0], points[i][1])\n            break\n        elif i == 2 and j == 3:\n            # If we haven't found the fourth point, that means the points are not collinear\n            # The fourth point must have the same x coordinate as one point, and the same y coordinate as the other point\n            print(points[0][0], points[2][1])\n"
    }
  ],
  "created": 1649753529,
  "object": "edit"
}
2022-04-12 04:52:17.205084 fix spelling mistakes 2 ["\n\n# Read input\npoints = []\nfor _ in range(3):\n    points.append([int(x) for x in input().split()])\n\n# Get the fourth point.\nfor i in range(3):\n    for j in range(i+1, 3):\n        if points[i][0] == points[j][0] and points[i][1] != points[j][1]:\n            # Two points have the same x coordinate, but different y coordinates.\n            # The fourth point must have the same x coordinate as the other two, but the same y coordinate as the other point.\n            print(points[i][0], points[3-i-j][1])\n            break\n        elif points[i][1] == points[j][1] and points[i][0] != points[j][0]:\n            # Two points have the same y coordinate, but different x coordinates.\n            # The fourth point must have the same y coordinate as the other two, but the same x coordinate as the other point.\n            print(points[3-i-j][0], points[i][1])\n            break\n        elif i == 2 and j == 3:\n            # If we haven't found the fourth point, that means the points are not collinear.\n            # The fourth point must have the same x coordinate as one point, and the same y coordinate as the other point.\n            print(points[0][0], points[2][1])\n", "\n\n# Read input\npoints = []\nfor _ in range(3):\n    points.append([int(x) for x in input().split()])\n\n# Get the fourth point\nfor i in range(3):\n    for j in range(i+1, 3):\n        if points[i][0] == points[j][0] and points[i][1] != points[j][1]:\n            # Two points have the same x coordinate, but different y coordinates\n            # The fourth point must have the same x coordinate as the other two, but the same y coordinate as the other point.\n            print(points[i][0], points[3-i-j][1])\n            break\n        elif points[i][1] == points[j][1] and points[i][0] != points[j][0]:\n            # Two points have the same y coordinate, but different x coordinates\n            # The fourth point must have the same y coordinate as the other two, but the same x coordinate as the other point.\n            print(points[3-i-j][0], points[i][1])\n            break\n        elif i == 2 and j == 3:\n            # If we haven't found the fourth point, that means the points are not collinear\n            # The fourth point must have the same x coordinate as one point, and the same y coordinate as the other point\n            print(points[0][0], points[2][1])\n"]
2022-04-12 04:52:17.205142 size on output set 2
2022-04-12 04:52:17.205149 size on input set 2
2022-04-12 04:52:22.397933 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Read input\npoints = []\nfor _ in range(3):\n    points.append([int(x) for x in input().split()])\n\n# Get the fourth point.\nfor i in range(3):\n    for j in range(i+1, 3):\n        if points[i][0] == points[j][0] and points[i][1] != points[j][1]:\n            # Two points have the same x coordinate, but different y coordinates.\n            # The fourth point must have the same x coordinate as the other two, but the same y coordinate as the other point.\n            print(points[i][0], points[3-i-j][1], sep=\" \")\n            break\n        elif points[i][1] == points[j][1] and points[i][0] != points[j][0]:\n            # Two points have the same y coordinate, but different x coordinates.\n            # The fourth point must have the same y coordinate as the other two, but the same x coordinate as the other point.\n            print(points[3-i-j][0], points[i][1], sep=\" \")\n            break\n        elif i == 2 and j == 3:\n            # If we haven't found the fourth point, that means the points are not collinear.\n            # The fourth point must have the same x coordinate as one point, and the same y coordinate as the other point.\n            print(points[0][0], points[2][1], sep=\" \")\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\n# Read input\npoints = []\nfor _ in range(3):\n    points.append([int(x) for x in input().split()])\n\n# Get the fourth point.\nfor i in range(3):\n    for j in range(i+1, 3):\n        if points[i][0] == points[j][0] and points[i][1] != points[j][1]:\n            # Two points have the same x coordinate, but different y coordinates.\n            # The fourth point must have the same x coordinate as the other two, but the same y coordinate as the other point.\n            print(points[i][0], points[3-i-j][1], sep=' ')\n            break\n        elif points[i][1] == points[j][1] and points[i][0] != points[j][0]:\n            # Two points have the same y coordinate, but different x coordinates.\n            # The fourth point must have the same y coordinate as the other two, but the same x coordinate as the other point.\n            print(points[3-i-j][0], points[i][1], sep=' ')\n            break\n        elif i == 2 and j == 3:\n            # If we haven't found the fourth point, that means the points are not collinear.\n            # The fourth point must have the same x coordinate as one point, and the same y coordinate as the other point.\n            print(points[0][0], points[2][1], sep=' ')\n"
    }
  ],
  "created": 1649753537,
  "object": "edit"
}
2022-04-12 04:52:22.398133 fix syntax errors 2 ['\n\n# Read input\npoints = []\nfor _ in range(3):\n    points.append([int(x) for x in input().split()])\n\n# Get the fourth point.\nfor i in range(3):\n    for j in range(i+1, 3):\n        if points[i][0] == points[j][0] and points[i][1] != points[j][1]:\n            # Two points have the same x coordinate, but different y coordinates.\n            # The fourth point must have the same x coordinate as the other two, but the same y coordinate as the other point.\n            print(points[i][0], points[3-i-j][1], sep=" ")\n            break\n        elif points[i][1] == points[j][1] and points[i][0] != points[j][0]:\n            # Two points have the same y coordinate, but different x coordinates.\n            # The fourth point must have the same y coordinate as the other two, but the same x coordinate as the other point.\n            print(points[3-i-j][0], points[i][1], sep=" ")\n            break\n        elif i == 2 and j == 3:\n            # If we haven\'t found the fourth point, that means the points are not collinear.\n            # The fourth point must have the same x coordinate as one point, and the same y coordinate as the other point.\n            print(points[0][0], points[2][1], sep=" ")\n', "#!/usr/bin/env python3\n\n# Read input\npoints = []\nfor _ in range(3):\n    points.append([int(x) for x in input().split()])\n\n# Get the fourth point.\nfor i in range(3):\n    for j in range(i+1, 3):\n        if points[i][0] == points[j][0] and points[i][1] != points[j][1]:\n            # Two points have the same x coordinate, but different y coordinates.\n            # The fourth point must have the same x coordinate as the other two, but the same y coordinate as the other point.\n            print(points[i][0], points[3-i-j][1], sep=' ')\n            break\n        elif points[i][1] == points[j][1] and points[i][0] != points[j][0]:\n            # Two points have the same y coordinate, but different x coordinates.\n            # The fourth point must have the same y coordinate as the other two, but the same x coordinate as the other point.\n            print(points[3-i-j][0], points[i][1], sep=' ')\n            break\n        elif i == 2 and j == 3:\n            # If we haven't found the fourth point, that means the points are not collinear.\n            # The fourth point must have the same x coordinate as one point, and the same y coordinate as the other point.\n            print(points[0][0], points[2][1], sep=' ')\n"]
2022-04-12 04:52:36.662862 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Read input\npoints = []\nfor _ in range(3):\n    points.append([int(x) for x in input().split()])\n\n# Get the fourth point\nfor i in range(3):\n    for j in range(i+1, 3):\n        if points[i][0] == points[j][0] and points[i][1] != points[j][1]:\n            # Two points have the same x coordinate, but different y coordinates\n            # The fourth point must have the same x coordinate as the other two, but the same y coordinate as the other point.\n            print(points[i][0], points[3-i-j][1], sep=' ')\n            break\n        elif points[i][1] == points[j][1] and points[i][0] != points[j][0]:\n            # Two points have the same y coordinate, but different x coordinates\n            # The fourth point must have the same y coordinate as the other two, but the same x coordinate as the other point.\n            print(points[3-i-j][0], points[i][1], sep=' ')\n            break\n        elif i == 2 and j == 3:\n            # If we haven't found the fourth point, that means the points are not collinear\n            # The fourth point must have the same x coordinate as one point, and the same y coordinate as the other point\n            print(points[0][0], points[2][1], sep=' ')\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # Read input\n    points = []\n    for _ in range(3):\n        points.append([int(x) for x in input().split()])\n\n    # Get the fourth point\n    for i in range(3):\n        for j in range(i+1, 3):\n            if points[i][0] == points[j][0] and points[i][1] != points[j][1]:\n                # Two points have the same x coordinate, but different y coordinates\n                # The fourth point must have the same x coordinate as the other two, but the same y coordinate as the other point.\n                print(points[i][0], points[3-i-j][1])\n                break\n            elif points[i][1] == points[j][1] and points[i][0] != points[j][0]:\n                # Two points have the same y coordinate, but different x coordinates\n                # The fourth point must have the same y coordinate as the other two, but the same x coordinate as the other point.\n                print(points[3-i-j][0], points[i][1])\n                break\n            elif i == 2 and j == 3:\n                # If we haven't found the fourth point, that means the points are not collinear\n                # The fourth point must have the same x coordinate as one point, and the same y coordinate as the other point\n                print(points[0][0], points[2][1])\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649753542,
  "object": "edit"
}
2022-04-12 04:52:36.663037 fix syntax errors 2 ["\n\n# Read input\npoints = []\nfor _ in range(3):\n    points.append([int(x) for x in input().split()])\n\n# Get the fourth point\nfor i in range(3):\n    for j in range(i+1, 3):\n        if points[i][0] == points[j][0] and points[i][1] != points[j][1]:\n            # Two points have the same x coordinate, but different y coordinates\n            # The fourth point must have the same x coordinate as the other two, but the same y coordinate as the other point.\n            print(points[i][0], points[3-i-j][1], sep=' ')\n            break\n        elif points[i][1] == points[j][1] and points[i][0] != points[j][0]:\n            # Two points have the same y coordinate, but different x coordinates\n            # The fourth point must have the same y coordinate as the other two, but the same x coordinate as the other point.\n            print(points[3-i-j][0], points[i][1], sep=' ')\n            break\n        elif i == 2 and j == 3:\n            # If we haven't found the fourth point, that means the points are not collinear\n            # The fourth point must have the same x coordinate as one point, and the same y coordinate as the other point\n            print(points[0][0], points[2][1], sep=' ')\n", '\n\ndef main():\n    # Read input\n    points = []\n    for _ in range(3):\n        points.append([int(x) for x in input().split()])\n\n    # Get the fourth point\n    for i in range(3):\n        for j in range(i+1, 3):\n            if points[i][0] == points[j][0] and points[i][1] != points[j][1]:\n                # Two points have the same x coordinate, but different y coordinates\n                # The fourth point must have the same x coordinate as the other two, but the same y coordinate as the other point.\n                print(points[i][0], points[3-i-j][1])\n                break\n            elif points[i][1] == points[j][1] and points[i][0] != points[j][0]:\n                # Two points have the same y coordinate, but different x coordinates\n                # The fourth point must have the same y coordinate as the other two, but the same x coordinate as the other point.\n                print(points[3-i-j][0], points[i][1])\n                break\n            elif i == 2 and j == 3:\n                # If we haven\'t found the fourth point, that means the points are not collinear\n                # The fourth point must have the same x coordinate as one point, and the same y coordinate as the other point\n                print(points[0][0], points[2][1])\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 04:52:36.663077 size on output set 4
2022-04-12 04:52:36.663100 num operations 2
2022-04-12 04:52:36.663106 size on input set 1
2022-04-12 04:52:40.670960 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n    x4 = 0\n    y4 = 0\n    if x1 == x2:\n        x4 = x3\n    elif x2 == x3:\n        x4 = x1\n    else:\n        x4 = x2\n    if y1 == y2:\n        y4 = y3\n    elif y2 == y3:\n        y4 = y1\n    else:\n        y4 = y2\n    print(x4, y4)\n\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n    x4 = 0\n    y4 = 0\n    if x1 == x2:\n        x4 = x3\n    elif x2 == x3:\n        x4 = x1\n    else:\n        x4 = x2\n    if y1 == y2:\n        y4 = y3\n    elif y2 == y3:\n        y4 = y1\n    else:\n        y4 = y2\n    print(x4, y4)\n\n\nmain()\n"
    }
  ],
  "created": 1649753556,
  "object": "edit"
}
2022-04-12 04:52:40.671277 fix spelling mistakes 2 ['\n\ndef main():\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n    x4 = 0\n    y4 = 0\n    if x1 == x2:\n        x4 = x3\n    elif x2 == x3:\n        x4 = x1\n    else:\n        x4 = x2\n    if y1 == y2:\n        y4 = y3\n    elif y2 == y3:\n        y4 = y1\n    else:\n        y4 = y2\n    print(x4, y4)\n\n\nmain()\n', '\n\ndef main():\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n    x4 = 0\n    y4 = 0\n    if x1 == x2:\n        x4 = x3\n    elif x2 == x3:\n        x4 = x1\n    else:\n        x4 = x2\n    if y1 == y2:\n        y4 = y3\n    elif y2 == y3:\n        y4 = y1\n    else:\n        y4 = y2\n    print(x4, y4)\n\n\nmain()\n']
2022-04-12 04:52:40.671321 size on output set 1
2022-04-12 04:52:40.671331 size on input set 1
2022-04-12 04:52:57.350258 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    x1, y1 = map(int, input().split()) # 1\u3064\u76ee\u306e\u70b9\u306e\u5ea7\u6a19\n    x2, y2 = map(int, input().split()) # 2\u3064\u76ee\u306e\u70b9\u306e\u5ea7\u6a19\n    x3, y3 = map(int, input().split()) # 3\u3064\u76ee\u306e\u70b9\u306e\u5ea7\u6a19\n    x4 = 0\n    y4 = 0\n    if x1 == x2: # 1\u3064\u76ee\u30682\u3064\u76ee\u306e\u70b9\u304cx\u5ea7\u6a19\u304c\u540c\u3058\u5834\u5408\n        x4 = x3\n    elif x2 == x3: # 2\u3064\u76ee\u30683\u3064\u76ee\u306e\u70b9\u304cx\u5ea7\u6a19\u304c\u540c\u3058\u5834\u5408\n        x4 = x1\n    else: # \u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\n        x4 = x2\n    if y1 == y2: # 1\u3064\u76ee\u30682\u3064\u76ee\u306e\u70b9\u304cy\u5ea7\u6a19\u304c\u540c\u3058\u5834\u5408\n        y4 = y3\n    elif y2 == y3:\n        y4 = y1\n    else:\n        y4 = y2\n    print(x4, y4)\n\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    x1, y1 = map(int, input().split())  # \u5165\u529b\u3092\u53d7\u3051\u53d6\u308b\n    x2, y2 = map(int, input().split())  # \u5165\u529b\u3092\u53d7\u3051\u53d6\u308b\n    x3, y3 = map(int, input().split())  # \u5165\u529b\u3092\u53d7\u3051\u53d6\u308b\n    x4 = 0\n    y4 = 0\n    if x1 == x2:  # x1\u3068x2\u304c\u540c\u3058\u306a\u3089\n        x4 = x3\n    elif x2 == x3:  # x2\u3068x3\u304c\u540c\u3058\u306a\u3089\n        x4 = x1\n    else:  # \u305d\u308c\u4ee5\u5916\u306a\u3089\n        x4 = x2\n    if y1 == y2:  # y1\u3068y2\u304c\u540c\u3058\u306a\u3089\n        y4 = y3\n    elif y2 == y3:\n        y4 = y1\n    else:\n        y4 = y2\n    print(x4, y4)\n\n\nmain()\n"
    }
  ],
  "created": 1649753560,
  "object": "edit"
}
2022-04-12 04:52:57.350404 fix syntax errors 2 ['\n\ndef main():\n    x1, y1 = map(int, input().split()) # 1つ目の点の座標\n    x2, y2 = map(int, input().split()) # 2つ目の点の座標\n    x3, y3 = map(int, input().split()) # 3つ目の点の座標\n    x4 = 0\n    y4 = 0\n    if x1 == x2: # 1つ目と2つ目の点がx座標が同じ場合\n        x4 = x3\n    elif x2 == x3: # 2つ目と3つ目の点がx座標が同じ場合\n        x4 = x1\n    else: # それ以外の場合\n        x4 = x2\n    if y1 == y2: # 1つ目と2つ目の点がy座標が同じ場合\n        y4 = y3\n    elif y2 == y3:\n        y4 = y1\n    else:\n        y4 = y2\n    print(x4, y4)\n\n\nmain()\n', '\n\ndef main():\n    x1, y1 = map(int, input().split())  # 入力を受け取る\n    x2, y2 = map(int, input().split())  # 入力を受け取る\n    x3, y3 = map(int, input().split())  # 入力を受け取る\n    x4 = 0\n    y4 = 0\n    if x1 == x2:  # x1とx2が同じなら\n        x4 = x3\n    elif x2 == x3:  # x2とx3が同じなら\n        x4 = x1\n    else:  # それ以外なら\n        x4 = x2\n    if y1 == y2:  # y1とy2が同じなら\n        y4 = y3\n    elif y2 == y3:\n        y4 = y1\n    else:\n        y4 = y2\n    print(x4, y4)\n\n\nmain()\n']
2022-04-12 04:52:57.350439 size on output set 2
2022-04-12 04:52:57.350449 num operations 2
2022-04-12 04:52:57.350455 size on input set 1
2022-04-12 04:52:59.758846 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    \"\"\"\n    Reads three points and prints the fourth point\n    \"\"\"\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n\n    x4, y4 = x3, y2\n    if x4 == x1 and y4 == y1:\n        x4, y4 = x2, y3\n    elif x4 == x2 and y4 == y2:\n        x4, y4 = x1, y3\n    print(x4, y4)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    \"\"\"\n    Reads three points and prints the fourth point\n    \"\"\"\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n\n    x4, y4 = x3, y2\n    if x4 == x1 and y4 == y1:\n        x4, y4 = x2, y3\n    elif x4 == x2 and y4 == y2:\n        x4, y4 = x1, y3\n    print(x4, y4)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649753577,
  "object": "edit"
}
2022-04-12 04:52:59.758972 fix spelling mistakes 2 ['\n\ndef main():\n    """\n    Reads three points and prints the fourth point\n    """\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n\n    x4, y4 = x3, y2\n    if x4 == x1 and y4 == y1:\n        x4, y4 = x2, y3\n    elif x4 == x2 and y4 == y2:\n        x4, y4 = x1, y3\n    print(x4, y4)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    Reads three points and prints the fourth point\n    """\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n\n    x4, y4 = x3, y2\n    if x4 == x1 and y4 == y1:\n        x4, y4 = x2, y3\n    elif x4 == x2 and y4 == y2:\n        x4, y4 = x1, y3\n    print(x4, y4)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 04:52:59.758987 size on output set 1
2022-04-12 04:52:59.758990 size on input set 1
2022-04-12 04:53:08.518867 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    \"\"\"\n    Reads three points and prints the fourth point\n    \"\"\"\n    x1, y1 = map(int, input().split()) # read first point\n    x2, y2 = map(int, input().split()) # read second point\n    x3, y3 = map(int, input().split()) # read third point\n\n    x4, y4 = x3, y2 # set fourth point\n    if x4 == x1 and y4 == y1: # check if x4, y4 is the first point\n        x4, y4 = x2, y3 # set fourth point to second point\n    elif x4 == x2 and y4 == y2: # check if x4, y4 is the second point\n        x4, y4 = x1, y3 # set fourth point to first point\n    print(x4, y4) # print fourth point\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    \"\"\"\n    Reads three points and prints the fourth point\n    \"\"\"\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n\n    x4, y4 = x3, y3\n    if x4 == x1 and y4 == y1 or x4 == x2 and y4 == y2:\n        x4, y4 = x2, y2\n    elif x4 == x1 and y4 == y1 or x4 == x3 and y4 == y3:\n        x4, y4 = x3, y3\n    print(x4, y4, end=\" \")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649753579,
  "object": "edit"
}
2022-04-12 04:53:08.519051 fix syntax errors 2 ['\n\ndef main():\n    """\n    Reads three points and prints the fourth point\n    """\n    x1, y1 = map(int, input().split()) # read first point\n    x2, y2 = map(int, input().split()) # read second point\n    x3, y3 = map(int, input().split()) # read third point\n\n    x4, y4 = x3, y2 # set fourth point\n    if x4 == x1 and y4 == y1: # check if x4, y4 is the first point\n        x4, y4 = x2, y3 # set fourth point to second point\n    elif x4 == x2 and y4 == y2: # check if x4, y4 is the second point\n        x4, y4 = x1, y3 # set fourth point to first point\n    print(x4, y4) # print fourth point\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    Reads three points and prints the fourth point\n    """\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n\n    x4, y4 = x3, y3\n    if x4 == x1 and y4 == y1 or x4 == x2 and y4 == y2:\n        x4, y4 = x2, y2\n    elif x4 == x1 and y4 == y1 or x4 == x3 and y4 == y3:\n        x4, y4 = x3, y3\n    print(x4, y4, end=" ")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 04:53:08.519074 size on output set 2
2022-04-12 04:53:08.519081 num operations 2
2022-04-12 04:53:08.519084 size on input set 1
2022-04-12 04:53:12.206953 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nx1, y1 = map(int, input().split())\nx2, y2 = map(int, input().split())\nx3, y3 = map(int, input().split())\n\nif x1 == x2:\n    x4 = x3\nelif x1 == x3:\n    x4 = x2\nelse:\n    x4 = x1\n\nif y1 == y2:\n    y4 = y3\nelif y1 == y3:\n    y4 = y2\nelse:\n    y4 = y1\n\nprint(x4, y4, end=' ')\n"
    },
    {
      "index": 1,
      "text": "\n\nx1, y1 = map(int, input().split())\nx2, y2 = map(int, input().split())\nx3, y3 = map(int, input().split())\n\nif x1 == x2:\n    x4 = x3\nelif x1 == x3:\n    x4 = x2\nelse:\n    x4 = x1\n\nif y1 == y2:\n    y4 = y3\nelif y1 == y3:\n    y4 = y2\nelse:\n    y4 = y1\n\nprint(x4, y4)\n"
    }
  ],
  "created": 1649753588,
  "object": "edit"
}
2022-04-12 04:53:12.207239 fix spelling mistakes 2 ["\n\nx1, y1 = map(int, input().split())\nx2, y2 = map(int, input().split())\nx3, y3 = map(int, input().split())\n\nif x1 == x2:\n    x4 = x3\nelif x1 == x3:\n    x4 = x2\nelse:\n    x4 = x1\n\nif y1 == y2:\n    y4 = y3\nelif y1 == y3:\n    y4 = y2\nelse:\n    y4 = y1\n\nprint(x4, y4, end=' ')\n", '\n\nx1, y1 = map(int, input().split())\nx2, y2 = map(int, input().split())\nx3, y3 = map(int, input().split())\n\nif x1 == x2:\n    x4 = x3\nelif x1 == x3:\n    x4 = x2\nelse:\n    x4 = x1\n\nif y1 == y2:\n    y4 = y3\nelif y1 == y3:\n    y4 = y2\nelse:\n    y4 = y1\n\nprint(x4, y4)\n']
2022-04-12 04:53:12.207266 size on output set 2
2022-04-12 04:53:12.207272 size on input set 2
2022-04-12 04:53:14.118834 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nx1, y1 = map(int, input().split())\nx2, y2 = map(int, input().split())\nx3, y3 = map(int, input().split())\n\nif x1 == x2:\n    x4 = x3\nelif x1 == x3:\n    x4 = x2\nelse:\n    x4 = x1\n\nif y1 == y2:\n    y4 = y3\nelif y1 == y3:\n    y4 = y2\nelse:\n    y4 = y1\n\nprint(x4, y4)\n"
    },
    {
      "index": 1,
      "text": "\nx1, y1 = map(int, input().split())\nx2, y2 = map(int, input().split())\nx3, y3 = map(int, input().split())\n\nif x1 == x2:\n    x4 = x3\nelif x1 == x3:\n    x4 = x2\nelse:\n    x4 = x1\n\nif y1 == y2:\n    y4 = y3\nelif y1 == y3:\n    y4 = y2\nelse:\n    y4 = y1\n\nprint(x4, y4)\n"
    }
  ],
  "created": 1649753592,
  "object": "edit"
}
2022-04-12 04:53:14.118971 fix syntax errors 2 ['\nx1, y1 = map(int, input().split())\nx2, y2 = map(int, input().split())\nx3, y3 = map(int, input().split())\n\nif x1 == x2:\n    x4 = x3\nelif x1 == x3:\n    x4 = x2\nelse:\n    x4 = x1\n\nif y1 == y2:\n    y4 = y3\nelif y1 == y3:\n    y4 = y2\nelse:\n    y4 = y1\n\nprint(x4, y4)\n', '\nx1, y1 = map(int, input().split())\nx2, y2 = map(int, input().split())\nx3, y3 = map(int, input().split())\n\nif x1 == x2:\n    x4 = x3\nelif x1 == x3:\n    x4 = x2\nelse:\n    x4 = x1\n\nif y1 == y2:\n    y4 = y3\nelif y1 == y3:\n    y4 = y2\nelse:\n    y4 = y1\n\nprint(x4, y4)\n']
2022-04-12 04:53:16.553199 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nx1, y1 = map(int, input().split())\nx2, y2 = map(int, input().split())\nx3, y3 = map(int, input().split())\n\nif x1 == x2:\n    x4 = x3\nelif x1 == x3:\n    x4 = x2\nelse:\n    x4 = x1\n\nif y1 == y2:\n    y4 = y3\nelif y1 == y3:\n    y4 = y2\nelse:\n    y4 = y1\n\nprint(x4, y4, end=' ')\n"
    },
    {
      "index": 1,
      "text": "\nx1, y1 = map(int, input().split())\nx2, y2 = map(int, input().split())\nx3, y3 = map(int, input().split())\n\nif x1 == x2:\n    x4 = x3\nelif x1 == x3:\n    x4 = x2\nelse:\n    x4 = x1\n\nif y1 == y2:\n    y4 = y3\nelif y1 == y3:\n    y4 = y2\nelse:\n    y4 = y1\n\nprint(x4, y4)\n"
    }
  ],
  "created": 1649753594,
  "object": "edit"
}
2022-04-12 04:53:16.553300 fix syntax errors 2 ["\nx1, y1 = map(int, input().split())\nx2, y2 = map(int, input().split())\nx3, y3 = map(int, input().split())\n\nif x1 == x2:\n    x4 = x3\nelif x1 == x3:\n    x4 = x2\nelse:\n    x4 = x1\n\nif y1 == y2:\n    y4 = y3\nelif y1 == y3:\n    y4 = y2\nelse:\n    y4 = y1\n\nprint(x4, y4, end=' ')\n", '\nx1, y1 = map(int, input().split())\nx2, y2 = map(int, input().split())\nx3, y3 = map(int, input().split())\n\nif x1 == x2:\n    x4 = x3\nelif x1 == x3:\n    x4 = x2\nelse:\n    x4 = x1\n\nif y1 == y2:\n    y4 = y3\nelif y1 == y3:\n    y4 = y2\nelse:\n    y4 = y1\n\nprint(x4, y4)\n']
2022-04-12 04:53:16.553313 size on output set 2
2022-04-12 04:53:16.553324 num operations 2
2022-04-12 04:53:16.553326 size on input set 1
2022-04-12 04:53:18.462860 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    points = []\n    for i in range(3):\n        points.append(list(map(int, sys.stdin.readline().split())))\n    x = set([x[0] for x in points])\n    y = set([y[1] for y in points])\n    if len(x) == 3:\n        print(x.pop(), y.pop())\n    else:\n        print(x.pop(), y.pop())\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    points = []\n    for i in range(3):\n        points.append(list(map(int, sys.stdin.readline().split())))\n    x = set([x[0] for x in points])\n    y = set([y[1] for y in points])\n    if len(x) == 3:\n        print(x.pop(), y.pop())\n    else:\n        print(x.pop(), y.pop())\n\nmain()\n"
    }
  ],
  "created": 1649753596,
  "object": "edit"
}
2022-04-12 04:53:18.462964 fix spelling mistakes 2 ['\nimport sys\n\ndef main():\n    points = []\n    for i in range(3):\n        points.append(list(map(int, sys.stdin.readline().split())))\n    x = set([x[0] for x in points])\n    y = set([y[1] for y in points])\n    if len(x) == 3:\n        print(x.pop(), y.pop())\n    else:\n        print(x.pop(), y.pop())\n\nmain()\n', 'import sys\n\ndef main():\n    points = []\n    for i in range(3):\n        points.append(list(map(int, sys.stdin.readline().split())))\n    x = set([x[0] for x in points])\n    y = set([y[1] for y in points])\n    if len(x) == 3:\n        print(x.pop(), y.pop())\n    else:\n        print(x.pop(), y.pop())\n\nmain()\n']
2022-04-12 04:53:18.463031 size on output set 2
2022-04-12 04:53:18.463035 size on input set 2
2022-04-12 04:53:21.546887 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    points = []\n    for i in range(3):\n        points.append(list(map(int, sys.stdin.readline().split())))\n    x = set([x[0] for x in points])\n    y = set([y[1] for y in points])\n    if len(x) == 3:\n        print(x.pop(), y.pop()) \n    else:\n        print(x.pop(), y.pop())\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    points = []\n    for i in range(3):\n        points.append(list(map(int, sys.stdin.readline().split())))\n    x = set([p[0] for p in points])\n    y = set([p[1] for p in points])\n    if len(x) == 3:\n        print(x.pop(), y.pop())\n    else:\n        print(x.pop(), y.pop())\n\nmain()\n"
    }
  ],
  "created": 1649753598,
  "object": "edit"
}
2022-04-12 04:53:21.547071 fix syntax errors 2 ['\nimport sys\n\ndef main():\n    points = []\n    for i in range(3):\n        points.append(list(map(int, sys.stdin.readline().split())))\n    x = set([x[0] for x in points])\n    y = set([y[1] for y in points])\n    if len(x) == 3:\n        print(x.pop(), y.pop()) \n    else:\n        print(x.pop(), y.pop())\n\nmain()\n', '\nimport sys\n\ndef main():\n    points = []\n    for i in range(3):\n        points.append(list(map(int, sys.stdin.readline().split())))\n    x = set([p[0] for p in points])\n    y = set([p[1] for p in points])\n    if len(x) == 3:\n        print(x.pop(), y.pop())\n    else:\n        print(x.pop(), y.pop())\n\nmain()\n']
2022-04-12 04:53:26.478881 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    points = []\n    for i in range(3):\n        points.append(list(map(int, sys.stdin.readline().split())))\n    x = set([point[0] for point in points])\n    y = set([point[1] for point in points])\n    if len(x) == 3:\n        print(x.pop(), y.pop())\n    else:\n        print(x.pop(), y.pop())\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    points = []\n    for i in range(3):\n        points.append(list(map(int, sys.stdin.readline().split())))\n    x = set([x[0] for x in points]) # set of x coordinates\n    y = set([y[1] for y in points]) # set of y coordinates\n    if len(x) == 3:\n        print(x.pop(), y.pop())\n    else:\n        print(x.pop(), y.pop())\n\nmain()\n"
    }
  ],
  "created": 1649753601,
  "object": "edit"
}
2022-04-12 04:53:26.479012 fix syntax errors 2 ['import sys\n\ndef main():\n    points = []\n    for i in range(3):\n        points.append(list(map(int, sys.stdin.readline().split())))\n    x = set([point[0] for point in points])\n    y = set([point[1] for point in points])\n    if len(x) == 3:\n        print(x.pop(), y.pop())\n    else:\n        print(x.pop(), y.pop())\n\nmain()\n', 'import sys\n\ndef main():\n    points = []\n    for i in range(3):\n        points.append(list(map(int, sys.stdin.readline().split())))\n    x = set([x[0] for x in points]) # set of x coordinates\n    y = set([y[1] for y in points]) # set of y coordinates\n    if len(x) == 3:\n        print(x.pop(), y.pop())\n    else:\n        print(x.pop(), y.pop())\n\nmain()\n']
2022-04-12 04:53:26.479024 size on output set 4
2022-04-12 04:53:26.479030 num operations 2
2022-04-12 04:53:26.479033 size on input set 1
2022-04-12 04:53:28.546874 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Read input\nxy = []\nfor i in range(3):\n    xy.append([int(i) for i in input().split()])\n\n# Find the missing point.\nfor i in range(3):\n    for j in range(3):\n        if xy[i][0] == xy[j][0] and xy[i][1] != xy[j][1]:\n            x = xy[i][0]\n            y = xy[i][1] + xy[j][1] - xy[i][1]\n        elif xy[i][1] == xy[j][1] and xy[i][0] != xy[j][0]:\n            x = xy[i][0] + xy[j][0] - xy[i][0]\n            y = xy[i][1]\n        if x and y:\n            print(x, y)\n            break\n    if x and y:\n        break\n"
    },
    {
      "index": 1,
      "text": "\n\n# Read input \nxy = []\nfor i in range(3):\n    xy.append([int(i) for i in input().split()])\n\n# Find the missing point\nfor i in range(3):\n    for j in range(3):\n        if xy[i][0] == xy[j][0] and xy[i][1] != xy[j][1]:\n            x = xy[i][0]\n            y = xy[i][1] + xy[j][1] - xy[i][1]\n        elif xy[i][1] == xy[j][1] and xy[i][0] != xy[j][0]:\n            x = xy[i][0] + xy[j][0] - xy[i][0]\n            y = xy[i][1]\n        if x and y:\n            print(x, y)\n            break\n    if x and y:\n        break\n"
    }
  ],
  "created": 1649753606,
  "object": "edit"
}
2022-04-12 04:53:28.547049 fix spelling mistakes 2 ['\n\n# Read input\nxy = []\nfor i in range(3):\n    xy.append([int(i) for i in input().split()])\n\n# Find the missing point.\nfor i in range(3):\n    for j in range(3):\n        if xy[i][0] == xy[j][0] and xy[i][1] != xy[j][1]:\n            x = xy[i][0]\n            y = xy[i][1] + xy[j][1] - xy[i][1]\n        elif xy[i][1] == xy[j][1] and xy[i][0] != xy[j][0]:\n            x = xy[i][0] + xy[j][0] - xy[i][0]\n            y = xy[i][1]\n        if x and y:\n            print(x, y)\n            break\n    if x and y:\n        break\n', '\n\n# Read input \nxy = []\nfor i in range(3):\n    xy.append([int(i) for i in input().split()])\n\n# Find the missing point\nfor i in range(3):\n    for j in range(3):\n        if xy[i][0] == xy[j][0] and xy[i][1] != xy[j][1]:\n            x = xy[i][0]\n            y = xy[i][1] + xy[j][1] - xy[i][1]\n        elif xy[i][1] == xy[j][1] and xy[i][0] != xy[j][0]:\n            x = xy[i][0] + xy[j][0] - xy[i][0]\n            y = xy[i][1]\n        if x and y:\n            print(x, y)\n            break\n    if x and y:\n        break\n']
2022-04-12 04:53:28.547076 size on output set 2
2022-04-12 04:53:28.547083 size on input set 2
2022-04-12 04:53:31.298848 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Read input\nxy = []\nfor i in range(3):\n    xy.append([int(j) for j in input().split()])\n\n# Find the missing point.\nfor i in range(3):\n    for j in range(3):\n        if xy[i][0] == xy[j][0] and xy[i][1] != xy[j][1]:\n            x = xy[i][0]\n            y = xy[i][1] + xy[j][1] - xy[i][1]\n        elif xy[i][1] == xy[j][1] and xy[i][0] != xy[j][0]:\n            x = xy[i][0] + xy[j][0] - xy[i][0]\n            y = xy[i][1]\n        if x and y:\n            print(x, y)\n            break\n    if x and y:\n        break\n"
    },
    {
      "index": 1,
      "text": "\n# Read input\nxy = []\nfor i in range(3):\n    xy.append([int(j) for j in input().split()])\n\n# Find the missing point.\nfor i in range(3):\n    for j in range(3):\n        if xy[i][0] == xy[j][0] and xy[i][1] != xy[j][1]:\n            x = xy[i][0]\n            y = xy[i][1] + xy[j][1] - xy[i][1]\n        elif xy[i][1] == xy[j][1] and xy[i][0] != xy[j][0]:\n            x = xy[i][0] + xy[j][0] - xy[i][0]\n            y = xy[i][1]\n        if x and y:\n            print(x, y)\n            break\n    if x and y:\n        break\n"
    }
  ],
  "created": 1649753608,
  "object": "edit"
}
2022-04-12 04:53:31.298993 fix syntax errors 2 ['\n# Read input\nxy = []\nfor i in range(3):\n    xy.append([int(j) for j in input().split()])\n\n# Find the missing point.\nfor i in range(3):\n    for j in range(3):\n        if xy[i][0] == xy[j][0] and xy[i][1] != xy[j][1]:\n            x = xy[i][0]\n            y = xy[i][1] + xy[j][1] - xy[i][1]\n        elif xy[i][1] == xy[j][1] and xy[i][0] != xy[j][0]:\n            x = xy[i][0] + xy[j][0] - xy[i][0]\n            y = xy[i][1]\n        if x and y:\n            print(x, y)\n            break\n    if x and y:\n        break\n', '\n# Read input\nxy = []\nfor i in range(3):\n    xy.append([int(j) for j in input().split()])\n\n# Find the missing point.\nfor i in range(3):\n    for j in range(3):\n        if xy[i][0] == xy[j][0] and xy[i][1] != xy[j][1]:\n            x = xy[i][0]\n            y = xy[i][1] + xy[j][1] - xy[i][1]\n        elif xy[i][1] == xy[j][1] and xy[i][0] != xy[j][0]:\n            x = xy[i][0] + xy[j][0] - xy[i][0]\n            y = xy[i][1]\n        if x and y:\n            print(x, y)\n            break\n    if x and y:\n        break\n']
2022-04-12 04:53:33.969561 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Read input \nxy = []\nfor i in range(3):\n    xy.append([int(i) for i in input().split()])\n\n# Find the missing point\nfor i in range(3):\n    for j in range(3):\n        if xy[i][0] == xy[j][0] and xy[i][1] != xy[j][1]:\n            x = xy[i][0]\n            y = xy[i][1] + xy[j][1] - xy[i][1]\n        elif xy[i][1] == xy[j][1] and xy[i][0] != xy[j][0]:\n            x = xy[i][0] + xy[j][0] - xy[i][0]\n            y = xy[i][1]\n        if x and y:\n            print(x, y)\n            break\n    if x and y:\n        break\n"
    },
    {
      "index": 1,
      "text": "\n# Read input \nxy = []\nfor i in range(3):\n    xy.append([int(j) for j in input().split()])\n\n# Find the missing point\nfor i in range(3):\n    for j in range(3):\n        if xy[i][0] == xy[j][0] and xy[i][1] != xy[j][1]:\n            x = xy[i][0]\n            y = xy[i][1] + xy[j][1] - xy[i][1]\n        elif xy[i][1] == xy[j][1] and xy[i][0] != xy[j][0]:\n            x = xy[i][0] + xy[j][0] - xy[i][0]\n            y = xy[i][1]\n        if x and y:\n            print(x, y)\n            break\n    if x and y:\n        break\n"
    }
  ],
  "created": 1649753611,
  "object": "edit"
}
2022-04-12 04:53:33.969735 fix syntax errors 2 ['\n# Read input \nxy = []\nfor i in range(3):\n    xy.append([int(i) for i in input().split()])\n\n# Find the missing point\nfor i in range(3):\n    for j in range(3):\n        if xy[i][0] == xy[j][0] and xy[i][1] != xy[j][1]:\n            x = xy[i][0]\n            y = xy[i][1] + xy[j][1] - xy[i][1]\n        elif xy[i][1] == xy[j][1] and xy[i][0] != xy[j][0]:\n            x = xy[i][0] + xy[j][0] - xy[i][0]\n            y = xy[i][1]\n        if x and y:\n            print(x, y)\n            break\n    if x and y:\n        break\n', '\n# Read input \nxy = []\nfor i in range(3):\n    xy.append([int(j) for j in input().split()])\n\n# Find the missing point\nfor i in range(3):\n    for j in range(3):\n        if xy[i][0] == xy[j][0] and xy[i][1] != xy[j][1]:\n            x = xy[i][0]\n            y = xy[i][1] + xy[j][1] - xy[i][1]\n        elif xy[i][1] == xy[j][1] and xy[i][0] != xy[j][0]:\n            x = xy[i][0] + xy[j][0] - xy[i][0]\n            y = xy[i][1]\n        if x and y:\n            print(x, y)\n            break\n    if x and y:\n        break\n']
2022-04-12 04:53:33.969758 size on output set 3
2022-04-12 04:53:33.969766 num operations 2
2022-04-12 04:53:33.969770 size on input set 1
2022-04-12 04:53:36.191094 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nlines = []\nfor i in range(3):\n    lines.append(input())\n\ndef get_coords(line):\n    coords = line.split()\n    return (int(coords[0]), int(coords[1]))\n\npoints = []\nfor line in lines:\n    points.append(get_coords(line))\n\nif points[0][0] == points[1][0]:\n    x = points[2][0]\nelse:\n    x = points[0][0]\n\nif points[0][1] == points[1][1]:\n    y = points[2][1]\nelse:\n    y = points[0][1]\n\nprint(x, y)\n"
    },
    {
      "index": 1,
      "text": "\n\nlines = []\nfor i in range(3):\n    lines.append(input())\n\ndef get_coords(line):\n    coords = line.split()\n    return (int(coords[0]), int(coords[1]))\n\npoints = []\nfor line in lines:\n    points.append(get_coords(line))\n\nif points[0][0] == points[1][0]:\n    x = points[2][0]\nelse:\n    x = points[0][0] \n\nif points[0][1] == points[1][1]:\n    y = points[2][1]\nelse:\n    y = points[0][1]\n\nprint(x, y)\n"
    }
  ],
  "created": 1649753614,
  "object": "edit"
}
2022-04-12 04:53:36.191241 fix spelling mistakes 2 ['\nlines = []\nfor i in range(3):\n    lines.append(input())\n\ndef get_coords(line):\n    coords = line.split()\n    return (int(coords[0]), int(coords[1]))\n\npoints = []\nfor line in lines:\n    points.append(get_coords(line))\n\nif points[0][0] == points[1][0]:\n    x = points[2][0]\nelse:\n    x = points[0][0]\n\nif points[0][1] == points[1][1]:\n    y = points[2][1]\nelse:\n    y = points[0][1]\n\nprint(x, y)\n', '\n\nlines = []\nfor i in range(3):\n    lines.append(input())\n\ndef get_coords(line):\n    coords = line.split()\n    return (int(coords[0]), int(coords[1]))\n\npoints = []\nfor line in lines:\n    points.append(get_coords(line))\n\nif points[0][0] == points[1][0]:\n    x = points[2][0]\nelse:\n    x = points[0][0] \n\nif points[0][1] == points[1][1]:\n    y = points[2][1]\nelse:\n    y = points[0][1]\n\nprint(x, y)\n']
2022-04-12 04:53:36.191269 size on output set 2
2022-04-12 04:53:36.191278 size on input set 2
2022-04-12 04:53:43.440556 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nlines = []\nfor i in range(3):\n    lines.append(input())\n\ndef get_coords(line):\n    coords = line.split()\n    return (int(coords[0]), int(coords[1]))\n\npoints = []\nfor line in lines:\n    points.append(get_coords(line))\n\nif points[0][0] == points[1][0]:\n    x = points[2][0] \nelse:\n    x = points[0][0]\n\nif points[0][1] == points[1][1]:\n    y = points[2][1]\nelse:\n    y = points[0][1]\n\nprint(x, y)\n"
    },
    {
      "index": 1,
      "text": "\nlines = []\nfor i in range(3):\n    lines.append(input())\n\ndef get_coords(line):\n    coords = line.split()\n    return [int(coords[0]), int(coords[1])]\n\npoints = []\nfor line in lines:\n    points.append(get_coords(line))\n\nif points[0][0] == points[1][0] and points[0][0] != points[2][0]:\n    x = points[2][0]\nelif points[0][0] == points[2][0] and points[0][0] != points[1][0]:\n    x = points[0][0]\nelif points[1][0] == points[2][0] and points[1][0] != points[0][0]:\n    x = points[0][0]\n\nif points[0][1] == points[1][1] and points[0][1] != points[2][1]:\n    y = points[2][1]\nelif points[0][1] == points[2][1] and points[0][1] != points[1][1]:\n    y = points[0][1]\nelif points[1][1] == points[2][1] and points[1][1] != points[0][1]:\n    y = points[0][1]\n\nprint(x, y)\n"
    }
  ],
  "created": 1649753616,
  "object": "edit"
}
2022-04-12 04:53:43.440758 fix syntax errors 2 ['\nlines = []\nfor i in range(3):\n    lines.append(input())\n\ndef get_coords(line):\n    coords = line.split()\n    return (int(coords[0]), int(coords[1]))\n\npoints = []\nfor line in lines:\n    points.append(get_coords(line))\n\nif points[0][0] == points[1][0]:\n    x = points[2][0] \nelse:\n    x = points[0][0]\n\nif points[0][1] == points[1][1]:\n    y = points[2][1]\nelse:\n    y = points[0][1]\n\nprint(x, y)\n', '\nlines = []\nfor i in range(3):\n    lines.append(input())\n\ndef get_coords(line):\n    coords = line.split()\n    return [int(coords[0]), int(coords[1])]\n\npoints = []\nfor line in lines:\n    points.append(get_coords(line))\n\nif points[0][0] == points[1][0] and points[0][0] != points[2][0]:\n    x = points[2][0]\nelif points[0][0] == points[2][0] and points[0][0] != points[1][0]:\n    x = points[0][0]\nelif points[1][0] == points[2][0] and points[1][0] != points[0][0]:\n    x = points[0][0]\n\nif points[0][1] == points[1][1] and points[0][1] != points[2][1]:\n    y = points[2][1]\nelif points[0][1] == points[2][1] and points[0][1] != points[1][1]:\n    y = points[0][1]\nelif points[1][1] == points[2][1] and points[1][1] != points[0][1]:\n    y = points[0][1]\n\nprint(x, y)\n']
2022-04-12 04:53:45.914295 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nlines = []\nfor i in range(3):\n    lines.append(input())\n\ndef get_coords(line):\n    coords = line.split()\n    return (int(coords[0]), int(coords[1]))\n\npoints = []\nfor line in lines:\n    points.append(get_coords(line))\n\nif points[0][0] == points[1][0]:\n    x = points[2][0]\nelse:\n    x = points[0][0]\n\nif points[0][1] == points[1][1]:\n    y = points[2][1]\nelse:\n    y = points[0][1]\n\nprint(x, y)\n"
    },
    {
      "index": 1,
      "text": "\n\nlines = []\nfor i in range(3):\n    lines.append(input())\n\ndef get_coords(line):\n    coords = line.split()\n    return (int(coords[0]), int(coords[1]))\n\npoints = []\nfor line in lines:\n    points.append(get_coords(line))\n\nif points[0][0] == points[1][0]:\n    x = points[2][0]\nelse:\n    x = points[0][0]\n\nif points[0][1] == points[1][1]:\n    y = points[2][1]\nelse:\n    y = points[0][1]\n\nprint(x, y)\n"
    }
  ],
  "created": 1649753623,
  "object": "edit"
}
2022-04-12 04:53:45.914483 fix syntax errors 2 ['\nlines = []\nfor i in range(3):\n    lines.append(input())\n\ndef get_coords(line):\n    coords = line.split()\n    return (int(coords[0]), int(coords[1]))\n\npoints = []\nfor line in lines:\n    points.append(get_coords(line))\n\nif points[0][0] == points[1][0]:\n    x = points[2][0]\nelse:\n    x = points[0][0]\n\nif points[0][1] == points[1][1]:\n    y = points[2][1]\nelse:\n    y = points[0][1]\n\nprint(x, y)\n', '\n\nlines = []\nfor i in range(3):\n    lines.append(input())\n\ndef get_coords(line):\n    coords = line.split()\n    return (int(coords[0]), int(coords[1]))\n\npoints = []\nfor line in lines:\n    points.append(get_coords(line))\n\nif points[0][0] == points[1][0]:\n    x = points[2][0]\nelse:\n    x = points[0][0]\n\nif points[0][1] == points[1][1]:\n    y = points[2][1]\nelse:\n    y = points[0][1]\n\nprint(x, y)\n']
2022-04-12 04:53:45.914515 size on output set 4
2022-04-12 04:53:45.914539 num operations 2
2022-04-12 04:53:45.914547 size on input set 1
2022-04-12 04:53:49.073958 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # Get inputs\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n\n    # Calculate the final X and Y values\n    x4 = 0\n    y4 = 0\n    if x1 == x2:\n        x4 = x3\n    elif x1 == x3:\n        x4 = x2\n    else:\n        x4 = x1\n\n    if y1 == y2:\n        y4 = y3\n    elif y1 == y3:\n        y4 = y2\n    else:\n        y4 = y1\n\n    # Print the final X and Y values\n    print(x4, y4)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # Get inputs\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n\n    # Calculate the final X and Y values\n    x4 = 0\n    y4 = 0\n    if x1 == x2:\n        x4 = x3\n    elif x1 == x3:\n        x4 = x2\n    else:\n        x4 = x1\n\n    if y1 == y2:\n        y4 = y3\n    elif y1 == y3:\n        y4 = y2\n    else:\n        y4 = y1\n\n    # Print the final X and Y values\n    print(x4, y4)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649753626,
  "object": "edit"
}
2022-04-12 04:53:49.074057 fix spelling mistakes 2 ['\n\ndef main():\n    # Get inputs\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n\n    # Calculate the final X and Y values\n    x4 = 0\n    y4 = 0\n    if x1 == x2:\n        x4 = x3\n    elif x1 == x3:\n        x4 = x2\n    else:\n        x4 = x1\n\n    if y1 == y2:\n        y4 = y3\n    elif y1 == y3:\n        y4 = y2\n    else:\n        y4 = y1\n\n    # Print the final X and Y values\n    print(x4, y4)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # Get inputs\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n\n    # Calculate the final X and Y values\n    x4 = 0\n    y4 = 0\n    if x1 == x2:\n        x4 = x3\n    elif x1 == x3:\n        x4 = x2\n    else:\n        x4 = x1\n\n    if y1 == y2:\n        y4 = y3\n    elif y1 == y3:\n        y4 = y2\n    else:\n        y4 = y1\n\n    # Print the final X and Y values\n    print(x4, y4)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 04:53:49.074074 size on output set 1
2022-04-12 04:53:49.074077 size on input set 1
2022-04-12 04:53:54.902829 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    # Get inputs\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n\n    # Calculate the final X and Y values\n    x4 = 0\n    y4 = 0\n    if x1 == x2:\n        x4 = x3\n    elif x1 == x3:\n        x4 = x2\n    else:\n        x4 = x1\n\n    if y1 == y2:\n        y4 = y3\n    elif y1 == y3:\n        y4 = y2\n    else:\n        y4 = y1\n\n    # Print the final X and Y values\n    print(x4, y4)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # Get inputs\n    x1, y1 = map(int, input().split())  # first point\n    x2, y2 = map(int, input().split())  # second point\n    x3, y3 = map(int, input().split())  # third point\n\n    # Calculate the final X and Y values\n    x4 = 0  # final X value\n    y4 = 0  # final Y value\n\n    # Calculate the final X value\n    if x1 == x2:\n        x4 = x3\n        x4 = x1\n\n    # Calculate the final Y value\n    elif x1 == x3:\n        x4 = x2\n    else:\n        x4 = x1\n\n    if y1 == y2:\n        y4 = y3\n    elif y1 == y3:\n        y4 = y2\n    else:  # y1 == y2\n        y4 = y3\n\n    # Print the final X and Y values\n    print(x4, y4)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649753629,
  "object": "edit"
}
2022-04-12 04:53:54.902953 fix syntax errors 2 ['\ndef main():\n    # Get inputs\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    x3, y3 = map(int, input().split())\n\n    # Calculate the final X and Y values\n    x4 = 0\n    y4 = 0\n    if x1 == x2:\n        x4 = x3\n    elif x1 == x3:\n        x4 = x2\n    else:\n        x4 = x1\n\n    if y1 == y2:\n        y4 = y3\n    elif y1 == y3:\n        y4 = y2\n    else:\n        y4 = y1\n\n    # Print the final X and Y values\n    print(x4, y4)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # Get inputs\n    x1, y1 = map(int, input().split())  # first point\n    x2, y2 = map(int, input().split())  # second point\n    x3, y3 = map(int, input().split())  # third point\n\n    # Calculate the final X and Y values\n    x4 = 0  # final X value\n    y4 = 0  # final Y value\n\n    # Calculate the final X value\n    if x1 == x2:\n        x4 = x3\n        x4 = x1\n\n    # Calculate the final Y value\n    elif x1 == x3:\n        x4 = x2\n    else:\n        x4 = x1\n\n    if y1 == y2:\n        y4 = y3\n    elif y1 == y3:\n        y4 = y2\n    else:  # y1 == y2\n        y4 = y3\n\n    # Print the final X and Y values\n    print(x4, y4)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 04:53:54.903021 size on output set 2
