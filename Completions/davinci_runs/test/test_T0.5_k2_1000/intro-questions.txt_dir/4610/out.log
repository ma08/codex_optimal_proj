2022-04-09 21:06:06.795823 """
Takahashi has N balls. Initially, an integer A_i is written on the i-th ball.
He would like to rewrite the integer on some balls so that there are at most K different integers written on the N balls.
Find the minimum number of balls that Takahashi needs to rewrite the integers on them.

-----Constraints-----
 - 1 \leq K \leq N \leq 200000
 - 1 \leq A_i \leq N
 - All input values are integers.

-----Input-----
Input is given from Standard Input in the following format:
N K
A_1 A_2 ... A_N

-----Output-----
Print the minimum number of balls that Takahashi needs to rewrite the integers on them.

-----Sample Input-----
5 2
1 1 2 2 5

-----Sample Output-----
1

For example, if we rewrite the integer on the fifth ball to 2, there are two different integers written on the balls: 1 and 2.
On the other hand, it is not possible to rewrite the integers on zero balls so that there are at most two different integers written on the balls, so we should print 1.
"""
2022-04-09 21:06:06.795844 --------------------------
2022-04-09 21:06:21.686105 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    N, K = map(int, input().split())\n    A = list(map(int, input().split()))\n    diff = [0] * N\n    for i in range(N):\n        if A[i] != i+1:\n            diff[A[i]-1] += 1\n    diff.sort()\n    ans = 0\n    for i in range(N-K):\n        ans += diff[i]\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# \u8f9e\u66f8\u578b\u306b\u91cd\u8907\u3057\u306a\u3044\u6570\u5b57\u3092\u683c\u7d0d\ndic = {}\nfor i in range(n):\n    if a[i] not in dic:\n        dic[a[i]] = 1\n    else:\n        dic[a[i]] += 1\n\n# \u8f9e\u66f8\u578b\u3092\u30ea\u30b9\u30c8\u306b\u5909\u63db\u3057\u3001\u5024\u304c\u5927\u304d\u3044\u9806\u306b\u30bd\u30fc\u30c8\ndic = sorted(dic.items(), key=lambda x:x[1], reverse=True)\n\n# \u5024\u306e\u548c\u3092\u53d6\u5f97\nsum_dic = 0\nfor i in range(len(dic)):\n    sum_dic += dic[i][1]\n\n# \u91cd\u8907\u3057\u305f\u6570\u5b57\u306e\u5024\u304ck\u4ee5\u4e0b\u306b\u306a\u308b\u307e\u3067\u6e1b\u3089\u3059\nwhile len(dic) > k:\n    sum_dic -= dic[len(dic)-1][1]\n    dic.pop()\n\nprint(n - sum_dic)"
    }
  ],
  "created": 1649552767,
  "id": "cmpl-4vGJjv6GIf0jx9cpiUuN4v1rLQcr3",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 21:06:21.686890 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    N, K = map(int, input().split())\n    A = list(map(int, input().split()))\n    diff = [0] * N\n    for i in range(N):\n        if A[i] != i+1:\n            diff[A[i]-1] += 1\n    diff.sort()\n    ans = 0\n    for i in range(N-K):\n        ans += diff[i]\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 21:06:21.687239 REASON stop
2022-04-09 21:06:21.689270 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# \u8f9e\u66f8\u578b\u306b\u91cd\u8907\u3057\u306a\u3044\u6570\u5b57\u3092\u683c\u7d0d\ndic = {}\nfor i in range(n):\n    if a[i] not in dic:\n        dic[a[i]] = 1\n    else:\n        dic[a[i]] += 1\n\n# \u8f9e\u66f8\u578b\u3092\u30ea\u30b9\u30c8\u306b\u5909\u63db\u3057\u3001\u5024\u304c\u5927\u304d\u3044\u9806\u306b\u30bd\u30fc\u30c8\ndic = sorted(dic.items(), key=lambda x:x[1], reverse=True)\n\n# \u5024\u306e\u548c\u3092\u53d6\u5f97\nsum_dic = 0\nfor i in range(len(dic)):\n    sum_dic += dic[i][1]\n\n# \u91cd\u8907\u3057\u305f\u6570\u5b57\u306e\u5024\u304ck\u4ee5\u4e0b\u306b\u306a\u308b\u307e\u3067\u6e1b\u3089\u3059\nwhile len(dic) > k:\n    sum_dic -= dic[len(dic)-1][1]\n    dic.pop()\n\nprint(n - sum_dic)"
}
2022-04-09 21:06:21.689426 REASON stop
