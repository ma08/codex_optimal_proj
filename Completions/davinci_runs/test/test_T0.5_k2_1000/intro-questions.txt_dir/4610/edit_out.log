2022-04-11 21:23:39.759633 num operations 2
2022-04-11 21:23:39.759677 size on input set 1
2022-04-11 21:23:45.675852 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    N = int(input())\n    A = [int(input()) for _ in range(N)]\n    A.sort()\n    print(A[-1] - A[0])\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    N, K = map(int, input().split())\n    A = list(map(int, input().split()))\n    diff = [0] * (N+1)\n    for i in range(N):\n        diff[A[i]] += 1\n    diff.sort()\n    ans = 0\n    for i in range(N-K):\n        ans += diff[i]\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649726620,
  "object": "edit"
}
2022-04-11 21:23:45.676295 fix spelling mistakes 2 ["\n\ndef main():\n    N = int(input())\n    A = [int(input()) for _ in range(N)]\n    A.sort()\n    print(A[-1] - A[0])\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, K = map(int, input().split())\n    A = list(map(int, input().split()))\n    diff = [0] * (N+1)\n    for i in range(N):\n        diff[A[i]] += 1\n    diff.sort()\n    ans = 0\n    for i in range(N-K):\n        ans += diff[i]\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 21:23:45.676362 size on output set 2
2022-04-11 21:23:45.676375 size on input set 2
2022-04-11 21:23:48.763859 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    N, K = map(int, input().split())\n    A = list(map(int, input().split()))\n    diff = [0] * (N + 1)\n    for i in range(N):\n        diff[A[i]] += 1\n    diff.sort()\n    ans = 0\n    for i in range(N - K):\n        ans += diff[i]\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    N, K = map(int, input().split())\n    A = list(map(int, input().split()))\n    diff = [0] * (N + 1)\n    for i in range(N):\n        diff[A[i]] += 1\n    diff.sort()\n    ans = 0\n    for i in range(N - K):\n        ans += diff[i]\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649726625,
  "object": "edit"
}
2022-04-11 21:23:48.764032 fix syntax errors 2 ["\n\ndef main():\n    N, K = map(int, input().split())\n    A = list(map(int, input().split()))\n    diff = [0] * (N + 1)\n    for i in range(N):\n        diff[A[i]] += 1\n    diff.sort()\n    ans = 0\n    for i in range(N - K):\n        ans += diff[i]\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, K = map(int, input().split())\n    A = list(map(int, input().split()))\n    diff = [0] * (N + 1)\n    for i in range(N):\n        diff[A[i]] += 1\n    diff.sort()\n    ans = 0\n    for i in range(N - K):\n        ans += diff[i]\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 21:23:51.995283 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    N = int(input())\n    A = [int(input()) for _ in range(N)]\n    A.sort()\n    print(A[-1] - A[0])\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    N = int(input())\n    A = [int(input()) for i in range(N)]\n    print(max(A) - min(A))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649726629,
  "object": "edit"
}
2022-04-11 21:23:51.995511 fix syntax errors 2 ["\ndef main():\n    N = int(input())\n    A = [int(input()) for _ in range(N)]\n    A.sort()\n    print(A[-1] - A[0])\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N = int(input())\n    A = [int(input()) for i in range(N)]\n    print(max(A) - min(A))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 21:23:51.995534 size on output set 3
2022-04-11 21:23:51.995560 num operations 2
2022-04-11 21:23:51.995565 size on input set 1
2022-04-11 21:23:55.236212 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# \u8f9e\u66f8\u578b\u306b\u91cd\u8907\u3057\u305f\u6570\u5b57\u3092\u683c\u7d0d\ndic = {}\nfor i in range(n):\n    if a[i] not in dic:\n        dic[a[i]] = 1\n    else:\n        dic[a[i]] += 1\n\n# \u8f9e\u66f8\u578b\u3092\u30ea\u30b9\u30c8\u306b\u5909\u63db\u3057\u3001\u5024\u304c\u5927\u304d\u3044\u9806\u306b\u30bd\u30fc\u30c8\ndic = sorted(dic.items(), key=lambda x:x[1], reverse=True)\n\n# \u5024\u306e\u548c\u3092\u53d6\u5f97\nsum_dic = 0\nfor i in range(len(dic)):\n    sum_dic += dic[i][1]\n\n# \u91cd\u8907\u3057\u305f\u6570\u5b57\u306e\u5024\u304ck\u4ee5\u4e0b\u306b\u306a\u308b\u307e\u3067\u6e1b\u3089\u3059\nwhile len(dic) > k:\n    sum_dic -= dic[len(dic)-1][1]\n    dic.pop()\n\nprint(n - sum_dic)\n"
    },
    {
      "index": 1,
      "text": "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# \u8f9e\u66f8\u578b\u306b\u91cd\u8907\u3059\u308b\u6570\u5b57\u3092\u683c\u7d0d\ndic = {}\nfor i in range(n):\n    if a[i] not in dic:\n        dic[a[i]] = 1\n    else:\n        dic[a[i]] += 1\n\n# \u8f9e\u66f8\u578b\u3092\u30ea\u30b9\u30c8\u306b\u5909\u63db\u3057\u3001\u5024\u304c\u5927\u304d\u3044\u9806\u306b\u30bd\u30fc\u30c8\ndic = sorted(dic.items(), key=lambda x:x[1], reverse=True)\n\n# \u5024\u306e\u548c\u3092\u53d6\u5f97\nsum_dic = 0\nfor i in range(len(dic)):\n    sum_dic += dic[i][1]\n\n# \u91cd\u8907\u3057\u305f\u6570\u5b57\u306e\u5024\u304ck\u4ee5\u4e0b\u306b\u306a\u308b\u307e\u3067\u6e1b\u3089\u3059\nwhile len(dic) > k:\n    sum_dic -= dic[len(dic)-1][1]\n    dic.pop()\n\nprint(n - sum_dic)\n"
    }
  ],
  "created": 1649726632,
  "object": "edit"
}
2022-04-11 21:23:55.236490 fix spelling mistakes 2 ['\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# 辞書型に重複した数字を格納\ndic = {}\nfor i in range(n):\n    if a[i] not in dic:\n        dic[a[i]] = 1\n    else:\n        dic[a[i]] += 1\n\n# 辞書型をリストに変換し、値が大きい順にソート\ndic = sorted(dic.items(), key=lambda x:x[1], reverse=True)\n\n# 値の和を取得\nsum_dic = 0\nfor i in range(len(dic)):\n    sum_dic += dic[i][1]\n\n# 重複した数字の値がk以下になるまで減らす\nwhile len(dic) > k:\n    sum_dic -= dic[len(dic)-1][1]\n    dic.pop()\n\nprint(n - sum_dic)\n', '\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# 辞書型に重複する数字を格納\ndic = {}\nfor i in range(n):\n    if a[i] not in dic:\n        dic[a[i]] = 1\n    else:\n        dic[a[i]] += 1\n\n# 辞書型をリストに変換し、値が大きい順にソート\ndic = sorted(dic.items(), key=lambda x:x[1], reverse=True)\n\n# 値の和を取得\nsum_dic = 0\nfor i in range(len(dic)):\n    sum_dic += dic[i][1]\n\n# 重複した数字の値がk以下になるまで減らす\nwhile len(dic) > k:\n    sum_dic -= dic[len(dic)-1][1]\n    dic.pop()\n\nprint(n - sum_dic)\n']
2022-04-11 21:23:55.236554 size on output set 2
2022-04-11 21:23:55.236562 size on input set 2
2022-04-11 21:23:57.244480 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# \u8f9e\u66f8\u578b\u306b\u91cd\u8907\u3057\u305f\u6570\u5b57\u3092\u683c\u7d0d\ndic = {}\nfor i in range(n):\n    if a[i] not in dic:\n        dic[a[i]] = 1\n    else:\n        dic[a[i]] += 1\n\n# \u8f9e\u66f8\u578b\u3092\u30ea\u30b9\u30c8\u306b\u5909\u63db\u3057\u3001\u5024\u304c\u5927\u304d\u3044\u9806\u306b\u30bd\u30fc\u30c8\ndic = sorted(dic.items(), key=lambda x:x[1], reverse=True)\n\n# \u5024\u306e\u548c\u3092\u53d6\u5f97\nsum_dic = 0\nfor i in range(len(dic)):\n    sum_dic += dic[i][1]\n\n# \u91cd\u8907\u3057\u305f\u6570\u5b57\u306e\u5024\u304ck\u4ee5\u4e0b\u306b\u306a\u308b\u307e\u3067\u6e1b\u3089\u3059\nwhile len(dic) > k:\n    sum_dic -= dic[len(dic)-1][1]\n    dic.pop()\n\nprint(n - sum_dic)\n"
    },
    {
      "index": 1,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# \u8f9e\u66f8\u578b\u306b\u91cd\u8907\u3057\u305f\u6570\u5b57\u3092\u683c\u7d0d\ndic = {}\nfor i in range(n):\n    if a[i] not in dic:\n        dic[a[i]] = 1\n    else:\n        dic[a[i]] += 1\n\n# \u8f9e\u66f8\u578b\u3092\u30ea\u30b9\u30c8\u306b\u5909\u63db\u3057\u3001\u5024\u304c\u5927\u304d\u3044\u9806\u306b\u30bd\u30fc\u30c8\ndic = sorted(dic.items(), key=lambda x:x[1], reverse=True)\n\n# \u5024\u306e\u548c\u3092\u53d6\u5f97\nsum_dic = 0\nfor i in range(len(dic)):\n    sum_dic += dic[i][1]\n\n# \u91cd\u8907\u3057\u305f\u6570\u5b57\u306e\u5024\u304ck\u4ee5\u4e0b\u306b\u306a\u308b\u307e\u3067\u6e1b\u3089\u3059\nwhile len(dic) > k:\n    sum_dic -= dic[len(dic)-1][1]\n    dic.pop()\n\nprint(n - sum_dic)\n"
    }
  ],
  "created": 1649726635,
  "object": "edit"
}
2022-04-11 21:23:57.244665 fix syntax errors 2 ['\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# 辞書型に重複した数字を格納\ndic = {}\nfor i in range(n):\n    if a[i] not in dic:\n        dic[a[i]] = 1\n    else:\n        dic[a[i]] += 1\n\n# 辞書型をリストに変換し、値が大きい順にソート\ndic = sorted(dic.items(), key=lambda x:x[1], reverse=True)\n\n# 値の和を取得\nsum_dic = 0\nfor i in range(len(dic)):\n    sum_dic += dic[i][1]\n\n# 重複した数字の値がk以下になるまで減らす\nwhile len(dic) > k:\n    sum_dic -= dic[len(dic)-1][1]\n    dic.pop()\n\nprint(n - sum_dic)\n', '\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# 辞書型に重複した数字を格納\ndic = {}\nfor i in range(n):\n    if a[i] not in dic:\n        dic[a[i]] = 1\n    else:\n        dic[a[i]] += 1\n\n# 辞書型をリストに変換し、値が大きい順にソート\ndic = sorted(dic.items(), key=lambda x:x[1], reverse=True)\n\n# 値の和を取得\nsum_dic = 0\nfor i in range(len(dic)):\n    sum_dic += dic[i][1]\n\n# 重複した数字の値がk以下になるまで減らす\nwhile len(dic) > k:\n    sum_dic -= dic[len(dic)-1][1]\n    dic.pop()\n\nprint(n - sum_dic)\n']
2022-04-11 21:23:59.327619 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# \u8f9e\u66f8\u578b\u306b\u91cd\u8907\u3059\u308b\u6570\u5b57\u3092\u683c\u7d0d\ndic = {}\nfor i in range(n):\n    if a[i] not in dic:\n        dic[a[i]] = 1\n    else:\n        dic[a[i]] += 1\n\n# \u8f9e\u66f8\u578b\u3092\u30ea\u30b9\u30c8\u306b\u5909\u63db\u3057\u3001\u5024\u304c\u5927\u304d\u3044\u9806\u306b\u30bd\u30fc\u30c8\ndic = sorted(dic.items(), key=lambda x:x[1], reverse=True)\n\n# \u5024\u306e\u548c\u3092\u53d6\u5f97\nsum_dic = 0\nfor i in range(len(dic)):\n    sum_dic += dic[i][1]\n\n# \u91cd\u8907\u3057\u305f\u6570\u5b57\u306e\u5024\u304ck\u4ee5\u4e0b\u306b\u306a\u308b\u307e\u3067\u6e1b\u3089\u3059\nwhile len(dic) > k:\n    sum_dic -= dic[len(dic)-1][1]\n    dic.pop()\n\nprint(n - sum_dic)\n"
    },
    {
      "index": 1,
      "text": "\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# \u8f9e\u66f8\u578b\u306b\u91cd\u8907\u3059\u308b\u6570\u5b57\u3092\u683c\u7d0d\ndic = {}\nfor i in range(n):\n    if a[i] not in dic:\n        dic[a[i]] = 1\n    else:\n        dic[a[i]] += 1\n\n# \u8f9e\u66f8\u578b\u3092\u30ea\u30b9\u30c8\u306b\u5909\u63db\u3057\u3001\u5024\u304c\u5927\u304d\u3044\u9806\u306b\u30bd\u30fc\u30c8\ndic = sorted(dic.items(), key=lambda x:x[1], reverse=True)\n\n# \u5024\u306e\u548c\u3092\u53d6\u5f97\nsum_dic = 0\nfor i in range(len(dic)):\n    sum_dic += dic[i][1]\n\n# \u91cd\u8907\u3057\u305f\u6570\u5b57\u306e\u5024\u304ck\u4ee5\u4e0b\u306b\u306a\u308b\u307e\u3067\u6e1b\u3089\u3059\nwhile len(dic) > k:\n    sum_dic -= dic[len(dic)-1][1]\n    dic.pop()\n\nprint(n - sum_dic)\n"
    }
  ],
  "created": 1649726637,
  "object": "edit"
}
2022-04-11 21:23:59.327817 fix syntax errors 2 ['\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# 辞書型に重複する数字を格納\ndic = {}\nfor i in range(n):\n    if a[i] not in dic:\n        dic[a[i]] = 1\n    else:\n        dic[a[i]] += 1\n\n# 辞書型をリストに変換し、値が大きい順にソート\ndic = sorted(dic.items(), key=lambda x:x[1], reverse=True)\n\n# 値の和を取得\nsum_dic = 0\nfor i in range(len(dic)):\n    sum_dic += dic[i][1]\n\n# 重複した数字の値がk以下になるまで減らす\nwhile len(dic) > k:\n    sum_dic -= dic[len(dic)-1][1]\n    dic.pop()\n\nprint(n - sum_dic)\n', '\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# 辞書型に重複する数字を格納\ndic = {}\nfor i in range(n):\n    if a[i] not in dic:\n        dic[a[i]] = 1\n    else:\n        dic[a[i]] += 1\n\n# 辞書型をリストに変換し、値が大きい順にソート\ndic = sorted(dic.items(), key=lambda x:x[1], reverse=True)\n\n# 値の和を取得\nsum_dic = 0\nfor i in range(len(dic)):\n    sum_dic += dic[i][1]\n\n# 重複した数字の値がk以下になるまで減らす\nwhile len(dic) > k:\n    sum_dic -= dic[len(dic)-1][1]\n    dic.pop()\n\nprint(n - sum_dic)\n']
2022-04-11 21:23:59.327867 size on output set 2
