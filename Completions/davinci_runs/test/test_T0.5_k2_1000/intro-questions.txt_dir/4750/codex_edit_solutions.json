["\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    a = l1\n    b = l2\n    if l1 == l2:\n        b = r2\n\n    print(a, b)\n", "#!/usr/bin/env python3\n\nn = int(input(\"\"))\n\nfor i in range(n):\n    a, b, c, d = map(int, input(\"\").split())\n    if a == b:\n        print(a, c)\n    elif c == d:\n        print(a, c)\n    elif a == c:\n        print(a, b)\n    elif b == d:\n        print(a, b)\n    elif a == d:\n        print(a, c)\n    elif b == c:\n        print(a, b)\n    else:\n        print(a, c)\n", "\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split()) \n\n    if l1 == r1:\n        a = l1\n        b = l2\n    elif l2 == r2:\n        a = l1\n        b = l2\n    elif l1 == l2:\n        a = l1\n        b = r2\n    elif r1 == r2:\n        a = l1\n        b = r2\n    elif l1 == r2:\n        a = l1\n        b = l2\n    elif r1 == l2:\n        a = l1\n        b = r2\n    else:\n        a = l1\n        b = l2\n\n    print(a, b)\n", "\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        ans += b[a[i] - 1]\n        if i > 0 and a[i] - a[i - 1] == 1:\n            ans += c[a[i - 1] - 1]\n    print(ans)\n\nsolve()\n", "# SOLUTION 1\n\nq = int(input())\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n    if l1 == r1: print(l1, l2)\n    else: print(l1, r2)\n", "\n#\n# SOLUTION 1\n\nq = int(input())\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n    if l1 == r1:\n        print(l1, l2)\n    else:\n        print(l1, r2)\n", "\n\ndef two_segments():\n    q = int(input())\n    for i in range(q):\n        l1, r1, l2, r2 = map(int, input().split())\n        if l1 == r1:\n            print(l1, l2)\n        elif l2 == r2:\n            print(l1, l2)\n        else:\n            print(l1, l2 + 1)\n\ntwo_segments()\n", "\n\n# SOLUTION\n\nq = int(input())\nfor _ in range(q):\n    a, b, c, d = map(int, input().split())\n    if a == b:\n        print(a, c)\n    else:\n        print(a, d)\n", "\n\n# Solution\nfor i in range(int(input())):\n    l1, r1, l2, r2 = map(int, input().split())\n    print(l1, l2)\n", "\n#\n# Solution\n\n\"\"\"\n1. If ranges are not overlapping, then a = l1, b = r1\n\n2. If ranges are overlapping, then a = l1, b = r1\n\n3. If ranges are identical, then a = l1, b = r2\n\"\"\"\n\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 < l2:\n        a = l1\n        b = l2\n    else:\n        a = l2\n        b = l1\n\n    print(a, b)\n", "\n# Solution\n\n\"\"\"\n1. If ranges are not overlapping, then a = l1, b = r1\n\n2. If ranges are overlapping, then a = l1, b = r2 (or l2, r1)\n\n3. If ranges are identical, then a = l1, b = r1\n\"\"\"\n\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 < l2:\n        a = l1\n        b = l2\n    else:\n        a = l2\n        b = l1\n\n    print(a, b)\n", "\n\n# Solution \nfor i in range(int(input())):\n    l1, l2, r1, r2 = map(int, input().split())\n    print(l1, l2)\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Tue Apr  7 16:14:09 2020\n@author: ritambasu\n\"\"\"\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom scipy.integrate import odeint\n#function that returns dy/dt\ndef model(y,t):\n    k=0.3\n    dydt= -k*y\n    return dydt\n#initial condition\ny0=5\n#time points\nt=np.linspace(0,20)\n#solve ODE\ny=odeint(model,y0,t)\n#plot results\nplt.plot(t,y)\nplt.xlabel('time')\nplt.ylabel('y(t)')\nplt.show()\n", "n = int(input())\n\nfor i in range(n):\n    a, b, c, d = map(int, input().split())\n    if a == b:\n        print(a, c, end=' ')\n    elif c == d:\n        print(a, c, end=' ')\n    elif a == c:\n        print(a, b, end=' ')\n    elif b == d:\n        print(a, b, end=' ')\n    elif a == d:\n        print(a, c, end=' ')\n    elif b == c:\n        print(a, b, end=' ')\n    else:\n        print(a, c, end=' ')\n", "q = int(input())\nfor i in range(q):\n    l1, r1, l2, r2 = [int(x) for x in input().split()]\n    if r1 == l2:\n        print(r1, l2)\n    else:\n        print(l1, l2)\n", "\n\n# SOLUTION\n\n# q = int(input())\n# for _ in range(q):\n#     l1, r1, l2, r2 = map(int, input().split())\n#     if l1 == r1:\n#         print(l1, l2)\n#     else:\n#         print(l1, r2)\n", "\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 == r2:\n        print(l1, l2)\n    else:\n        print(l1, r2)\n\n    print(a, b)\n", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[n//2-1])\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef two_segments_intersection(l1, r1, l2, r2):\n    q = int(input())\n    for i in range(q):\n        l1, r1, l2, r2 = map(int, input().split())\n        if l1 == r1:\n            print(l1, l2)\n        elif l2 == r2:\n            print(l1, l2)\n        else:\n            print(l1, l2 + 1)\n\ntwo_segments_intersection(l1, r1, l2, r2)\n", "\nn = int(input())\n\nfor i in range(n):\n    a, b, c, d = map(int, input().split())\n    print(a, c)\n", "# Solution\n\n\"\"\"\n1. If ranges are not overlapping, then a = l1, b = r1\n\n2. If ranges are overlapping, then a = l1, b = r1\n\n3. If ranges are identical, then a = l1, b = r2\n\"\"\"\n\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 < l2:\n        a = l1\n        b = l2\n    else:\n        a = l2\n        b = l1\n\n    print(a, b)\n", "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Solution\n", "#!/usr/bin/env python3\n\nn = int(input())\n\nfor i in range(n):\n    a, b, c, d = map(int, input().split())\n    if a == b:\n        print(a, c, sep=' ')\n    elif c == d:\n        print(a, c, sep=' ')\n    elif a == c:\n        print(a, b, sep=' ')\n    elif b == d:\n        print(a, b, sep=' ')\n    elif a == d:\n        print(a, c, sep=' ')\n    elif b == c:\n        print(a, b, sep=' ')\n    else:\n        print(a, c, sep=' ')\n", "\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        l1, r1, l2, r2 = map(int, input().split())\n        if l1 == r1:\n            print(l1, l2)\n        else:\n            print(l1, l2+1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# Solution \n", "q = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    a = l1\n    b = l2\n    if l1 == r1 and l2 == r2:\n        if l1 == l2:\n            a = l1\n            b = r2\n        else:\n            a = l1\n            b = l2\n    elif l1 == r1:\n        if l1 == l2:\n            a = l1\n            b = r2\n        elif l1 == r2:\n            a = l1\n            b = l2\n    elif l2 == r2:\n        if l2 == l1:\n            a = l1\n            b = r2\n        elif l2 == r1:\n            a = l1\n            b = r2\n\n    print(a, b)\n", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[n // 2])\n\nif __name__ == \"__main__\":\n    main()\n"]