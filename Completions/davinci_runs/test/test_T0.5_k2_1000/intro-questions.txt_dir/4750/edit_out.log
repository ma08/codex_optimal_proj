2022-04-11 22:56:41.607680 num operations 2
2022-04-11 22:56:41.607726 size on input set 1
2022-04-11 22:56:46.354852 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[n//2])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        l1, r1, l2, r2 = map(int, input().split()) \n        if l1 == r1: \n            print(l1, l2) \n        else:\n            print(l1, l2+1) \n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649732201,
  "object": "edit"
}
2022-04-11 22:56:46.355222 fix spelling mistakes 2 ['\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[n//2])\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        l1, r1, l2, r2 = map(int, input().split()) \n        if l1 == r1: \n            print(l1, l2) \n        else:\n            print(l1, l2+1) \n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 22:56:46.355263 size on output set 2
2022-04-11 22:56:46.355271 size on input set 2
2022-04-11 22:56:48.762737 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[n//2-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[n // 2])\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649732206,
  "object": "edit"
}
2022-04-11 22:56:48.763054 fix syntax errors 2 ['\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[n//2-1])\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(a[n // 2])\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 22:56:53.218825 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        l1, r1, l2, r2 = map(int, input().split())\n        if l1 == r1:\n            print(l1, l2)\n        else:\n            print(l1, l2+1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        l1, r1, l2, r2 = map(int, input().split())\n        if l1 == r1:\n            print(l1, l2)\n        else:\n            print(l1, l2+1)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649732208,
  "object": "edit"
}
2022-04-11 22:56:53.219568 fix syntax errors 2 ['\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        l1, r1, l2, r2 = map(int, input().split())\n        if l1 == r1:\n            print(l1, l2)\n        else:\n            print(l1, l2+1)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        l1, r1, l2, r2 = map(int, input().split())\n        if l1 == r1:\n            print(l1, l2)\n        else:\n            print(l1, l2+1)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 22:56:53.219688 size on output set 3
2022-04-11 22:56:53.219744 num operations 2
2022-04-11 22:56:53.219752 size on input set 1
2022-04-11 22:56:58.858457 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Solution\n\n\"\"\"\n1. If ranges are not overlapping, then a = l1, b = r1\n\n2. If ranges are overlapping, then a = l1, b = r1\n\n3. If ranges are identical, then a = l1, b = r2\n\"\"\"\n\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 < l2:\n        a = l1\n        b = l2\n    else:\n        a = l2\n        b = l1\n\n    print(a, b)\n"
    },
    {
      "index": 1,
      "text": "\n\n# Solution\n\n\"\"\"\n1. If ranges are not overlapping, then a = l1, b = r1\n\n2. If ranges are overlapping, then a = l1, b = r2 (or l2, r1)\n\n3. If ranges are identical, then a = l1, b = r1\n\"\"\"\n\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 < l2:\n        a = l1\n        b = l2\n    else:\n        a = l2\n        b = l1\n\n    print(a, b)\n"
    }
  ],
  "created": 1649732213,
  "object": "edit"
}
2022-04-11 22:56:58.858702 fix spelling mistakes 2 ['\n\n# Solution\n\n"""\n1. If ranges are not overlapping, then a = l1, b = r1\n\n2. If ranges are overlapping, then a = l1, b = r1\n\n3. If ranges are identical, then a = l1, b = r2\n"""\n\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 < l2:\n        a = l1\n        b = l2\n    else:\n        a = l2\n        b = l1\n\n    print(a, b)\n', '\n\n# Solution\n\n"""\n1. If ranges are not overlapping, then a = l1, b = r1\n\n2. If ranges are overlapping, then a = l1, b = r2 (or l2, r1)\n\n3. If ranges are identical, then a = l1, b = r1\n"""\n\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 < l2:\n        a = l1\n        b = l2\n    else:\n        a = l2\n        b = l1\n\n    print(a, b)\n']
2022-04-11 22:56:58.858733 size on output set 2
2022-04-11 22:56:58.858738 size on input set 2
2022-04-11 22:57:00.934987 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# Solution\n\n\"\"\"\n1. If ranges are not overlapping, then a = l1, b = r1\n\n2. If ranges are overlapping, then a = l1, b = r1\n\n3. If ranges are identical, then a = l1, b = r2\n\"\"\"\n\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 < l2:\n        a = l1\n        b = l2\n    else:\n        a = l2\n        b = l1\n\n    print(a, b)\n"
    },
    {
      "index": 1,
      "text": "\n#\n# Solution\n\n\"\"\"\n1. If ranges are not overlapping, then a = l1, b = r1\n\n2. If ranges are overlapping, then a = l1, b = r1\n\n3. If ranges are identical, then a = l1, b = r2\n\"\"\"\n\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 < l2:\n        a = l1\n        b = l2\n    else:\n        a = l2\n        b = l1\n\n    print(a, b)\n"
    }
  ],
  "created": 1649732219,
  "object": "edit"
}
2022-04-11 22:57:00.935355 fix syntax errors 2 ['# Solution\n\n"""\n1. If ranges are not overlapping, then a = l1, b = r1\n\n2. If ranges are overlapping, then a = l1, b = r1\n\n3. If ranges are identical, then a = l1, b = r2\n"""\n\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 < l2:\n        a = l1\n        b = l2\n    else:\n        a = l2\n        b = l1\n\n    print(a, b)\n', '\n#\n# Solution\n\n"""\n1. If ranges are not overlapping, then a = l1, b = r1\n\n2. If ranges are overlapping, then a = l1, b = r1\n\n3. If ranges are identical, then a = l1, b = r2\n"""\n\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 < l2:\n        a = l1\n        b = l2\n    else:\n        a = l2\n        b = l1\n\n    print(a, b)\n']
2022-04-11 22:57:02.868452 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Solution\n\n\"\"\"\n1. If ranges are not overlapping, then a = l1, b = r1\n\n2. If ranges are overlapping, then a = l1, b = r2 (or l2, r1)\n\n3. If ranges are identical, then a = l1, b = r1\n\"\"\"\n\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 < l2:\n        a = l1\n        b = l2\n    else:\n        a = l2\n        b = l1\n\n    print(a, b)\n"
    },
    {
      "index": 1,
      "text": "\n# Solution\n\n\"\"\"\n1. If ranges are not overlapping, then a = l1, b = r1\n\n2. If ranges are overlapping, then a = l1, b = r2 (or l2, r1)\n\n3. If ranges are identical, then a = l1, b = r1\n\"\"\"\n\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 < l2:\n        a = l1\n        b = l2\n    else:\n        a = l2\n        b = l1\n\n    print(a, b)\n"
    }
  ],
  "created": 1649732221,
  "object": "edit"
}
2022-04-11 22:57:02.868699 fix syntax errors 2 ['\n# Solution\n\n"""\n1. If ranges are not overlapping, then a = l1, b = r1\n\n2. If ranges are overlapping, then a = l1, b = r2 (or l2, r1)\n\n3. If ranges are identical, then a = l1, b = r1\n"""\n\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 < l2:\n        a = l1\n        b = l2\n    else:\n        a = l2\n        b = l1\n\n    print(a, b)\n', '\n# Solution\n\n"""\n1. If ranges are not overlapping, then a = l1, b = r1\n\n2. If ranges are overlapping, then a = l1, b = r2 (or l2, r1)\n\n3. If ranges are identical, then a = l1, b = r1\n"""\n\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 < l2:\n        a = l1\n        b = l2\n    else:\n        a = l2\n        b = l1\n\n    print(a, b)\n']
2022-04-11 22:57:02.868727 size on output set 3
2022-04-11 22:57:02.868736 num operations 2
2022-04-11 22:57:02.868740 size on input set 1
2022-04-11 22:57:04.824566 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nq = int(input())\nfor i in range(q):\n    l1, r1, l2, r2 = [int(x) for x in input().split()]\n    if r1 == l2:\n        print(r1, l2)\n    else:\n        print(l1, l2)\n"
    },
    {
      "index": 1,
      "text": "\nq = int(input())\nfor i in range(q):\n    l1, r1, l2, r2 = [int(x) for x in input().split()]\n    if r1 == l2:\n        print(r1, l2)\n    else:\n        print(l1, l2)\n"
    }
  ],
  "created": 1649732223,
  "object": "edit"
}
2022-04-11 22:57:04.824868 fix spelling mistakes 2 ['\nq = int(input())\nfor i in range(q):\n    l1, r1, l2, r2 = [int(x) for x in input().split()]\n    if r1 == l2:\n        print(r1, l2)\n    else:\n        print(l1, l2)\n', '\nq = int(input())\nfor i in range(q):\n    l1, r1, l2, r2 = [int(x) for x in input().split()]\n    if r1 == l2:\n        print(r1, l2)\n    else:\n        print(l1, l2)\n']
2022-04-11 22:57:04.824897 size on output set 1
2022-04-11 22:57:04.824906 size on input set 1
2022-04-11 22:57:12.206879 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Tue Apr  7 16:14:09 2020\n@author: ritambasu\n\"\"\"\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom scipy.integrate import odeint\n#function that returns dy/dt\ndef model(y,t):\n    k=0.3\n    dydt= -k*y\n    return dydt\n#initial condition\ny0=5\n#time points\nt=np.linspace(0,20)\n#solve ODE\ny=odeint(model,y0,t)\n#plot results\nplt.plot(t,y)\nplt.xlabel('time')\nplt.ylabel('y(t)')\nplt.show()\n"
    },
    {
      "index": 1,
      "text": "q = int(input())\nfor i in range(q):\n    l1, r1, l2, r2 = [int(x) for x in input().split()]\n    if r1 == l2:\n        print(r1, l2)\n    else:\n        print(l1, l2)\n"
    }
  ],
  "created": 1649732225,
  "object": "edit"
}
2022-04-11 22:57:12.207093 fix syntax errors 2 ['#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n"""\nCreated on Tue Apr  7 16:14:09 2020\n@author: ritambasu\n"""\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom scipy.integrate import odeint\n#function that returns dy/dt\ndef model(y,t):\n    k=0.3\n    dydt= -k*y\n    return dydt\n#initial condition\ny0=5\n#time points\nt=np.linspace(0,20)\n#solve ODE\ny=odeint(model,y0,t)\n#plot results\nplt.plot(t,y)\nplt.xlabel(\'time\')\nplt.ylabel(\'y(t)\')\nplt.show()\n', 'q = int(input())\nfor i in range(q):\n    l1, r1, l2, r2 = [int(x) for x in input().split()]\n    if r1 == l2:\n        print(r1, l2)\n    else:\n        print(l1, l2)\n']
2022-04-11 22:57:12.207134 size on output set 2
2022-04-11 22:57:12.207153 num operations 2
2022-04-11 22:57:12.207166 size on input set 1
2022-04-11 22:57:14.814719 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef two_segments_intersection():\n    q = int(input())\n    for i in range(q):\n        l1, r1, l2, r2 = map(int, input().split())\n        if l1 == r1:\n            print(l1, l2)\n        elif l2 == r2:\n            print(l1, l2)\n        else:\n            print(l1, l2 + 1)\n\ntwo_segments_intersection()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef two_segments():\n    q = int(input())\n    for i in range(q):\n        l1, r1, l2, r2 = map(int, input().split())\n        if l1 == r1:\n            print(l1, l2)\n        elif l2 == r2:\n            print(l1, l2)\n        else:\n            print(l1, l2 + 1) \n\ntwo_segments()\n"
    }
  ],
  "created": 1649732232,
  "object": "edit"
}
2022-04-11 22:57:14.814917 fix spelling mistakes 2 ['\n\ndef two_segments_intersection():\n    q = int(input())\n    for i in range(q):\n        l1, r1, l2, r2 = map(int, input().split())\n        if l1 == r1:\n            print(l1, l2)\n        elif l2 == r2:\n            print(l1, l2)\n        else:\n            print(l1, l2 + 1)\n\ntwo_segments_intersection()\n', '\n\ndef two_segments():\n    q = int(input())\n    for i in range(q):\n        l1, r1, l2, r2 = map(int, input().split())\n        if l1 == r1:\n            print(l1, l2)\n        elif l2 == r2:\n            print(l1, l2)\n        else:\n            print(l1, l2 + 1) \n\ntwo_segments()\n']
2022-04-11 22:57:14.815033 size on output set 2
2022-04-11 22:57:14.815069 size on input set 2
2022-04-11 22:57:21.078199 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        ans += b[a[i] - 1]\n        if i > 0 and a[i] - a[i - 1] == 1:\n            ans += c[a[i - 1] - 1]\n    print(ans)\n\nsolve()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef two_segments_intersection(l1, r1, l2, r2):\n    q = int(input())\n    for i in range(q):\n        l1, r1, l2, r2 = map(int, input().split())\n        if l1 == r1:\n            print(l1, l2)\n        elif l2 == r2:\n            print(l1, l2)\n        else:\n            print(l1, l2 + 1)\n\ntwo_segments_intersection(l1, r1, l2, r2)\n"
    }
  ],
  "created": 1649732235,
  "object": "edit"
}
2022-04-11 22:57:21.078326 fix syntax errors 2 ['\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        ans += b[a[i] - 1]\n        if i > 0 and a[i] - a[i - 1] == 1:\n            ans += c[a[i - 1] - 1]\n    print(ans)\n\nsolve()\n', '\n\ndef two_segments_intersection(l1, r1, l2, r2):\n    q = int(input())\n    for i in range(q):\n        l1, r1, l2, r2 = map(int, input().split())\n        if l1 == r1:\n            print(l1, l2)\n        elif l2 == r2:\n            print(l1, l2)\n        else:\n            print(l1, l2 + 1)\n\ntwo_segments_intersection(l1, r1, l2, r2)\n']
2022-04-11 22:57:23.362449 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef two_segments():\n    q = int(input())\n    for i in range(q):\n        l1, r1, l2, r2 = map(int, input().split())\n        if l1 == r1:\n            print(l1, l2)\n        elif l2 == r2:\n            print(l1, l2)\n        else:\n            print(l1, l2 + 1)\n\ntwo_segments()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef two_segments():\n    q = int(input())\n    for i in range(q):\n        l1, r1, l2, r2 = map(int, input().split())\n        if l1 == r1:\n            print(l1, l2)\n        elif l2 == r2:\n            print(l1, l2)\n        else:\n            print(l1, l2 + 1)\n\ntwo_segments()\n"
    }
  ],
  "created": 1649732241,
  "object": "edit"
}
2022-04-11 22:57:23.362724 fix syntax errors 2 ['\n\ndef two_segments():\n    q = int(input())\n    for i in range(q):\n        l1, r1, l2, r2 = map(int, input().split())\n        if l1 == r1:\n            print(l1, l2)\n        elif l2 == r2:\n            print(l1, l2)\n        else:\n            print(l1, l2 + 1)\n\ntwo_segments()\n', '\n\ndef two_segments():\n    q = int(input())\n    for i in range(q):\n        l1, r1, l2, r2 = map(int, input().split())\n        if l1 == r1:\n            print(l1, l2)\n        elif l2 == r2:\n            print(l1, l2)\n        else:\n            print(l1, l2 + 1)\n\ntwo_segments()\n']
2022-04-11 22:57:23.362763 size on output set 3
2022-04-11 22:57:23.362775 num operations 2
2022-04-11 22:57:23.362782 size on input set 1
2022-04-11 22:57:28.234753 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    a = l1\n    b = l2\n    if l1 == l2:\n        b = r2\n\n    print(a, b)\n"
    },
    {
      "index": 1,
      "text": "\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 == r1:\n        a = l1\n        b = l2\n    elif l2 == r2:\n        a = l1\n        b = l2\n    elif l1 == l2:\n        a = l1\n        b = r2\n    elif r1 == r2:\n        a = l1\n        b = r2\n    elif l1 == r2:\n        a = l1\n        b = l2\n    elif r1 == l2:\n        a = l1\n        b = r2\n    else:\n        a = l1\n        b = l2\n\n    print(a, b)\n"
    }
  ],
  "created": 1649732243,
  "object": "edit"
}
2022-04-11 22:57:28.235014 fix spelling mistakes 2 ['\n\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    a = l1\n    b = l2\n    if l1 == l2:\n        b = r2\n\n    print(a, b)\n', '\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 == r1:\n        a = l1\n        b = l2\n    elif l2 == r2:\n        a = l1\n        b = l2\n    elif l1 == l2:\n        a = l1\n        b = r2\n    elif r1 == r2:\n        a = l1\n        b = r2\n    elif l1 == r2:\n        a = l1\n        b = l2\n    elif r1 == l2:\n        a = l1\n        b = r2\n    else:\n        a = l1\n        b = l2\n\n    print(a, b)\n']
2022-04-11 22:57:28.235043 size on output set 2
2022-04-11 22:57:28.235049 size on input set 2
2022-04-11 22:57:32.624871 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 == r2:\n        print(l1, l2)\n    else:\n        print(l1, r2)\n\n    print(a, b)\n"
    },
    {
      "index": 1,
      "text": "\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    a = l1\n    b = l2\n    if l1 == l2:\n        b = r2\n\n    print(a, b)\n"
    }
  ],
  "created": 1649732248,
  "object": "edit"
}
2022-04-11 22:57:32.625028 fix syntax errors 2 ['\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    if l1 == r2:\n        print(l1, l2)\n    else:\n        print(l1, r2)\n\n    print(a, b)\n', '\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    a = l1\n    b = l2\n    if l1 == l2:\n        b = r2\n\n    print(a, b)\n']
2022-04-11 22:57:40.724677 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split()) \n\n    if l1 == r1:\n        a = l1\n        b = l2\n    elif l2 == r2:\n        a = l1\n        b = l2\n    elif l1 == l2:\n        a = l1\n        b = r2\n    elif r1 == r2:\n        a = l1\n        b = r2\n    elif l1 == r2:\n        a = l1\n        b = l2\n    elif r1 == l2:\n        a = l1\n        b = r2\n    else:\n        a = l1\n        b = l2\n\n    print(a, b)\n"
    },
    {
      "index": 1,
      "text": "q = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    a = l1\n    b = l2\n    if l1 == r1 and l2 == r2:\n        if l1 == l2:\n            a = l1\n            b = r2\n        else:\n            a = l1\n            b = l2\n    elif l1 == r1:\n        if l1 == l2:\n            a = l1\n            b = r2\n        elif l1 == r2:\n            a = l1\n            b = l2\n    elif l2 == r2:\n        if l2 == l1:\n            a = l1\n            b = r2\n        elif l2 == r1:\n            a = l1\n            b = r2\n\n    print(a, b)\n"
    }
  ],
  "created": 1649732252,
  "object": "edit"
}
2022-04-11 22:57:40.724806 fix syntax errors 2 ['\nq = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split()) \n\n    if l1 == r1:\n        a = l1\n        b = l2\n    elif l2 == r2:\n        a = l1\n        b = l2\n    elif l1 == l2:\n        a = l1\n        b = r2\n    elif r1 == r2:\n        a = l1\n        b = r2\n    elif l1 == r2:\n        a = l1\n        b = l2\n    elif r1 == l2:\n        a = l1\n        b = r2\n    else:\n        a = l1\n        b = l2\n\n    print(a, b)\n', 'q = int(input())\n\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n\n    a = l1\n    b = l2\n    if l1 == r1 and l2 == r2:\n        if l1 == l2:\n            a = l1\n            b = r2\n        else:\n            a = l1\n            b = l2\n    elif l1 == r1:\n        if l1 == l2:\n            a = l1\n            b = r2\n        elif l1 == r2:\n            a = l1\n            b = l2\n    elif l2 == r2:\n        if l2 == l1:\n            a = l1\n            b = r2\n        elif l2 == r1:\n            a = l1\n            b = r2\n\n    print(a, b)\n']
2022-04-11 22:57:40.724821 size on output set 4
2022-04-11 22:57:40.724829 num operations 2
2022-04-11 22:57:40.724832 size on input set 1
2022-04-11 22:57:42.742806 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# SOLUTION \n\nq = int(input())\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n    if l1 == r1:\n        print(l1, l2)\n    else:\n        print(l1, r2)\n"
    },
    {
      "index": 1,
      "text": "\n\n# SOLUTION 1\n\nq = int(input())\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n    if l1 == r1:\n        print(l1, l2)\n    else:\n        print(l1, r2)\n"
    }
  ],
  "created": 1649732260,
  "object": "edit"
}
2022-04-11 22:57:42.743048 fix spelling mistakes 2 ['\n\n# SOLUTION \n\nq = int(input())\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n    if l1 == r1:\n        print(l1, l2)\n    else:\n        print(l1, r2)\n', '\n\n# SOLUTION 1\n\nq = int(input())\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n    if l1 == r1:\n        print(l1, l2)\n    else:\n        print(l1, r2)\n']
2022-04-11 22:57:42.743078 size on output set 2
2022-04-11 22:57:42.743086 size on input set 2
2022-04-11 22:57:46.222055 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#\n# SOLUTION 1\n\nq = int(input())\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n    if l1 == r1:\n        print(l1, l2)\n    else:\n        print(l1, r2)\n"
    },
    {
      "index": 1,
      "text": "# SOLUTION 1\n\nq = int(input())\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n    if l1 == r1: print(l1, l2)\n    else: print(l1, r2)\n"
    }
  ],
  "created": 1649732262,
  "object": "edit"
}
2022-04-11 22:57:46.222432 fix syntax errors 2 ['\n#\n# SOLUTION 1\n\nq = int(input())\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n    if l1 == r1:\n        print(l1, l2)\n    else:\n        print(l1, r2)\n', '# SOLUTION 1\n\nq = int(input())\nfor _ in range(q):\n    l1, r1, l2, r2 = map(int, input().split())\n    if l1 == r1: print(l1, l2)\n    else: print(l1, r2)\n']
2022-04-11 22:57:51.624316 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# SOLUTION\n\n# q = int(input())\n# for _ in range(q):\n#     l1, r1, l2, r2 = map(int, input().split())\n#     if l1 == r1:\n#         print(l1, l2)\n#     else:\n#         print(l1, r2)\n"
    },
    {
      "index": 1,
      "text": "\n\n# SOLUTION\n\nq = int(input())\nfor _ in range(q):\n    a, b, c, d = map(int, input().split())\n    if a == b:\n        print(a, c)\n    else:\n        print(a, d)\n"
    }
  ],
  "created": 1649732266,
  "object": "edit"
}
2022-04-11 22:57:51.624456 fix syntax errors 2 ['\n\n# SOLUTION\n\n# q = int(input())\n# for _ in range(q):\n#     l1, r1, l2, r2 = map(int, input().split())\n#     if l1 == r1:\n#         print(l1, l2)\n#     else:\n#         print(l1, r2)\n', '\n\n# SOLUTION\n\nq = int(input())\nfor _ in range(q):\n    a, b, c, d = map(int, input().split())\n    if a == b:\n        print(a, c)\n    else:\n        print(a, d)\n']
2022-04-11 22:57:51.624475 size on output set 4
2022-04-11 22:57:51.624487 num operations 2
2022-04-11 22:57:51.624492 size on input set 1
2022-04-11 22:57:54.418618 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Solution \nfor i in range(int(input())):\n    l1, r1, l2, r2 = map(int, input().split())\n    print(l1, l2)\n"
    },
    {
      "index": 1,
      "text": "\n\n# Solution\n"
    }
  ],
  "created": 1649732271,
  "object": "edit"
}
2022-04-11 22:57:54.418909 fix spelling mistakes 2 ['\n\n# Solution \nfor i in range(int(input())):\n    l1, r1, l2, r2 = map(int, input().split())\n    print(l1, l2)\n', '\n\n# Solution\n']
2022-04-11 22:57:54.418949 size on output set 2
2022-04-11 22:57:54.418960 size on input set 2
2022-04-11 22:58:32.434660 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Solution \n"
    },
    {
      "index": 1,
      "text": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Solution\n"
    }
  ],
  "created": 1649732274,
  "object": "edit"
}
2022-04-11 22:58:32.434999 fix syntax errors 2 ['\n\n# Solution \n', '\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Solution\n']
2022-04-11 22:58:34.970750 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Solution\nfor i in range(int(input())):\n    l1, r1, l2, r2 = map(int, input().split())\n    print(l1, l2)\n"
    },
    {
      "index": 1,
      "text": "\n\n# Solution \nfor i in range(int(input())):\n    l1, l2, r1, r2 = map(int, input().split())\n    print(l1, l2)\n"
    }
  ],
  "created": 1649732312,
  "object": "edit"
}
2022-04-11 22:58:34.971108 fix syntax errors 2 ['\n\n# Solution\nfor i in range(int(input())):\n    l1, r1, l2, r2 = map(int, input().split())\n    print(l1, l2)\n', '\n\n# Solution \nfor i in range(int(input())):\n    l1, l2, r1, r2 = map(int, input().split())\n    print(l1, l2)\n']
2022-04-11 22:58:34.971137 size on output set 4
2022-04-11 22:58:34.971155 num operations 2
2022-04-11 22:58:34.971163 size on input set 1
2022-04-11 22:58:37.010862 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nn = int(input())\n\nfor i in range(n):\n    a, b, c, d = map(int, input().split())\n    if a == b:\n        print(a, c)\n    elif c == d:\n        print(a, c)\n    elif a == c:\n        print(a, b)\n    elif b == d:\n        print(a, b)\n    elif a == d:\n        print(a, c)\n    elif b == c:\n        print(a, b)\n    else:\n        print(a, c)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\n\nfor i in range(n):\n    a, b, c, d = map(int, input().split())\n    if a == b:\n        print(a, c)\n    elif c == d:\n        print(a, c)\n    elif a == c:\n        print(a, b)\n    elif b == d:\n        print(a, b)\n    elif a == d:\n        print(a, c)\n    elif b == c:\n        print(a, b)\n    else:\n        print(a, c)\n"
    }
  ],
  "created": 1649732315,
  "object": "edit"
}
2022-04-11 22:58:37.011404 fix spelling mistakes 2 ['#!/usr/bin/env python3\n\nn = int(input())\n\nfor i in range(n):\n    a, b, c, d = map(int, input().split())\n    if a == b:\n        print(a, c)\n    elif c == d:\n        print(a, c)\n    elif a == c:\n        print(a, b)\n    elif b == d:\n        print(a, b)\n    elif a == d:\n        print(a, c)\n    elif b == c:\n        print(a, b)\n    else:\n        print(a, c)\n', '\nn = int(input())\n\nfor i in range(n):\n    a, b, c, d = map(int, input().split())\n    if a == b:\n        print(a, c)\n    elif c == d:\n        print(a, c)\n    elif a == c:\n        print(a, b)\n    elif b == d:\n        print(a, b)\n    elif a == d:\n        print(a, c)\n    elif b == c:\n        print(a, b)\n    else:\n        print(a, c)\n']
2022-04-11 22:58:37.011473 size on output set 2
2022-04-11 22:58:37.011484 size on input set 2
2022-04-11 22:58:42.209250 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nn = int(input(\"\"))\n\nfor i in range(n):\n    a, b, c, d = map(int, input(\"\").split())\n    if a == b:\n        print(a, c)\n    elif c == d:\n        print(a, c)\n    elif a == c:\n        print(a, b)\n    elif b == d:\n        print(a, b)\n    elif a == d:\n        print(a, c)\n    elif b == c:\n        print(a, b)\n    else:\n        print(a, c)\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nn = int(input())\n\nfor i in range(n):\n    a, b, c, d = map(int, input().split())\n    if a == b:\n        print(a, c, sep=' ')\n    elif c == d:\n        print(a, c, sep=' ')\n    elif a == c:\n        print(a, b, sep=' ')\n    elif b == d:\n        print(a, b, sep=' ')\n    elif a == d:\n        print(a, c, sep=' ')\n    elif b == c:\n        print(a, b, sep=' ')\n    else:\n        print(a, c, sep=' ')\n"
    }
  ],
  "created": 1649732317,
  "object": "edit"
}
2022-04-11 22:58:42.209474 fix syntax errors 2 ['#!/usr/bin/env python3\n\nn = int(input(""))\n\nfor i in range(n):\n    a, b, c, d = map(int, input("").split())\n    if a == b:\n        print(a, c)\n    elif c == d:\n        print(a, c)\n    elif a == c:\n        print(a, b)\n    elif b == d:\n        print(a, b)\n    elif a == d:\n        print(a, c)\n    elif b == c:\n        print(a, b)\n    else:\n        print(a, c)\n', "#!/usr/bin/env python3\n\nn = int(input())\n\nfor i in range(n):\n    a, b, c, d = map(int, input().split())\n    if a == b:\n        print(a, c, sep=' ')\n    elif c == d:\n        print(a, c, sep=' ')\n    elif a == c:\n        print(a, b, sep=' ')\n    elif b == d:\n        print(a, b, sep=' ')\n    elif a == d:\n        print(a, c, sep=' ')\n    elif b == c:\n        print(a, b, sep=' ')\n    else:\n        print(a, c, sep=' ')\n"]
2022-04-11 22:58:47.972457 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\n\nfor i in range(n):\n    a, b, c, d = map(int, input().split())\n    if a == b:\n        print(a, c, end=' ')\n    elif c == d:\n        print(a, c, end=' ')\n    elif a == c:\n        print(a, b, end=' ')\n    elif b == d:\n        print(a, b, end=' ')\n    elif a == d:\n        print(a, c, end=' ')\n    elif b == c:\n        print(a, b, end=' ')\n    else:\n        print(a, c, end=' ')\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\n\nfor i in range(n):\n    a, b, c, d = map(int, input().split())\n    print(a, c)\n"
    }
  ],
  "created": 1649732322,
  "object": "edit"
}
2022-04-11 22:58:47.972741 fix syntax errors 2 ["n = int(input())\n\nfor i in range(n):\n    a, b, c, d = map(int, input().split())\n    if a == b:\n        print(a, c, end=' ')\n    elif c == d:\n        print(a, c, end=' ')\n    elif a == c:\n        print(a, b, end=' ')\n    elif b == d:\n        print(a, b, end=' ')\n    elif a == d:\n        print(a, c, end=' ')\n    elif b == c:\n        print(a, b, end=' ')\n    else:\n        print(a, c, end=' ')\n", '\nn = int(input())\n\nfor i in range(n):\n    a, b, c, d = map(int, input().split())\n    print(a, c)\n']
2022-04-11 22:58:47.972769 size on output set 4
