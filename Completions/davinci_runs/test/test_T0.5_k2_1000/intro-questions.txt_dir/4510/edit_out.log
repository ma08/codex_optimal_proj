2022-04-11 20:39:41.329080 num operations 2
2022-04-11 20:39:41.329124 size on input set 1
2022-04-11 20:39:51.099285 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, k = [int(x) for x in input().split()]\n    ids = [int(x) for x in input().split()]\n    ids_to_count = {}\n    for i in range(n):\n        if ids[i] not in ids_to_count:\n            if len(ids_to_count) == k:\n                remove_id = min(ids_to_count.values())\n                del ids_to_count[remove_id]\n            ids_to_count[ids[i]] = 0\n        else:\n            ids_to_count[ids[i]] += 1\n        for id_ in ids_to_count:\n            if id_ != ids[i]:\n                ids_to_count[id_] += 1\n    print(len(ids_to_count))\n    for id_ in ids_to_count:\n        print(id_, end=' ')\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, k = [int(x) for x in input().split()]\n    ids = [int(x) for x in input().split()]\n    ids_to_cnt = {}\n    for i in range(n):\n        if ids[i] not in ids_to_cnt:\n            if len(ids_to_cnt) == k:\n                remove_id = min(ids_to_cnt.values())\n                del ids_to_cnt[remove_id]\n            ids_to_cnt[ids[i]] = 0\n        else:\n            ids_to_cnt[ids[i]] += 1\n        for id_ in ids_to_cnt:\n            if id_ != ids[i]:\n                ids_to_cnt[id_] += 1\n    print(len(ids_to_cnt))\n    for id_ in ids_to_cnt:\n        print(id_, end=' ')\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649723981,
  "object": "edit"
}
2022-04-11 20:39:51.099412 fix spelling mistakes 2 ['\n\ndef main():\n    n, k = [int(x) for x in input().split()]\n    ids = [int(x) for x in input().split()]\n    ids_to_count = {}\n    for i in range(n):\n        if ids[i] not in ids_to_count:\n            if len(ids_to_count) == k:\n                remove_id = min(ids_to_count.values())\n                del ids_to_count[remove_id]\n            ids_to_count[ids[i]] = 0\n        else:\n            ids_to_count[ids[i]] += 1\n        for id_ in ids_to_count:\n            if id_ != ids[i]:\n                ids_to_count[id_] += 1\n    print(len(ids_to_count))\n    for id_ in ids_to_count:\n        print(id_, end=\' \')\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, k = [int(x) for x in input().split()]\n    ids = [int(x) for x in input().split()]\n    ids_to_cnt = {}\n    for i in range(n):\n        if ids[i] not in ids_to_cnt:\n            if len(ids_to_cnt) == k:\n                remove_id = min(ids_to_cnt.values())\n                del ids_to_cnt[remove_id]\n            ids_to_cnt[ids[i]] = 0\n        else:\n            ids_to_cnt[ids[i]] += 1\n        for id_ in ids_to_cnt:\n            if id_ != ids[i]:\n                ids_to_cnt[id_] += 1\n    print(len(ids_to_cnt))\n    for id_ in ids_to_cnt:\n        print(id_, end=\' \')\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 20:39:51.099432 size on output set 2
2022-04-11 20:39:51.099435 size on input set 2
2022-04-11 20:39:58.388592 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649723991,
  "object": "edit"
}
2022-04-11 20:39:58.388992 fix syntax errors 2 ['\n\ndef main():\n    pass\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    pass\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 20:40:00.970056 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n, k = [int(x) for x in input().split()]\n    ids = [int(x) for x in input().split()]\n    ids_to_count = {}\n    for i in range(n):\n        if ids[i] not in ids_to_count:\n            if len(ids_to_count) == k:\n                remove_id = min(ids_to_count.values())\n                del ids_to_count[remove_id]\n            ids_to_count[ids[i]] = 0\n        else:\n            ids_to_count[ids[i]] += 1\n        for id_ in ids_to_count:\n            if id_ != ids[i]:\n                ids_to_count[id_] += 1\n    print(len(ids_to_count))\n    for id_ in ids_to_count:\n        print(id_, end=' ')\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, k = [int(x) for x in input().split()]\n    ids = [int(x) for x in input().split()]\n    ids_to_count = {}\n    for i in range(n):\n        if ids[i] not in ids_to_count:\n            if len(ids_to_count) == k:\n                remove_id = min(ids_to_count.values())\n                del ids_to_count[remove_id]\n            ids_to_count[ids[i]] = 0\n        else:\n            ids_to_count[ids[i]] += 1\n        for id_ in ids_to_count:\n            if id_ != ids[i]:\n                ids_to_count[id_] += 1\n    print(len(ids_to_count))\n    for id_ in ids_to_count:\n        print(id_, end=\" \")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649723998,
  "object": "edit"
}
2022-04-11 20:40:00.970572 fix syntax errors 2 ['\ndef main():\n    n, k = [int(x) for x in input().split()]\n    ids = [int(x) for x in input().split()]\n    ids_to_count = {}\n    for i in range(n):\n        if ids[i] not in ids_to_count:\n            if len(ids_to_count) == k:\n                remove_id = min(ids_to_count.values())\n                del ids_to_count[remove_id]\n            ids_to_count[ids[i]] = 0\n        else:\n            ids_to_count[ids[i]] += 1\n        for id_ in ids_to_count:\n            if id_ != ids[i]:\n                ids_to_count[id_] += 1\n    print(len(ids_to_count))\n    for id_ in ids_to_count:\n        print(id_, end=\' \')\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, k = [int(x) for x in input().split()]\n    ids = [int(x) for x in input().split()]\n    ids_to_count = {}\n    for i in range(n):\n        if ids[i] not in ids_to_count:\n            if len(ids_to_count) == k:\n                remove_id = min(ids_to_count.values())\n                del ids_to_count[remove_id]\n            ids_to_count[ids[i]] = 0\n        else:\n            ids_to_count[ids[i]] += 1\n        for id_ in ids_to_count:\n            if id_ != ids[i]:\n                ids_to_count[id_] += 1\n    print(len(ids_to_count))\n    for id_ in ids_to_count:\n        print(id_, end=" ")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 20:40:00.970644 size on output set 3
2022-04-11 20:40:00.970679 num operations 2
2022-04-11 20:40:00.970685 size on input set 1
2022-04-11 20:40:02.955771 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom collections import deque\n\nn, k = map(int, input().split())\nids = list(map(int, input().split()))\n\nd = deque()\n\nfor id in ids:\n    if id in d:\n        continue\n    if len(d) == k:\n        d.pop()\n    d.appendleft(id)\n\nprint(len(d))\nprint(*d)\n"
    },
    {
      "index": 1,
      "text": "\n#\nfrom collections import deque\n\nn, k = map(int, input().split())\nids = list(map(int, input().split()))\n\nd = deque()\n\nfor id in ids:\n    if id in d:\n        continue\n    if len(d) == k:\n        d.pop()\n    d.appendleft(id)\n\nprint(len(d))\nprint(*d)\n"
    }
  ],
  "created": 1649724001,
  "object": "edit"
}
2022-04-11 20:40:02.956032 fix spelling mistakes 2 ['\nfrom collections import deque\n\nn, k = map(int, input().split())\nids = list(map(int, input().split()))\n\nd = deque()\n\nfor id in ids:\n    if id in d:\n        continue\n    if len(d) == k:\n        d.pop()\n    d.appendleft(id)\n\nprint(len(d))\nprint(*d)\n', '\n#\nfrom collections import deque\n\nn, k = map(int, input().split())\nids = list(map(int, input().split()))\n\nd = deque()\n\nfor id in ids:\n    if id in d:\n        continue\n    if len(d) == k:\n        d.pop()\n    d.appendleft(id)\n\nprint(len(d))\nprint(*d)\n']
2022-04-11 20:40:02.956089 size on output set 2
2022-04-11 20:40:02.956113 size on input set 2
2022-04-11 20:40:10.630541 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, k = map(int, input().split())\n    ids = list(map(int, input().split()))\n\n    d = []\n\n    for id in ids:\n        if id in d:\n            continue\n        if len(d) == k:\n            d.pop()\n        d.insert(0, id)\n\n    print(len(d))\n    print(*d)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "print(\"Hello World\")\n"
    }
  ],
  "created": 1649724003,
  "object": "edit"
}
2022-04-11 20:40:10.631218 fix syntax errors 2 ['\nimport sys\n\ndef main():\n    n, k = map(int, input().split())\n    ids = list(map(int, input().split()))\n\n    d = []\n\n    for id in ids:\n        if id in d:\n            continue\n        if len(d) == k:\n            d.pop()\n        d.insert(0, id)\n\n    print(len(d))\n    print(*d)\n\nif __name__ == "__main__":\n    main()\n', 'print("Hello World")\n']
2022-04-11 20:40:12.680314 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom collections import deque\n\nn, k = map(int, input().split())\nids = list(map(int, input().split()))\n\nd = deque()\n\nfor id in ids:\n    if id in d:\n        continue\n    if len(d) == k:\n        d.pop()\n    d.appendleft(id)\n\nprint(len(d))\nprint(*d)\n"
    },
    {
      "index": 1,
      "text": "\n# \nfrom collections import deque\n\nn, k = map(int, input().split())\nids = list(map(int, input().split()))\n\nd = deque()\n\nfor id in ids:\n    if id in d:\n        continue\n    if len(d) == k:\n        d.pop()\n    d.appendleft(id)\n\nprint(len(d))\nprint(*d)\n"
    }
  ],
  "created": 1649724010,
  "object": "edit"
}
2022-04-11 20:40:12.680689 fix syntax errors 2 ['\n\nfrom collections import deque\n\nn, k = map(int, input().split())\nids = list(map(int, input().split()))\n\nd = deque()\n\nfor id in ids:\n    if id in d:\n        continue\n    if len(d) == k:\n        d.pop()\n    d.appendleft(id)\n\nprint(len(d))\nprint(*d)\n', '\n# \nfrom collections import deque\n\nn, k = map(int, input().split())\nids = list(map(int, input().split()))\n\nd = deque()\n\nfor id in ids:\n    if id in d:\n        continue\n    if len(d) == k:\n        d.pop()\n    d.appendleft(id)\n\nprint(len(d))\nprint(*d)\n']
2022-04-11 20:40:12.680725 size on output set 4
