2022-04-11 16:03:06.835241 num operations 2
2022-04-11 16:03:06.835280 size on input set 1
2022-04-11 16:03:09.392768 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\ndef median(nums):\n    if len(nums) % 2 == 0:\n        med = nums[len(nums)//2] + nums[len(nums)//2 - 1]\n    else:\n        med = nums[len(nums)//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1]) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef median(nums):\n    if len(nums) % 2 == 0:\n        med = nums[len(nums)//2] + nums[len(nums)//2 - 1]\n    else:\n        med = nums[len(nums)//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1]) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649707387,
  "object": "edit"
}
2022-04-11 16:03:09.393224 fix spelling mistakes 2 ["\ndef median(nums):\n    if len(nums) % 2 == 0:\n        med = nums[len(nums)//2] + nums[len(nums)//2 - 1]\n    else:\n        med = nums[len(nums)//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1]) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n", "\ndef median(nums):\n    if len(nums) % 2 == 0:\n        med = nums[len(nums)//2] + nums[len(nums)//2 - 1]\n    else:\n        med = nums[len(nums)//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1]) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 16:03:09.393286 size on output set 1
2022-04-11 16:03:09.393298 size on input set 1
2022-04-11 16:03:16.949047 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import numpy as np\n\ndef main():\n    n, m = map(int, input().split(' '))\n    seq = np.array(list(map(int, input().split(' '))))\n    print(seq)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "def median(nums):\n    if len(nums) % 2 == 0:\n        med = (nums[len(nums)//2] + nums[len(nums)//2 - 1])/2\n    else:\n        med = nums[len(nums)//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1]) == m:\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649707389,
  "object": "edit"
}
2022-04-11 16:03:16.949225 fix syntax errors 2 ["import numpy as np\n\ndef main():\n    n, m = map(int, input().split(' '))\n    seq = np.array(list(map(int, input().split(' '))))\n    print(seq)\n\nif __name__ == '__main__':\n    main()\n", "def median(nums):\n    if len(nums) % 2 == 0:\n        med = (nums[len(nums)//2] + nums[len(nums)//2 - 1])/2\n    else:\n        med = nums[len(nums)//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1]) == m:\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 16:03:16.949248 size on output set 2
2022-04-11 16:03:16.949262 num operations 2
2022-04-11 16:03:16.949268 size on input set 1
2022-04-11 16:03:19.579541 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    mid = (left + right) // 2 \n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    mid = (left + right) // 2\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649707397,
  "object": "edit"
}
2022-04-11 16:03:19.579797 fix spelling mistakes 2 ['\n\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    mid = (left + right) // 2 \n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    mid = (left + right) // 2\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 16:03:19.579855 size on output set 2
2022-04-11 16:03:19.579864 size on input set 2
2022-04-11 16:03:24.259508 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    mid = (left + right) // 2\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (j - i + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649707399,
  "object": "edit"
}
2022-04-11 16:03:24.259874 fix syntax errors 2 ['import sys\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    mid = (left + right) // 2\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (j - i + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 16:03:26.856683 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    mid = (left + right) // 2\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    mid = (left + right) // 2\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649707404,
  "object": "edit"
}
2022-04-11 16:03:26.856878 fix syntax errors 2 ['\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    mid = (left + right) // 2\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    mid = (left + right) // 2\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 16:03:26.856927 size on output set 3
