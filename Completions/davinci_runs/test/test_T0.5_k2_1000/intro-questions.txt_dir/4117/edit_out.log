2022-04-11 18:07:29.531104 num operations 2
2022-04-11 18:07:29.531139 size on input set 1
2022-04-11 18:07:32.031677 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n# test\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "from itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1649714850,
  "object": "edit"
}
2022-04-11 18:07:32.031804 fix spelling mistakes 2 ['\n# test\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n', 'from itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n']
2022-04-11 18:07:32.031817 size on output set 2
2022-04-11 18:07:32.031821 size on input set 2
2022-04-11 18:07:36.946416 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:  # \u4e09\u89d2\u5f62\u306e\u6210\u7acb\u6761\u4ef6\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "N = int(input())\nA = list(map(int, input().split()))\n\nprint(A)\n"
    }
  ],
  "created": 1649714852,
  "object": "edit"
}
2022-04-11 18:07:36.946638 fix syntax errors 2 ['from itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:  # 三角形の成立条件\n        count += 1\n\nprint(count)\n', 'N = int(input())\nA = list(map(int, input().split()))\n\nprint(A)\n']
2022-04-11 18:07:38.862401 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "from itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1649714857,
  "object": "edit"
}
2022-04-11 18:07:38.862591 fix syntax errors 2 ['from itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n', 'from itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n']
2022-04-11 18:07:38.862626 size on output set 3
2022-04-11 18:07:38.862655 num operations 2
2022-04-11 18:07:38.862666 size on input set 1
2022-04-11 18:07:40.772644 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1649714859,
  "object": "edit"
}
2022-04-11 18:07:40.772806 fix spelling mistakes 2 ['\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n', '\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n']
2022-04-11 18:07:40.772827 size on output set 1
2022-04-11 18:07:40.772836 size on input set 1
2022-04-11 18:07:44.737614 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\nprint(l)\n\nfor i in range(n):\n    for j in range(n):\n        if l[i] + l[j] == l[i] + l[j]:\n            print(l[i], l[j])\n"
    }
  ],
  "created": 1649714860,
  "object": "edit"
}
2022-04-11 18:07:44.737754 fix syntax errors 2 ['from itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n', '\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\nprint(l)\n\nfor i in range(n):\n    for j in range(n):\n        if l[i] + l[j] == l[i] + l[j]:\n            print(l[i], l[j])\n']
2022-04-11 18:07:44.737773 size on output set 2
