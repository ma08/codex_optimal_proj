2022-04-11 21:28:35.626714 num operations 2
2022-04-11 21:28:35.626767 size on input set 1
2022-04-11 21:28:42.824265 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef find_floor(n, x): # n = no. of eggs, x = no. of floors\n    floor = 0 # initial floor\n    while n > 0: # while eggs are left\n        if floor == 0: # if floor is 0\n            n -= 2 # drop 2 eggs\n        else:\n            n -= x\n        floor += 1\n    return floor\n\nt = int(input())\n\nfor i in range(t):\n    n, x = map(int, input().split())\n    print(find_floor(n, x))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef find_floors(n, x):\n    floors = 0\n    while n > 0:\n        if floors == 0:\n            n -= 2\n        else:\n            n -= x\n        floors += 1\n    return floors\n\nt = int(input())\n\nfor i in range(t):\n    n, x = map(int, input().split())\n    print(find_floors(n, x))\n"
    }
  ],
  "created": 1649726916,
  "object": "edit"
}
2022-04-11 21:28:42.824578 fix spelling mistakes 2 ['\n\ndef find_floor(n, x): # n = no. of eggs, x = no. of floors\n    floor = 0 # initial floor\n    while n > 0: # while eggs are left\n        if floor == 0: # if floor is 0\n            n -= 2 # drop 2 eggs\n        else:\n            n -= x\n        floor += 1\n    return floor\n\nt = int(input())\n\nfor i in range(t):\n    n, x = map(int, input().split())\n    print(find_floor(n, x))\n', '\n\ndef find_floors(n, x):\n    floors = 0\n    while n > 0:\n        if floors == 0:\n            n -= 2\n        else:\n            n -= x\n        floors += 1\n    return floors\n\nt = int(input())\n\nfor i in range(t):\n    n, x = map(int, input().split())\n    print(find_floors(n, x))\n']
2022-04-11 21:28:42.824617 size on output set 2
2022-04-11 21:28:42.824626 size on input set 2
2022-04-11 21:28:47.736296 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef find_floor(n, x):  # n = no. of eggs, x = no. of floors\n    floor = 0  # initial floor\n    while n > 0:  # while eggs are left\n        if floor == 0:  # if floor is 0\n            n -= 2  # drop 2 eggs\n        else:\n            n -= x\n        floor += 1\n    return floor\n\nt = int(input())\n\nfor i in range(t):\n    n, x = map(int, input().split())\n    print(find_floor(n, x))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef find_floor(n, x):  # n = no. of eggs, x = no. of floors\n    floor = 0  # initial floor\n    while n > 0:  # while eggs are left\n        if floor == 0:  # if floor is 0\n            n -= 2  # drop 2 eggs\n        else:\n            n -= x\n        floor += 1\n    return floor\n\nt = int(input())\n\nfor i in range(t):\n    n, x = map(int, input().split())\n    print(find_floor(n, x))\n"
    }
  ],
  "created": 1649726923,
  "object": "edit"
}
2022-04-11 21:28:47.736525 fix syntax errors 2 ['\n\ndef find_floor(n, x):  # n = no. of eggs, x = no. of floors\n    floor = 0  # initial floor\n    while n > 0:  # while eggs are left\n        if floor == 0:  # if floor is 0\n            n -= 2  # drop 2 eggs\n        else:\n            n -= x\n        floor += 1\n    return floor\n\nt = int(input())\n\nfor i in range(t):\n    n, x = map(int, input().split())\n    print(find_floor(n, x))\n', '\n\ndef find_floor(n, x):  # n = no. of eggs, x = no. of floors\n    floor = 0  # initial floor\n    while n > 0:  # while eggs are left\n        if floor == 0:  # if floor is 0\n            n -= 2  # drop 2 eggs\n        else:\n            n -= x\n        floor += 1\n    return floor\n\nt = int(input())\n\nfor i in range(t):\n    n, x = map(int, input().split())\n    print(find_floor(n, x))\n']
2022-04-11 21:28:52.948005 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef find_floors(n, x, floors = 0):\n    if n > 0:\n        if floors == 0:\n            return find_floors(n - 2, x, floors + 1)\n        else:\n            return find_floors(n - x, x, floors + 1)\n    else:\n        return floors\n\nt = int(input())\n\nfor i in range(t):\n    n, x = map(int, input().split())\n    print(find_floors(n, x))\n"
    },
    {
      "index": 1,
      "text": "\ndef find_floors(n, x):\n    floors = 0\n    while n > 0:\n        if floors == 0:\n            n -= 2\n        else:\n            n -= x\n        floors += 1\n\n    return floors\n\nt = int(input())\n\nfor i in range(t):\n    n, x = map(int, input().split())\n    print(find_floors(n, x))\n"
    }
  ],
  "created": 1649726928,
  "object": "edit"
}
2022-04-11 21:28:52.948339 fix syntax errors 2 ['\n\ndef find_floors(n, x, floors = 0):\n    if n > 0:\n        if floors == 0:\n            return find_floors(n - 2, x, floors + 1)\n        else:\n            return find_floors(n - x, x, floors + 1)\n    else:\n        return floors\n\nt = int(input())\n\nfor i in range(t):\n    n, x = map(int, input().split())\n    print(find_floors(n, x))\n', '\ndef find_floors(n, x):\n    floors = 0\n    while n > 0:\n        if floors == 0:\n            n -= 2\n        else:\n            n -= x\n        floors += 1\n\n    return floors\n\nt = int(input())\n\nfor i in range(t):\n    n, x = map(int, input().split())\n    print(find_floors(n, x))\n']
2022-04-11 21:28:52.948380 size on output set 3
2022-04-11 21:28:52.948416 num operations 2
2022-04-11 21:28:52.948425 size on input set 1
2022-04-11 21:28:55.271609 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef find_floor(n, x):\n    floor = 1\n    n -= 2\n    if n == 0:\n        return floor\n    floor += 1\n    while n > 0:\n        n -= x\n        floor += 1\n    return floor\n\nif __name__ == \"__main__\":\n    t = int(input())\n    for _ in range(t):\n        n, x = map(int, input().split())\n        print(find_floor(n, x))\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom math import ceil\n\ndef find_floor(n, x):\n    floor = 1\n    n -= 1\n    if n == 0:\n        return floor\n    floor += 1\n    while n > 0:\n        n -= x\n        floor += 1\n    return floor\n\nif __name__ == \"__main__\":\n    t = int(input())\n    for _ in range(t):\n        n, x = map(int, input().split())\n        print(find_floor(n, x))\n"
    }
  ],
  "created": 1649726933,
  "object": "edit"
}
2022-04-11 21:28:55.271787 fix spelling mistakes 2 ['\n\ndef find_floor(n, x):\n    floor = 1\n    n -= 2\n    if n == 0:\n        return floor\n    floor += 1\n    while n > 0:\n        n -= x\n        floor += 1\n    return floor\n\nif __name__ == "__main__":\n    t = int(input())\n    for _ in range(t):\n        n, x = map(int, input().split())\n        print(find_floor(n, x))\n', '\n\nfrom math import ceil\n\ndef find_floor(n, x):\n    floor = 1\n    n -= 1\n    if n == 0:\n        return floor\n    floor += 1\n    while n > 0:\n        n -= x\n        floor += 1\n    return floor\n\nif __name__ == "__main__":\n    t = int(input())\n    for _ in range(t):\n        n, x = map(int, input().split())\n        print(find_floor(n, x))\n']
2022-04-11 21:28:55.271803 size on output set 2
2022-04-11 21:28:55.271808 size on input set 2
2022-04-11 21:29:03.064233 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#\n# from math import ceil\n#\n# def find_floor(n, x):\n#     floor = 1\n#     n -= 1\n#     if n == 0:\n#         return floor\n#     floor += 1\n#     while n > 0:\n#         n -= x\n#         floor += 1\n#     return floor\n#\n# if __name__ == \"__main__\":\n#     t = int(input())\n#     for _ in range(t):\n#         n, x = map(int, input().split())\n#         print(find_floor(n, x))\n"
    },
    {
      "index": 1,
      "text": "\nfrom math import ceil\n\ndef find_floor(n, x):\n    floor = 1\n    n -= 1\n    if n == 0:\n        return floor\n    while n > 0:\n        n -= x\n        floor += 1\n    return floor\n\nif __name__ == \"__main__\":\n    t = int(input())\n    for _ in range(t):\n        n, x = map(int, input().split())\n        print(find_floor(n, x))\n"
    }
  ],
  "created": 1649726935,
  "object": "edit"
}
2022-04-11 21:29:03.064530 fix syntax errors 2 ['\n#\n# from math import ceil\n#\n# def find_floor(n, x):\n#     floor = 1\n#     n -= 1\n#     if n == 0:\n#         return floor\n#     floor += 1\n#     while n > 0:\n#         n -= x\n#         floor += 1\n#     return floor\n#\n# if __name__ == "__main__":\n#     t = int(input())\n#     for _ in range(t):\n#         n, x = map(int, input().split())\n#         print(find_floor(n, x))\n', '\nfrom math import ceil\n\ndef find_floor(n, x):\n    floor = 1\n    n -= 1\n    if n == 0:\n        return floor\n    while n > 0:\n        n -= x\n        floor += 1\n    return floor\n\nif __name__ == "__main__":\n    t = int(input())\n    for _ in range(t):\n        n, x = map(int, input().split())\n        print(find_floor(n, x))\n']
2022-04-11 21:29:05.514240 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef find_floor(n, x):\n    floor = 1\n    n -= 2\n    if n == 0:\n        return floor\n    floor += 1\n    while n > 0:\n        n -= x\n        floor += 1\n    return floor\n\nif __name__ == \"__main__\":\n    t = int(input())\n    for _ in range(t):\n        n, x = map(int, input().split())\n        print(find_floor(n, x))\n"
    },
    {
      "index": 1,
      "text": "\ndef find_floor(n, x):\n    floor = 1\n    n -= 1\n    if n == 0:\n        return floor\n    while n > 0:\n        n -= x\n        floor += 1\n    return floor\n\nif __name__ == \"__main__\":\n    t = int(input())\n    for _ in range(t):\n        n, x = map(int, input().split())\n        print(find_floor(n, x))\n"
    }
  ],
  "created": 1649726943,
  "object": "edit"
}
2022-04-11 21:29:05.514531 fix syntax errors 2 ['\ndef find_floor(n, x):\n    floor = 1\n    n -= 2\n    if n == 0:\n        return floor\n    floor += 1\n    while n > 0:\n        n -= x\n        floor += 1\n    return floor\n\nif __name__ == "__main__":\n    t = int(input())\n    for _ in range(t):\n        n, x = map(int, input().split())\n        print(find_floor(n, x))\n', '\ndef find_floor(n, x):\n    floor = 1\n    n -= 1\n    if n == 0:\n        return floor\n    while n > 0:\n        n -= x\n        floor += 1\n    return floor\n\nif __name__ == "__main__":\n    t = int(input())\n    for _ in range(t):\n        n, x = map(int, input().split())\n        print(find_floor(n, x))\n']
2022-04-11 21:29:05.514563 size on output set 4
