2022-04-11 21:51:52.324117 num operations 2
2022-04-11 21:51:52.324148 size on input set 1
2022-04-11 21:51:56.879149 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport math\n\nclass Complex(object):\n    def __init__(self, real, imaginary):\n        self.real = real\n        self.imaginary = imaginary\n        \n    def __add__(self, no):\n        return Complex(self.real + no.real, self.imaginary + no.imaginary)\n        \n    def __sub__(self, no):\n        return Complex(self.real - no.real, self.imaginary - no.imaginary)\n        \n    def __mul__(self, no):\n        return Complex(self.real * no.real - self.imaginary * no.imaginary, self.real * no.imaginary + self.imaginary * no.real)\n\n    def __truediv__(self, no): \n        return Complex((self.real * no.real + self.imaginary * no.imaginary)/(no.real**2 + no.imaginary**2), (self.imaginary * no.real - self.real * no.imaginary)/(no.real**2 + no.imaginary**2))\n\n    def mod(self):\n        return Complex(math.sqrt(self.real**2 + self.imaginary**2), 0)\n\n    def __str__(self):\n        if self.imaginary == 0:\n            result = \"%.2f+0.00i\" % (self.real)\n        elif self.real == 0:\n            if self.imaginary >= 0:\n                result = \"0.00+%.2fi\" % (self.imaginary)\n            else:\n                result = \"0.00-%.2fi\" % (abs(self.imaginary))\n        elif self.imaginary > 0:\n            result = \"%.2f+%.2fi\" % (self.real, self.imaginary)\n        else:\n            result = \"%.2f-%.2fi\" % (self.real, abs(self.imaginary))\n        return result\n\nif __name__ == '__main__':\n    c = map(float, input().split())\n    d = map(float, input().split())\n    x = Complex(*c)\n    y = Complex(*d)\n    print(*map(str, [x+y, x-y, x*y, x/y, x.mod(), y.mod()]), sep='\\n')\n"
    },
    {
      "index": 1,
      "text": "\n\nimport math\n\nclass Complex(object):\n    def __init__(self, real, imaginary):\n        self.real = real\n        self.imaginary = imaginary\n        \n    def __add__(self, no):\n        return Complex(self.real + no.real, self.imaginary + no.imaginary)\n        \n    def __sub__(self, no):\n        return Complex(self.real - no.real, self.imaginary - no.imaginary)\n        \n    def __mul__(self, no):\n        return Complex(self.real * no.real - self.imaginary * no.imaginary, self.real * no.imaginary + self.imaginary * no.real)\n\n    def __truediv__(self, no):\n        return Complex((self.real * no.real + self.imaginary * no.imaginary)/(no.real**2 + no.imaginary**2), (self.imaginary * no.real - self.real * no.imaginary)/(no.real**2 + no.imaginary**2)) \n\n    def mod(self):\n        return Complex(math.sqrt(self.real**2 + self.imaginary**2), 0)\n\n    def __str__(self):\n        if self.imaginary == 0:\n            result = \"%.2f+0.00i\" % (self.real)\n        elif self.real == 0:\n            if self.imaginary >= 0:\n                result = \"0.00+%.2fi\" % (self.imaginary)\n            else:\n                result = \"0.00-%.2fi\" % (abs(self.imaginary))\n        elif self.imaginary > 0:\n            result = \"%.2f+%.2fi\" % (self.real, self.imaginary)\n        else:\n            result = \"%.2f-%.2fi\" % (self.real, abs(self.imaginary))\n        return result\n\nif __name__ == '__main__':\n    c = map(float, input().split())\n    d = map(float, input().split())\n    x = Complex(*c)\n    y = Complex(*d)\n    print(*map(str, [x+y, x-y, x*y, x/y, x.mod(), y.mod()]), sep='\\n')\n"
    }
  ],
  "created": 1649728312,
  "object": "edit"
}
2022-04-11 21:51:56.879408 fix spelling mistakes 2 ['\n\nimport math\n\nclass Complex(object):\n    def __init__(self, real, imaginary):\n        self.real = real\n        self.imaginary = imaginary\n        \n    def __add__(self, no):\n        return Complex(self.real + no.real, self.imaginary + no.imaginary)\n        \n    def __sub__(self, no):\n        return Complex(self.real - no.real, self.imaginary - no.imaginary)\n        \n    def __mul__(self, no):\n        return Complex(self.real * no.real - self.imaginary * no.imaginary, self.real * no.imaginary + self.imaginary * no.real)\n\n    def __truediv__(self, no): \n        return Complex((self.real * no.real + self.imaginary * no.imaginary)/(no.real**2 + no.imaginary**2), (self.imaginary * no.real - self.real * no.imaginary)/(no.real**2 + no.imaginary**2))\n\n    def mod(self):\n        return Complex(math.sqrt(self.real**2 + self.imaginary**2), 0)\n\n    def __str__(self):\n        if self.imaginary == 0:\n            result = "%.2f+0.00i" % (self.real)\n        elif self.real == 0:\n            if self.imaginary >= 0:\n                result = "0.00+%.2fi" % (self.imaginary)\n            else:\n                result = "0.00-%.2fi" % (abs(self.imaginary))\n        elif self.imaginary > 0:\n            result = "%.2f+%.2fi" % (self.real, self.imaginary)\n        else:\n            result = "%.2f-%.2fi" % (self.real, abs(self.imaginary))\n        return result\n\nif __name__ == \'__main__\':\n    c = map(float, input().split())\n    d = map(float, input().split())\n    x = Complex(*c)\n    y = Complex(*d)\n    print(*map(str, [x+y, x-y, x*y, x/y, x.mod(), y.mod()]), sep=\'\\n\')\n', '\n\nimport math\n\nclass Complex(object):\n    def __init__(self, real, imaginary):\n        self.real = real\n        self.imaginary = imaginary\n        \n    def __add__(self, no):\n        return Complex(self.real + no.real, self.imaginary + no.imaginary)\n        \n    def __sub__(self, no):\n        return Complex(self.real - no.real, self.imaginary - no.imaginary)\n        \n    def __mul__(self, no):\n        return Complex(self.real * no.real - self.imaginary * no.imaginary, self.real * no.imaginary + self.imaginary * no.real)\n\n    def __truediv__(self, no):\n        return Complex((self.real * no.real + self.imaginary * no.imaginary)/(no.real**2 + no.imaginary**2), (self.imaginary * no.real - self.real * no.imaginary)/(no.real**2 + no.imaginary**2)) \n\n    def mod(self):\n        return Complex(math.sqrt(self.real**2 + self.imaginary**2), 0)\n\n    def __str__(self):\n        if self.imaginary == 0:\n            result = "%.2f+0.00i" % (self.real)\n        elif self.real == 0:\n            if self.imaginary >= 0:\n                result = "0.00+%.2fi" % (self.imaginary)\n            else:\n                result = "0.00-%.2fi" % (abs(self.imaginary))\n        elif self.imaginary > 0:\n            result = "%.2f+%.2fi" % (self.real, self.imaginary)\n        else:\n            result = "%.2f-%.2fi" % (self.real, abs(self.imaginary))\n        return result\n\nif __name__ == \'__main__\':\n    c = map(float, input().split())\n    d = map(float, input().split())\n    x = Complex(*c)\n    y = Complex(*d)\n    print(*map(str, [x+y, x-y, x*y, x/y, x.mod(), y.mod()]), sep=\'\\n\')\n']
2022-04-11 21:51:56.879451 size on output set 2
2022-04-11 21:51:56.879457 size on input set 2
2022-04-11 21:52:01.563979 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import math\n\nclass Complex(object):\n    def __init__(self, real, imaginary):\n        self.real = real\n        self.imaginary = imaginary\n        \n    def __add__(self, no):\n        return Complex(self.real + no.real, self.imaginary + no.imaginary)\n        \n    def __sub__(self, no):\n        return Complex(self.real - no.real, self.imaginary - no.imaginary)\n        \n    def __mul__(self, no):\n        return Complex(self.real * no.real - self.imaginary * no.imaginary, self.real * no.imaginary + self.imaginary * no.real)\n\n    def __truediv__(self, no):\n        return Complex((self.real * no.real + self.imaginary * no.imaginary)/(no.real**2 + no.imaginary**2), (self.imaginary * no.real - self.real * no.imaginary)/(no.real**2 + no.imaginary**2)) \n\n    def mod(self):\n        return Complex(math.sqrt(self.real**2 + self.imaginary**2), 0)\n\n    def __str__(self):\n        if self.imaginary == 0:\n            result = \"%.2f+0.00i\" % (self.real)\n        elif self.real == 0:\n            if self.imaginary >= 0:\n                result = \"0.00+%.2fi\" % (self.imaginary)\n            else:\n                result = \"0.00-%.2fi\" % (abs(self.imaginary))\n        elif self.imaginary > 0:\n            result = \"%.2f+%.2fi\" % (self.real, self.imaginary)\n        else:\n            result = \"%.2f-%.2fi\" % (self.real, abs(self.imaginary))\n        return result\n\nif __name__ == '__main__':\n    c = map(float, input().split())\n    d = map(float, input().split())\n    x = Complex(*c)\n    y = Complex(*d)\n    print(*map(str, [x+y, x-y, x*y, x/y, x.mod(), y.mod()]), sep='\\n')\n"
    },
    {
      "index": 1,
      "text": "\n\nimport math\n\nclass Complex(object):\n    def __init__(self, real, imaginary):\n        self.real = real\n        self.imaginary = imaginary\n        \n    def __add__(self, no):\n        return Complex(self.real + no.real, self.imaginary + no.imaginary)\n        \n    def __sub__(self, no):\n        return Complex(self.real - no.real, self.imaginary - no.imaginary)\n        \n    def __mul__(self, no):\n        return Complex(self.real * no.real - self.imaginary * no.imaginary, self.real * no.imaginary + self.imaginary * no.real)\n\n    def __truediv__(self, no):\n        return Complex((self.real * no.real + self.imaginary * no.imaginary)/(no.real**2 + no.imaginary**2), (self.imaginary * no.real - self.real * no.imaginary)/(no.real**2 + no.imaginary**2))\n\n    def mod(self):\n        return Complex(math.sqrt(self.real**2 + self.imaginary**2), 0)\n\n    def __str__(self):\n        if self.imaginary == 0:\n            result = \"%.2f+0.00i\" % (self.real)\n        elif self.real == 0:\n            if self.imaginary >= 0:\n                result = \"0.00+%.2fi\" % (self.imaginary)\n            else:\n                result = \"0.00-%.2fi\" % (abs(self.imaginary))\n        elif self.imaginary > 0:\n            result = \"%.2f+%.2fi\" % (self.real, self.imaginary)\n        else:\n            result = \"%.2f-%.2fi\" % (self.real, abs(self.imaginary))\n        return result\n\nif __name__ == '__main__':\n    c = map(float, input().split())\n    d = map(float, input().split())\n    x = Complex(*c)\n    y = Complex(*d)\n    print(*map(str, [x+y, x-y, x*y, x/y, x.mod(), y.mod()]), sep='\\n')\n"
    }
  ],
  "created": 1649728317,
  "object": "edit"
}
2022-04-11 21:52:01.564410 fix syntax errors 2 ['import math\n\nclass Complex(object):\n    def __init__(self, real, imaginary):\n        self.real = real\n        self.imaginary = imaginary\n        \n    def __add__(self, no):\n        return Complex(self.real + no.real, self.imaginary + no.imaginary)\n        \n    def __sub__(self, no):\n        return Complex(self.real - no.real, self.imaginary - no.imaginary)\n        \n    def __mul__(self, no):\n        return Complex(self.real * no.real - self.imaginary * no.imaginary, self.real * no.imaginary + self.imaginary * no.real)\n\n    def __truediv__(self, no):\n        return Complex((self.real * no.real + self.imaginary * no.imaginary)/(no.real**2 + no.imaginary**2), (self.imaginary * no.real - self.real * no.imaginary)/(no.real**2 + no.imaginary**2)) \n\n    def mod(self):\n        return Complex(math.sqrt(self.real**2 + self.imaginary**2), 0)\n\n    def __str__(self):\n        if self.imaginary == 0:\n            result = "%.2f+0.00i" % (self.real)\n        elif self.real == 0:\n            if self.imaginary >= 0:\n                result = "0.00+%.2fi" % (self.imaginary)\n            else:\n                result = "0.00-%.2fi" % (abs(self.imaginary))\n        elif self.imaginary > 0:\n            result = "%.2f+%.2fi" % (self.real, self.imaginary)\n        else:\n            result = "%.2f-%.2fi" % (self.real, abs(self.imaginary))\n        return result\n\nif __name__ == \'__main__\':\n    c = map(float, input().split())\n    d = map(float, input().split())\n    x = Complex(*c)\n    y = Complex(*d)\n    print(*map(str, [x+y, x-y, x*y, x/y, x.mod(), y.mod()]), sep=\'\\n\')\n', '\n\nimport math\n\nclass Complex(object):\n    def __init__(self, real, imaginary):\n        self.real = real\n        self.imaginary = imaginary\n        \n    def __add__(self, no):\n        return Complex(self.real + no.real, self.imaginary + no.imaginary)\n        \n    def __sub__(self, no):\n        return Complex(self.real - no.real, self.imaginary - no.imaginary)\n        \n    def __mul__(self, no):\n        return Complex(self.real * no.real - self.imaginary * no.imaginary, self.real * no.imaginary + self.imaginary * no.real)\n\n    def __truediv__(self, no):\n        return Complex((self.real * no.real + self.imaginary * no.imaginary)/(no.real**2 + no.imaginary**2), (self.imaginary * no.real - self.real * no.imaginary)/(no.real**2 + no.imaginary**2))\n\n    def mod(self):\n        return Complex(math.sqrt(self.real**2 + self.imaginary**2), 0)\n\n    def __str__(self):\n        if self.imaginary == 0:\n            result = "%.2f+0.00i" % (self.real)\n        elif self.real == 0:\n            if self.imaginary >= 0:\n                result = "0.00+%.2fi" % (self.imaginary)\n            else:\n                result = "0.00-%.2fi" % (abs(self.imaginary))\n        elif self.imaginary > 0:\n            result = "%.2f+%.2fi" % (self.real, self.imaginary)\n        else:\n            result = "%.2f-%.2fi" % (self.real, abs(self.imaginary))\n        return result\n\nif __name__ == \'__main__\':\n    c = map(float, input().split())\n    d = map(float, input().split())\n    x = Complex(*c)\n    y = Complex(*d)\n    print(*map(str, [x+y, x-y, x*y, x/y, x.mod(), y.mod()]), sep=\'\\n\')\n']
2022-04-11 21:52:04.139207 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport math\n\nclass Complex(object):\n    def __init__(self, real, imaginary):\n        self.real = real\n        self.imaginary = imaginary\n        \n    def __add__(self, no):\n        return Complex(self.real + no.real, self.imaginary + no.imaginary)\n        \n    def __sub__(self, no):\n        return Complex(self.real - no.real, self.imaginary - no.imaginary)\n        \n    def __mul__(self, no):\n        return Complex(self.real * no.real - self.imaginary * no.imaginary, self.real * no.imaginary + self.imaginary * no.real)\n\n    def __truediv__(self, no):\n        return Complex((self.real * no.real + self.imaginary * no.imaginary)/(no.real**2 + no.imaginary**2), (self.imaginary * no.real - self.real * no.imaginary)/(no.real**2 + no.imaginary**2))\n\n    def mod(self):\n        return Complex(math.sqrt(self.real**2 + self.imaginary**2), 0)\n\n    def __str__(self):\n        if self.imaginary == 0:\n            result = \"%.2f+0.00i\" % (self.real)\n        elif self.real == 0:\n            if self.imaginary >= 0:\n                result = \"0.00+%.2fi\" % (self.imaginary)\n            else:\n                result = \"0.00-%.2fi\" % (abs(self.imaginary))\n        elif self.imaginary > 0:\n            result = \"%.2f+%.2fi\" % (self.real, self.imaginary)\n        else:\n            result = \"%.2f-%.2fi\" % (self.real, abs(self.imaginary))\n        return result\n\nif __name__ == '__main__':\n    c = map(float, input().split())\n    d = map(float, input().split())\n    x = Complex(*c)\n    y = Complex(*d)\n    print(*map(str, [x+y, x-y, x*y, x/y, x.mod(), y.mod()]), sep='\\n')\n"
    },
    {
      "index": 1,
      "text": "\n\nimport math\n\nclass Complex(object):\n    def __init__(self, real, imaginary):\n        self.real = real\n        self.imaginary = imaginary\n        \n    def __add__(self, no):\n        return Complex(self.real + no.real, self.imaginary + no.imaginary)\n        \n    def __sub__(self, no):\n        return Complex(self.real - no.real, self.imaginary - no.imaginary)\n        \n    def __mul__(self, no):\n        return Complex(self.real * no.real - self.imaginary * no.imaginary, self.real * no.imaginary + self.imaginary * no.real)\n\n    def __truediv__(self, no):\n        return Complex((self.real * no.real + self.imaginary * no.imaginary)/(no.real**2 + no.imaginary**2), (self.imaginary * no.real - self.real * no.imaginary)/(no.real**2 + no.imaginary**2))\n\n    def mod(self):\n        return Complex(math.sqrt(self.real**2 + self.imaginary**2), 0)\n\n    def __str__(self):\n        if self.imaginary == 0:\n            result = \"%.2f+0.00i\" % (self.real)\n        elif self.real == 0:\n            if self.imaginary >= 0:\n                result = \"0.00+%.2fi\" % (self.imaginary)\n            else:\n                result = \"0.00-%.2fi\" % (abs(self.imaginary))\n        elif self.imaginary > 0:\n            result = \"%.2f+%.2fi\" % (self.real, self.imaginary)\n        else:\n            result = \"%.2f-%.2fi\" % (self.real, abs(self.imaginary))\n        return result\n\nif __name__ == '__main__':\n    c = map(float, input().split())\n    d = map(float, input().split())\n    x = Complex(*c)\n    y = Complex(*d)\n    print(*map(str, [x+y, x-y, x*y, x/y, x.mod(), y.mod()]), sep='\\n')\n"
    }
  ],
  "created": 1649728321,
  "object": "edit"
}
2022-04-11 21:52:04.139622 fix syntax errors 2 ['\n\nimport math\n\nclass Complex(object):\n    def __init__(self, real, imaginary):\n        self.real = real\n        self.imaginary = imaginary\n        \n    def __add__(self, no):\n        return Complex(self.real + no.real, self.imaginary + no.imaginary)\n        \n    def __sub__(self, no):\n        return Complex(self.real - no.real, self.imaginary - no.imaginary)\n        \n    def __mul__(self, no):\n        return Complex(self.real * no.real - self.imaginary * no.imaginary, self.real * no.imaginary + self.imaginary * no.real)\n\n    def __truediv__(self, no):\n        return Complex((self.real * no.real + self.imaginary * no.imaginary)/(no.real**2 + no.imaginary**2), (self.imaginary * no.real - self.real * no.imaginary)/(no.real**2 + no.imaginary**2))\n\n    def mod(self):\n        return Complex(math.sqrt(self.real**2 + self.imaginary**2), 0)\n\n    def __str__(self):\n        if self.imaginary == 0:\n            result = "%.2f+0.00i" % (self.real)\n        elif self.real == 0:\n            if self.imaginary >= 0:\n                result = "0.00+%.2fi" % (self.imaginary)\n            else:\n                result = "0.00-%.2fi" % (abs(self.imaginary))\n        elif self.imaginary > 0:\n            result = "%.2f+%.2fi" % (self.real, self.imaginary)\n        else:\n            result = "%.2f-%.2fi" % (self.real, abs(self.imaginary))\n        return result\n\nif __name__ == \'__main__\':\n    c = map(float, input().split())\n    d = map(float, input().split())\n    x = Complex(*c)\n    y = Complex(*d)\n    print(*map(str, [x+y, x-y, x*y, x/y, x.mod(), y.mod()]), sep=\'\\n\')\n', '\n\nimport math\n\nclass Complex(object):\n    def __init__(self, real, imaginary):\n        self.real = real\n        self.imaginary = imaginary\n        \n    def __add__(self, no):\n        return Complex(self.real + no.real, self.imaginary + no.imaginary)\n        \n    def __sub__(self, no):\n        return Complex(self.real - no.real, self.imaginary - no.imaginary)\n        \n    def __mul__(self, no):\n        return Complex(self.real * no.real - self.imaginary * no.imaginary, self.real * no.imaginary + self.imaginary * no.real)\n\n    def __truediv__(self, no):\n        return Complex((self.real * no.real + self.imaginary * no.imaginary)/(no.real**2 + no.imaginary**2), (self.imaginary * no.real - self.real * no.imaginary)/(no.real**2 + no.imaginary**2))\n\n    def mod(self):\n        return Complex(math.sqrt(self.real**2 + self.imaginary**2), 0)\n\n    def __str__(self):\n        if self.imaginary == 0:\n            result = "%.2f+0.00i" % (self.real)\n        elif self.real == 0:\n            if self.imaginary >= 0:\n                result = "0.00+%.2fi" % (self.imaginary)\n            else:\n                result = "0.00-%.2fi" % (abs(self.imaginary))\n        elif self.imaginary > 0:\n            result = "%.2f+%.2fi" % (self.real, self.imaginary)\n        else:\n            result = "%.2f-%.2fi" % (self.real, abs(self.imaginary))\n        return result\n\nif __name__ == \'__main__\':\n    c = map(float, input().split())\n    d = map(float, input().split())\n    x = Complex(*c)\n    y = Complex(*d)\n    print(*map(str, [x+y, x-y, x*y, x/y, x.mod(), y.mod()]), sep=\'\\n\')\n']
2022-04-11 21:52:04.139662 size on output set 2
2022-04-11 21:52:04.139690 num operations 2
2022-04-11 21:52:04.139695 size on input set 1
2022-04-11 21:52:07.130458 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "import math\n\nclass Complex(object):\n    def __init__(self, real, imaginary):\n        self.real = real\n        self.imaginary = imaginary\n\n    def __add__(self, no):\n        return Complex(self.real + no.real, self.imaginary + no.imaginary)\n\n    def __sub__(self, no):\n        return Complex(self.real - no.real, self.imaginary - no.imaginary)\n\n    def __mul__(self, no):\n        return Complex(self.real*no.real - self.imaginary*no.imaginary, self.real*no.imaginary + self.imaginary*no.real)\n\n    def __truediv__(self, no):\n        return Complex((self.real*no.real + self.imaginary*no.imaginary)/(no.real**2 + no.imaginary**2), (self.imaginary*no.real - self.real*no.imaginary)/(no.real**2 + no.imaginary**2))\n\n    def mod(self):\n        return Complex(math.sqrt(self.real**2 + self.imaginary**2), 0)\n\n    def __str__(self):\n        if self.imaginary == 0:\n            result = \"%.2f+0.00i\" % (self.real)\n        elif self.real == 0:\n            if self.imaginary >= 0:\n                result = \"0.00+%.2fi\" % (self.imaginary)\n            else:\n                result = \"0.00-%.2fi\" % (abs(self.imaginary))\n        elif self.imaginary > 0:\n            result = \"%.2f+%.2fi\" % (self.real, self.imaginary)\n        else:\n            result = \"%.2f-%.2fi\" % (self.real, abs(self.imaginary))\n        return result\n\nif __name__ == '__main__':\n    c = map(float, input().split())\n    d = map(float, input().split())\n    x = Complex(*c)\n    y = Complex(*d)\n    print(*map(str, [x+y, x-y, x*y, x/y, x.mod(), y.mod()]), sep='\\n')\n"
    },
    {
      "index": 1,
      "text": "\nimport math\n\nclass Complex(object):\n    def __init__(self, real, imaginary):\n        self.real = real\n        self.imaginary = imaginary\n        \n    def __add__(self, no):\n        return Complex(self.real + no.real, self.imaginary + no.imaginary)\n        \n    def __sub__(self, no):\n        return Complex(self.real - no.real, self.imaginary - no.imaginary)\n        \n    def __mul__(self, no):\n        return Complex(self.real*no.real - self.imaginary*no.imaginary, self.real*no.imaginary + self.imaginary*no.real)\n        \n    def __truediv__(self, no): #__div__(self, no)\n        return Complex((self.real*no.real + self.imaginary*no.imaginary)/(no.real**2 + no.imaginary**2), (self.imaginary*no.real - self.real*no.imaginary)/(no.real**2 + no.imaginary**2))\n\n    def mod(self):\n        return Complex(math.sqrt(self.real**2 + self.imaginary**2), 0)\n\n    def __str__(self):\n        if self.imaginary == 0:\n            result = \"%.2f+0.00i\" % (self.real)\n        elif self.real == 0:\n            if self.imaginary >= 0:\n                result = \"0.00+%.2fi\" % (self.imaginary)\n            else:\n                result = \"0.00-%.2fi\" % (abs(self.imaginary))\n        elif self.imaginary > 0:\n            result = \"%.2f+%.2fi\" % (self.real, self.imaginary)\n        else:\n            result = \"%.2f-%.2fi\" % (self.real, abs(self.imaginary))\n        return result\n\nif __name__ == '__main__':\n    c = map(float, input().split())\n    d = map(float, input().split())\n    x = Complex(*c)\n    y = Complex(*d)\n    print(*map(str, [x+y, x-y, x*y, x/y, x.mod(), y.mod()]), sep='\\n')\n"
    }
  ],
  "created": 1649728324,
  "object": "edit"
}
2022-04-11 21:52:07.130991 fix spelling mistakes 2 ['import math\n\nclass Complex(object):\n    def __init__(self, real, imaginary):\n        self.real = real\n        self.imaginary = imaginary\n\n    def __add__(self, no):\n        return Complex(self.real + no.real, self.imaginary + no.imaginary)\n\n    def __sub__(self, no):\n        return Complex(self.real - no.real, self.imaginary - no.imaginary)\n\n    def __mul__(self, no):\n        return Complex(self.real*no.real - self.imaginary*no.imaginary, self.real*no.imaginary + self.imaginary*no.real)\n\n    def __truediv__(self, no):\n        return Complex((self.real*no.real + self.imaginary*no.imaginary)/(no.real**2 + no.imaginary**2), (self.imaginary*no.real - self.real*no.imaginary)/(no.real**2 + no.imaginary**2))\n\n    def mod(self):\n        return Complex(math.sqrt(self.real**2 + self.imaginary**2), 0)\n\n    def __str__(self):\n        if self.imaginary == 0:\n            result = "%.2f+0.00i" % (self.real)\n        elif self.real == 0:\n            if self.imaginary >= 0:\n                result = "0.00+%.2fi" % (self.imaginary)\n            else:\n                result = "0.00-%.2fi" % (abs(self.imaginary))\n        elif self.imaginary > 0:\n            result = "%.2f+%.2fi" % (self.real, self.imaginary)\n        else:\n            result = "%.2f-%.2fi" % (self.real, abs(self.imaginary))\n        return result\n\nif __name__ == \'__main__\':\n    c = map(float, input().split())\n    d = map(float, input().split())\n    x = Complex(*c)\n    y = Complex(*d)\n    print(*map(str, [x+y, x-y, x*y, x/y, x.mod(), y.mod()]), sep=\'\\n\')\n', '\nimport math\n\nclass Complex(object):\n    def __init__(self, real, imaginary):\n        self.real = real\n        self.imaginary = imaginary\n        \n    def __add__(self, no):\n        return Complex(self.real + no.real, self.imaginary + no.imaginary)\n        \n    def __sub__(self, no):\n        return Complex(self.real - no.real, self.imaginary - no.imaginary)\n        \n    def __mul__(self, no):\n        return Complex(self.real*no.real - self.imaginary*no.imaginary, self.real*no.imaginary + self.imaginary*no.real)\n        \n    def __truediv__(self, no): #__div__(self, no)\n        return Complex((self.real*no.real + self.imaginary*no.imaginary)/(no.real**2 + no.imaginary**2), (self.imaginary*no.real - self.real*no.imaginary)/(no.real**2 + no.imaginary**2))\n\n    def mod(self):\n        return Complex(math.sqrt(self.real**2 + self.imaginary**2), 0)\n\n    def __str__(self):\n        if self.imaginary == 0:\n            result = "%.2f+0.00i" % (self.real)\n        elif self.real == 0:\n            if self.imaginary >= 0:\n                result = "0.00+%.2fi" % (self.imaginary)\n            else:\n                result = "0.00-%.2fi" % (abs(self.imaginary))\n        elif self.imaginary > 0:\n            result = "%.2f+%.2fi" % (self.real, self.imaginary)\n        else:\n            result = "%.2f-%.2fi" % (self.real, abs(self.imaginary))\n        return result\n\nif __name__ == \'__main__\':\n    c = map(float, input().split())\n    d = map(float, input().split())\n    x = Complex(*c)\n    y = Complex(*d)\n    print(*map(str, [x+y, x-y, x*y, x/y, x.mod(), y.mod()]), sep=\'\\n\')\n']
2022-04-11 21:52:07.131078 size on output set 2
2022-04-11 21:52:07.131088 size on input set 2
2022-04-11 21:52:10.014008 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import math\n\nclass Complex(object):\n    def __init__(self, real, imaginary):\n        self.real = real\n        self.imaginary = imaginary\n        \n    def __add__(self, no):\n        return Complex(self.real + no.real, self.imaginary + no.imaginary)\n        \n    def __sub__(self, no):\n        return Complex(self.real - no.real, self.imaginary - no.imaginary)\n        \n    def __mul__(self, no):\n        return Complex(self.real*no.real - self.imaginary*no.imaginary, self.real*no.imaginary + self.imaginary*no.real)\n        \n    def __truediv__(self, no):\n        return Complex((self.real*no.real + self.imaginary*no.imaginary)/(no.real**2 + no.imaginary**2), (self.imaginary*no.real - self.real*no.imaginary)/(no.real**2 + no.imaginary**2))\n\n    def mod(self):\n        return Complex(math.sqrt(self.real**2 + self.imaginary**2), 0)\n\n    def __str__(self):\n        if self.imaginary == 0:\n            result = \"%.2f+0.00i\" % (self.real)\n        elif self.real == 0:\n            if self.imaginary >= 0:\n                result = \"0.00+%.2fi\" % (self.imaginary)\n            else:\n                result = \"0.00-%.2fi\" % (abs(self.imaginary))\n        elif self.imaginary > 0:\n            result = \"%.2f+%.2fi\" % (self.real, self.imaginary)\n        else:\n            result = \"%.2f-%.2fi\" % (self.real, abs(self.imaginary))\n        return result\n\nif __name__ == '__main__':\n    c = map(float, input().split())\n    d = map(float, input().split())\n    x = Complex(*c)\n    y = Complex(*d)\n    print(*map(str, [x+y, x-y, x*y, x/y, x.mod(), y.mod()]), sep='\\n')\n"
    },
    {
      "index": 1,
      "text": "\nimport math\n\nclass Complex(object):\n    def __init__(self, real, imaginary):\n        self.real = real\n        self.imaginary = imaginary\n        \n    def __add__(self, no):\n        return Complex(self.real + no.real, self.imaginary + no.imaginary)\n        \n    def __sub__(self, no):\n        return Complex(self.real - no.real, self.imaginary - no.imaginary)\n        \n    def __mul__(self, no):\n        return Complex(self.real*no.real - self.imaginary*no.imaginary, self.real*no.imaginary + self.imaginary*no.real)\n        \n    def __truediv__(self, no):\n        return Complex((self.real*no.real + self.imaginary*no.imaginary)/(no.real**2 + no.imaginary**2), (self.imaginary*no.real - self.real*no.imaginary)/(no.real**2 + no.imaginary**2))\n\n    def mod(self):\n        return Complex(math.sqrt(self.real**2 + self.imaginary**2), 0)\n\n    def __str__(self):\n        if self.imaginary == 0:\n            result = \"%.2f+0.00i\" % (self.real)\n        elif self.real == 0:\n            if self.imaginary >= 0:\n                result = \"0.00+%.2fi\" % (self.imaginary)\n            else:\n                result = \"0.00-%.2fi\" % (abs(self.imaginary))\n        elif self.imaginary > 0:\n            result = \"%.2f+%.2fi\" % (self.real, self.imaginary)\n        else:\n            result = \"%.2f-%.2fi\" % (self.real, abs(self.imaginary))\n        return result\n\nif __name__ == '__main__':\n    c = map(float, input().split())\n    d = map(float, input().split())\n    x = Complex(*c)\n    y = Complex(*d)\n    print(*map(str, [x+y, x-y, x*y, x/y, x.mod(), y.mod()]), sep='\\n')\n"
    }
  ],
  "created": 1649728327,
  "object": "edit"
}
2022-04-11 21:52:10.014471 fix syntax errors 2 ['import math\n\nclass Complex(object):\n    def __init__(self, real, imaginary):\n        self.real = real\n        self.imaginary = imaginary\n        \n    def __add__(self, no):\n        return Complex(self.real + no.real, self.imaginary + no.imaginary)\n        \n    def __sub__(self, no):\n        return Complex(self.real - no.real, self.imaginary - no.imaginary)\n        \n    def __mul__(self, no):\n        return Complex(self.real*no.real - self.imaginary*no.imaginary, self.real*no.imaginary + self.imaginary*no.real)\n        \n    def __truediv__(self, no):\n        return Complex((self.real*no.real + self.imaginary*no.imaginary)/(no.real**2 + no.imaginary**2), (self.imaginary*no.real - self.real*no.imaginary)/(no.real**2 + no.imaginary**2))\n\n    def mod(self):\n        return Complex(math.sqrt(self.real**2 + self.imaginary**2), 0)\n\n    def __str__(self):\n        if self.imaginary == 0:\n            result = "%.2f+0.00i" % (self.real)\n        elif self.real == 0:\n            if self.imaginary >= 0:\n                result = "0.00+%.2fi" % (self.imaginary)\n            else:\n                result = "0.00-%.2fi" % (abs(self.imaginary))\n        elif self.imaginary > 0:\n            result = "%.2f+%.2fi" % (self.real, self.imaginary)\n        else:\n            result = "%.2f-%.2fi" % (self.real, abs(self.imaginary))\n        return result\n\nif __name__ == \'__main__\':\n    c = map(float, input().split())\n    d = map(float, input().split())\n    x = Complex(*c)\n    y = Complex(*d)\n    print(*map(str, [x+y, x-y, x*y, x/y, x.mod(), y.mod()]), sep=\'\\n\')\n', '\nimport math\n\nclass Complex(object):\n    def __init__(self, real, imaginary):\n        self.real = real\n        self.imaginary = imaginary\n        \n    def __add__(self, no):\n        return Complex(self.real + no.real, self.imaginary + no.imaginary)\n        \n    def __sub__(self, no):\n        return Complex(self.real - no.real, self.imaginary - no.imaginary)\n        \n    def __mul__(self, no):\n        return Complex(self.real*no.real - self.imaginary*no.imaginary, self.real*no.imaginary + self.imaginary*no.real)\n        \n    def __truediv__(self, no):\n        return Complex((self.real*no.real + self.imaginary*no.imaginary)/(no.real**2 + no.imaginary**2), (self.imaginary*no.real - self.real*no.imaginary)/(no.real**2 + no.imaginary**2))\n\n    def mod(self):\n        return Complex(math.sqrt(self.real**2 + self.imaginary**2), 0)\n\n    def __str__(self):\n        if self.imaginary == 0:\n            result = "%.2f+0.00i" % (self.real)\n        elif self.real == 0:\n            if self.imaginary >= 0:\n                result = "0.00+%.2fi" % (self.imaginary)\n            else:\n                result = "0.00-%.2fi" % (abs(self.imaginary))\n        elif self.imaginary > 0:\n            result = "%.2f+%.2fi" % (self.real, self.imaginary)\n        else:\n            result = "%.2f-%.2fi" % (self.real, abs(self.imaginary))\n        return result\n\nif __name__ == \'__main__\':\n    c = map(float, input().split())\n    d = map(float, input().split())\n    x = Complex(*c)\n    y = Complex(*d)\n    print(*map(str, [x+y, x-y, x*y, x/y, x.mod(), y.mod()]), sep=\'\\n\')\n']
2022-04-11 21:52:13.455915 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import math\n\nclass Complex(object):\n    def __init__(self, real, imaginary):\n        self.real = real\n        self.imaginary = imaginary\n\n    def __add__(self, no):\n        return Complex(self.real + no.real, self.imaginary + no.imaginary)\n\n    def __sub__(self, no):\n        return Complex(self.real - no.real, self.imaginary - no.imaginary)\n\n    def __mul__(self, no):\n        return Complex(self.real*no.real - self.imaginary*no.imaginary, self.real*no.imaginary + self.imaginary*no.real)\n\n    def __truediv__(self, no):\n        return Complex((self.real*no.real + self.imaginary*no.imaginary)/(no.real**2 + no.imaginary**2), (self.imaginary*no.real - self.real*no.imaginary)/(no.real**2 + no.imaginary**2))\n\n    def mod(self):\n        return Complex(math.sqrt(self.real**2 + self.imaginary**2), 0)\n\n    def __str__(self):\n        if self.imaginary == 0:\n            result = \"%.2f+0.00i\" % (self.real)\n        elif self.real == 0:\n            if self.imaginary >= 0:\n                result = \"0.00+%.2fi\" % (self.imaginary)\n            else:\n                result = \"0.00-%.2fi\" % (abs(self.imaginary))\n        elif self.imaginary > 0:\n            result = \"%.2f+%.2fi\" % (self.real, self.imaginary)\n        else:\n            result = \"%.2f-%.2fi\" % (self.real, abs(self.imaginary))\n        return result\n\nif __name__ == '__main__':\n    c = map(float, input().split())\n    d = map(float, input().split())\n    x = Complex(*c)\n    y = Complex(*d)\n    print(*map(str, [x+y, x-y, x*y, x/y, x.mod(), y.mod()]), sep='\\n') \n"
    },
    {
      "index": 1,
      "text": "import math\n\nclass Complex(object):\n    def __init__(self, real, imaginary):\n        self.real = real\n        self.imaginary = imaginary\n\n    def __add__(self, no):\n        return Complex(self.real + no.real, self.imaginary + no.imaginary)\n\n    def __sub__(self, no):\n        return Complex(self.real - no.real, self.imaginary - no.imaginary)\n\n    def __mul__(self, no):\n        return Complex(self.real*no.real - self.imaginary*no.imaginary, self.real*no.imaginary + self.imaginary*no.real)\n\n    def __truediv__(self, no):\n        return Complex((self.real*no.real + self.imaginary*no.imaginary)/(no.real**2 + no.imaginary**2), (self.imaginary*no.real - self.real*no.imaginary)/(no.real**2 + no.imaginary**2))\n\n    def mod(self):\n        return Complex(math.sqrt(self.real**2 + self.imaginary**2), 0)\n\n    def __str__(self):\n        if self.imaginary == 0:\n            result = \"%.2f+0.00i\" % (self.real)\n        elif self.real == 0:\n            if self.imaginary >= 0:\n                result = \"0.00+%.2fi\" % (self.imaginary)\n            else:\n                result = \"0.00-%.2fi\" % (abs(self.imaginary))\n        elif self.imaginary > 0:\n            result = \"%.2f+%.2fi\" % (self.real, self.imaginary)\n        else:\n            result = \"%.2f-%.2fi\" % (self.real, abs(self.imaginary))\n        return result\n\nif __name__ == '__main__':\n    c = list(map(float, input().split()))\n    d = list(map(float, input().split()))\n    x = Complex(*c)\n    y = Complex(*d)\n    print(*map(str, [x+y, x-y, x*y, x/y, x.mod(), y.mod()]), sep='\\n')\n"
    }
  ],
  "created": 1649728330,
  "object": "edit"
}
2022-04-11 21:52:13.456211 fix syntax errors 2 ['import math\n\nclass Complex(object):\n    def __init__(self, real, imaginary):\n        self.real = real\n        self.imaginary = imaginary\n\n    def __add__(self, no):\n        return Complex(self.real + no.real, self.imaginary + no.imaginary)\n\n    def __sub__(self, no):\n        return Complex(self.real - no.real, self.imaginary - no.imaginary)\n\n    def __mul__(self, no):\n        return Complex(self.real*no.real - self.imaginary*no.imaginary, self.real*no.imaginary + self.imaginary*no.real)\n\n    def __truediv__(self, no):\n        return Complex((self.real*no.real + self.imaginary*no.imaginary)/(no.real**2 + no.imaginary**2), (self.imaginary*no.real - self.real*no.imaginary)/(no.real**2 + no.imaginary**2))\n\n    def mod(self):\n        return Complex(math.sqrt(self.real**2 + self.imaginary**2), 0)\n\n    def __str__(self):\n        if self.imaginary == 0:\n            result = "%.2f+0.00i" % (self.real)\n        elif self.real == 0:\n            if self.imaginary >= 0:\n                result = "0.00+%.2fi" % (self.imaginary)\n            else:\n                result = "0.00-%.2fi" % (abs(self.imaginary))\n        elif self.imaginary > 0:\n            result = "%.2f+%.2fi" % (self.real, self.imaginary)\n        else:\n            result = "%.2f-%.2fi" % (self.real, abs(self.imaginary))\n        return result\n\nif __name__ == \'__main__\':\n    c = map(float, input().split())\n    d = map(float, input().split())\n    x = Complex(*c)\n    y = Complex(*d)\n    print(*map(str, [x+y, x-y, x*y, x/y, x.mod(), y.mod()]), sep=\'\\n\') \n', 'import math\n\nclass Complex(object):\n    def __init__(self, real, imaginary):\n        self.real = real\n        self.imaginary = imaginary\n\n    def __add__(self, no):\n        return Complex(self.real + no.real, self.imaginary + no.imaginary)\n\n    def __sub__(self, no):\n        return Complex(self.real - no.real, self.imaginary - no.imaginary)\n\n    def __mul__(self, no):\n        return Complex(self.real*no.real - self.imaginary*no.imaginary, self.real*no.imaginary + self.imaginary*no.real)\n\n    def __truediv__(self, no):\n        return Complex((self.real*no.real + self.imaginary*no.imaginary)/(no.real**2 + no.imaginary**2), (self.imaginary*no.real - self.real*no.imaginary)/(no.real**2 + no.imaginary**2))\n\n    def mod(self):\n        return Complex(math.sqrt(self.real**2 + self.imaginary**2), 0)\n\n    def __str__(self):\n        if self.imaginary == 0:\n            result = "%.2f+0.00i" % (self.real)\n        elif self.real == 0:\n            if self.imaginary >= 0:\n                result = "0.00+%.2fi" % (self.imaginary)\n            else:\n                result = "0.00-%.2fi" % (abs(self.imaginary))\n        elif self.imaginary > 0:\n            result = "%.2f+%.2fi" % (self.real, self.imaginary)\n        else:\n            result = "%.2f-%.2fi" % (self.real, abs(self.imaginary))\n        return result\n\nif __name__ == \'__main__\':\n    c = list(map(float, input().split()))\n    d = list(map(float, input().split()))\n    x = Complex(*c)\n    y = Complex(*d)\n    print(*map(str, [x+y, x-y, x*y, x/y, x.mod(), y.mod()]), sep=\'\\n\')\n']
2022-04-11 21:52:13.456273 size on output set 4
