["\n\nn = int(input())\n\nfor i in range(n):\n    x = int(input())\n    if i == 0:\n        low = 1\n        high = x\n    else:\n        low = x + 1\n        high = x\n\nfor i in range(low, high+1):\n    print(i)\n", "# Find the missing number in the list\n\nn = int(input())\nl = []\nfor i in range(n):\n    l.append(int(input()))\n\nfor i in range(1,l[-1]+1):\n    if i not in l:\n        print(i)\nelse:\n    print(\"good job\")\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    numbers = []\n    for i in range(n):\n        numbers.append(int(sys.stdin.readline().strip()))\n    numbers = set(numbers)\n    if len(numbers) == max(numbers):\n        print(\"good job\")\n    else:\n        for i in range(1,max(numbers)+1):\n            if i not in numbers:\n                print(i)\n\nif __name__ == '__main__':\n    main()\n", "low = 0\nhigh = 0\nn = int(input())\n\nfor i in range(n):\n    x = int(input())\n    if i == 0:\n        low = x\n        high = x\n    else:\n        if x < low:\n            low = x\n        if x > high:\n            high = x\n\nfor i in range(low, high+1):\n    print(i)\n", "import sys\n\n# Read lines from stdin.\nlines = [line.strip() for line in sys.stdin]\n\n# Parse input.\nn = int(lines[0])\nrecited = [int(line) for line in lines[1:]]\n\n# Find missing numbers.\nmissing = []\nfor i in range(1, recited[-1] + 1):\n    if i not in recited:\n        missing.append(i)\n\n# Print results.\nif len(missing) == 0:\n    print(\"good job\")\nelse:\n    for num in missing:\n        print(num)\n", "\nn = int(input())\nrecited_numbers = []\n\nfor i in range(n):\n    recited_numbers.append(int(input()))\n\nfor i in range(1, recited_numbers[-1] + 1):\n    if i not in recited_numbers:\n        print(i)\n\nif len(recited_numbers) == recited_numbers[-1]:\n    print(\"good job\")\n", "\n\ndef main():\n    n = int(input())\n    lst = []\n    for x in range(n):\n        lst.append(int(input()))\n\n    for x in range(1, lst[n-1]+1):\n        if x not in lst:\n            print(x)\n\n\nmain()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    recite = [int(sys.stdin.readline().strip()) for _ in range(n)]\n    missing = []\n    for i in range(1, recite[-1] + 1):\n        if i not in recite:\n            missing.append(i)\n    if len(missing) > 0:\n        for m in missing:\n            print(m)\n    else:\n        print(\"good job\")\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    numbers = []\n    for i in range(n):\n        numbers.append(int(sys.stdin.readline().strip()))\n    numbers = set(numbers)\n    if len(numbers) == numbers[-1]: # if the length of the set is the same as the last element in the set\n        print(\"good job\")\n    else:\n        for i in range(1,numbers[-1]+1): # if the length of the set is not the same as the last element in the set\n            if i not in numbers:\n                print(i)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\n# Read lines from stdin.\nlines = [line.strip() for line in sys.stdin]\n\n# Parse input.\nn = int(lines[0])\nrecited = [int(line) for line in lines[1:]]\n\n# Find missing numbers.\nmissing = []\nfor i in range(1, recited[-1] + 1):\n    if i not in recited:\n        missing.append(i)\n\n# Print results.\nif len(missing) == 0:\n    print(\"good job\")\nelse:\n    for num in missing:\n        print(num)\n", "\nimport sys\n\n# Read lines from stdin\nlines = [line.strip() for line in sys.stdin]\n# Parse input\nn = int(lines[0])\nrecited = [int(line) for line in lines[1:]]\n# Find missing number\nmissing = []\nfor i in range(1, recited[-1] + 1):\n    if i not in recited:\n        missing.append(i)\n# Print results\nif len(missing) == 0:\n    print(\"good job\")\nelse:\n    for num in missing:\n        print(num)\n", "\n\ndef main():\n    n = int(input())\n    recite = []\n    for _ in range(n):\n        recite.append(int(input()))\n    recite.sort()\n    if recite[0] != 1:\n        print(1)\n    else:\n        for i in range(n-1):\n            if recite[i+1] - recite[i] != 1:\n                for j in range(recite[i]+1, recite[i+1]):\n                    print(j)\n    if recite[-1] != 200:\n        print(recite[-1]+1)\n\nif __name__ == \"__main__\":\n    main()\n", "\nlow = 0\nhigh = 0\nn = int(input())\n\nfor i in range(n):\n    x = int(input())\n    if x < low:\n        low = x\n    if x > high:\n        high = x\n\nfor i in range(low, high+1):\n    print(i)\n", "# Find the missing number\n\nn = int(input())\nl = []\nfor i in range(n):\n    l.append(int(input()))\n\nfor i in range(1, l[-1]+1):\n    if i not in l:\n        print(i)\n        break\nelse: print(\"good job\")\n", "\n\ndef main():\n    n = int(input())\n    recite = []\n    for _ in range(n):\n        recite.append(int(input()))\n    recite.sort()\n    for i in range(n-1):\n        if recite[i+1] - recite[i] != 1:\n            for j in range(recite[i]+1, recite[i+1]):\n                print(j)\n    if recite[-1] != 200:\n        print(recite[-1]+1)\n\nif __name__ == \"__main__\":\n    main()\n", "\nn = int(input())\nrecited = []\n\nfor i in range(n):\n    recited.append(int(input()))\n\nfor i in range(1, recited[-1] + 1):\n    if i not in recited:\n        print(i)\n\nif len(recited) == recited[-1]:\n    print(\"good job\")\n", "\n\nn = int(input())\n\nfor i in range(n):\n    x = int(input())\n    if i == 0:\n        low = 1\n        high = x\n    else:\n        low = x + 1\n        high = x\n\nfor i in range(low, high + 1):\n    print(i)\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    numbers = []\n    for i in range(n):\n        numbers.append(int(sys.stdin.readline().strip()))\n    numbers_set = set(numbers)\n    if len(numbers_set) == numbers[-1]:\n        print(\"good job\")\n    else:\n        for i in range(1,numbers[-1]+1):\n            if i not in numbers_set:\n                print(i)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    numbers = []\n    for i in range(n):\n        numbers.append(int(sys.stdin.readline().strip()))\n    numbers_set = set(numbers[:-1])\n    if len(numbers_set) == numbers[-1] - 1:\n        print(\"good job\")\n    else:\n        for i in range(1,numbers[-1]):\n            if i not in numbers_set:\n                print(i)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\n# Read lines from stdin\nlines = [line.strip() for line in sys.stdin]\n\n# Parse input\nn = int(lines[0])\nrecited = [int(line) for line in lines[1:]]\n\n# Find missing number\nmissing = []\nfor i in range(1, recited[-1] + 1):\n    if i not in recited:\n        missing.append(i)\n\n# Print results\nif len(missing) == 0:\n    print(\"good job\")\nelse:\n    for num in missing:\n        print(num)\n", "\nn = int(input())\nrecited_numbers = []\n\nfor i in range(n):\n    recited_numbers.append(int(input()))\n\nfor i in range(1, recited_numbers[-1] + 1):\n    if i not in recited_numbers:\n        print(i)\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    recite = [int(sys.stdin.readline().strip()) for _ in range(n)]\n    missing = []\n    for i in range(1, recite[-1] + 1):\n        if i not in recite:\n            missing.append(i)\n    if len(missing) > 0:\n        for m in missing:\n            print(m)\n    else:\n        print(\"good job\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nn = int(input())\nl = []\nfor i in range(n):\n    l.append(int(input()))\n\nfor i in range(1,l[-1]+1):\n    if i not in l:\n        print(i)\nprint(\"Good job\")\n"]