["\nimport sys\n\n# read input\nR, C, ZR, ZC = map(int, sys.stdin.readline().split())\narticle = []\nfor _ in range(R):\n    article.append([s for s in sys.stdin.readline().rstrip()])\n\n# enlarge article\nenlarged = []\nfor row in article:\n    enlarged_row = []\n    for c in row:\n        enlarged_row.extend([c]*ZC)\n    enlarged.extend([enlarged_row]*ZR)\n\n# print enlarged article\nfor row in enlarged:\n    print(''.join(row))\n", "\n# input\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for k in range(zr):\n        for j in range(c):\n            for l in range(zc):\n                print(line[j], end='')\n        print()\n", "\n\ndef main():\n    R, C, ZR, ZC = [int(i) for i in input().split()]\n    article = [input() for i in range(R)]\n\n                new_line = ''\n    for i in range(R):\n        for j in range(ZR):\n            for k in range(C):\n                for l in range(ZC):\n                    new_line += article[i][k]\n                print(new_line)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    # read input\n    R, C, ZR, ZC = map(int, sys.stdin.readline().split())\n    article = []\n    for _ in range(R):\n        article.append([s for s in sys.stdin.readline().rstrip()])\n\n    # enlarge article\n    enlarged = []\n    for row in article:\n        enlarged_row = []\n        for c in row:\n            enlarged_row.extend([c]*ZC)\n        enlarged.extend([enlarged_row]*ZR)\n\n    # print enlarged article\n    for row in enlarged:\n        print(''.join(row))\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    R, C, ZR, ZC = map(int, input().split())\n    article = [input() for _ in range(R)]\n    for row in article:\n        for i in range(ZR):\n            for char in row:\n                for j in range(ZC):\n                    print(char, end='')\n            print()\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    R, C, ZR, ZC = map(int, input().split())\n    matrix = [list(input()) for _ in range(R)]\n    for row in range(R):\n        for i in range(ZR):\n            for char in matrix[row]:\n                for j in range(ZC):\n                    print(char, end='')\n            print()\n\nif __name__ == '__main__':\n    main()\n", "print(\"Hello World\")\n", "\n\ndef main():\n    R, C, ZR, ZC = map(int, input().split())  # R: \u884c\u6570\u3001C: \u5217\u6570\u3001ZR: \u884c\u65b9\u5411\u306b\u500d\u7387\u3001ZC: \u5217\u65b9\u5411\u306b\u500d\u7387\n    article = [input() for _ in range(R)]\n    for i in range(ZR):\n        for row in article:\n            for j in range(ZC):\n                for char in row:\n                    print(char, end='')\n                print()\n        print()\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    R, C, Zr, Zc = map(int, input().split())\n    lines = [input() for _ in range(R)]\n    for line in lines:\n        for i in range(Zr):\n            for char in line:\n                for j in range(Zc):\n                    print(char, end='')  # end='' is to avoid the newline\n            print()  # newline\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    r, c, zr, zc = [int(i) for i in input().split()]\n    article = [input() for _ in range(r)]\n\n    for i in range(r):\n        for _ in range(zr):\n            new_line = ''\n            for k in range(c):\n                for _ in range(zc):\n                    new_line += article[i][k]\n            print(new_line)\n\nif __name__ == '__main__':\n    main()\n", "r, c, zr, zc = map(int, input().split())\n\narticle = []\nfor i in range(r):\n    article.append(input())\n\nfor i in range(r):\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(article[i][k], end=\"\")\n        print()\n", "#input\nr, c, zr, zc = map(int, input().split()) #row, column, zoom row, zoom column\n\nfor i in range(r):\n    line = input() #input each line\n    for k in range(zr):\n        for j in range(c):\n            for l in range(zc):\n                print(line[j], end='') #print each letter in the line\n        print() #print new line\n", "\n\ndef main():\n    R, C, ZR, ZC = [int(i) for i in input().split()]\n    article = [input() for _ in range(R)]\n\n    for i in range(R):\n        for _ in range(ZR):\n            new_line = ''\n            for k in range(C):\n                for _ in range(ZC):\n                    new_line += article[i][k]\n            print(new_line, end='')\n        print()\n\nif __name__ == '__main__':\n    main()\n", "\n# Read input\nr, c, zr, zc = [int(x) for x in input().split()]\narticle = [input() for _ in range(r)]\n\n# Enlarge the article\nfor row in article:\n    for _ in range(zr):\n        print(row.replace(\".\", \"..\").replace(\"X\", \"XX\"))\n", "\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(line[k], end = '')\n        print()\n", "\n\n# Read input\nr, c, zr, zc = [int(x) for x in input().split()] # r = rows, c = columns, zr = row zoom, zc = column zoom\narticle = [input() for _ in range(r)] # article = article\n\n# Enlarge the article\nfor row in article:\n    for _ in range(zr):\n        print(row.replace(\".\", \"..\").replace(\"x\", \"xx\"))\n", "\nr, c, zr, zc = map(int, input().split()) #r = rows, c = columns, zr = row zoom, zc = column zoom\n\nfor i in range(r):\n    line = input() #input a line\n    #print the line zr times\n    for j in range(zr):\n        #print each character in the line zc times\n        for k in range(c):\n            for l in range(zc):\n                print(line[k], end='')\n        print()\n", "r, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for k in range(zr):  # repeat row\n        for j in range(c):  # print each character\n            for l in range(zc):  # repeat column\n                print(line[j], end='')\n        print()\n", "\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(line[k], end='')\n        print()\n", "# Read input\nr, c, zr, zc = [int(x) for x in input().split()]\narticle = [input() for _ in range(r)]\n\n# Enlarge article and print\nfor row in article:\n    for _ in range(zr):\n        print(row.replace(\".\", \"..\").replace(\"X\", \"XX\"))\n", "\n\ndef main():\n    r, c, zr, zc = [int(i) for i in input().split()]\n    article = [input() for i in range(r)]\n\n    for i in range(r):\n        for j in range(zr):\n            new_line = ''\n            for k in range(c):\n                for l in range(zc):\n                    new_line += article[i][k]\n            print(new_line)\n\nif __name__ == '__main__':\n    main()\n", "\n# Read input\nr, c, zr, zc = [int(x) for x in input().split()]\narticle = [input() for _ in range(r)]\n\n# Enlarge article and print\nfor row in article:\n    for _ in range(zr):\n        print(row.replace(\".\", \"..\").replace(\"0\", \"00\"))\n", "r, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = list(input())\n    for k in range(zr):\n        for j in range(len(line)):\n            for l in range(zc):\n                print(line[j], end=\"\")\n        print()\n", "\n\nr, c, zr, zc = map(int, input().split())\n\nfor i in range(r):\n    line = input()\n    for j in range(zr):\n        for k in range(c):\n            for l in range(zc):\n                print(line[k], end='')\n        print()\n"]