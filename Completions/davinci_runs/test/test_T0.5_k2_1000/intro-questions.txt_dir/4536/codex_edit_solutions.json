["\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nclass Solution(object):\n    def plusOne(self, digits):\n        \"\"\"\n        :type digits: List[int]\n        :rtype: List[int]\n        \"\"\"\n        return self.plusOne_0(digits)\n\n    def plusOne_0(self, digits):\n        n = len(digits)\n        for i in range(n - 1, -1, -1):\n            if digits[i] < 9:\n                digits[i] += 1\n                return digits\n            digits[i] = 0\n        return [1] + digits\n\ndef main():\n    inputs = [1,2,3]\n    inputs = [4,3,2,1]\n    result = Solution().plusOne(inputs)\n    print result\n\nif __name__ == '__main__':\n    main()\n", "class Solution(object):\n    def plusOne(self, digits):\n        \"\"\"\n        :type digits: List[int]\n        :rtype: List[int]\n        \"\"\"\n        return self.plusOne_0(digits)\n\n    def plusOne_0(self, digits):\n        n = len(digits)\n        for i in range(n - 1, -1, -1):\n            if digits[i] < 9:\n                digits[i] += 1\n                return digits\n            digits[i] = 0\n        return [1] + digits\n\ndef main():\n    inputs = [1,2,3]\n    inputs = [4,3,2,1]\n    result = Solution().plusOne(inputs)\n    print(result)\n\nif __name__ == '__main__':\n    main()\n", "#\n# def plusOne(digits):\n#     \"\"\"\n#     :type digits: List[int]\n#     :rtype: List[int]\n#     \"\"\"\n#     plus = 1\n#     for i in range(len(digits) - 1, -1, -1):\n#         if plus == 1:\n#             if digits[i] + 1 == 10:\n#                 digits[i] = 0\n#             else:\n#                 digits[i] += 1\n#                 plus = 0\n#         else:\n#             break\n#     if plus == 1:\n#         digits.insert(0, 1)\n#     return digits\n#\n#\n# print(plusOne([9, 9, 9]))\n", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\ndef plusOne(digits):\n    \"\"\"\n    :type digits: List[int]\n    :rtype: List[int]\n    \"\"\"\n    plus = 1\n    for i in range(len(digits) - 1, -1, -1):\n        if plus == 1:\n            if digits[i] + 1 == 10:\n                digits[i] = 0\n            else:\n                digits[i] += 1\n                plus = 0\n        else:\n            break\n    if plus == 1:\n        digits.insert(0, 1)\n    return digits\n\n\nprint(plusOne([9, 9, 9]))\n", "\n# \n\nclass Solution(object):\n    def plusOne(self, digits):\n        \"\"\"\n        :type digits: List[int]\n        :rtype: List[int]\n        \"\"\"\n        return self.plusOne_0(digits)\n\n    def plusOne_0(self, digits):\n        n = len(digits)\n        for i in range(n - 1, -1, -1):\n            if digits[i] < 9:\n                digits[i] += 1\n                return digits\n            digits[i] = 0\n        return [1] + digits\n\ndef main():\n    inputs = [1,2,3]\n    inputs = [4,3,2,1]\n    result = Solution().plusOne(inputs)\n    print result\n\nif __name__ == '__main__':\n    main()\n"]