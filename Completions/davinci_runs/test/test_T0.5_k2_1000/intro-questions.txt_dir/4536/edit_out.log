2022-04-11 20:52:59.100940 num operations 2
2022-04-11 20:52:59.100982 size on input set 1
2022-04-11 20:53:02.415036 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n#\n\nclass Solution(object):\n    def plusOne(self, digits):\n        \"\"\"\n        :type digits: List[int]\n        :rtype: List[int]\n        \"\"\"\n        return self.plusOne_0(digits)\n\n    def plusOne_0(self, digits):\n        n = len(digits)\n        for i in range(n - 1, -1, -1):\n            if digits[i] < 9:\n                digits[i] += 1\n                return digits\n            digits[i] = 0\n        return [1] + digits\n\ndef main():\n    inputs = [1,2,3]\n    inputs = [4,3,2,1]\n    result = Solution().plusOne(inputs)\n    print result\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "class Solution(object):\n    def plusOne(self, digits):\n        \"\"\"\n        :type digits: List[int]\n        :rtype: List[int]\n        \"\"\"\n        return self.plusOne_0(digits)\n\n    def plusOne_0(self, digits):\n        n = len(digits)\n        for i in range(n - 1, -1, -1):\n            if digits[i] < 9:\n                digits[i] += 1\n                return digits\n            digits[i] = 0\n        return [1] + digits\n\ndef main():\n    inputs = [1,2,3]\n    inputs = [4,3,2,1]\n    result = Solution().plusOne(inputs)\n    print result\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649724780,
  "object": "edit"
}
2022-04-11 20:53:02.415212 fix spelling mistakes 2 ['\n#\n\nclass Solution(object):\n    def plusOne(self, digits):\n        """\n        :type digits: List[int]\n        :rtype: List[int]\n        """\n        return self.plusOne_0(digits)\n\n    def plusOne_0(self, digits):\n        n = len(digits)\n        for i in range(n - 1, -1, -1):\n            if digits[i] < 9:\n                digits[i] += 1\n                return digits\n            digits[i] = 0\n        return [1] + digits\n\ndef main():\n    inputs = [1,2,3]\n    inputs = [4,3,2,1]\n    result = Solution().plusOne(inputs)\n    print result\n\nif __name__ == \'__main__\':\n    main()\n', 'class Solution(object):\n    def plusOne(self, digits):\n        """\n        :type digits: List[int]\n        :rtype: List[int]\n        """\n        return self.plusOne_0(digits)\n\n    def plusOne_0(self, digits):\n        n = len(digits)\n        for i in range(n - 1, -1, -1):\n            if digits[i] < 9:\n                digits[i] += 1\n                return digits\n            digits[i] = 0\n        return [1] + digits\n\ndef main():\n    inputs = [1,2,3]\n    inputs = [4,3,2,1]\n    result = Solution().plusOne(inputs)\n    print result\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-11 20:53:02.415238 size on output set 2
2022-04-11 20:53:02.415243 size on input set 2
2022-04-11 20:53:04.614451 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "class Solution(object):\n    def plusOne(self, digits):\n        \"\"\"\n        :type digits: List[int]\n        :rtype: List[int]\n        \"\"\"\n        return self.plusOne_0(digits)\n\n    def plusOne_0(self, digits):\n        n = len(digits)\n        for i in range(n - 1, -1, -1):\n            if digits[i] < 9:\n                digits[i] += 1\n                return digits\n            digits[i] = 0\n        return [1] + digits\n\ndef main():\n    inputs = [1,2,3]\n    inputs = [4,3,2,1]\n    result = Solution().plusOne(inputs)\n    print(result)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "class Solution(object):\n    def plusOne(self, digits):\n        \"\"\"\n        :type digits: List[int]\n        :rtype: List[int]\n        \"\"\"\n        return self.plusOne_0(digits)\n\n    def plusOne_0(self, digits):\n        n = len(digits)\n        for i in range(n - 1, -1, -1):\n            if digits[i] < 9:\n                digits[i] += 1\n                return digits\n            digits[i] = 0\n        return [1] + digits\n\ndef main():\n    inputs = [1,2,3]\n    inputs = [4,3,2,1]\n    result = Solution().plusOne(inputs)\n    print(result)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649724782,
  "object": "edit"
}
2022-04-11 20:53:04.614835 fix syntax errors 2 ['class Solution(object):\n    def plusOne(self, digits):\n        """\n        :type digits: List[int]\n        :rtype: List[int]\n        """\n        return self.plusOne_0(digits)\n\n    def plusOne_0(self, digits):\n        n = len(digits)\n        for i in range(n - 1, -1, -1):\n            if digits[i] < 9:\n                digits[i] += 1\n                return digits\n            digits[i] = 0\n        return [1] + digits\n\ndef main():\n    inputs = [1,2,3]\n    inputs = [4,3,2,1]\n    result = Solution().plusOne(inputs)\n    print(result)\n\nif __name__ == \'__main__\':\n    main()\n', 'class Solution(object):\n    def plusOne(self, digits):\n        """\n        :type digits: List[int]\n        :rtype: List[int]\n        """\n        return self.plusOne_0(digits)\n\n    def plusOne_0(self, digits):\n        n = len(digits)\n        for i in range(n - 1, -1, -1):\n            if digits[i] < 9:\n                digits[i] += 1\n                return digits\n            digits[i] = 0\n        return [1] + digits\n\ndef main():\n    inputs = [1,2,3]\n    inputs = [4,3,2,1]\n    result = Solution().plusOne(inputs)\n    print(result)\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-11 20:53:07.267049 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nclass Solution(object):\n    def plusOne(self, digits):\n        \"\"\"\n        :type digits: List[int]\n        :rtype: List[int]\n        \"\"\"\n        return self.plusOne_0(digits)\n\n    def plusOne_0(self, digits):\n        n = len(digits)\n        for i in range(n - 1, -1, -1):\n            if digits[i] < 9:\n                digits[i] += 1\n                return digits\n            digits[i] = 0\n        return [1] + digits\n\ndef main():\n    inputs = [1,2,3]\n    inputs = [4,3,2,1]\n    result = Solution().plusOne(inputs)\n    print result\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n# \n\nclass Solution(object):\n    def plusOne(self, digits):\n        \"\"\"\n        :type digits: List[int]\n        :rtype: List[int]\n        \"\"\"\n        return self.plusOne_0(digits)\n\n    def plusOne_0(self, digits):\n        n = len(digits)\n        for i in range(n - 1, -1, -1):\n            if digits[i] < 9:\n                digits[i] += 1\n                return digits\n            digits[i] = 0\n        return [1] + digits\n\ndef main():\n    inputs = [1,2,3]\n    inputs = [4,3,2,1]\n    result = Solution().plusOne(inputs)\n    print result\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649724784,
  "object": "edit"
}
2022-04-11 20:53:07.267188 fix syntax errors 2 ['\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nclass Solution(object):\n    def plusOne(self, digits):\n        """\n        :type digits: List[int]\n        :rtype: List[int]\n        """\n        return self.plusOne_0(digits)\n\n    def plusOne_0(self, digits):\n        n = len(digits)\n        for i in range(n - 1, -1, -1):\n            if digits[i] < 9:\n                digits[i] += 1\n                return digits\n            digits[i] = 0\n        return [1] + digits\n\ndef main():\n    inputs = [1,2,3]\n    inputs = [4,3,2,1]\n    result = Solution().plusOne(inputs)\n    print result\n\nif __name__ == \'__main__\':\n    main()\n', '\n# \n\nclass Solution(object):\n    def plusOne(self, digits):\n        """\n        :type digits: List[int]\n        :rtype: List[int]\n        """\n        return self.plusOne_0(digits)\n\n    def plusOne_0(self, digits):\n        n = len(digits)\n        for i in range(n - 1, -1, -1):\n            if digits[i] < 9:\n                digits[i] += 1\n                return digits\n            digits[i] = 0\n        return [1] + digits\n\ndef main():\n    inputs = [1,2,3]\n    inputs = [4,3,2,1]\n    result = Solution().plusOne(inputs)\n    print result\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-11 20:53:07.267282 size on output set 3
2022-04-11 20:53:07.267297 num operations 2
2022-04-11 20:53:07.267302 size on input set 1
2022-04-11 20:53:09.311535 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\ndef plusOne(digits):\n    \"\"\"\n    :type digits: List[int]\n    :rtype: List[int]\n    \"\"\"\n    plus = 1\n    for i in range(len(digits) - 1, -1, -1):\n        if plus == 1:\n            if digits[i] + 1 == 10:\n                digits[i] = 0\n            else:\n                digits[i] += 1\n                plus = 0\n        else:\n            break\n    if plus == 1:\n        digits.insert(0, 1)\n    return digits\n\n\nprint(plusOne([9, 9, 9]))\n"
    },
    {
      "index": 1,
      "text": "\ndef plusOne(digits):\n    \"\"\"\n    :type digits: List[int]\n    :rtype: List[int]\n    \"\"\"\n    plus = 1\n    for i in range(len(digits) - 1, -1, -1):\n        if plus == 1:\n            if digits[i] + 1 == 10:\n                digits[i] = 0\n            else:\n                digits[i] += 1\n                plus = 0\n        else:\n            break\n    if plus == 1:\n        digits.insert(0, 1)\n    return digits\n\n\nprint(plusOne([9, 9, 9]))\n"
    }
  ],
  "created": 1649724787,
  "object": "edit"
}
2022-04-11 20:53:09.311869 fix spelling mistakes 2 ['\ndef plusOne(digits):\n    """\n    :type digits: List[int]\n    :rtype: List[int]\n    """\n    plus = 1\n    for i in range(len(digits) - 1, -1, -1):\n        if plus == 1:\n            if digits[i] + 1 == 10:\n                digits[i] = 0\n            else:\n                digits[i] += 1\n                plus = 0\n        else:\n            break\n    if plus == 1:\n        digits.insert(0, 1)\n    return digits\n\n\nprint(plusOne([9, 9, 9]))\n', '\ndef plusOne(digits):\n    """\n    :type digits: List[int]\n    :rtype: List[int]\n    """\n    plus = 1\n    for i in range(len(digits) - 1, -1, -1):\n        if plus == 1:\n            if digits[i] + 1 == 10:\n                digits[i] = 0\n            else:\n                digits[i] += 1\n                plus = 0\n        else:\n            break\n    if plus == 1:\n        digits.insert(0, 1)\n    return digits\n\n\nprint(plusOne([9, 9, 9]))\n']
2022-04-11 20:53:09.311912 size on output set 1
2022-04-11 20:53:09.311923 size on input set 1
2022-04-11 20:53:18.968592 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\ndef plusOne(digits):\n    \"\"\"\n    :type digits: List[int]\n    :rtype: List[int]\n    \"\"\"\n    plus = 1\n    for i in range(len(digits) - 1, -1, -1):\n        if plus == 1:\n            if digits[i] + 1 == 10:\n                digits[i] = 0\n            else:\n                digits[i] += 1\n                plus = 0\n        else:\n            break\n    if plus == 1:\n        digits.insert(0, 1)\n    return digits\n\n\nprint(plusOne([9, 9, 9]))\n"
    },
    {
      "index": 1,
      "text": "#\n# def plusOne(digits):\n#     \"\"\"\n#     :type digits: List[int]\n#     :rtype: List[int]\n#     \"\"\"\n#     plus = 1\n#     for i in range(len(digits) - 1, -1, -1):\n#         if plus == 1:\n#             if digits[i] + 1 == 10:\n#                 digits[i] = 0\n#             else:\n#                 digits[i] += 1\n#                 plus = 0\n#         else:\n#             break\n#     if plus == 1:\n#         digits.insert(0, 1)\n#     return digits\n#\n#\n# print(plusOne([9, 9, 9]))\n"
    }
  ],
  "created": 1649724789,
  "object": "edit"
}
2022-04-11 20:53:18.968925 fix syntax errors 2 ['#!/usr/bin/env python\n# -*- coding: utf-8 -*-\ndef plusOne(digits):\n    """\n    :type digits: List[int]\n    :rtype: List[int]\n    """\n    plus = 1\n    for i in range(len(digits) - 1, -1, -1):\n        if plus == 1:\n            if digits[i] + 1 == 10:\n                digits[i] = 0\n            else:\n                digits[i] += 1\n                plus = 0\n        else:\n            break\n    if plus == 1:\n        digits.insert(0, 1)\n    return digits\n\n\nprint(plusOne([9, 9, 9]))\n', '#\n# def plusOne(digits):\n#     """\n#     :type digits: List[int]\n#     :rtype: List[int]\n#     """\n#     plus = 1\n#     for i in range(len(digits) - 1, -1, -1):\n#         if plus == 1:\n#             if digits[i] + 1 == 10:\n#                 digits[i] = 0\n#             else:\n#                 digits[i] += 1\n#                 plus = 0\n#         else:\n#             break\n#     if plus == 1:\n#         digits.insert(0, 1)\n#     return digits\n#\n#\n# print(plusOne([9, 9, 9]))\n']
2022-04-11 20:53:18.968952 size on output set 2
