["\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    staff = {'G':'', 'F':'', 'E':'', 'D':'', 'C':'', 'B':'', 'A':'', 'g':'', 'f':'', 'e':'', 'd':'', 'c':'', 'b':'', 'a':''}\n    for note in notes:\n        if len(note) == 1:\n            staff[note] += '*'\n        else:\n            staff[note[0]] += '*'*int(note[1])\n    for l in ['G', 'F', 'E', 'D', 'C', 'B', 'A', 'g', 'f', 'e', 'd', 'c', 'b', 'a']:\n        print(l+': '+staff[l])\n\nmain()\n", "\nimport sys\nsys.stdin = open(\"input.txt\", \"r\")\n\ndef printStaff(song):\n    staff = {'G': [], 'F': [], 'E': [], 'D': [], 'C': [], 'B': [], 'A': [], 'g': [], 'f': [], 'e': [], 'd': [], 'c': [], 'b': [], 'a': []}\n    for note in song:\n        staff[note[0]].append(note[1])\n    for key in staff:\n        print(key + \":\", end = \"\")\n        for i in range(max(staff[key])):\n            if i < len(staff[key]):\n                print(\"*\" * staff[key][i], end = \"\")\n            print(\" \", end = \"\")\n        print()\n\ndef main():\n    n = int(input())\n    song = input().split()\n    song = [list(note) for note in song]\n    for note in song:\n        if len(note) == 1:\n            note.append(1)\n        else:\n            note[1] = int(note[1])\n    printStaff(song)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    note_map = {\n        'A': 'a',\n        'B': 'b',\n        'C': 'c',\n        'D': 'd',\n        'E': 'e',\n        'F': 'f',\n        'G': 'g'\n    }\n    num_notes = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    notes = [note.upper() for note in notes]\n    notes = [note.replace('2', '*') for note in notes]  # whole note\n    notes = [note.replace('3', '**') for note in notes]  # half note\n    notes = [note.replace('4', '***') for note in notes]  # quarter note\n    notes = [note.replace('5', '****') for note in notes]  # eighth note\n    notes = [note.replace('6', '*****') for note in notes]  # sixteenth note\n    notes = [note.replace('7', '******') for note in notes]  # thirty-second note\n    notes = [note.replace('8', '*******') for note in notes]  # sixty-fourth note\n    notes = [note.replace('9', '********') for note in notes]  # one-hundred-twenty-eighth note\n    \n    staff = {\n        'G': [],\n        'F': [],\n        'E': [],\n        'D': [],\n        'C': [],\n        'B': [],\n        'A': [],\n        'g': [],\n        'f': [],\n        'e': [],\n        'd': [],\n        'c': [],\n        'b': [],\n        'a': []\n    }\n    \n    for note in notes:\n        if len(note) == 1:\n            note += '*'\n        if note[0] in note_map:\n            staff[note_map[note[0]]].append(note[1:])\n        else:\n            staff[note[0]].append(note[1:])\n            \n    for key in staff:\n        print(key + ':', end='')\n        for i in range(len(staff[key])):\n            if i == 0:\n                print(' ' * (42 - len(staff[key][i])), end='')\n            else:\n                print(' ' * (44 - len(staff[key][i])), end='')\n            print(staff[key][i], end='')\n        print()\n        \nmain()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    num_notes = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    notes = [note.upper() for note in notes]\n    notes = [note.replace('2', '*') for note in notes]\n    notes = [note.replace('3', '**') for note in notes]\n    notes = [note.replace('4', '***') for note in notes]\n    notes = [note.replace('5', '****') for note in notes]\n    notes = [note.replace('6', '*****') for note in notes]\n    notes = [note.replace('7', '******') for note in notes]\n    notes = [note.replace('8', '*******') for note in notes]\n    notes = [note.replace('9', '********') for note in notes]\n    \n    staff = {\n        'G': [],\n        'F': [],\n        'E': [],\n        'D': [],\n        'C': [],\n        'B': [],\n        'A': [],\n        'g': [],\n        'f': [],\n        'e': [],\n        'd': [],\n        'c': [],\n        'b': [],\n        'a': []\n    }\n    \n    for note in notes:\n        if len(note) == 1:\n            note += '*'\n        if note[0] in note_map.keys():\n            staff[note_map[note[0]]].append(note[1:]) \n        else:\n            staff[note[0]].append(note[1:])\n            \n    for key in staff:\n        print(key + ':', end='')\n        for i in range(len(staff[key])):\n            if i == 0:\n                print(' ' * (42 - len(staff[key][i])), end='')\n            else:\n                print(' ' * (44 - len(staff[key][i])), end='')\n            print(staff[key][i], end='')\n        print()\n        \nmain()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    note_map = {\n        'A': 'a',\n        'B': 'b',\n        'C': 'c',\n        'D': 'd',\n        'E': 'e',\n        'F': 'f',\n        'G': 'g'\n    }\n    num_notes = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    notes = [note.upper() for note in notes]\n    notes = [note.replace('2', '*') for note in notes]  # whole note\n    notes = [note.replace('3', '**') for note in notes]  # half note\n    notes = [note.replace('4', '***') for note in notes]  # quarter note\n    notes = [note.replace('5', '****') for note in notes]  # eighth note\n    notes = [note.replace('6', '*****') for note in notes]  # sixteenth note\n    notes = [note.replace('7', '******') for note in notes]  # thirty-second note\n    notes = [note.replace('8', '*******') for note in notes]  # sixty-fourth note\n    notes = [note.replace('9', '********') for note in notes]  # one-hundred-twenty-eighth note\n    \n    staff = {\n        'G': [],\n        'F': [],\n        'E': [],\n        'D': [],\n        'C': [],\n        'B': [],\n        'A': [],\n        'g': [],\n        'f': [],\n        'e': [],\n        'd': [],\n        'c': [],\n        'b': [],\n        'a': []\n    }\n    \n    for note in notes:\n        if len(note) == 1:\n            note += '*'\n        if note[0] in note_map:\n            staff[note_map[note[0]]].append(note[1:])\n        else:\n            staff[note[0]].append(note[1:])\n            \n    for key in staff:\n        print(key + ':', end='')\n        for i in range(len(staff[key])):\n            if i == 0:\n                print(' ' * (42 - len(staff[key][i])), end='')\n            else:\n                print(' ' * (44 - len(staff[key][i])), end='')\n            print(staff[key][i], end='')\n        print()\n\n\nmain()\n", "#!/usr/bin/python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip()\n    notes = notes.split()\n    octave = {'c': 'C', 'd': 'D', 'e': 'E', 'f': 'F', 'g': 'G', 'a': 'A', 'b': 'B'}\n    staff = {'C': 'C: ', 'D': 'D: ', 'E': 'E: ', 'F': 'F: ', 'G': 'G: ', 'A': 'A: ', 'B': 'B: '} \n    for x in range(0, n):\n        if len(notes[x]) == 1:\n            if notes[x].islower():\n                staff[octave[notes[x]]] += '*'\n            else:\n                staff[octave[notes[x].lower()]] += '*'\n        else:\n            if notes[x][0].islower():\n                staff[octave[notes[x][0]]] += '*'*int(notes[x][1])\n            else:\n                staff[octave[notes[x][0].lower()]] += '*'*int(notes[x][1])\n    for x in range(0, len(staff['C'])):\n        for y in staff.keys():\n            if x < len(staff[y]):\n                print(staff[y][x], end='')\n            else:\n                print(' ', end='')\n        print()\n\nmain()\n", "\nn = int(input())\nnotes = input().split()\n\nstaff = {'C': ['G|', 'F|', 'E|', 'D|', 'C|', 'B|', 'A|', 'g|', 'f|', 'e|', 'd|', 'c|', 'b|', 'a|'],\n         'D': ['G|', 'F|', 'E|', 'D|', 'C|', 'B|', 'A|', 'g|', 'f|', 'e|', 'd|', 'c|', 'b|', 'a|'],\n         'E': ['G|', 'F|', 'E|', 'D|', 'C|', 'B|', 'A|', 'g|', 'f|', 'e|', 'd|', 'c|', 'b|', 'a|'],\n         'F': ['G|', 'F|', 'E|', 'D|', 'C|', 'B|', 'A|', 'g|', 'f|', 'e|', 'd|', 'c|', 'b|', 'a|'],\n         'G': ['G|', 'F|', 'E|', 'D|', 'C|', 'B|', 'A|', 'g|', 'f|', 'e|', 'd|', 'c|', 'b|', 'a|'],\n         'A': ['G|', 'F|', 'E|', 'D|', 'C|', 'B|', 'A|', 'g|', 'f|', 'e|', 'd|', 'c|', 'b|', 'a|'],\n         'B': ['G|', 'F|', 'E|', 'D|', 'C|', 'B|', 'A|', 'g|', 'f|', 'e|', 'd|', 'c|', 'b|', 'a|']}\n\nfor i in range(len(notes)):\n    note = notes[i]\n    duration = 1\n    if len(note) == 2:\n        duration = int(note[1])\n    if note[0] == 'C':\n        staff['C'][12] += '*' * duration + ' '\n    elif note[0] == 'D':\n        staff['D'][11] += '*' * duration + ' '\n    elif note[0] == 'E':\n        staff['E'][10] += '*' * duration + ' '\n    elif note[0] == 'F':\n        staff['F'][9] += '*' * duration + ' '\n    elif note[0] == 'G':\n        staff['G'][8] += '*' * duration + ' '\n    elif note[0] == 'A':\n        staff['A'][7] += '*' * duration + ' '\n    elif note[0] == 'B':\n        staff['B'][6] += '*' * duration + ' '\n    elif note[0] == 'c':\n        staff['C'][5] += '*' * duration + ' '\n    elif note[0] == 'd':\n        staff['D'][4] += '*' * duration + ' '\n    elif note[0] == 'e':\n        staff['E'][3] += '*' * duration + ' '\n    elif note[0] == 'f':\n        staff['F'][2] += '*' * duration + ' '\n    elif note[0] == 'g':\n        staff['G'][1] += '*' * duration + ' '\n    elif note[0] == 'a':\n        staff['A'][0] += '*' * duration + ' '\n    elif note[0] == 'b':\n        staff['B'][-1] += '*' * duration + ' '\n\nfor i in range(len(staff['C'])):\n    print(staff['C'][i])\n", "#!/usr/bin/env python3\n\nimport sys\n\nnote_map = {\n    'A': 'A',\n    'B': 'B',\n    'C': 'C',\n    'D': 'D',\n    'E': 'E',\n    'F': 'F',\n    'G': 'G',\n    'H': 'A',\n    'I': 'B',\n    'J': 'C',\n    'K': 'D',\n    'L': 'E',\n    'M': 'F',\n    'N': 'G',\n    'O': 'A',\n    'P': 'B',\n    'Q': 'C',\n    'R': 'D',\n    'S': 'E',\n    'T': 'F',\n    'U': 'G',\n    'V': 'A',\n    'W': 'B',\n    'X': 'C',\n    'Y': 'D',\n    'Z': 'E'\n}\n\ndef main():\n    num_notes = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    notes = [note.upper() for note in notes]\n    notes = [note.replace('2', '*') for note in notes]\n    notes = [note.replace('3', '**') for note in notes]\n    notes = [note.replace('4', '***') for note in notes]\n    notes = [note.replace('5', '****') for note in notes]\n    notes = [note.replace('6', '*****') for note in notes]\n    notes = [note.replace('7', '******') for note in notes]\n    notes = [note.replace('8', '*******') for note in notes]\n    notes = [note.replace('9', '********') for note in notes]\n    \n    staff = {\n        'G': [],\n        'F': [],\n        'E': [],\n        'D': [],\n        'C': [],\n        'B': [],\n        'A': [],\n        'g': [],\n        'f': [],\n        'e': [],\n        'd': [],\n        'c': [],\n        'b': [],\n        'a': []\n    }\n    \n    for note in notes:\n        if len(note) == 1:\n            note += '*'\n        if note[0] in note_map:\n            staff[note_map[note[0]]].append(note[1:])\n        else:\n            staff[note[0]].append(note[1:])\n            \n    for key in staff:\n        print(key + ':', end='')\n        for i in range(len(staff[key])):\n            if i == 0:\n                print(' ' * (42 - len(staff[key][i])), end='')\n            else:\n                print(' ' * (44 - len(staff[key][i])), end='')\n            print(staff[key][i], end='')\n        print()\n        \nmain()\n", "#!/usr/bin/env python3\n\nn = int(input())\nnotes = input().split()\n\nstaff = {'C': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:', ' '],\n         'D': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:', ' '],\n         'E': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:', ' '],\n         'F': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:', ' '],\n         'G': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:', ' '],\n         'A': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:', ' '],\n         'B': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:', ' ']}\n\nfor i in range(len(notes)):\n    note = notes[i]\n    duration = 1\n    if len(note) == 2 and note[1].isdigit():\n        duration = int(note[1])\n    if note[0] == 'C':\n        staff['C'][12] += '*' * duration + ' '\n    elif note[0] == 'D':\n        staff['D'][11] += '*' * duration + ' '\n    elif note[0] == 'E':\n        staff['E'][10] += '*' * duration + ' '\n    elif note[0] == 'F':\n        staff['F'][9] += '*' * duration + ' '\n    elif note[0] == 'G':\n        staff['G'][8] += '*' * duration + ' '\n    elif note[0] == 'A':\n        staff['A'][7] += '*' * duration + ' '\n    elif note[0] == 'B':\n        staff['B'][6] += '*' * duration + ' '\n    elif note[0] == 'c':\n        staff['C'][5] += '*' * duration + ' '\n    elif note[0] == 'd':\n        staff['D'][4] += '*' * duration + ' '\n    elif note[0] == 'e':\n        staff['E'][3] += '*' * duration + ' '\n    elif note[0] == 'f':\n        staff['F'][2] += '*' * duration + ' '\n    elif note[0] == 'g':\n        staff['G'][1] += '*' * duration + ' '\n    elif note[0] == 'a':\n        staff['A'][0] += '*' * duration + ' '\n    elif note[0] == 'b':\n        staff['B'][-1] += '*' * duration + ' '\n\nfor i in range(len(staff['C'])):\n    print(staff['C'][i])\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    lines = [l.strip() for l in sys.stdin.readlines()]\n    staff = []\n    for line in lines:\n        staff.append(line.split())\n    for note in notes:\n        if len(note) == 1:\n            staff[ord(note.lower()) - ord('a')].append('*')\n        else:\n            staff[ord(note[0].lower()) - ord('a')].append('*' * int(note[1]))\n    for line in staff:\n        print(' '.join(line))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip()\n    notes = notes.split()\n    octave = {'c': 'C', 'd': 'D', 'e': 'E', 'f': 'F', 'g': 'G', 'a': 'A', 'b': 'B'}\n    staff = {'C': 'C: ', 'D': 'D: ', 'E': 'E: ', 'F': 'F: ', 'G': 'G: ', 'A': 'A: ', 'B': 'B: '} \n    for x in range(0, n):\n        if len(notes[x]) == 1:\n            if notes[x].islower():\n                staff[octave[notes[x]]] += '*'\n            else:\n                staff[octave[notes[x].lower()]] += '*'\n        else:\n            if notes[x][0].islower():\n                staff[octave[notes[x][0]]] += '*'*int(notes[x][1])\n            else:\n                staff[octave[notes[x][0].lower()]] += '*'*int(notes[x][1])\n    for x in range(0, len(staff['C'])):\n        for y in staff.keys():\n            if x < len(staff[y]):\n                print(staff[y][x], end='')\n            else:\n                print(' ', end='')\n        print()\n\nmain()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    lines = [l.strip() for l in sys.stdin.readlines()]\n    staff = []\n    for line in lines:\n        staff.append(line.split())\n    for note in notes:\n        if len(note) == 1:\n            staff[ord(note.lower()) - ord('a')].append('*')\n        else:\n            staff[ord(note[0].lower()) - ord('a')].append('*' * int(note[1]))\n    for line in staff:\n        print(' '.join(line))\n\nmain()\n", "\nimport sys\nsys.stdin = open(\"input.txt\", \"r\")\n\ndef print_staff(song):\n    staff = {'G':[], 'F':[], 'E':[], 'D':[], 'C':[], 'B':[], 'A':[], 'g':[], 'f':[], 'e':[], 'd':[], 'c':[], 'b':[], 'a':[]}\n    for note in song:\n        staff[note[0]].append(note[1])\n    for key in staff:\n        print(key + \":\", end=\"\")\n        for i in range(max(staff[key])):\n            if i < len(staff[key]):\n                print(\"*\" * staff[key][i], end=\"\")\n            print(\" \", end=\"\")\n        print()\n\ndef main():\n    n = int(input())\n    song = input().split()\n    song = [list(note) for note in song]\n    for note in song:\n        if len(note) == 1:\n            note.append(1)\n        else:\n            note[1] = int(note[1])\n    print_staff(song)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nsys.stdin = open(\"input.txt\", \"r\")\n\ndef print_staff(song):\n    staff = {'G':[], 'F':[], 'E':[], 'D':[], 'C':[], 'B':[], 'A':[], 'g':[], 'f':[], 'e':[], 'd':[], 'c':[], 'b':[], 'a':[]} # create staff\n    for note in song:\n        staff[note[0]].append(note[1]) # add notes to staff\n    for key in staff:\n        print(key + \":\", end=\"\")\n        for i in range(max(staff[key])): # print staff\n            if i < len(staff[key]):\n                print(\"*\" * staff[key][i], end=\"\")\n            print(\" \", end=\"\")\n        print()\n\ndef main():\n    n = int(input())\n    song = input().split()\n    song = [list(note) for note in song]\n    for note in song:\n        if len(note) == 1:\n            note.append(1)\n        else:\n            note[1] = int(note[1])\n    print_staff(song)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nsys.stdin = open(\"input.txt\", \"r\")\n\ndef printStaff(song):\n    staff = {'G':[], 'F':[], 'E':[], 'D':[], 'C':[], 'B':[], 'A':[], 'g':[], 'f':[], 'e':[], 'd':[], 'c':[], 'b':[], 'a':[]}\n    for note in song:\n        staff[note[0]].append(note[1])\n    for key in staff:\n        print(key + \":\", end=\"\")\n        if len(staff[key]) > 0:\n            for i in range(max(staff[key])):\n                if i < len(staff[key]):\n                    print(\"*\" * staff[key][i], end=\"\")\n                print(\" \", end=\"\")\n        print()\n\ndef main():\n    n = int(input())\n    song = input().split()\n    song = [list(note) for note in song]\n    for note in song:\n        if len(note) == 1:\n            note.append(1)\n        else:\n            note[1] = int(note[1])\n    printStaff(song)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    notes = sys.stdin.readline().strip().split()\n    staff = {'G':'', 'F':'', 'E':'', 'D':'', 'C':'', 'B':'', 'A':'', 'g':'', 'f':'', 'e':'', 'd':'', 'c':'', 'b':'', 'a':''} \n    for note in notes:\n        if len(note) == 1:\n            staff[note] += '*'\n        else:\n            staff[note[0]] += '*'*int(note[1])\n    for l in ['G', 'F', 'E', 'D', 'C', 'B', 'A', 'g', 'f', 'e', 'd', 'c', 'b', 'a']:\n        print(l+': '+staff[l])\n\nmain()\n", "\nn = int(input())\nnotes = input().split()\n\nstaff = {'C': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:', ' '],\n         'D': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:', ' '],\n         'E': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:', ' '],\n         'F': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:', ' '],\n         'G': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:', ' '],\n         'A': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:', ' '],\n         'B': ['G:', 'F:', 'E:', 'D:', 'C:', 'B:', 'A:', 'g:', 'f:', 'e:', 'd:', 'c:', 'b:', 'a:', ' ']}\n\nfor i in range(len(notes)):\n    note = notes[i]\n    duration = 1\n    if len(note) == 2:\n        duration = int(note[1])\n    if note[0] == 'C':\n        staff['C'][12] += '*' * duration + ' '\n    elif note[0] == 'D':\n        staff['D'][11] += '*' * duration + ' '\n    elif note[0] == 'E':\n        staff['E'][10] += '*' * duration + ' '\n    elif note[0] == 'F':\n        staff['F'][9] += '*' * duration + ' '\n    elif note[0] == 'G':\n        staff['G'][8] += '*' * duration + ' '\n    elif note[0] == 'A':\n        staff['A'][7] += '*' * duration + ' '\n    elif note[0] == 'B':\n        staff['B'][6] += '*' * duration + ' '\n    elif note[0] == 'c':\n        staff['C'][5] += '*' * duration + ' '\n    elif note[0] == 'd':\n        staff['D'][4] += '*' * duration + ' '\n    elif note[0] == 'e':\n        staff['E'][3] += '*' * duration + ' '\n    elif note[0] == 'f':\n        staff['F'][2] += '*' * duration + ' '\n    elif note[0] == 'g':\n        staff['G'][1] += '*' * duration + ' '\n    elif note[0] == 'a':\n        staff['A'][0] += '*' * duration + ' '\n    elif note[0] == 'b':\n        staff['B'][-1] += '*' * duration + ' '\n\nfor i in range(len(staff['C'])):\n    print(staff['C'][i])\n"]