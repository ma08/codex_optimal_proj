["\n\n\ndef main():\n    a, b, c = input().split()\n    if (b == \"North\" and c == \"South\") or (b == \"South\" and c == \"North\"):\n        print(\"Yes\")\n    elif (b == \"West\" and c == \"East\") or (b == \"East\" and c == \"West\"):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    a, b, c = input().split()  # \u5165\u529b\u30923\u3064\u306b\u5206\u3051\u308b\n    if b == \"West\" and c == \"East\":  # \u5165\u529b\u3057\u305f\u6587\u5b57\u304c\u6761\u4ef6\u306b\u3042\u3063\u305f\u3089\u3001Yes\u3092\u51fa\u529b\n        print(\"Yes\")\n    elif b == \"East\" and c == \"West\":\n        print(\"Yes\")\n    elif b == \"North\" and c == \"South\":\n        print(\"Yes\")\n    elif b == \"South\" and c == \"North\":\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()\n", "\n#-----Main-----\na, b, c = input().split()\n\nif (a == \"North\" and b == \"South\") or (a == \"South\" and b == \"North\") or (a == \"East\" and b == \"West\") or (a == \"West\" and b == \"East\"):\n    print(\"No\")\nelif (c == \"North\" and b == \"South\") or (c == \"South\" and b == \"North\") or (c == \"East\" and b == \"West\") or (c == \"West\" and b == \"East\"):\n    print(\"No\")\nelse:\n    print(\"Yes\")\n", "import sys\n\ndef main():\n    #Read the input\n    a, b, c = sys.stdin.readline().split()\n\n    #Determine if you should yield or not\n    if((a == \"North\" and b == \"West\" and c == \"South\") or (a == \"South\" and b == \"East\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"West\") or (a == \"West\" and b == \"South\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"West\" and b == \"North\" and c == \"South\")):\n        print(\"Yes\")\n\n    else:\n        print(\"No\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n\ndef main():\n    a, b, c = input().split()  # a is unused\n    if b == \"North\" and c == \"South\":\n        print(\"Yes\")\n    elif b == \"South\" and c == \"North\":\n        print(\"Yes\")\n    elif b == \"West\" and (c == \"East\" or c == \"South\"):\n        print(\"Yes\")\n    elif b == \"East\" and (c == \"West\" or c == \"South\"):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\na, b, c = sys.stdin.read().split()\n\nif (a == \"North\" and (b == \"West\" and c == \"East\" or b == \"East\" and c == \"West\")) or (a == \"South\" and (b == \"West\" and c == \"East\" or b == \"East\" and c == \"West\")) or (a == \"East\" and (b == \"North\" and c == \"South\" or b == \"South\" and c == \"North\")) or (a == \"West\" and (b == \"North\" and c == \"South\" or b == \"South\" and c == \"North\")):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "\n\na = input().split()\n\nif (a[0] == 'North' and a[2] == 'South') or (a[0] == 'South' and a[2] == 'North') or (a[0] == 'West' and a[2] == 'East') or (a[0] == 'East' and a[2] == 'West') or (a[1] == 'North' and a[3] == 'South') or (a[1] == 'South' and a[3] == 'North') or (a[1] == 'West' and a[3] == 'East') or (a[1] == 'East' and a[3] == 'West'):\n    print(\"No\")\nelse:\n    print(\"Yes\")\n", "\nimport sys\n\ndef main():\n    #Read the input\n    a,b,c = sys.stdin.readline().split()\n\n    #Determine if you should yield or not\n    if((a == \"North\" and b == \"West\" and c == \"South\") or (a == \"South\" and b == \"East\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"West\") or (a == \"West\" and b == \"South\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"West\" and b == \"North\" and c == \"South\")):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == \"__main__\":\n    main()\n", "\na = input().split()\n\nif (a[0] == 'North' and a[2] == 'South') or (a[0] == 'South' and a[2] == 'North') or (a[0] == 'West' and a[2] == 'East') or (a[0] == 'East' and a[2] == 'West'):\n    print(\"No\")\nelse:\n    print(\"Yes\")\n", "\n\na, b, c = input().split() \n\nif (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"South\" and b == \"East\" and c == \"West\") or (a == \"North\" and b == \"West\" and c == \"East\") or (a == \"West\" and b == \"South\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"South\"):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "import sys\n\na, b, c = sys.stdin.read().split()\n\nif (a == \"North\" and (b == \"West\" and c == \"East\" or b == \"East\" and c == \"West\")) or (a == \"South\" and (\n        b == \"West\" and c == \"East\" or b == \"East\" and c == \"West\")) or (a == \"East\" and (\n        b == \"North\" and c == \"South\" or b == \"South\" and c == \"North\")) or (a == \"West\" and (\n        b == \"North\" and c == \"South\" or b == \"South\" and c == \"North\")):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "\n\nimport sys\n\na = sys.stdin.readline().strip()\nb = sys.stdin.readline().strip()\nc = sys.stdin.readline().strip()\n\na = 'South'\nb = 'West'\nc = 'East'\n\ndirections = ['North', 'South', 'East', 'West']\n\nif a == b:\n    print(\"No\")\nelse:\n    j = directions.index(a)\n    k = directions.index(b)\n    l = directions.index(c)\n    if (j + 1) % 4 == l or (j + 2) % 4 == l:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n", "\n\ndef main():\n    a, b, c = input().split()\n    if b == \"West\" and c == \"East\":\n        print(\"Yes\")\n    elif b == \"East\" and c == \"West\":\n        print(\"Yes\")\n    elif b == \"North\" and c == \"South\":\n        print(\"Yes\")\n    elif b == \"South\" and c == \"North\":\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()\n", "\n\n#-----main-----#\na, b, c = input().split() #input\n\nif (a == \"North\" and b == \"South\") or (a == \"South\" and b == \"North\") or (a == \"East\" and b == \"West\") or (a == \"West\" and b == \"East\") or (a == \"North\" and c == \"South\") or (a == \"South\" and c == \"North\") or (a == \"East\" and c == \"West\") or (a == \"West\" and c == \"East\"): #if a and b are opposite\n    print(\"No\") #print no\nelse: #if a and b are not opposite or a and c are not opposite\n    print(\"Yes\") #print yes\n", "\n\na, b, c = input().split()\n\nif (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\"):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "\n\na, b, c = input().split()\n\nif (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"South\" and b == \"East\" and c == \"West\") or (a == \"North\" and b == \"West\" and c == \"East\") or (a == \"West\" and b == \"South\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"South\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"South\" and b == \"East\" and c == \"West\") or (a == \"North\" and b == \"West\" and c == \"East\") or (a == \"West\" and b == \"South\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"South\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"South\" and b == \"East\" and c == \"West\") or (a == \"North\" and b == \"West\" and c == \"East\") or (a == \"West\" and b == \"South\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"South\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"South\" and b == \"East\" and c == \"West\") or (a == \"North\" and b == \"West\" and c == \"East\") or (a == \"West\" and b == \"South\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"South\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"South\" and b == \"East\" and c == \"West\") or (a == \"North\" and b == \"West\" and c == \"East\") or (a == \"West\" and b == \"South\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"South\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"South\" and b == \"East\" and c == \"West\") or (a == \"North\" and b == \"West\" and c == \"East\") or (a == \"West\" and b == \"South\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"South\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"South\" and b == \"East\" and c == \"West\") or (a == \"North\" and b == \"West\" and c == \"East\") or (a == \"West\" and b == \"South\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"South\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"South\" and b == \"East\" and c == \"West\") or (a == \"North\" and b == \"West\" and c == \"East\") or (a == \"West\" and b == \"South\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"South\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"South\" and b == \"East\" and c == \"West\") or (a == \"North\" and b == \"West\" and c == \"East\") or (a == \"West\" and b == \"South\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"South\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"South\" and b == \"East\" and c == \"West\") or (a == \"North\" and b == \"West\" and c == \"East\") or (a == \"West\" and b == \"South\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"South\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"South\" and b == \"East\" and c == \"West\") or (a == \"North\" and b == \"West\" and c == \"East\") or (a == \"West\" and b == \"South\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"South\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"South\" and b == \"East\" and c == \"West\") or (a == \"North\" and b == \"West\" and c == \"East\") or (a == \"West\" and b == \"South\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"South\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "\nimport sys\n\na = sys.stdin.readline().strip()\nb = sys.stdin.readline().strip()\nc = sys.stdin.readline().strip()\n\n# a = 'South'\n# b = 'West'\n# c = 'East'\n\ndirections = ['North', 'South', 'East', 'West']\n\nif a == c:\n    print(\"No\")\nelse:\n    i = directions.index(a)\n    j = directions.index(b)\n    k = directions.index(c)\n    if (i + 1) % 4 == k or (i + 2) % 4 == k:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n", "\n\na = input().split(' ')\n\nif (a[0] == 'North' and a[2] == 'South') or (a[0] == 'South' and a[2] == 'North') or (a[0] == 'East' and a[2] == 'West') or (a[0] == 'West' and a[2] == 'East'):\n    print(\"No\")\nelse:\n    print(\"Yes\")\n", "import sys\n\na, b, c = sys.stdin.read().split()\n\nif (a == \"North\" and (b == \"West\" and c == \"East\") or (b == \"East\" and c == \"West\")) or (\n        a == \"South\" and (b == \"West\" and c == \"East\") or (b == \"East\" and c == \"West\")) or (\n        a == \"East\" and (b == \"North\" and c == \"South\") or (b == \"South\" and c == \"North\")) or (\n        a == \"West\" and (b == \"North\" and c == \"South\") or (b == \"South\" and c == \"North\")):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "\n\na = input().split()\n\nif (a[0] == 'North' and a[2] == 'South') or (a[0] == 'South' and a[2] == 'North') or (a[0] == 'East' and a[2] == 'West') or (a[0] == 'West' and a[2] == 'East') or (a[1] == 'North' and a[3] == 'South') or (a[1] == 'South' and a[3] == 'North') or (a[1] == 'East' and a[3] == 'West') or (a[1] == 'West' and a[3] == 'East'):\n    print(\"No\")\nelse:\n    print(\"Yes\")\n", "\n\n\ndef main():\n    a, b, c = input().split()  # split the input\n    if b == \"North\" and c == \"South\" or b == \"South\" and c == \"North\":  # check if the directions are opposite\n        print(\"Yes\")\n    elif b == \"West\" and c == \"East\" or b == \"East\" and c == \"West\":  # check if the directions are opposite\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n# -----Main-----\na, b, c = input().split()\n\nif (a == \"North\" and b == \"South\") or (a == \"South\" and b == \"North\") or (a == \"East\" and b == \"West\") or (a == \"West\" and b == \"East\"):\n    print(\"No\")\nelif (c == \"North\" and b == \"South\") or (c == \"South\" and b == \"North\") or (c == \"East\" and b == \"West\") or (c == \"West\" and b == \"East\"):\n    print(\"No\")\nelse:\n    print(\"Yes\")\n", "import sys\n\na, b, c = sys.stdin.read().split()\n\nif (a == \"North\" and (b == \"West\" and c == \"East\" or b == \"East\" and c == \"West\")) or (a == \"South\" and (b == \"West\" and c == \"East\" or b == \"East\" and c == \"West\")) or (a == \"East\" and (b == \"North\" and c == \"South\" or b == \"South\" and c == \"North\")) or (a == \"West\" and (b == \"North\" and c == \"South\" or b == \"South\" and c == \"North\")): \n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "\n\ndef main():\n    a, b, c = input().split()  # a is the number of the street, b is the direction of the first house, c is the direction of the second house, and a is the number of the street\n    if b == \"West\" and c == \"East\":  # if the first house is west and the second house is east, then they are facing each other\n        print(\"Yes\")\n    elif b == \"East\" and c == \"West\":\n        print(\"Yes\")\n    elif b == \"North\" and c == \"South\":\n        print(\"Yes\")\n    elif b == \"South\" and c == \"North\":\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()\n", "\n\n\ndef main():\n    a, b, c = input().split()  # a is not used\n    if b == \"North\" and c == \"South\" or b == \"South\" and c == \"North\":\n        print(\"Yes\")\n    elif b == \"West\" and c == \"East\" or b == \"East\" and c == \"West\":\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    a, b, c = input().split()  # a is the number of the street, b is the direction of the first house, c is the direction of the second house.\n    if b == \"West\" and c == \"East\":  # if the first house is west and the second house is east, then they are facing each other\n        print(\"Yes\")\n    elif b == \"East\" and c == \"West\":\n        print(\"Yes\")\n    elif b == \"North\" and c == \"South\":\n        print(\"Yes\")\n    elif b == \"South\" and c == \"North\":\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()\n", "\n#-----main-----#\na, b, c = input().split() #input\n\nif (a == \"North\" and b == \"South\") or (a == \"South\" and b == \"North\") or (a == \"East\" and b == \"West\") or (a == \"West\" and b == \"East\"): #if a and b are opposite\n    print(\"No\") #print no\nelif (c == \"North\" and b == \"South\") or (c == \"South\" and b == \"North\") or (c == \"East\" and b == \"West\") or (c == \"West\" and b == \"East\"): #if b and c are opposite\n    print(\"No\") #print no\nelse: #if a and b are not opposite\n    print(\"Yes\") #print yes\n"]