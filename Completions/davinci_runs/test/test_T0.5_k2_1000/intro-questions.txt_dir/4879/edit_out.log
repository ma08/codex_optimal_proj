2022-04-12 02:05:18.246967 num operations 2
2022-04-12 02:05:18.246992 size on input set 1
2022-04-12 02:05:23.308942 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\na = sys.stdin.readline().strip()\nb = sys.stdin.readline().strip()\nc = sys.stdin.readline().strip()\n\n# a = 'South'\n# b = 'West'\n# c = 'East'\n\ndirections = ['North', 'South', 'East', 'West']\n\nif a == c:\n    print(\"No\")\nelse:\n    i = directions.index(a)\n    j = directions.index(b)\n    k = directions.index(c)\n    if (i + 1) % 4 == k or (i + 2) % 4 == k:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\na = sys.stdin.readline().strip()\nb = sys.stdin.readline().strip()\nc = sys.stdin.readline().strip()\n\n# a = 'South'\n# b = 'West'\n# c = 'East'\n\ndirections = ['North', 'South', 'East', 'West']\n\nif a == c:\n    print(\"No\")\nelse:\n    i = directions.index(a)\n    j = directions.index(b)\n    k = directions.index(c)\n    if (i + 1) % 4 == k or (i + 2) % 4 == k:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n"
    }
  ],
  "created": 1649743518,
  "object": "edit"
}
2022-04-12 02:05:23.309066 fix spelling mistakes 2 ['\n\nimport sys\n\na = sys.stdin.readline().strip()\nb = sys.stdin.readline().strip()\nc = sys.stdin.readline().strip()\n\n# a = \'South\'\n# b = \'West\'\n# c = \'East\'\n\ndirections = [\'North\', \'South\', \'East\', \'West\']\n\nif a == c:\n    print("No")\nelse:\n    i = directions.index(a)\n    j = directions.index(b)\n    k = directions.index(c)\n    if (i + 1) % 4 == k or (i + 2) % 4 == k:\n        print("Yes")\n    else:\n        print("No")\n', '\n\nimport sys\n\na = sys.stdin.readline().strip()\nb = sys.stdin.readline().strip()\nc = sys.stdin.readline().strip()\n\n# a = \'South\'\n# b = \'West\'\n# c = \'East\'\n\ndirections = [\'North\', \'South\', \'East\', \'West\']\n\nif a == c:\n    print("No")\nelse:\n    i = directions.index(a)\n    j = directions.index(b)\n    k = directions.index(c)\n    if (i + 1) % 4 == k or (i + 2) % 4 == k:\n        print("Yes")\n    else:\n        print("No")\n']
2022-04-12 02:05:23.309083 size on output set 1
2022-04-12 02:05:23.309087 size on input set 1
2022-04-12 02:05:28.888493 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\na = sys.stdin.readline().strip()\nb = sys.stdin.readline().strip()\nc = sys.stdin.readline().strip()\n\na = 'South'\nb = 'West'\nc = 'East'\n\ndirections = ['North', 'South', 'East', 'West']\n\nif a == b:\n    print(\"No\")\nelse:\n    j = directions.index(a)\n    k = directions.index(b)\n    l = directions.index(c)\n    if (j + 1) % 4 == l or (j + 2) % 4 == l:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\na = sys.stdin.readline().strip()\nb = sys.stdin.readline().strip()\nc = sys.stdin.readline().strip()\n\n# a = 'South'\n# b = 'West'\n# c = 'East'\n\ndirections = ['North', 'South', 'East', 'West']\n\nif a == c:\n    print(\"No\")\nelse:\n    i = directions.index(a)\n    j = directions.index(b)\n    k = directions.index(c)\n    if (i + 1) % 4 == k or (i + 2) % 4 == k:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n"
    }
  ],
  "created": 1649743523,
  "object": "edit"
}
2022-04-12 02:05:28.888641 fix syntax errors 2 ['\n\nimport sys\n\na = sys.stdin.readline().strip()\nb = sys.stdin.readline().strip()\nc = sys.stdin.readline().strip()\n\na = \'South\'\nb = \'West\'\nc = \'East\'\n\ndirections = [\'North\', \'South\', \'East\', \'West\']\n\nif a == b:\n    print("No")\nelse:\n    j = directions.index(a)\n    k = directions.index(b)\n    l = directions.index(c)\n    if (j + 1) % 4 == l or (j + 2) % 4 == l:\n        print("Yes")\n    else:\n        print("No")\n', '\nimport sys\n\na = sys.stdin.readline().strip()\nb = sys.stdin.readline().strip()\nc = sys.stdin.readline().strip()\n\n# a = \'South\'\n# b = \'West\'\n# c = \'East\'\n\ndirections = [\'North\', \'South\', \'East\', \'West\']\n\nif a == c:\n    print("No")\nelse:\n    i = directions.index(a)\n    j = directions.index(b)\n    k = directions.index(c)\n    if (i + 1) % 4 == k or (i + 2) % 4 == k:\n        print("Yes")\n    else:\n        print("No")\n']
2022-04-12 02:05:28.888662 size on output set 2
2022-04-12 02:05:28.888675 num operations 2
2022-04-12 02:05:28.888681 size on input set 1
2022-04-12 02:05:35.516282 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\na, b, c = input().split()\n\nif (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"South\" and b == \"East\" and c == \"West\") or (a == \"North\" and b == \"West\" and c == \"East\") or (a == \"West\" and b == \"South\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"South\"):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 1,
      "text": "\n\na, b, c = input().split()\n\nif (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\"): #check if the directions are correct\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    }
  ],
  "created": 1649743529,
  "object": "edit"
}
2022-04-12 02:05:35.516471 fix spelling mistakes 2 ['\n\na, b, c = input().split()\n\nif (a == "South" and b == "West" and c == "East") or (a == "North" and b == "East" and c == "West") or (a == "West" and b == "North" and c == "South") or (a == "East" and b == "South" and c == "North") or (a == "South" and b == "East" and c == "West") or (a == "North" and b == "West" and c == "East") or (a == "West" and b == "South" and c == "North") or (a == "East" and b == "North" and c == "South"):\n    print("Yes")\nelse:\n    print("No")\n', '\n\na, b, c = input().split()\n\nif (a == "South" and b == "West" and c == "East") or (a == "North" and b == "East" and c == "West") or (a == "West" and b == "North" and c == "South") or (a == "East" and b == "South" and c == "North"): #check if the directions are correct\n    print("Yes")\nelse:\n    print("No")\n']
2022-04-12 02:05:35.516505 size on output set 2
2022-04-12 02:05:35.516515 size on input set 2
2022-04-12 02:05:40.534823 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\na, b, c = input().split()\n\nif (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\"):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 1,
      "text": "\n\na, b, c = input().split()\n\nif (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\"):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    }
  ],
  "created": 1649743535,
  "object": "edit"
}
2022-04-12 02:05:40.535119 fix syntax errors 2 ['\n\na, b, c = input().split()\n\nif (a == "South" and b == "West" and c == "East") or (a == "North" and b == "East" and c == "West") or (a == "West" and b == "North" and c == "South") or (a == "East" and b == "South" and c == "North"):\n    print("Yes")\nelse:\n    print("No")\n', '\n\na, b, c = input().split()\n\nif (a == "South" and b == "West" and c == "East") or (a == "North" and b == "East" and c == "West") or (a == "West" and b == "North" and c == "South") or (a == "East" and b == "South" and c == "North"):\n    print("Yes")\nelse:\n    print("No")\n']
2022-04-12 02:06:22.186656 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\na, b, c = input().split() \n\nif (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"South\" and b == \"East\" and c == \"West\") or (a == \"North\" and b == \"West\" and c == \"East\") or (a == \"West\" and b == \"South\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"South\"):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 1,
      "text": "\n\na, b, c = input().split()\n\nif (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"South\" and b == \"East\" and c == \"West\") or (a == \"North\" and b == \"West\" and c == \"East\") or (a == \"West\" and b == \"South\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"South\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"South\" and b == \"East\" and c == \"West\") or (a == \"North\" and b == \"West\" and c == \"East\") or (a == \"West\" and b == \"South\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"South\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"South\" and b == \"East\" and c == \"West\") or (a == \"North\" and b == \"West\" and c == \"East\") or (a == \"West\" and b == \"South\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"South\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"South\" and b == \"East\" and c == \"West\") or (a == \"North\" and b == \"West\" and c == \"East\") or (a == \"West\" and b == \"South\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"South\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"South\" and b == \"East\" and c == \"West\") or (a == \"North\" and b == \"West\" and c == \"East\") or (a == \"West\" and b == \"South\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"South\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"South\" and b == \"East\" and c == \"West\") or (a == \"North\" and b == \"West\" and c == \"East\") or (a == \"West\" and b == \"South\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"South\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"South\" and b == \"East\" and c == \"West\") or (a == \"North\" and b == \"West\" and c == \"East\") or (a == \"West\" and b == \"South\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"South\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"South\" and b == \"East\" and c == \"West\") or (a == \"North\" and b == \"West\" and c == \"East\") or (a == \"West\" and b == \"South\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"South\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"South\" and b == \"East\" and c == \"West\") or (a == \"North\" and b == \"West\" and c == \"East\") or (a == \"West\" and b == \"South\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"South\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"South\" and b == \"East\" and c == \"West\") or (a == \"North\" and b == \"West\" and c == \"East\") or (a == \"West\" and b == \"South\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"South\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"South\" and b == \"East\" and c == \"West\") or (a == \"North\" and b == \"West\" and c == \"East\") or (a == \"West\" and b == \"South\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"South\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"South\" and b == \"East\" and c == \"West\") or (a == \"North\" and b == \"West\" and c == \"East\") or (a == \"West\" and b == \"South\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"South\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"West\" and b == \"North\" and c == \"South\") or (a\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    }
  ],
  "created": 1649743540,
  "object": "edit"
}
2022-04-12 02:06:22.187028 fix syntax errors 2 ['\n\na, b, c = input().split() \n\nif (a == "South" and b == "West" and c == "East") or (a == "North" and b == "East" and c == "West") or (a == "West" and b == "North" and c == "South") or (a == "East" and b == "South" and c == "North") or (a == "South" and b == "East" and c == "West") or (a == "North" and b == "West" and c == "East") or (a == "West" and b == "South" and c == "North") or (a == "East" and b == "North" and c == "South"):\n    print("Yes")\nelse:\n    print("No")\n', '\n\na, b, c = input().split()\n\nif (a == "South" and b == "West" and c == "East") or (a == "North" and b == "East" and c == "West") or (a == "West" and b == "North" and c == "South") or (a == "East" and b == "South" and c == "North") or (a == "South" and b == "East" and c == "West") or (a == "North" and b == "West" and c == "East") or (a == "West" and b == "South" and c == "North") or (a == "East" and b == "North" and c == "South") or (a == "South" and b == "West" and c == "East") or (a == "North" and b == "East" and c == "West") or (a == "West" and b == "North" and c == "South") or (a == "East" and b == "South" and c == "North") or (a == "South" and b == "East" and c == "West") or (a == "North" and b == "West" and c == "East") or (a == "West" and b == "South" and c == "North") or (a == "East" and b == "North" and c == "South") or (a == "South" and b == "West" and c == "East") or (a == "North" and b == "East" and c == "West") or (a == "West" and b == "North" and c == "South") or (a == "East" and b == "South" and c == "North") or (a == "South" and b == "East" and c == "West") or (a == "North" and b == "West" and c == "East") or (a == "West" and b == "South" and c == "North") or (a == "East" and b == "North" and c == "South") or (a == "South" and b == "West" and c == "East") or (a == "North" and b == "East" and c == "West") or (a == "West" and b == "North" and c == "South") or (a == "East" and b == "South" and c == "North") or (a == "South" and b == "East" and c == "West") or (a == "North" and b == "West" and c == "East") or (a == "West" and b == "South" and c == "North") or (a == "East" and b == "North" and c == "South") or (a == "South" and b == "West" and c == "East") or (a == "North" and b == "East" and c == "West") or (a == "West" and b == "North" and c == "South") or (a == "East" and b == "South" and c == "North") or (a == "South" and b == "East" and c == "West") or (a == "North" and b == "West" and c == "East") or (a == "West" and b == "South" and c == "North") or (a == "East" and b == "North" and c == "South") or (a == "South" and b == "West" and c == "East") or (a == "North" and b == "East" and c == "West") or (a == "West" and b == "North" and c == "South") or (a == "East" and b == "South" and c == "North") or (a == "South" and b == "East" and c == "West") or (a == "North" and b == "West" and c == "East") or (a == "West" and b == "South" and c == "North") or (a == "East" and b == "North" and c == "South") or (a == "South" and b == "West" and c == "East") or (a == "North" and b == "East" and c == "West") or (a == "West" and b == "North" and c == "South") or (a == "East" and b == "South" and c == "North") or (a == "South" and b == "East" and c == "West") or (a == "North" and b == "West" and c == "East") or (a == "West" and b == "South" and c == "North") or (a == "East" and b == "North" and c == "South") or (a == "South" and b == "West" and c == "East") or (a == "North" and b == "East" and c == "West") or (a == "West" and b == "North" and c == "South") or (a == "East" and b == "South" and c == "North") or (a == "South" and b == "East" and c == "West") or (a == "North" and b == "West" and c == "East") or (a == "West" and b == "South" and c == "North") or (a == "East" and b == "North" and c == "South") or (a == "South" and b == "West" and c == "East") or (a == "North" and b == "East" and c == "West") or (a == "West" and b == "North" and c == "South") or (a == "East" and b == "South" and c == "North") or (a == "South" and b == "East" and c == "West") or (a == "North" and b == "West" and c == "East") or (a == "West" and b == "South" and c == "North") or (a == "East" and b == "North" and c == "South") or (a == "South" and b == "West" and c == "East") or (a == "North" and b == "East" and c == "West") or (a == "West" and b == "North" and c == "South") or (a == "East" and b == "South" and c == "North") or (a == "South" and b == "East" and c == "West") or (a == "North" and b == "West" and c == "East") or (a == "West" and b == "South" and c == "North") or (a == "East" and b == "North" and c == "South") or (a == "South" and b == "West" and c == "East") or (a == "North" and b == "East" and c == "West") or (a == "West" and b == "North" and c == "South") or (a == "East" and b == "South" and c == "North") or (a == "South" and b == "East" and c == "West") or (a == "North" and b == "West" and c == "East") or (a == "West" and b == "South" and c == "North") or (a == "East" and b == "North" and c == "South") or (a == "South" and b == "West" and c == "East") or (a == "North" and b == "East" and c == "West") or (a == "West" and b == "North" and c == "South") or (a == "East" and b == "South" and c == "North") or (a == "South" and b == "East" and c == "West") or (a == "North" and b == "West" and c == "East") or (a == "West" and b == "South" and c == "North") or (a == "East" and b == "North" and c == "South") or (a == "South" and b == "West" and c == "East") or (a == "North" and b == "East" and c == "West") or (a == "West" and b == "North" and c == "South") or (a\n    print("Yes")\nelse:\n    print("No")\n']
2022-04-12 02:06:22.187140 size on output set 3
2022-04-12 02:06:22.187155 num operations 2
2022-04-12 02:06:22.187164 size on input set 1
2022-04-12 02:06:27.190416 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\ndef main():\n    a, b, c = input().split()  # a is not used\n    if b == \"North\" and c == \"South\":\n        print(\"Yes\")\n    elif b == \"South\" and c == \"North\":\n        print(\"Yes\")\n    elif b == \"West\" and (c == \"East\" or c == \"South\"):\n        print(\"Yes\")\n    elif b == \"East\" and (c == \"West\" or c == \"South\"):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n\ndef main():\n    a, b, c = input().split()\n    if b == \"North\" and c == \"South\" or b == \"South\" and c == \"North\":\n        print(\"Yes\")\n    elif b == \"West\" and c == \"East\" or b == \"East\" and c == \"West\":\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649743582,
  "object": "edit"
}
2022-04-12 02:06:27.190517 fix spelling mistakes 2 ['\n\n\ndef main():\n    a, b, c = input().split()  # a is not used\n    if b == "North" and c == "South":\n        print("Yes")\n    elif b == "South" and c == "North":\n        print("Yes")\n    elif b == "West" and (c == "East" or c == "South"):\n        print("Yes")\n    elif b == "East" and (c == "West" or c == "South"):\n        print("Yes")\n    else:\n        print("No")\n\n\nif __name__ == \'__main__\':\n    main()\n', '\n\n\ndef main():\n    a, b, c = input().split()\n    if b == "North" and c == "South" or b == "South" and c == "North":\n        print("Yes")\n    elif b == "West" and c == "East" or b == "East" and c == "West":\n        print("Yes")\n    else:\n        print("No")\n\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-12 02:06:27.190533 size on output set 2
2022-04-12 02:06:27.190537 size on input set 2
2022-04-12 02:06:32.610028 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\ndef main():\n    a, b, c = input().split()  # split the input\n    if b == \"North\" and c == \"South\" or b == \"South\" and c == \"North\":  # check if the directions are opposite\n        print(\"Yes\")\n    elif b == \"West\" and c == \"East\" or b == \"East\" and c == \"West\":  # check if the directions are opposite\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n\ndef main():\n    a, b, c = input().split()\n    if (b == \"North\" and c == \"South\") or (b == \"South\" and c == \"North\"):\n        print(\"Yes\")\n    elif (b == \"West\" and c == \"East\") or (b == \"East\" and c == \"West\"):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649743587,
  "object": "edit"
}
2022-04-12 02:06:32.610187 fix syntax errors 2 ['\n\n\ndef main():\n    a, b, c = input().split()  # split the input\n    if b == "North" and c == "South" or b == "South" and c == "North":  # check if the directions are opposite\n        print("Yes")\n    elif b == "West" and c == "East" or b == "East" and c == "West":  # check if the directions are opposite\n        print("Yes")\n    else:\n        print("No")\n\n\nif __name__ == \'__main__\':\n    main()\n', '\n\n\ndef main():\n    a, b, c = input().split()\n    if (b == "North" and c == "South") or (b == "South" and c == "North"):\n        print("Yes")\n    elif (b == "West" and c == "East") or (b == "East" and c == "West"):\n        print("Yes")\n    else:\n        print("No")\n\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-12 02:06:37.448292 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\ndef main():\n    a, b, c = input().split()  # a is not used\n    if b == \"North\" and c == \"South\" or b == \"South\" and c == \"North\":\n        print(\"Yes\")\n    elif b == \"West\" and c == \"East\" or b == \"East\" and c == \"West\":\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n\ndef main():\n    a, b, c = input().split()  # a is unused\n    if b == \"North\" and c == \"South\":\n        print(\"Yes\")\n    elif b == \"South\" and c == \"North\":\n        print(\"Yes\")\n    elif b == \"West\" and (c == \"East\" or c == \"South\"):\n        print(\"Yes\")\n    elif b == \"East\" and (c == \"West\" or c == \"South\"):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649743592,
  "object": "edit"
}
2022-04-12 02:06:37.448392 fix syntax errors 2 ['\n\n\ndef main():\n    a, b, c = input().split()  # a is not used\n    if b == "North" and c == "South" or b == "South" and c == "North":\n        print("Yes")\n    elif b == "West" and c == "East" or b == "East" and c == "West":\n        print("Yes")\n    else:\n        print("No")\n\n\nif __name__ == \'__main__\':\n    main()\n', '\n\n\ndef main():\n    a, b, c = input().split()  # a is unused\n    if b == "North" and c == "South":\n        print("Yes")\n    elif b == "South" and c == "North":\n        print("Yes")\n    elif b == "West" and (c == "East" or c == "South"):\n        print("Yes")\n    elif b == "East" and (c == "West" or c == "South"):\n        print("Yes")\n    else:\n        print("No")\n\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-12 02:06:37.448407 size on output set 4
2022-04-12 02:06:37.448418 num operations 2
2022-04-12 02:06:37.448421 size on input set 1
2022-04-12 02:06:39.897808 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    #Read the input\n    a,b,c = sys.stdin.readline().split()\n\n    #Determine if you should yield or not\n    if((a == \"North\" and b == \"West\" and c == \"South\") or (a == \"South\" and b == \"East\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"West\") or (a == \"West\" and b == \"South\" and c == \"East\")):\n        print(\"Yes\")\n    elif((a == \"North\" and b == \"East\" and c == \"West\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"West\" and b == \"North\" and c == \"South\")):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    #Read the input\n    a,b,c = sys.stdin.readline().split()\n\n    #Determine if you should yield or not\n    if((a == \"North\" and b == \"West\" and c == \"South\") or (a == \"South\" and b == \"East\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"West\") or (a == \"West\" and b == \"South\" and c == \"East\")):\n        print(\"Yes\")\n    elif((a == \"North\" and b == \"East\" and c == \"West\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"West\" and b == \"North\" and c == \"South\")):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649743597,
  "object": "edit"
}
2022-04-12 02:06:39.898219 fix spelling mistakes 2 ['\nimport sys\n\ndef main():\n    #Read the input\n    a,b,c = sys.stdin.readline().split()\n\n    #Determine if you should yield or not\n    if((a == "North" and b == "West" and c == "South") or (a == "South" and b == "East" and c == "North") or (a == "East" and b == "North" and c == "West") or (a == "West" and b == "South" and c == "East")):\n        print("Yes")\n    elif((a == "North" and b == "East" and c == "West") or (a == "South" and b == "West" and c == "East") or (a == "East" and b == "South" and c == "North") or (a == "West" and b == "North" and c == "South")):\n        print("Yes")\n    else:\n        print("No")\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    #Read the input\n    a,b,c = sys.stdin.readline().split()\n\n    #Determine if you should yield or not\n    if((a == "North" and b == "West" and c == "South") or (a == "South" and b == "East" and c == "North") or (a == "East" and b == "North" and c == "West") or (a == "West" and b == "South" and c == "East")):\n        print("Yes")\n    elif((a == "North" and b == "East" and c == "West") or (a == "South" and b == "West" and c == "East") or (a == "East" and b == "South" and c == "North") or (a == "West" and b == "North" and c == "South")):\n        print("Yes")\n    else:\n        print("No")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 02:06:39.898310 size on output set 1
2022-04-12 02:06:39.898319 size on input set 1
2022-04-12 02:06:50.266726 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    #Read the input\n    a, b, c = sys.stdin.readline().split()\n\n    #Determine if you should yield or not\n    if((a == \"North\" and b == \"West\" and c == \"South\") or (a == \"South\" and b == \"East\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"West\") or (a == \"West\" and b == \"South\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"West\" and b == \"North\" and c == \"South\")):\n        print(\"Yes\")\n\n    else:\n        print(\"No\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    #Read the input\n    a,b,c = sys.stdin.readline().split()\n\n    #Determine if you should yield or not\n    if((a == \"North\" and b == \"West\" and c == \"South\") or (a == \"South\" and b == \"East\" and c == \"North\") or (a == \"East\" and b == \"North\" and c == \"West\") or (a == \"West\" and b == \"South\" and c == \"East\") or (a == \"North\" and b == \"East\" and c == \"West\") or (a == \"South\" and b == \"West\" and c == \"East\") or (a == \"East\" and b == \"South\" and c == \"North\") or (a == \"West\" and b == \"North\" and c == \"South\")):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649743600,
  "object": "edit"
}
2022-04-12 02:06:50.267026 fix syntax errors 2 ['import sys\n\ndef main():\n    #Read the input\n    a, b, c = sys.stdin.readline().split()\n\n    #Determine if you should yield or not\n    if((a == "North" and b == "West" and c == "South") or (a == "South" and b == "East" and c == "North") or (a == "East" and b == "North" and c == "West") or (a == "West" and b == "South" and c == "East") or (a == "North" and b == "East" and c == "West") or (a == "South" and b == "West" and c == "East") or (a == "East" and b == "South" and c == "North") or (a == "West" and b == "North" and c == "South")):\n        print("Yes")\n\n    else:\n        print("No")\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    #Read the input\n    a,b,c = sys.stdin.readline().split()\n\n    #Determine if you should yield or not\n    if((a == "North" and b == "West" and c == "South") or (a == "South" and b == "East" and c == "North") or (a == "East" and b == "North" and c == "West") or (a == "West" and b == "South" and c == "East") or (a == "North" and b == "East" and c == "West") or (a == "South" and b == "West" and c == "East") or (a == "East" and b == "South" and c == "North") or (a == "West" and b == "North" and c == "South")):\n        print("Yes")\n    else:\n        print("No")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 02:06:50.267070 size on output set 2
2022-04-12 02:06:50.267095 num operations 2
2022-04-12 02:06:50.267104 size on input set 1
2022-04-12 02:06:56.997058 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    a, b, c = input().split()  # \u5165\u529b\u30923\u3064\u306b\u5206\u3051\u308b\n    if b == \"West\" and c == \"East\":  # \u5165\u529b\u3057\u305f\u6587\u5b57\u304c\u6761\u4ef6\u306b\u3042\u3063\u305f\u3089\n        print(\"Yes\")\n    elif b == \"East\" and c == \"West\":\n        print(\"Yes\")\n    elif b == \"North\" and c == \"South\":\n        print(\"Yes\")\n    elif b == \"South\" and c == \"North\":\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    a, b, c = input().split()  # a is the number of the street, b is the direction of the first house, c is the direction of the second house\n    if b == \"West\" and c == \"East\":  # if the first house is west and the second house is east, then they are facing each other\n        print(\"Yes\")\n    elif b == \"East\" and c == \"West\":\n        print(\"Yes\")\n    elif b == \"North\" and c == \"South\":\n        print(\"Yes\")\n    elif b == \"South\" and c == \"North\":\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649743610,
  "object": "edit"
}
2022-04-12 02:06:56.997160 fix spelling mistakes 2 ['\n\ndef main():\n    a, b, c = input().split()  # 入力を3つに分ける\n    if b == "West" and c == "East":  # 入力した文字が条件にあったら\n        print("Yes")\n    elif b == "East" and c == "West":\n        print("Yes")\n    elif b == "North" and c == "South":\n        print("Yes")\n    elif b == "South" and c == "North":\n        print("Yes")\n    else:\n        print("No")\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    a, b, c = input().split()  # a is the number of the street, b is the direction of the first house, c is the direction of the second house\n    if b == "West" and c == "East":  # if the first house is west and the second house is east, then they are facing each other\n        print("Yes")\n    elif b == "East" and c == "West":\n        print("Yes")\n    elif b == "North" and c == "South":\n        print("Yes")\n    elif b == "South" and c == "North":\n        print("Yes")\n    else:\n        print("No")\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-12 02:06:56.997180 size on output set 2
2022-04-12 02:06:56.997183 size on input set 2
2022-04-12 02:07:00.966733 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    a, b, c = input().split()  # a is the number of the street, b is the direction of the first house, c is the direction of the second house, and a is the number of the street\n    if b == \"West\" and c == \"East\":  # if the first house is west and the second house is east, then they are facing each other\n        print(\"Yes\")\n    elif b == \"East\" and c == \"West\":\n        print(\"Yes\")\n    elif b == \"North\" and c == \"South\":\n        print(\"Yes\")\n    elif b == \"South\" and c == \"North\":\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    a, b, c = input().split()  # a is the number of the street, b is the direction of the first house, c is the direction of the second house.\n    if b == \"West\" and c == \"East\":  # if the first house is west and the second house is east, then they are facing each other\n        print(\"Yes\")\n    elif b == \"East\" and c == \"West\":\n        print(\"Yes\")\n    elif b == \"North\" and c == \"South\":\n        print(\"Yes\")\n    elif b == \"South\" and c == \"North\":\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649743617,
  "object": "edit"
}
2022-04-12 02:07:00.966936 fix syntax errors 2 ['\n\ndef main():\n    a, b, c = input().split()  # a is the number of the street, b is the direction of the first house, c is the direction of the second house, and a is the number of the street\n    if b == "West" and c == "East":  # if the first house is west and the second house is east, then they are facing each other\n        print("Yes")\n    elif b == "East" and c == "West":\n        print("Yes")\n    elif b == "North" and c == "South":\n        print("Yes")\n    elif b == "South" and c == "North":\n        print("Yes")\n    else:\n        print("No")\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    a, b, c = input().split()  # a is the number of the street, b is the direction of the first house, c is the direction of the second house.\n    if b == "West" and c == "East":  # if the first house is west and the second house is east, then they are facing each other\n        print("Yes")\n    elif b == "East" and c == "West":\n        print("Yes")\n    elif b == "North" and c == "South":\n        print("Yes")\n    elif b == "South" and c == "North":\n        print("Yes")\n    else:\n        print("No")\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-12 02:07:06.421430 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    a, b, c = input().split()\n    if b == \"West\" and c == \"East\":\n        print(\"Yes\")\n    elif b == \"East\" and c == \"West\":\n        print(\"Yes\")\n    elif b == \"North\" and c == \"South\":\n        print(\"Yes\")\n    elif b == \"South\" and c == \"North\":\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    a, b, c = input().split()  # \u5165\u529b\u30923\u3064\u306b\u5206\u3051\u308b\n    if b == \"West\" and c == \"East\":  # \u5165\u529b\u3057\u305f\u6587\u5b57\u304c\u6761\u4ef6\u306b\u3042\u3063\u305f\u3089\u3001Yes\u3092\u51fa\u529b\n        print(\"Yes\")\n    elif b == \"East\" and c == \"West\":\n        print(\"Yes\")\n    elif b == \"North\" and c == \"South\":\n        print(\"Yes\")\n    elif b == \"South\" and c == \"North\":\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649743621,
  "object": "edit"
}
2022-04-12 02:07:06.421575 fix syntax errors 2 ['\n\ndef main():\n    a, b, c = input().split()\n    if b == "West" and c == "East":\n        print("Yes")\n    elif b == "East" and c == "West":\n        print("Yes")\n    elif b == "North" and c == "South":\n        print("Yes")\n    elif b == "South" and c == "North":\n        print("Yes")\n    else:\n        print("No")\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    a, b, c = input().split()  # 入力を3つに分ける\n    if b == "West" and c == "East":  # 入力した文字が条件にあったら、Yesを出力\n        print("Yes")\n    elif b == "East" and c == "West":\n        print("Yes")\n    elif b == "North" and c == "South":\n        print("Yes")\n    elif b == "South" and c == "North":\n        print("Yes")\n    else:\n        print("No")\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-12 02:07:06.421610 size on output set 4
2022-04-12 02:07:06.421624 num operations 2
2022-04-12 02:07:06.421632 size on input set 1
2022-04-12 02:07:14.605103 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\na, b, c = sys.stdin.read().split()\n\nif (a == \"North\" and (b == \"West\" and c == \"East\" or b == \"East\" and c == \"West\")) or (\n        a == \"South\" and (b == \"West\" and c == \"East\" or b == \"East\" and c == \"West\")) or (\n        a == \"East\" and (b == \"North\" and c == \"South\" or b == \"South\" and c == \"North\")) or (\n        a == \"West\" and (b == \"North\" and c == \"South\" or b == \"South\" and c == \"North\")):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\na, b, c = sys.stdin.read().split()\n\nif (a == \"North\" and (b == \"West\" and c == \"East\" or b == \"East\" and c == \"West\")) or (a == \"South\" and (b == \"West\" and c == \"East\" or b == \"East\" and c == \"West\")) or (a == \"East\" and (b == \"North\" and c == \"South\" or b == \"South\" and c == \"North\")) or (a == \"West\" and (b == \"North\" and c == \"South\" or b == \"South\" and c == \"North\")):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    }
  ],
  "created": 1649743626,
  "object": "edit"
}
2022-04-12 02:07:14.605292 fix spelling mistakes 2 ['import sys\n\na, b, c = sys.stdin.read().split()\n\nif (a == "North" and (b == "West" and c == "East" or b == "East" and c == "West")) or (\n        a == "South" and (b == "West" and c == "East" or b == "East" and c == "West")) or (\n        a == "East" and (b == "North" and c == "South" or b == "South" and c == "North")) or (\n        a == "West" and (b == "North" and c == "South" or b == "South" and c == "North")):\n    print("Yes")\nelse:\n    print("No")\n', '\nimport sys\n\na, b, c = sys.stdin.read().split()\n\nif (a == "North" and (b == "West" and c == "East" or b == "East" and c == "West")) or (a == "South" and (b == "West" and c == "East" or b == "East" and c == "West")) or (a == "East" and (b == "North" and c == "South" or b == "South" and c == "North")) or (a == "West" and (b == "North" and c == "South" or b == "South" and c == "North")):\n    print("Yes")\nelse:\n    print("No")\n']
2022-04-12 02:07:14.605327 size on output set 2
2022-04-12 02:07:14.605336 size on input set 2
2022-04-12 02:07:22.110731 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\na, b, c = sys.stdin.read().split()\n\nif (a == \"North\" and (b == \"West\" and c == \"East\" or b == \"East\" and c == \"West\")) or (a == \"South\" and (\n        b == \"West\" and c == \"East\" or b == \"East\" and c == \"West\")) or (a == \"East\" and (\n        b == \"North\" and c == \"South\" or b == \"South\" and c == \"North\")) or (a == \"West\" and (\n        b == \"North\" and c == \"South\" or b == \"South\" and c == \"North\")):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 1,
      "text": "import sys\n\na, b, c = sys.stdin.read().split()\n\nif (a == \"North\" and (b == \"West\" and c == \"East\") or (b == \"East\" and c == \"West\")) or (\n        a == \"South\" and (b == \"West\" and c == \"East\") or (b == \"East\" and c == \"West\")) or (\n        a == \"East\" and (b == \"North\" and c == \"South\") or (b == \"South\" and c == \"North\")) or (\n        a == \"West\" and (b == \"North\" and c == \"South\") or (b == \"South\" and c == \"North\")):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    }
  ],
  "created": 1649743634,
  "object": "edit"
}
2022-04-12 02:07:22.110874 fix syntax errors 2 ['import sys\n\na, b, c = sys.stdin.read().split()\n\nif (a == "North" and (b == "West" and c == "East" or b == "East" and c == "West")) or (a == "South" and (\n        b == "West" and c == "East" or b == "East" and c == "West")) or (a == "East" and (\n        b == "North" and c == "South" or b == "South" and c == "North")) or (a == "West" and (\n        b == "North" and c == "South" or b == "South" and c == "North")):\n    print("Yes")\nelse:\n    print("No")\n', 'import sys\n\na, b, c = sys.stdin.read().split()\n\nif (a == "North" and (b == "West" and c == "East") or (b == "East" and c == "West")) or (\n        a == "South" and (b == "West" and c == "East") or (b == "East" and c == "West")) or (\n        a == "East" and (b == "North" and c == "South") or (b == "South" and c == "North")) or (\n        a == "West" and (b == "North" and c == "South") or (b == "South" and c == "North")):\n    print("Yes")\nelse:\n    print("No")\n']
2022-04-12 02:07:29.598701 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\na, b, c = sys.stdin.read().split()\n\nif (a == \"North\" and (b == \"West\" and c == \"East\" or b == \"East\" and c == \"West\")) or (a == \"South\" and (b == \"West\" and c == \"East\" or b == \"East\" and c == \"West\")) or (a == \"East\" and (b == \"North\" and c == \"South\" or b == \"South\" and c == \"North\")) or (a == \"West\" and (b == \"North\" and c == \"South\" or b == \"South\" and c == \"North\")):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 1,
      "text": "import sys\n\na, b, c = sys.stdin.read().split()\n\nif (a == \"North\" and (b == \"West\" and c == \"East\" or b == \"East\" and c == \"West\")) or (a == \"South\" and (b == \"West\" and c == \"East\" or b == \"East\" and c == \"West\")) or (a == \"East\" and (b == \"North\" and c == \"South\" or b == \"South\" and c == \"North\")) or (a == \"West\" and (b == \"North\" and c == \"South\" or b == \"South\" and c == \"North\")): \n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    }
  ],
  "created": 1649743642,
  "object": "edit"
}
2022-04-12 02:07:29.598926 fix syntax errors 2 ['\nimport sys\n\na, b, c = sys.stdin.read().split()\n\nif (a == "North" and (b == "West" and c == "East" or b == "East" and c == "West")) or (a == "South" and (b == "West" and c == "East" or b == "East" and c == "West")) or (a == "East" and (b == "North" and c == "South" or b == "South" and c == "North")) or (a == "West" and (b == "North" and c == "South" or b == "South" and c == "North")):\n    print("Yes")\nelse:\n    print("No")\n', 'import sys\n\na, b, c = sys.stdin.read().split()\n\nif (a == "North" and (b == "West" and c == "East" or b == "East" and c == "West")) or (a == "South" and (b == "West" and c == "East" or b == "East" and c == "West")) or (a == "East" and (b == "North" and c == "South" or b == "South" and c == "North")) or (a == "West" and (b == "North" and c == "South" or b == "South" and c == "North")): \n    print("Yes")\nelse:\n    print("No")\n']
2022-04-12 02:07:29.598952 size on output set 4
2022-04-12 02:07:29.598963 num operations 2
2022-04-12 02:07:29.598970 size on input set 1
2022-04-12 02:07:34.140718 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\na = input().split()\n\nif (a[0] == 'North' and a[2] == 'South') or (a[0] == 'South' and a[2] == 'North') or (a[0] == 'West' and a[2] == 'East') or (a[0] == 'East' and a[2] == 'West'):\n    print(\"No\")\nelse:\n    print(\"Yes\")\n"
    },
    {
      "index": 1,
      "text": "\n\na = input().split()\n\nif (a[0] == 'North' and a[2] == 'South') or (a[0] == 'South' and a[2] == 'North') or (a[0] == 'East' and a[2] == 'West') or (a[0] == 'West' and a[2] == 'East'):\n    print(\"No\")\nelse:\n    print(\"Yes\")\n"
    }
  ],
  "created": 1649743649,
  "object": "edit"
}
2022-04-12 02:07:34.140825 fix spelling mistakes 2 ['\n\na = input().split()\n\nif (a[0] == \'North\' and a[2] == \'South\') or (a[0] == \'South\' and a[2] == \'North\') or (a[0] == \'West\' and a[2] == \'East\') or (a[0] == \'East\' and a[2] == \'West\'):\n    print("No")\nelse:\n    print("Yes")\n', '\n\na = input().split()\n\nif (a[0] == \'North\' and a[2] == \'South\') or (a[0] == \'South\' and a[2] == \'North\') or (a[0] == \'East\' and a[2] == \'West\') or (a[0] == \'West\' and a[2] == \'East\'):\n    print("No")\nelse:\n    print("Yes")\n']
2022-04-12 02:07:34.140845 size on output set 2
2022-04-12 02:07:34.140848 size on input set 2
2022-04-12 02:07:40.402780 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\na = input().split()\n\nif (a[0] == 'North' and a[2] == 'South') or (a[0] == 'South' and a[2] == 'North') or (a[0] == 'West' and a[2] == 'East') or (a[0] == 'East' and a[2] == 'West') or (a[1] == 'North' and a[3] == 'South') or (a[1] == 'South' and a[3] == 'North') or (a[1] == 'West' and a[3] == 'East') or (a[1] == 'East' and a[3] == 'West'):\n    print(\"No\")\nelse:\n    print(\"Yes\")\n"
    },
    {
      "index": 1,
      "text": "\na = input().split()\n\nif (a[0] == 'North' and a[2] == 'South') or (a[0] == 'South' and a[2] == 'North') or (a[0] == 'West' and a[2] == 'East') or (a[0] == 'East' and a[2] == 'West'):\n    print(\"No\")\nelse:\n    print(\"Yes\")\n"
    }
  ],
  "created": 1649743654,
  "object": "edit"
}
2022-04-12 02:07:40.402969 fix syntax errors 2 ['\n\na = input().split()\n\nif (a[0] == \'North\' and a[2] == \'South\') or (a[0] == \'South\' and a[2] == \'North\') or (a[0] == \'West\' and a[2] == \'East\') or (a[0] == \'East\' and a[2] == \'West\') or (a[1] == \'North\' and a[3] == \'South\') or (a[1] == \'South\' and a[3] == \'North\') or (a[1] == \'West\' and a[3] == \'East\') or (a[1] == \'East\' and a[3] == \'West\'):\n    print("No")\nelse:\n    print("Yes")\n', '\na = input().split()\n\nif (a[0] == \'North\' and a[2] == \'South\') or (a[0] == \'South\' and a[2] == \'North\') or (a[0] == \'West\' and a[2] == \'East\') or (a[0] == \'East\' and a[2] == \'West\'):\n    print("No")\nelse:\n    print("Yes")\n']
2022-04-12 02:07:45.875245 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\na = input().split()\n\nif (a[0] == 'North' and a[2] == 'South') or (a[0] == 'South' and a[2] == 'North') or (a[0] == 'East' and a[2] == 'West') or (a[0] == 'West' and a[2] == 'East') or (a[1] == 'North' and a[3] == 'South') or (a[1] == 'South' and a[3] == 'North') or (a[1] == 'East' and a[3] == 'West') or (a[1] == 'West' and a[3] == 'East'):\n    print(\"No\")\nelse:\n    print(\"Yes\")\n"
    },
    {
      "index": 1,
      "text": "\n\na = input().split(' ')\n\nif (a[0] == 'North' and a[2] == 'South') or (a[0] == 'South' and a[2] == 'North') or (a[0] == 'East' and a[2] == 'West') or (a[0] == 'West' and a[2] == 'East'):\n    print(\"No\")\nelse:\n    print(\"Yes\")\n"
    }
  ],
  "created": 1649743660,
  "object": "edit"
}
2022-04-12 02:07:45.875523 fix syntax errors 2 ['\n\na = input().split()\n\nif (a[0] == \'North\' and a[2] == \'South\') or (a[0] == \'South\' and a[2] == \'North\') or (a[0] == \'East\' and a[2] == \'West\') or (a[0] == \'West\' and a[2] == \'East\') or (a[1] == \'North\' and a[3] == \'South\') or (a[1] == \'South\' and a[3] == \'North\') or (a[1] == \'East\' and a[3] == \'West\') or (a[1] == \'West\' and a[3] == \'East\'):\n    print("No")\nelse:\n    print("Yes")\n', '\n\na = input().split(\' \')\n\nif (a[0] == \'North\' and a[2] == \'South\') or (a[0] == \'South\' and a[2] == \'North\') or (a[0] == \'East\' and a[2] == \'West\') or (a[0] == \'West\' and a[2] == \'East\'):\n    print("No")\nelse:\n    print("Yes")\n']
2022-04-12 02:07:45.875571 size on output set 4
2022-04-12 02:07:45.875600 num operations 2
2022-04-12 02:07:45.875609 size on input set 1
2022-04-12 02:07:53.114747 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#-----Main-----\na, b, c = input().split()\n\nif (a == \"North\" and b == \"South\") or (a == \"South\" and b == \"North\") or (a == \"East\" and b == \"West\") or (a == \"West\" and b == \"East\"):\n    print(\"No\")\nelif (c == \"North\" and b == \"South\") or (c == \"South\" and b == \"North\") or (c == \"East\" and b == \"West\") or (c == \"West\" and b == \"East\"):\n    print(\"No\")\nelse:\n    print(\"Yes\")\n"
    },
    {
      "index": 1,
      "text": "\n\n#-----main-----#\na, b, c = input().split() #input\n\nif (a == \"North\" and b == \"South\") or (a == \"South\" and b == \"North\") or (a == \"East\" and b == \"West\") or (a == \"West\" and b == \"East\"): #if a and b are opposite\n    print(\"No\") #print no\nelif (c == \"North\" and b == \"South\") or (c == \"South\" and b == \"North\") or (c == \"East\" and b == \"West\") or (c == \"West\" and b == \"East\"): #if b and c are opposite\n    print(\"No\") #print no\nelse: #if a and b are not opposite\n    print(\"Yes\") #print yes\n"
    }
  ],
  "created": 1649743666,
  "object": "edit"
}
2022-04-12 02:07:53.114845 fix spelling mistakes 2 ['\n\n#-----Main-----\na, b, c = input().split()\n\nif (a == "North" and b == "South") or (a == "South" and b == "North") or (a == "East" and b == "West") or (a == "West" and b == "East"):\n    print("No")\nelif (c == "North" and b == "South") or (c == "South" and b == "North") or (c == "East" and b == "West") or (c == "West" and b == "East"):\n    print("No")\nelse:\n    print("Yes")\n', '\n\n#-----main-----#\na, b, c = input().split() #input\n\nif (a == "North" and b == "South") or (a == "South" and b == "North") or (a == "East" and b == "West") or (a == "West" and b == "East"): #if a and b are opposite\n    print("No") #print no\nelif (c == "North" and b == "South") or (c == "South" and b == "North") or (c == "East" and b == "West") or (c == "West" and b == "East"): #if b and c are opposite\n    print("No") #print no\nelse: #if a and b are not opposite\n    print("Yes") #print yes\n']
2022-04-12 02:07:53.114920 size on output set 2
2022-04-12 02:07:53.114924 size on input set 2
2022-04-12 02:07:55.150756 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#-----Main-----\na, b, c = input().split()\n\nif (a == \"North\" and b == \"South\") or (a == \"South\" and b == \"North\") or (a == \"East\" and b == \"West\") or (a == \"West\" and b == \"East\"):\n    print(\"No\")\nelif (c == \"North\" and b == \"South\") or (c == \"South\" and b == \"North\") or (c == \"East\" and b == \"West\") or (c == \"West\" and b == \"East\"):\n    print(\"No\")\nelse:\n    print(\"Yes\")\n"
    },
    {
      "index": 1,
      "text": "\n\n# -----Main-----\na, b, c = input().split()\n\nif (a == \"North\" and b == \"South\") or (a == \"South\" and b == \"North\") or (a == \"East\" and b == \"West\") or (a == \"West\" and b == \"East\"):\n    print(\"No\")\nelif (c == \"North\" and b == \"South\") or (c == \"South\" and b == \"North\") or (c == \"East\" and b == \"West\") or (c == \"West\" and b == \"East\"):\n    print(\"No\")\nelse:\n    print(\"Yes\")\n"
    }
  ],
  "created": 1649743673,
  "object": "edit"
}
2022-04-12 02:07:55.150918 fix syntax errors 2 ['\n#-----Main-----\na, b, c = input().split()\n\nif (a == "North" and b == "South") or (a == "South" and b == "North") or (a == "East" and b == "West") or (a == "West" and b == "East"):\n    print("No")\nelif (c == "North" and b == "South") or (c == "South" and b == "North") or (c == "East" and b == "West") or (c == "West" and b == "East"):\n    print("No")\nelse:\n    print("Yes")\n', '\n\n# -----Main-----\na, b, c = input().split()\n\nif (a == "North" and b == "South") or (a == "South" and b == "North") or (a == "East" and b == "West") or (a == "West" and b == "East"):\n    print("No")\nelif (c == "North" and b == "South") or (c == "South" and b == "North") or (c == "East" and b == "West") or (c == "West" and b == "East"):\n    print("No")\nelse:\n    print("Yes")\n']
2022-04-12 02:08:01.626792 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#-----main-----#\na, b, c = input().split() #input\n\nif (a == \"North\" and b == \"South\") or (a == \"South\" and b == \"North\") or (a == \"East\" and b == \"West\") or (a == \"West\" and b == \"East\") or (a == \"North\" and c == \"South\") or (a == \"South\" and c == \"North\") or (a == \"East\" and c == \"West\") or (a == \"West\" and c == \"East\"): #if a and b are opposite\n    print(\"No\") #print no\nelse: #if a and b are not opposite or a and c are not opposite\n    print(\"Yes\") #print yes\n"
    },
    {
      "index": 1,
      "text": "\n#-----main-----#\na, b, c = input().split() #input\n\nif (a == \"North\" and b == \"South\") or (a == \"South\" and b == \"North\") or (a == \"East\" and b == \"West\") or (a == \"West\" and b == \"East\"): #if a and b are opposite\n    print(\"No\") #print no\nelif (c == \"North\" and b == \"South\") or (c == \"South\" and b == \"North\") or (c == \"East\" and b == \"West\") or (c == \"West\" and b == \"East\"): #if b and c are opposite\n    print(\"No\") #print no\nelse: #if a and b are not opposite\n    print(\"Yes\") #print yes\n"
    }
  ],
  "created": 1649743675,
  "object": "edit"
}
2022-04-12 02:08:01.626939 fix syntax errors 2 ['\n\n#-----main-----#\na, b, c = input().split() #input\n\nif (a == "North" and b == "South") or (a == "South" and b == "North") or (a == "East" and b == "West") or (a == "West" and b == "East") or (a == "North" and c == "South") or (a == "South" and c == "North") or (a == "East" and c == "West") or (a == "West" and c == "East"): #if a and b are opposite\n    print("No") #print no\nelse: #if a and b are not opposite or a and c are not opposite\n    print("Yes") #print yes\n', '\n#-----main-----#\na, b, c = input().split() #input\n\nif (a == "North" and b == "South") or (a == "South" and b == "North") or (a == "East" and b == "West") or (a == "West" and b == "East"): #if a and b are opposite\n    print("No") #print no\nelif (c == "North" and b == "South") or (c == "South" and b == "North") or (c == "East" and b == "West") or (c == "West" and b == "East"): #if b and c are opposite\n    print("No") #print no\nelse: #if a and b are not opposite\n    print("Yes") #print yes\n']
2022-04-12 02:08:01.626967 size on output set 4
