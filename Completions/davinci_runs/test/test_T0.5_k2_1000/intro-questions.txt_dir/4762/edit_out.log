2022-04-11 23:13:09.024346 num operations 2
2022-04-11 23:13:09.024382 size on input set 1
2022-04-11 23:13:11.752666 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1)/N) # 1 - (N-1)/N\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1)/N)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649733189,
  "object": "edit"
}
2022-04-11 23:13:11.753224 fix spelling mistakes 2 ['\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1)/N) # 1 - (N-1)/N\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1)/N)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 23:13:11.753328 size on output set 2
2022-04-11 23:13:11.753360 size on input set 2
2022-04-11 23:13:14.194792 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1)/N) \n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1) / N)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649733191,
  "object": "edit"
}
2022-04-11 23:13:14.195073 fix syntax errors 2 ['import sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1)/N) \n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1) / N)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 23:13:17.122731 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1)/N) # 1 - (N-1)/N \n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1)/N) # 1 - (N-1)/N\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649733194,
  "object": "edit"
}
2022-04-11 23:13:17.122843 fix syntax errors 2 ['\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1)/N) # 1 - (N-1)/N \n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(1 - (N - 1)/N) # 1 - (N-1)/N\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 23:13:17.122855 size on output set 4
2022-04-11 23:13:17.122870 num operations 2
2022-04-11 23:13:17.122874 size on input set 1
2022-04-11 23:13:20.167709 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n-r)\n\ndef p(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n)\n\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r')\n    sys.stdout = open(pname + '.out', 'w')\n\n    n = int(input())\n    print(p(n))\n\nif __name__ == \"__main__\":\n    main('gift2')\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n-r)\n\ndef probability(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n)\n\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r')\n    sys.stdout = open(pname + '.out', 'w')\n\n    n = int(input())\n    print(probability(n))\n\nif __name__ == \"__main__\":\n    main('gift1')\n"
    }
  ],
  "created": 1649733197,
  "object": "edit"
}
2022-04-11 23:13:20.167840 fix spelling mistakes 2 ['\n\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n-r)\n\ndef p(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n)\n\ndef main(pname):\n    sys.stdin = open(pname + \'.in\', \'r\')\n    sys.stdout = open(pname + \'.out\', \'w\')\n\n    n = int(input())\n    print(p(n))\n\nif __name__ == "__main__":\n    main(\'gift2\')\n', '\n\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n-r)\n\ndef probability(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n)\n\ndef main(pname):\n    sys.stdin = open(pname + \'.in\', \'r\')\n    sys.stdout = open(pname + \'.out\', \'w\')\n\n    n = int(input())\n    print(probability(n))\n\nif __name__ == "__main__":\n    main(\'gift1\')\n']
2022-04-11 23:13:20.167859 size on output set 2
2022-04-11 23:13:20.167864 size on input set 2
2022-04-11 23:13:24.011568 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n-r)\n\ndef probability(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n) * 100\n\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r')\n    sys.stdout = open(pname + '.out', 'w')\n\n    n = int(input())\n    print(probability(n))\n\nif __name__ == \"__main__\":\n    main('gift1')\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n-r)\n\ndef probability(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n) * 100\n\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r')\n    sys.stdout = open(pname + '.out', 'w')\n\n    n = int(input())\n    print(round(probability(n), 2))\n\nif __name__ == \"__main__\":\n    main('gift1')\n"
    }
  ],
  "created": 1649733200,
  "object": "edit"
}
2022-04-11 23:13:24.011726 fix syntax errors 2 ['\n\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n-r)\n\ndef probability(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n) * 100\n\ndef main(pname):\n    sys.stdin = open(pname + \'.in\', \'r\')\n    sys.stdout = open(pname + \'.out\', \'w\')\n\n    n = int(input())\n    print(probability(n))\n\nif __name__ == "__main__":\n    main(\'gift1\')\n', '\n\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n-r)\n\ndef probability(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n) * 100\n\ndef main(pname):\n    sys.stdin = open(pname + \'.in\', \'r\')\n    sys.stdout = open(pname + \'.out\', \'w\')\n\n    n = int(input())\n    print(round(probability(n), 2))\n\nif __name__ == "__main__":\n    main(\'gift1\')\n']
2022-04-11 23:13:27.381807 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n-r)\n\ndef p(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n)\n\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r')\n    sys.stdout = open(pname + '.out', 'w')\n\n    n = int(input())\n    print(p(n))\n\nif __name__ == \"__main__\":\n    main('gift2')\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n-r)\n\ndef p(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n) + 1 / nCr(n,n)\n\ndef main(pname):\n    sys.stdin = open(pname + '.in', 'r')\n    sys.stdout = open(pname + '.out', 'w')\n\n    n = int(input())\n    print(p(n))\n\nif __name__ == \"__main__\":\n    main('gift2')\n"
    }
  ],
  "created": 1649733204,
  "object": "edit"
}
2022-04-11 23:13:27.381917 fix syntax errors 2 ['\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n-r)\n\ndef p(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n)\n\ndef main(pname):\n    sys.stdin = open(pname + \'.in\', \'r\')\n    sys.stdout = open(pname + \'.out\', \'w\')\n\n    n = int(input())\n    print(p(n))\n\nif __name__ == "__main__":\n    main(\'gift2\')\n', '\n\nimport sys\nfrom math import factorial\n\ndef nCr(n,r):\n    return factorial(n) / factorial(r) / factorial(n-r)\n\ndef p(n):\n    return 1 - (nCr(n,1) + nCr(n,2)) / nCr(n,n) + 1 / nCr(n,n)\n\ndef main(pname):\n    sys.stdin = open(pname + \'.in\', \'r\')\n    sys.stdout = open(pname + \'.out\', \'w\')\n\n    n = int(input())\n    print(p(n))\n\nif __name__ == "__main__":\n    main(\'gift2\')\n']
2022-04-11 23:13:27.382000 size on output set 4
2022-04-11 23:13:27.382006 num operations 2
2022-04-11 23:13:27.382009 size on input set 1
2022-04-11 23:13:31.790739 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n) * fact(n)))) # \u0441\u0447\u0438\u0442\u0430\u0435\u043c \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c \u0432\u044b\u043f\u0430\u0434\u0435\u043d\u0438\u044f \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0445 \u0447\u0438\u0441\u0435\u043b\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n) * fact(n)))) # n! / (n-n)! * n!\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649733207,
  "object": "edit"
}
2022-04-11 23:13:31.791074 fix spelling mistakes 2 ['\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n) * fact(n)))) # считаем вероятность выпадения одинаковых чисел\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n) * fact(n)))) # n! / (n-n)! * n!\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 23:13:31.791124 size on output set 2
2022-04-11 23:13:31.791134 size on input set 2
2022-04-11 23:13:35.561358 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n) * fact(n))))  # n! / (n-n)! * n!\n\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n) * fact(n))))  # n! / (n-n)! * n!\n\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649733212,
  "object": "edit"
}
2022-04-11 23:13:35.561499 fix syntax errors 2 ['\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n) * fact(n))))  # n! / (n-n)! * n!\n\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n) * fact(n))))  # n! / (n-n)! * n!\n\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 23:13:40.929701 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n) * fact(n))))  # \u0441\u0447\u0438\u0442\u0430\u0435\u043c \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c \u0432\u044b\u043f\u0430\u0434\u0435\u043d\u0438\u044f \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0445 \u0447\u0438\u0441\u0435\u043b\n\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n) * fact(n))))  # \u0441\u0447\u0438\u0442\u0430\u0435\u043c \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c \u0432\u044b\u043f\u0430\u0434\u0435\u043d\u0438\u044f \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0445 \u0447\u0438\u0441\u0435\u043b\n\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649733215,
  "object": "edit"
}
2022-04-11 23:13:40.929817 fix syntax errors 2 ['\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n) * fact(n))))  # считаем вероятность выпадения одинаковых чисел\n\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    print(1 - (fact(n) / (fact(n - n) * fact(n))))  # считаем вероятность выпадения одинаковых чисел\n\n\ndef fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 23:13:40.929853 size on output set 3
2022-04-11 23:13:40.929865 num operations 2
2022-04-11 23:13:40.929870 size on input set 1
2022-04-11 23:13:43.078795 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(P):\n    N = int(P[0])\n    prob = float(factorial(N-1)) / float(N**N)\n    print(prob)\n\nif __name__ == \"__main__\":\n    main(sys.stdin.readlines())\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(P):\n    N = int(P[0])\n    prob = float(factorial(N-1)) / float(N**N)\n    print(prob)\n\nif __name__ == \"__main__\":\n    main(sys.stdin.readlines())\n"
    }
  ],
  "created": 1649733221,
  "object": "edit"
}
2022-04-11 23:13:43.078990 fix spelling mistakes 2 ['#!/usr/bin/env python3\n\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(P):\n    N = int(P[0])\n    prob = float(factorial(N-1)) / float(N**N)\n    print(prob)\n\nif __name__ == "__main__":\n    main(sys.stdin.readlines())\n', '\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(P):\n    N = int(P[0])\n    prob = float(factorial(N-1)) / float(N**N)\n    print(prob)\n\nif __name__ == "__main__":\n    main(sys.stdin.readlines())\n']
2022-04-11 23:13:43.079015 size on output set 2
2022-04-11 23:13:43.079023 size on input set 2
2022-04-11 23:13:45.871224 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(P):\n    N = int(P[0])\n    prob = float(factorial(N-1)) / float(N**N) * 100\n    print(prob)\n\nif __name__ == \"__main__\":\n    main(sys.stdin.readlines())\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(P):\n    N = int(P[0])\n    prob = float(factorial(N-1)) / float(N ** N)\n    print(prob)\n\nif __name__ == \"__main__\":\n    main(sys.stdin.readlines())\n"
    }
  ],
  "created": 1649733223,
  "object": "edit"
}
2022-04-11 23:13:45.871666 fix syntax errors 2 ['\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(P):\n    N = int(P[0])\n    prob = float(factorial(N-1)) / float(N**N) * 100\n    print(prob)\n\nif __name__ == "__main__":\n    main(sys.stdin.readlines())\n', '\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(P):\n    N = int(P[0])\n    prob = float(factorial(N-1)) / float(N ** N)\n    print(prob)\n\nif __name__ == "__main__":\n    main(sys.stdin.readlines())\n']
2022-04-11 23:13:48.837457 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(P):\n    N = int(P[0])\n    prob = float(factorial(N-1)) / float(N**N) * 100\n    print(prob)\n\nif __name__ == \"__main__\":\n    main(sys.stdin.readlines())\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(P):\n    N = int(P[0])\n    prob = float(factorial(N-1)) / float(N**N) * 100\n    print(prob)\n\nif __name__ == \"__main__\":\n    main(sys.stdin.readlines())\n"
    }
  ],
  "created": 1649733226,
  "object": "edit"
}
2022-04-11 23:13:48.837563 fix syntax errors 2 ['#!/usr/bin/env python3\n\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(P):\n    N = int(P[0])\n    prob = float(factorial(N-1)) / float(N**N) * 100\n    print(prob)\n\nif __name__ == "__main__":\n    main(sys.stdin.readlines())\n', '#!/usr/bin/env python3\n\nimport sys\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef main(P):\n    N = int(P[0])\n    prob = float(factorial(N-1)) / float(N**N) * 100\n    print(prob)\n\nif __name__ == "__main__":\n    main(sys.stdin.readlines())\n']
2022-04-11 23:13:48.837577 size on output set 3
2022-04-11 23:13:48.837583 num operations 2
2022-04-11 23:13:48.837586 size on input set 1
2022-04-11 23:13:51.781538 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k):\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\ndef f(n):\n    return sum(choose(n, i) / n**i for i in range(n))\n\nprint(f(int(stdin.readline())))\n"
    },
    {
      "index": 1,
      "text": "\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k):\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\ndef p(n):\n    return sum(choose(n, i) / n**i for i in range(n))\n\nprint(p(int(stdin.readline())))\n"
    }
  ],
  "created": 1649733229,
  "object": "edit"
}
2022-04-11 23:13:51.781660 fix spelling mistakes 2 ['\n\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k):\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\ndef f(n):\n    return sum(choose(n, i) / n**i for i in range(n))\n\nprint(f(int(stdin.readline())))\n', '\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k):\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\ndef p(n):\n    return sum(choose(n, i) / n**i for i in range(n))\n\nprint(p(int(stdin.readline())))\n']
2022-04-11 23:13:51.781672 size on output set 2
2022-04-11 23:13:51.781676 size on input set 2
2022-04-11 23:13:53.741081 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k):\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\ndef f(n):\n    return sum(choose(n, i) / n**i for i in range(n))\n\nprint(f(int(stdin.readline())))\n"
    },
    {
      "index": 1,
      "text": "\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k):\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\ndef f(n):\n    return sum(choose(n, i) / n**i for i in range(n))\n\nprint(f(int(stdin.readline())))\n"
    }
  ],
  "created": 1649733231,
  "object": "edit"
}
2022-04-11 23:13:53.741181 fix syntax errors 2 ['\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k):\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\ndef f(n):\n    return sum(choose(n, i) / n**i for i in range(n))\n\nprint(f(int(stdin.readline())))\n', '\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k):\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\ndef f(n):\n    return sum(choose(n, i) / n**i for i in range(n))\n\nprint(f(int(stdin.readline())))\n']
2022-04-11 23:13:56.673329 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k):\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\ndef p(n):\n    return sum(choose(n, i) / n**i for i in range(n+1))\n\nprint(p(int(stdin.readline())))\n"
    },
    {
      "index": 1,
      "text": "\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k):\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\ndef p(n):\n    return sum(choose(n, i) / n**i for i in range(n + 1))\n\nprint(p(int(stdin.readline())))\n"
    }
  ],
  "created": 1649733233,
  "object": "edit"
}
2022-04-11 23:13:56.673606 fix syntax errors 2 ['\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k):\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\ndef p(n):\n    return sum(choose(n, i) / n**i for i in range(n+1))\n\nprint(p(int(stdin.readline())))\n', '\nfrom math import factorial\nfrom sys import stdin\n\ndef choose(n, k):\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\ndef p(n):\n    return sum(choose(n, i) / n**i for i in range(n + 1))\n\nprint(p(int(stdin.readline())))\n']
2022-04-11 23:13:56.673631 size on output set 3
2022-04-11 23:13:56.673643 num operations 2
2022-04-11 23:13:56.673648 size on input set 1
2022-04-11 23:13:59.780757 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) / (math.factorial(n - 1) * n))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) / (math.factorial(n-1) * n)) \n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649733236,
  "object": "edit"
}
2022-04-11 23:13:59.780886 fix spelling mistakes 2 ["\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) / (math.factorial(n - 1) * n))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) / (math.factorial(n-1) * n)) \n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 23:13:59.780906 size on output set 2
2022-04-11 23:13:59.780910 size on input set 2
2022-04-11 23:14:02.914003 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) / (math.factorial(n - 1) * n)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) / (math.factorial(n - 1) * n)) \n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649733240,
  "object": "edit"
}
2022-04-11 23:14:02.914198 fix syntax errors 2 ["\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) / (math.factorial(n - 1) * n)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) / (math.factorial(n - 1) * n)) \n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 23:14:06.000443 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) / (math.factorial(n - 1) * n)) \n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) / (math.factorial(n-1) * n))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649733243,
  "object": "edit"
}
2022-04-11 23:14:06.000797 fix syntax errors 2 ["\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) / (math.factorial(n - 1) * n)) \n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(1 - math.factorial(n) / (math.factorial(n-1) * n))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 23:14:06.000837 size on output set 3
2022-04-11 23:14:06.000854 num operations 2
2022-04-11 23:14:06.000860 size on input set 1
2022-04-11 23:14:10.242056 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 8), end = '')\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 4))\n\nmain()\n"
    }
  ],
  "created": 1649733246,
  "object": "edit"
}
2022-04-11 23:14:10.242382 fix spelling mistakes 2 ["\n\nimport sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 8), end = '')\n\nmain()\n", '\n\nimport sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 4))\n\nmain()\n']
2022-04-11 23:14:10.242415 size on output set 2
2022-04-11 23:14:10.242427 size on input set 2
2022-04-11 23:14:12.242000 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 8), end = '')\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 8), end = '')\n\nmain()\n"
    }
  ],
  "created": 1649733250,
  "object": "edit"
}
2022-04-11 23:14:12.242104 fix syntax errors 2 ["\nimport sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 8), end = '')\n\nmain()\n", "\nimport sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 8), end = '')\n\nmain()\n"]
2022-04-11 23:14:14.501265 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 4))\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "import sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 4))\n\nmain()\n"
    }
  ],
  "created": 1649733252,
  "object": "edit"
}
2022-04-11 23:14:14.501436 fix syntax errors 2 ['\nimport sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 4))\n\nmain()\n', 'import sys\nfrom math import factorial\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    print(round(sum([((-1)**(i+1)) * factorial(N) / (factorial(i) * factorial(N-i)) for i in range(1, N+1)]) / N, 4))\n\nmain()\n']
2022-04-11 23:14:14.501453 size on output set 3
