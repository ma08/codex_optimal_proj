2022-04-11 19:10:40.440422 num operations 2
2022-04-11 19:10:40.440441 size on input set 1
2022-04-11 19:10:47.442835 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#-----Solution-----\n\n#The solution is to compute the number of first type turns that can be played,\n#and the number of second type turns that can be played. The maximum will be\n#maximum of the two.\n\n#The number of first type turns that can be played is the maximum n such that\n#k-n*a >= 0\n\n#The number of second type turns that can be played is the maximum n such that\n#k-n*b >= 0\n\n#If the maximum of the two is less than n, then the answer is -1. Otherwise,\n#answer is the maximum of the two.\n\nimport math\n\ndef max_turns(k, n, a, b):\n    max_turns_1 = math.floor(k/a)\n    max_turns_2 = math.floor(k/b)\n    if max(max_turns_1, max_turns_2) < n:\n        return -1\n    return max(max_turns_1, max_turns_2)\n\nq = int(input())\nfor _ in range(q):\n    k, n, a, b = map(int, input().split())\n    print(max_turns(k, n, a, b))\n"
    },
    {
      "index": 1,
      "text": "\n\n#-----Solution-----\n\n#The solution is to compute the number of first type turns that can be played,\n#the number of second type turns that can be played. The maximum will be the\n#maximum of the two.\n\n#The number of first type turns that can be played is the maximum n such that\n#k-n*a >= 0.\n\n#The number of second type turns that can be played is the maximum n such that\n#k-n*b >= 0.\n\n#If the maximum of the two is less than n, then the answer is -1. Otherwise, the\n#answer is the maximum of the two.\n\nimport math\n\ndef max_turns(k, n, a, b):\n    max_turns_1 = math.floor(k/a)\n    max_turns_2 = math.floor(k/b)\n    if max(max_turns_1, max_turns_2) < n:\n        return -1\n    return max(max_turns_1, max_turns_2)\n\nq = int(input())\nfor _ in range(q):\n    k, n, a, b = map(int, input().split())\n    print(max_turns(k, n, a, b))\n"
    }
  ],
  "created": 1649718640,
  "object": "edit"
}
2022-04-11 19:10:47.443053 fix spelling mistakes 2 ['\n\n#-----Solution-----\n\n#The solution is to compute the number of first type turns that can be played,\n#and the number of second type turns that can be played. The maximum will be\n#maximum of the two.\n\n#The number of first type turns that can be played is the maximum n such that\n#k-n*a >= 0\n\n#The number of second type turns that can be played is the maximum n such that\n#k-n*b >= 0\n\n#If the maximum of the two is less than n, then the answer is -1. Otherwise,\n#answer is the maximum of the two.\n\nimport math\n\ndef max_turns(k, n, a, b):\n    max_turns_1 = math.floor(k/a)\n    max_turns_2 = math.floor(k/b)\n    if max(max_turns_1, max_turns_2) < n:\n        return -1\n    return max(max_turns_1, max_turns_2)\n\nq = int(input())\nfor _ in range(q):\n    k, n, a, b = map(int, input().split())\n    print(max_turns(k, n, a, b))\n', '\n\n#-----Solution-----\n\n#The solution is to compute the number of first type turns that can be played,\n#the number of second type turns that can be played. The maximum will be the\n#maximum of the two.\n\n#The number of first type turns that can be played is the maximum n such that\n#k-n*a >= 0.\n\n#The number of second type turns that can be played is the maximum n such that\n#k-n*b >= 0.\n\n#If the maximum of the two is less than n, then the answer is -1. Otherwise, the\n#answer is the maximum of the two.\n\nimport math\n\ndef max_turns(k, n, a, b):\n    max_turns_1 = math.floor(k/a)\n    max_turns_2 = math.floor(k/b)\n    if max(max_turns_1, max_turns_2) < n:\n        return -1\n    return max(max_turns_1, max_turns_2)\n\nq = int(input())\nfor _ in range(q):\n    k, n, a, b = map(int, input().split())\n    print(max_turns(k, n, a, b))\n']
2022-04-11 19:10:47.443099 size on output set 2
2022-04-11 19:10:47.443109 size on input set 2
2022-04-11 19:10:56.046632 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#-----Solution-----#\n\n#The solution is to compute the number of first type turns that can be played,\n#the number of second type turns that can be played. The maximum will be the\n#maximum of the two.\n\n#The number of first type turns that can be played is the maximum n such that\n#k-n*a >= 0.\n\n#The number of second type turns that can be played is the maximum n such that\n#k-n*b >= 0.\n\n#If the maximum of the two is less than n, then the answer is -1. Otherwise, the\n#answer is the maximum of the two.\n\nimport math\n\ndef max_turns(k, n, a, b):\n    max_turns_1 = math.floor(k/a)\n    max_turns_2 = math.floor(k/b)\n    if max(max_turns_1, max_turns_2) < n:\n        return -1\n    return max(max_turns_1, max_turns_2)\n\nq = int(input())\nfor _ in range(q):\n    k, n, a, b = map(int, input().split())\n    print(max_turns(k, n, a, b))\n"
    },
    {
      "index": 1,
      "text": "\n\n# -----Solution-----\n\n# The solution is to compute the number of first type turns that can be played,\n# the number of second type turns that can be played. The maximum will be the\n# maximum of the two.\n\n# The number of first type turns that can be played is the maximum n such that\n# k-n*a >= 0.\n\n# The number of second type turns that can be played is the maximum n such that\n# k-n*b >= 0.\n\n# If the maximum of the two is less than n, then the answer is -1. Otherwise, the\n# answer is the maximum of the two.\n\nimport math\n\n\ndef max_turns(k, n, a, b):\n    max_turns_1 = math.floor(k / a)\n    max_turns_2 = math.floor(k / b)\n    if max(max_turns_1, max_turns_2) < n:\n        return -1\n    return max(max_turns_1, max_turns_2)\n\nq = int(input())\nfor _ in range(q):\n    k, n, a, b = map(int, input().split())\n    print(max_turns(k, n, a, b))\n"
    }
  ],
  "created": 1649718647,
  "object": "edit"
}
2022-04-11 19:10:56.047110 fix syntax errors 2 ['\n\n#-----Solution-----#\n\n#The solution is to compute the number of first type turns that can be played,\n#the number of second type turns that can be played. The maximum will be the\n#maximum of the two.\n\n#The number of first type turns that can be played is the maximum n such that\n#k-n*a >= 0.\n\n#The number of second type turns that can be played is the maximum n such that\n#k-n*b >= 0.\n\n#If the maximum of the two is less than n, then the answer is -1. Otherwise, the\n#answer is the maximum of the two.\n\nimport math\n\ndef max_turns(k, n, a, b):\n    max_turns_1 = math.floor(k/a)\n    max_turns_2 = math.floor(k/b)\n    if max(max_turns_1, max_turns_2) < n:\n        return -1\n    return max(max_turns_1, max_turns_2)\n\nq = int(input())\nfor _ in range(q):\n    k, n, a, b = map(int, input().split())\n    print(max_turns(k, n, a, b))\n', '\n\n# -----Solution-----\n\n# The solution is to compute the number of first type turns that can be played,\n# the number of second type turns that can be played. The maximum will be the\n# maximum of the two.\n\n# The number of first type turns that can be played is the maximum n such that\n# k-n*a >= 0.\n\n# The number of second type turns that can be played is the maximum n such that\n# k-n*b >= 0.\n\n# If the maximum of the two is less than n, then the answer is -1. Otherwise, the\n# answer is the maximum of the two.\n\nimport math\n\n\ndef max_turns(k, n, a, b):\n    max_turns_1 = math.floor(k / a)\n    max_turns_2 = math.floor(k / b)\n    if max(max_turns_1, max_turns_2) < n:\n        return -1\n    return max(max_turns_1, max_turns_2)\n\nq = int(input())\nfor _ in range(q):\n    k, n, a, b = map(int, input().split())\n    print(max_turns(k, n, a, b))\n']
2022-04-11 19:10:59.279283 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#-----Solution-----#\n\n#The solution is to compute the number of first type turns that can be played,\n#and the number of second type turns that can be played. The maximum will be\n#maximum of the two.\n\n#The number of first type turns that can be played is the maximum n such that\n#k-n*a >= 0\n\n#The number of second type turns that can be played is the maximum n such that\n#k-n*b >= 0\n\n#If the maximum of the two is less than n, then the answer is -1. Otherwise,\n#answer is the maximum of the two.\n\nimport math\n\ndef max_turns(k, n, a, b):\n    max_turns_1 = math.floor(k/a)\n    max_turns_2 = math.floor(k/b)\n    if max(max_turns_1, max_turns_2) < n:\n        return -1\n    return max(max_turns_1, max_turns_2)\n\nq = int(input())\nfor _ in range(q):\n    k, n, a, b = map(int, input().split())\n    print(max_turns(k, n, a, b))\n"
    },
    {
      "index": 1,
      "text": "\n\n#-----Solution-----\n\n#The solution is to compute the number of first type turns that can be played,\n#and the number of second type turns that can be played. The maximum will be\n#maximum of the two.\n\n#The number of first type turns that can be played is the maximum n such that\n#k-n*a >= 0.\n\n#The number of second type turns that can be played is the maximum n such that\n#k-n*b >= 0.\n\n#If the maximum of the two is less than n, then the answer is -1. Otherwise,\n#answer is the maximum of the two. \n\nimport math\n\ndef max_turns(k, n, a, b):\n    max_turns_1 = math.floor(k/a)\n    max_turns_2 = math.floor(k/b)\n    if max(max_turns_1, max_turns_2) < n:\n        return -1\n    return max(max_turns_1, max_turns_2)\n\nq = int(input())\nfor _ in range(q):\n    k, n, a, b = map(int, input().split())\n    print(max_turns(k, n, a, b))\n"
    }
  ],
  "created": 1649718656,
  "object": "edit"
}
2022-04-11 19:10:59.279636 fix syntax errors 2 ['\n\n#-----Solution-----#\n\n#The solution is to compute the number of first type turns that can be played,\n#and the number of second type turns that can be played. The maximum will be\n#maximum of the two.\n\n#The number of first type turns that can be played is the maximum n such that\n#k-n*a >= 0\n\n#The number of second type turns that can be played is the maximum n such that\n#k-n*b >= 0\n\n#If the maximum of the two is less than n, then the answer is -1. Otherwise,\n#answer is the maximum of the two.\n\nimport math\n\ndef max_turns(k, n, a, b):\n    max_turns_1 = math.floor(k/a)\n    max_turns_2 = math.floor(k/b)\n    if max(max_turns_1, max_turns_2) < n:\n        return -1\n    return max(max_turns_1, max_turns_2)\n\nq = int(input())\nfor _ in range(q):\n    k, n, a, b = map(int, input().split())\n    print(max_turns(k, n, a, b))\n', '\n\n#-----Solution-----\n\n#The solution is to compute the number of first type turns that can be played,\n#and the number of second type turns that can be played. The maximum will be\n#maximum of the two.\n\n#The number of first type turns that can be played is the maximum n such that\n#k-n*a >= 0.\n\n#The number of second type turns that can be played is the maximum n such that\n#k-n*b >= 0.\n\n#If the maximum of the two is less than n, then the answer is -1. Otherwise,\n#answer is the maximum of the two. \n\nimport math\n\ndef max_turns(k, n, a, b):\n    max_turns_1 = math.floor(k/a)\n    max_turns_2 = math.floor(k/b)\n    if max(max_turns_1, max_turns_2) < n:\n        return -1\n    return max(max_turns_1, max_turns_2)\n\nq = int(input())\nfor _ in range(q):\n    k, n, a, b = map(int, input().split())\n    print(max_turns(k, n, a, b))\n']
2022-04-11 19:10:59.279683 size on output set 4
2022-04-11 19:10:59.279699 num operations 2
2022-04-11 19:10:59.279708 size on input set 1
2022-04-11 19:11:02.907842 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    q = int(sys.stdin.readline())\n    for _ in range(q):\n        k, n, a, b = map(int, sys.stdin.readline().split())\n        if a <= b:\n            print(-1)\n            continue\n        if k <= a:\n            print(0)\n            continue\n        if k > a + b:\n            print(n)\n            continue\n        ans = 0\n        while k > a + b:\n            k -= a\n            ans += 1\n        if k <= a:\n            print(ans)\n        else:\n            print(ans + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    q = int(sys.stdin.readline())\n    for _ in range(q):\n        k, n, a, b = map(int, sys.stdin.readline().split())\n        if a <= b:\n            print(-1)\n            continue\n        if k < a:\n            print(0)\n            continue\n        if k <= a + b:\n            print(n)\n            continue\n        ans = 0\n        while k > a + b:\n            k -= a\n            ans += 1\n        if k < a:\n            print(ans)\n        else:\n            print(ans + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649718659,
  "object": "edit"
}
2022-04-11 19:11:02.908051 fix spelling mistakes 2 ['\n\nimport sys\n\ndef main():\n    q = int(sys.stdin.readline())\n    for _ in range(q):\n        k, n, a, b = map(int, sys.stdin.readline().split())\n        if a <= b:\n            print(-1)\n            continue\n        if k <= a:\n            print(0)\n            continue\n        if k > a + b:\n            print(n)\n            continue\n        ans = 0\n        while k > a + b:\n            k -= a\n            ans += 1\n        if k <= a:\n            print(ans)\n        else:\n            print(ans + 1)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    q = int(sys.stdin.readline())\n    for _ in range(q):\n        k, n, a, b = map(int, sys.stdin.readline().split())\n        if a <= b:\n            print(-1)\n            continue\n        if k < a:\n            print(0)\n            continue\n        if k <= a + b:\n            print(n)\n            continue\n        ans = 0\n        while k > a + b:\n            k -= a\n            ans += 1\n        if k < a:\n            print(ans)\n        else:\n            print(ans + 1)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 19:11:02.908095 size on output set 2
2022-04-11 19:11:02.908102 size on input set 2
2022-04-11 19:11:06.321679 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    q = int(sys.stdin.readline())\n    for _ in range(q):\n        k, n, a, b = map(int, sys.stdin.readline().split())\n        if a <= b:\n            print(-1)\n            continue\n        if k <= a:\n            print(0)\n            continue\n        if k < a + b:\n            print(n)\n            continue\n        ans = 0\n        while k >= a + b:\n            k -= a\n            ans += 1\n        if k <= a:\n            print(ans)\n        else:\n            print(ans + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    q = int(sys.stdin.readline())\n    for _ in range(q):\n        k, n, a, b = map(int, sys.stdin.readline().split())\n        if a <= b:\n            print(-1)\n            continue\n        if k < a:\n            print(0)\n            continue\n        if k <= a + b:\n            print(n)\n            continue\n        ans = 0\n        while k > a + b:\n            k -= a\n            ans += 1\n        if k < a:\n            print(ans)\n        else:\n            print(ans + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649718663,
  "object": "edit"
}
2022-04-11 19:11:06.321852 fix syntax errors 2 ['\n\nimport sys\n\ndef main():\n    q = int(sys.stdin.readline())\n    for _ in range(q):\n        k, n, a, b = map(int, sys.stdin.readline().split())\n        if a <= b:\n            print(-1)\n            continue\n        if k <= a:\n            print(0)\n            continue\n        if k < a + b:\n            print(n)\n            continue\n        ans = 0\n        while k >= a + b:\n            k -= a\n            ans += 1\n        if k <= a:\n            print(ans)\n        else:\n            print(ans + 1)\n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    q = int(sys.stdin.readline())\n    for _ in range(q):\n        k, n, a, b = map(int, sys.stdin.readline().split())\n        if a <= b:\n            print(-1)\n            continue\n        if k < a:\n            print(0)\n            continue\n        if k <= a + b:\n            print(n)\n            continue\n        ans = 0\n        while k > a + b:\n            k -= a\n            ans += 1\n        if k < a:\n            print(ans)\n        else:\n            print(ans + 1)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 19:11:10.331206 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    q = int(sys.stdin.readline())\n    for _ in range(q):\n        k, n, a, b = map(int, sys.stdin.readline().split())\n        if a <= b:\n            print(-1)\n            continue\n        if k <= a:\n            print(0)\n            continue\n        if k > a + b:\n            print(n)\n            continue\n        ans = 0\n        while k > a + b:\n            k -= a\n            ans += 1\n        if k <= a:\n            print(ans)\n        else:\n            print(ans + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    q = int(sys.stdin.readline())\n    for _ in range(q):\n        k, n, a, b = map(int, sys.stdin.readline().split())\n        if a <= b:\n            print(-1, end='\\n')\n            continue\n        if k <= a:\n            print(0, end='\\n')\n            continue\n        if k > a + b:\n            print(n, end='\\n')\n            continue\n        ans = 0\n        while k > a + b:\n            k -= a\n            ans += 1\n        if k <= a:\n            print(ans, end='\\n')\n        else:\n            print(ans + 1, end='\\n')\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649718666,
  "object": "edit"
}
2022-04-11 19:11:10.331481 fix syntax errors 2 ['#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    q = int(sys.stdin.readline())\n    for _ in range(q):\n        k, n, a, b = map(int, sys.stdin.readline().split())\n        if a <= b:\n            print(-1)\n            continue\n        if k <= a:\n            print(0)\n            continue\n        if k > a + b:\n            print(n)\n            continue\n        ans = 0\n        while k > a + b:\n            k -= a\n            ans += 1\n        if k <= a:\n            print(ans)\n        else:\n            print(ans + 1)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    q = int(sys.stdin.readline())\n    for _ in range(q):\n        k, n, a, b = map(int, sys.stdin.readline().split())\n        if a <= b:\n            print(-1, end=\'\\n\')\n            continue\n        if k <= a:\n            print(0, end=\'\\n\')\n            continue\n        if k > a + b:\n            print(n, end=\'\\n\')\n            continue\n        ans = 0\n        while k > a + b:\n            k -= a\n            ans += 1\n        if k <= a:\n            print(ans, end=\'\\n\')\n        else:\n            print(ans + 1, end=\'\\n\')\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 19:11:10.331536 size on output set 4
