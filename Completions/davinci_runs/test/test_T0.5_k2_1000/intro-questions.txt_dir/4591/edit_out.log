2022-04-11 21:16:58.299681 num operations 2
2022-04-11 21:16:58.299742 size on input set 1
2022-04-11 21:17:05.895132 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    # Read input\n    A, B, C, X, Y = [int(x) for x in sys.stdin.readline().split()]\n\n    # Calculate minimum cost\n    cost = 0\n\n    if A + B > 2 * C:\n        # It is cheaper to buy two AB-pizzas and rearrange them into one A-pizza and one B-pizza than to buy two A-pizzas and two B-pizzas\n        if X > Y:\n            # Buy AB-pizzas until X - Y = 0\n            cost += 2 * C * Y\n            X -= Y\n            Y = 0\n        else:\n            # Buy AB-pizzas until Y - X = 0\n            cost += 2 * C * X\n            Y -= X\n            X = 0\n\n    # Buy remaining A-pizzas and B-pizzas\n    cost += A * X\n    cost += B * Y\n\n    print(cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    # Read input\n    A, B, C, X, Y = [int(x) for x in sys.stdin.readline().split()]\n\n    # Calculate minimum cost\n    cost = 0\n\n    if A + B > 2 * C:\n        # It is cheaper to buy two AB-pizzas and rearrange them into one A-pizza and one B-pizza.\n        if X > Y:\n            # Buy AB-pizzas until X - Y = 0\n            cost += 2 * C * Y\n            X -= Y\n            Y = 0\n        else:\n            # Buy AB-pizzas until Y - X = 0\n            cost += 2 * C * X\n            Y -= X\n            X = 0\n\n    # Buy remaining A-pizzas and B-pizzas\n    cost += A * X\n    cost += B * Y\n\n    print(cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649726218,
  "object": "edit"
}
2022-04-11 21:17:05.895497 fix spelling mistakes 2 ['\n\nimport sys\n\ndef main():\n    # Read input\n    A, B, C, X, Y = [int(x) for x in sys.stdin.readline().split()]\n\n    # Calculate minimum cost\n    cost = 0\n\n    if A + B > 2 * C:\n        # It is cheaper to buy two AB-pizzas and rearrange them into one A-pizza and one B-pizza than to buy two A-pizzas and two B-pizzas\n        if X > Y:\n            # Buy AB-pizzas until X - Y = 0\n            cost += 2 * C * Y\n            X -= Y\n            Y = 0\n        else:\n            # Buy AB-pizzas until Y - X = 0\n            cost += 2 * C * X\n            Y -= X\n            X = 0\n\n    # Buy remaining A-pizzas and B-pizzas\n    cost += A * X\n    cost += B * Y\n\n    print(cost)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    # Read input\n    A, B, C, X, Y = [int(x) for x in sys.stdin.readline().split()]\n\n    # Calculate minimum cost\n    cost = 0\n\n    if A + B > 2 * C:\n        # It is cheaper to buy two AB-pizzas and rearrange them into one A-pizza and one B-pizza.\n        if X > Y:\n            # Buy AB-pizzas until X - Y = 0\n            cost += 2 * C * Y\n            X -= Y\n            Y = 0\n        else:\n            # Buy AB-pizzas until Y - X = 0\n            cost += 2 * C * X\n            Y -= X\n            X = 0\n\n    # Buy remaining A-pizzas and B-pizzas\n    cost += A * X\n    cost += B * Y\n\n    print(cost)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 21:17:05.895557 size on output set 2
2022-04-11 21:17:05.895566 size on input set 2
2022-04-11 21:17:19.524176 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\ndef main():\n    # Read input\n    A, B, C, X, Y = [int(x) for x in sys.stdin.readline().split()]\n    # Calculate minimum cost\n    cost = 0\n    if A + B > 2 * C:\n        # It is cheaper to buy two AB-pizzas and rearrange them into one A-pizza and one B-pizza than to buy two A-pizzas and two B-pizzas\n        if X > Y:\n            # Buy AB-pizzas until X - Y = 0\n            cost += 2 * C * Y\n            X -= Y\n            Y = 0\n        else:\n            # Buy AB-pizzas until Y - X = 0\n            cost += 2 * C * X\n            Y -= X\n            X = 0\n    # Buy remaining A-pizzas and B-pizzas\n    cost += A * X\n    cost += B * Y\n    print(cost)\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n\t# Read input\n\tA, B, C, X, Y = [int(x) for x in sys.stdin.readline().split()]\n\n\t# Calculate minimum cost\n\tcost = 0\n\n\tif A + B > 2 * C:\n\t\t# It is cheaper to buy two AB-pizzas and rearrange them into one A-pizza and one B-pizza than to buy two A-pizzas and two B-pizzas\n\t\tif X > Y:\n\t\t\t# Buy AB-pizzas until X - Y = 0\n\t\t\tcost += 2 * C * Y\n\t\t\tX -= Y\n\t\t\tY = 0\n\t\telse:\n\t\t\t# Buy AB-pizzas until Y - X = 0\n\t\t\tcost += 2 * C * X\n\t\t\tY -= X\n\t\t\tX = 0\n\n\t# Buy remaining A-pizzas and B-pizzas\n\tcost += A * X\n\tcost += B * Y\n\n\tprint(cost)\n\nif __name__ == \"__main__\":\n\tmain()\n"
    }
  ],
  "created": 1649726226,
  "object": "edit"
}
2022-04-11 21:17:19.524357 fix syntax errors 2 ['\nimport sys\ndef main():\n    # Read input\n    A, B, C, X, Y = [int(x) for x in sys.stdin.readline().split()]\n    # Calculate minimum cost\n    cost = 0\n    if A + B > 2 * C:\n        # It is cheaper to buy two AB-pizzas and rearrange them into one A-pizza and one B-pizza than to buy two A-pizzas and two B-pizzas\n        if X > Y:\n            # Buy AB-pizzas until X - Y = 0\n            cost += 2 * C * Y\n            X -= Y\n            Y = 0\n        else:\n            # Buy AB-pizzas until Y - X = 0\n            cost += 2 * C * X\n            Y -= X\n            X = 0\n    # Buy remaining A-pizzas and B-pizzas\n    cost += A * X\n    cost += B * Y\n    print(cost)\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n\t# Read input\n\tA, B, C, X, Y = [int(x) for x in sys.stdin.readline().split()]\n\n\t# Calculate minimum cost\n\tcost = 0\n\n\tif A + B > 2 * C:\n\t\t# It is cheaper to buy two AB-pizzas and rearrange them into one A-pizza and one B-pizza than to buy two A-pizzas and two B-pizzas\n\t\tif X > Y:\n\t\t\t# Buy AB-pizzas until X - Y = 0\n\t\t\tcost += 2 * C * Y\n\t\t\tX -= Y\n\t\t\tY = 0\n\t\telse:\n\t\t\t# Buy AB-pizzas until Y - X = 0\n\t\t\tcost += 2 * C * X\n\t\t\tY -= X\n\t\t\tX = 0\n\n\t# Buy remaining A-pizzas and B-pizzas\n\tcost += A * X\n\tcost += B * Y\n\n\tprint(cost)\n\nif __name__ == "__main__":\n\tmain()\n']
2022-04-11 21:17:30.997444 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    # Read input\n    A, B, C, X, Y = [int(x) for x in sys.stdin.readline().split()] \n\n    # Calculate minimum cost\n    cost = 0\n\n    if A + B > 2 * C:\n        # It is cheaper to buy two AB-pizzas and rearrange them into one A-pizza and one B-pizza.\n        if X > Y:\n            # Buy AB-pizzas until X - Y = 0\n            cost += 2 * C * Y\n            X -= Y\n            Y = 0\n        else:\n            # Buy AB-pizzas until Y - X = 0\n            cost += 2 * C * X\n            Y -= X\n            X = 0\n\n    # Buy remaining A-pizzas and B-pizzas\n    cost += A * X\n    cost += B * Y\n\n    print(cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    # Read input \n    A, B, C, X, Y = [int(x) for x in sys.stdin.readline().split()] \n\n    # Calculate minimum cost \n    cost = 0 \n\n    if A + B > 2 * C:\n        # It is cheaper to buy two AB-pizzas and rearrange them into one A-pizza and one B-pizza. \n        if X > Y: \n            # Buy AB-pizzas until X - Y = 0 \n            cost += 2 * C * Y \n            X -= Y \n            Y = 0 \n        else: \n            # Buy AB-pizzas until Y - X = 0 \n            cost += 2 * C * X \n            Y -= X \n            X = 0 \n\n    # Buy remaining A-pizzas and B-pizzas \n    cost += A * X \n    cost += B * Y \n\n    print(cost) \n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649726239,
  "object": "edit"
}
2022-04-11 21:17:30.997718 fix syntax errors 2 ['\n\nimport sys\n\ndef main():\n    # Read input\n    A, B, C, X, Y = [int(x) for x in sys.stdin.readline().split()] \n\n    # Calculate minimum cost\n    cost = 0\n\n    if A + B > 2 * C:\n        # It is cheaper to buy two AB-pizzas and rearrange them into one A-pizza and one B-pizza.\n        if X > Y:\n            # Buy AB-pizzas until X - Y = 0\n            cost += 2 * C * Y\n            X -= Y\n            Y = 0\n        else:\n            # Buy AB-pizzas until Y - X = 0\n            cost += 2 * C * X\n            Y -= X\n            X = 0\n\n    # Buy remaining A-pizzas and B-pizzas\n    cost += A * X\n    cost += B * Y\n\n    print(cost)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    # Read input \n    A, B, C, X, Y = [int(x) for x in sys.stdin.readline().split()] \n\n    # Calculate minimum cost \n    cost = 0 \n\n    if A + B > 2 * C:\n        # It is cheaper to buy two AB-pizzas and rearrange them into one A-pizza and one B-pizza. \n        if X > Y: \n            # Buy AB-pizzas until X - Y = 0 \n            cost += 2 * C * Y \n            X -= Y \n            Y = 0 \n        else: \n            # Buy AB-pizzas until Y - X = 0 \n            cost += 2 * C * X \n            Y -= X \n            X = 0 \n\n    # Buy remaining A-pizzas and B-pizzas \n    cost += A * X \n    cost += B * Y \n\n    print(cost) \n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 21:17:30.997916 size on output set 4
2022-04-11 21:17:30.997930 num operations 2
2022-04-11 21:17:30.997935 size on input set 1
2022-04-11 21:17:42.085428 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef pizza_at(a, b, c, x, y):\n    # If A is cheaper than B, buy as many A pizzas as possible\n    if a <= b:\n        # If there are still more A pizzas needed, buy AC pizzas\n        if x > (x + y) / 2:\n            # If AC is cheaper than A, buy AC pizzas\n            if a < c:\n                return a * (x + y) + (x - (x + y) / 2) * a\n            # If AC is more expensive than A, buy A pizzas\n            else:\n                return c * (x + y)\n        # If there are no more A pizzas needed, buy B pizzas\n        else:\n            return b * y + a * x\n\n    # If B is cheaper than A, buy as many B pizzas as possible\n    else:\n        # If there are still more B pizzas needed, buy BC pizzas\n        if y > (x + y) / 2:\n            # If BC is cheaper than B, buy BC pizzas\n            if b < c:\n                return b * (x + y) + (y - (x + y) / 2) * b\n            # If AB is more expensive than B, buy B pizzas\n            else:\n                return c * (x + y)\n        # If there are no more B pizzas needed, buy A pizzas\n        else:\n            return a * x + b * y\n\na, b, c, x, y = map(int, input().split())\nprint(pizza_at(a, b, c, x, y))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef pizza_at(a, b, c, x, y):\n    # If A is cheaper than B, buy as many A pizzas as possible.\n    if a <= b:\n        # If there are still more A pizzas needed, buy AB pizzas.\n        if x > (x + y) / 2:\n            # If AB is cheaper than A, buy AB pizzas.\n            if a < c:\n                return a * (x + y) + (x - (x + y) / 2) * a\n            # If AB is more expensive than A, buy A pizzas.\n            else:\n                return c * (x + y)\n        # If there are no more A pizzas needed, buy B pizzas.\n        else:\n            return b * y + a * x\n\n    # If B is cheaper than A, buy as many B pizzas as possible.\n    else:\n        # If there are still more B pizzas needed, buy AB pizzas.\n        if y > (x + y) / 2:\n            # If AB is cheaper than B, buy AB pizzas.\n            if b < c:\n                return b * (x + y) + (y - (x + y) / 2) * b\n            # If AB is more expensive than B, buy B pizzas.\n            else:\n                return c * (x + y)\n        # If there are no more B pizzas needed, buy A pizzas.\n        else:\n            return a * x + b * y\n\na, b, c, x, y = map(int, input().split())\nprint(pizza_at(a, b, c, x, y))\n"
    }
  ],
  "created": 1649726251,
  "object": "edit"
}
2022-04-11 21:17:42.085722 fix spelling mistakes 2 ['\n\ndef pizza_at(a, b, c, x, y):\n    # If A is cheaper than B, buy as many A pizzas as possible\n    if a <= b:\n        # If there are still more A pizzas needed, buy AC pizzas\n        if x > (x + y) / 2:\n            # If AC is cheaper than A, buy AC pizzas\n            if a < c:\n                return a * (x + y) + (x - (x + y) / 2) * a\n            # If AC is more expensive than A, buy A pizzas\n            else:\n                return c * (x + y)\n        # If there are no more A pizzas needed, buy B pizzas\n        else:\n            return b * y + a * x\n\n    # If B is cheaper than A, buy as many B pizzas as possible\n    else:\n        # If there are still more B pizzas needed, buy BC pizzas\n        if y > (x + y) / 2:\n            # If BC is cheaper than B, buy BC pizzas\n            if b < c:\n                return b * (x + y) + (y - (x + y) / 2) * b\n            # If AB is more expensive than B, buy B pizzas\n            else:\n                return c * (x + y)\n        # If there are no more B pizzas needed, buy A pizzas\n        else:\n            return a * x + b * y\n\na, b, c, x, y = map(int, input().split())\nprint(pizza_at(a, b, c, x, y))\n', '\n\ndef pizza_at(a, b, c, x, y):\n    # If A is cheaper than B, buy as many A pizzas as possible.\n    if a <= b:\n        # If there are still more A pizzas needed, buy AB pizzas.\n        if x > (x + y) / 2:\n            # If AB is cheaper than A, buy AB pizzas.\n            if a < c:\n                return a * (x + y) + (x - (x + y) / 2) * a\n            # If AB is more expensive than A, buy A pizzas.\n            else:\n                return c * (x + y)\n        # If there are no more A pizzas needed, buy B pizzas.\n        else:\n            return b * y + a * x\n\n    # If B is cheaper than A, buy as many B pizzas as possible.\n    else:\n        # If there are still more B pizzas needed, buy AB pizzas.\n        if y > (x + y) / 2:\n            # If AB is cheaper than B, buy AB pizzas.\n            if b < c:\n                return b * (x + y) + (y - (x + y) / 2) * b\n            # If AB is more expensive than B, buy B pizzas.\n            else:\n                return c * (x + y)\n        # If there are no more B pizzas needed, buy A pizzas.\n        else:\n            return a * x + b * y\n\na, b, c, x, y = map(int, input().split())\nprint(pizza_at(a, b, c, x, y))\n']
2022-04-11 21:17:42.085790 size on output set 2
2022-04-11 21:17:42.085807 size on input set 2
2022-04-11 21:17:53.377029 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef pizza_at(a, b, c, x, y):\n    # If A is cheaper than B, buy as many A pizzas as possible\n    if a <= b:\n        # If there are still more A pizzas needed, buy AB pizzas.\n        if x > (x + y) / 2:\n            # If AB is cheaper than A, buy AB pizzas.\n            if a < c:\n                return a * (x + y) + (x - (x + y) / 2) * a\n            # If AB is more expensive than A, buy A pizzas.\n            else:\n                return c * (x + y)\n        # If there are no more A pizzas needed, buy B pizzas.\n        else:\n            return b * y + a * x\n\n    # If B is cheaper than A, buy as many B pizzas as possible.\n    else:\n        # If there are still more B pizzas needed, buy AB pizzas.\n        if y > (x + y) / 2:\n            # If AB is cheaper than B, buy AB pizzas.\n            if b < c:\n                return b * (x + y) + (y - (x + y) / 2) * b\n            # If AB is more expensive than B, buy B pizzas.\n            else:\n                return c * (x + y)\n        # If there are no more B pizzas needed, buy A pizzas.\n        else:\n            return a * x + b * y\n\na, b, c, x, y = map(int, input().split())\nprint(pizza_at(a, b, c, x, y))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef pizza_at(a, b, c, x, y):\n    # If A is cheaper than B, buy as many A pizzas as possible\n    if a <= b:\n        # If there are still more A pizzas needed, buy AB pizzas.\n        if x > (x + y) / 2:\n            # If AB is cheaper than A, buy AB pizzas.\n            if a < c:\n                return a * (x + y) + (x - (x + y) / 2) * a\n            # If AB is more expensive than A, buy A pizzas.\n            else:\n                return c * (x + y)\n        # If there are no more A pizzas needed, buy B pizzas.\n        else:\n            return b * y + a * x\n\n    # If B is cheaper than A, buy as many B pizzas as possible.\n    else:\n        # If there are still more B pizzas needed, buy AB pizzas.\n        if y > (x + y) / 2:\n            # If AB is cheaper than B, buy AB pizzas.\n            if b < c:\n                return b * (x + y) + (y - (x + y) / 2) * b\n            # If AB is more expensive than B, buy B pizzas.\n            else:\n                return c * (x + y)\n        # If there are no more B pizzas needed, buy A pizzas.\n        else:\n            return a * x + b * y\n\na, b, c, x, y = map(int, input().split())\nprint(pizza_at(a, b, c, x, y))\n"
    }
  ],
  "created": 1649726262,
  "object": "edit"
}
2022-04-11 21:17:53.377608 fix syntax errors 2 ['\n\ndef pizza_at(a, b, c, x, y):\n    # If A is cheaper than B, buy as many A pizzas as possible\n    if a <= b:\n        # If there are still more A pizzas needed, buy AB pizzas.\n        if x > (x + y) / 2:\n            # If AB is cheaper than A, buy AB pizzas.\n            if a < c:\n                return a * (x + y) + (x - (x + y) / 2) * a\n            # If AB is more expensive than A, buy A pizzas.\n            else:\n                return c * (x + y)\n        # If there are no more A pizzas needed, buy B pizzas.\n        else:\n            return b * y + a * x\n\n    # If B is cheaper than A, buy as many B pizzas as possible.\n    else:\n        # If there are still more B pizzas needed, buy AB pizzas.\n        if y > (x + y) / 2:\n            # If AB is cheaper than B, buy AB pizzas.\n            if b < c:\n                return b * (x + y) + (y - (x + y) / 2) * b\n            # If AB is more expensive than B, buy B pizzas.\n            else:\n                return c * (x + y)\n        # If there are no more B pizzas needed, buy A pizzas.\n        else:\n            return a * x + b * y\n\na, b, c, x, y = map(int, input().split())\nprint(pizza_at(a, b, c, x, y))\n', '\n\ndef pizza_at(a, b, c, x, y):\n    # If A is cheaper than B, buy as many A pizzas as possible\n    if a <= b:\n        # If there are still more A pizzas needed, buy AB pizzas.\n        if x > (x + y) / 2:\n            # If AB is cheaper than A, buy AB pizzas.\n            if a < c:\n                return a * (x + y) + (x - (x + y) / 2) * a\n            # If AB is more expensive than A, buy A pizzas.\n            else:\n                return c * (x + y)\n        # If there are no more A pizzas needed, buy B pizzas.\n        else:\n            return b * y + a * x\n\n    # If B is cheaper than A, buy as many B pizzas as possible.\n    else:\n        # If there are still more B pizzas needed, buy AB pizzas.\n        if y > (x + y) / 2:\n            # If AB is cheaper than B, buy AB pizzas.\n            if b < c:\n                return b * (x + y) + (y - (x + y) / 2) * b\n            # If AB is more expensive than B, buy B pizzas.\n            else:\n                return c * (x + y)\n        # If there are no more B pizzas needed, buy A pizzas.\n        else:\n            return a * x + b * y\n\na, b, c, x, y = map(int, input().split())\nprint(pizza_at(a, b, c, x, y))\n']
2022-04-11 21:18:04.269146 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef pizza_at(a, b, c, x, y):\n    # If A is cheaper than B, buy as many A pizzas as possible\n    if a <= b:\n        # If there are still more A pizzas needed, buy AC pizzas\n        if x > (x + y) / 2:\n            # If AC is cheaper than A, buy AC pizzas\n            if a < c:\n                return a * (x + y) + (x - (x + y) // 2) * a\n            # If AC is more expensive than A, buy A pizzas\n            else:\n                return c * (x + y)\n        # If there are no more A pizzas needed, buy B pizzas\n        else:\n            return b * y + a * x\n\n    # If B is cheaper than A, buy as many B pizzas as possible\n    else:\n        # If there are still more B pizzas needed, buy BC pizzas\n        if y > (x + y) / 2:\n            # If BC is cheaper than B, buy BC pizzas\n            if b < c:\n                return b * (x + y) + (y - (x + y) // 2) * b\n            # If AB is more expensive than B, buy B pizzas\n            else:\n                return c * (x + y)\n        # If there are no more B pizzas needed, buy A pizzas\n        else:\n            return a * x + b * y\n\na, b, c, x, y = map(int, input().split())\nprint(pizza_at(a, b, c, x, y))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef pizza_at(a, b, c, x, y):\n    # If A is cheaper than B, buy as many A pizzas as possible.\n    if a <= b:\n        # If there are still more A pizzas needed, buy AC pizzas.\n        if x > (x + y) / 2:\n            # If AC is cheaper than A, buy AC pizzas.\n            if a < c:\n                return a * (x + y) + (x - (x + y) / 2) * a\n            # If AC is more expensive than A, buy A pizzas.\n            else:\n                return c * (x + y)\n        # If there are no more A pizzas needed, buy B pizzas.\n        else:\n            return b * y + a * x\n\n    # If B is cheaper than A, buy as many B pizzas as possible.\n    else:\n        # If there are still more B pizzas needed, buy BC pizzas.\n        if y > (x + y) / 2:\n            # If BC is cheaper than B, buy BC pizzas.\n            if b < c:\n                return b * (x + y) + (y - (x + y) / 2) * b\n            # If AB is more expensive than B, buy B pizzas.\n            else:\n                return c * (x + y)\n        # If there are no more B pizzas needed, buy A pizzas.\n        else:\n            return a * x + b * y\n\na, b, c, x, y = map(int, input().split())\nprint(pizza_at(a, b, c, x, y))\n"
    }
  ],
  "created": 1649726273,
  "object": "edit"
}
2022-04-11 21:18:04.269465 fix syntax errors 2 ['\n\ndef pizza_at(a, b, c, x, y):\n    # If A is cheaper than B, buy as many A pizzas as possible\n    if a <= b:\n        # If there are still more A pizzas needed, buy AC pizzas\n        if x > (x + y) / 2:\n            # If AC is cheaper than A, buy AC pizzas\n            if a < c:\n                return a * (x + y) + (x - (x + y) // 2) * a\n            # If AC is more expensive than A, buy A pizzas\n            else:\n                return c * (x + y)\n        # If there are no more A pizzas needed, buy B pizzas\n        else:\n            return b * y + a * x\n\n    # If B is cheaper than A, buy as many B pizzas as possible\n    else:\n        # If there are still more B pizzas needed, buy BC pizzas\n        if y > (x + y) / 2:\n            # If BC is cheaper than B, buy BC pizzas\n            if b < c:\n                return b * (x + y) + (y - (x + y) // 2) * b\n            # If AB is more expensive than B, buy B pizzas\n            else:\n                return c * (x + y)\n        # If there are no more B pizzas needed, buy A pizzas\n        else:\n            return a * x + b * y\n\na, b, c, x, y = map(int, input().split())\nprint(pizza_at(a, b, c, x, y))\n', '\n\ndef pizza_at(a, b, c, x, y):\n    # If A is cheaper than B, buy as many A pizzas as possible.\n    if a <= b:\n        # If there are still more A pizzas needed, buy AC pizzas.\n        if x > (x + y) / 2:\n            # If AC is cheaper than A, buy AC pizzas.\n            if a < c:\n                return a * (x + y) + (x - (x + y) / 2) * a\n            # If AC is more expensive than A, buy A pizzas.\n            else:\n                return c * (x + y)\n        # If there are no more A pizzas needed, buy B pizzas.\n        else:\n            return b * y + a * x\n\n    # If B is cheaper than A, buy as many B pizzas as possible.\n    else:\n        # If there are still more B pizzas needed, buy BC pizzas.\n        if y > (x + y) / 2:\n            # If BC is cheaper than B, buy BC pizzas.\n            if b < c:\n                return b * (x + y) + (y - (x + y) / 2) * b\n            # If AB is more expensive than B, buy B pizzas.\n            else:\n                return c * (x + y)\n        # If there are no more B pizzas needed, buy A pizzas.\n        else:\n            return a * x + b * y\n\na, b, c, x, y = map(int, input().split())\nprint(pizza_at(a, b, c, x, y))\n']
2022-04-11 21:18:04.269620 size on output set 3
