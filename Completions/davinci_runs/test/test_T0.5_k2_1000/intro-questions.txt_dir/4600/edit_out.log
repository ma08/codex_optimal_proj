2022-04-11 21:20:10.756196 num operations 2
2022-04-11 21:20:10.756234 size on input set 1
2022-04-11 21:20:17.704754 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    ac_counts = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if ac_counts[p[i]] == 0:\n                ac_counts[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom collections import defaultdict\n\ndef main(N, M, P, S):\n    acs = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[P[i]] == 0:\n                acs[P[i]] = 1\n        else:\n            penalties[P[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    P = [0]*M\n    S = [0]*M\n    for i in range(M):\n        P[i], S[i] = input().split()\n    main(N, M, P, S)\n"
    }
  ],
  "created": 1649726411,
  "object": "edit"
}
2022-04-11 21:20:17.705105 fix spelling mistakes 2 ["\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    ac_counts = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if ac_counts[p[i]] == 0:\n                ac_counts[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n", "\n\nfrom collections import defaultdict\n\ndef main(N, M, P, S):\n    acs = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[P[i]] == 0:\n                acs[P[i]] = 1\n        else:\n            penalties[P[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    P = [0]*M\n    S = [0]*M\n    for i in range(M):\n        P[i], S[i] = input().split()\n    main(N, M, P, S)\n"]
2022-04-11 21:20:17.705137 size on output set 2
2022-04-11 21:20:17.705144 size on input set 2
2022-04-11 21:20:26.427286 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom collections import defaultdict\n\ndef main(N, M, P, S):\n    acs = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[P[i]] == 0:\n                acs[P[i]] = 1\n        else:\n            penalties[P[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    P = [0]*M\n    S = [0]*M\n    for i in range(M):\n        P[i], S[i] = input().split()\n    main(N, M, P, S)\n"
    },
    {
      "index": 1,
      "text": "\nfrom collections import defaultdict\n\ndef main(N, M, P, S, T):\n    acs = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == T[i]:\n            if acs[i] == 0:\n                acs[i] = 1\n        else:\n            penalties[P[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    P = [0]*M\n    S = [0]*M\n    for i in range(M):\n        P[i], S[i] = input().split()\n    main(N, M, P, S)\n"
    }
  ],
  "created": 1649726417,
  "object": "edit"
}
2022-04-11 21:20:26.427683 fix syntax errors 2 ["\nfrom collections import defaultdict\n\ndef main(N, M, P, S):\n    acs = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[P[i]] == 0:\n                acs[P[i]] = 1\n        else:\n            penalties[P[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    P = [0]*M\n    S = [0]*M\n    for i in range(M):\n        P[i], S[i] = input().split()\n    main(N, M, P, S)\n", "\nfrom collections import defaultdict\n\ndef main(N, M, P, S, T):\n    acs = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == T[i]:\n            if acs[i] == 0:\n                acs[i] = 1\n        else:\n            penalties[P[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    P = [0]*M\n    S = [0]*M\n    for i in range(M):\n        P[i], S[i] = input().split()\n    main(N, M, P, S)\n"]
2022-04-11 21:20:30.189360 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    ac_counts = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if ac_counts[p[i]] == 0:\n                ac_counts[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(ac_counts.values())\n    penalty_count = sum([penalties[i] for i in penalties if ac_counts[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    ac_counts = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if ac_counts[p[i]] == 0:\n                ac_counts[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(ac_counts.values())\n    penalty_count = sum([penalties[i] for i in penalties if ac_counts[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n"
    }
  ],
  "created": 1649726426,
  "object": "edit"
}
2022-04-11 21:20:30.189636 fix syntax errors 2 ["\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    ac_counts = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if ac_counts[p[i]] == 0:\n                ac_counts[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(ac_counts.values())\n    penalty_count = sum([penalties[i] for i in penalties if ac_counts[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n", "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    ac_counts = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if ac_counts[p[i]] == 0:\n                ac_counts[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(ac_counts.values())\n    penalty_count = sum([penalties[i] for i in penalties if ac_counts[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n"]
2022-04-11 21:20:30.189893 size on output set 3
2022-04-11 21:20:30.189940 num operations 2
2022-04-11 21:20:30.189947 size on input set 1
2022-04-11 21:20:32.393251 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# -----Input Part----- \nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n"
    },
    {
      "index": 1,
      "text": "\n\n# -----Input Part----- \nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n"
    }
  ],
  "created": 1649726430,
  "object": "edit"
}
2022-04-11 21:20:32.393586 fix spelling mistakes 2 ['\n\n# -----Input Part----- \nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == "AC" and result[p] == 0:\n        result[p] = 1\n    elif S == "WA" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n', '\n\n# -----Input Part----- \nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == "AC" and result[p] == 0:\n        result[p] = 1\n    elif S == "WA" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n']
2022-04-11 21:20:32.393662 size on output set 1
2022-04-11 21:20:32.393759 size on input set 1
2022-04-11 21:20:35.639380 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# -----Input Part----- \nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n"
    },
    {
      "index": 1,
      "text": "# -----Import Part-----\nimport sys\n\n# -----Input Part----- \n\n# -----Check Part-----\nif N < 1 or N > 1000:\n    sys.exit()\nif M < 1 or M > 10000:\n    sys.exit()\nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n"
    }
  ],
  "created": 1649726432,
  "object": "edit"
}
2022-04-11 21:20:35.639691 fix syntax errors 2 ['\n# -----Input Part----- \nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == "AC" and result[p] == 0:\n        result[p] = 1\n    elif S == "WA" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n', '# -----Import Part-----\nimport sys\n\n# -----Input Part----- \n\n# -----Check Part-----\nif N < 1 or N > 1000:\n    sys.exit()\nif M < 1 or M > 10000:\n    sys.exit()\nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == "AC" and result[p] == 0:\n        result[p] = 1\n    elif S == "WA" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n']
2022-04-11 21:20:35.639744 size on output set 2
