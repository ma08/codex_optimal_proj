["# -----Import Part-----\nimport sys\n\n# -----Input Part----- \n\n# -----Check Part-----\nif N < 1 or N > 1000:\n    sys.exit()\nif M < 1 or M > 10000:\n    sys.exit()\nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n", "\n# -----Input Part----- \nN, M = map(int, input().split())\n\n# -----Process Part-----\nresult = [0] * N\npenalty = [0] * N\n\nfor i in range(M):\n    p, S = input().split()\n    p = int(p) - 1\n    if S == \"AC\" and result[p] == 0:\n        result[p] = 1\n    elif S == \"WA\" and result[p] == 0:\n        penalty[p] += 1\n\n# -----Output Part-----\nprint(sum(result), sum(penalty))\n", "\nfrom collections import defaultdict\n\ndef main(N, M, P, S, T):\n    acs = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == T[i]:\n            if acs[i] == 0:\n                acs[i] = 1\n        else:\n            penalties[P[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    P = [0]*M\n    S = [0]*M\n    for i in range(M):\n        P[i], S[i] = input().split()\n    main(N, M, P, S)\n", "\nfrom collections import defaultdict\n\ndef main(N, M, P, S):\n    acs = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if acs[P[i]] == 0:\n                acs[P[i]] = 1\n        else:\n            penalties[P[i]] += 1\n    ac_count = sum(acs.values())\n    penalty_count = sum([penalties[i] for i in penalties if acs[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    P = [0]*M\n    S = [0]*M\n    for i in range(M):\n        P[i], S[i] = input().split()\n    main(N, M, P, S)\n", "\n\nfrom collections import defaultdict\n\ndef main(N, M, p, S):\n    ac_counts = defaultdict(int)\n    penalties = defaultdict(int)\n    for i in range(M):\n        if S[i] == 'AC':\n            if ac_counts[p[i]] == 0:\n                ac_counts[p[i]] = 1\n        else:\n            penalties[p[i]] += 1\n    ac_count = sum(ac_counts.values())\n    penalty_count = sum([penalties[i] for i in penalties if ac_counts[i] == 1])\n    print(ac_count, penalty_count)\n\nif __name__ == '__main__':\n    N, M = map(int, input().split())\n    p = [0]*M\n    S = [0]*M\n    for i in range(M):\n        p[i], S[i] = input().split()\n    main(N, M, p, S)\n"]