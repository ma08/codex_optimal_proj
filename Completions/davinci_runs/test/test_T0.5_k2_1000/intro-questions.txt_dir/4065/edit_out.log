2022-04-11 15:49:39.092318 num operations 2
2022-04-11 15:49:39.092337 size on input set 1
2022-04-11 15:49:42.494463 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j.\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j.\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649706579,
  "object": "edit"
}
2022-04-11 15:49:42.494840 fix spelling mistakes 2 ["\n\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j.\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j.\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 15:49:42.494900 size on output set 1
2022-04-11 15:49:42.494906 size on input set 1
2022-04-11 15:49:45.932159 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j.\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j.\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649706582,
  "object": "edit"
}
2022-04-11 15:49:45.932668 fix syntax errors 2 ["\nimport sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j.\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n", "import sys\nfrom typing import List\nfrom math import log2\n\n\ndef get_contest(problems: List[int]):\n    n = len(problems)\n    # dp[i][j] = max number of problems in the contest with the maximum difficulty no more than 2^i and the minimum difficulty no less than 2^j.\n    dp = [[0 for j in range(int(log2(problems[-1])) + 1)] for i in range(int(log2(problems[-1])) + 1)]\n    dp[0][0] = 1\n    for i in range(n):\n        for j in range(int(log2(problems[i])) + 1):\n            dp[j][j] += 1\n            for k in range(j + 1, int(log2(problems[-1])) + 1):\n                dp[k][j] = max(dp[k][j], dp[k - 1][j] + 1)\n    return max(map(max, dp))\n\n\ndef main():\n    n = int(input())\n    problems = list(map(int, input().split()))\n    print(get_contest(problems))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 15:49:45.932744 size on output set 2
2022-04-11 15:49:45.932796 num operations 2
2022-04-11 15:49:45.932810 size on input set 1
2022-04-11 15:49:49.870836 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "#!/bin/python3\n\nn = int(input())\na = [int(x) for x in input().split()]\n\ncontests = []\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i + 1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = [int(x) for x in input().split()]\n\ncontests = []\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n"
    }
  ],
  "created": 1649706586,
  "object": "edit"
}
2022-04-11 15:49:49.871408 fix spelling mistakes 2 ['#!/bin/python3\n\nn = int(input())\na = [int(x) for x in input().split()]\n\ncontests = []\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i + 1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n', '\nn = int(input())\na = [int(x) for x in input().split()]\n\ncontests = []\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2:\n            break\n        contests.append((a[i], a[j]))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n']
2022-04-11 15:49:49.871458 size on output set 2
2022-04-11 15:49:49.871467 size on input set 2
2022-04-11 15:50:02.959654 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    contests = []\n\n    for i in range(n):\n        for j in range(i + 1, n):\n            if a[j] > a[i] * 2:\n                break\n            contests.append((a[i], a[j]))\n\n    contests.sort()\n\n    max_len = 0\n    max_contest = None\n\n    for i in range(len(contests)):\n        this_contest = [contests[i]]\n        for j in range(i + 1, len(contests)):\n            if contests[j][0] > this_contest[-1][1] * 2:\n                break\n            this_contest.append(contests[j])\n        if len(this_contest) > max_len:\n            max_len = len(this_contest)\n            max_contest = this_contest\n\n    print(max_len)\n\nif __name__ == '__main__':\n    sys.exit(main())\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    contests = []\n\n    for i in range(n):\n        for j in range(i + 1, n):\n            if a[j] > a[i] * 2:\n                break\n            contests.append((a[i], a[j]))\n\n    contests.sort()\n\n    max_len = 0\n    max_contest = None\n\n    for i in range(len(contests)):\n        this_contest = [contests[i]]\n        for j in range(i + 1, len(contests)):\n            if contests[j][0] > this_contest[-1][1] * 2:\n                break\n            this_contest.append(contests[j])\n        if len(this_contest) > max_len:\n            max_len = len(this_contest)\n            max_contest = this_contest\n\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649706590,
  "object": "edit"
}
2022-04-11 15:50:02.959849 fix syntax errors 2 ["#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    contests = []\n\n    for i in range(n):\n        for j in range(i + 1, n):\n            if a[j] > a[i] * 2:\n                break\n            contests.append((a[i], a[j]))\n\n    contests.sort()\n\n    max_len = 0\n    max_contest = None\n\n    for i in range(len(contests)):\n        this_contest = [contests[i]]\n        for j in range(i + 1, len(contests)):\n            if contests[j][0] > this_contest[-1][1] * 2:\n                break\n            this_contest.append(contests[j])\n        if len(this_contest) > max_len:\n            max_len = len(this_contest)\n            max_contest = this_contest\n\n    print(max_len)\n\nif __name__ == '__main__':\n    sys.exit(main())\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    contests = []\n\n    for i in range(n):\n        for j in range(i + 1, n):\n            if a[j] > a[i] * 2:\n                break\n            contests.append((a[i], a[j]))\n\n    contests.sort()\n\n    max_len = 0\n    max_contest = None\n\n    for i in range(len(contests)):\n        this_contest = [contests[i]]\n        for j in range(i + 1, len(contests)):\n            if contests[j][0] > this_contest[-1][1] * 2:\n                break\n            this_contest.append(contests[j])\n        if len(this_contest) > max_len:\n            max_len = len(this_contest)\n            max_contest = this_contest\n\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 15:50:19.536135 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())  # number of contests\na = [int(x) for x in input().split()]  # the contests\n\ncontests = []  # list of contests\n\nfor i in range(n):  # loop through all contests\n    for j in range(i+1, n):  # loop through contests after i\n        if a[j] > a[i] * 2:  # if the contest is too far away, break\n            break\n        contests.append((a[i], a[j]))  # add the contest\n\ncontests.sort()  # sort the contests\n\nmax_len = 0  # longest chain of contests\nmax_contest = None  # the contests in the longest chain\n\nfor i in range(len(contests)):  # loop through all contests\n    this_contest = [contests[i]]  # the chain of contests we are currently checking\n    for j in range(i+1, len(contests)):  # loop through contests after i\n        if contests[j][0] > this_contest[-1][1] * 2:  # if the contest is too far away, break\n            break\n        this_contest.append(contests[j])  # add the contest\n    if len(this_contest) > max_len:  # if this chain is longer than the longest chain\n        max_len = len(this_contest)  # update the longest chain\n        max_contest = this_contest  # update the contests in the longest chain\n\nprint(max_len)  # print the longest chain\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = [int(x) for x in input().split()]\n\ncontests = []\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2: \n            break\n        contests.append((a[i], a[j]))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n"
    }
  ],
  "created": 1649706603,
  "object": "edit"
}
2022-04-11 15:50:19.536421 fix syntax errors 2 ['\nn = int(input())  # number of contests\na = [int(x) for x in input().split()]  # the contests\n\ncontests = []  # list of contests\n\nfor i in range(n):  # loop through all contests\n    for j in range(i+1, n):  # loop through contests after i\n        if a[j] > a[i] * 2:  # if the contest is too far away, break\n            break\n        contests.append((a[i], a[j]))  # add the contest\n\ncontests.sort()  # sort the contests\n\nmax_len = 0  # longest chain of contests\nmax_contest = None  # the contests in the longest chain\n\nfor i in range(len(contests)):  # loop through all contests\n    this_contest = [contests[i]]  # the chain of contests we are currently checking\n    for j in range(i+1, len(contests)):  # loop through contests after i\n        if contests[j][0] > this_contest[-1][1] * 2:  # if the contest is too far away, break\n            break\n        this_contest.append(contests[j])  # add the contest\n    if len(this_contest) > max_len:  # if this chain is longer than the longest chain\n        max_len = len(this_contest)  # update the longest chain\n        max_contest = this_contest  # update the contests in the longest chain\n\nprint(max_len)  # print the longest chain\n', '\nn = int(input())\na = [int(x) for x in input().split()]\n\ncontests = []\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[j] > a[i] * 2: \n            break\n        contests.append((a[i], a[j]))\n\ncontests.sort()\n\nmax_len = 0\nmax_contest = None\n\nfor i in range(len(contests)):\n    this_contest = [contests[i]]\n    for j in range(i+1, len(contests)):\n        if contests[j][0] > this_contest[-1][1] * 2:\n            break\n        this_contest.append(contests[j])\n    if len(this_contest) > max_len:\n        max_len = len(this_contest)\n        max_contest = this_contest\n\nprint(max_len)\n']
2022-04-11 15:50:19.536487 size on output set 4
