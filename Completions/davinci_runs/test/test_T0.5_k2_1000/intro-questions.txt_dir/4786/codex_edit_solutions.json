["\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n", "n = int(input())\nkeywords = [input().lower().replace(\"-\", \" \") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n", "\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\nn = int(input())\nkeywords = [input().lower().replace(\"-\", \" \") for _ in range(n)] # replace hyphen with space\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines():\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()  # use set to remove duplicate\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \" \")  # remove hyphen and convert to lower case\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == \"__main__\":\n    main()\n", "n = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace(\"-\", \" \").split()\n    keywords.add(keyword)\nprint(len(keywords))\n", "\n\ndef main():\n    # read input.\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # find similar keywords.\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # print result.\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace(\"-\", \"\")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()  # use set to remove duplicates\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \" \")  # remove hyphens and convert to lower case\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == \"__main__\":\n    main()\n", "def main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(input().lower().replace(\"-\", \" \"))\n    print(len(set(keywords)))\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().lower().replace(\"-\", \" \")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    print(\"hello world\")\n\nif __name__ == \"__main__\":\n    main()\n", "def main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(input().lower().replace(\"-\", \" \"))\n    print(len(set(keywords)))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n#%%\n\ndef main():\n    n = int(input())\n    words = [input() for _ in range(n)]\n    words = set(words)\n    for i in range(len(words)):\n        for j in range(i+1, len(words)):\n            if words[i].lower().replace('-', ' ') == words[j].lower().replace('-', ' '):\n                words[i] = ''\n                words[j] = ''\n    words = set(words)\n    words.remove('')\n    print(len(words))\n\nmain()\n\n#%%\n", "import re\n\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        line = re.sub(r'[^\\w\\s]', ' ', line)\n        keywords.append(line.lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n = int(input())\n    words = [input() for _ in range(n)]\n    words = list(set(words))\n    for i in range(len(words)):\n        for j in range(i+1, len(words)):\n            if words[i].lower().replace('-', ' ') == words[j].lower().replace('-', ' '):\n                words[i] = ''\n                words[j] = ''\n    words = list(set(words))\n    words.remove('')\n    print(len(words))\n\nmain()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == \"__main__\":\n    main()\n", "import re\n\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines():\n        line = re.sub(r'[^\\w\\s]', '', line)\n        keywords.append(line.lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    print(\"Hello World!\")\n\nif __name__ == \"__main__\":\n    main()\n", "n = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace(\"-\", \" \")\n    keywords.add(keyword)\nprint(len(keywords))\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace(\"-\", \" \").split()\n        keyword = \" \".join(keyword)\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()\n", "\nn = int(input())\nkeywords = [input().lower().replace(\"-\", \" \") for _ in range(n)] # replace \"-\" with \" \"\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    keywords = set()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.add(line.replace('-', ' ').lower().strip())\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n", "n = int(input())\nkeywords = [input().lower().replace(\"-\", \" \") for _ in range(n)] # replace \"-\" with \" \"\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n", "\n\ndef main():\n    # Read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # Find duplicate keywords\n    duplicate = set()  # use set to avoid duplicates\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                duplicate.add(i)\n                duplicate.add(j)\n    # Print result\n    print(n - len(duplicate))\n\nif __name__ == '__main__':\n    main()\n"]