2022-04-11 23:55:55.505250 num operations 2
2022-04-11 23:55:55.505278 size on input set 1
2022-04-11 23:55:59.657778 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # print result\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # Read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # Find duplicate keywords\n    duplicate = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                duplicate.add(i)\n                duplicate.add(j)\n    # Print result\n    print(n - len(duplicate))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649735755,
  "object": "edit"
}
2022-04-11 23:55:59.657893 fix spelling mistakes 2 ["\n\ndef main():\n    # read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # find similar keywords\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # print result\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # Read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # Find duplicate keywords\n    duplicate = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                duplicate.add(i)\n                duplicate.add(j)\n    # Print result\n    print(n - len(duplicate))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 23:55:59.657909 size on output set 2
2022-04-11 23:55:59.657912 size on input set 2
2022-04-11 23:56:04.769358 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # Read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # Find duplicate keywords\n    duplicate = set()  # use set to avoid duplicates\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                duplicate.add(i)\n                duplicate.add(j)\n    # Print result\n    print(n - len(duplicate))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649735759,
  "object": "edit"
}
2022-04-11 23:56:04.770201 fix syntax errors 2 ["\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # Read input\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # Find duplicate keywords\n    duplicate = set()  # use set to avoid duplicates\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                duplicate.add(i)\n                duplicate.add(j)\n    # Print result\n    print(n - len(duplicate))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 23:56:07.989278 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # read input.\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # find similar keywords.\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # print result.\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # read input.\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # find similar keywords.\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # print result.\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649735765,
  "object": "edit"
}
2022-04-11 23:56:07.989468 fix syntax errors 2 ["\n\ndef main():\n    # read input.\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # find similar keywords.\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # print result.\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # read input.\n    n = int(input())\n    keywords = []\n    for i in range(n):\n        keyword = input()\n        keywords.append(keyword.lower().replace('-', ' '))\n    # find similar keywords.\n    similar = set()\n    for i in range(n):\n        for j in range(n):\n            if i != j and keywords[i] == keywords[j]:\n                similar.add(i)\n                similar.add(j)\n    # print result.\n    print(n - len(similar))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 23:56:07.989505 size on output set 3
2022-04-11 23:56:07.989526 num operations 2
2022-04-11 23:56:07.989535 size on input set 1
2022-04-11 23:56:12.030726 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()  # use set to remove duplicate\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \" \")  # remove hyphen and convert to lower case\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649735768,
  "object": "edit"
}
2022-04-11 23:56:12.030843 fix spelling mistakes 2 ['\n\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace("-", " ")\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()  # use set to remove duplicate\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace("-", " ")  # remove hyphen and convert to lower case\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 23:56:12.030857 size on output set 2
2022-04-11 23:56:12.030861 size on input set 2
2022-04-11 23:56:14.214757 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649735772,
  "object": "edit"
}
2022-04-11 23:56:14.215251 fix syntax errors 2 ['import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace("-", " ")\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace("-", " ")\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 23:56:18.686898 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()  # use set to remove duplicates\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \" \")  # remove hyphens and convert to lower case\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()  # use set to remove duplicate\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace(\"-\", \" \")  # remove hyphen and convert to lower case\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649735774,
  "object": "edit"
}
2022-04-11 23:56:18.687044 fix syntax errors 2 ['import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()  # use set to remove duplicates\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace("-", " ")  # remove hyphens and convert to lower case\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    key_set = set()  # use set to remove duplicate\n    for i in range(n):\n        key = sys.stdin.readline().strip().lower().replace("-", " ")  # remove hyphen and convert to lower case\n        key_set.add(key)\n    print(len(key_set))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 23:56:18.687068 size on output set 3
2022-04-11 23:56:18.687078 num operations 2
2022-04-11 23:56:18.687085 size on input set 1
2022-04-11 23:56:21.918714 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import re\n\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        line = re.sub(r'[^\\w\\s]', '', line)\n        keywords.append(line.lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649735778,
  "object": "edit"
}
2022-04-11 23:56:21.918880 fix spelling mistakes 2 ["#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n", "import re\n\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        line = re.sub(r'[^\\w\\s]', '', line)\n        keywords.append(line.lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 23:56:21.918903 size on output set 2
2022-04-11 23:56:21.918911 size on input set 2
2022-04-11 23:56:25.130729 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import re\n\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        line = re.sub(r'[^\\w\\s]', ' ', line)\n        keywords.append(line.lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import re\n\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines():\n        line = re.sub(r'[^\\w\\s]', '', line)\n        keywords.append(line.lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649735782,
  "object": "edit"
}
2022-04-11 23:56:25.131045 fix syntax errors 2 ["import re\n\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines()[1:]:\n        line = re.sub(r'[^\\w\\s]', ' ', line)\n        keywords.append(line.lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n", "import re\n\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines():\n        line = re.sub(r'[^\\w\\s]', '', line)\n        keywords.append(line.lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 23:56:28.546709 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    keywords = set()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.add(line.replace('-', ' ').lower().strip())\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines():\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649735785,
  "object": "edit"
}
2022-04-11 23:56:28.546827 fix syntax errors 2 ["#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    keywords = set()\n    for line in sys.stdin.readlines()[1:]:\n        keywords.add(line.replace('-', ' ').lower().strip())\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    keywords = list()\n    for line in sys.stdin.readlines():\n        keywords.append(line.replace('-', ' ').lower().strip())\n    keywords = set(keywords)\n    print(len(keywords))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 23:56:28.546840 size on output set 4
2022-04-11 23:56:28.546847 num operations 2
2022-04-11 23:56:28.546850 size on input set 1
2022-04-11 23:56:30.505887 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace(\"-\", \" \")\n    keywords.add(keyword)\nprint(len(keywords))\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace(\"-\", \" \")\n    keywords.add(keyword)\nprint(len(keywords))\n"
    }
  ],
  "created": 1649735788,
  "object": "edit"
}
2022-04-11 23:56:30.506086 fix spelling mistakes 2 ['\nn = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace("-", " ")\n    keywords.add(keyword)\nprint(len(keywords))\n', '\nn = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace("-", " ")\n    keywords.add(keyword)\nprint(len(keywords))\n']
2022-04-11 23:56:30.506223 size on output set 1
2022-04-11 23:56:30.506235 size on input set 1
2022-04-11 23:56:33.263137 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace(\"-\", \" \").split()\n    keywords.add(keyword)\nprint(len(keywords))\n"
    },
    {
      "index": 1,
      "text": "n = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace(\"-\", \" \")\n    keywords.add(keyword)\nprint(len(keywords))\n"
    }
  ],
  "created": 1649735790,
  "object": "edit"
}
2022-04-11 23:56:33.263386 fix syntax errors 2 ['n = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace("-", " ").split()\n    keywords.add(keyword)\nprint(len(keywords))\n', 'n = int(input())\nkeywords = set()\nfor i in range(n):\n    keyword = input().lower().replace("-", " ")\n    keywords.add(keyword)\nprint(len(keywords))\n']
2022-04-11 23:56:33.263419 size on output set 2
2022-04-11 23:56:33.263433 num operations 2
2022-04-11 23:56:33.263441 size on input set 1
2022-04-11 23:56:41.338748 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#%%\n\ndef main():\n    n = int(input())\n    words = [input() for _ in range(n)]\n    words = list(set(words))\n    for i in range(len(words)):\n        for j in range(i+1, len(words)):\n            if words[i].lower().replace('-', ' ') == words[j].lower().replace('-', ' '):\n                words[i] = ''\n                words[j] = ''\n    words = list(set(words))\n    words.remove('')\n    print(len(words))\n\nmain()\n\n#%%\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n\n#%%\n"
    }
  ],
  "created": 1649735793,
  "object": "edit"
}
2022-04-11 23:56:41.338878 fix spelling mistakes 2 ["\n\n#%%\n\ndef main():\n    n = int(input())\n    words = [input() for _ in range(n)]\n    words = list(set(words))\n    for i in range(len(words)):\n        for j in range(i+1, len(words)):\n            if words[i].lower().replace('-', ' ') == words[j].lower().replace('-', ' '):\n                words[i] = ''\n                words[j] = ''\n    words = list(set(words))\n    words.remove('')\n    print(len(words))\n\nmain()\n\n#%%\n", "\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n\n#%%\n"]
2022-04-11 23:56:41.338901 size on output set 2
2022-04-11 23:56:41.338907 size on input set 2
2022-04-11 23:56:44.330824 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#%%\n\ndef main():\n    n = int(input())\n    words = [input() for _ in range(n)]\n    words = set(words)\n    for i in range(len(words)):\n        for j in range(i+1, len(words)):\n            if words[i].lower().replace('-', ' ') == words[j].lower().replace('-', ' '):\n                words[i] = ''\n                words[j] = ''\n    words = set(words)\n    words.remove('')\n    print(len(words))\n\nmain()\n\n#%%\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    words = [input() for _ in range(n)]\n    words = list(set(words))\n    for i in range(len(words)):\n        for j in range(i+1, len(words)):\n            if words[i].lower().replace('-', ' ') == words[j].lower().replace('-', ' '):\n                words[i] = ''\n                words[j] = ''\n    words = list(set(words))\n    words.remove('')\n    print(len(words))\n\nmain()\n"
    }
  ],
  "created": 1649735801,
  "object": "edit"
}
2022-04-11 23:56:44.331196 fix syntax errors 2 ["\n\n#%%\n\ndef main():\n    n = int(input())\n    words = [input() for _ in range(n)]\n    words = set(words)\n    for i in range(len(words)):\n        for j in range(i+1, len(words)):\n            if words[i].lower().replace('-', ' ') == words[j].lower().replace('-', ' '):\n                words[i] = ''\n                words[j] = ''\n    words = set(words)\n    words.remove('')\n    print(len(words))\n\nmain()\n\n#%%\n", "\ndef main():\n    n = int(input())\n    words = [input() for _ in range(n)]\n    words = list(set(words))\n    for i in range(len(words)):\n        for j in range(i+1, len(words)):\n            if words[i].lower().replace('-', ' ') == words[j].lower().replace('-', ' '):\n                words[i] = ''\n                words[j] = ''\n    words = list(set(words))\n    words.remove('')\n    print(len(words))\n\nmain()\n"]
2022-04-11 23:56:46.826746 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n"
    }
  ],
  "created": 1649735804,
  "object": "edit"
}
2022-04-11 23:56:46.826894 fix syntax errors 2 ["\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n", "\ndef main():\n    n = int(input())\n    keywords = [input() for _ in range(n)]\n    keywords = list(set(keywords))\n    for i in range(len(keywords)):\n        for j in range(i+1, len(keywords)):\n            #print(i, j)\n            if keywords[i].lower().replace('-', ' ') == keywords[j].lower().replace('-', ' '):\n                #print(keywords[i], keywords[j])\n                keywords[i] = ''\n                keywords[j] = ''\n    keywords = list(set(keywords))\n    keywords.remove('')\n    print(len(keywords))\n\nmain()\n"]
2022-04-11 23:56:46.826921 size on output set 3
2022-04-11 23:56:46.826998 num operations 2
2022-04-11 23:56:46.827005 size on input set 1
2022-04-11 23:56:49.117657 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649735807,
  "object": "edit"
}
2022-04-11 23:56:49.117773 fix spelling mistakes 2 ['\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace("-", " ")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace("-", " ")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 23:56:49.117789 size on output set 2
2022-04-11 23:56:49.117794 size on input set 2
2022-04-11 23:56:52.934730 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().lower().replace(\"-\", \" \")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace(\"-\", \" \").split()\n        keyword = \" \".join(keyword)\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649735809,
  "object": "edit"
}
2022-04-11 23:56:52.934858 fix syntax errors 2 ['\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().lower().replace("-", " ")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace("-", " ").split()\n        keyword = " ".join(keyword)\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 23:56:56.218269 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace(\"-\", \" \")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace(\"-\", \"\")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649735813,
  "object": "edit"
}
2022-04-11 23:56:56.218519 fix syntax errors 2 ['import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace("-", " ")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    keywords = []\n    for i in range(n):\n        keyword = sys.stdin.readline().strip().lower().replace("-", "")\n        if keyword not in keywords:\n            keywords.append(keyword)\n    print(len(keywords))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 23:56:56.218548 size on output set 4
2022-04-11 23:56:56.218563 num operations 2
2022-04-11 23:56:56.218568 size on input set 1
2022-04-11 23:56:59.438462 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n\ndef main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(input().lower().replace(\"-\", \" \"))\n    print(len(set(keywords)))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649735816,
  "object": "edit"
}
2022-04-11 23:56:59.438606 fix spelling mistakes 2 ['\n\ndef main():\n    pass\n\nif __name__ == "__main__":\n    main()\n', '\n\n\ndef main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(input().lower().replace("-", " "))\n    print(len(set(keywords)))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 23:56:59.438625 size on output set 2
2022-04-11 23:56:59.438634 size on input set 2
2022-04-11 23:57:01.806759 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "def main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(input().lower().replace(\"-\", \" \"))\n    print(len(set(keywords)))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "def main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(input().lower().replace(\"-\", \" \"))\n    print(len(set(keywords)))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649735819,
  "object": "edit"
}
2022-04-11 23:57:01.806968 fix syntax errors 2 ['def main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(input().lower().replace("-", " "))\n    print(len(set(keywords)))\n\nif __name__ == "__main__":\n    main()\n', 'def main():\n    n = int(input())\n    keywords = []\n    for _ in range(n):\n        keywords.append(input().lower().replace("-", " "))\n    print(len(set(keywords)))\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 23:57:03.966791 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    print(\"Hello World!\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    print(\"hello world\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649735822,
  "object": "edit"
}
2022-04-11 23:57:03.966975 fix syntax errors 2 ['\n\ndef main():\n    print("Hello World!")\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    print("hello world")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 23:57:03.966999 size on output set 4
2022-04-11 23:57:03.967013 num operations 2
2022-04-11 23:57:03.967022 size on input set 1
2022-04-11 23:57:07.032856 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\nkeywords = [input().lower().replace(\"-\", \" \") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\nkeywords = [input().lower().replace(\"-\", \" \") for _ in range(n)] # replace \"-\" with \" \"\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n"
    }
  ],
  "created": 1649735824,
  "object": "edit"
}
2022-04-11 23:57:07.033198 fix spelling mistakes 2 ['\nn = int(input())\nkeywords = [input().lower().replace("-", " ") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n', '\n\nn = int(input())\nkeywords = [input().lower().replace("-", " ") for _ in range(n)] # replace "-" with " "\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n']
2022-04-11 23:57:07.033228 size on output set 2
2022-04-11 23:57:07.033235 size on input set 2
2022-04-11 23:57:10.443113 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\nkeywords = [input().lower().replace(\"-\", \" \") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nkeywords = [input().lower().replace(\"-\", \" \") for _ in range(n)] # replace hyphen with space\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n"
    }
  ],
  "created": 1649735827,
  "object": "edit"
}
2022-04-11 23:57:10.443305 fix syntax errors 2 ['n = int(input())\nkeywords = [input().lower().replace("-", " ") for _ in range(n)]\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n', '\nn = int(input())\nkeywords = [input().lower().replace("-", " ") for _ in range(n)] # replace hyphen with space\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n']
2022-04-11 23:57:12.458104 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\nkeywords = [input().lower().replace(\"-\", \" \") for _ in range(n)] # replace \"-\" with \" \"\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nkeywords = [input().lower().replace(\"-\", \" \") for _ in range(n)] # replace \"-\" with \" \"\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n"
    }
  ],
  "created": 1649735830,
  "object": "edit"
}
2022-04-11 23:57:12.458254 fix syntax errors 2 ['n = int(input())\nkeywords = [input().lower().replace("-", " ") for _ in range(n)] # replace "-" with " "\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n', '\nn = int(input())\nkeywords = [input().lower().replace("-", " ") for _ in range(n)] # replace "-" with " "\nsimilar = set()\nfor i in range(n):\n    for j in range(i+1, n):\n        if keywords[i] == keywords[j]:\n            similar.add(keywords[i])\nprint(n - len(similar))\n']
2022-04-11 23:57:12.458278 size on output set 4
