["\nimport sys\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    C = list(map(int, input().split()))\n    A.sort()\n    C.sort()\n    ans = 0\n    for b in B:\n        a = bisect_left(A, b)\n        c = bisect_right(C, b)\n        ans += a * (N-c)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n", "def main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P))\n\nif __name__ == \"__main__\":\n    main()\n", "\nN = int(input())\nA = list(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    while A[i] % 2 == 0:\n        A[i] /= 2\n        ans += 1\n\nprint(ans)\n", "print(min(map(int, input().split())))\n", "\na, b, c = map(int, input().split())\nprint(min(a+b, b+c, c+a))\n", "import sys\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    C = list(map(int, input().split()))\n    A.sort()\n    C.sort()\n    ans = 0\n    for b in B:\n        ans += len(A[:bisect.bisect_left(A, b)]) * len(C[bisect.bisect_right(C, b):])\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n", "\na, b, c = map(int, input().split())\n\nprint(min(a+b, b+c, c+a))\n", "import sys\n\ndef main():\n    N, K = map(int, input().split())\n    print(N%K)\n\nif __name__ == \"__main__\":\n    main()\n"]