2022-04-12 02:16:59.073962 num operations 2
2022-04-12 02:16:59.073981 size on input set 1
2022-04-12 02:17:01.118781 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\ncount = 0\ntime = 0\nfor i in range(n):\n    if time + tasks[i] <= T:\n        count += 1\n        time += tasks[i]\n    else:\n        break\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\ncount = 0\ntime = 0\nfor i in range(n):\n    if time + tasks[i] <= T:\n        count += 1\n        time += tasks[i]\n    else:\n        break\n\nprint(count)\n"
    }
  ],
  "created": 1649744219,
  "object": "edit"
}
2022-04-12 02:17:01.118997 fix spelling mistakes 2 ['\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\ncount = 0\ntime = 0\nfor i in range(n):\n    if time + tasks[i] <= T:\n        count += 1\n        time += tasks[i]\n    else:\n        break\n\nprint(count)\n', '\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\ncount = 0\ntime = 0\nfor i in range(n):\n    if time + tasks[i] <= T:\n        count += 1\n        time += tasks[i]\n    else:\n        break\n\nprint(count)\n']
2022-04-12 02:17:01.119032 size on output set 1
2022-04-12 02:17:01.119041 size on input set 1
2022-04-12 02:17:03.501656 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\ncount = 0\ntime = 0\nfor i in range(n):\n    if time + tasks[i] <= T:\n        count += 1\n        time += tasks[i]\n    else:\n        break\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "n, T = map(int, input().split())\ntasks = map(int, input().split())\n\ncount = 0\ntime = 0\nfor i in range(n):\n    if time + tasks[i] <= T:\n        count += 1\n        time += tasks[i]\n    else:\n        break\n\nprint(count)\n"
    }
  ],
  "created": 1649744221,
  "object": "edit"
}
2022-04-12 02:17:03.501844 fix syntax errors 2 ['n, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\ncount = 0\ntime = 0\nfor i in range(n):\n    if time + tasks[i] <= T:\n        count += 1\n        time += tasks[i]\n    else:\n        break\n\nprint(count)\n', 'n, T = map(int, input().split())\ntasks = map(int, input().split())\n\ncount = 0\ntime = 0\nfor i in range(n):\n    if time + tasks[i] <= T:\n        count += 1\n        time += tasks[i]\n    else:\n        break\n\nprint(count)\n']
2022-04-12 02:17:03.501872 size on output set 2
2022-04-12 02:17:03.501897 num operations 2
2022-04-12 02:17:03.501906 size on input set 1
2022-04-12 02:17:05.401840 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nn, t = map(int, input().split())\ntasks = list(map(int, input().split()))\n\ntasks_done = 0\ntime_used = 0\nfor task in tasks:\n    if time_used + task <= t:\n        time_used += task\n        tasks_done += 1\n    else:\n        break\n\nprint(tasks_done)\n"
    },
    {
      "index": 1,
      "text": "\nn, t = map(int, input().split())\ntasks = list(map(int, input().split()))\n\ntasks_done = 0\ntime_used = 0\nfor task in tasks:\n    if time_used + task <= t:\n        time_used += task\n        tasks_done += 1\n    else:\n        break\n\nprint(tasks_done)\n"
    }
  ],
  "created": 1649744223,
  "object": "edit"
}
2022-04-12 02:17:05.402026 fix spelling mistakes 2 ['\nn, t = map(int, input().split())\ntasks = list(map(int, input().split()))\n\ntasks_done = 0\ntime_used = 0\nfor task in tasks:\n    if time_used + task <= t:\n        time_used += task\n        tasks_done += 1\n    else:\n        break\n\nprint(tasks_done)\n', '\nn, t = map(int, input().split())\ntasks = list(map(int, input().split()))\n\ntasks_done = 0\ntime_used = 0\nfor task in tasks:\n    if time_used + task <= t:\n        time_used += task\n        tasks_done += 1\n    else:\n        break\n\nprint(tasks_done)\n']
2022-04-12 02:17:05.402056 size on output set 1
2022-04-12 02:17:05.402066 size on input set 1
2022-04-12 02:17:09.777617 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, t = map(int, input().split()) # n = number of tasks, t = time limit\ntasks = list(map(int, input().split())) # list of tasks\n\ntasks_done = 0\ntime_used = 0\nfor task in tasks:\n    if time_used + task <= t:\n        time_used += task\n        tasks_done += 1\n    else:\n        break\n\nprint(tasks_done)\n"
    },
    {
      "index": 1,
      "text": "n, t = map(int, input().split())\ntasks = list(map(int, input().split()))\n\ntasks_done = 0\ntime_used = 0\nfor task in tasks:\n    if time_used + task <= t:\n        time_used += task\n        tasks_done += 1\n    else:\n        break\n\nprint(tasks_done)\n"
    }
  ],
  "created": 1649744225,
  "object": "edit"
}
2022-04-12 02:17:09.777781 fix syntax errors 2 ['\nn, t = map(int, input().split()) # n = number of tasks, t = time limit\ntasks = list(map(int, input().split())) # list of tasks\n\ntasks_done = 0\ntime_used = 0\nfor task in tasks:\n    if time_used + task <= t:\n        time_used += task\n        tasks_done += 1\n    else:\n        break\n\nprint(tasks_done)\n', 'n, t = map(int, input().split())\ntasks = list(map(int, input().split()))\n\ntasks_done = 0\ntime_used = 0\nfor task in tasks:\n    if time_used + task <= t:\n        time_used += task\n        tasks_done += 1\n    else:\n        break\n\nprint(tasks_done)\n']
2022-04-12 02:17:09.777807 size on output set 2
2022-04-12 02:17:09.777818 num operations 2
2022-04-12 02:17:09.777825 size on input set 1
2022-04-12 02:17:12.494811 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Read input.\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\n# Solve problem.\ncompleted = 0\ntime = 0\nfor t in tasks:\n    if time + t <= T:\n        time += t\n        completed += 1\n    else:\n        break\n\n# Print output.\nprint(completed)\n"
    },
    {
      "index": 1,
      "text": "\n\n# Read input.\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\n# Solve problem.\ncompleted = 0\ntime = 0\nfor t in tasks:\n    if time + t <= T:\n        time += t\n        completed += 1\n    else:\n        break\n\n# Print output.\nprint(completed)\n"
    }
  ],
  "created": 1649744229,
  "object": "edit"
}
2022-04-12 02:17:12.495068 fix spelling mistakes 2 ['\n\n# Read input.\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\n# Solve problem.\ncompleted = 0\ntime = 0\nfor t in tasks:\n    if time + t <= T:\n        time += t\n        completed += 1\n    else:\n        break\n\n# Print output.\nprint(completed)\n', '\n\n# Read input.\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\n# Solve problem.\ncompleted = 0\ntime = 0\nfor t in tasks:\n    if time + t <= T:\n        time += t\n        completed += 1\n    else:\n        break\n\n# Print output.\nprint(completed)\n']
2022-04-12 02:17:12.495091 size on output set 1
2022-04-12 02:17:12.495098 size on input set 1
2022-04-12 02:17:14.390714 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Read input.\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\n# Solve problem.\ncompleted = 0\ntime = 0\nfor t in tasks:\n    if time + t <= T:\n        time += t\n        completed += 1\n    else:\n        break\n\n# Print output.\nprint(completed)\n"
    },
    {
      "index": 1,
      "text": "\n# Read input.\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\n# Solve problem.\ncompleted = 0\ntime = 0\nfor t in tasks:\n    if time + t <= T:\n        time += t\n        completed += 1\n    else:\n        break\n\n# Print output.\nprint(completed)\n"
    }
  ],
  "created": 1649744232,
  "object": "edit"
}
2022-04-12 02:17:14.390816 fix syntax errors 2 ['\n# Read input.\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\n# Solve problem.\ncompleted = 0\ntime = 0\nfor t in tasks:\n    if time + t <= T:\n        time += t\n        completed += 1\n    else:\n        break\n\n# Print output.\nprint(completed)\n', '\n# Read input.\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\n# Solve problem.\ncompleted = 0\ntime = 0\nfor t in tasks:\n    if time + t <= T:\n        time += t\n        completed += 1\n    else:\n        break\n\n# Print output.\nprint(completed)\n']
2022-04-12 02:17:14.390903 size on output set 1
2022-04-12 02:17:14.390909 num operations 2
2022-04-12 02:17:14.390913 size on input set 1
2022-04-12 02:17:16.774630 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n# Read input\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\n# Solve\ncompleted = 0\ntime = 0\nfor task in tasks:\n    if time + task <= T:\n        time += task\n        completed += 1\nprint(completed)\n"
    },
    {
      "index": 1,
      "text": "\n\n# Read input.\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\n# Solve\ncompleted = 0\ntime = 0\nfor task in tasks:\n    if time + task <= T:\n        time += task\n        completed += 1\nprint(completed)\n"
    }
  ],
  "created": 1649744234,
  "object": "edit"
}
2022-04-12 02:17:16.774936 fix spelling mistakes 2 ['\n# Read input\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\n# Solve\ncompleted = 0\ntime = 0\nfor task in tasks:\n    if time + task <= T:\n        time += task\n        completed += 1\nprint(completed)\n', '\n\n# Read input.\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\n# Solve\ncompleted = 0\ntime = 0\nfor task in tasks:\n    if time + task <= T:\n        time += task\n        completed += 1\nprint(completed)\n']
2022-04-12 02:17:16.774971 size on output set 2
2022-04-12 02:17:16.774979 size on input set 2
2022-04-12 02:17:19.266715 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Read input.\nN, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\n# Solve\ncompleted = 0\ntime = 0\nfor task in tasks:\n    if time + task <= T:\n        time += task\n        completed += 1\nprint(completed)\n"
    },
    {
      "index": 1,
      "text": "\n# Read input.\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\n# Solve.\ncompleted = 0\ntime = 0\nfor task in tasks:\n    if time + task <= T:\n        time += task\n        completed += 1\nprint(completed)\n"
    }
  ],
  "created": 1649744236,
  "object": "edit"
}
2022-04-12 02:17:19.266880 fix syntax errors 2 ['\n# Read input.\nN, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\n# Solve\ncompleted = 0\ntime = 0\nfor task in tasks:\n    if time + task <= T:\n        time += task\n        completed += 1\nprint(completed)\n', '\n# Read input.\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\n# Solve.\ncompleted = 0\ntime = 0\nfor task in tasks:\n    if time + task <= T:\n        time += task\n        completed += 1\nprint(completed)\n']
2022-04-12 02:17:23.473821 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# Read input\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\n# Solve\ncompleted = 0\ntime = 0\nfor task in tasks:\n    if time + task <= T:\n        time += task\n        completed += 1\nprint(completed)\n"
    },
    {
      "index": 1,
      "text": "# Read input\nn, T = map(int, input().split())  # n = number of tasks, T = time limit\ntasks = list(map(int, input().split()))  # list of tasks\n\n# Solve\ncompleted = 0  # number of completed tasks\ntime = 0  # time spent on completed tasks\nfor task in tasks:\n    if time + task <= T:\n        time += task\n        completed += 1\n\nprint(completed)\n"
    }
  ],
  "created": 1649744239,
  "object": "edit"
}
2022-04-12 02:17:23.474002 fix syntax errors 2 ['# Read input\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\n# Solve\ncompleted = 0\ntime = 0\nfor task in tasks:\n    if time + task <= T:\n        time += task\n        completed += 1\nprint(completed)\n', '# Read input\nn, T = map(int, input().split())  # n = number of tasks, T = time limit\ntasks = list(map(int, input().split()))  # list of tasks\n\n# Solve\ncompleted = 0  # number of completed tasks\ntime = 0  # time spent on completed tasks\nfor task in tasks:\n    if time + task <= T:\n        time += task\n        completed += 1\n\nprint(completed)\n']
2022-04-12 02:17:23.474032 size on output set 4
2022-04-12 02:17:23.474047 num operations 2
2022-04-12 02:17:23.474055 size on input set 1
2022-04-12 02:17:25.824248 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # Get input\n    n, t = [int(x) for x in input().split()]\n    times = [int(x) for x in input().split()]\n    # Iterate through tasks and see if they can be completed.\n    total = 0\n    for time in times:\n        total += time\n        if total > t:\n            print(times.index(time))\n            break\n    else:\n        print(n)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # Get inputs\n    n, t = [int(x) for x in input().split()]\n    times = [int(x) for x in input().split()]\n    # Iterate through tasks and see if they can be completed\n    total = 0\n    for time in times:\n        total += time\n        if total > t:\n            print(times.index(time))\n            break\n    else:\n        print(n)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649744243,
  "object": "edit"
}
2022-04-12 02:17:25.824356 fix spelling mistakes 2 ["\n\ndef main():\n    # Get input\n    n, t = [int(x) for x in input().split()]\n    times = [int(x) for x in input().split()]\n    # Iterate through tasks and see if they can be completed.\n    total = 0\n    for time in times:\n        total += time\n        if total > t:\n            print(times.index(time))\n            break\n    else:\n        print(n)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # Get inputs\n    n, t = [int(x) for x in input().split()]\n    times = [int(x) for x in input().split()]\n    # Iterate through tasks and see if they can be completed\n    total = 0\n    for time in times:\n        total += time\n        if total > t:\n            print(times.index(time))\n            break\n    else:\n        print(n)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 02:17:25.824371 size on output set 2
2022-04-12 02:17:25.824374 size on input set 2
2022-04-12 02:17:31.990754 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # # Get inputs\n    # n, t = [int(x) for x in input().split()]\n    # times = [int(x) for x in input().split()]\n    # # Iterate through tasks and see if they can be completed\n    # total = 0\n    # for time in times:\n    #     total += time\n    #     if total > t:\n    #         print(times.index(time))\n    #         break\n    # else:\n    #     print(n)\n    print(\"Hello world\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # Get inputs\n    n, t = [int(x) for x in input().split()]  # n = number of tasks, t = time limit\n    times = [int(x) for x in input().split()]  # times = list of task times\n    # Iterate through tasks and see if they can be completed\n    total = 0\n    for time in times:\n        total += time\n        if total > t:\n            print(times.index(time))  # print the index of the task that was not completed\n            break\n    else:\n        print(n)  # if all tasks are completed, print n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649744246,
  "object": "edit"
}
2022-04-12 02:17:31.991077 fix syntax errors 2 ['\n\ndef main():\n    # # Get inputs\n    # n, t = [int(x) for x in input().split()]\n    # times = [int(x) for x in input().split()]\n    # # Iterate through tasks and see if they can be completed\n    # total = 0\n    # for time in times:\n    #     total += time\n    #     if total > t:\n    #         print(times.index(time))\n    #         break\n    # else:\n    #     print(n)\n    print("Hello world")\n\nif __name__ == \'__main__\':\n    main()\n', "\n\ndef main():\n    # Get inputs\n    n, t = [int(x) for x in input().split()]  # n = number of tasks, t = time limit\n    times = [int(x) for x in input().split()]  # times = list of task times\n    # Iterate through tasks and see if they can be completed\n    total = 0\n    for time in times:\n        total += time\n        if total > t:\n            print(times.index(time))  # print the index of the task that was not completed\n            break\n    else:\n        print(n)  # if all tasks are completed, print n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 02:17:38.385317 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # Get input.\n    n, m = [int(x) for x in input().split()]\n    # Create a list of the numbers.\n    nums = [int(x) for x in input().split()]\n    # Create a list of the queries.\n    queries = []\n    for i in range(m):\n        queries.append([int(x) for x in input().split()])\n    # Iterate through the queries.\n    for query in queries:\n        # Get the query numbers.\n        a, b = query\n        # Get the minimum number in the range.\n        print(min(nums[a-1:b]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # Get input\n    n, t = [int(x) for x in raw_input().split()]\n    times = [int(x) for x in raw_input().split()]\n    # Iterate through tasks and see if they can be completed.\n    total = 0\n    for time in times:\n        total += time\n        if total > t:\n            print(times.index(time))\n            break\n    else:\n        print(n)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649744252,
  "object": "edit"
}
2022-04-12 02:17:38.385425 fix syntax errors 2 ["\n\ndef main():\n    # Get input.\n    n, m = [int(x) for x in input().split()]\n    # Create a list of the numbers.\n    nums = [int(x) for x in input().split()]\n    # Create a list of the queries.\n    queries = []\n    for i in range(m):\n        queries.append([int(x) for x in input().split()])\n    # Iterate through the queries.\n    for query in queries:\n        # Get the query numbers.\n        a, b = query\n        # Get the minimum number in the range.\n        print(min(nums[a-1:b]))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # Get input\n    n, t = [int(x) for x in raw_input().split()]\n    times = [int(x) for x in raw_input().split()]\n    # Iterate through tasks and see if they can be completed.\n    total = 0\n    for time in times:\n        total += time\n        if total > t:\n            print(times.index(time))\n            break\n    else:\n        print(n)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 02:17:38.385448 size on output set 4
2022-04-12 02:17:38.385460 num operations 2
2022-04-12 02:17:38.385464 size on input set 1
2022-04-12 02:17:40.314742 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nn, T = map(int, input().split())\ntasks = map(int, input().split())\n\nt = 0\ni = 0\nwhile t < T and i < n:\n    t += tasks[i]\n    i += 1\n\nprint(i)\n"
    },
    {
      "index": 1,
      "text": "\nn, T = map(int, input().split())\ntasks = map(int, input().split())\n\nt = 0\ni = 0\nwhile t < T and i < n:\n    t += tasks[i]\n    i += 1\n\nprint(i)\n"
    }
  ],
  "created": 1649744258,
  "object": "edit"
}
2022-04-12 02:17:40.314842 fix spelling mistakes 2 ['\nn, T = map(int, input().split())\ntasks = map(int, input().split())\n\nt = 0\ni = 0\nwhile t < T and i < n:\n    t += tasks[i]\n    i += 1\n\nprint(i)\n', '\nn, T = map(int, input().split())\ntasks = map(int, input().split())\n\nt = 0\ni = 0\nwhile t < T and i < n:\n    t += tasks[i]\n    i += 1\n\nprint(i)\n']
2022-04-12 02:17:40.314854 size on output set 1
2022-04-12 02:17:40.314858 size on input set 1
2022-04-12 02:17:43.097835 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\nt = 0\ni = 0\nwhile t < T and i < n:\n    t += tasks[i]\n    i += 1\n\nprint(i)\n"
    },
    {
      "index": 1,
      "text": "\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\nt = 0\ni = 0\nwhile t <= T and i < n:\n    t += tasks[i]\n    i += 1\n\nprint(i)\n"
    }
  ],
  "created": 1649744260,
  "object": "edit"
}
2022-04-12 02:17:43.098005 fix syntax errors 2 ['\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\nt = 0\ni = 0\nwhile t < T and i < n:\n    t += tasks[i]\n    i += 1\n\nprint(i)\n', '\nn, T = map(int, input().split())\ntasks = list(map(int, input().split()))\n\nt = 0\ni = 0\nwhile t <= T and i < n:\n    t += tasks[i]\n    i += 1\n\nprint(i)\n']
2022-04-12 02:17:43.098027 size on output set 2
2022-04-12 02:17:43.098034 num operations 2
2022-04-12 02:17:43.098038 size on input set 1
2022-04-12 02:17:45.045213 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, T = map(int, input().split())\ntimes = list(map(int, input().split()))\ncurr_time = 0\nnum_tasks = 0\n\nfor i in range(n):\n    if curr_time + times[i] <= T:\n        num_tasks += 1\n        curr_time += times[i]\n    else:\n        break\n\nprint(num_tasks)\n"
    },
    {
      "index": 1,
      "text": "\nn, T = map(int, input().split())\ntimes = list(map(int, input().split()))\n\ncurr_time = 0\nnum_tasks = 0\n\nfor i in range(n):\n    if curr_time + times[i] <= T:\n        num_tasks += 1\n        curr_time += times[i]\n    else:\n        break\n\nprint(num_tasks)\n"
    }
  ],
  "created": 1649744263,
  "object": "edit"
}
2022-04-12 02:17:45.045363 fix spelling mistakes 2 ['\n\nn, T = map(int, input().split())\ntimes = list(map(int, input().split()))\ncurr_time = 0\nnum_tasks = 0\n\nfor i in range(n):\n    if curr_time + times[i] <= T:\n        num_tasks += 1\n        curr_time += times[i]\n    else:\n        break\n\nprint(num_tasks)\n', '\nn, T = map(int, input().split())\ntimes = list(map(int, input().split()))\n\ncurr_time = 0\nnum_tasks = 0\n\nfor i in range(n):\n    if curr_time + times[i] <= T:\n        num_tasks += 1\n        curr_time += times[i]\n    else:\n        break\n\nprint(num_tasks)\n']
2022-04-12 02:17:45.045377 size on output set 2
2022-04-12 02:17:45.045382 size on input set 2
2022-04-12 02:17:46.950729 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#\n\nn, T = map(int, input().split())\ntimes = list(map(int, input().split()))\ncurr_time = 0\nnum_tasks = 0\n\nfor i in range(n):\n    if curr_time + times[i] <= T:\n        num_tasks += 1\n        curr_time += times[i]\n    else:\n        break\n\nprint(num_tasks)\n"
    },
    {
      "index": 1,
      "text": "\n\nn, T = map(int, input().split())\ntimes = list(map(int, input().split()))\ncurr_time = 0\nnum_tasks = 0\n\nfor i in range(n):\n    if curr_time + times[i] <= T:\n        num_tasks += 1\n        curr_time += times[i]\n    else:\n        break\n\n\nprint(num_tasks)\n"
    }
  ],
  "created": 1649744265,
  "object": "edit"
}
2022-04-12 02:17:46.950848 fix syntax errors 2 ['#\n\nn, T = map(int, input().split())\ntimes = list(map(int, input().split()))\ncurr_time = 0\nnum_tasks = 0\n\nfor i in range(n):\n    if curr_time + times[i] <= T:\n        num_tasks += 1\n        curr_time += times[i]\n    else:\n        break\n\nprint(num_tasks)\n', '\n\nn, T = map(int, input().split())\ntimes = list(map(int, input().split()))\ncurr_time = 0\nnum_tasks = 0\n\nfor i in range(n):\n    if curr_time + times[i] <= T:\n        num_tasks += 1\n        curr_time += times[i]\n    else:\n        break\n\n\nprint(num_tasks)\n']
2022-04-12 02:17:53.090711 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n, T = map(int, input().split())\ntimes = list(map(int, input().split()))\ncurr_time = 0\nnum_tasks = 0\nfor i in range(n):\n    if curr_time + times[i] <= T:\n        num_tasks += 1\n        curr_time += times[i]\n    else:\n        break\nprint(num_tasks)\n"
    },
    {
      "index": 1,
      "text": "\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\na.reverse()\n\nans = 0\nfor i in range(m):\n    if a[i] > 0:\n        ans += a[i]\n    else:\n        break \n\nprint(ans)\n"
    }
  ],
  "created": 1649744267,
  "object": "edit"
}
2022-04-12 02:17:53.091234 fix syntax errors 2 ['n, T = map(int, input().split())\ntimes = list(map(int, input().split()))\ncurr_time = 0\nnum_tasks = 0\nfor i in range(n):\n    if curr_time + times[i] <= T:\n        num_tasks += 1\n        curr_time += times[i]\n    else:\n        break\nprint(num_tasks)\n', '\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\na.reverse()\n\nans = 0\nfor i in range(m):\n    if a[i] > 0:\n        ans += a[i]\n    else:\n        break \n\nprint(ans)\n']
2022-04-12 02:17:53.091306 size on output set 4
2022-04-12 02:17:53.091326 num operations 2
2022-04-12 02:17:53.091333 size on input set 1
2022-04-12 02:17:55.018110 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, T = map(int, sys.stdin.readline().split())\n    times = map(int, sys.stdin.readline().split())\n    acc = 0\n    for i in range(n):\n        acc += times[i]\n        if acc > T:\n            print i\n            return\n    print n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, T = map(int, sys.stdin.readline().split())\n    times = map(int, sys.stdin.readline().split())\n    acc = 0\n    for i in range(n):\n        acc += times[i]\n        if acc > T:\n            print i\n            return\n    print n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649744273,
  "object": "edit"
}
2022-04-12 02:17:55.018252 fix spelling mistakes 2 ["\nimport sys\n\ndef main():\n    n, T = map(int, sys.stdin.readline().split())\n    times = map(int, sys.stdin.readline().split())\n    acc = 0\n    for i in range(n):\n        acc += times[i]\n        if acc > T:\n            print i\n            return\n    print n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, T = map(int, sys.stdin.readline().split())\n    times = map(int, sys.stdin.readline().split())\n    acc = 0\n    for i in range(n):\n        acc += times[i]\n        if acc > T:\n            print i\n            return\n    print n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 02:17:55.018284 size on output set 1
2022-04-12 02:17:55.018291 size on input set 1
2022-04-12 02:17:58.230719 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    n, T = map(int, input().split())\n    times = map(int, input().split())\n    acc = 0\n    for i in range(n):\n        acc += times[i]\n        if acc > T:\n            print i\n            return\n    print n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, T = map(int, sys.stdin.readline().split())\n    times = list(map(int, sys.stdin.readline().split()))\n    acc = 0\n    for i in range(n):\n        acc += times[i]\n        if acc > T:\n            print i\n            return\n    print n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649744275,
  "object": "edit"
}
2022-04-12 02:17:58.230879 fix syntax errors 2 ["import sys\n\ndef main():\n    n, T = map(int, input().split())\n    times = map(int, input().split())\n    acc = 0\n    for i in range(n):\n        acc += times[i]\n        if acc > T:\n            print i\n            return\n    print n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, T = map(int, sys.stdin.readline().split())\n    times = list(map(int, sys.stdin.readline().split()))\n    acc = 0\n    for i in range(n):\n        acc += times[i]\n        if acc > T:\n            print i\n            return\n    print n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 02:17:58.230898 size on output set 2
