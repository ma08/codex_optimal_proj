2022-04-11 21:11:19.171663 num operations 2
2022-04-11 21:11:19.171700 size on input set 1
2022-04-11 21:11:24.674996 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    input_value = str(sys.stdin.readline())\n    input_value = list(input_value.strip())\n    a = int(input_value[0])\n    b = int(input_value[1])\n    c = int(input_value[2])\n    d = int(input_value[3])\n    for op1 in [\"+\", \"-\"]:\n        for op2 in [\"+\", \"-\"]:\n            for op3 in [\"+\", \"-\"]:\n                if eval(str(a) + op1 + str(b) + op2 + str(c) + op3 + str(d)) == 7:\n                    print(str(a) + op1 + str(b) + op2 + str(c) + op3 + str(d) + \"=7\")\n                    break\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    input_val = str(sys.stdin.readline())\n    input_val = list(input_val.strip())\n    a = int(input_val[0])\n    b = int(input_val[1])\n    c = int(input_val[2])\n    d = int(input_val[3])\n    for op1 in [\"+\", \"-\"]:\n        for op2 in [\"+\", \"-\"]:\n            for op3 in [\"+\", \"-\"]:\n                if eval(str(a) + op1 + str(b) + op2 + str(c) + op3 + str(d)) == 7:\n                    print(str(a) + op1 + str(b) + op2 + str(c) + op3 + str(d) + \"=7\")\n                    break\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649725879,
  "object": "edit"
}
2022-04-11 21:11:24.675271 fix spelling mistakes 2 ['\n\nimport sys\n\ndef main():\n    input_value = str(sys.stdin.readline())\n    input_value = list(input_value.strip())\n    a = int(input_value[0])\n    b = int(input_value[1])\n    c = int(input_value[2])\n    d = int(input_value[3])\n    for op1 in ["+", "-"]:\n        for op2 in ["+", "-"]:\n            for op3 in ["+", "-"]:\n                if eval(str(a) + op1 + str(b) + op2 + str(c) + op3 + str(d)) == 7:\n                    print(str(a) + op1 + str(b) + op2 + str(c) + op3 + str(d) + "=7")\n                    break\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    input_val = str(sys.stdin.readline())\n    input_val = list(input_val.strip())\n    a = int(input_val[0])\n    b = int(input_val[1])\n    c = int(input_val[2])\n    d = int(input_val[3])\n    for op1 in ["+", "-"]:\n        for op2 in ["+", "-"]:\n            for op3 in ["+", "-"]:\n                if eval(str(a) + op1 + str(b) + op2 + str(c) + op3 + str(d)) == 7:\n                    print(str(a) + op1 + str(b) + op2 + str(c) + op3 + str(d) + "=7")\n                    break\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 21:11:24.675313 size on output set 2
2022-04-11 21:11:24.675320 size on input set 2
2022-04-11 21:11:35.687839 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    input_val = str(sys.stdin.readline()).strip()\n    a = int(input_val[0:1])\n    b = int(input_val[1:2])\n    c = int(input_val[2:3])\n    d = int(input_val[3:4])\n    for op1 in [\"+\", \"-\"]:  # 1\n        for op2 in [\"+\", \"-\"]:  # 2\n            for op3 in [\"+\", \"-\"]:  # 3\n                if eval(str(a) + op1 + str(b) + op2 + str(c) + op3 + str(d)) == 7:  # 4\n                    print(str(a) + op1 + str(b) + op2 + str(c) + op3 + str(d) + \"=7\")  # 5\n                    exit()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    input_val = list(str(sys.stdin.readline()).strip())\n    a = input_val[0]\n    b = input_val[1]\n    c = input_val[2]\n    d = input_val[3]\n    for op1 in [\"+\", \"-\"]:\n        for op2 in [\"+\", \"-\"]:\n            for op3 in [\"+\", \"-\"]:\n                if eval(a + op1 + b + op2 + c + op3 + d) == 7:\n                    print(a + op1 + b + op2 + c + op3 + d + \"=7\")\n                    break\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649725884,
  "object": "edit"
}
2022-04-11 21:11:35.688080 fix syntax errors 2 ['import sys\n\ndef main():\n    input_val = str(sys.stdin.readline()).strip()\n    a = int(input_val[0:1])\n    b = int(input_val[1:2])\n    c = int(input_val[2:3])\n    d = int(input_val[3:4])\n    for op1 in ["+", "-"]:  # 1\n        for op2 in ["+", "-"]:  # 2\n            for op3 in ["+", "-"]:  # 3\n                if eval(str(a) + op1 + str(b) + op2 + str(c) + op3 + str(d)) == 7:  # 4\n                    print(str(a) + op1 + str(b) + op2 + str(c) + op3 + str(d) + "=7")  # 5\n                    exit()\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    input_val = list(str(sys.stdin.readline()).strip())\n    a = input_val[0]\n    b = input_val[1]\n    c = input_val[2]\n    d = input_val[3]\n    for op1 in ["+", "-"]:\n        for op2 in ["+", "-"]:\n            for op3 in ["+", "-"]:\n                if eval(a + op1 + b + op2 + c + op3 + d) == 7:\n                    print(a + op1 + b + op2 + c + op3 + d + "=7")\n                    break\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 21:11:48.321085 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    input_value = sys.stdin.readline().strip()\n    a = int(input_value[0:1])\n    b = int(input_value[1:2])\n    c = int(input_value[2:3])\n    d = int(input_value[3:4])\n    for op1 in ['+', '-']:\n        for op2 in ['+', '-']:\n            for op3 in ['+', '-']:\n                if eval(str(a) + op1 + str(b) + op2 + str(c) + op3 + str(d)) == 7:\n                    print(str(a) + op1 + str(b) + op2 + str(c) + op3 + str(d) + '=7')\n                    exit()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    input_value = sys.stdin.readline()\n    input_value = input_value.strip()\n    a = int(input_value[0:1])\n    b = int(input_value[1:2])\n    c = int(input_value[2:3])\n    d = int(input_value[3:4])\n    for op1 in [\"+\", \"-\"]:  # 1\u756a\u76ee\u306e\u6f14\u7b97\u5b50\n        for op2 in [\"+\", \"-\"]:  # 2\u756a\u76ee\u306e\u6f14\u7b97\u5b50\n            for op3 in [\"+\", \"-\"]:  # 3\u756a\u76ee\u306e\u6f14\u7b97\u5b50\n                if eval(str(a) + op1 + str(b) + op2 + str(c) + op3 + str(d)) == 7:  # \u5f0f\u3092\u8a55\u4fa1\u3057\u30667\u306b\u306a\u308b\u304b\n                    print(str(a) + op1 + str(b) + op2 + str(c) + op3 + str(d) + \"=7\")  # 7\u306b\u306a\u308b\u5f0f\u3092\u51fa\u529b\n                    break  # \u30eb\u30fc\u30d7\u3092\u629c\u3051\u308b\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649725895,
  "object": "edit"
}
2022-04-11 21:11:48.321203 fix syntax errors 2 ['import sys\n\ndef main():\n    input_value = sys.stdin.readline().strip()\n    a = int(input_value[0:1])\n    b = int(input_value[1:2])\n    c = int(input_value[2:3])\n    d = int(input_value[3:4])\n    for op1 in [\'+\', \'-\']:\n        for op2 in [\'+\', \'-\']:\n            for op3 in [\'+\', \'-\']:\n                if eval(str(a) + op1 + str(b) + op2 + str(c) + op3 + str(d)) == 7:\n                    print(str(a) + op1 + str(b) + op2 + str(c) + op3 + str(d) + \'=7\')\n                    exit()\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    input_value = sys.stdin.readline()\n    input_value = input_value.strip()\n    a = int(input_value[0:1])\n    b = int(input_value[1:2])\n    c = int(input_value[2:3])\n    d = int(input_value[3:4])\n    for op1 in ["+", "-"]:  # 1番目の演算子\n        for op2 in ["+", "-"]:  # 2番目の演算子\n            for op3 in ["+", "-"]:  # 3番目の演算子\n                if eval(str(a) + op1 + str(b) + op2 + str(c) + op3 + str(d)) == 7:  # 式を評価して7になるか\n                    print(str(a) + op1 + str(b) + op2 + str(c) + op3 + str(d) + "=7")  # 7になる式を出力\n                    break  # ループを抜ける\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 21:11:48.321226 size on output set 4
2022-04-11 21:11:48.321239 num operations 2
2022-04-11 21:11:48.321243 size on input set 1
2022-04-11 21:11:53.459613 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom itertools import product\n\ndef main():\n    # get input\n    ABCD = input()\n    ABCD = list(ABCD)\n\n    # all possible combinations of + and -\n    # this is a list of tuples\n    signs = list(product([\"+\",\"-\"], repeat=3))\n\n    # for each combination of signs\n    for sign in signs:\n        # create the formula\n        result = ABCD[0] + sign[0] + ABCD[1] + sign[1] + ABCD[2] + sign[2] + ABCD[3]\n        # if the result is 7, print and exit\n        if eval(result) == 7:\n            print(result + \"=7\")\n            exit()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom itertools import product\n\ndef main():\n    #get input\n    ABCD = input()\n    ABCD = list(ABCD)\n\n    #all possible combinations of + and -\n    #this is a list of tuples\n    signs = list(product([\"+\",\"-\"], repeat=3))\n\n    #for each combination of signs\n    for sign in signs:\n        #create the formula and evaluate it\n        result = ABCD[0] + sign[0] + ABCD[1] + sign[1] + ABCD[2] + sign[2] + ABCD[3]\n        #if the result is 7, print and exit\n        if eval(result) == 7:\n            print(result + \"=7\")\n            exit()\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649725908,
  "object": "edit"
}
2022-04-11 21:11:53.460082 fix spelling mistakes 2 ['\n\nfrom itertools import product\n\ndef main():\n    # get input\n    ABCD = input()\n    ABCD = list(ABCD)\n\n    # all possible combinations of + and -\n    # this is a list of tuples\n    signs = list(product(["+","-"], repeat=3))\n\n    # for each combination of signs\n    for sign in signs:\n        # create the formula\n        result = ABCD[0] + sign[0] + ABCD[1] + sign[1] + ABCD[2] + sign[2] + ABCD[3]\n        # if the result is 7, print and exit\n        if eval(result) == 7:\n            print(result + "=7")\n            exit()\n\nif __name__ == "__main__":\n    main()\n', '\n\nfrom itertools import product\n\ndef main():\n    #get input\n    ABCD = input()\n    ABCD = list(ABCD)\n\n    #all possible combinations of + and -\n    #this is a list of tuples\n    signs = list(product(["+","-"], repeat=3))\n\n    #for each combination of signs\n    for sign in signs:\n        #create the formula and evaluate it\n        result = ABCD[0] + sign[0] + ABCD[1] + sign[1] + ABCD[2] + sign[2] + ABCD[3]\n        #if the result is 7, print and exit\n        if eval(result) == 7:\n            print(result + "=7")\n            exit()\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 21:11:53.460116 size on output set 2
2022-04-11 21:11:53.460123 size on input set 2
2022-04-11 21:11:58.815807 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom itertools import product\n\ndef main():\n    #get input\n    ABCD = input() #ABCD is a string\n    ABCD = list(ABCD)\n\n    #all possible combinations of + and -\n    #this is a list of tuples\n    signs = list(product([\"+\",\"-\"], repeat=3))\n\n    #for each combination of signs\n    for sign in signs:\n        #create the formula and evaluate it\n        result = ABCD[0] + sign[0] + ABCD[1] + sign[1] + ABCD[2] + sign[2] + ABCD[3] #result is a string\n        #if the result is 7, print and exit\n        if eval(result) == 7: #eval() returns an integer\n            print(result + \"=7\")\n            exit()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom itertools import product\n\ndef main():\n    #get input\n    ABCD = input().split()\n\n    #all possible combinations of + and -\n    #this is a list of tuples\n    signs = list(product([\"+\",\"-\"], repeat=3))\n\n    #for each combination of signs\n    for sign in signs:\n        #create the formula and evaluate it\n        result = ABCD[0] + sign[0] + ABCD[1] + sign[1] + ABCD[2] + sign[2] + ABCD[3]\n        #if the result is 7, print and exit\n        if eval(result) == 7:\n            print(result + \"=7\")\n            exit()\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649725913,
  "object": "edit"
}
2022-04-11 21:11:58.816066 fix syntax errors 2 ['\n\nfrom itertools import product\n\ndef main():\n    #get input\n    ABCD = input() #ABCD is a string\n    ABCD = list(ABCD)\n\n    #all possible combinations of + and -\n    #this is a list of tuples\n    signs = list(product(["+","-"], repeat=3))\n\n    #for each combination of signs\n    for sign in signs:\n        #create the formula and evaluate it\n        result = ABCD[0] + sign[0] + ABCD[1] + sign[1] + ABCD[2] + sign[2] + ABCD[3] #result is a string\n        #if the result is 7, print and exit\n        if eval(result) == 7: #eval() returns an integer\n            print(result + "=7")\n            exit()\n\nif __name__ == "__main__":\n    main()\n', '\n\nfrom itertools import product\n\ndef main():\n    #get input\n    ABCD = input().split()\n\n    #all possible combinations of + and -\n    #this is a list of tuples\n    signs = list(product(["+","-"], repeat=3))\n\n    #for each combination of signs\n    for sign in signs:\n        #create the formula and evaluate it\n        result = ABCD[0] + sign[0] + ABCD[1] + sign[1] + ABCD[2] + sign[2] + ABCD[3]\n        #if the result is 7, print and exit\n        if eval(result) == 7:\n            print(result + "=7")\n            exit()\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 21:12:04.485107 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom itertools import product\n\ndef main():\n    # get input\n    ABCD = input(\"\")\n    ABCD = list(ABCD)\n\n    # all possible combinations of + and -\n    # this is a list of tuples\n    signs = list(product([\"+\",\"-\"], repeat=3))\n\n    # for each combination of signs\n    for sign in signs:\n        # create the formula\n        result = ABCD[0] + sign[0] + ABCD[1] + sign[1] + ABCD[2] + sign[2] + ABCD[3]\n        # if the result is 7, print and exit\n        if eval(result) == 7:\n            print(result + \"=7\")\n            exit()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nfrom itertools import product\n\ndef main():\n    # get input\n    ABCD = input().split()\n    ABCD = list(ABCD)\n\n    # all possible combinations of + and -\n    # this is a list of tuples\n    signs = list(product([\"+\",\"-\"], repeat=3))\n\n    # for each combination of signs\n    for sign in signs:\n        # create the formula\n        result = ABCD[0] + sign[0] + ABCD[1] + sign[1] + ABCD[2] + sign[2] + ABCD[3]\n        # if the result is 7, print and exit\n        if eval(result) == 7:\n            print(result + \"=7\")\n            exit()\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649725919,
  "object": "edit"
}
2022-04-11 21:12:04.485769 fix syntax errors 2 ['\n\nfrom itertools import product\n\ndef main():\n    # get input\n    ABCD = input("")\n    ABCD = list(ABCD)\n\n    # all possible combinations of + and -\n    # this is a list of tuples\n    signs = list(product(["+","-"], repeat=3))\n\n    # for each combination of signs\n    for sign in signs:\n        # create the formula\n        result = ABCD[0] + sign[0] + ABCD[1] + sign[1] + ABCD[2] + sign[2] + ABCD[3]\n        # if the result is 7, print and exit\n        if eval(result) == 7:\n            print(result + "=7")\n            exit()\n\nif __name__ == "__main__":\n    main()\n', '\nfrom itertools import product\n\ndef main():\n    # get input\n    ABCD = input().split()\n    ABCD = list(ABCD)\n\n    # all possible combinations of + and -\n    # this is a list of tuples\n    signs = list(product(["+","-"], repeat=3))\n\n    # for each combination of signs\n    for sign in signs:\n        # create the formula\n        result = ABCD[0] + sign[0] + ABCD[1] + sign[1] + ABCD[2] + sign[2] + ABCD[3]\n        # if the result is 7, print and exit\n        if eval(result) == 7:\n            print(result + "=7")\n            exit()\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 21:12:04.485833 size on output set 4
