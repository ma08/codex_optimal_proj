2022-04-12 01:31:45.412523 num operations 2
2022-04-12 01:31:45.412561 size on input set 1
2022-04-12 01:31:47.529127 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\n\nwhile True:\n    sum_of_digits = sum([int(d) for d in list(str(n))])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\n\nwhile True:\n    sum_of_digits = sum([int(d) for d in list(str(n))])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n"
    }
  ],
  "created": 1649741505,
  "object": "edit"
}
2022-04-12 01:31:47.529295 fix spelling mistakes 2 ['\nn = int(input())\n\nwhile True:\n    sum_of_digits = sum([int(d) for d in list(str(n))])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n', '\nn = int(input())\n\nwhile True:\n    sum_of_digits = sum([int(d) for d in list(str(n))])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n']
2022-04-12 01:31:47.529317 size on output set 1
2022-04-12 01:31:47.529324 size on input set 1
2022-04-12 01:31:50.648321 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\n\nwhile True:\n    sum_of_digits = sum([int(d) for d in list(str(n))])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n"
    },
    {
      "index": 1,
      "text": "n = int(input())\n\nwhile True:\n    sum_of_digits = sum([int(d) for d in str(n)])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n"
    }
  ],
  "created": 1649741507,
  "object": "edit"
}
2022-04-12 01:31:50.648526 fix syntax errors 2 ['n = int(input())\n\nwhile True:\n    sum_of_digits = sum([int(d) for d in list(str(n))])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n', 'n = int(input())\n\nwhile True:\n    sum_of_digits = sum([int(d) for d in str(n)])\n    if n % sum_of_digits == 0:\n        print(n)\n        break\n    else:\n        n += 1\n']
2022-04-12 01:31:50.648551 size on output set 2
2022-04-12 01:31:50.648568 num operations 2
2022-04-12 01:31:50.648575 size on input set 1
2022-04-12 01:31:54.985121 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef isHarshad(n): # isHarshad is a function that checks if the number is Harshad\n    n = str(n)\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef nextHarshad(n): # nextHarshad is a function that finds the next Harshad number\n    n += 1\n    while not isHarshad(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline()) # read the input\n    print(nextHarshad(n))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef isHarshad(n): \n    n = str(n)\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef nextHarshad(n):\n    n += 1\n    while not isHarshad(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(nextHarshad(n))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649741510,
  "object": "edit"
}
2022-04-12 01:31:54.985566 fix spelling mistakes 2 ['\n\nimport sys\n\ndef isHarshad(n): # isHarshad is a function that checks if the number is Harshad\n    n = str(n)\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef nextHarshad(n): # nextHarshad is a function that finds the next Harshad number\n    n += 1\n    while not isHarshad(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline()) # read the input\n    print(nextHarshad(n))\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef isHarshad(n): \n    n = str(n)\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef nextHarshad(n):\n    n += 1\n    while not isHarshad(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(nextHarshad(n))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 01:31:54.985594 size on output set 2
2022-04-12 01:31:54.985600 size on input set 2
2022-04-12 01:31:58.518331 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\n\ndef isHarshad(n):\n    n = str(n)\n\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef nextHarshad(n):\n    n += 1\n    while not isHarshad(n):\n        n += 1\n    return n\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(nextHarshad(n))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\n\ndef isHarshad(n):\n    n = str(n)\n\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef nextHarshad(n):\n    n += 1\n    while not isHarshad(n):\n        n += 1\n    return n\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(nextHarshad(n))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649741515,
  "object": "edit"
}
2022-04-12 01:31:58.518472 fix syntax errors 2 ['\nimport sys\n\n\ndef isHarshad(n):\n    n = str(n)\n\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef nextHarshad(n):\n    n += 1\n    while not isHarshad(n):\n        n += 1\n    return n\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(nextHarshad(n))\n\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\n\ndef isHarshad(n):\n    n = str(n)\n\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef nextHarshad(n):\n    n += 1\n    while not isHarshad(n):\n        n += 1\n    return n\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(nextHarshad(n))\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 01:32:03.270766 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef isHarshad(n):\n    n = str(n)\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef nextHarshad(n):\n    n += 1\n    while not isHarshad(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(nextHarshad(n))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef isHarshad(n): # isHarshad is a function that checks if the number is Harshad\n    n = str(n)\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef nextHarshad(n): # nextHarshad is a function that finds the next Harshad number\n    n += 1\n    while not isHarshad(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline()) # read the input\n    print(nextHarshad(n))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649741518,
  "object": "edit"
}
2022-04-12 01:32:03.271023 fix syntax errors 2 ['\n\nimport sys\n\ndef isHarshad(n):\n    n = str(n)\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef nextHarshad(n):\n    n += 1\n    while not isHarshad(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(nextHarshad(n))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef isHarshad(n): # isHarshad is a function that checks if the number is Harshad\n    n = str(n)\n    return int(n) % sum([int(i) for i in n]) == 0\n\ndef nextHarshad(n): # nextHarshad is a function that finds the next Harshad number\n    n += 1\n    while not isHarshad(n):\n        n += 1\n    return n\n\ndef main():\n    n = int(sys.stdin.readline()) # read the input\n    print(nextHarshad(n))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 01:32:03.271048 size on output set 3
2022-04-12 01:32:03.271080 num operations 2
2022-04-12 01:32:03.271085 size on input set 1
2022-04-12 01:32:06.145245 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef sum_digits(n):\n    return sum(int(x) for x in str(n))\n\ndef main():\n    n = int(input())\n    while n % sum_digits(n) != 0:\n        n += 1\n    print(n)\n\nif __name__ == '__main__':\n\n\n\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef sum_digits(n):\n    return sum(int(x) for x in str(n))\n\ndef main():\n    n = int(input())\n    while n % sum_digits(n) != 0: # if the number is not divisible by the sum of its digits\n        n += 1\n    print(n)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649741523,
  "object": "edit"
}
2022-04-12 01:32:06.145609 fix spelling mistakes 2 ["\n\ndef sum_digits(n):\n    return sum(int(x) for x in str(n))\n\ndef main():\n    n = int(input())\n    while n % sum_digits(n) != 0:\n        n += 1\n    print(n)\n\nif __name__ == '__main__':\n\n\n\n    main()\n", "\n\ndef sum_digits(n):\n    return sum(int(x) for x in str(n))\n\ndef main():\n    n = int(input())\n    while n % sum_digits(n) != 0: # if the number is not divisible by the sum of its digits\n        n += 1\n    print(n)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 01:32:06.145660 size on output set 2
2022-04-12 01:32:06.145670 size on input set 2
2022-04-12 01:32:09.466736 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef sum_digits(n):\n    return sum(int(x) for x in str(n))\n\ndef main():\n    n = int(input())\n    while n % sum_digits(n) != 0:\n        n += 1\n    print(n)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef sum_digits(n):\n    return sum(int(x) for x in str(n)) # sum of digits\n\ndef main():\n    n = int(input())\n    while n % sum_digits(n) != 0: # if the number is not divisible by the sum of its digits\n        n += 1\n    print(n)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649741526,
  "object": "edit"
}
2022-04-12 01:32:09.466928 fix syntax errors 2 ["\n\ndef sum_digits(n):\n    return sum(int(x) for x in str(n))\n\ndef main():\n    n = int(input())\n    while n % sum_digits(n) != 0:\n        n += 1\n    print(n)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef sum_digits(n):\n    return sum(int(x) for x in str(n)) # sum of digits\n\ndef main():\n    n = int(input())\n    while n % sum_digits(n) != 0: # if the number is not divisible by the sum of its digits\n        n += 1\n    print(n)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 01:32:53.692598 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef sum_digits(n):\n    return sum(int(x) for x in str(n))\n\ndef main():\n    n = int(input())\n    while n % sum_digits(n) != 0:\n        n += 1\n    print(n)\n\nif __name__ == '__main__':\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef sum_digits(n):\n    return sum(int(x) for x in str(n)) \n\ndef main():\n    n = int(input())\n    while n % sum_digits(n) != 0:\n        n += 1\n    print(n)\n\nif __name__ == '__main__':\n\n\n\n    main()\n"
    }
  ],
  "created": 1649741529,
  "object": "edit"
}
2022-04-12 01:32:53.692773 fix syntax errors 2 ["\n\ndef sum_digits(n):\n    return sum(int(x) for x in str(n))\n\ndef main():\n    n = int(input())\n    while n % sum_digits(n) != 0:\n        n += 1\n    print(n)\n\nif __name__ == '__main__':\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    main()\n", "\n\ndef sum_digits(n):\n    return sum(int(x) for x in str(n)) \n\ndef main():\n    n = int(input())\n    while n % sum_digits(n) != 0:\n        n += 1\n    print(n)\n\nif __name__ == '__main__':\n\n\n\n    main()\n"]
2022-04-12 01:32:53.692793 size on output set 4
2022-04-12 01:32:53.692805 num operations 2
2022-04-12 01:32:53.692810 size on input set 1
2022-04-12 01:32:58.858609 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "#\n\nn = int(input())\n\ndef sum_digits(n):\n    s = 0\n    while n:\n        s += n % 10\n        n //= 10\n    return s\n\nwhile n % sum_digits(n) != 0:\n    n += 1\nprint(n)\n"
    },
    {
      "index": 1,
      "text": "\ndef sum_digits(n): \n    s = 0 \n    while n: \n        s += n % 10 \n        n //= 10 \n    return s \nn = int(input()) \nwhile n % sum_digits(n) != 0: \n    n += 1 \nprint(n) \n"
    }
  ],
  "created": 1649741573,
  "object": "edit"
}
2022-04-12 01:32:58.858944 fix spelling mistakes 2 ['#\n\nn = int(input())\n\ndef sum_digits(n):\n    s = 0\n    while n:\n        s += n % 10\n        n //= 10\n    return s\n\nwhile n % sum_digits(n) != 0:\n    n += 1\nprint(n)\n', '\ndef sum_digits(n): \n    s = 0 \n    while n: \n        s += n % 10 \n        n //= 10 \n    return s \nn = int(input()) \nwhile n % sum_digits(n) != 0: \n    n += 1 \nprint(n) \n']
2022-04-12 01:32:58.858971 size on output set 2
2022-04-12 01:32:58.858976 size on input set 2
2022-04-12 01:33:04.397978 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "def sum_digits(n):\n    s = 0\n    while n:\n        s += n % 10\n        n //= 10\n    return s\nn = int(input())\nwhile n % sum_digits(n) != 0:\n    n += 1\nprint(n)\n"
    },
    {
      "index": 1,
      "text": "\ndef sum_digits(n):\n    s = 0\n    while n:\n        s += n % 10\n        n //= 10\n    return s\nn = int(input())\nwhile n % sum_digits(n) != 0:\n    n += 1\nprint(n)\n"
    }
  ],
  "created": 1649741579,
  "object": "edit"
}
2022-04-12 01:33:04.398156 fix syntax errors 2 ['def sum_digits(n):\n    s = 0\n    while n:\n        s += n % 10\n        n //= 10\n    return s\nn = int(input())\nwhile n % sum_digits(n) != 0:\n    n += 1\nprint(n)\n', '\ndef sum_digits(n):\n    s = 0\n    while n:\n        s += n % 10\n        n //= 10\n    return s\nn = int(input())\nwhile n % sum_digits(n) != 0:\n    n += 1\nprint(n)\n']
2022-04-12 01:33:06.508416 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nn = int(input())\n\ndef sum_digits(n):\n    s = 0\n    while n:\n        s += n % 10\n        n //= 10\n    return s\n\nwhile n % sum_digits(n) != 0:\n    n += 1\nprint(n)\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nn = int(input())\n\ndef sum_digits(n):\n    s = 0\n    while n:\n        s += n % 10\n        n //= 10\n    return s\n\nwhile n % sum_digits(n) != 0:\n    n += 1\nprint(n)\n"
    }
  ],
  "created": 1649741584,
  "object": "edit"
}
2022-04-12 01:33:06.508823 fix syntax errors 2 ['#!/usr/bin/env python3\n\nn = int(input())\n\ndef sum_digits(n):\n    s = 0\n    while n:\n        s += n % 10\n        n //= 10\n    return s\n\nwhile n % sum_digits(n) != 0:\n    n += 1\nprint(n)\n', '#!/usr/bin/env python3\n\nn = int(input())\n\ndef sum_digits(n):\n    s = 0\n    while n:\n        s += n % 10\n        n //= 10\n    return s\n\nwhile n % sum_digits(n) != 0:\n    n += 1\nprint(n)\n']
2022-04-12 01:33:06.508879 size on output set 3
2022-04-12 01:33:06.508895 num operations 2
2022-04-12 01:33:06.508901 size on input set 1
2022-04-12 01:33:08.478611 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\n\nwhile True:\n    n += 1\n    if n % sum([int(i) for i in str(n)]) == 0:\n        print(n)\n        break\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\n\nwhile True:\n    n += 1\n    if n % sum([int(i) for i in str(n)]) == 0:\n        print(n)\n        break\n"
    }
  ],
  "created": 1649741586,
  "object": "edit"
}
2022-04-12 01:33:08.478929 fix spelling mistakes 2 ['\nn = int(input())\n\nwhile True:\n    n += 1\n    if n % sum([int(i) for i in str(n)]) == 0:\n        print(n)\n        break\n', '\nn = int(input())\n\nwhile True:\n    n += 1\n    if n % sum([int(i) for i in str(n)]) == 0:\n        print(n)\n        break\n']
2022-04-12 01:33:08.478972 size on output set 1
2022-04-12 01:33:08.478982 size on input set 1
2022-04-12 01:33:11.489098 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\n\nwhile True:\n    n += 1\n    if n % sum(int(i) for i in str(n)) == 0:\n        print(n)\n        break\n"
    },
    {
      "index": 1,
      "text": "n = int(input())\n\nwhile True:\n    n += 1\n    if n % sum(int(i) for i in str(n)) == 0:\n        print(n)\n        break\n"
    }
  ],
  "created": 1649741588,
  "object": "edit"
}
2022-04-12 01:33:11.489202 fix syntax errors 2 ['n = int(input())\n\nwhile True:\n    n += 1\n    if n % sum(int(i) for i in str(n)) == 0:\n        print(n)\n        break\n', 'n = int(input())\n\nwhile True:\n    n += 1\n    if n % sum(int(i) for i in str(n)) == 0:\n        print(n)\n        break\n']
2022-04-12 01:33:11.489216 size on output set 1
2022-04-12 01:33:11.489222 num operations 2
2022-04-12 01:33:11.489225 size on input set 1
2022-04-12 01:33:14.510712 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Get the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\n\nn = int(input())\n\n# Loop until we find a Harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n"
    },
    {
      "index": 1,
      "text": "\n\n# Gets the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\n\nn = int(input())\n\n# Loop until we find a Harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n"
    }
  ],
  "created": 1649741591,
  "object": "edit"
}
2022-04-12 01:33:14.510884 fix spelling mistakes 2 ['\n\n# Get the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\n\nn = int(input())\n\n# Loop until we find a Harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n', '\n\n# Gets the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\n\nn = int(input())\n\n# Loop until we find a Harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n']
2022-04-12 01:33:14.510902 size on output set 2
2022-04-12 01:33:14.510908 size on input set 2
2022-04-12 01:33:16.858849 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Gets the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\nn = int(input())\n\n# Loop until we find a Harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\n# Gets the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\n\nn = int(input())\n\n# Loop until we find a Harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n"
    }
  ],
  "created": 1649741594,
  "object": "edit"
}
2022-04-12 01:33:16.859055 fix syntax errors 2 ['\n# Gets the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\nn = int(input())\n\n# Loop until we find a Harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n', '#!/usr/bin/env python3\n\n# Gets the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\n\nn = int(input())\n\n# Loop until we find a Harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n']
2022-04-12 01:33:19.230778 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Get the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\n\nn = int(input())\n\n# Loop until we find a Harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n"
    },
    {
      "index": 1,
      "text": "\n# Get the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\nn = int(input())\n\n# Loop until we find a Harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\nprint(n)\n"
    }
  ],
  "created": 1649741597,
  "object": "edit"
}
2022-04-12 01:33:19.230962 fix syntax errors 2 ['\n# Get the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\n\nn = int(input())\n\n# Loop until we find a Harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\n\nprint(n)\n', '\n# Get the sum of the digits of a number\ndef sum_digits(n):\n    r = 0\n    while n:\n        r, n = r + n % 10, n // 10\n    return r\nn = int(input())\n\n# Loop until we find a Harshad number\nwhile True:\n    # If the number is divisible by the sum of its digits, we found it\n    if n % sum_digits(n) == 0:\n        break\n    else:\n        n += 1\nprint(n)\n']
2022-04-12 01:33:19.230989 size on output set 4
2022-04-12 01:33:19.231002 num operations 2
2022-04-12 01:33:19.231010 size on input set 1
2022-04-12 01:33:22.580388 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef sum_digits(n):\n    sum = 0\n    while n > 0:\n        sum += n % 10\n        n //= 10\n    return sum\n\nn = int(input())\n\nwhile n % sum_digits(n) != 0:\n    n += 1\n\nprint(n)\n"
    },
    {
      "index": 1,
      "text": "\n\ndef sum_digits(n):\n    sum = 0\n    while n > 0:\n        sum += n % 10\n        n //= 10\n    return sum\n\nn = int(input())\n\nwhile n % sum_digits(n) != 0:\n    n += 1\n\nprint(n)\n"
    }
  ],
  "created": 1649741599,
  "object": "edit"
}
2022-04-12 01:33:22.580571 fix spelling mistakes 2 ['\n\ndef sum_digits(n):\n    sum = 0\n    while n > 0:\n        sum += n % 10\n        n //= 10\n    return sum\n\nn = int(input())\n\nwhile n % sum_digits(n) != 0:\n    n += 1\n\nprint(n)\n', '\n\ndef sum_digits(n):\n    sum = 0\n    while n > 0:\n        sum += n % 10\n        n //= 10\n    return sum\n\nn = int(input())\n\nwhile n % sum_digits(n) != 0:\n    n += 1\n\nprint(n)\n']
2022-04-12 01:33:22.580591 size on output set 1
2022-04-12 01:33:22.580595 size on input set 1
2022-04-12 01:33:29.154723 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n\n    while n % sum_digits(n) != 0:\n        n += 1\n\n    print(n)\n\n\ndef sum_digits(n):\n    return sum(map(int, str(n)))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef sum_digits(n):\n    sum = 0\n    while n > 0:\n        sum += n % 10\n        n //= 10\n    return sum\n\nn = int(input())\n\nwhile n % sum_digits(n) != 0:\n    n += 1\n\nprint(n)\n"
    }
  ],
  "created": 1649741602,
  "object": "edit"
}
2022-04-12 01:33:29.155021 fix syntax errors 2 ["\n\ndef main():\n    n = int(input())\n\n    while n % sum_digits(n) != 0:\n        n += 1\n\n    print(n)\n\n\ndef sum_digits(n):\n    return sum(map(int, str(n)))\n\n\nif __name__ == '__main__':\n    main()\n", '\ndef sum_digits(n):\n    sum = 0\n    while n > 0:\n        sum += n % 10\n        n //= 10\n    return sum\n\nn = int(input())\n\nwhile n % sum_digits(n) != 0:\n    n += 1\n\nprint(n)\n']
2022-04-12 01:33:29.155059 size on output set 2
2022-04-12 01:33:29.155073 num operations 2
2022-04-12 01:33:29.155077 size on input set 1
2022-04-12 01:33:31.677985 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nn = int(sys.stdin.readline().strip())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\nprint(n)\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nn = int(sys.stdin.readline().strip())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\nprint(n)\n"
    }
  ],
  "created": 1649741609,
  "object": "edit"
}
2022-04-12 01:33:31.678089 fix spelling mistakes 2 ['\nimport sys\nn = int(sys.stdin.readline().strip())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\nprint(n)\n', '\nimport sys\nn = int(sys.stdin.readline().strip())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\nprint(n)\n']
2022-04-12 01:33:31.678100 size on output set 1
2022-04-12 01:33:31.678104 size on input set 1
2022-04-12 01:33:33.692759 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\nn = int(sys.stdin.readline().strip())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\nprint(n)\n"
    },
    {
      "index": 1,
      "text": "import sys\nn = int(sys.stdin.readline().strip())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\nprint(n)\n"
    }
  ],
  "created": 1649741611,
  "object": "edit"
}
2022-04-12 01:33:33.692945 fix syntax errors 2 ['import sys\nn = int(sys.stdin.readline().strip())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\nprint(n)\n', 'import sys\nn = int(sys.stdin.readline().strip())\n\nwhile True:\n    n += 1\n    sum_digits = 0\n    for digit in str(n):\n        sum_digits += int(digit)\n    if n % sum_digits == 0:\n        break\nprint(n)\n']
2022-04-12 01:33:33.692969 size on output set 1
