2022-04-09 19:36:09.942007 """
Little girl Tanya climbs the stairs inside a multi-storey building. Every time Tanya climbs a stairway, she starts counting steps from $1$ to the number of steps in this stairway. She speaks every number aloud. For example, if she climbs two stairways, the first of which contains $3$ steps, and the second contains $4$ steps, she will pronounce the numbers $1, 2, 3, 1, 2, 3, 4$.

You are given all the numbers pronounced by Tanya. How many stairways did she climb? Also, output the number of steps in each stairway.

The given sequence will be a valid sequence that Tanya could have pronounced when climbing one or more stairways.


-----Input-----

The first line contains $n$ ($1 \le n \le 1000$) — the total number of numbers pronounced by Tanya.

The second line contains integers $a_1, a_2, \dots, a_n$ ($1 \le a_i \le 1000$) — all the numbers Tanya pronounced while climbing the stairs, in order from the first to the last pronounced number. Passing a stairway with $x$ steps, she will pronounce the numbers $1, 2, \dots, x$ in that order.

The given sequence will be a valid sequence that Tanya could have pronounced when climbing one or more stairways.


-----Output-----

In the first line, output $t$ — the number of stairways that Tanya climbed. In the second line, output $t$ numbers — the number of steps in each stairway she climbed. Write the numbers in the correct order of passage of the stairways.


-----Examples-----
Input
7
1 2 3 1 2 3 4

Output
2
3 4 
Input
4
1 1 1 1

Output
4
1 1 1 1 
Input
5
1 2 3 4 5

Output
1
5 
Input
5
1 2 1 2 1

Output
3
2 2 1
"""
2022-04-09 19:36:09.942029 --------------------------
2022-04-09 19:36:21.652506 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef stairways(nums):\n    count = 1\n    stairways = []\n    for i in range(1, len(nums)):\n        if nums[i-1] != nums[i]:\n            stairways.append(count)\n            count = 1\n        else:\n            count += 1\n    stairways.append(count)\n    return len(stairways), stairways\n\ndef main():\n    n = int(input())\n    nums = [int(x) for x in input().split()]\n    print(*stairways(nums))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = sys.stdin.readline().split()\n    a = [int(x) for x in a]\n    i = 0\n    stairways = 0\n    steps = []\n    while i < n:\n        stairways += 1\n        j = i\n        while j < n and a[j] == a[i]:\n            j += 1\n        steps.append(a[i])\n        i = j\n    print(stairways)\n    print(*steps)\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1649547370,
  "id": "cmpl-4vEugkCYxeMCyfEmqlXImXP9jsh2d",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 19:36:21.652713 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef stairways(nums):\n    count = 1\n    stairways = []\n    for i in range(1, len(nums)):\n        if nums[i-1] != nums[i]:\n            stairways.append(count)\n            count = 1\n        else:\n            count += 1\n    stairways.append(count)\n    return len(stairways), stairways\n\ndef main():\n    n = int(input())\n    nums = [int(x) for x in input().split()]\n    print(*stairways(nums))\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-09 19:36:21.652752 REASON stop
2022-04-09 19:36:21.653849 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = sys.stdin.readline().split()\n    a = [int(x) for x in a]\n    i = 0\n    stairways = 0\n    steps = []\n    while i < n:\n        stairways += 1\n        j = i\n        while j < n and a[j] == a[i]:\n            j += 1\n        steps.append(a[i])\n        i = j\n    print(stairways)\n    print(*steps)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 19:36:21.653931 REASON stop
