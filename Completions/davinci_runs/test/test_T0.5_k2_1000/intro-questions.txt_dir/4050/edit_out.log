2022-04-11 15:43:13.687958 num operations 2
2022-04-11 15:43:13.687979 size on input set 1
2022-04-11 15:43:24.618540 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]  # sums[i] = sum(a[0], a[1], ..., a[i-1])\n    for i in a:\n        sums.append(sums[-1] + i)  # sums[i] = sum(a[0], a[1], ..., a[i-1])\n    sums.append(sums[-1])  # sums[n] = sum(a[0], a[1], ..., a[n-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])  # blocks[i] = [i, j, sum(a[i], a[i+1], ..., a[j-1])]\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])  # blocks[i] = [i, j, sum(a[i], a[i+1], ..., a[j-1])]\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])  # res[i] = [i, j]\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]  # \u0441\u0443\u043c\u043c\u0430 \u043e\u0442 0 \u0434\u043e i\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []  # \u0431\u043b\u043e\u043a\u0438 [\u043d\u0430\u0447\u0430\u043b\u043e, \u043a\u043e\u043d\u0435\u0446, \u0441\u0443\u043c\u043c\u0430]\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []  # \u043e\u0442\u0432\u0435\u0442\n    while len(blocks) > 0:\n        i = blocks[0][0]  # \u043d\u0430\u0447\u0430\u043b\u043e \u0431\u043b\u043e\u043a\u0430\n        j = blocks[0][1]  # \u043a\u043e\u043d\u0435\u0446 \u0431\u043b\u043e\u043a\u0430\n        blocks.pop(0)\n        res.append([i, j])  # \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0431\u043b\u043e\u043a \u0432 \u043e\u0442\u0432\u0435\u0442\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:  # \u0435\u0441\u043b\u0438 \u043d\u0430\u0447\u0430\u043b\u043e \u0431\u043b\u043e\u043a\u0430 \u043f\u043e\u043f\u0430\u0434\u0430\u0435\u0442 \u0432 \u043d\u0430\u0448 \u0431\u043b\u043e\u043a\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n"
    }
  ],
  "created": 1649706194,
  "object": "edit"
}
2022-04-11 15:43:24.618818 fix spelling mistakes 2 ['\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]  # sums[i] = sum(a[0], a[1], ..., a[i-1])\n    for i in a:\n        sums.append(sums[-1] + i)  # sums[i] = sum(a[0], a[1], ..., a[i-1])\n    sums.append(sums[-1])  # sums[n] = sum(a[0], a[1], ..., a[n-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])  # blocks[i] = [i, j, sum(a[i], a[i+1], ..., a[j-1])]\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])  # blocks[i] = [i, j, sum(a[i], a[i+1], ..., a[j-1])]\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])  # res[i] = [i, j]\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n', '\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]  # сумма от 0 до i\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []  # блоки [начало, конец, сумма]\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []  # ответ\n    while len(blocks) > 0:\n        i = blocks[0][0]  # начало блока\n        j = blocks[0][1]  # конец блока\n        blocks.pop(0)\n        res.append([i, j])  # добавляем блок в ответ\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:  # если начало блока попадает в наш блок\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n']
2022-04-11 15:43:24.618893 size on output set 2
2022-04-11 15:43:24.618904 size on input set 2
2022-04-11 15:43:35.935613 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]  # \u0441\u0443\u043c\u043c\u0430 \u043e\u0442 0 \u0434\u043e i\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []  # \u0431\u043b\u043e\u043a\u0438 [\u043d\u0430\u0447\u0430\u043b\u043e, \u043a\u043e\u043d\u0435\u0446, \u0441\u0443\u043c\u043c\u0430]\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []  # \u043e\u0442\u0432\u0435\u0442\n    while len(blocks) > 0:\n        i = blocks[0][0]  # \u043d\u0430\u0447\u0430\u043b\u043e \u0431\u043b\u043e\u043a\u0430\n        j = blocks[0][1]  # \u043a\u043e\u043d\u0435\u0446 \u0431\u043b\u043e\u043a\u0430\n        blocks.pop(0)\n        res.append([i, j])  # \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0431\u043b\u043e\u043a \u0432 \u043e\u0442\u0432\u0435\u0442\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:  # \u0435\u0441\u043b\u0438 \u043d\u0430\u0447\u0430\u043b\u043e \u0431\u043b\u043e\u043a\u0430 \u043f\u043e\u043f\u0430\u0434\u0430\u0435\u0442 \u0432 \u043d\u0430\u0448 \u0431\u043b\u043e\u043a\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]  # \u0441\u0443\u043c\u043c\u0430 \u043e\u0442 0 \u0434\u043e i\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []  # \u0431\u043b\u043e\u043a\u0438 [\u043d\u0430\u0447\u0430\u043b\u043e, \u043a\u043e\u043d\u0435\u0446, \u0441\u0443\u043c\u043c\u0430]\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []  # \u043e\u0442\u0432\u0435\u0442\n    while len(blocks) > 0:\n        i = blocks[0][0]  # \u043d\u0430\u0447\u0430\u043b\u043e \u0431\u043b\u043e\u043a\u0430\n        j = blocks[0][1]  # \u043a\u043e\u043d\u0435\u0446 \u0431\u043b\u043e\u043a\u0430\n        blocks.pop(0)\n        res.append([i, j])  # \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0431\u043b\u043e\u043a \u0432 \u043e\u0442\u0432\u0435\u0442\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:  # \u0435\u0441\u043b\u0438 \u043d\u0430\u0447\u0430\u043b\u043e \u0431\u043b\u043e\u043a\u0430 \u043f\u043e\u043f\u0430\u0434\u0430\u0435\u0442 \u0432 \u043d\u0430\u0448 \u0431\u043b\u043e\u043a\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n"
    }
  ],
  "created": 1649706204,
  "object": "edit"
}
2022-04-11 15:43:35.935784 fix syntax errors 2 ['\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]  # сумма от 0 до i\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []  # блоки [начало, конец, сумма]\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []  # ответ\n    while len(blocks) > 0:\n        i = blocks[0][0]  # начало блока\n        j = blocks[0][1]  # конец блока\n        blocks.pop(0)\n        res.append([i, j])  # добавляем блок в ответ\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:  # если начало блока попадает в наш блок\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n', '\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]  # сумма от 0 до i\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []  # блоки [начало, конец, сумма]\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []  # ответ\n    while len(blocks) > 0:\n        i = blocks[0][0]  # начало блока\n        j = blocks[0][1]  # конец блока\n        blocks.pop(0)\n        res.append([i, j])  # добавляем блок в ответ\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:  # если начало блока попадает в наш блок\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n']
2022-04-11 15:43:47.991005 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]  # sums[i] = sum(a[0], a[1], ..., a[i - 1])\n    for i in a:\n        sums.append(sums[-1] + i)  # sums[i] = sum(a[0], a[1], ..., a[i - 1])\n    sums.append(sums[-1])  # sums[n] = sum(a[0], a[1], ..., a[n - 1])\n    blocks = []\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            blocks.append([i, j, sums[j] - sums[i]])  # blocks[i] = [i, j, sum(a[i], a[i + 1], ..., a[j - 1])]\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])  # blocks[i] = [i, j, sum(a[i], a[i + 1], ..., a[j - 1])]\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])  # res[i] = [i, j]\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]  # sums[i] = sum(a[0], a[1], ..., a[i-1]) for i in range(n+1)\n    for i in a:\n        sums.append(sums[-1] + i)  # sums[i] = sum(a[0], a[1], ..., a[i-1]) for i in range(n)\n    sums.append(sums[-1])  # sums[n] = sum(a[0], a[1], ..., a[n-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])  # blocks[i] = [i, j, sum(a[i], a[i+1], ..., a[j-1])] for i in range(n)\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])  # blocks[i] = [i, j, sum(a[i], a[i+1], ..., a[j-1])] for i in range(n)\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])  # res[i] = [i, j]\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n"
    }
  ],
  "created": 1649706216,
  "object": "edit"
}
2022-04-11 15:43:47.991171 fix syntax errors 2 ['\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]  # sums[i] = sum(a[0], a[1], ..., a[i - 1])\n    for i in a:\n        sums.append(sums[-1] + i)  # sums[i] = sum(a[0], a[1], ..., a[i - 1])\n    sums.append(sums[-1])  # sums[n] = sum(a[0], a[1], ..., a[n - 1])\n    blocks = []\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            blocks.append([i, j, sums[j] - sums[i]])  # blocks[i] = [i, j, sum(a[i], a[i + 1], ..., a[j - 1])]\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])  # blocks[i] = [i, j, sum(a[i], a[i + 1], ..., a[j - 1])]\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])  # res[i] = [i, j]\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n', '\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]  # sums[i] = sum(a[0], a[1], ..., a[i-1]) for i in range(n+1)\n    for i in a:\n        sums.append(sums[-1] + i)  # sums[i] = sum(a[0], a[1], ..., a[i-1]) for i in range(n)\n    sums.append(sums[-1])  # sums[n] = sum(a[0], a[1], ..., a[n-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])  # blocks[i] = [i, j, sum(a[i], a[i+1], ..., a[j-1])] for i in range(n)\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])  # blocks[i] = [i, j, sum(a[i], a[i+1], ..., a[j-1])] for i in range(n)\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])  # res[i] = [i, j]\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n']
2022-04-11 15:43:47.991209 size on output set 4
2022-04-11 15:43:47.991228 num operations 2
2022-04-11 15:43:47.991234 size on input set 1
2022-04-11 15:43:58.090548 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef find_blocks(a, s):\n    n = len(a)\n    d = {0: [-1]}\n    for i in range(n):\n        s += a[i]\n        if s not in d:\n            d[s] = [i]\n        else:\n            d[s].append(i)\n    return d\n\ndef find_subarrays(d):\n    res = 0\n    for v in d.values():\n        n = len(v)\n        res += n*(n-1)//2\n    return res\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef find_blocks(a, b):\n    n = len(a)\n    d = {0: [(0, -1)]}\n    s = 0\n    for i in range(n):\n        s += a[i]\n        if s not in d:\n            d[s] = [(i, i)]\n        else:\n            d[s].append((i, i))\n    res = []\n    for i in range(n-1):\n        for j in range(i+1, n):\n            s = sum(a[i:j])\n            if s in d and d[s][0][1] < i:\n                res.append((i, j-1))\n    return res\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    b = [int(s) for s in input().split()]\n    res = find_blocks(a, b)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649706228,
  "object": "edit"
}
2022-04-11 15:43:58.090739 fix spelling mistakes 2 ['\n\ndef find_blocks(a, s):\n    n = len(a)\n    d = {0: [-1]}\n    for i in range(n):\n        s += a[i]\n        if s not in d:\n            d[s] = [i]\n        else:\n            d[s].append(i)\n    return d\n\ndef find_subarrays(d):\n    res = 0\n    for v in d.values():\n        n = len(v)\n        res += n*(n-1)//2\n    return res\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef find_blocks(a, b):\n    n = len(a)\n    d = {0: [(0, -1)]}\n    s = 0\n    for i in range(n):\n        s += a[i]\n        if s not in d:\n            d[s] = [(i, i)]\n        else:\n            d[s].append((i, i))\n    res = []\n    for i in range(n-1):\n        for j in range(i+1, n):\n            s = sum(a[i:j])\n            if s in d and d[s][0][1] < i:\n                res.append((i, j-1))\n    return res\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    b = [int(s) for s in input().split()]\n    res = find_blocks(a, b)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 15:43:58.090867 size on output set 2
2022-04-11 15:43:58.090880 size on input set 2
2022-04-11 15:44:00.875551 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef find_blocks(a):\n    s = 0\n    n = len(a)\n    d = {0: [-1]}\n    for i in range(n):\n        s += a[i]\n        if s not in d:\n            d[s] = [i]\n        else:\n            d[s].append(i)\n    return d\n\ndef find_subarrays(d):\n    res = 0\n    for v in d.values():\n        n = len(v)\n        res += n*(n-1)//2\n    return res\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef find_blocks(a):\n    n = len(a)\n    s = 0\n    d = {0: [-1]}\n    for i in range(n):\n        s += a[i]\n        if s not in d:\n            d[s] = [i]\n        else:\n            d[s].append(i)\n    return d\n\ndef find_subarrays(d):\n    res = 0\n    for v in d.values():\n        n = len(v)\n        res += n*(n-1)//2\n    return res\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649706238,
  "object": "edit"
}
2022-04-11 15:44:00.875723 fix syntax errors 2 ['\n\ndef find_blocks(a):\n    s = 0\n    n = len(a)\n    d = {0: [-1]}\n    for i in range(n):\n        s += a[i]\n        if s not in d:\n            d[s] = [i]\n        else:\n            d[s].append(i)\n    return d\n\ndef find_subarrays(d):\n    res = 0\n    for v in d.values():\n        n = len(v)\n        res += n*(n-1)//2\n    return res\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef find_blocks(a):\n    n = len(a)\n    s = 0\n    d = {0: [-1]}\n    for i in range(n):\n        s += a[i]\n        if s not in d:\n            d[s] = [i]\n        else:\n            d[s].append(i)\n    return d\n\ndef find_subarrays(d):\n    res = 0\n    for v in d.values():\n        n = len(v)\n        res += n*(n-1)//2\n    return res\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 15:44:06.500832 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef find_blocks(a, b):\n    n = len(a)\n    d = {0: [(0, -1)], 1: [(0, -1)]}\n    s = 0\n    for i in range(n):\n        s += a[i]\n        if s not in d:\n            d[s] = [(i, i), (i, i)]\n        else:\n            d[s][0].append((i, i))\n            d[s][1].append((i, i))\n    res = []\n    for i in range(n-1):\n        for j in range(i+1, n):\n            s = sum(a[i:j])\n            if s in d and d[s][1][1] < i:\n                res.append((i, j-1))\n    return res\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    b = [int(s) for s in input().split()]\n    res = find_blocks(a, b)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef find_blocks(a, b):\n    n = len(a)\n    d = {0: [(-1, -1)]}\n    s = 0\n    for i in range(n):\n        s += a[i]\n        if s not in d:\n            d[s] = [(i, i+1)]\n        else:\n            d[s].append((i, i+1))\n    res = []\n    for i in range(n-1):\n        for j in range(i+1, n):\n            s = sum(a[i:j])\n            if s in d and d[s][0][0] < i:\n                res.append((i, j-1))\n    return res\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    b = [int(s) for s in input().split()]\n    res = find_blocks(a, b)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649706241,
  "object": "edit"
}
2022-04-11 15:44:06.501024 fix syntax errors 2 ['\n\ndef find_blocks(a, b):\n    n = len(a)\n    d = {0: [(0, -1)], 1: [(0, -1)]}\n    s = 0\n    for i in range(n):\n        s += a[i]\n        if s not in d:\n            d[s] = [(i, i), (i, i)]\n        else:\n            d[s][0].append((i, i))\n            d[s][1].append((i, i))\n    res = []\n    for i in range(n-1):\n        for j in range(i+1, n):\n            s = sum(a[i:j])\n            if s in d and d[s][1][1] < i:\n                res.append((i, j-1))\n    return res\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    b = [int(s) for s in input().split()]\n    res = find_blocks(a, b)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef find_blocks(a, b):\n    n = len(a)\n    d = {0: [(-1, -1)]}\n    s = 0\n    for i in range(n):\n        s += a[i]\n        if s not in d:\n            d[s] = [(i, i+1)]\n        else:\n            d[s].append((i, i+1))\n    res = []\n    for i in range(n-1):\n        for j in range(i+1, n):\n            s = sum(a[i:j])\n            if s in d and d[s][0][0] < i:\n                res.append((i, j-1))\n    return res\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    b = [int(s) for s in input().split()]\n    res = find_blocks(a, b)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 15:44:06.501069 size on output set 4
