["#\n# class Solution:\n#     def reverseBits(self, n: int) -> int:\n#         # n is binary string of length 32.\n#         bin_str = bin(n)[2:]\n#         bin_str = bin_str.zfill(32)\n#         bin_str = bin_str[::-1]\n#         return int(bin_str, 2)\n\n\n# class Solution:\n#     def reverseBits(self, n: int) -> int:\n#         # n is binary string of length 32.\n#         bin_str = bin(n)[2:]\n#         bin_str = bin_str.zfill(32)\n#         bin_str = bin_str[::-1]\n#         return int(bin_str, 2)\n", "\n\nclass Solution:\n    def reverseBits(self, n: int) -> int:\n        n = bin(n)[2:]\n        n = n.zfill(32)\n        n = n[::-1]\n\n\nclass Solution:\n    def reverseBits(self, n: int) -> int:\n        n = bin(n)[2:]\n        n = n.zfill(32)\n        n = n[::-1]\n        return int(n, 2)\n", "# https://leetcode.com/problems/reverse-bits/\n\nclass Solution:\n    def reverseBits(self, n: int) -> int:\n        # n is binary string of length 32.\n        bin_str = bin(n)[2:]\n        bin_str = bin_str.zfill(32)\n        bin_str = bin_str[::-1]\n        return int(bin_str, 2)\n", "\n\nclass Solution:\n    def reverseBits(self, n: int) -> int:\n        n = bin(n)[2:]\n        n = n.zfill(32)\n        n = n[::-1]\n        return int(n, 2)\n", "class Solution:\n    def reverseBits(self, n: int) -> int:\n        n = bin(n)[2:]\n        n = n.zfill(32)\n        n = n[::-1]\n        return int(n, 2)\n"]