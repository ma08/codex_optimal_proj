["\n\ndef solve():\n    sx, sy = [int(x) for x in input().split()]  # starting point\n    dx, dy = [int(x) for x in input().split()]  # destination\n    t = int(input())\n    if (dx - sx + dy - sy) == t:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\n\nsolve()\n", "\n\ndef main():\n    x, y = map(int, input().split())\n    a, b = map(int, input().split())    \n\n    print(x + a, y + b)\n\nmain()\n", "\ndef main():\n    \"\"\"\n    Solve the problem\n    \"\"\"\n    start = [int(i) for i in input().split()]  # start coordinates\n    end = [int(i) for i in input().split()]  # end coordinates\n    charge = int(input())  # battery charge\n\n    if abs(end[0] - start[0]) + abs(end[1] - start[1]) <= charge:\n        print(\"Y\")\n\n    else:\n        print(\"N\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    \"\"\"\n    Solve the problem!\n    \"\"\"\n    start = [int(i) for i in input().split()]  # start point (x, y)\n    end = [int(i) for i in input().split()]  # end point (x, y)\n    charge = int(input())  # charge (integer)\n\n    if abs(end[0] - start[0]) + abs(end[1] - start[1]) <= charge:  # if the distance is less than or equal to the charge\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef solve():\n    sx, sy = [int(x) for x in input().split()]  # current position\n    dx, dy = [int(x) for x in input().split()]  # destination\n    t = int(input())\n    if (abs(dx - sx) + abs(dy - sy)) <= t and (t - abs(dx - sx) - abs(dy - sy)) % 2 == 0:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nsolve()\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Mon Jun  8 13:25:01 2020\n@author: krishna\n\"\"\"\n\nimport sys\n\ndef main():\n    start = [int(i) for i in sys.stdin.readline().split()] #list comprehension\n    end = [int(i) for i in sys.stdin.readline().split()] #list comprehension\n    charge = int(sys.stdin.readline())\n    if (charge - abs(end[0] - start[0]) - abs(end[1] - start[1])) % 2 == 0: #abs() returns absolute value of a number\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    \"\"\"\n    Solve the problem\n    \"\"\"\n    start = [int(i) for i in input().split(\",\")]\n    end = [int(i) for i in input().split(\",\")]\n    charge = int(input())\n\n    if abs(end[0] - start[0]) + abs(end[1] - start[1]) <= charge:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    \"\"\"\n    Solve the problem!\n    \"\"\"\n    start = [int(i) for i in input().split()]\n    end = [int(i) for i in input().split()]\n    charge = int(input())\n\n    if abs(end[0] - start[0]) + abs(end[1] - start[1]) <= charge:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef solve():\n    n = int(input())\n    for i in range(n):\n        sx, sy = [int(x) for x in input().split()]\n        dx, dy = [int(x) for x in input().split()]\n        t = int(input())\n        if (abs(dx - sx) + abs(dy - sy)) == t:\n            print(\"Y\")\n        else:\n            print(\"N\")\n\nsolve()\n", "\n\na, b = [int(x) for x in input().split()]\nc, d = [int(x) for x in input().split()]\nt = int(input())\n\n# If the start and end points are the same, then we can do a U-turn and get there.\nif a == c and b == d:\n    print(\"Y\")\n\n# If we are trying to travel more than t units, we can't get there.\nif abs(a-c) + abs(b-d) > t:\n    print(\"N\")\n\n# If we are trying to travel less than t units, we can get there.\nif abs(a-c) + abs(b-d) < t:\n    print(\"N\")\n\n# If we are trying to travel exactly t units, we can get there.\nif abs(a-c) + abs(b-d) == t:\n    print(\"Y\")\n", "\n\na, b = [int(x) for x in input().split()]\nc, d = [int(x) for x in input().split()]\nt = int(input())\n\n# If the start and end points are the same, then we can do a U-turn and get there.\nif a == c and b == d:\n    print(\"Y\")\n    exit(0)\n\n# If we are trying to travel more than t units, we can't get there.\nif abs(a-c) + abs(b-d) > t:\n    print(\"N\")\n    exit(0)\n\n# If we are trying to travel less than t units, we can get there.\nif abs(a-c) + abs(b-d) < t:\n    print(\"N\")\n    exit(0)\n\n# If we are trying to travel exactly t units, we can get there.\nif abs(a-c) + abs(b-d) == t:\n    print(\"Y\")\n    exit(0)\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    start = [int(i) for i in sys.stdin.readline().split()]\n    end = [int(i) for i in sys.stdin.readline().split()]\n    charge = int(sys.stdin.readline())\n    if (charge - abs(end[0] - start[0]) - abs(end[1] - start[1])) % 2 == 0:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    start = list(map(int, sys.stdin.readline().split())) #start position\n    end = list(map(int, sys.stdin.readline().split())) #end position\n    charge = int(sys.stdin.readline()) #charge\n\n    if abs(start[0] - end[0]) + abs(start[1] - end[1]) == charge:\n        print \"Y\" #Yes\n    else:\n        print \"N\" #No\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    start = list(map(int, sys.stdin.readline().split()))\n    end = list(map(int, sys.stdin.readline().split()))\n    charge = int(sys.stdin.readline())\n\n    if abs(start[0] - end[0]) + abs(start[1] - end[1]) == charge:\n        print(\"Y\")\n    else:\n        print(\"N\")\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    a, b = map(int, input().strip().split())\n    c, d = map(int, input().strip().split())\n    t = int(input().strip())\n\n    if abs(a - c) + abs(b - d) <= t and (abs(a - c) + abs(b - d)) % 2 == t % 2:\n        print('Y')\n    else:\n        print('N')\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    a, b = map(int, input().strip().split())\n    c, d = map(int, input().strip().split())\n    t = int(input().strip())\n\n    if abs(a - c) + abs(b - d) <= t and (abs(a - c) + abs(b - d)) % 2 == t % 2:\n        print('Y')\n    else:\n        print('N')\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    a, b = map(int, input().split())\n    c, d = map(int, input().split())\n    t = int(input())\n\n    if (a - c) ** 2 + (b - d) ** 2 <= t ** 2:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nmain()\n", "# file\n\n\ndef main():\n    pass\n\n\nmain()\n", "\ndef main():\n    n = int(input())\n    for i in range(n):\n        start = [int(x) for x in input().split()]\n        end = [int(x) for x in input().split()]\n        charge = int(input())\n        if abs(start[0] - end[0]) + abs(start[1] - end[1]) == charge:\n            print('Y')\n        else:\n            print('N')\n\n\nmain()\n"]