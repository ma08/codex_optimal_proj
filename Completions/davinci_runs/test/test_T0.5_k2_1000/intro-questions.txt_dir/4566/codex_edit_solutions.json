["import sys\ninput = sys.stdin.readline\n\ndef main():\n    n, m = map(int, input().split())\n    roads = []\n    for i in range(m):\n        a, b = map(int, input().split())\n        roads.append([a, b])\n\n    for i in range(1, n+1):\n        count = 0\n        for road in roads:\n            if i in road:\n                count += 1\n        print(count)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n# vim: set fileencoding=utf-8 :\n\n\n\nN, M = map(int, input().split())\n\n# \u5404\u9802\u70b9\u306e\u6b21\u6570\u3092\u683c\u7d0d\u3059\u308b\u8f9e\u66f8\ndegree = {}\n\nfor i in range(M):\n    a, b = map(int, input().split())\n    # \u6b21\u6570\u3092\u8a08\u7b97\u3059\u308b\n    if a in degree:\n        degree[a] += 1\n    else:\n        degree[a] = 1\n    if b in degree:\n        degree[b] += 1\n    else:\n        degree[b] = 1\n\n# \u6b21\u6570\u3092\u51fa\u529b\u3059\u308b\nfor i in range(N):\n    if i + 1 in degree:\n        print(degree[i + 1])\n    else:\n        print(0)\n", "\nN, M = map(int, input().split())\n\n# \u5404\u9802\u70b9\u306e\u6b21\u6570\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217\u3092\u7528\u610f\ndegree = [0] * (N)\n\nfor i in range(M):\n    a, b = map(int, input().split())\n    edge.append([a, b])\n    # \u6b21\u6570\u3092\u8a08\u7b97\n    degree[a] += 1\n    degree[b] += 1\n\n# \u6b21\u6570\u3092\u51fa\u529b\u3059\u308b\nfor i in range(1, N + 1):\n    print(degree[i])\n", "# \u6574\u6570\u306e\u5165\u529b(2\u3064)\n\nn, m = map(int, input().split())\n\n# \u30ea\u30b9\u30c8\u306e\u5165\u529b\nroads = []\nfor i in range(m):\n    a, b = map(int, input().split())\n    roads.append([a, b])\n\n# \u51fa\u529b(\u30ea\u30b9\u30c8)\nfor i in range(1, n+1):\n    count = 0\n    for road in roads:\n        if i in road:\n            count += 1\n    print(count)\n", "# coding: utf-8\n\nn, m = map(int, input().split())\n\n# input\nroads = []\nfor i in range(m):\n    a, b = map(int, input().split())\n    roads.append([a, b])\n\n# output\nfor i in range(1, n+1):\n    count = 0\n    for road in roads:\n        if i in road:\n            count += 1\n    print(count)\n", "\nn, m = map(int, input().split())\n\nroads = []\nfor i in range(m):\n    a, b = map(int, input().split())\n    roads.append([a, b])\n\nfor i in range(1, n+1):\n    count = 0\n    for road in roads:\n        if i in road:\n            count += 1\n    print(count)\n", "\nN, M = map(int, input().split())\n\n# \u5165\u529b\u3055\u308c\u305f\u8fba\u3092\u683c\u7d0d\u3059\u308b\u30ea\u30b9\u30c8\nedge = []\n\n# \u5404\u9802\u70b9\u306e\u6b21\u6570\u3092\u683c\u7d0d\u3059\u308b\u30ea\u30b9\u30c8\ndegree = [0] * (N + 1)\n\nfor i in range(M):\n    a, b = map(int, input().split())\n    edge.append([a, b])\n    # \u6b21\u6570\u3092\u8a08\u7b97\u3059\u308b\n    degree[a] += 1\n    degree[b] += 1\n\n# \u6b21\u6570\u3092\u51fa\u529b\u3059\u308b\nfor i in range(1, N + 1):\n    print(degree[i])\n", "\nN, M = map(int, input().split())\n\n# \u5165\u529b\u3055\u308c\u305f\u8fba\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217\u3092\u7528\u610f\nedge = []\n\n# \u5404\u9802\u70b9\u306e\u6b21\u6570\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217\u3092\u7528\u610f\ndegree = [0] * (N + 1)\n\nfor i in range(M):\n    a, b = map(int, input().split())\n    edge.append([a, b])\n    # \u6b21\u6570\u3092\u8a08\u7b97\n    degree[a] += 1\n    degree[b] += 1\n\n# \u6b21\u6570\u3092\u51fa\u529b\u3059\u308b\nfor i in range(1, N + 1):\n    print(degree[i])\n"]