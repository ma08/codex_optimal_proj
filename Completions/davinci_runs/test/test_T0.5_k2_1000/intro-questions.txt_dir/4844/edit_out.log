2022-04-12 01:24:30.269574 num operations 2
2022-04-12 01:24:30.269595 size on input set 1
2022-04-12 01:24:32.454867 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # Read input\n    N = int(input())\n    M = []\n    for i in range(N):\n        M.append([int(x) for x in input().split()])\n\n    # Initialize array \n    A = [0] * N\n\n    # Process\n    for i in range(N):\n        for j in range(N):\n            if i != j:\n                A[i] = M[i][j] | A[j]\n\n    # Print result\n    print(' '.join([str(x) for x in A]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # Read input\n    N = int(input())\n    M = []\n    for i in range(N):\n        M.append([int(x) for x in input().split()])\n\n    # Initialize array \n    A = [0] * N\n\n    # Process\n    for i in range(N):\n        for j in range(N):\n            if i != j:\n                A[i] = M[i][j] | A[j]\n\n    # Print result\n    print(' '.join([str(x) for x in A]))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649741070,
  "object": "edit"
}
2022-04-12 01:24:32.455154 fix spelling mistakes 2 ['\n\ndef main():\n    # Read input\n    N = int(input())\n    M = []\n    for i in range(N):\n        M.append([int(x) for x in input().split()])\n\n    # Initialize array \n    A = [0] * N\n\n    # Process\n    for i in range(N):\n        for j in range(N):\n            if i != j:\n                A[i] = M[i][j] | A[j]\n\n    # Print result\n    print(\' \'.join([str(x) for x in A]))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # Read input\n    N = int(input())\n    M = []\n    for i in range(N):\n        M.append([int(x) for x in input().split()])\n\n    # Initialize array \n    A = [0] * N\n\n    # Process\n    for i in range(N):\n        for j in range(N):\n            if i != j:\n                A[i] = M[i][j] | A[j]\n\n    # Print result\n    print(\' \'.join([str(x) for x in A]))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 01:24:32.455186 size on output set 1
2022-04-12 01:24:32.455193 size on input set 1
2022-04-12 01:24:34.489477 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # Read input\n    N = int(input())\n    M = []\n    for i in range(N):\n        M.append([int(x) for x in input().split()])\n\n    # Initialize array\n    A = [0] * N\n\n    # Process\n    for i in range(N):\n        for j in range(N):\n            if i != j:\n                A[i] = M[i][j] | A[j]\n\n    # Print result\n    print(' '.join([str(x) for x in A]))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # Read input\n    N = int(input())\n    M = []\n    for i in range(N):\n        M.append([int(x) for x in input().split()])\n\n    # Initialize array\n    A = [0] * N\n\n    # Process\n    for i in range(N):\n        for j in range(N):\n            if i != j:\n                A[i] = M[i][j] | A[j]\n\n    # Print result\n    print(' '.join([str(x) for x in A]))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649741072,
  "object": "edit"
}
2022-04-12 01:24:34.489886 fix syntax errors 2 ['\n\ndef main():\n    # Read input\n    N = int(input())\n    M = []\n    for i in range(N):\n        M.append([int(x) for x in input().split()])\n\n    # Initialize array\n    A = [0] * N\n\n    # Process\n    for i in range(N):\n        for j in range(N):\n            if i != j:\n                A[i] = M[i][j] | A[j]\n\n    # Print result\n    print(\' \'.join([str(x) for x in A]))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # Read input\n    N = int(input())\n    M = []\n    for i in range(N):\n        M.append([int(x) for x in input().split()])\n\n    # Initialize array\n    A = [0] * N\n\n    # Process\n    for i in range(N):\n        for j in range(N):\n            if i != j:\n                A[i] = M[i][j] | A[j]\n\n    # Print result\n    print(\' \'.join([str(x) for x in A]))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 01:24:34.489930 size on output set 1
2022-04-12 01:24:34.489947 num operations 2
2022-04-12 01:24:34.489952 size on input set 1
2022-04-12 01:24:41.964750 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n#\n# N = int(input())\n# m = []\n# for i in range(N):\n#     m.append(list(map(int, input().split())))\n#\n# a = []\n# for i in range(N):\n#     a.append(0)\n#\n# for i in range(N):\n#     for j in range(i+1, N):\n#         if m[i][j] == 0:\n#             a[i] = 0\n#             a[j] = 0\n#         else:\n#             a[i] = m[i][j]\n#             a[j] = m[i][j]\n#\n# print(*a)\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\nm = []\nfor i in range(N):\n    m.append(list(map(int, input().split())))\n\na = []\nfor i in range(N):\n    a.append(0)\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if m[i][j] == 0:\n            a[i] = 0\n            a[j] = 0\n        else:\n            a[i] = m[i][j]\n            a[j] = m[i][j]\n\nprint(*a)\n"
    }
  ],
  "created": 1649741074,
  "object": "edit"
}
2022-04-12 01:24:41.964847 fix spelling mistakes 2 ['\n#\n# N = int(input())\n# m = []\n# for i in range(N):\n#     m.append(list(map(int, input().split())))\n#\n# a = []\n# for i in range(N):\n#     a.append(0)\n#\n# for i in range(N):\n#     for j in range(i+1, N):\n#         if m[i][j] == 0:\n#             a[i] = 0\n#             a[j] = 0\n#         else:\n#             a[i] = m[i][j]\n#             a[j] = m[i][j]\n#\n# print(*a)\n', '\nN = int(input())\nm = []\nfor i in range(N):\n    m.append(list(map(int, input().split())))\n\na = []\nfor i in range(N):\n    a.append(0)\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if m[i][j] == 0:\n            a[i] = 0\n            a[j] = 0\n        else:\n            a[i] = m[i][j]\n            a[j] = m[i][j]\n\nprint(*a)\n']
2022-04-12 01:24:41.964860 size on output set 2
2022-04-12 01:24:41.964864 size on input set 2
2022-04-12 01:24:49.954863 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "N = int(input())\nM = []\nfor i in range(N):\n    M.append(list(map(int, input().split())))\n\na = []\nfor i in range(N):\n    a.append(1)\n\nfor i in range(N):\n    for j in range(N):\n        if M[i][j] == 0:\n            a[i] = 1\n            a[j] = 1\n\nprint(*a)\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    N = int(input())\n    m = []\n    for i in range(N):\n        m.append(list(map(int, input().split())))\n\n    a = []\n    for i in range(N):\n        a.append(0)\n\n    for i in range(N):\n        for j in range(i+1, N):\n            if m[i][j] == 0:\n                a[i] = 0\n                a[j] = 0\n            else:\n                a[i] = m[i][j]\n                a[j] = m[i][j]\n\n    print(*a)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649741082,
  "object": "edit"
}
2022-04-12 01:24:49.955083 fix syntax errors 2 ['N = int(input())\nM = []\nfor i in range(N):\n    M.append(list(map(int, input().split())))\n\na = []\nfor i in range(N):\n    a.append(1)\n\nfor i in range(N):\n    for j in range(N):\n        if M[i][j] == 0:\n            a[i] = 1\n            a[j] = 1\n\nprint(*a)\n', "\ndef main():\n    N = int(input())\n    m = []\n    for i in range(N):\n        m.append(list(map(int, input().split())))\n\n    a = []\n    for i in range(N):\n        a.append(0)\n\n    for i in range(N):\n        for j in range(i+1, N):\n            if m[i][j] == 0:\n                a[i] = 0\n                a[j] = 0\n            else:\n                a[i] = m[i][j]\n                a[j] = m[i][j]\n\n    print(*a)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 01:24:57.564861 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN = int(input())\nm = []\nfor i in range(N):\n    m.append(list(map(int, input().split())))\n\na = []\nfor i in range(N):\n    a.append(0)\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if m[i][j] == 0:\n            a[i] = 0\n            a[j] = 0\n        else:\n            a[i] = m[i][j]\n            a[j] = m[i][j]\n\nprint(*a)\n"
    },
    {
      "index": 1,
      "text": "\n\nN = int(input())\nm = []\nfor i in range(N):\n    m.append(list(map(int, input().split())))\n\na = []\nfor i in range(N):\n    a.append(0)\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if m[i][j] == 0:\n            a[i] = 0\n            a[j] = 0\n        else:\n            a[i] = m[i][j]\n            a[j] = m[i][j]\n\nprint(*a)\n"
    }
  ],
  "created": 1649741090,
  "object": "edit"
}
2022-04-12 01:24:57.565038 fix syntax errors 2 ['\n\nN = int(input())\nm = []\nfor i in range(N):\n    m.append(list(map(int, input().split())))\n\na = []\nfor i in range(N):\n    a.append(0)\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if m[i][j] == 0:\n            a[i] = 0\n            a[j] = 0\n        else:\n            a[i] = m[i][j]\n            a[j] = m[i][j]\n\nprint(*a)\n', '\n\nN = int(input())\nm = []\nfor i in range(N):\n    m.append(list(map(int, input().split())))\n\na = []\nfor i in range(N):\n    a.append(0)\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if m[i][j] == 0:\n            a[i] = 0\n            a[j] = 0\n        else:\n            a[i] = m[i][j]\n            a[j] = m[i][j]\n\nprint(*a)\n']
2022-04-12 01:24:57.565051 size on output set 3
2022-04-12 01:24:57.565057 num operations 2
2022-04-12 01:24:57.565060 size on input set 1
2022-04-12 01:25:03.630740 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())  # \u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u0440\u0430\u0437\u043c\u0435\u0440 \u043c\u0430\u0442\u0440\u0438\u0446\u044b\n    m = []\n    for i in range(n):  # \u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u043c\u0430\u0442\u0440\u0438\u0446\u0443\n        m.append([int(x) for x in input().split()])\n    a = [0] * n  # \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u043c\u0430\u0441\u0441\u0438\u0432 \u043d\u0443\u043b\u044f\u043c\u0438\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                a[i] = a[i] ^ m[i][j]  # \u043f\u043e\u0431\u0438\u0442\u043e\u0432\u043e\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u044e\u0449\u0435\u0435 \u0438\u043b\u0438\n    print(*a)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    matrix = []\n    for i in range(n):\n        matrix.append([int(x) for x in input().split()])\n    a = [0] * n\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                a[i] = a[i] ^ matrix[i][j]\n    print(*a)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649741097,
  "object": "edit"
}
2022-04-12 01:25:03.630864 fix spelling mistakes 2 ['\n\ndef main():\n    n = int(input())  # считываем размер матрицы\n    m = []\n    for i in range(n):  # считываем матрицу\n        m.append([int(x) for x in input().split()])\n    a = [0] * n  # заполняем массив нулями\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                a[i] = a[i] ^ m[i][j]  # побитовое исключающее или\n    print(*a)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    matrix = []\n    for i in range(n):\n        matrix.append([int(x) for x in input().split()])\n    a = [0] * n\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                a[i] = a[i] ^ matrix[i][j]\n    print(*a)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 01:25:03.630884 size on output set 2
2022-04-12 01:25:03.630888 size on input set 2
2022-04-12 01:25:07.000553 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    matrix = []\n    for i in range(n):\n        matrix.append([int(x) for x in input().split()])\n    a = [0] * (n + 1)\n    for i in range(n):\n        for j in range(n):\n            a[i] = a[i] ^ matrix[i][j]\n    print(*a)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    matrix = []\n    for i in range(n):\n        matrix.append([int(x) for x in input().split()])\n    a = [0] * n\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                a[i] = a[i] ^ matrix[i][j]\n    print(*a)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649741103,
  "object": "edit"
}
2022-04-12 01:25:07.000717 fix syntax errors 2 ['\n\ndef main():\n    n = int(input())\n    matrix = []\n    for i in range(n):\n        matrix.append([int(x) for x in input().split()])\n    a = [0] * (n + 1)\n    for i in range(n):\n        for j in range(n):\n            a[i] = a[i] ^ matrix[i][j]\n    print(*a)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    matrix = []\n    for i in range(n):\n        matrix.append([int(x) for x in input().split()])\n    a = [0] * n\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                a[i] = a[i] ^ matrix[i][j]\n    print(*a)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 01:25:13.118370 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    m = []\n    for i in range(n):\n        m.append([int(x) for x in input().split()])\n    a = [0] * n\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                a[i] = a[i] ^ m[i][j]\n    print(*a)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    m = []\n    for i in range(n):\n        m.append([int(x) for x in input().split()])\n    a = [0] * n\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                a[i] = a[i] ^ m[i][j]\n    print(*a)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649741107,
  "object": "edit"
}
2022-04-12 01:25:13.118480 fix syntax errors 2 ['\n\ndef main():\n    n = int(input())\n    m = []\n    for i in range(n):\n        m.append([int(x) for x in input().split()])\n    a = [0] * n\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                a[i] = a[i] ^ m[i][j]\n    print(*a)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    m = []\n    for i in range(n):\n        m.append([int(x) for x in input().split()])\n    a = [0] * n\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                a[i] = a[i] ^ m[i][j]\n    print(*a)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 01:25:13.118494 size on output set 3
2022-04-12 01:25:13.118507 num operations 2
2022-04-12 01:25:13.118511 size on input set 1
2022-04-12 01:25:20.350719 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n    n_value = int(input())\n    matrix = []\n    for _ in range(n_value):\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_value):\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_value - 1, -1, -1):\n        for j in range(i - 1, -1, -1):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_value):\n        for j in range(i + 1, n_value):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_value):\n        for j in range(n_value):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n    for i in range(n_value):\n        print(matrix[i][i], end=' ')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n    n_val = int(input())  # number of nodes\n    matrix = []\n    for _ in range(n_val):  # reading the adjacency matrix\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_val):  # setting the diagonal elements to max value\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_val - 1, -1, -1):  # setting the upper triangular matrix\n        for j in range(i - 1, -1, -1):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):  # setting the lower triangular matrix\n        for j in range(i + 1, n_val):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):  # setting the diagonal elements to max value\n        for j in range(n_val):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n    for i in range(n_val):  # printing the diagonal elements\n        print(matrix[i][i], end=' ')\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649741113,
  "object": "edit"
}
2022-04-12 01:25:20.351031 fix spelling mistakes 2 ['\n\ndef main():\n    """\n    This is the main function.\n    """\n    n_value = int(input())\n    matrix = []\n    for _ in range(n_value):\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_value):\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_value - 1, -1, -1):\n        for j in range(i - 1, -1, -1):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_value):\n        for j in range(i + 1, n_value):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_value):\n        for j in range(n_value):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n    for i in range(n_value):\n        print(matrix[i][i], end=\' \')\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    """\n    This is the main function.\n    """\n    n_val = int(input())  # number of nodes\n    matrix = []\n    for _ in range(n_val):  # reading the adjacency matrix\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_val):  # setting the diagonal elements to max value\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_val - 1, -1, -1):  # setting the upper triangular matrix\n        for j in range(i - 1, -1, -1):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):  # setting the lower triangular matrix\n        for j in range(i + 1, n_val):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):  # setting the diagonal elements to max value\n        for j in range(n_val):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n    for i in range(n_val):  # printing the diagonal elements\n        print(matrix[i][i], end=\' \')\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-12 01:25:20.351089 size on output set 2
2022-04-12 01:25:20.351099 size on input set 2
2022-04-12 01:25:24.170732 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n    n_val = int(input())  # number of nodes\n    matrix = []\n    for _ in range(n_val):  # reading the adjacency matrix\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_val):  # setting the diagonal elements to max value\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_val - 1, 0, -1):  # setting the upper triangular matrix\n        for j in range(i - 1, 0, -1):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):  # setting the lower triangular matrix\n        for j in range(i + 1, n_val):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):  # setting the diagonal elements to max value\n        for j in range(n_val):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n    for i in range(n_val):  # printing the diagonal elements\n        print(matrix[i][i], end=' ')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n    n_val = int(input())  # number of nodes\n    matrix = []\n    for _ in range(n_val):  # reading the adjacency matrix\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_val):  # setting the diagonal elements to max value\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_val):  # setting the upper triangular matrix\n        for j in range(i):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):  # setting the lower triangular matrix\n        for j in range(i + 1, n_val):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):  # setting the diagonal elements to max value\n        for j in range(n_val):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n    for i in range(n_val):  # printing the diagonal elements\n        print(matrix[i][i], end=' ')\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649741120,
  "object": "edit"
}
2022-04-12 01:25:24.171091 fix syntax errors 2 ['\n\ndef main():\n    """\n    This is the main function.\n    """\n    n_val = int(input())  # number of nodes\n    matrix = []\n    for _ in range(n_val):  # reading the adjacency matrix\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_val):  # setting the diagonal elements to max value\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_val - 1, 0, -1):  # setting the upper triangular matrix\n        for j in range(i - 1, 0, -1):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):  # setting the lower triangular matrix\n        for j in range(i + 1, n_val):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):  # setting the diagonal elements to max value\n        for j in range(n_val):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n    for i in range(n_val):  # printing the diagonal elements\n        print(matrix[i][i], end=\' \')\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    """\n    This is the main function.\n    """\n    n_val = int(input())  # number of nodes\n    matrix = []\n    for _ in range(n_val):  # reading the adjacency matrix\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_val):  # setting the diagonal elements to max value\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_val):  # setting the upper triangular matrix\n        for j in range(i):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):  # setting the lower triangular matrix\n        for j in range(i + 1, n_val):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):  # setting the diagonal elements to max value\n        for j in range(n_val):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n    for i in range(n_val):  # printing the diagonal elements\n        print(matrix[i][i], end=\' \')\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-12 01:25:27.637739 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n    n_value = int(input())\n    matrix = []\n    for _ in range(n_value):\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_value):\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_value):\n        for j in range(i + 1, n_value):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_value):\n        for j in range(n_value):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n\n    for i in range(n_value):\n        print(matrix[i][i], end=' ')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n    n_value = int(input())\n    matrix = []\n    for _ in range(n_value):\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_value):\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_value - 1, 0, -1):\n        for j in range(i - 1, 0, -1):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_value):\n        for j in range(i + 1, n_value):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_value):\n        for j in range(n_value):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n    for i in range(n_value):\n        print(matrix[i][i], end=' ')\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649741124,
  "object": "edit"
}
2022-04-12 01:25:27.637896 fix syntax errors 2 ['\n\ndef main():\n    """\n    This is the main function.\n    """\n    n_value = int(input())\n    matrix = []\n    for _ in range(n_value):\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_value):\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_value):\n        for j in range(i + 1, n_value):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_value):\n        for j in range(n_value):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n\n    for i in range(n_value):\n        print(matrix[i][i], end=\' \')\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    """\n    This is the main function.\n    """\n    n_value = int(input())\n    matrix = []\n    for _ in range(n_value):\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_value):\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_value - 1, 0, -1):\n        for j in range(i - 1, 0, -1):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_value):\n        for j in range(i + 1, n_value):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_value):\n        for j in range(n_value):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n    for i in range(n_value):\n        print(matrix[i][i], end=\' \')\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-12 01:25:27.637914 size on output set 4
2022-04-12 01:25:27.637929 num operations 2
2022-04-12 01:25:27.637932 size on input set 1
2022-04-12 01:25:29.710083 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    i = 0\n    j = 0\n    arr = []\n    while i < n:\n        arr.append(list(map(int, input().split())))\n        i += 1\n    res = [0] * n\n    while j < n:\n        res[j] = arr[j][0]\n        j += 1\n    i = 1\n    while i < n:\n        res[i] = arr[0][i]\n        i += 1\n    i = 1\n    while i < n:\n        j = 1\n        while j < n:\n            if i != j:\n                res[i] = res[i] ^ arr[i][j]\n            j += 1\n        i += 1\n    print(*res) \n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    i = 0\n    j = 0\n    arr = []\n    while i < n:\n        arr.append(list(map(int, input().split())))\n        i += 1\n    res = [0] * n\n    while j < n:\n        res[j] = arr[j][0]\n        j += 1\n    i = 1\n    while i < n:\n        res[i] = arr[0][i]\n        i += 1\n    i = 1\n    while i < n:\n        j = 1\n        while j < n:\n            if i != j:\n                res[i] = res[i] ^ arr[i][j]\n            j += 1\n        i += 1\n    print(*res)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649741127,
  "object": "edit"
}
2022-04-12 01:25:29.710341 fix spelling mistakes 2 ['\n\ndef main():\n    n = int(input())\n    i = 0\n    j = 0\n    arr = []\n    while i < n:\n        arr.append(list(map(int, input().split())))\n        i += 1\n    res = [0] * n\n    while j < n:\n        res[j] = arr[j][0]\n        j += 1\n    i = 1\n    while i < n:\n        res[i] = arr[0][i]\n        i += 1\n    i = 1\n    while i < n:\n        j = 1\n        while j < n:\n            if i != j:\n                res[i] = res[i] ^ arr[i][j]\n            j += 1\n        i += 1\n    print(*res) \n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    i = 0\n    j = 0\n    arr = []\n    while i < n:\n        arr.append(list(map(int, input().split())))\n        i += 1\n    res = [0] * n\n    while j < n:\n        res[j] = arr[j][0]\n        j += 1\n    i = 1\n    while i < n:\n        res[i] = arr[0][i]\n        i += 1\n    i = 1\n    while i < n:\n        j = 1\n        while j < n:\n            if i != j:\n                res[i] = res[i] ^ arr[i][j]\n            j += 1\n        i += 1\n    print(*res)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 01:25:29.710370 size on output set 2
2022-04-12 01:25:29.710376 size on input set 2
2022-04-12 01:25:31.830831 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    i = 0\n    j = 0\n    arr = []\n    while i < n:\n        arr.append(list(map(int, input().split())))\n        i += 1\n    res = [0] * n\n    while j < n:\n        res[j] = arr[j][0]\n        j += 1\n    i = 1\n    while i < n:\n        res[i] = arr[0][i]\n        i += 1\n    i = 1\n    while i < n:\n        j = 1\n        while j < n:\n            if i != j:\n                res[i] = res[i] ^ arr[i][j]\n            j += 1\n        i += 1\n    print(*res)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    i = 0\n    j = 0\n    arr = []\n    while i < n:\n        arr.append(list(map(int, input().split())))\n        i += 1\n    res = [0] * n\n    while j < n:\n        res[j] = arr[j][0]\n        j += 1\n    i = 1\n    while i < n:\n        res[i] = arr[0][i]\n        i += 1\n    i = 1\n    while i < n:\n        j = 1\n        while j < n:\n            if i != j:\n                res[i] = res[i] ^ arr[i][j]\n            j += 1\n        i += 1\n    print(*res)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649741129,
  "object": "edit"
}
2022-04-12 01:25:31.831196 fix syntax errors 2 ['\n\ndef main():\n    n = int(input())\n    i = 0\n    j = 0\n    arr = []\n    while i < n:\n        arr.append(list(map(int, input().split())))\n        i += 1\n    res = [0] * n\n    while j < n:\n        res[j] = arr[j][0]\n        j += 1\n    i = 1\n    while i < n:\n        res[i] = arr[0][i]\n        i += 1\n    i = 1\n    while i < n:\n        j = 1\n        while j < n:\n            if i != j:\n                res[i] = res[i] ^ arr[i][j]\n            j += 1\n        i += 1\n    print(*res)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    i = 0\n    j = 0\n    arr = []\n    while i < n:\n        arr.append(list(map(int, input().split())))\n        i += 1\n    res = [0] * n\n    while j < n:\n        res[j] = arr[j][0]\n        j += 1\n    i = 1\n    while i < n:\n        res[i] = arr[0][i]\n        i += 1\n    i = 1\n    while i < n:\n        j = 1\n        while j < n:\n            if i != j:\n                res[i] = res[i] ^ arr[i][j]\n            j += 1\n        i += 1\n    print(*res)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 01:25:37.178743 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    arr = []\n    for i in range(n):\n        arr.append(list(map(int, input().split())))\n    res = [0] * n\n    for j in range(n):\n        res[j] = arr[j][0]\n    for i in range(1, n):\n        res[i] = arr[0][i]\n    for i in range(1, n):\n        for j in range(1, n):\n            if i != j:\n                res[i] = res[i] ^ arr[i][j]\n    print(*res)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "def main():\n    n = int(input())\n    i = 0\n    j = 0\n    arr = []\n    while i < n:\n        arr.append(list(map(int, input().split())))\n        i += 1\n    res = [0] * n\n    while j < n:\n        res[j] = arr[j][0]\n        j += 1\n    i = 1\n    while i < n:\n        res[i] = arr[0][i]\n        i += 1\n    i = 1\n    while i < n:\n        j = 1\n        while j < n:\n            if i != j:\n                res[i] = res[i] ^ arr[i][j]\n            j += 1\n        i += 1\n    print(*res)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649741132,
  "object": "edit"
}
2022-04-12 01:25:37.178868 fix syntax errors 2 ['\ndef main():\n    n = int(input())\n    arr = []\n    for i in range(n):\n        arr.append(list(map(int, input().split())))\n    res = [0] * n\n    for j in range(n):\n        res[j] = arr[j][0]\n    for i in range(1, n):\n        res[i] = arr[0][i]\n    for i in range(1, n):\n        for j in range(1, n):\n            if i != j:\n                res[i] = res[i] ^ arr[i][j]\n    print(*res)\n\nif __name__ == "__main__":\n    main()\n', 'def main():\n    n = int(input())\n    i = 0\n    j = 0\n    arr = []\n    while i < n:\n        arr.append(list(map(int, input().split())))\n        i += 1\n    res = [0] * n\n    while j < n:\n        res[j] = arr[j][0]\n        j += 1\n    i = 1\n    while i < n:\n        res[i] = arr[0][i]\n        i += 1\n    i = 1\n    while i < n:\n        j = 1\n        while j < n:\n            if i != j:\n                res[i] = res[i] ^ arr[i][j]\n            j += 1\n        i += 1\n    print(*res)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 01:25:37.178885 size on output set 3
2022-04-12 01:25:37.178891 num operations 2
2022-04-12 01:25:37.178894 size on input set 1
2022-04-12 01:25:41.401557 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(0, N):\n        matrix.append([int(x) for x in input().split()])\n    array = [None] * N\n    for i in range(N):\n        for j in range(N):\n            if i != j and matrix[i][j] != 0:\n                if array[i] is None:\n                    array[i] = matrix[i][j]\n                if array[j] is None:\n                    array[j] = matrix[i][j]\n                if array[i] != matrix[i][j] or array[j] != matrix[i][j]:\n                    array[i] = -1\n                    array[j] = -1\n                    break\n    for i in range(N):\n        if array[i] is None:\n            array[i] = 0\n    print(\" \".join(str(x) for x in array))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(0, N):\n        matrix.append([int(x) for x in input().split()])\n    array = [None] * N  # \u043c\u0430\u0441\u0441\u0438\u0432 \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0431\u0443\u0434\u0443\u0442 \u0445\u0440\u0430\u043d\u0438\u0442\u044c\u0441\u044f \u043e\u0442\u0432\u0435\u0442\u044b\n    for i in range(0, N):\n        for j in range(0, N):\n            if i != j and matrix[i][j] != 0:\n                if array[i] is None:\n                    array[i] = matrix[i][j]\n                if array[j] is None:\n                    array[j] = matrix[i][j]\n                if array[i] != matrix[i][j] or array[j] != matrix[i][j]:\n                    array[i] = -1\n                    array[j] = -1\n                    break\n    for i in range(0, N):\n        if array[i] is None:\n            array[i] = 0\n    print(\" \".join(str(x) for x in array))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649741137,
  "object": "edit"
}
2022-04-12 01:25:41.401665 fix spelling mistakes 2 ['\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(0, N):\n        matrix.append([int(x) for x in input().split()])\n    array = [None] * N\n    for i in range(N):\n        for j in range(N):\n            if i != j and matrix[i][j] != 0:\n                if array[i] is None:\n                    array[i] = matrix[i][j]\n                if array[j] is None:\n                    array[j] = matrix[i][j]\n                if array[i] != matrix[i][j] or array[j] != matrix[i][j]:\n                    array[i] = -1\n                    array[j] = -1\n                    break\n    for i in range(N):\n        if array[i] is None:\n            array[i] = 0\n    print(" ".join(str(x) for x in array))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(0, N):\n        matrix.append([int(x) for x in input().split()])\n    array = [None] * N  # массив в котором будут храниться ответы\n    for i in range(0, N):\n        for j in range(0, N):\n            if i != j and matrix[i][j] != 0:\n                if array[i] is None:\n                    array[i] = matrix[i][j]\n                if array[j] is None:\n                    array[j] = matrix[i][j]\n                if array[i] != matrix[i][j] or array[j] != matrix[i][j]:\n                    array[i] = -1\n                    array[j] = -1\n                    break\n    for i in range(0, N):\n        if array[i] is None:\n            array[i] = 0\n    print(" ".join(str(x) for x in array))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 01:25:41.401737 size on output set 2
2022-04-12 01:25:41.401742 size on input set 2
2022-04-12 01:25:44.568352 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(0, N):\n        matrix.append([int(x) for x in input().split()])\n    array = [None] * N\n    for i in range(0, N):\n        for j in range(0, N):\n            if i != j and matrix[i][j] != 0:\n                if array[i] is None:\n                    array[i] = matrix[i][j]\n                if array[j] is None:\n                    array[j] = matrix[i][j]\n                if array[i] != matrix[i][j] or array[j] != matrix[i][j]:\n                    array[i] = -1\n                    array[j] = -1\n                    break\n    for i in range(0, N):\n        if array[i] is None:\n            array[i] = 0\n    print(\" \".join(str(x) for x in array))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(0, N):\n        matrix.append([int(x) for x in input().split()])\n    array = [None] * N\n    for i in range(0, N):\n        for j in range(0, N):\n            if i != j and matrix[i][j] != 0:\n                if array[i] is None:\n                    array[i] = matrix[i][j]\n                if array[j] is None:\n                    array[j] = matrix[i][j]\n                if array[i] != matrix[i][j] or array[j] != matrix[i][j]:\n                    array[i] = -1\n                    array[j] = -1\n                    break\n    for i in range(0, N):\n        if array[i] is None:\n            array[i] = 0\n    print(\" \".join(str(x) for x in array))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649741141,
  "object": "edit"
}
2022-04-12 01:25:44.568533 fix syntax errors 2 ['\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(0, N):\n        matrix.append([int(x) for x in input().split()])\n    array = [None] * N\n    for i in range(0, N):\n        for j in range(0, N):\n            if i != j and matrix[i][j] != 0:\n                if array[i] is None:\n                    array[i] = matrix[i][j]\n                if array[j] is None:\n                    array[j] = matrix[i][j]\n                if array[i] != matrix[i][j] or array[j] != matrix[i][j]:\n                    array[i] = -1\n                    array[j] = -1\n                    break\n    for i in range(0, N):\n        if array[i] is None:\n            array[i] = 0\n    print(" ".join(str(x) for x in array))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(0, N):\n        matrix.append([int(x) for x in input().split()])\n    array = [None] * N\n    for i in range(0, N):\n        for j in range(0, N):\n            if i != j and matrix[i][j] != 0:\n                if array[i] is None:\n                    array[i] = matrix[i][j]\n                if array[j] is None:\n                    array[j] = matrix[i][j]\n                if array[i] != matrix[i][j] or array[j] != matrix[i][j]:\n                    array[i] = -1\n                    array[j] = -1\n                    break\n    for i in range(0, N):\n        if array[i] is None:\n            array[i] = 0\n    print(" ".join(str(x) for x in array))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 01:25:48.038578 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append([int(x) for x in input().split()])\n    array = [None] * N\n    for i in range(N):\n        for j in range(N):\n            if i != j and matrix[i][j] != 0:\n                if array[i] is None:\n                    array[i] = matrix[i][j]\n                if array[j] is None:\n                    array[j] = matrix[i][j]\n                if array[i] != matrix[i][j] or array[j] != matrix[i][j]:\n                    array[i] = -1  # noqa\n                    array[j] = -1  # noqa\n                    break\n    for i in range(N):\n        if array[i] is None:\n            array[i] = 0\n    print(\" \".join(str(x) for x in array))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append([int(x) for x in input().split()])\n    array = [None] * N\n    for i in range(N):\n        for j in range(N):\n            if i != j and matrix[i][j] != 0:\n                if array[i] is None:\n                    array[i] = matrix[i][j]\n                if array[j] is None:\n                    array[j] = matrix[i][j]\n                if array[i] != matrix[i][j] or array[j] != matrix[i][j]:\n                    array[i] = -1\n                    array[j] = -1\n                    break\n    for i in range(N):\n        if array[i] is None:\n            array[i] = 0\n    print(\" \".join(str(x) for x in array))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649741144,
  "object": "edit"
}
2022-04-12 01:25:48.038730 fix syntax errors 2 ['\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append([int(x) for x in input().split()])\n    array = [None] * N\n    for i in range(N):\n        for j in range(N):\n            if i != j and matrix[i][j] != 0:\n                if array[i] is None:\n                    array[i] = matrix[i][j]\n                if array[j] is None:\n                    array[j] = matrix[i][j]\n                if array[i] != matrix[i][j] or array[j] != matrix[i][j]:\n                    array[i] = -1  # noqa\n                    array[j] = -1  # noqa\n                    break\n    for i in range(N):\n        if array[i] is None:\n            array[i] = 0\n    print(" ".join(str(x) for x in array))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append([int(x) for x in input().split()])\n    array = [None] * N\n    for i in range(N):\n        for j in range(N):\n            if i != j and matrix[i][j] != 0:\n                if array[i] is None:\n                    array[i] = matrix[i][j]\n                if array[j] is None:\n                    array[j] = matrix[i][j]\n                if array[i] != matrix[i][j] or array[j] != matrix[i][j]:\n                    array[i] = -1\n                    array[j] = -1\n                    break\n    for i in range(N):\n        if array[i] is None:\n            array[i] = 0\n    print(" ".join(str(x) for x in array))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 01:25:48.038826 size on output set 3
2022-04-12 01:25:48.038834 num operations 2
2022-04-12 01:25:48.038837 size on input set 1
2022-04-12 01:25:49.960795 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n\na = [0] * N\nfor i in range(N):\n    for j in range(i+1, N):\n        a[i] |= M[i][j]\n        a[j] |= M[i][j]\n\nprint(\" \".join([str(x) for x in a]))\n"
    },
    {
      "index": 1,
      "text": "\n#\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n\na = [0] * N\nfor i in range(N):\n    for j in range(i+1, N):\n        a[i] |= M[i][j]\n        a[j] |= M[i][j]\n\nprint(\" \".join([str(x) for x in a]))\n"
    }
  ],
  "created": 1649741148,
  "object": "edit"
}
2022-04-12 01:25:49.960966 fix spelling mistakes 2 ['\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n\na = [0] * N\nfor i in range(N):\n    for j in range(i+1, N):\n        a[i] |= M[i][j]\n        a[j] |= M[i][j]\n\nprint(" ".join([str(x) for x in a]))\n', '\n#\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n\na = [0] * N\nfor i in range(N):\n    for j in range(i+1, N):\n        a[i] |= M[i][j]\n        a[j] |= M[i][j]\n\nprint(" ".join([str(x) for x in a]))\n']
2022-04-12 01:25:49.960994 size on output set 2
2022-04-12 01:25:49.961002 size on input set 2
2022-04-12 01:25:52.630410 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n\na = [0] * N\nfor i in range(N):\n    for j in range(i + 1, N):\n        a[i] |= M[i][j]\n        a[j] |= M[i][j]\n\nprint(\" \".join([str(x) for x in a]))\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef read_int():\n    return int(sys.stdin.readline())\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n\na = [0] * N\nfor i in range(N):\n    for j in range(i+1, N):\n        a[i] |= M[i][j]\n        a[j] |= M[i][j]\n\nprint(\" \".join([str(x) for x in a]))\n"
    }
  ],
  "created": 1649741150,
  "object": "edit"
}
2022-04-12 01:25:52.630696 fix syntax errors 2 ['import sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n\na = [0] * N\nfor i in range(N):\n    for j in range(i + 1, N):\n        a[i] |= M[i][j]\n        a[j] |= M[i][j]\n\nprint(" ".join([str(x) for x in a]))\n', 'import sys\n\ndef read_int():\n    return int(sys.stdin.readline())\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n\na = [0] * N\nfor i in range(N):\n    for j in range(i+1, N):\n        a[i] |= M[i][j]\n        a[j] |= M[i][j]\n\nprint(" ".join([str(x) for x in a]))\n']
2022-04-12 01:25:54.744975 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# coding: utf-8\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n\na = [0] * N\nfor i in range(N):\n    for j in range(i+1, N):\n        a[i] |= M[i][j]\n        a[j] |= M[i][j]\n\nprint(\" \".join([str(x) for x in a]))\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n\na = [0] * N\nfor i in range(N):\n    for j in range(i+1, N):\n        a[i] |= M[i][j]\n        a[j] |= M[i][j]\n\nprint(\" \".join([str(x) for x in a]))\n"
    }
  ],
  "created": 1649741152,
  "object": "edit"
}
2022-04-12 01:25:54.745312 fix syntax errors 2 ['\n# coding: utf-8\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n\na = [0] * N\nfor i in range(N):\n    for j in range(i+1, N):\n        a[i] |= M[i][j]\n        a[j] |= M[i][j]\n\nprint(" ".join([str(x) for x in a]))\n', 'import sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n\na = [0] * N\nfor i in range(N):\n    for j in range(i+1, N):\n        a[i] |= M[i][j]\n        a[j] |= M[i][j]\n\nprint(" ".join([str(x) for x in a]))\n']
2022-04-12 01:25:54.745348 size on output set 4
2022-04-12 01:25:54.745368 num operations 2
2022-04-12 01:25:54.745372 size on input set 1
2022-04-12 01:26:00.134784 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * N\n    for i in range(N):\n        for j in range(i+1, N):\n            arr[i] |= matrix[i][j]\n            arr[j] |= matrix[i][j]\n    for i in range(N):\n        print(arr[i], end=' ')\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * N # \u043c\u0430\u0441\u0441\u0438\u0432 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0432\u0435\u0440\u0448\u0438\u043d \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043f\u0430\u0441\u0442\u044c \u0438\u0437 i-\u0439 \u0432\u0435\u0440\u0448\u0438\u043d\u044b\n    for i in range(N):\n        for j in range(i+1, N):\n            arr[i] |= matrix[i][j]\n            arr[j] |= matrix[i][j]\n    for i in range(N):\n        print(arr[i], end=' ')\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649741154,
  "object": "edit"
}
2022-04-12 01:26:00.135197 fix spelling mistakes 2 ['\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * N\n    for i in range(N):\n        for j in range(i+1, N):\n            arr[i] |= matrix[i][j]\n            arr[j] |= matrix[i][j]\n    for i in range(N):\n        print(arr[i], end=\' \')\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * N # массив для хранения количества вершин в которые можно попасть из i-й вершины\n    for i in range(N):\n        for j in range(i+1, N):\n            arr[i] |= matrix[i][j]\n            arr[j] |= matrix[i][j]\n    for i in range(N):\n        print(arr[i], end=\' \')\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 01:26:00.135234 size on output set 2
2022-04-12 01:26:00.135242 size on input set 2
2022-04-12 01:26:05.998782 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * N  # \u043c\u0430\u0441\u0441\u0438\u0432 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0432\u0435\u0440\u0448\u0438\u043d \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043f\u0430\u0441\u0442\u044c \u0438\u0437 i-\u0439 \u0432\u0435\u0440\u0448\u0438\u043d\u044b\n    for i in range(N):\n        for j in range(i + 1, N):\n            arr[i] |= matrix[i][j]\n            arr[j] |= matrix[i][j]\n    for i in range(N):\n        print(arr[i], end=' ')\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * N  # \u043c\u0430\u0441\u0441\u0438\u0432 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0432\u0435\u0440\u0448\u0438\u043d \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043f\u0430\u0441\u0442\u044c \u0438\u0437 i-\u0439 \u0432\u0435\u0440\u0448\u0438\u043d\u044b\n    for i in range(N):\n        for j in range(i + 1, N):\n            arr[i] |= matrix[i][j]\n            arr[j] |= matrix[i][j]\n    for i in range(N):\n        print(arr[i], end=' ')\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649741160,
  "object": "edit"
}
2022-04-12 01:26:05.999045 fix syntax errors 2 ['\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * N  # массив для хранения количества вершин в которые можно попасть из i-й вершины\n    for i in range(N):\n        for j in range(i + 1, N):\n            arr[i] |= matrix[i][j]\n            arr[j] |= matrix[i][j]\n    for i in range(N):\n        print(arr[i], end=\' \')\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * N  # массив для хранения количества вершин в которые можно попасть из i-й вершины\n    for i in range(N):\n        for j in range(i + 1, N):\n            arr[i] |= matrix[i][j]\n            arr[j] |= matrix[i][j]\n    for i in range(N):\n        print(arr[i], end=\' \')\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 01:26:10.501884 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "def main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * N\n    for i in range(N-1):\n        for j in range(i+1, N-1):\n            arr[i] |= matrix[i][j] | matrix[j][i]\n            arr[j] |= matrix[i][j] | matrix[j][i]\n    for i in range(N):\n        print(arr[i], end=' ')\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    matrix = []\n    for i in range(n):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * n\n    for i in range(n):\n        for j in range(i+1, n):\n            arr[i] |= matrix[i][j]\n            arr[j] |= matrix[i][j]\n    for i in range(n):\n        print(arr[i], end=' ')\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649741166,
  "object": "edit"
}
2022-04-12 01:26:10.502094 fix syntax errors 2 ['def main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * N\n    for i in range(N-1):\n        for j in range(i+1, N-1):\n            arr[i] |= matrix[i][j] | matrix[j][i]\n            arr[j] |= matrix[i][j] | matrix[j][i]\n    for i in range(N):\n        print(arr[i], end=\' \')\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    matrix = []\n    for i in range(n):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * n\n    for i in range(n):\n        for j in range(i+1, n):\n            arr[i] |= matrix[i][j]\n            arr[j] |= matrix[i][j]\n    for i in range(n):\n        print(arr[i], end=\' \')\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 01:26:10.502135 size on output set 4
