["\ndef main():\n    n = int(input())\n    arr = []\n    for i in range(n):\n        arr.append(list(map(int, input().split())))\n    res = [0] * n\n    for j in range(n):\n        res[j] = arr[j][0]\n    for i in range(1, n):\n        res[i] = arr[0][i]\n    for i in range(1, n):\n        for j in range(1, n):\n            if i != j:\n                res[i] = res[i] ^ arr[i][j]\n    print(*res)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n    n_val = int(input())  # number of nodes\n    matrix = []\n    for _ in range(n_val):  # reading the adjacency matrix\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_val):  # setting the diagonal elements to max value\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_val - 1, 0, -1):  # setting the upper triangular matrix\n        for j in range(i - 1, 0, -1):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):  # setting the lower triangular matrix\n        for j in range(i + 1, n_val):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):  # setting the diagonal elements to max value\n        for j in range(n_val):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n    for i in range(n_val):  # printing the diagonal elements\n        print(matrix[i][i], end=' ')\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append([int(x) for x in input().split()])\n    array = [None] * N\n    for i in range(N):\n        for j in range(N):\n            if i != j and matrix[i][j] != 0:\n                if array[i] is None:\n                    array[i] = matrix[i][j]\n                if array[j] is None:\n                    array[j] = matrix[i][j]\n                if array[i] != matrix[i][j] or array[j] != matrix[i][j]:\n                    array[i] = -1  # noqa\n                    array[j] = -1  # noqa\n                    break\n    for i in range(N):\n        if array[i] is None:\n            array[i] = 0\n    print(\" \".join(str(x) for x in array))\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef read_int():\n    return int(sys.stdin.readline())\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n\na = [0] * N\nfor i in range(N):\n    for j in range(i+1, N):\n        a[i] |= M[i][j]\n        a[j] |= M[i][j]\n\nprint(\" \".join([str(x) for x in a]))\n", "N = int(input())\nM = []\nfor i in range(N):\n    M.append(list(map(int, input().split())))\n\na = []\nfor i in range(N):\n    a.append(1)\n\nfor i in range(N):\n    for j in range(N):\n        if M[i][j] == 0:\n            a[i] = 1\n            a[j] = 1\n\nprint(*a)\n", "\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append([int(x) for x in input().split()])\n    array = [None] * N\n    for i in range(N):\n        for j in range(N):\n            if i != j and matrix[i][j] != 0:\n                if array[i] is None:\n                    array[i] = matrix[i][j]\n                if array[j] is None:\n                    array[j] = matrix[i][j]\n                if array[i] != matrix[i][j] or array[j] != matrix[i][j]:\n                    array[i] = -1\n                    array[j] = -1\n                    break\n    for i in range(N):\n        if array[i] is None:\n            array[i] = 0\n    print(\" \".join(str(x) for x in array))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # Read input\n    N = int(input())\n    M = []\n    for i in range(N):\n        M.append([int(x) for x in input().split()])\n\n    # Initialize array\n    A = [0] * N\n\n    # Process\n    for i in range(N):\n        for j in range(N):\n            if i != j:\n                A[i] = M[i][j] | A[j]\n\n    # Print result\n    print(' '.join([str(x) for x in A]))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * N  # \u043c\u0430\u0441\u0441\u0438\u0432 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0432\u0435\u0440\u0448\u0438\u043d \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043f\u0430\u0441\u0442\u044c \u0438\u0437 i-\u0439 \u0432\u0435\u0440\u0448\u0438\u043d\u044b\n    for i in range(N):\n        for j in range(i + 1, N):\n            arr[i] |= matrix[i][j]\n            arr[j] |= matrix[i][j]\n    for i in range(N):\n        print(arr[i], end=' ')\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n    n_val = int(input())  # number of nodes\n    matrix = []\n    for _ in range(n_val):  # reading the adjacency matrix\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_val):  # setting the diagonal elements to max value\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_val):  # setting the upper triangular matrix\n        for j in range(i):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):  # setting the lower triangular matrix\n        for j in range(i + 1, n_val):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_val):  # setting the diagonal elements to max value\n        for j in range(n_val):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n    for i in range(n_val):  # printing the diagonal elements\n        print(matrix[i][i], end=' ')\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n    n_value = int(input())\n    matrix = []\n    for _ in range(n_value):\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_value):\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_value):\n        for j in range(i + 1, n_value):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_value):\n        for j in range(n_value):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n\n    for i in range(n_value):\n        print(matrix[i][i], end=' ')\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    matrix = []\n    for i in range(n):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * n\n    for i in range(n):\n        for j in range(i+1, n):\n            arr[i] |= matrix[i][j]\n            arr[j] |= matrix[i][j]\n    for i in range(n):\n        print(arr[i], end=' ')\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * N  # \u043c\u0430\u0441\u0441\u0438\u0432 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0432\u0435\u0440\u0448\u0438\u043d \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043f\u0430\u0441\u0442\u044c \u0438\u0437 i-\u0439 \u0432\u0435\u0440\u0448\u0438\u043d\u044b\n    for i in range(N):\n        for j in range(i + 1, N):\n            arr[i] |= matrix[i][j]\n            arr[j] |= matrix[i][j]\n    for i in range(N):\n        print(arr[i], end=' ')\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    N = int(input())\n    matrix = []\n    for i in range(0, N):\n        matrix.append([int(x) for x in input().split()])\n    array = [None] * N\n    for i in range(0, N):\n        for j in range(0, N):\n            if i != j and matrix[i][j] != 0:\n                if array[i] is None:\n                    array[i] = matrix[i][j]\n                if array[j] is None:\n                    array[j] = matrix[i][j]\n                if array[i] != matrix[i][j] or array[j] != matrix[i][j]:\n                    array[i] = -1\n                    array[j] = -1\n                    break\n    for i in range(0, N):\n        if array[i] is None:\n            array[i] = 0\n    print(\" \".join(str(x) for x in array))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    matrix = []\n    for i in range(n):\n        matrix.append([int(x) for x in input().split()])\n    a = [0] * (n + 1)\n    for i in range(n):\n        for j in range(n):\n            a[i] = a[i] ^ matrix[i][j]\n    print(*a)\n\nif __name__ == \"__main__\":\n    main()\n", "\n# coding: utf-8\nimport sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n\na = [0] * N\nfor i in range(N):\n    for j in range(i+1, N):\n        a[i] |= M[i][j]\n        a[j] |= M[i][j]\n\nprint(\" \".join([str(x) for x in a]))\n", "\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n    n_value = int(input())\n    matrix = []\n    for _ in range(n_value):\n        matrix.append(list(map(int, input().split())))\n\n    for i in range(n_value):\n        matrix[i][i] = 2**31 - 1\n\n    for i in range(n_value - 1, 0, -1):\n        for j in range(i - 1, 0, -1):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_value):\n        for j in range(i + 1, n_value):\n            matrix[i][j] = matrix[j][i] | matrix[i][i]\n\n    for i in range(n_value):\n        for j in range(n_value):\n            if i != j:\n                matrix[i][i] = max(matrix[i][i], matrix[i][j])\n\n    for i in range(n_value):\n        print(matrix[i][i], end=' ')\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    m = []\n    for i in range(n):\n        m.append([int(x) for x in input().split()])\n    a = [0] * n\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                a[i] = a[i] ^ m[i][j]\n    print(*a)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nN = int(input())\nm = []\nfor i in range(N):\n    m.append(list(map(int, input().split())))\n\na = []\nfor i in range(N):\n    a.append(0)\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if m[i][j] == 0:\n            a[i] = 0\n            a[j] = 0\n        else:\n            a[i] = m[i][j]\n            a[j] = m[i][j]\n\nprint(*a)\n", "def main():\n    n = int(input())\n    i = 0\n    j = 0\n    arr = []\n    while i < n:\n        arr.append(list(map(int, input().split())))\n        i += 1\n    res = [0] * n\n    while j < n:\n        res[j] = arr[j][0]\n        j += 1\n    i = 1\n    while i < n:\n        res[i] = arr[0][i]\n        i += 1\n    i = 1\n    while i < n:\n        j = 1\n        while j < n:\n            if i != j:\n                res[i] = res[i] ^ arr[i][j]\n            j += 1\n        i += 1\n    print(*res)\n\nif __name__ == \"__main__\":\n    main()\n", "def main():\n    N = int(input())\n    matrix = []\n    for i in range(N):\n        matrix.append(list(map(int, input().split())))\n    arr = [0] * N\n    for i in range(N-1):\n        for j in range(i+1, N-1):\n            arr[i] |= matrix[i][j] | matrix[j][i]\n            arr[j] |= matrix[i][j] | matrix[j][i]\n    for i in range(N):\n        print(arr[i], end=' ')\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n\na = [0] * N\nfor i in range(N):\n    for j in range(i+1, N):\n        a[i] |= M[i][j]\n        a[j] |= M[i][j]\n\nprint(\" \".join([str(x) for x in a]))\n", "\ndef main():\n    N = int(input())\n    m = []\n    for i in range(N):\n        m.append(list(map(int, input().split())))\n\n    a = []\n    for i in range(N):\n        a.append(0)\n\n    for i in range(N):\n        for j in range(i+1, N):\n            if m[i][j] == 0:\n                a[i] = 0\n                a[j] = 0\n            else:\n                a[i] = m[i][j]\n                a[j] = m[i][j]\n\n    print(*a)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef read_int():\n    return int(sys.stdin.readline())\n\ndef read_ints():\n    return [int(x) for x in sys.stdin.readline().split()]\n\nN = read_int()\nM = [0] * N\nfor i in range(N):\n    M[i] = read_ints()\n\na = [0] * N\nfor i in range(N):\n    for j in range(i + 1, N):\n        a[i] |= M[i][j]\n        a[j] |= M[i][j]\n\nprint(\" \".join([str(x) for x in a]))\n", "\n\ndef main():\n    n = int(input())\n    i = 0\n    j = 0\n    arr = []\n    while i < n:\n        arr.append(list(map(int, input().split())))\n        i += 1\n    res = [0] * n\n    while j < n:\n        res[j] = arr[j][0]\n        j += 1\n    i = 1\n    while i < n:\n        res[i] = arr[0][i]\n        i += 1\n    i = 1\n    while i < n:\n        j = 1\n        while j < n:\n            if i != j:\n                res[i] = res[i] ^ arr[i][j]\n            j += 1\n        i += 1\n    print(*res)\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n = int(input())\n    matrix = []\n    for i in range(n):\n        matrix.append([int(x) for x in input().split()])\n    a = [0] * n\n    for i in range(n):\n        for j in range(n):\n            if i != j:\n                a[i] = a[i] ^ matrix[i][j]\n    print(*a)\n\nif __name__ == \"__main__\":\n    main()\n"]