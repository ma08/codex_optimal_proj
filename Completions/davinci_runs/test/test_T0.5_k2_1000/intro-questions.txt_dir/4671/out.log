2022-04-09 21:25:24.238895 """
=====Problem Statement=====
Let's dive into decorators! You are given N mobile numbers. Sort them in ascending order then print them in the standard format shown below:
+91 xxxxx xxxxx

The given mobile numbers may have +91, 91 or 0 written before the actual 10 digit number. Alternatively, there may not be any prefix at all. Alternatively, there may not be any prefix at all.

=====Input Format=====
The first line of input contains an integer N, the number of mobile phone numbers. N lines follow each containing a mobile number.

=====Output Format=====
Print N mobile numbers on separate lines in the required format.
"""
2022-04-09 21:25:24.238926 --------------------------
2022-04-09 21:25:39.853442 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef wrapper(f):\n    def fun(l):\n        # complete the function\n        f([\"+91 \"+c[-10:-5]+\" \"+c[-5:] for c in l])\n    return fun\n\n#@wrapper\ndef sort_phone(l):\n    print(*sorted(l), sep='\\n')\n\nif __name__ == '__main__':\n    l = [input() for _ in range(int(input()))]\n    sort_phone(l)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef wrapper(f):\n    def fun(l):\n        # complete the function\n        for i in range(len(l)):\n            if l[i][0]==\"0\":\n                l[i]=\"+91 \"+l[i][1:4]+\" \"+l[i][4:]\n            elif l[i][0]==\"+\":\n                l[i]=\"+91 \"+l[i][4:9]+\" \"+l[i][9:]\n            else:\n                l[i]=\"+91 \"+l[i][0:5]+\" \"+l[i][5:]\n        return f(l)\n    return fun\n\n@wrapper\ndef sort_phone(l):\n    print(*sorted(l), sep='\\n')\n\nif __name__ == '__main__':\n    l = [input() for _ in range(int(input()))]\n    sort_phone(l)"
    }
  ],
  "created": 1649553924,
  "id": "cmpl-4vGcO8OoVEERVQVkzREmy5ZK3U1AC",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 21:25:39.853707 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef wrapper(f):\n    def fun(l):\n        # complete the function\n        f([\"+91 \"+c[-10:-5]+\" \"+c[-5:] for c in l])\n    return fun\n\n#@wrapper\ndef sort_phone(l):\n    print(*sorted(l), sep='\\n')\n\nif __name__ == '__main__':\n    l = [input() for _ in range(int(input()))]\n    sort_phone(l)"
}
2022-04-09 21:25:39.853747 REASON stop
2022-04-09 21:25:39.855025 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef wrapper(f):\n    def fun(l):\n        # complete the function\n        for i in range(len(l)):\n            if l[i][0]==\"0\":\n                l[i]=\"+91 \"+l[i][1:4]+\" \"+l[i][4:]\n            elif l[i][0]==\"+\":\n                l[i]=\"+91 \"+l[i][4:9]+\" \"+l[i][9:]\n            else:\n                l[i]=\"+91 \"+l[i][0:5]+\" \"+l[i][5:]\n        return f(l)\n    return fun\n\n@wrapper\ndef sort_phone(l):\n    print(*sorted(l), sep='\\n')\n\nif __name__ == '__main__':\n    l = [input() for _ in range(int(input()))]\n    sort_phone(l)"
}
2022-04-09 21:25:39.855124 REASON stop
