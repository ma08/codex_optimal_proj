["\n# Solution 1\n\n# Number of teams\nN = int(input())\n# Time required for the i-th team to understand and implement an algorithm\nT = list(map(int, input().split()))\n\n# Sorted times\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n", "\nN = int(input())\ntimes = list(map(int, input().split()))\n\n# Sort the times in descending order\ntimes.sort(reverse=True)\n\n# Greedy algorithm\n# The one with the shortest time should go first\n# The second shortest time should go second, etc.\n# And the longest time should go last (this is the only time it will be waiting, so it doesn't matter)\n\n# The time it takes to finish all lectures is the sum of the times\nprint(sum(times))\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [int(x) for x in sys.stdin.readline().split()][:n]\n    times.sort()\n\n    a = 0\n    b = 0\n    for i in range(n):\n        if i % 2 == 0:\n            a += times[i]\n        else:\n            b += times[i]\n\n    print(max(a, b))\n\nif __name__ == '__main__':\n    main()\n", "\nN = int(input())\ntimes = list(map(int, input().split()))\n\ntimes.sort()\n\ntotalTime = 0\n\nfor i in range(N):\n    totalTime += sum(times[i:])\n\nprint(totalTime)\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = [int(x) for x in sys.stdin.readline().split()]\n    times.sort()\n\n    a = 0\n    b = 0\n    for i in range(n):\n        if i % 2 == 0:\n            a += times[i]\n        else:\n            b += times[i]\n\n    print(max(a, b))\n\nif __name__ == '__main__':\n    main()\n", "n = int(input())\nprint(n)\n", "n = int(input())\ntimes = list(map(int, input().split()))\n\ntimes.sort()\n\ntotal = 0\nfor i in range(n):\n    total += (i + 1) * times[i]\n\nprint(total)\n", "\n# Number of teams\nN = int(input())\n# Time required for the i-th team to understand and implement an algorithm\nT = list(map(int, input().split()))\n\n# Sorted times\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even.\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd.\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n", "import sys\n\ndef main():\n    n = int(input())\n    times = [int(x) for x in input().split()]\n    times.sort(reverse=True)\n\n    a = 0\n    b = 0\n    for i in range(n):\n        if i % 2 == 0:\n            a += times[i]\n        else:\n            b += times[i]\n\n    print(max(a, b), min(a, b))\n\nif __name__ == '__main__':\n    main()\n", "# Solution 1\n\n# Number of teams\nN = int(input())\n# Time required for the i-th team to understand and implement an algorithm\nT = list(map(int, input().split()))\n\n# Sorted times\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n", "N = int(input())\nteams = list(map(int, input().split()))\n\nteams.sort()\n\nprint(sum(teams[0::2]) - sum(teams[1::2]))\n", "\nN = int(input())\ntimes = list(map(int, input().split()))\n\n#N = 3\n#times = [4, 1, 2]\n\ntimes.sort()\n\ntotalTime = 0\n\nfor i in range(N):\n    totalTime += sum(times[i:])\n\nprint(totalTime)\n", "def main():\n    n = int(input())\n    times = [int(x) for x in input().split()]\n\n    times.sort()\n\n    total = 0\n    for i in range(n):\n        total += (n - i) * times[i]\n\n    print(total)\n\n\nif __name__ == '__main__':\n    main()\n", "\nN = int(input())\nteams = list(map(int, input().split()))\n\nteams.sort()\n\nprint(sum(teams[0::2]) + sum(teams[1::2])) \n", "\nN = int(input())\nteams = list(map(int, input().split()))\nteams.sort()\n\nprint(sum(teams[0::2]) - sum(teams[1::2]))\n", "\n\nN = int(input())\nteams = list(map(int, input().split()))\nteams.sort()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprint(sum(teams[0::2]) + sum(teams[1::2]))\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    times = sorted([int(x) for x in sys.stdin.readline().split()])\n\n    a = 0\n    b = 0\n    for i in range(n):\n        if i % 2 == 0:\n            a += times[i]\n        else:\n            b += times[i]\n\n    print(max(a, b))\n\nif __name__ == '__main__':\n    main()\n", "\nn = int(input())\nteams = [int(x) for x in input().split()]\nteams = sorted(teams)\n\ntotal_time = 0\n\nfor i in range(n):\n    total_time += teams[i] * (n - i)\n\nprint(total_time)\n", "\n\n# Number of teams\nN = int(input())\n# Time required for the i-th team to understand and implement an algorithm\nT = list(map(int, input().split()))\n\n# Sorted times\nT.sort()\n\ntotal_time = 0\n\n# When the number of teams is even.\nif N % 2 == 0:\n    for i in range(0, N, 2):\n        total_time += T[i]\n    for i in range(1, N, 2):\n        total_time += T[i]\n\n# When the number of teams is odd.\nelse:\n    for i in range(1, N, 2):\n        total_time += T[i]\n    for i in range(0, N, 2):\n        total_time += T[i]\n\nprint(total_time)\n", "\ndef main():\n    n = int(input()) # number of people\n    times = [int(x) for x in input().split()] # times for each person\n\n    # sort times in ascending order\n    times.sort()\n        # add the time for each person to the total\n\n    total = 0\n    for i in range(n):\n        total += (n - i) * times[i]\n\n    print(total)\n\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\nn = int(input())\nteams = [int(x) for x in sys.stdin.readline().split()]\n\nteams = sorted(teams)\n\ntotal_time = 0\n\nfor i in range(n):\n    total_time += teams[i] * (n - i)\n\nprint(total_time)\n"]