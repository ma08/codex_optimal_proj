2022-04-11 15:42:55.186035 num operations 2
2022-04-11 15:42:55.186061 size on input set 1
2022-04-11 15:42:57.729433 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom sys import stdin\nfrom collections import Counter\nfrom itertools import combinations\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == \"R\":\n            w_a += min(v, cnt_b[\"S\"])\n            w_b += min(v, cnt_b[\"P\"])\n        elif k == \"S\":\n            w_a += min(v, cnt_b[\"P\"])\n            w_b += min(v, cnt_b[\"R\"])\n        elif k == \"P\":\n            w_a += min(v, cnt_b[\"R\"])\n            w_b += min(v, cnt_b[\"S\"])\n    return w_a, w_a + n - w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(\" \")\n    b = stdin.readline().strip().split(\" \")\n    print(\" \".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nfrom sys import stdin\nfrom collections import Counter\nfrom itertools import combinations\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == \"R\":\n            w_a += min(v, cnt_b[\"S\"])\n            w_b += min(v, cnt_b[\"P\"])\n        elif k == \"S\":\n            w_a += min(v, cnt_b[\"P\"])\n            w_b += min(v, cnt_b[\"R\"])\n        elif k == \"P\":\n            w_a += min(v, cnt_b[\"R\"])\n            w_b += min(v, cnt_b[\"S\"])\n    return w_a, w_a + n - w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(\" \")\n    b = stdin.readline().strip().split(\" \")\n    print(\" \".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649706175,
  "object": "edit"
}
2022-04-11 15:42:57.729561 fix spelling mistakes 2 ['\nfrom sys import stdin\nfrom collections import Counter\nfrom itertools import combinations\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == "R":\n            w_a += min(v, cnt_b["S"])\n            w_b += min(v, cnt_b["P"])\n        elif k == "S":\n            w_a += min(v, cnt_b["P"])\n            w_b += min(v, cnt_b["R"])\n        elif k == "P":\n            w_a += min(v, cnt_b["R"])\n            w_b += min(v, cnt_b["S"])\n    return w_a, w_a + n - w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(" ")\n    b = stdin.readline().strip().split(" ")\n    print(" ".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == "__main__":\n    main()\n', '\nfrom sys import stdin\nfrom collections import Counter\nfrom itertools import combinations\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == "R":\n            w_a += min(v, cnt_b["S"])\n            w_b += min(v, cnt_b["P"])\n        elif k == "S":\n            w_a += min(v, cnt_b["P"])\n            w_b += min(v, cnt_b["R"])\n        elif k == "P":\n            w_a += min(v, cnt_b["R"])\n            w_b += min(v, cnt_b["S"])\n    return w_a, w_a + n - w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(" ")\n    b = stdin.readline().strip().split(" ")\n    print(" ".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 15:42:57.729590 size on output set 1
2022-04-11 15:42:57.729595 size on input set 1
2022-04-11 15:43:06.587425 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom sys import stdin\nfrom collections import Counter\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == \"R\":\n            w_a += min(v, cnt_b[\"S\"])\n            w_b += min(v, cnt_b[\"P\"])\n        elif k == \"S\":\n            w_a += min(v, cnt_b[\"P\"])\n            w_b += min(v, cnt_b[\"R\"])\n        elif k == \"P\":\n            w_a += min(v, cnt_b[\"R\"])\n            w_b += min(v, cnt_b[\"S\"])\n    return w_a, w_a + n - w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(\" \")\n    b = stdin.readline().strip().split(\" \")\n    print(\" \".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nfrom sys import stdin\nfrom collections import Counter\nfrom itertools import combinations\n\ndef main():\n    n = int(stdin.readline().strip())\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649706178,
  "object": "edit"
}
2022-04-11 15:43:06.587567 fix syntax errors 2 ['\nfrom sys import stdin\nfrom collections import Counter\n\ndef min_max_wins(n, a, b):\n    cnt_a = Counter(a)\n    cnt_b = Counter(b)\n    w_a = 0\n    w_b = 0\n    for k, v in cnt_a.items():\n        if k == "R":\n            w_a += min(v, cnt_b["S"])\n            w_b += min(v, cnt_b["P"])\n        elif k == "S":\n            w_a += min(v, cnt_b["P"])\n            w_b += min(v, cnt_b["R"])\n        elif k == "P":\n            w_a += min(v, cnt_b["R"])\n            w_b += min(v, cnt_b["S"])\n    return w_a, w_a + n - w_b\n\ndef main():\n    n = int(stdin.readline().strip())\n    a = stdin.readline().strip().split(" ")\n    b = stdin.readline().strip().split(" ")\n    print(" ".join(map(str, min_max_wins(n, a, b))))\n\nif __name__ == "__main__":\n    main()\n', '\nfrom sys import stdin\nfrom collections import Counter\nfrom itertools import combinations\n\ndef main():\n    n = int(stdin.readline().strip())\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 15:43:06.587589 size on output set 2
2022-04-11 15:43:06.587599 num operations 2
2022-04-11 15:43:06.587604 size on input set 1
2022-04-11 15:43:09.207599 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max wins\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        for j in range(3):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max wins\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        for j in range(3):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649706186,
  "object": "edit"
}
2022-04-11 15:43:09.207791 fix spelling mistakes 2 ['\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max wins\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        for j in range(3):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max wins\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        for j in range(3):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 15:43:09.207949 size on output set 1
2022-04-11 15:43:09.207961 size on input set 1
2022-04-11 15:43:13.391619 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max wins\n    min_wins = 0\n    max_wins = 0\n    for i in range(n):\n        for j in range(n):\n            if i == j:\n                continue\n            elif (i + 1) % n == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()] # rock, paper, scissors\n    b = [int(x) for x in input().split()] # rock, paper, scissors\n    \n    # get min/max wins\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        for j in range(3):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649706189,
  "object": "edit"
}
2022-04-11 15:43:13.391811 fix syntax errors 2 ['\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    \n    # get min/max wins\n    min_wins = 0\n    max_wins = 0\n    for i in range(n):\n        for j in range(n):\n            if i == j:\n                continue\n            elif (i + 1) % n == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    # get input\n    n = int(input())\n    a = [int(x) for x in input().split()] # rock, paper, scissors\n    b = [int(x) for x in input().split()] # rock, paper, scissors\n    \n    # get min/max wins\n    min_wins = 0\n    max_wins = 0\n    for i in range(3):\n        for j in range(3):\n            if i == j:\n                continue\n            elif (i + 1) % 3 == j:\n                min_wins += min(a[i], b[j])\n                max_wins += max(a[i], b[j])\n            else:\n                min_wins += max(a[i], b[j])\n                max_wins += min(a[i], b[j])\n    \n    # print result\n    print(min_wins, max_wins)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 15:43:13.391852 size on output set 2
