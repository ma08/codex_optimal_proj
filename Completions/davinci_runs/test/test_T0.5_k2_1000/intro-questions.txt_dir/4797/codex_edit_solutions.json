["\n\ndef main():\n    string = input()\n    stack = []\n    for c in string:\n        if c == '<':\n            stack.pop()\n        else:\n            stack.append(c)\n    print(''.join(stack))\n\nif __name__ == \"__main__\":\n    main()\n", "\ninput_string = input()\noutput_string = \"\"\n\nfor i in range(len(input_string)):\n    if input_string[i] == \"<\":\n        output_string = output_string[:-1]\n    else:\n        output_string += input_string[i]\n\nprint(output_string)\n", "\ndef main():\n    string = input()\n    string_list = []\n    for i in string:\n        if i == '<':\n            string_list.pop()\n        else:\n            string_list.append(i)\n    print(\"\".join(string_list))\n\nif __name__ == '__main__':\n    main()\n", "\n\n# I think this is the most efficient way to solve this problem.\n# I think I could have done it with a list and a while loop, but I think this is more efficient.\n\ninput = input()\n\nprint(input.replace(\"<\", \"\").replace(\">\", \"\"))\n", "\n# Solution 1\nline = input()\noutput = \"\"\nfor char in line:\n    if char == \"<\":\n        output = output[:-1]\n    else:\n        output += char\nprint(output)\n", "\n\n# Solution 1 \n\nline = input()\n\noutput = \"\"\n\nfor char in line:\n    if char == \"<\":\n        output = output[:-1]\n    else:\n        output += char\n\nprint(output)\n", "\n# Solution \n\nline = input()\n\noutput = \"\"\n\nfor char in line:\n    if char == \"<\":\n        output = output[:-1]\n    else:\n        output += char\n\nprint(output)\n", "\n# Solution \n\ns = input()\nn = len(s)\ni = 0\nwhile i < n:\n    if s[i] == '<':\n        i -= 1\n        if i < 0:\n            i = 0\n        s = s[:i] + s[i+1:]\n        n -= 1\n        i -= 1\n    else:\n        i += 1\nprint(s)\n", "\n\n# I think this is the most efficient way to solve this problem\n# I think I could have done it with a list and a while loop, but\n# I think this is more efficient.\n\ninput = input()\n\nprint(input.replace(\"<\", \"\").replace(\">\", \"\"))\n", "\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    print(s.replace(\"<\", \"\").replace(\">\", \"\"))\n\nif __name__ == \"__main__\":\n    main()\n", "\ns = input()\nn = len(s)\ni = 0\nwhile i < n:\n    if s[i] == '<':\n        i -= 1\n        if i < 0:\n            i = 0\n        s = s[:i] + s[i+1:]\n        n -= 1\n        i -= 1\n    else:\n        i += 1\nprint(s)\n", "\n# Solution by Andrew Xing \n\ndef main():\n    input = raw_input()\n    output = \"\"\n    for i in range(0, len(input)):\n        if input[i] == \"<\":\n            output = output[:len(output)-1]\n        else:\n            output += input[i]\n    print output\n\nmain()\n", "\n\n# Solution by Andrew Xing \n\ndef main():\n  input = input()\n  output = \"\"\n  for i in range(0, len(input)):\n    if input[i] == \"<\":\n      output = output[:len(output)-1]\n    else:\n      output += input[i]\n  print output\n\nmain()\n", "\n\ndef main():\n    string = input()\n    stack = []\n    for c in string:\n        if c == '<':\n            stack.pop()\n        else:\n            stack.append(c)\n    print(''.join(stack))\n\nif __name__ == '__main__':\n    main()\n", "\n\n# I think this is the most efficient way to solve this problem\n# I think I could have done it with a list and a while loop, but\n# I think this is more efficient.\n\ninput = raw_input()\n\nprint(input.replace(\"<\", \"\"))\n", "\n\ndef main():\n    s = input()\n    s_list = []\n    for i in s:\n        if i == '<':\n            s_list.pop()\n        else:\n            s_list.append(i)\n    print(''.join(s_list))\n\nif __name__ == '__main__':\n    main()\n", "# \uc2a4\ud0dd\uc744 \uc774\uc6a9\ud55c \ud480\uc774\n\ndef main():\n    string = input().strip()\n    stack = []\n    for c in string:\n        if c == '<':\n            if stack:\n                stack.pop()\n        else:\n            stack.append(c)\n    print(''.join(stack))\n\nmain()\n", "# \uc2a4\ud0dd\uc744 \uc774\uc6a9\ud55c \ud480\uc774.\n\ndef main():\n    string = input()\n    stack = []\n    for c in string:\n        if c == '<':\n            stack.pop()\n        else:\n            stack.append(c)\n    print(''.join(stack))\n\nmain()\n", "\n# Solution \nline = input()\noutput = \"\"\n\nfor char in line:\n    if char == \"<\":\n        output = output[:-1]\n    else:\n        output += char\n\nprint(output)\n"]