2022-04-12 00:12:28.556553 num operations 2
2022-04-12 00:12:28.556581 size on input set 1
2022-04-12 00:12:30.816782 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#Solution \n\ns = input()\nn = len(s)\ni = 0\nwhile i < n:\n    if s[i] == '<':\n        i -= 1\n        if i < 0:\n            i = 0\n        s = s[:i] + s[i+1:]\n        n -= 1\n        i -= 1\n    else:\n        i += 1\nprint(s)\n"
    },
    {
      "index": 1,
      "text": "\n\n#Solution \n\ns = input()\nn = len(s)\ni = 0\nwhile i < n:\n    if s[i] == '<':\n        i -= 1\n        if i < 0:\n            i = 0\n        s = s[:i] + s[i+1:]\n        n -= 1\n        i -= 1\n    else:\n        i += 1\nprint(s)\n"
    }
  ],
  "created": 1649736748,
  "object": "edit"
}
2022-04-12 00:12:30.817138 fix spelling mistakes 2 ["\n\n#Solution \n\ns = input()\nn = len(s)\ni = 0\nwhile i < n:\n    if s[i] == '<':\n        i -= 1\n        if i < 0:\n            i = 0\n        s = s[:i] + s[i+1:]\n        n -= 1\n        i -= 1\n    else:\n        i += 1\nprint(s)\n", "\n\n#Solution \n\ns = input()\nn = len(s)\ni = 0\nwhile i < n:\n    if s[i] == '<':\n        i -= 1\n        if i < 0:\n            i = 0\n        s = s[:i] + s[i+1:]\n        n -= 1\n        i -= 1\n    else:\n        i += 1\nprint(s)\n"]
2022-04-12 00:12:30.817180 size on output set 1
2022-04-12 00:12:30.817192 size on input set 1
2022-04-12 00:12:33.272864 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ns = input()\nn = len(s)\ni = 0\nwhile i < n:\n    if s[i] == '<':\n        i -= 1\n        if i < 0:\n            i = 0\n        s = s[:i] + s[i+1:]\n        n -= 1\n        i -= 1\n    else:\n        i += 1\nprint(s)\n"
    },
    {
      "index": 1,
      "text": "\n# Solution \n\ns = input()\nn = len(s)\ni = 0\nwhile i < n:\n    if s[i] == '<':\n        i -= 1\n        if i < 0:\n            i = 0\n        s = s[:i] + s[i+1:]\n        n -= 1\n        i -= 1\n    else:\n        i += 1\nprint(s)\n"
    }
  ],
  "created": 1649736751,
  "object": "edit"
}
2022-04-12 00:12:33.273252 fix syntax errors 2 ["\ns = input()\nn = len(s)\ni = 0\nwhile i < n:\n    if s[i] == '<':\n        i -= 1\n        if i < 0:\n            i = 0\n        s = s[:i] + s[i+1:]\n        n -= 1\n        i -= 1\n    else:\n        i += 1\nprint(s)\n", "\n# Solution \n\ns = input()\nn = len(s)\ni = 0\nwhile i < n:\n    if s[i] == '<':\n        i -= 1\n        if i < 0:\n            i = 0\n        s = s[:i] + s[i+1:]\n        n -= 1\n        i -= 1\n    else:\n        i += 1\nprint(s)\n"]
2022-04-12 00:12:33.273293 size on output set 2
2022-04-12 00:12:33.273329 num operations 2
2022-04-12 00:12:33.273338 size on input set 1
2022-04-12 00:12:38.805433 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ninput_string = input()\noutput_string = \"\"\n\nfor i in range(len(input_string)):\n    if input_string[i] == \"<\":\n        output_string = output_string[:-1]\n    else:\n        output_string += input_string[i]\n\nprint(output_string)\n"
    },
    {
      "index": 1,
      "text": "\n\ninput_string = input()\noutput_string = \"\"\n\nfor i in range(len(input_string)):\n    if input_string[i] == \"<\":\n        output_string = output_string[:-1]\n    else:\n        output_string += input_string[i]\n\nprint(output_string)\n"
    }
  ],
  "created": 1649736753,
  "object": "edit"
}
2022-04-12 00:12:38.805617 fix spelling mistakes 2 ['\n\ninput_string = input()\noutput_string = ""\n\nfor i in range(len(input_string)):\n    if input_string[i] == "<":\n        output_string = output_string[:-1]\n    else:\n        output_string += input_string[i]\n\nprint(output_string)\n', '\n\ninput_string = input()\noutput_string = ""\n\nfor i in range(len(input_string)):\n    if input_string[i] == "<":\n        output_string = output_string[:-1]\n    else:\n        output_string += input_string[i]\n\nprint(output_string)\n']
2022-04-12 00:12:38.805644 size on output set 1
2022-04-12 00:12:38.805654 size on input set 1
2022-04-12 00:12:40.806865 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ninput_string = input()\noutput_string = \"\"\n\nfor i in range(len(input_string)):\n    if input_string[i] == \"<\":\n        output_string = output_string[:-1]\n    else:\n        output_string += input_string[i]\n\nprint(output_string)\n"
    },
    {
      "index": 1,
      "text": "\ninput_string = input()\noutput_string = \"\"\n\nfor i in range(len(input_string)):\n    if input_string[i] == \"<\":\n        output_string = output_string[:-1]\n    else:\n        output_string += input_string[i]\n\nprint(output_string)\n"
    }
  ],
  "created": 1649736758,
  "object": "edit"
}
2022-04-12 00:12:40.807012 fix syntax errors 2 ['\ninput_string = input()\noutput_string = ""\n\nfor i in range(len(input_string)):\n    if input_string[i] == "<":\n        output_string = output_string[:-1]\n    else:\n        output_string += input_string[i]\n\nprint(output_string)\n', '\ninput_string = input()\noutput_string = ""\n\nfor i in range(len(input_string)):\n    if input_string[i] == "<":\n        output_string = output_string[:-1]\n    else:\n        output_string += input_string[i]\n\nprint(output_string)\n']
2022-04-12 00:12:40.807034 size on output set 1
2022-04-12 00:12:40.807044 num operations 2
2022-04-12 00:12:40.807050 size on input set 1
2022-04-12 00:12:43.125464 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Solution by Andrew Xing \n\ndef main():\n  input = raw_input()\n  output = \"\"\n  for i in range(0, len(input)):\n    if input[i] == \"<\":\n      output = output[:len(output)-1]\n    else:\n      output += input[i]\n  print output\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\n# Solution by Andrew Xing \n\ndef main():\n  input = raw_input()\n  output = \"\"\n  for i in range(0, len(input)):\n    if input[i] == \"<\":\n      output = output[:len(output)-1]\n    else:\n      output += input[i]\n  print output\n\nmain()\n"
    }
  ],
  "created": 1649736761,
  "object": "edit"
}
2022-04-12 00:12:43.125615 fix spelling mistakes 2 ['\n\n# Solution by Andrew Xing \n\ndef main():\n  input = raw_input()\n  output = ""\n  for i in range(0, len(input)):\n    if input[i] == "<":\n      output = output[:len(output)-1]\n    else:\n      output += input[i]\n  print output\n\nmain()\n', '\n\n# Solution by Andrew Xing \n\ndef main():\n  input = raw_input()\n  output = ""\n  for i in range(0, len(input)):\n    if input[i] == "<":\n      output = output[:len(output)-1]\n    else:\n      output += input[i]\n  print output\n\nmain()\n']
2022-04-12 00:12:43.125642 size on output set 1
2022-04-12 00:12:43.125650 size on input set 1
2022-04-12 00:12:48.449398 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Solution by Andrew Xing \n\ndef main():\n  input = input()\n  output = \"\"\n  for i in range(0, len(input)):\n    if input[i] == \"<\":\n      output = output[:len(output)-1]\n    else:\n      output += input[i]\n  print output\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n# Solution by Andrew Xing \n\ndef main():\n    input = raw_input()\n    output = \"\"\n    for i in range(0, len(input)):\n        if input[i] == \"<\":\n            output = output[:len(output)-1]\n        else:\n            output += input[i]\n    print output\n\nmain()\n"
    }
  ],
  "created": 1649736763,
  "object": "edit"
}
2022-04-12 00:12:48.449502 fix syntax errors 2 ['\n\n# Solution by Andrew Xing \n\ndef main():\n  input = input()\n  output = ""\n  for i in range(0, len(input)):\n    if input[i] == "<":\n      output = output[:len(output)-1]\n    else:\n      output += input[i]\n  print output\n\nmain()\n', '\n# Solution by Andrew Xing \n\ndef main():\n    input = raw_input()\n    output = ""\n    for i in range(0, len(input)):\n        if input[i] == "<":\n            output = output[:len(output)-1]\n        else:\n            output += input[i]\n    print output\n\nmain()\n']
2022-04-12 00:12:48.449515 size on output set 2
2022-04-12 00:12:48.449521 num operations 2
2022-04-12 00:12:48.449524 size on input set 1
2022-04-12 00:12:52.989003 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    s = input()\n    s_list = ['']\n    for i in s:\n        if i == '<':\n            s_list.pop()\n        else:\n            s_list.append(i)\n    print(\"\".join(s_list))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    string = input()\n    string_list = []\n    for i in string:\n        if i == '<':\n            string_list.pop()\n        else:\n            string_list.append(i)\n    print(\"\".join(string_list))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649736768,
  "object": "edit"
}
2022-04-12 00:12:52.989197 fix spelling mistakes 2 ['\n\ndef main():\n    s = input()\n    s_list = [\'\']\n    for i in s:\n        if i == \'<\':\n            s_list.pop()\n        else:\n            s_list.append(i)\n    print("".join(s_list))\n\nif __name__ == \'__main__\':\n    main()\n', '\n\ndef main():\n    string = input()\n    string_list = []\n    for i in string:\n        if i == \'<\':\n            string_list.pop()\n        else:\n            string_list.append(i)\n    print("".join(string_list))\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-12 00:12:52.989228 size on output set 2
2022-04-12 00:12:52.989238 size on input set 2
2022-04-12 00:12:56.004851 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    s = input()\n    s_list = []\n    for i in s:\n        if i == '<':\n            s_list.pop()\n        else:\n            s_list.append(i)\n    print(''.join(s_list))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    s = input()\n    s_list = []\n    for i in s:\n        if i == '<':\n            s_list.pop()\n        else:\n            s_list.append(i)\n    print(''.join(s_list))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649736773,
  "object": "edit"
}
2022-04-12 00:12:56.004973 fix syntax errors 2 ["\n\ndef main():\n    s = input()\n    s_list = []\n    for i in s:\n        if i == '<':\n            s_list.pop()\n        else:\n            s_list.append(i)\n    print(''.join(s_list))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    s = input()\n    s_list = []\n    for i in s:\n        if i == '<':\n            s_list.pop()\n        else:\n            s_list.append(i)\n    print(''.join(s_list))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 00:12:57.956419 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    string = input()\n    string_list = []\n    for i in string:\n        if i == '<':\n            string_list.pop()\n        else:\n            string_list.append(i)\n    print(\"\".join(string_list))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    string = input()\n    string_list = []\n    for i in string:\n        if i == '<':\n            string_list.pop()\n        else:\n            string_list.append(i)\n    print(\"\".join(string_list))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649736776,
  "object": "edit"
}
2022-04-12 00:12:57.956642 fix syntax errors 2 ['\ndef main():\n    string = input()\n    string_list = []\n    for i in string:\n        if i == \'<\':\n            string_list.pop()\n        else:\n            string_list.append(i)\n    print("".join(string_list))\n\nif __name__ == \'__main__\':\n    main()\n', '\ndef main():\n    string = input()\n    string_list = []\n    for i in string:\n        if i == \'<\':\n            string_list.pop()\n        else:\n            string_list.append(i)\n    print("".join(string_list))\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-12 00:12:57.956665 size on output set 2
2022-04-12 00:12:57.956674 num operations 2
2022-04-12 00:12:57.956678 size on input set 1
2022-04-12 00:13:00.403084 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "# \uc2a4\ud0dd\uc744 \uc774\uc6a9\ud55c \ud480\uc774\n\ndef main():\n    string = input()\n    stack = []\n    for c in string:\n        if c == '<':\n            stack.pop()\n        else:\n            stack.append(c)\n    print(''.join(stack))\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    string = input() \n    stack = []\n    for c in string:\n        if c == '<':\n            stack.pop()\n        else:\n            stack.append(c)\n    print(''.join(stack))\n\nmain()\n"
    }
  ],
  "created": 1649736778,
  "object": "edit"
}
2022-04-12 00:13:00.403300 fix spelling mistakes 2 ["# 스택을 이용한 풀이\n\ndef main():\n    string = input()\n    stack = []\n    for c in string:\n        if c == '<':\n            stack.pop()\n        else:\n            stack.append(c)\n    print(''.join(stack))\n\nmain()\n", "\n\ndef main():\n    string = input() \n    stack = []\n    for c in string:\n        if c == '<':\n            stack.pop()\n        else:\n            stack.append(c)\n    print(''.join(stack))\n\nmain()\n"]
2022-04-12 00:13:00.403344 size on output set 2
2022-04-12 00:13:00.403355 size on input set 2
2022-04-12 00:13:03.397718 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# \uc2a4\ud0dd\uc744 \uc774\uc6a9\ud55c \ud480\uc774\n\ndef main():\n    string = input().strip()\n    stack = []\n    for c in string:\n        if c == '<':\n            if stack:\n                stack.pop()\n        else:\n            stack.append(c)\n    print(''.join(stack))\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "# \uc2a4\ud0dd\uc744 \uc774\uc6a9\ud55c \ud480\uc774.\n\ndef main():\n    string = input()\n    stack = []\n    for c in string:\n        if c == '<':\n            stack.pop()\n        else:\n            stack.append(c)\n    print(''.join(stack))\n\nmain()\n"
    }
  ],
  "created": 1649736780,
  "object": "edit"
}
2022-04-12 00:13:03.397840 fix syntax errors 2 ["# 스택을 이용한 풀이\n\ndef main():\n    string = input().strip()\n    stack = []\n    for c in string:\n        if c == '<':\n            if stack:\n                stack.pop()\n        else:\n            stack.append(c)\n    print(''.join(stack))\n\nmain()\n", "# 스택을 이용한 풀이.\n\ndef main():\n    string = input()\n    stack = []\n    for c in string:\n        if c == '<':\n            stack.pop()\n        else:\n            stack.append(c)\n    print(''.join(stack))\n\nmain()\n"]
2022-04-12 00:13:06.165422 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    string = input()\n    stack = []\n    for c in string:\n        if c == '<':\n            stack.pop()\n        else:\n            stack.append(c)\n    print(''.join(stack))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    string = input()\n    stack = []\n    for c in string:\n        if c == '<':\n            stack.pop()\n        else:\n            stack.append(c)\n    print(''.join(stack))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649736783,
  "object": "edit"
}
2022-04-12 00:13:06.165522 fix syntax errors 2 ['\n\ndef main():\n    string = input()\n    stack = []\n    for c in string:\n        if c == \'<\':\n            stack.pop()\n        else:\n            stack.append(c)\n    print(\'\'.join(stack))\n\nif __name__ == "__main__":\n    main()\n', "\n\ndef main():\n    string = input()\n    stack = []\n    for c in string:\n        if c == '<':\n            stack.pop()\n        else:\n            stack.append(c)\n    print(''.join(stack))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 00:13:06.165536 size on output set 4
2022-04-12 00:13:06.165549 num operations 2
2022-04-12 00:13:06.165552 size on input set 1
2022-04-12 00:13:08.998342 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    print(s.replace(\"<\", \"\").replace(\">\", \"\"))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    print(s.replace(\"<\", \"\").replace(\">\", \"\"))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649736786,
  "object": "edit"
}
2022-04-12 00:13:08.998528 fix spelling mistakes 2 ['\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    print(s.replace("<", "").replace(">", ""))\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    print(s.replace("<", "").replace(">", ""))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 00:13:08.998542 size on output set 1
2022-04-12 00:13:08.998547 size on input set 1
2022-04-12 00:13:10.948623 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    print(s.replace(\"<\", \"\").replace(\">\", \"\"))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    print(s.replace(\"<\", \"\").replace(\">\", \"\"))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649736789,
  "object": "edit"
}
2022-04-12 00:13:10.948726 fix syntax errors 2 ['\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    print(s.replace("<", "").replace(">", ""))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    print(s.replace("<", "").replace(">", ""))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 00:13:10.948738 size on output set 1
2022-04-12 00:13:10.948745 num operations 2
2022-04-12 00:13:10.948748 size on input set 1
2022-04-12 00:13:13.068511 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Solution \n\nline = input()\n\noutput = \"\"\n\nfor char in line:\n    if char == \"<\":\n        output = output[:-1]\n    else:\n        output += char\n\nprint(output)\n"
    },
    {
      "index": 1,
      "text": "\n\n# Solution 1\n\nline = input()\n\noutput = \"\"\n\nfor char in line:\n    if char == \"<\":\n        output = output[:-1]\n    else:\n        output += char\n\nprint(output)\n"
    }
  ],
  "created": 1649736791,
  "object": "edit"
}
2022-04-12 00:13:13.068695 fix spelling mistakes 2 ['\n\n# Solution \n\nline = input()\n\noutput = ""\n\nfor char in line:\n    if char == "<":\n        output = output[:-1]\n    else:\n        output += char\n\nprint(output)\n', '\n\n# Solution 1\n\nline = input()\n\noutput = ""\n\nfor char in line:\n    if char == "<":\n        output = output[:-1]\n    else:\n        output += char\n\nprint(output)\n']
2022-04-12 00:13:13.068723 size on output set 2
2022-04-12 00:13:13.068733 size on input set 2
2022-04-12 00:13:15.334741 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Solution \nline = input()\noutput = \"\"\n\nfor char in line:\n    if char == \"<\":\n        output = output[:-1]\n    else:\n        output += char\n\nprint(output)\n"
    },
    {
      "index": 1,
      "text": "\n# Solution \n\nline = input()\n\noutput = \"\"\n\nfor char in line:\n    if char == \"<\":\n        output = output[:-1]\n    else:\n        output += char\n\nprint(output)\n"
    }
  ],
  "created": 1649736793,
  "object": "edit"
}
2022-04-12 00:13:15.335001 fix syntax errors 2 ['\n# Solution \nline = input()\noutput = ""\n\nfor char in line:\n    if char == "<":\n        output = output[:-1]\n    else:\n        output += char\n\nprint(output)\n', '\n# Solution \n\nline = input()\n\noutput = ""\n\nfor char in line:\n    if char == "<":\n        output = output[:-1]\n    else:\n        output += char\n\nprint(output)\n']
2022-04-12 00:13:18.078708 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Solution 1\nline = input()\noutput = \"\"\nfor char in line:\n    if char == \"<\":\n        output = output[:-1]\n    else:\n        output += char\nprint(output)\n"
    },
    {
      "index": 1,
      "text": "\n\n# Solution 1 \n\nline = input()\n\noutput = \"\"\n\nfor char in line:\n    if char == \"<\":\n        output = output[:-1]\n    else:\n        output += char\n\nprint(output)\n"
    }
  ],
  "created": 1649736795,
  "object": "edit"
}
2022-04-12 00:13:18.078853 fix syntax errors 2 ['\n# Solution 1\nline = input()\noutput = ""\nfor char in line:\n    if char == "<":\n        output = output[:-1]\n    else:\n        output += char\nprint(output)\n', '\n\n# Solution 1 \n\nline = input()\n\noutput = ""\n\nfor char in line:\n    if char == "<":\n        output = output[:-1]\n    else:\n        output += char\n\nprint(output)\n']
2022-04-12 00:13:18.078866 size on output set 4
2022-04-12 00:13:18.078873 num operations 2
2022-04-12 00:13:18.078877 size on input set 1
2022-04-12 00:13:21.920988 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# I think this is the most efficient way to solve this problem\n# I think I could have done it with a list and a while loop, but\n# I think this is more efficient.\n\ninput = input()\n\nprint(input.replace(\"<\", \"\"))\n"
    },
    {
      "index": 1,
      "text": "\n\n# I think this is the most efficient way to solve this problem.\n# I think I could have done it with a list and a while loop, but I think this is more efficient.\n\ninput = input()\n\nprint(input.replace(\"<\", \"\"))\n"
    }
  ],
  "created": 1649736798,
  "object": "edit"
}
2022-04-12 00:13:21.921112 fix spelling mistakes 2 ['\n\n# I think this is the most efficient way to solve this problem\n# I think I could have done it with a list and a while loop, but\n# I think this is more efficient.\n\ninput = input()\n\nprint(input.replace("<", ""))\n', '\n\n# I think this is the most efficient way to solve this problem.\n# I think I could have done it with a list and a while loop, but I think this is more efficient.\n\ninput = input()\n\nprint(input.replace("<", ""))\n']
2022-04-12 00:13:21.921125 size on output set 2
2022-04-12 00:13:21.921130 size on input set 2
2022-04-12 00:13:24.558738 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# I think this is the most efficient way to solve this problem.\n# I think I could have done it with a list and a while loop, but I think this is more efficient.\n\ninput = input()\n\nprint(input.replace(\"<\", \"\").replace(\">\", \"\"))\n"
    },
    {
      "index": 1,
      "text": "\n\n# I think this is the most efficient way to solve this problem.\n# I think I could have done it with a list and a while loop, but I think this is more efficient.\n\ninput = input()\n\nprint(input.replace(\"<\", \"\").replace(\">\", \"\"))\n"
    }
  ],
  "created": 1649736802,
  "object": "edit"
}
2022-04-12 00:13:24.558978 fix syntax errors 2 ['\n\n# I think this is the most efficient way to solve this problem.\n# I think I could have done it with a list and a while loop, but I think this is more efficient.\n\ninput = input()\n\nprint(input.replace("<", "").replace(">", ""))\n', '\n\n# I think this is the most efficient way to solve this problem.\n# I think I could have done it with a list and a while loop, but I think this is more efficient.\n\ninput = input()\n\nprint(input.replace("<", "").replace(">", ""))\n']
2022-04-12 00:13:27.237374 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# I think this is the most efficient way to solve this problem\n# I think I could have done it with a list and a while loop, but\n# I think this is more efficient.\n\ninput = input()\n\nprint(input.replace(\"<\", \"\").replace(\">\", \"\"))\n"
    },
    {
      "index": 1,
      "text": "\n\n# I think this is the most efficient way to solve this problem\n# I think I could have done it with a list and a while loop, but\n# I think this is more efficient.\n\ninput = raw_input()\n\nprint(input.replace(\"<\", \"\"))\n"
    }
  ],
  "created": 1649736804,
  "object": "edit"
}
2022-04-12 00:13:27.237867 fix syntax errors 2 ['\n\n# I think this is the most efficient way to solve this problem\n# I think I could have done it with a list and a while loop, but\n# I think this is more efficient.\n\ninput = input()\n\nprint(input.replace("<", "").replace(">", ""))\n', '\n\n# I think this is the most efficient way to solve this problem\n# I think I could have done it with a list and a while loop, but\n# I think this is more efficient.\n\ninput = raw_input()\n\nprint(input.replace("<", ""))\n']
2022-04-12 00:13:27.237908 size on output set 3
