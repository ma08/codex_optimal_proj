["\nimport math\n\ndef main():\n    V = int(input())\n    # Find the smallest integer that is a factor of V\n    for i in range(2, int(math.sqrt(V)) + 1):\n        if V % i == 0:\n            # The cost of the box is the perimeter of the rectangle\n            print(2 * (V // i + i))\n            break\n\nif __name__ == \"__main__\":\n    main()\n", "import math\n\n\ndef main():\n    V = int(input())\n    if V == 1:\n        print(6)\n    elif V == 2:\n        print(12)\n    elif V == 3:\n        print(14)\n    else:\n        a = math.ceil(math.sqrt(V))  # a is the length of the side of the square\n        b = math.floor(V / a)  # b is the length of the side of the rectangle\n        if a * b < V:\n            b += 1\n        print(2 * (a + b))\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport math\nV = int(input())\na = math.ceil(V**(1/3))\nb = math.ceil((V/a)**(1/2))\nc = math.ceil(V/(a*b))\nprint(2*(a*b + b*c + a*c))\n", "import math\n\ndef main():\n    V = int(input())\n    if V == 1:\n        print(5)\n    elif V == 2:\n        print(11)\n    elif V == 3:\n        print(13)\n    else:\n        a = math.ceil(math.sqrt(V))\n        b = math.floor(V / a)\n        if a * b < V:\n            b += 1\n        print(2 * (a + b))\n\nif __name__ == \"__main__\":\n    main()\n", "import math\n\nV = int(input())\n\na = math.ceil(V**(1/3))\nb = math.ceil((V/a)**(1/2))\nc = math.ceil(V/(a*b))\n\nprint(2*(a*b + b*c + a*c))\n", "import math\n\nV = int(input())\n\na = math.ceil(V ** (1 / 3))\nb = math.ceil((V / a) ** (1 / 2))\nc = math.ceil(V / (a * b))\n\nprint(2 * (a * b + b * c + a * c))\n", "\n\nimport sys\n\ndef main():\n    V = int(sys.stdin.readline())\n    n = int(V**(1/3))\n    while n**3 < V:\n        n += 1\n    x = n\n    y = n\n    z = n\n    while x*y*z != V and x > 0 and y > 0 and z > 0 and x*y*z > V:\n        x -= 1\n        y -= 1\n        z -= 1\n    s = 2*x*y + 2*x*z + 2*y*z\n    print(s)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    v = int(sys.stdin.readline())\n    print(v * 6)\n\n\nmain()\n", "\nimport math\n\ndef main():\n    V = int(input())\n    if V == 1:\n        print(6)\n    elif V == 2:\n        print(12)\n    elif V == 3:\n        print(14)\n    else:\n        a = math.ceil(math.sqrt(V))  # a is the length of the side of the square\n        b = math.floor(V / a)  # b is the length of the side of the rectangle\n        if a * b < V:\n            b += 1\n        print(2 * (a + b))\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport math\n\ndef main():\n    n = int(input())\n    print(find_cost(n), end=\"\")\n\ndef find_cost(n):\n    cost = math.inf\n    for i in range(1, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            if 2 * i + 2 * (n // i) < cost:\n                cost = 2 * i + 2 * (n // i)\n    return cost\n\nif __name__ == \"__main__\":\n    main()\n", "\n# CODE:\nn = int(input())\nside1 = n\nside2 = 1\nwhile side1 * side2 != n:\n    if side1 * side2 > n:\n        side1 -= 1\n    else:\n        side2 += 1\nprint(2 * (side1 + side2))\n", "\nimport math\n\ndef main():\n\tn = int(input())\n\tprint(find_cost(n))\n\ndef find_cost(n):\n\tcost = math.inf\n\tfor i in range(1, int(math.sqrt(n)) + 1):\n\t\tif n % i == 0:\n\t\t\tif 2 * i + 2 * (n // i) < cost:\n\t\t\t\tcost = 2 * i + 2 * (n // i)\n\treturn cost\n\nif __name__ == \"__main__\":\n\tmain()\n", "\nimport math\n\ndef main():\n    v = int(input())\n    print(find_cost(v))\n\ndef find_cost(v):\n    cost = math.inf\n    for i in range(1, int(math.sqrt(v)) + 1):\n        if v % i == 0:\n            if 2 * i + 2 * (v // i) < cost:\n                cost = 2 * i + 2 * (v // i)\n    return cost\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    volume = int(sys.stdin.readline())\n    n = int(volume**(1.0/3))\n    while n**3 < volume:\n        n += 1\n    x = n\n    y = n\n    z = n\n    while x*y*z != volume:\n        x -= 1\n        y -= 1\n        z -= 1\n    s = 2*x*y + 2*x*z + 2*y*z\n    print(s)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    v = int(sys.stdin.readline())\n    print(v*7)\n\nmain()\n", "import math\n\n\ndef main():\n    V = int(input())\n    if V == 1:\n        print(5)\n    elif V == 2:\n        print(11)\n    elif V == 3:\n        print(13)\n    else:\n        a = math.ceil(math.sqrt(V))\n        b = math.floor(V / a)\n        if a * b < V:\n            b += 1\n        print(2 * (a + b))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    V = int(sys.stdin.readline())\n    n = int(V**(1.0/3))\n    while n**3 < V:\n        n += 1\n    x = n\n    y = n\n    z = n\n    while x*y*z != V and x > 0 and y > 0 and z > 0:\n        x -= 1\n        y -= 1\n        z -= 1\n    s = 2*x*y + 2*x*z + 2*y*z\n    print(s)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport math\n\nV = int(input())\n\n# Brute force solution\n# for a in range(1, V+1):\n#     for b in range(1, V+1):\n#         for c in range(1, V+1):\n#             if a*b*c == V:\n#                 print(2*(a*b + a*c + b*c))\n#                 break\n\n# Solve equation V = a*b*c\n# a = b = c = V^(1/3)\n\n# Solve equation 2*(a*b + a*c + b*c)\n# 2*(a*b + a*c + b*c) = 2*(a^2*b + a*c^2 + b^2*c)\n# 2*(a*b + a*c + b*c) = 2*(a^2*V^(1/3) + a*V^(1/3)^2 + V^(1/3)*b^2)\n# 2*(a*b + a*c + b*c) = 2*(a^2*V^(1/3) + a*V^(1/3)^2 + V^(1/3)*V^(2/3))\n# 2*(a*b + a*c + b*c) = 2*(a^2*V^(1/3) + a*V^(1/3)^2 + V^(1/3)*V^(2/3))\n# 2*(a*b + a*c + b*c) = 2*(a^2*V^(1/3) + a*V^(1/3)^2 + V^(1/3)*V^(2/3))\n# 2*(a*b + a*c + b*c) = 2*(a^2*V^(1/3) + a*V^(1/3)^2 + V^(1/3)*V^(2/3))\n\nprint(2*(math.pow(V, (1/3))**2 + math.pow(V, (1/3))**2 + math.pow(V, (1/3))**2))\n", "#!/usr/bin/env python\n\nimport sys\n\ndef main():\n    v = int(sys.stdin.readline())\n    print(v*7)\n\nmain()\n", "import math\nV = int(input())\n\na = math.ceil(V**(1/3))\nb = math.ceil((V/a)**(1/2))\nc = math.ceil(V/(a*b))\n\nprint(2*(a*b + b*c + a*c))\n", "#!/usr/bin/env python3\n\nimport math\n\ndef main():\n    V = int(input())\n    # Find the smallest integer that is a factor of V.\n    for i in range(2, int(math.sqrt(V)) + 1):\n        if V % i == 0:\n            # The cost of the box is the perimeter of the rectangle.\n            print(2 * (V // i + i))\n            break\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# CODE:\nn = int(input())\nside1 = n\nside2 = 1\nwhile side1 * side2 != n:\n    if side1 * side2 > n:\n        side1 -= 1\n    else:\n        side2 += 1\nprint(2 * (side1 + side2))\n", "import sys\n\ndef main():\n    v = int(sys.argv[1])\n    print(v * 6)\n\nmain()\n"]