["\n\ndef main():\n    N = int(input())\n    K = int(input())\n    x = list(map(int, input().split()))\n\n    x_a = [0] * N\n    x_b = [K] * N\n    x_total = x_a + x_b\n    x_total.sort()  # sort x_total\n\n    x_sort = sorted(x)  # sort x\n    x_sort.append(K)  # add K to x_sort\n\n    d = 0\n    for i in range(N):\n        d += abs(x_sort[i] - x_total[i])\n\n    print(d)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef get_line():\n    return list(map(int, sys.stdin.readline().rstrip().split()))\n\ndef main():\n    N, K = get_line()\n    A = get_line()\n    A.sort()\n    ans = 0\n    for i in range(K):\n        ans += A[i]\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N = int(input())\n    K = int(input())\n    x = list(map(int, input().split()))\n\n    x_sort = sorted(x)\n    x_sort.append(K)\n    x_sort.sort()\n\n    x_sort = sorted(x)\n    x_sort.append(K)\n\n    d = 0\n    for i in range(N):\n        d += abs(x_sort[i] - x_total[i])\n\n    print(d)\n\n\nif __name__ == \"__main__\":\n    main()\n", "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef get_line():\n    return list(map(int, sys.stdin.readline().rstrip().split()))\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef get_line():\n    return list(map(int, sys.stdin.readline().rstrip().split(' ')))\n\ndef main():\n    N = get_line()[0]\n    K = get_line()[0]\n    xs = get_line()\n    min_distance = 0\n    for x in xs:\n        min_distance += min(x, K - x) * 2\n    print(min_distance)\n\nif __name__ == '__main__':\n    main()\n", "# -*- coding: utf-8 -*-\n\nimport sys\n\n\ndef get_line():\n    return list(map(int, sys.stdin.readline().rstrip().split()))\n\n\ndef main():\n    K = get_line()[0]\n    xs = get_line()\n    min_distance = 0\n    for x in xs:\n        min_distance += min(x, K - x) * 2\n    print(min_distance)\n\n\nif __name__ == '__main__':\n    main()\n"]