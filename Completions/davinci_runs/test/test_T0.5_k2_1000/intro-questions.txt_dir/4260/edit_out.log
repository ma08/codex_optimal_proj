2022-04-11 18:59:56.357001 num operations 2
2022-04-11 18:59:56.357026 size on input set 1
2022-04-11 18:59:58.422858 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649717996,
  "object": "edit"
}
2022-04-11 18:59:58.423132 fix spelling mistakes 2 ["\nimport math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 18:59:58.423161 size on output set 2
2022-04-11 18:59:58.423178 size on input set 2
2022-04-11 19:00:00.357631 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "def main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649717998,
  "object": "edit"
}
2022-04-11 19:00:00.358184 fix syntax errors 2 ["\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 19:00:03.167056 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    T, X = map(int, input().split())\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    T, X = map(float, input().split())\n    print(T / X)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649718000,
  "object": "edit"
}
2022-04-11 19:00:03.167326 fix syntax errors 2 ["\n\ndef main():\n    T, X = map(int, input().split())\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    T, X = map(float, input().split())\n    print(T / X)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 19:00:03.167362 size on output set 4
2022-04-11 19:00:03.167384 num operations 2
2022-04-11 19:00:03.167394 size on input set 1
2022-04-11 19:00:06.500739 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 \ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 \ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649718003,
  "object": "edit"
}
2022-04-11 19:00:06.500926 fix spelling mistakes 2 ["\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 \ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 \ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 19:00:06.500963 size on output set 1
2022-04-11 19:00:06.500968 size on input set 1
2022-04-11 19:00:10.737760 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except EOFError:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except EOFError:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    a, b = read_ints()\n    print(a + b)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649718006,
  "object": "edit"
}
2022-04-11 19:00:10.737871 fix syntax errors 2 ["\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except EOFError:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except EOFError:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    a, b = read_ints()\n    print(a + b)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 19:00:10.737887 size on output set 2
