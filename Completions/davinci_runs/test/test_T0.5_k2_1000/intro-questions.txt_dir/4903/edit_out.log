2022-04-12 02:38:52.970097 num operations 2
2022-04-12 02:38:52.970132 size on input set 1
2022-04-12 02:38:56.169821 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\njon_ah = input()\ndoc_ah = input()\n\nif len(jon_ah) >= len(doc_ah):\n    print(\"go\")\nelse:\n    print(\"no\")\n"
    },
    {
      "index": 1,
      "text": "\n\njon_ah = input()\ndoc_ah = input()\n\nif len(jon_ah) >= len(doc_ah):\n    print(\"go\")\nelse:\n    print(\"no\")\n"
    }
  ],
  "created": 1649745533,
  "object": "edit"
}
2022-04-12 02:38:56.169932 fix spelling mistakes 2 ['\n\njon_ah = input()\ndoc_ah = input()\n\nif len(jon_ah) >= len(doc_ah):\n    print("go")\nelse:\n    print("no")\n', '\n\njon_ah = input()\ndoc_ah = input()\n\nif len(jon_ah) >= len(doc_ah):\n    print("go")\nelse:\n    print("no")\n']
2022-04-12 02:38:56.169947 size on output set 1
2022-04-12 02:38:56.169951 size on input set 1
2022-04-12 02:38:58.598759 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\njon_ah = int(input())\ndoc_ah = int(input())\n\nif len(jon_ah) >= len(doc_ah):\n    print(\"go\")\nelse:\n    print(\"no\")\n"
    },
    {
      "index": 1,
      "text": "\n\njon_ah = input(\"\")\ndoc_ah = input(\"\")\n\nif len(jon_ah) >= len(doc_ah):\n    print(\"go\")\nelse:\n    print(\"no\")\n"
    }
  ],
  "created": 1649745536,
  "object": "edit"
}
2022-04-12 02:38:58.598880 fix syntax errors 2 ['\n\njon_ah = int(input())\ndoc_ah = int(input())\n\nif len(jon_ah) >= len(doc_ah):\n    print("go")\nelse:\n    print("no")\n', '\n\njon_ah = input("")\ndoc_ah = input("")\n\nif len(jon_ah) >= len(doc_ah):\n    print("go")\nelse:\n    print("no")\n']
2022-04-12 02:38:58.598891 size on output set 2
2022-04-12 02:38:58.598901 num operations 2
2022-04-12 02:38:58.598904 size on input set 1
2022-04-12 02:39:01.506696 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\njohn = input()\ndoctor = input()\n\nif len(john) >= len(doctor):\n    print(\"go\")\nelse:\n    print(\"no\")\n"
    },
    {
      "index": 1,
      "text": "\n\njon = input()\ndoc = input()\n\nif len(jon) >= len(doc):\n    print(\"go\") \nelse:\n    print(\"no\")\n"
    }
  ],
  "created": 1649745538,
  "object": "edit"
}
2022-04-12 02:39:01.506799 fix spelling mistakes 2 ['\n\njohn = input()\ndoctor = input()\n\nif len(john) >= len(doctor):\n    print("go")\nelse:\n    print("no")\n', '\n\njon = input()\ndoc = input()\n\nif len(jon) >= len(doc):\n    print("go") \nelse:\n    print("no")\n']
2022-04-12 02:39:01.506811 size on output set 2
2022-04-12 02:39:01.506814 size on input set 2
2022-04-12 02:39:04.010790 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\njon = input()\ndoc = input()\n\nif len(jon) >= len(doc):\n    print(\"go\")\nelse:\n    print(\"no\")\n"
    },
    {
      "index": 1,
      "text": "\n\njon = input(\"jon: \")\ndoc = input(\"doc: \")\n\nif len(jon) >= len(doc):\n    print(\"go\") \nelse:\n    print(\"no\")\n"
    }
  ],
  "created": 1649745541,
  "object": "edit"
}
2022-04-12 02:39:04.011214 fix syntax errors 2 ['\n\njon = input()\ndoc = input()\n\nif len(jon) >= len(doc):\n    print("go")\nelse:\n    print("no")\n', '\n\njon = input("jon: ")\ndoc = input("doc: ")\n\nif len(jon) >= len(doc):\n    print("go") \nelse:\n    print("no")\n']
2022-04-12 02:39:06.418106 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\njohn = input(\"Enter your name: \")\ndoctor = input(\"Enter your doctor's name: \")\n\nif len(john) >= len(doctor):\n    print(\"go\")\nelse:\n    print(\"no\")\n"
    },
    {
      "index": 1,
      "text": "\n\njohn = input(\"Enter your name: \")\ndoctor = input(\"Enter your name: \")\n\nif len(john) >= len(doctor):\n    print(\"go\")\nelse:\n    print(\"no\")\n"
    }
  ],
  "created": 1649745544,
  "object": "edit"
}
2022-04-12 02:39:06.418358 fix syntax errors 2 ['\n\njohn = input("Enter your name: ")\ndoctor = input("Enter your doctor\'s name: ")\n\nif len(john) >= len(doctor):\n    print("go")\nelse:\n    print("no")\n', '\n\njohn = input("Enter your name: ")\ndoctor = input("Enter your name: ")\n\nif len(john) >= len(doctor):\n    print("go")\nelse:\n    print("no")\n']
2022-04-12 02:39:06.418379 size on output set 4
2022-04-12 02:39:06.418393 num operations 2
2022-04-12 02:39:06.418397 size on input set 1
2022-04-12 02:39:08.941367 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\njon = input()\ndoc = input()\nif len(jon) >= len(doc):\n    print(\"go\") \nelse:\n    print(\"no\")\n"
    },
    {
      "index": 1,
      "text": "\njohn = input()\ndoc = input()\nif len(john) >= len(doc):\n    print(\"go\")\nelse:\n    print(\"no\")\n"
    }
  ],
  "created": 1649745546,
  "object": "edit"
}
2022-04-12 02:39:08.941466 fix spelling mistakes 2 ['\njon = input()\ndoc = input()\nif len(jon) >= len(doc):\n    print("go") \nelse:\n    print("no")\n', '\njohn = input()\ndoc = input()\nif len(john) >= len(doc):\n    print("go")\nelse:\n    print("no")\n']
2022-04-12 02:39:08.941476 size on output set 2
2022-04-12 02:39:08.941479 size on input set 2
2022-04-12 02:39:11.261526 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "jon = input()\ndoc = input()\nif len(jon) >= len(doc):\n    print(\"go\")\nelse:\n    print(\"no\")\n"
    },
    {
      "index": 1,
      "text": "jon = input()\ndoc = input()\nif len(jon) >= len(doc):\n    print(\"go\")\nelse:\n    print(\"no\")\n"
    }
  ],
  "created": 1649745549,
  "object": "edit"
}
2022-04-12 02:39:11.261715 fix syntax errors 2 ['jon = input()\ndoc = input()\nif len(jon) >= len(doc):\n    print("go")\nelse:\n    print("no")\n', 'jon = input()\ndoc = input()\nif len(jon) >= len(doc):\n    print("go")\nelse:\n    print("no")\n']
2022-04-12 02:39:15.241554 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\njohn = input(\"john: \")\ndoc = input(\"doc: \")\n\nprint(len(john))\nprint(len(doc))\n\n# if len(john) >= len(doc):\n#     print(\"go\")\n# else:\n#     print(\"no\")\n"
    },
    {
      "index": 1,
      "text": "\njohn = input(\"Enter a string: \")\ndoc = input(\"Enter another string: \")\nif len(john) >= len(doc):\n    print(\"go\")\nelse:\n    print(\"no\")\n"
    }
  ],
  "created": 1649745551,
  "object": "edit"
}
2022-04-12 02:39:15.241735 fix syntax errors 2 ['\njohn = input("john: ")\ndoc = input("doc: ")\n\nprint(len(john))\nprint(len(doc))\n\n# if len(john) >= len(doc):\n#     print("go")\n# else:\n#     print("no")\n', '\njohn = input("Enter a string: ")\ndoc = input("Enter another string: ")\nif len(john) >= len(doc):\n    print("go")\nelse:\n    print("no")\n']
2022-04-12 02:39:15.241760 size on output set 3
2022-04-12 02:39:15.241773 num operations 2
2022-04-12 02:39:15.241782 size on input set 1
2022-04-12 02:39:17.406716 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\njm = raw_input() \ndoc = raw_input()\n\nif len(jm) >= len(doc):\n    print 'go'\nelse:\n    print 'no'\n"
    },
    {
      "index": 1,
      "text": "\n\njm = raw_input() \ndoc = raw_input()\n\nif len(jm) >= len(doc):\n    print 'go'\nelse:\n    print 'no'\n"
    }
  ],
  "created": 1649745555,
  "object": "edit"
}
2022-04-12 02:39:17.406948 fix spelling mistakes 2 ["\n\njm = raw_input() \ndoc = raw_input()\n\nif len(jm) >= len(doc):\n    print 'go'\nelse:\n    print 'no'\n", "\n\njm = raw_input() \ndoc = raw_input()\n\nif len(jm) >= len(doc):\n    print 'go'\nelse:\n    print 'no'\n"]
2022-04-12 02:39:17.406989 size on output set 1
2022-04-12 02:39:17.407002 size on input set 1
2022-04-12 02:39:20.629112 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\njm = input() \ndoc = input()\n\nif len(jm) >= len(doc):\n    print('go')\nelse:\n    print('no')\n"
    },
    {
      "index": 1,
      "text": "\n\njm = raw_input() \ndoc = raw_input()\n\nif len(jm) >= len(doc):\n    print ('go')\nelse:\n    print ('no')\n"
    }
  ],
  "created": 1649745557,
  "object": "edit"
}
2022-04-12 02:39:20.629235 fix syntax errors 2 ["\n\njm = input() \ndoc = input()\n\nif len(jm) >= len(doc):\n    print('go')\nelse:\n    print('no')\n", "\n\njm = raw_input() \ndoc = raw_input()\n\nif len(jm) >= len(doc):\n    print ('go')\nelse:\n    print ('no')\n"]
2022-04-12 02:39:20.629307 size on output set 2
2022-04-12 02:39:20.629313 num operations 2
2022-04-12 02:39:20.629316 size on input set 1
2022-04-12 02:39:23.781437 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    john = input().strip()\n    doc = input().strip()\n    if len(john)>=len(doc):\n        print(\"go\")\n    else:\n        print(\"no\")\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    john = input().strip()\n    doctor = input().strip()\n    if len(john)>=len(doctor):\n        print(\"go\")\n    else:\n        print(\"no\")\n\nmain()\n"
    }
  ],
  "created": 1649745560,
  "object": "edit"
}
2022-04-12 02:39:23.781604 fix spelling mistakes 2 ['\n\ndef main():\n    john = input().strip()\n    doc = input().strip()\n    if len(john)>=len(doc):\n        print("go")\n    else:\n        print("no")\n\nmain()\n', '\n\ndef main():\n    john = input().strip()\n    doctor = input().strip()\n    if len(john)>=len(doctor):\n        print("go")\n    else:\n        print("no")\n\nmain()\n']
2022-04-12 02:39:23.781632 size on output set 2
2022-04-12 02:39:23.781641 size on input set 2
2022-04-12 02:39:26.224666 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    john = input().strip()\n    doc = input().strip()\n    if len(john) >= len(doc):\n        print(\"go\")\n    else:\n        print(\"no\")\n\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    john = input().strip()\n    doc = input().strip()\n    if len(john) >= len(doc):\n        print(\"go\")\n    else:\n        print(\"no\")\n\nmain()\n"
    }
  ],
  "created": 1649745564,
  "object": "edit"
}
2022-04-12 02:39:26.224772 fix syntax errors 2 ['\n\ndef main():\n    john = input().strip()\n    doc = input().strip()\n    if len(john) >= len(doc):\n        print("go")\n    else:\n        print("no")\n\n\nmain()\n', '\n\ndef main():\n    john = input().strip()\n    doc = input().strip()\n    if len(john) >= len(doc):\n        print("go")\n    else:\n        print("no")\n\nmain()\n']
2022-04-12 02:39:28.625079 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    john = input().strip()\n    doctor = input().strip()\n    if len(john) >= len(doctor):\n        print(\"go\")\n    else:\n        print(\"no\")\n\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    john = input().strip()\n    doctor = input().strip()\n    if len(john) >= len(doctor):\n        print(\"go\")\n    else:\n        print(\"no\")\n\n\nmain()\n"
    }
  ],
  "created": 1649745566,
  "object": "edit"
}
2022-04-12 02:39:28.625218 fix syntax errors 2 ['\n\ndef main():\n    john = input().strip()\n    doctor = input().strip()\n    if len(john) >= len(doctor):\n        print("go")\n    else:\n        print("no")\n\n\nmain()\n', '\n\ndef main():\n    john = input().strip()\n    doctor = input().strip()\n    if len(john) >= len(doctor):\n        print("go")\n    else:\n        print("no")\n\n\nmain()\n']
2022-04-12 02:39:28.625320 size on output set 3
