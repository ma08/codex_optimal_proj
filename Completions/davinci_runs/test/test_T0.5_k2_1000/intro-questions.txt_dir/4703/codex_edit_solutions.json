["from itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    s = s.split('+')\n    return sum(map(int, s))\n\ndef main():\n    s = input()\n    ans = 0\n    for i in range(1, len(s)):  # 1\u3064\u4ee5\u4e0a\u306e+\u3092\u8ffd\u52a0\u3059\u308b\n        for c in combinations(range(len(s) - 1), i):  # i\u500b\u306e+\u3092\u8ffd\u52a0\u3059\u308b\n            tmp = s\n            for j in c:  # j\u756a\u76ee\u306e+\u3092\u8ffd\u52a0\u3059\u308b\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    s = s.split('+')\n    return sum(map(int, s))\n\ndef main():\n    s = input().strip()\n    ans = 0\n    for i in range(1, len(s)):\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    return sum(map(int, s.split('+')))\n\ndef main():\n    s = input().strip()\n    ans = 0\n    for i in range(1, len(s)): # i: the number of '+'\n        for c in combinations(range(len(s) - 1), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nfrom itertools import combinations\n\ndef calc(s):\n    if '+' not in s:\n        return int(s)\n    s = s.split('+')\n    return sum(map(int, s))\n\ndef main():\n    s = input()\n    ans = 0\n    for i in range(1, len(s)):\n        for c in combinations(range(len(s)), i):\n            tmp = s\n            for j in c:\n                tmp = tmp[:j+1] + '+' + tmp[j+1:]\n            ans += calc(tmp)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef formula_evaluation(S):\n    if len(S) <= 3:\n        return sum(map(int, S))\n    return sum(map(int, S)) + formula_evaluation(S[2:])\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    print(formula_evaluation(S))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef formula_evaluation(S): \n    if len(S) == 1:\n        return int(S)\n    if len(S) == 2:\n        return int(S) + int(S[0])\n    if len(S) == 3:\n        return int(S) + int(S[0]) + int(S[1])\n    return int(S) + int(S[0]) + int(S[1]) + formula_evaluation(S[2:])\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    print(formula_evaluation(S))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef formula_evaluation(S): \n    if len(S) == 1:\n        return int(S)\n    if len(S) == 2:\n        return int(S) + int(S[0])\n    if len(S) == 3:\n        return int(S) + int(S[0]) + int(S[1])\n    return int(S) + int(S[0]) + int(S[1]) + formula_evaluation(S[2:])\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    print(formula_evaluation(S))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef formula_evaluation(S):\n    if len(S) <= 3:\n        return sum([int(s) for s in S])\n    return sum([int(s) for s in S[:3]]) + formula_evaluation(S[3:])\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    print(formula_evaluation(S))\n\nif __name__ == '__main__':\n    main()\n"]