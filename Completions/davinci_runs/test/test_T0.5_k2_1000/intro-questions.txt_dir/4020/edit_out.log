2022-04-11 15:27:10.546418 num operations 2
2022-04-11 15:27:10.546463 size on input set 1
2022-04-11 15:27:15.730341 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n#\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nm3 = (m1 + m2) // 2\nh3 = h1 + (m1 + m2) // 120\n\nif h3 > 23:\n    h3 -= 24\n\nprint('{:02}:{:02}'.format(h3, m3))\n"
    },
    {
      "index": 1,
      "text": "\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nm3 = (m1 + m2) // 2\nh3 = h1 + (m1 + m2) // 120\n\nif h3 > 23:\n    h3 -= 24\n\nprint('{:02}:{:02}'.format(h3, m3))\n"
    }
  ],
  "created": 1649705233,
  "object": "edit"
}
2022-04-11 15:27:15.730472 fix spelling mistakes 2 ["\n#\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nm3 = (m1 + m2) // 2\nh3 = h1 + (m1 + m2) // 120\n\nif h3 > 23:\n    h3 -= 24\n\nprint('{:02}:{:02}'.format(h3, m3))\n", "\nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nm3 = (m1 + m2) // 2\nh3 = h1 + (m1 + m2) // 120\n\nif h3 > 23:\n    h3 -= 24\n\nprint('{:02}:{:02}'.format(h3, m3))\n"]
2022-04-11 15:27:15.730490 size on output set 2
2022-04-11 15:27:15.730493 size on input set 2
2022-04-11 15:27:32.521793 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "h1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nm3 = (m1 + m2) // 2\nh3 = h1 + (m1 + m2) // 120\n\nif h3 > 23:\n    h3 -= 24\n\nprint('{:02}:{:02}'.format(h3, m3))\n"
    },
    {
      "index": 1,
      "text": "\nh1, m1 = map(int, input().split(':')) # \u0432\u0432\u043e\u0434 \u0432\u0440\u0435\u043c\u0435\u043d\u0438\nh2, m2 = map(int, input().split(':')) # \u0432\u0432\u043e\u0434 \u0432\u0440\u0435\u043c\u0435\u043d\u0438\n\nm3 = (m1 + m2) // 2 # \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u043c\u0438\u043d\u0443\u0442\nh3 = h1 + (m1 + m2) // 120 # \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u0447\u0430\u0441\u043e\u0432\n\nif h3 > 23: # \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u043f\u0435\u0440\u0435\u0445\u043e\u0434 \u0447\u0435\u0440\u0435\u0437 \u043f\u043e\u043b\u043d\u043e\u0447\u044c\n    h3 -= 24 # \u0432\u044b\u0447\u0438\u0442\u0430\u043d\u0438\u0435 24 \u0447\u0430\u0441\u043e\u0432\n\nprint('{:02}:{:02}'.format(h3, m3))\n"
    }
  ],
  "created": 1649705235,
  "object": "edit"
}
2022-04-11 15:27:32.521980 fix syntax errors 2 ["h1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nm3 = (m1 + m2) // 2\nh3 = h1 + (m1 + m2) // 120\n\nif h3 > 23:\n    h3 -= 24\n\nprint('{:02}:{:02}'.format(h3, m3))\n", "\nh1, m1 = map(int, input().split(':')) # ввод времени\nh2, m2 = map(int, input().split(':')) # ввод времени\n\nm3 = (m1 + m2) // 2 # вычисление минут\nh3 = h1 + (m1 + m2) // 120 # вычисление часов\n\nif h3 > 23: # проверка на переход через полночь\n    h3 -= 24 # вычитание 24 часов\n\nprint('{:02}:{:02}'.format(h3, m3))\n"]
2022-04-11 15:27:34.704516 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# \nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nm3 = (m1 + m2) // 2\nh3 = h1 + (m1 + m2) // 120\n\nif h3 > 23:\n    h3 -= 24\n\nprint('{:02}:{:02}'.format(h3, m3))\n"
    },
    {
      "index": 1,
      "text": "h1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nm3 = (m1 + m2) // 2\nh3 = h1 + (m1 + m2) // 120\n\nif h3 > 23:\n    h3 -= 24\n\nprint('{:02}:{:02}'.format(h3, m3))\n"
    }
  ],
  "created": 1649705252,
  "object": "edit"
}
2022-04-11 15:27:34.704700 fix syntax errors 2 ["\n# \nh1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nm3 = (m1 + m2) // 2\nh3 = h1 + (m1 + m2) // 120\n\nif h3 > 23:\n    h3 -= 24\n\nprint('{:02}:{:02}'.format(h3, m3))\n", "h1, m1 = map(int, input().split(':'))\nh2, m2 = map(int, input().split(':'))\n\nm3 = (m1 + m2) // 2\nh3 = h1 + (m1 + m2) // 120\n\nif h3 > 23:\n    h3 -= 24\n\nprint('{:02}:{:02}'.format(h3, m3))\n"]
2022-04-11 15:27:34.704741 size on output set 3
2022-04-11 15:27:34.704824 num operations 2
2022-04-11 15:27:34.704849 size on input set 1
2022-04-11 15:27:48.429432 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef time_to_minutes(time):\n    return time[0] * 60 + time[1]\n\ndef minutes_to_time(minutes):\n    return [minutes // 60, minutes % 60]\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split(':')]\n    end_time = [int(x) for x in sys.stdin.readline().split(':')]\n    start_minutes = time_to_minutes(start_time)\n    end_minutes = time_to_minutes(end_time)\n    middle_minutes = (start_minutes + end_minutes) // 2\n    middle_time = minutes_to_time(middle_minutes)\n    print('{:02d}:{:02d}'.format(middle_time[0], middle_time[1]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef time_to_minutes(time):\n    return time[0] * 60 + time[1]\n\ndef minutes_to_time(minutes):\n    return [minutes // 60, minutes % 60]\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split(':')] # \u0447\u0438\u0442\u0430\u0435\u043c \u043d\u0430\u0447\u0430\u043b\u043e \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u0430\n    end_time = [int(x) for x in sys.stdin.readline().split(':')] # \u0447\u0438\u0442\u0430\u0435\u043c \u043a\u043e\u043d\u0435\u0446 \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u0430\n    start_minutes = time_to_minutes(start_time) # \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u043c \u043d\u0430\u0447\u0430\u043b\u043e \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u0430 \u0432 \u043c\u0438\u043d\u0443\u0442\u044b\n    end_minutes = time_to_minutes(end_time) # \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u043c \u043a\u043e\u043d\u0435\u0446 \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u0430 \u0432 \u043c\u0438\u043d\u0443\u0442\u044b\n    middle_minutes = (start_minutes + end_minutes) // 2 # \u043d\u0430\u0445\u043e\u0434\u0438\u043c \u0441\u0435\u0440\u0435\u0434\u0438\u043d\u0443 \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u0430 \u0432 \u043c\u0438\u043d\u0443\u0442\u0430\u0445\n    middle_time = minutes_to_time(middle_minutes) # \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0438\u043c \u0441\u0435\u0440\u0435\u0434\u0438\u043d\u0443 \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u0430 \u0432 \u0447\u0430\u0441\u044b \u0438 \u043c\u0438\u043d\u0443\u0442\u044b\n    print('{:02d}:{:02d}'.format(middle_time[0], middle_time[1])) # \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u0441\u0435\u0440\u0435\u0434\u0438\u043d\u0443 \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 \u0447\u0430\u0441\u044b:\u043c\u0438\u043d\u0443\u0442\u044b\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649705254,
  "object": "edit"
}
2022-04-11 15:27:48.429626 fix spelling mistakes 2 ["\nimport sys\n\ndef time_to_minutes(time):\n    return time[0] * 60 + time[1]\n\ndef minutes_to_time(minutes):\n    return [minutes // 60, minutes % 60]\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split(':')]\n    end_time = [int(x) for x in sys.stdin.readline().split(':')]\n    start_minutes = time_to_minutes(start_time)\n    end_minutes = time_to_minutes(end_time)\n    middle_minutes = (start_minutes + end_minutes) // 2\n    middle_time = minutes_to_time(middle_minutes)\n    print('{:02d}:{:02d}'.format(middle_time[0], middle_time[1]))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef time_to_minutes(time):\n    return time[0] * 60 + time[1]\n\ndef minutes_to_time(minutes):\n    return [minutes // 60, minutes % 60]\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split(':')] # читаем начало интервала\n    end_time = [int(x) for x in sys.stdin.readline().split(':')] # читаем конец интервала\n    start_minutes = time_to_minutes(start_time) # переводим начало интервала в минуты\n    end_minutes = time_to_minutes(end_time) # переводим конец интервала в минуты\n    middle_minutes = (start_minutes + end_minutes) // 2 # находим середину интервала в минутах\n    middle_time = minutes_to_time(middle_minutes) # переводим середину интервала в часы и минуты\n    print('{:02d}:{:02d}'.format(middle_time[0], middle_time[1])) # выводим середину интервала в формате часы:минуты\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 15:27:48.429795 size on output set 2
2022-04-11 15:27:48.429806 size on input set 2
2022-04-11 15:28:05.301101 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef time_to_minutes(time):\n    return time[0] * 60 + time[1]\n\ndef minutes_to_time(minutes):\n    return [minutes // 60, minutes % 60]\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split(':')]\n    end_time = [int(x) for x in sys.stdin.readline().split(':')]\n    start_minutes = time_to_minutes(start_time)\n    end_minutes = time_to_minutes(end_time)\n    middle_minutes = (start_minutes + end_minutes) // 2\n    middle_time = minutes_to_time(middle_minutes)\n    print('{:02d}:{:02d}'.format(middle_time[0], middle_time[1]))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef time_to_minutes(time):\n    return time[0] * 60 + time[1]\n\ndef minutes_to_time(minutes):\n    return [minutes // 60, minutes % 60]\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split(':')]\n    end_time = [int(x) for x in sys.stdin.readline().split(':')]\n    start_minutes = time_to_minutes(start_time)\n    end_minutes = time_to_minutes(end_time)\n    middle_minutes = (start_minutes + end_minutes) // 2\n    middle_time = minutes_to_time(middle_minutes)\n    print('{:02d}:{:02d}'.format(middle_time[0], middle_time[1]))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649705268,
  "object": "edit"
}
2022-04-11 15:28:05.301295 fix syntax errors 2 ["\nimport sys\n\ndef time_to_minutes(time):\n    return time[0] * 60 + time[1]\n\ndef minutes_to_time(minutes):\n    return [minutes // 60, minutes % 60]\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split(':')]\n    end_time = [int(x) for x in sys.stdin.readline().split(':')]\n    start_minutes = time_to_minutes(start_time)\n    end_minutes = time_to_minutes(end_time)\n    middle_minutes = (start_minutes + end_minutes) // 2\n    middle_time = minutes_to_time(middle_minutes)\n    print('{:02d}:{:02d}'.format(middle_time[0], middle_time[1]))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef time_to_minutes(time):\n    return time[0] * 60 + time[1]\n\ndef minutes_to_time(minutes):\n    return [minutes // 60, minutes % 60]\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split(':')]\n    end_time = [int(x) for x in sys.stdin.readline().split(':')]\n    start_minutes = time_to_minutes(start_time)\n    end_minutes = time_to_minutes(end_time)\n    middle_minutes = (start_minutes + end_minutes) // 2\n    middle_time = minutes_to_time(middle_minutes)\n    print('{:02d}:{:02d}'.format(middle_time[0], middle_time[1]))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 15:28:11.974268 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef time_to_minutes(time):\n    return time[0] * 60 + time[1]  # noqa\n\n\ndef minutes_to_time(minutes):\n    return [minutes // 60, minutes % 60]  # noqa\n\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split(':')]  # noqa\n    end_time = [int(x) for x in sys.stdin.readline().split(':')]  # noqa\n    start_minutes = time_to_minutes(start_time)\n    end_minutes = time_to_minutes(end_time)\n    middle_minutes = (start_minutes + end_minutes) // 2\n    middle_time = minutes_to_time(middle_minutes)\n    print('{:02d}:{:02d}'.format(middle_time[0], middle_time[1]))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef time_to_minutes(time):\n    return time[0]*60 + time[1]\n\ndef minutes_to_time(minutes):\n    return [minutes//60, minutes%60]\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split(':')]\n    end_time = [int(x) for x in sys.stdin.readline().split(':')]\n    start_minutes = time_to_minutes(start_time)\n    end_minutes = time_to_minutes(end_time)\n    middle_minutes = (start_minutes + end_minutes)//2\n    middle_time = minutes_to_time(middle_minutes)\n    print('{:02d}:{:02d}'.format(middle_time[0],middle_time[1]))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649705285,
  "object": "edit"
}
2022-04-11 15:28:11.974451 fix syntax errors 2 ["import sys\n\ndef time_to_minutes(time):\n    return time[0] * 60 + time[1]  # noqa\n\n\ndef minutes_to_time(minutes):\n    return [minutes // 60, minutes % 60]  # noqa\n\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split(':')]  # noqa\n    end_time = [int(x) for x in sys.stdin.readline().split(':')]  # noqa\n    start_minutes = time_to_minutes(start_time)\n    end_minutes = time_to_minutes(end_time)\n    middle_minutes = (start_minutes + end_minutes) // 2\n    middle_time = minutes_to_time(middle_minutes)\n    print('{:02d}:{:02d}'.format(middle_time[0], middle_time[1]))\n\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef time_to_minutes(time):\n    return time[0]*60 + time[1]\n\ndef minutes_to_time(minutes):\n    return [minutes//60, minutes%60]\n\ndef main():\n    start_time = [int(x) for x in sys.stdin.readline().split(':')]\n    end_time = [int(x) for x in sys.stdin.readline().split(':')]\n    start_minutes = time_to_minutes(start_time)\n    end_minutes = time_to_minutes(end_time)\n    middle_minutes = (start_minutes + end_minutes)//2\n    middle_time = minutes_to_time(middle_minutes)\n    print('{:02d}:{:02d}'.format(middle_time[0],middle_time[1]))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 15:28:11.974480 size on output set 3
