["import sys\n\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nsys.setrecursionlimit(10 ** 9)\nINF = 1 << 60\nMOD = 1000000007\n\n\ndef main():\n    N, K, *X = list(map(int, read().split()))\n\n    A = [abs(x - X[0]) for x in X]\n\n    ans = INF\n    for i in range(N - K + 1):\n        if ans > min(abs(X[i]), abs(X[i + K - 1])) + A[i + K - 1] - A[i]:\n            ans = min(abs(X[i]), abs(X[i + K - 1])) + A[i + K - 1] - A[i]\n\n    print(ans)\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N, K = list(map(int, input().split()))\nX = list(map(int, input().split()))\na= []\nfor i in range(N-K+1):\n    l = X[i]\n    r = X[i+K-1]\n    a.append(min(abs(l)+abs(r-l), abs(r) + abs(r-l)))\nprint((min(a)))\n\n", "def __starting_point():\n\n\tn,k = list(map(int,input().split()))\n\tA = list(map(int,input().split()))\n\n\tans = float(\"inf\")\n\n\tfor i in range(k+1):\n\t\tif i+k > n:\n\t\t\tbreak\n\n\t\tleft = A[i]\n\t\tright = A[i+k-1]\n\n\t\t#1 abs(left) < abs(right) \u306e\u5834\u5408\n\t\ttmp2 = abs(left) + abs(right - left)\n\n\t\t#2 abs(right) > abs(left)\u306e\u5834\u5408\n\t\ttmp3 = abs(right) + abs(left - right)\n\n\t\tans = min(ans,min(tmp2,tmp3))\n\n\tprint(ans)\n\n__starting_point()", "# \u521d\u671f\u5165\u529b 2020-0730-2150\nfrom bisect import bisect_left\nimport sys\ninput = sys.stdin.readline  #\u6587\u5b57\u5217\u3067\u306f\u4f7f\u308f\u306a\u3044\nN,K = map(int, input().split())\nx = list(map(int, input().split()))\nx_shift =[i +abs(x[0]) for i in x]\nbis_0 =bisect_left(x,0)\n \nd_end =[0]*(N-K+1)\nd_left =0\nd_right =0\ndist =[]\nfor i in range(N-K+1):\n    d_end =x_shift[i+K-1] -x_shift[i] #\u30ed\u30fc\u30bd\u30afK\u672c\u306e\u5185\u3001\u7aef\u3068\u7aef\u306e\u8ddd\u96e2\n    d_left =abs(x[i])\n    d_right =abs(x[i+K-1])\n    dist.append(d_end +min(d_left,d_right))\nprint(min(dist))", "n,k=map(int,input().split())\nx=list(map(int,input().split()))\nans=10**18\n\nfor i in range(n-k+1):\n    temp=0\n    temp+=(min(abs(x[i]),abs(x[i+k-1]))+abs(x[i]-x[i+k-1]))\n    ans=min(ans,temp)\nprint(ans)", "n, k = list(map(int, input().split()))\nx = list(map(int, input().split()))\n\ns = 10**9\n\nfor i in range(n-k+1):\n    if x[i] * x[i+k-1] >= 0:\n        t = max(abs(x[i]), abs(x[i+k-1]))\n    else:\n        t = abs(x[i]) + abs(x[i+k-1]) + min(abs(x[i]), abs(x[i+k-1]))\n\n    s = min(s, t)\n\nprint(s)", "n, k = map(int, input().split())\nlist_X = list(map(int, input().split()))\nans = pow(10, 14)\n\nfor i in range(n - k + 1):\n    if list_X[i] * list_X[i + k - 1] < 0:\n        ans = min(ans, list_X[i + k - 1] - list_X[i] + min(abs(list_X[i]), abs(list_X[i + k - 1])))\n    else:\n        ans = min(ans, max(abs(list_X[i + k - 1]), abs(list_X[i])))\n\nprint(ans)", "import sys;          from decimal import Decimal\nimport math;         from numba import njit, i8, u1, b1\nimport bisect;       from itertools import combinations, product\nimport numpy as np;  from collections import Counter, deque, defaultdict\n\n# sys.setrecursionlimit(10 ** 6)\nMOD = 10 ** 9 + 7\nINF = 10 ** 9\nPI = 3.14159265358979323846\n\ndef read_str():      return sys.stdin.readline().strip()\ndef read_int():      return int(sys.stdin.readline().strip())\ndef read_ints():     return map(int, sys.stdin.readline().strip().split())\ndef read_str_list(): return list(sys.stdin.readline().strip().split())\ndef read_int_list(): return list(map(int, sys.stdin.readline().strip().split()))\ndef lcm(a: int, b: int) -> int: return (a * b) // math.gcd(a, b)\n\ndef Main():\n    n, k = read_ints()\n    x = read_int_list()\n    ans = INF\n\n    for i in range(n - k + 1):\n        left = x[i]\n        right = x[i + k - 1]\n        if left < 0 and right > 0:\n            ans = min(ans, min(abs(left), abs(right)) * 2 + max(abs(left), abs(right)))\n        else:\n            ans = min(ans, max(abs(left), abs(right)))\n    \n    print(ans)\n    \ndef __starting_point():\n    Main()\n__starting_point()", "N,K = map(int,input().split())\nx = list(map(int,input().split()))\nxp = [i for i in x if i >= 0]\nxn = [i for i in x if i < 0]\nxn.reverse()\nlp = len(xp)\nln = len(xn)\nif lp == 0:\n    print(-xn[K-1])\n    return\nif ln == 0:\n    print(xp[K-1])\n    return\npc = min(K,lp)\npp = xp[pc-1]\nif K>lp:\n    nc = K-lp\n    np = -xn[nc-1]\nelse:\n    nc = 0\n    np = 0\nans = pp + np + min(pp,np)\nfor i in range(pc-1):\n    if nc == ln:\n        break\n    pp = xp[pc-i-2]\n    np = -xn[nc]\n    nc += 1\n    ans = min(ans,pp + np + min(pp,np))\nprint(ans)", "def main():\n    n,k = list(map(int,input().split()))\n    x = list(map(int,input().split()))\n    m,p = [],[]\n    for i in range(n):\n        if x[i]<0:\n            m.append(x[i])\n        else:\n            p.append(x[i])\n    M,P = len(m),len(p)\n    ans = float('inf')\n    for i in range(min(M+1,k+1)):\n        t = 0\n        if i>0:\n            t += 2*abs(m[M-i])\n        r = k-i\n        if r==0:\n            if t//2<ans:\n                ans = t//2\n        elif r<=P:\n            t += p[r-1]\n            if t<ans:\n                ans = t\n    for i in range(min(P+1,k+1)):\n        t = 0\n        if i>0:\n            t += 2*p[i-1]\n        r = k-i\n        if r==0:\n            if t//2<ans:\n                ans = t//2\n        elif r<=M:\n            t += abs(m[M-r])\n            if t<ans:\n                ans = t\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N, K = list(map(int, input().split()))\nx = list(map(int, input().split()))\n\n\nl = []\n# \u9023\u7d9a\u3059\u308bK\u672c\u306e\u9078\u3073\u65b9\u306b\u3064\u3044\u3066\u3001\u5de6\u7aef\u306f0,1,2,...,N-K\nfor i in range(N - K + 1):\n    left = i\n    right = i + K - 1\n    # left\u304c\u5148\u3001right\u304c\u5f8c\u306e\u5834\u5408\n    ans1 = abs(x[left]) + abs(x[right] - x[left])\n    # right\u304c\u5148\u3001left\u304c\u5f8c\u306e\u5834\u5408\n    ans2 = abs(x[right]) + abs(x[right] - x[left])\n    tmp_ans = min(ans1, ans2)\n    l.append(tmp_ans)\n\nans = min(l)\nprint(ans)\n", "n,k = list(map(int,input().split()))\nx = list(map(int,input().split()))\nans = 10 ** 12\nfor i in range(n-k+1):\n    ans = min(ans,abs(x[i])+(abs(x[i+k-1]-x[i])),abs(x[i+k-1])+(abs(x[i+k-1]-x[i])))\nprint(ans)\n", "N,K = map(int,input().split())\nx = list(map(int,input().split()))\nmi = 10 ** 18\nfor i in range(N-K+1):\n    l = x[i]\n    r = x[i+K-1]\n    lr = abs(l)+abs(l-r)\n    rl = abs(r)+abs(l-r)\n    mi = min(mi,min(lr,rl))\nprint(mi)", "# \u521d\u671f\u5165\u529b 2020-0730-2150\nfrom bisect import bisect_left\nimport sys\ninput = sys.stdin.readline  #\u6587\u5b57\u5217\u3067\u306f\u4f7f\u308f\u306a\u3044\nN,K = map(int, input().split())\nx = list(map(int, input().split()))\nx_shift =[i +abs(x[0]) for i in x]\n \ndist =[]\nfor i in range(N-K+1):\n    d_end =x_shift[i+K-1] -x_shift[i] #\u30ed\u30fc\u30bd\u30afK\u672c\u306e\u5185\u3001\u7aef\u3068\u7aef\u306e\u8ddd\u96e2\n    d_left =abs(x[i])\n    d_right =abs(x[i+K-1])\n    dist.append(d_end +min(d_left,d_right))\nprint(min(dist))", "N,K=map(int,input().split())\n*X,=map(int,input().split())\n\nimport bisect\n\ni=bisect.bisect_left(X,0)\nL=max(0, bisect.bisect_right(X,0)-K)\nR=min(N-1, bisect.bisect_left(X,0)+K-1)\n\nans=float('inf')\n\nfor i in range(L,R-K+2):\n    t=0\n    l=X[i]\n    r=X[i+K-1]\n    if r<=0:\n        t=abs(l)\n    elif 0<=l:\n        t=r\n    else:\n        t=min(abs(l),r)*2+max(abs(l),r) \n    # print(X[i:i+K],t)\n    ans=min(ans,t)\nprint(ans)", "n,k = map(int,input().split())\nl = list(map(int,input().split()))\nls = []\nfor i in range(n-k+1):\n  a = l[i]\n  b = l[i+k-1]\n  ls.append(min(abs(a)+abs(a-b), abs(b)+abs(a-b)))\nprint(min(ls))", "import sys\n\n# sys.setrecursionlimit(10 ** 6)\nMOD = 10 ** 9 + 7\nINF = 10 ** 9\nPI = 3.14159265358979323846\n\ndef read_str():      return sys.stdin.readline().strip()\ndef read_int():      return int(sys.stdin.readline().strip())\ndef read_ints():     return map(int, sys.stdin.readline().strip().split())\ndef read_str_list(): return list(sys.stdin.readline().strip().split())\ndef read_int_list(): return list(map(int, sys.stdin.readline().strip().split()))\ndef lcm(a: int, b: int) -> int: return (a * b) // math.gcd(a, b)\n\ndef Main():\n    n, k = read_ints()\n    x = read_int_list()\n    ans = INF\n\n    for i in range(n - k + 1):\n        left = x[i]\n        right = x[i + k - 1]\n        if left < 0 and right > 0:\n            ans = min(ans, min(abs(left), abs(right)) * 2 + max(abs(left), abs(right)))\n        else:\n            ans = min(ans, max(abs(left), abs(right)))\n    \n    print(ans)\n    \ndef __starting_point():\n    Main()\n__starting_point()", "n,k = map(int, input().split())\nx = list(map(int, input().split()))\nminus = [0]\nplus = [0]\nfor i in x:\n    if x:\n        plus.append(x)\n    else:\n        minus.append(-x)\nk -= 1\nans = 1000000000000000\nfor i in range(n-k):\n    if x[i+k] < 0:\n        ans = min(ans, -x[i])\n    elif 0 < x[i+k] and x[i] < 0:\n        if -x[i] < x[i+k]:\n            ans = min(ans, abs(2*(x[i])) + x[i+k])\n        else:\n            ans = min(ans, 2*x[i+k] + abs(x[i]))\n    else:\n        ans = min(ans, x[i+k])\n    \nprint(ans)", "N, K = list(map(int, input().split()))\nX = list(map(int, input().split()))\nans = 10**9\n\nfor i in range(N-K+1):\n    if X[i] >= 0:\n        ans = min(ans, X[K+i-1])\n    elif X[K+i-1] <= 0:\n        ans = min(ans, -X[i])\n    else:\n        ans = min(ans, 2*X[K+i-1]-X[i], X[K+i-1]-2*X[i])\nprint(ans)\n", "import bisect\nn,k=map(int,input().split())\na=list(map(int,input().split()))\nx=bisect.bisect_left(a,0)#0\u4ee5\u4e0a\u304c\u4f55\u500b\u304b\u8abf\u3079\u308b\u305f\u3081\u30010\u304c\u5165\u308b\u4f4d\u7f6e\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\nX=n-x#0\u4ee5\u4e0a\u306e\u500b\u6570\n#print(x,X)\nif a[0]>=0:\n    print(a[k-1])\n    return\nelif a[-1]<=0:\n    print(-1*a[-1-k+1])\n    return\n#\u53f3\u30b9\u30bf\u30fc\u30c8\nif X>=k:\n    c=0\n    for i in range(x,n):\n        c+=1\n        if c==k:\n            ans=a[i]\n            j=i\n            r=x\n            break\n    #print(ans,j,r)\n    while (j>x and r>0):\n        j-=1\n        r-=1\n        #print(a[j],a[r],j,r)\n        ans=min(ans,a[j]*2-a[r])\nelse:\n    c=0\n    ans=2*a[-1]\n    #print(x,ans)\n    for i in range(x-1,-1,-1):\n        c+=1\n        #print(a[i])\n        if c==k-X:\n            ans+=-1*a[i]\n            j=n-1\n            r=i\n            break\n    #print(ans,j,r)\n    while (j>x and r>0):\n        j-=1\n        r-=1\n        #print(a[j],a[r],j,r)\n        ans=min(ans,a[j]*2-a[r])\n#print(ans)\n#print(n-X,k)\n#\u5de6\u30b9\u30bf\u30fc\u30c8\n#x=bisect.bisect_left(a,0)#0\u4ee5\u4e0a\u304c\u4f55\u500b\u304b\u8abf\u3079\u308b\u305f\u3081\u30010\u304c\u5165\u308b\u4f4d\u7f6e\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\n#X=n-x#0\u4ee5\u4e0a\u306e\u500b\u6570\nif n-X>=k:#0\u4ee5\u4e0b\u306e\u500b\u6570\u304ck\u3088\u308a\u591a\u3044\u5834\u5408\n    c=0\n    for i in range(x-1,-1,-1):\n        c+=1\n        #print(i)\n        if c==k:\n            ans2=-1*a[i]\n            j=i\n            r=x-1\n            break\n    #print(ans2,j,r)\n    while (j<x-1 and r<n-1):\n        j+=1\n        r+=1\n        #print(a[j],a[r],j,r)\n        ans2=min(ans2,-2*a[j]+a[r])\n        #print(ans2)\nelse:\n    c=0\n    ans2=-2*a[0]\n    #print(x,k,ans2,\"sss\")\n    for i in range(x,n):\n        c+=1\n        #print(a[i],i)\n        if c==k-(n-X):\n            ans2+=a[i]\n            #print(ans2)\n            j=0\n            r=i\n            break\n    #print(ans2,j,r)\n    while (j<x-1 and r<n-1):\n        j+=1\n        r+=1\n        #print(a[j],a[r],j,r)\n        ans2=min(ans2,-2*a[j]+a[r])\n#print(ans)\nprint(min(ans,ans2))", "\ndef resolve():\n    N, K = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n    ans = 1 << 60\n\n    for i in range(N - K + 1):\n        l = A[i]\n        r = A[i + K - 1]\n        l_to_r = abs(l) + abs(l - r)\n        r_to_l = abs(r) + abs(r - l)\n        res = min(l_to_r, r_to_l)\n        ans = min(ans, res)\n\n    print(ans)\n\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "N, K = map(int, input().split())\nx = list(map(int, input().split()))\n\ntp = N\nfor i in range(N):\n    if x[i] >= 0:\n        tp = i\n        break\n    x[i] *= -1\n\ns = max(0, tp-K+1)\ng = min(tp-1, N-K)\n\nans = float(\"INF\")\nif K <= tp:\n    ans = min(ans, x[tp-K])\nif K <= N - tp:\n    ans = min(ans, x[tp+K-1])\n\nfor i in range(s, g+1):\n    ans = min(ans, x[i] + x[i+K-1] + min(x[i], x[i+K-1]))\n    #print(x[i], x[i+K-1])\n\nprint(ans)", "n,k = map(int, input().split())\nx = list(map(int, input().split()))\nans = abs(x[k-1]) + 2*abs(x[0])\nfor i in range (n-k+1):\n  if x[i+k-1] <= 0:\n    ans = min(ans, -x[i])\n  elif x[i] >= 0:\n    ans = min(ans, x[i+k-1])\n  else:\n    ans = min(ans, -2*x[i] + x[i+k-1], 2*x[i+k-1] - x[i])\nprint(ans)", "n,k=[int(i) for i in input().split()]\nx=[int(i) for i in input().split()]\n\n# ==================================================-\n# \u4e8c\u5206\u63a2\u7d22\n# function\u3092\u6e80\u305f\u3059,search_list\u306e\u6700\u5927\u306e\u8981\u7d20\u3092\u51fa\u529b\n# \u3010\u6ce8\u610f\u70b9\u3011search\u30ea\u30b9\u30c8\u306e\u521d\u3081\u306e\u65b9\u306ffunction\u3092\u6e80\u305f\u3057\u3001\u5f8c\u308d\u306b\u884c\u304f\u306b\u3064\u308c\u3066\u6e80\u305f\u3055\u306a\u304f\u306a\u308b\u3079\u304d\nimport math\nimport sys\nsys.setrecursionlimit(10**9)\ndef binary_research(start,end,function):\n    if start==end:\n        return start\n    middle=math.ceil((start+end)/2)\n    if function(middle):\n        start=middle\n    else:\n        end=middle-1\n    return binary_research(start, end, function)\npositive=[]\nnegative=[]\nzero=False\n\n\nfor i in x:\n    if i<0:\n        negative.append(abs(i))\n    elif i>0:\n        positive.append(i)\n    else:\n        zero=True\npositive.sort()\nnegative.sort()\n\n\ndef function(time):\n    if time==-1:\n        return True\n    ans_list=[]\n    ans=0\n    if zero:\n        ans+=1\n    for i in positive:\n        if i<=time:\n            ans_list.append(i)\n            ans+=1\n        else:\n            break\n    negative_list=[]\n    for i in negative:\n        if i<=time:\n            negative_list.append(i)\n        else:\n            break\n    negative_list=negative_list[::-1]\n    newans=ans\n    while negative_list:\n        newans,ans_list,negative_list=function2(ans_list,negative_list,newans,time)\n        ans=max(ans,newans)\n        if ans_list==[]:\n            break\n        else:\n            ans_list.pop()\n            newans-=1\n    if ans>=k:\n        return False\n    return True\n\n\n\ndef function2(ans_list,negative_list,ans,time):\n    if ans_list==[]:\n        max_num=0\n    else:\n        max_num=ans_list[-1]\n    remain_time=time-max_num*2\n    while negative_list:\n        i=negative_list.pop()\n        if max_num==0:\n            if i<=remain_time:\n                ans+=1\n        elif max_num+i+min(i,max_num)<=time:\n            ans+=1\n        else:\n            negative_list.append(i)\n            break\n    return ans,ans_list,negative_list\n\n\nprint(binary_research(-1,3*10**8+1,function)+1)", "#!/usr/bin/env python3\nn, k, *x = list(map(int, open(0).read().split()))\nans = 10**18\nneg = [i for i in x if i<0]+[0]\npos = [0]+[i for i in x if i>=0]\nl = len(neg) -max(0, k + 1 - len(pos))\nr = min(k+1, len(pos))\nwhile l > 0 and r > 0:\n    l -= 1\n    r -= 1\n    ans = min(ans, -neg[l] * 2 + pos[r], -neg[l] + pos[r] * 2)\nprint(ans)\n", "N,K=map(int,input().split())\nX=list(map(int,input().split()))\np=True\nfor i in range(N):\n    if X[i]<0:\n        continue\n    elif X[i]==0:\n        K-=1\n        if i<K:\n            mX=[0]+[-x for x in X[:i]][::-1]\n        else:\n            mX=[0]+[-x for x in X[i-K:i]][::-1]\n        pX=[0]+X[i+1:i+1+K]\n        p=False\n        break\n    else:\n        if i<K:\n            mX=[0]+[-x for x in X[:i]][::-1]\n        else:\n            mX=[0]+[-x for x in X[i-K:i]][::-1]\n        pX=[0]+X[i:i+K]\n        p=False\n        break\nif p:\n    mX=[0]+[-x for x in X[::-1]]\n    pX=[0]\nans=10**9\nl=K-(len(pX)-1)\nn=len(mX)\nfor i in range(len(pX)-1,-1,-1):\n    if l<n:\n        ans=min(ans,pX[i]+mX[l]*2,pX[i]*2+mX[l])\n    else:\n        break\n    l+=1\nprint(ans)", "N,K=list(map(int,input().split()))\nx=list(map(int,input().split()))\npositive=[]\nnegative=[]\nfor i in range(N):\n    if x[i]<0:\n        negative.append(-x[i])\n    else:\n        positive.append(x[i])\nnegative.sort()\nn=len(negative)\nm=len(positive)\nans=1000000000\nif n>=K:\n    ans=min(ans,negative[K-1])\nif m>=K:\n    ans=min(ans,positive[K-1])\n\nfor i in range(n):\n    j=K-(i+1)\n    if j>m:\n        continue\n    if j<=0:\n        continue\n    ans=min(ans,negative[i]+positive[j-1]+min(negative[i],positive[j-1]))\nprint(ans)\n", "N, K = map(int, input().split())\nX = list(map(int, input().split()))\nT = 10**18\nfor i in range(N-K+1):\n  if X[i+K-1]<=0:\n    T = min(T, -X[i])\n  elif X[i]>=0:\n    T = min(T, X[i+K-1])\n  else:\n    T = min(T, X[i+K-1]-X[i]+min(-X[i], X[i+K-1]))\nprint(T)", "n,k = map(int, input().split())\nlst = list(map(int, input().split()))\n\nne_lst = []\npo_lst = []\nfor i in lst:\n    if i < 0:\n        ne_lst.append(-i)\n    else:\n        po_lst.append(i)\nne_lst.reverse()\n\nres = 10**10\nif len(ne_lst) >= k:\n    res = min(res, ne_lst[k-1])\nif len(po_lst) >= k:\n    res = min(res, po_lst[k-1])\nfor i, j in enumerate(ne_lst):\n    if  k-(i+1)>0 and len(po_lst) > (k-1)-(i+1):\n        res = min(res, ne_lst[i]*2 + po_lst[(k-1)-(i+1)])\nfor i,j in enumerate(po_lst):\n    if k-(i+1)>0 and len(ne_lst) > (k-1)-(i+1):\n        res = min(res, po_lst[i]*2 + ne_lst[(k-1)-(i+1)])\nprint(res)", "import math\nN, K = map(int, input().split())\nx = list(map(int, input().split()))\nfor i in range(N):\n  if x[i] == 0:\n    p, m = i, i+1\n    break\n  elif x[i] > 0:\n    p, m = i, i\n    break\n    \nif (x[0]<0) and (x[-1]>0):\n  pls = x[p:]\n  mns = x[:m]\n  ans = math.inf\n\n  for i in range(len(pls)):\n    if i < K-1:\n      if pls[0] == 0:\n        n = K - i\n      else:\n        n = K - i - 1\n      if len(mns) >= n:\n        tmp = 2*abs(mns[-n]) + pls[i]\n        ans = min(ans, tmp)\n    if i == K-1:\n      ans = min(ans, pls[i])\n      break\n    \n  for i in range(len(mns)):\n    m = len(mns)-i\n    if m < K:\n      if pls[0] == 0:\n        n = K - m\n      else:\n        n = K - m - 1\n      if len(pls) > n:\n        tmp = 2*pls[n] + abs(mns[-m])\n        ans = min(ans, tmp)\n    if m == K:\n      ans = min(ans, abs(mns[i]))\n    \nelif x[0] >= 0:\n  ans = x[K-1]\n  \nelse:\n  ans = abs(x[-K])\n  \nprint(ans)", "n,k=list(map(int,input().split()))\nx=list(map(int,input().split()))\n\nimport bisect\nc=bisect.bisect_left(x,0)\nmt=2*10**8\n\nfor i in range(n-k+1):\n  if i+k<c:continue\n  mt=min(mt,2*abs(x[i])+abs(x[i+k-1]),abs(x[i])+2*abs(x[i+k-1]))\n  if i+k-1 ==c-1:mt=min(mt,abs(x[i]))\n  if i==c:mt=min(mt,x[i+k-1])\nif n==k:\n  if c!=n and c!=0:\n    mt=min(2*abs(x[0])+x[-1],2*x[-1]+abs(x[0]))\n  else:\n    mt=max(abs(x[0]),abs(x[-1]))\nprint(mt)\n    \n", "N,K=map(int,input().split())\nx=list(map(int,input().split()))\n\nres=[]\nfor i in range(N-K+1):\n  tmp = min(abs(x[i]),abs(x[i+K-1]))+x[i+K-1]-x[i]\n  res.append(tmp)\n  \nprint(min(res))", "n, k = map(int,input().split())\nx = list(map(int,input().split()))\n\nans = float('inf')\nfor i in range(n-k+1):\n    ans = min(ans, min(abs(x[i]) + abs(x[i+k-1]-x[i]), abs(x[i+k-1]) + abs(x[i+k-1]-x[i])))\nprint(ans)", "n, k = map(int, input().split())\nx = list(map(int, input().split()))\n\nneg_to_pos = n\nfor i in range(n):\n    if x[i] > 0:\n        neg_to_pos = i\n        break\n\nres = 10 ** 14\nfor i in range(n - k + 1):\n    l = min(x[i], 0)\n    r = max(0, x[i + k - 1])\n    if i <= neg_to_pos and neg_to_pos - 1 <= i + k - 1:\n        tmp = min(-2 * l + r, -l + 2 * r)\n        res = min(res, tmp) \nprint(res)", "n, k = map(int, input().split())\na = list(map(int, input().split()))\nans = 10**10\nfor i in range(n-k+1):\n    tmp = min(abs(a[k+i-1] - a[i]) + abs(a[i]), abs(a[k+i-1] - a[i]) + abs(a[k+i-1]))\n    if ans > tmp:\n        ans = tmp\nprint(ans)", "n,k = map(int,input().split())\nx = list(map(int,input().split()))\ny = list(map(abs,x))\nans = float(\"inf\")\n\nfor i in range(n-k+1):\n    if 0 < x[i] * x[i+k-1]:\n        cost = max(y[i],y[i+k-1])\n        \n    else:\n        cost = y[i] + y[i+k-1] + min(-x[i],x[i+k-1])\n        \n    ans = min(ans,cost)\n    \nprint(ans)", "N, K = list(map(int, input().split()))\nX = [int(x) for x in input().split()]\nans = 10**10\n\nfor i in range(N-K+1):\n    tmp = X[i+K-1] - X[i] + min(abs(X[i+K-1]), abs(X[i]))\n    if tmp < ans:\n        ans = tmp\nprint(ans)\n", "n,k = map(int, input().split())\nx = list(map(int, input().split()))\n\nans = float(\"inf\")\nfor i in range(n-k+1):\n  l = abs(x[i]) + abs(x[i]-x[i+k-1])\n  r = abs(x[n-1-i]) + (x[n-1-i]-x[n-k-i])\n  ans = min(ans,l,r)\nprint(ans)", "n, k = list(map(int, input().split()))\nx = list(map(int, input().split()))\n\ninf = 10**12\nz = len(x)\n\nif n == 1 and k == 1:\n    print((0))\n    return\n\nfor i in range(len(x)):\n    if x[i] >= 0:\n        z = i\n        break\n\nr = [inf] * (n - z)\nl = [inf] * z\n\nfor i in range(n-z):\n    r[i] = x[z+i]\n\nfor i in range(z):\n    l[i] = abs(x[z-i-1])\n\n# \u5de6\u304b\u3089\u3059\u3079\u3066\u53d6\u308b\u5834\u5408\ntl = inf\nif len(l) < k:\n    tl = inf\nelse:\n    tl = abs(l[k-1])\n\nif z == n-1:\n    print(tl)\n    return\n\n# \u53f3\u304b\u3089\u3059\u3079\u3066\u53d6\u308b\u5834\u5408\ntr = inf\nif len(r) < k:\n    tr = inf\nelse:\n    tr = abs(r[k-1])\n    \n# \u4e21\u65b9\u304b\u3089\u53d6\u308b\u5834\u5408\n# \u53f3\u304b\u3089i\u500b\u53d6\u308b\nt_arr = []\nfor i in range(1,k):\n    if i-1 >= len(r):\n        pass\n    else:\n        if k-i-1 >= len(l):\n            pass\n        else:\n            t1 = r[i-1]\n            t2 = l[k-i-1]\n            t_arr.append(t1*2 + t2*2 - max(t1,t2))\ntc = inf\nif len(t_arr) != 0:\n    tc = min(t_arr)\nelse:\n    tc = inf\nprint((min(tl,tr,tc)))\n", "n, k = list(map(int, input().split()))\nx0 = list(map(int, input().split()))\n\nx1 = [i for i in x0 if i >= 0]\nx2 = list(reversed([i for i in x0 if i < 0]))\ncount0 = len(x1)\ncount1 = len(x2)\nans = float('inf')\n\nif count1 == 0:\n    print((x1[k-1]))\nelif count0 == 0:\n    print((-x2[k-1]))\nelse:\n    if 0 in x1:\n        x1.remove(0)\n        k -= 1\n        count0 -= 1\n    for i in range(min(count0, k)):\n        if count1 >= k-i-1:\n            ans = min(ans, x1[i]*2-x2[k-i-2])\n    for i in range(min(count1, k)):\n        if count0 >= k-i-1:\n            ans = min(ans, -x2[i]*2+x1[k-i-2])\n    print(ans)\n", "N,K=map(int,input().split())\nX=list(map(int,input().split()))\nfor i in range(N):\n    if X[i]<0:\n        continue\n    elif X[i]==0:\n        K-=1\n        if i<K:\n            mX=[0]+[-x for x in X[:i]][::-1]\n        else:\n            mX=[0]+[-x for x in X[i-K:i]][::-1]\n        pX=[0]+X[i+1:i+1+K]\n        break\n    else:\n        if i<K:\n            mX=[0]+[-x for x in X[:i]][::-1]\n        else:\n            mX=[0]+[-x for x in X[i-K:i]][::-1]\n        pX=[0]+X[i:i+K]\n        break\nelse:\n    mX=[0]+[-x for x in X[::-1]]\n    pX=[0]\nans=10**9\nl=K-(len(pX)-1)\nn=len(mX)\nfor i in range(len(pX)-1,-1,-1):\n    if l<n:\n        ans=min(ans,pX[i]+mX[l]*2,pX[i]*2+mX[l])\n    else:\n        break\n    l+=1\nprint(ans)", "n,k=list(map(int,input().split()))\nx=list(map(int,input().split()))\na=[]\nfor i in range(n-k+1):\n  l=x[i]\n  r=x[i+k-1]\n  a.append(min(abs(l)+abs(r-l),abs(r)+abs(r-l)))\nprint((min(a)))\n", "n, k = map(int, input().split())\nx = list(map(int, input().split()))\nans = []\nfor j in range(n-k+1):\n    if x[j] > 0:\n        ans.append(x[j+k-1])\n    elif x[j] <= 0 <= x[j+k-1]:\n        ans.append(min(2*abs(x[j])+x[j+k-1], abs(x[j])+2*x[j+k-1]))\n    else:\n        ans.append(-x[j])\nprint(min(ans))", "import sys\n\ninput = sys.stdin.readline\n\n\ndef main():\n    N, K = list(map(int, input().split()))\n    X = list(map(int, input().split()))\n\n    INF = float(\"inf\")\n    M = [INF] * N\n    P = [INF] * N\n    i_m, i_p = 0, 0\n    for x in X:\n        if x == 0:\n            K -= 1\n        elif x > 0:\n            P[i_p] = x\n            i_p += 1\n        else:\n            M[i_m] = -x\n            i_m += 1\n\n    if K <= 0:\n        print((0))\n        return\n\n    M.sort()\n    P.sort()\n    ans = min(M[K - 1], P[K - 1])\n    for n_M in range(1, K + 1):\n        dist = 2 * M[n_M - 1] + P[K - n_M - 1]\n        if ans > dist:\n            ans = dist\n    for n_P in range(1, K + 1):\n        dist = 2 * P[n_P - 1] + M[K - n_P - 1]\n        if ans > dist:\n            ans = dist\n\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n,k=map(int, input().split())\nxlist=list(map(int, input().split()))\nans=10**20\nfor i in range(n-k+1):\n  ans=min(abs(xlist[i]-xlist[i+k-1])+min(abs(xlist[i]),abs(xlist[i+k-1])),ans)\nprint(ans)", "import sys\nn,k = list(map(int,input().split()))\nx_ls = list(map(int, input().split()))\nx_ls.sort()\nif x_ls[0] >= 0:\n    print((x_ls[k-1]))\n    return\nelif x_ls[-1] <= 0:\n    x_ls.sort(reverse=True)\n    print((abs(x_ls[k-1])))\n    return\nl = 0\nr = k - 1\nans = float('inf')\nwhile r < n:\n    cost_1 = 2*abs(x_ls[l]) + abs(x_ls[r])\n    cost_2 = abs(x_ls[l]) + 2*abs(x_ls[r])\n    cost = min(cost_1,cost_2)\n    ans = min(cost, ans)\n    r += 1\n    l += 1\nprint(ans)\n", "N, K = map(int, input().split())\nX = list(map(int, input().split()))\n\nans = 10 ** 10\nnega = sorted(-x for x in X if x < 0)\nposi = sorted(x for x in X if 0 < x)\nif 0 in X:\n    K -= 1\n\nif 0 < K <= len(posi):\n    t = posi[K - 1]\n    ans = min(ans, t)\nif 0 < K <= len(nega):\n    t = nega[K - 1]\n    ans = min(ans, t)\n\nif 0 < K:\n    for np in range(1, len(posi) + 1):\n        if 0 <= K - np - 1 < len(nega):\n            t = posi[np - 1] * 2 + nega[K - np - 1]\n            ans = min(ans, t)\n    for nn in range(1, len(nega) + 1):\n        if 0 <= K - nn - 1 < len(posi):\n            t = nega[nn - 1] * 2 + posi[K - nn - 1]\n            ans = min(ans, t)\nelse:\n    ans = 0\nprint(ans)", "n,k = map(int, input().split())\n\nlis = sorted(list(map(int, input().split())))\n\nans = []\nfor i in range(n-k+1):\n    a = lis[i]\n    b = lis[i+k-1]\n    ans.append(min(abs(a)+abs(b-a),abs(b)+abs(a-b)))\n\nprint(min(ans))", "N, K = list(map(int, input().split()))\nx = list(map(int, input().split()))\n\nans = []\nfor i in range(N - K + 1):\n    left = i\n    right = left + K - 1\n    if x[left] < 0 and x[right] >= 0:\n        q = min(abs(x[left]) * 2 + x[right], x[right] * 2 + abs(x[left]))\n        ans.append(q)\n        continue\n    elif x[right] < 0:\n        q = abs(x[left])\n        ans.append(q)\n        continue\n    elif x[left] > 0:\n        q = abs(x[right])\n        ans.append(q)\n        continue\nif len(ans) == 0:\n    print((0))\n    return\n\nprint((min(ans)))\n", "N, K = list(map(int, input().split()))\nX_list = list(map(int, input().split()))\nINF = 10 ** 18\nans = INF\nimport bisect\n\nzero_index = bisect.bisect_left(X_list, 0)\ncandidate_list = []\nans = INF\nfor i in range(K + 1):\n    head = zero_index - i\n    tail = head + K - 1\n    if head < 0 or tail > N - 1: continue\n    if i == 0:\n        ans = min(ans, abs(X_list[tail]))\n    elif i == K:\n        ans = min(ans, abs(X_list[head]))\n    else:\n        head_abs = abs(X_list[head])\n        tail_abs = abs(X_list[tail])\n        ans = min(ans, head_abs + tail_abs + min(head_abs, tail_abs))\nprint(ans)\n", "N, K = list(map(int, input().split()))\nX = sorted(list(map(int, input().split())))\ncnt = []\n\nfor i in range(N - K + 1):\n    left = X[i]\n    right = X[i+K-1]\n    cnt.append(min(abs(right)+abs(left-right), abs(left) + abs(right - left)))\nprint((min(cnt)))\n\n", "# \u9023\u7d9a\u3059\u308bK\u672c\u306e\u308d\u3046\u305d\u304f\u306b\u706b\u3092\u3064\u3051\u308b\u306e\u3067\u3001\u6700\u5c0f\u3068\u306a\u308b\u7d44\u3092\u5168\u63a2\u7d22\u3059\u308b\nN, K = map(int, input().split())\nX = list(map(int, input().split()))\n\nans = float(\"INF\")\nfor i in range(N - K + 1):\n    lr = abs(X[i]) + abs(X[i] - X[i + K - 1])\n    rl = abs(X[i + K - 1]) + abs(X[i + K - 1] - X[i])\n    ans = min(ans, min([lr, rl]))\n\nprint(ans)", "n,k = map(int,input().split())\nx = list(map(int,input().split()))\nans = 10 ** 12\nfor i in range(n-k+1):\n    ans = min(ans,abs(x[i])+(abs(x[i+k-1]-x[i])),abs(x[i+k-1])+(abs(x[i+k-1]-x[i])))\nprint(ans)", "import sys\n\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nsys.setrecursionlimit(10 ** 9)\nINF = 1 << 60\nMOD = 1000000007\n\n\ndef solve(N, K, X):\n    A = [abs(x - X[0]) for x in X]\n\n    ans = INF\n    for i in range(N - K + 1):\n        if ans > abs(X[i]) + A[i + K - 1] - A[i]:\n            ans = abs(X[i]) + A[i + K - 1] - A[i]\n\n    return ans\n\n\ndef main():\n    N, K, *X = list(map(int, read().split()))\n\n    ans = solve(N, K, X)\n    ans = min(ans, solve(N, K, X[::-1]))\n\n    print(ans)\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "#!/usr/bin/env python\n# coding: utf-8\n\n# In[26]:\n\n\nN,K = list(map(int, input().split()))\nx = list(map(int, input().split()))\n\n\n# In[35]:\n\n\nans = 10**10\nfor i in range(N-K+1):\n    ans = min(ans, abs(x[i])+(x[i+K-1]-x[i]),abs(x[i+K-1])+(x[i+K-1]-x[i]))\nprint(ans)\n\n\n# In[ ]:\n\n\n\n\n", "n, k = list(map(int, input().split()))\nx = list(map(int, input().split()))\nans = 10**9\nfor l in range(n - k + 1):\n    r = l + k - 1\n    ans = min(ans, abs(x[r]) + abs(x[r]-x[l]), abs(x[l]) + abs(x[r]-x[l]))\n\nprint(ans)\n", "N, K = [int(x) for x in input().split()]\nX = [int(x) for x in input().split()]\n\n\nans = float(\"inf\")\nfor i in range(N - K + 1):\n    left = X[i]\n    right = X[i + K - 1]\n    if left * right >= 0:\n        ans = min(ans, max(abs(left), right))\n    else:\n        ans = min(ans, right - left + min(abs(left), right))\nprint(ans)\n", "\nurl = \"https://atcoder.jp//contests/abc107/tasks/arc101_a\"\n\ndef main():\n    n, k = list(map(int, input().split()))\n    xs = list(map(int, input().split()))\n    ans = 100000000000000\n    se = [0, k-1]\n    while se[1] < n:\n        if xs[se[0]] < 0 <= xs[se[1]]:\n            tmp = min(abs(xs[se[0]]), xs[se[1]]) * 2 + max(abs(xs[se[0]]), xs[se[1]])\n            ans = min(ans, tmp)\n        elif xs[se[0]] < 0:\n            ans = min(ans, abs(xs[se[0]]))\n        elif xs[se[1]] >= 0:\n            ans = min(ans, xs[se[1]])\n        se = [v + 1 for v in se]\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import math\n\nN, K = map(int, input().split())\ncd = list(map(int, input().split()))\ncd_plus, cd_minus = [], []\n\nres = math.inf\n\nfor i in range(N):\n    if cd[i] == 0:\n        N -= 1\n        K -= 1\n        res = 0\n    elif cd[i] > 0:\n        cd_plus.append(cd[i])\n    else:\n        cd_minus.append(-cd[i])\n\ncd_minus.sort()\n\nfor i in range(len(cd_plus)):\n    if i + len(cd_minus) + 1 >= K:\n        if K >= i + 2:\n            res = min(res, cd_plus[i] * 2 + cd_minus[K - i - 2])\n        else:\n            res = min(res, cd_plus[i])\n\nfor i in range(len(cd_minus)):\n    if i + len(cd_plus) + 1 >= K:\n        if K >= i + 2:\n            res = min(res, cd_minus[i] * 2 + cd_plus[K - i - 2])\n        else:\n            res = min(res, cd_minus[i])\n\nprint(res)", "n, k = map(int, input().split())\nx = list(map(int, input().split()))\npos, nega = [], []\nfor v in x:\n    if v >= 0:pos.append(v)\n    else:nega.append(-v)\nnega.sort()\nans = 10**9\nif k <= len(pos):ans = min(ans, pos[k-1])\nif k <= len(nega):ans = min(ans, nega[k-1])\nfor i in range(k):\n    if i < len(pos) and 0 <= k - i - 2 < len(nega):\n        ans = min(ans, 2 * pos[i] + nega[k-i-2])\n    if i < len(nega) and 0 <= k - i - 2 < len(pos):\n        ans = min(ans, 2 * nega[i] + pos[k-i-2])\nprint(ans)", "# n=int(input())\nn, k = list(map(int, input().split()))\nxl = list(map(int, input().split()))\n#l=[list(input()) for i in range(h)]\n\nif 0 in xl:\n    k -= 1\nelse:\n    xl.append(0)\n    xl.sort()\nif k == 0:\n    ans = 0\nelse:\n    ans = 10**9\n    zeropoint = xl.index(0)\n    endpoint = len(xl)-1\n    startpoint = max(0, zeropoint-k)\n    cur = startpoint\n    while cur+k <= endpoint and cur <= zeropoint:\n        # print(cur)\n        # \u3082\u3057\u6298\u308a\u8fd4\u3059\u306a\u3089\n        if cur < zeropoint < cur+k:\n            tempdis = abs(xl[cur]-xl[cur+k])\n            tempdis += min(abs(xl[cur]), xl[cur+k])\n            ans = min(ans, tempdis)\n        else:\n            ans = min(ans, abs(xl[cur]-xl[cur+k]))\n        cur += 1\nprint(ans)\n", "import sys\nN,K = map(int,input().split())\nlsx = list(map(int,input().split()))\nif 0 in lsx:\n    K = K-1\n    lsx.remove(0)\nif bool(lsx) == False or K == 0:\n    print(0)\n    return\nlshu = []\nsei = len(lsx)\nfor i in range(len(lsx)):\n    if lsx[i] < 0:\n        lshu.append(lsx[i])\n    else:\n        sei = i\n        break\nlssei = lsx[sei:]\nlenhu = len(lshu)\nlensei = len(lssei)\nlshu2 = [abs(lshu[i]) for i in range(lenhu-1,-1,-1)]\ndishu = [0] + lshu2\ndissei = [0] + lssei\nans = 10*10**8\nfor i in range(K+1):\n    if i <= lenhu and K-i <= lensei:\n        ans = min(ans,2*dishu[i]+dissei[K-i],dishu[i]+2*dissei[K-i])\nprint(ans)", "N,K=map(int,input().split())\n*X,=map(int,input().split())\nA=[]\nB=[]\nfor x in X:\n    if x>=0:\n        A.append(x)\n    else:\n        B.append(abs(x))\nB.sort()\ni=min(K,len(A))\nj=K-i\nans=[]\nwhile i>=0 and j<=len(B):\n    if i==0:\n        ans.append(B[j-1])\n    elif j==0:\n        ans.append(A[i-1])\n    else:\n        a,b=A[i-1],B[j-1]\n        ans.append(a+b+min(a,b))\n    i-=1\n    j+=1\nprint(min(ans))", "n,k=list(map(int,input().split()))\nx=list(map(int,input().split()))\n\nimport bisect\n\nb=bisect.bisect_left(x,0)\n\nr=x[b:]\nl=list(reversed(x[:b]))\n\n\nR=len(r)\nL=len(l)\n\nans=float('inf')\n\nif k<=R:\n    ans=min(ans,r[k-1])\n\nif k<=L:\n    ans=min(ans,abs(l[k-1]))\n\n#\u53f3\u6298\u308a\u8fd4\u3057\nfor i in range(R):\n    if i<k and k-i-2<=L-1 and k-i-2>=0:\n        tmp=2*r[i] + abs(l[k-i-2])\n        ans=min(ans,tmp)\n#\u5de6\u6298\u308a\u8fd4\u3057\nfor j in range(L):\n    if j<k and k-j-2<=R-1 and k-j-2>=0:\n        tmp = 2*abs(l[j]) +r[k-j-2]\n        ans=min(ans,tmp)\n\n\nprint(ans) \n", "n,k=map(int,input().split())\na=list(map(int,input().split()))\nans=float('inf')\n\nfor i in range(0,n-k+1):\n  b=a[i]\n  c=a[i+k-1]\n  if c<=0:\n    ans=min(ans,abs(b))\n  elif b>=0:\n    ans=min(ans,abs(c))\n  else:\n    ans=min(ans,abs(c)+abs(b)*2,abs(c)*2+abs(b))\n    \nprint(ans)", "n,k = map(int,input().split())\nx = list(map(int,input().split()))\nli = []\nfor i in range(n-k+1):\n    li += [x[k-1+i]-x[i]+min(abs(x[k-1+i]),abs(x[i]))]\nprint(min(li))", "n,k = map(int, input().split())\nx = list(map(int, input().split()))\nans = 10**10\nfor i in range(n-k+1):\n  a = x[i+k-1]\n  b = x[i]\n  if a < 0:\n    ans = min(ans,abs(b))\n  else:\n    if b < 0:\n      ans = min(ans,min(a,abs(b))*2+max(a,abs(b)))\n    else:\n      ans = min(ans,a)\nprint (ans)", "n,k = list(map(int,input().split()))\nls = list(map(int,input().split()))\nflag = True\nif 0 not in ls:\n    ls.append(0)\n    ls.sort()\n    flag = False\nind = ls.index(0)\nif flag == True:\n    if ind >= k-1:\n        l = ind - k + 1\n    else:\n        l = 0\n    if ind + k - 1 <= n - 1:\n        r = ind + k - 1\n    else:\n        r = n - 1 \n    mn = float(\"inf\")\n    while True:\n        if l+k-1 > r:\n            break\n        a = abs(ls[l]) + ls[l+k-1] + min(abs(ls[l]),ls[l+k-1])\n        if a < mn:\n            mn = a\n        l += 1\nelse:\n    if ind >= k:\n        l = ind - k\n    else:\n        l = 0\n    if ind + k <= n:\n        r = ind + k\n    else:\n        r = n\n    mn = float(\"inf\")\n    while True:\n        if l+k > r:\n            break\n        a = abs(ls[l]) + ls[l+k] + min(abs(ls[l]),ls[l+k])\n        if a < mn:\n            mn = a\n        l += 1\nprint(mn)\n", "from collections import deque\n    \nN,K=map(int,input().strip().split())\nx=list(map(int,input().strip().split()))\ninf=10**9\n    \nl=inf\ndp=deque(x[N-K:N])\ni=0\nwhile True:\n    if dp[0]>=0:\n        tmp=dp[K-1]\n    elif dp[K-1]<=0:\n        tmp=-dp[0]\n    else:\n        if abs(dp[K-1])>=abs(dp[0]):\n            tmp=abs(dp[0])*2+abs(dp[K-1])\n        else:\n            tmp=abs(dp[K-1])*2+abs(dp[0])\n    l=min(l,tmp)\n    i+=1\n    if N-K-i<0:\n        break\n    else:\n        dp.appendleft(x[N-K-i])\n        dp.pop()\nprint(l)", "N,K = list(map(int,input().split()))\nx = list(map(int,input().split()))\nminTime = 10000000000\nfor i in range(N-K+1):\n    time = 0\n    minValue = x[i]\n    maxValue = x[i+K-1]\n    if minValue < 0 and maxValue < 0:\n        time = minValue * -1\n    elif minValue >= 0 and maxValue >= 0:\n        time = maxValue\n    elif minValue < 0 and maxValue >= 0:\n        leftTime = minValue * -1\n        rightTime = maxValue\n        if leftTime < rightTime:\n            time = leftTime * 2 + rightTime\n        else:\n            time = leftTime + rightTime * 2\n    if time < minTime:\n        minTime = time\nprint(minTime)", "n,k=list(map(int,input().split()))\nx=list(map(int,input().split()))\na=[x[i] for i in range(n) if x[i]<0]\nb=[x[i] for i in range(n) if x[i]>=0]\nna=len(a)\nnb=len(b)\nif 0 in x:\n    k-=1\n    b=[x[i] for i in range(n) if x[i]>0]\n    nb=nb-1\n\nif k==0:\n    print((0))\n    return\nans=10**10\nif na>=k:\n    ans=-a[-k]\n\nif nb>=k:\n    ans=min(ans,b[k-1])\n\nif nb==0:\n    print((-a[-k]))\n    return\n\nif na==0:\n    print((b[k-1]))\n    return\n\nfor i in range(1,nb+1):\n    m=k-i\n    if m>na or m<0:\n        continue\n    elif 0<m<=na:\n        ans=min(ans,min(b[i-1]-2*a[-m],2*b[i-1]-a[-m]))\n    elif m==0:\n        ans=min(ans,b[k-1])\nprint((ans if k!=0 else 0))\n", "def resolve():\n    '''\n    code here\n    '''\n    N, K = [int(item) for item in input().split()]\n    xs = [int(item) for item in input().split()]\n    \n    min_lr = 10**9\n    min_rl = 10**9\n\n    if N != K:\n        for i in range(N-K+1):\n            min_lr = min(min_lr, abs(xs[i]) + abs(xs[i+K-1] - xs[i]))\n            min_rl = min(min_rl, abs(xs[i+K-1]) + abs(xs[i+K-1] - xs[i]))\n\n        print((min(min_lr, min_rl)))\n    elif N ==1:\n        print((abs(xs[0])))\n    else:\n        print((min(abs(xs[0]) + abs(xs[N-1] - xs[0]), abs(xs[N-1]) + abs(xs[N-1] - xs[0]))))\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "import sys\nn,k=map(int,input().split())\nx=list(map(int,input().split()))\nleft=[]\nright=[]\norigin=0\nfor u in x:\n  if u<0:\n    left.append(abs(u))\n  elif u==0:\n    origin+=1\n  else:\n    right.append(u)\nleft.sort()\nk-=origin\nif k==0:\n  print(0)\n  return\nr=len(right)\nl=len(left)\nans=float('inf')\nif k<=r:\n  ans=right[k-1]\nif k<=l:\n  ans=min(ans,left[k-1])\nfor i in range(k-1):\n  if i<r and k-i-2<l:\n    y=right[i]+left[k-i-2]+min(right[i],left[k-i-2])\n    ans=min(ans,y)\nprint(ans)", "#!/usr/bin/env python3\nn, k, *x = list(map(int, open(0).read().split()))\nans = 10**18\nneg = []\npos = [0]\nfor i in x:\n    if i < 0:\n        neg.append(i)\n    else:\n        pos.append(i)\nneg.append(0)\nk += 1\nc = len(neg)\nc -= k -min(k, len(pos))\nk = min(k, len(pos))\nwhile c > 0 and k > 0:\n    c -= 1\n    k -= 1\n    ans = min(ans, -neg[c] * 2 + pos[k], -neg[c] + pos[k] * 2)\nprint(ans)\n", "n, k = map(int, input().split())\nx = list(map(int, input().split()))\nneg_num = n\n\nfor i in range(n):\n    if x[i] > 0:\n        neg_num = i\n        break\npos_num = n - neg_num\n\nl = min(k, neg_num)\nres = 10 ** 13\nfor i in range(l, -1, -1):\n    r = k - i\n    if r <= pos_num:\n        l_val = min(0, x[neg_num - i])\n        r_val = max(0, x[neg_num + k - i - 1])\n        tmp = min( -l_val * 2 + r_val, -l_val + r_val * 2)\n        res = min(tmp, res)\nprint(res)", "# coding: utf-8\nimport math\nimport bisect\nimport numpy as np\nN, k = list(map(int,input().split()))\nX = list(map(int,input().split()))\n#if 0 in X:\n #   k -= 1\nans = float('inf')\nfor i in range(N-k+1):\n    a = X[i]\n    b = X[i+k-1]\n    #print(a, b)\n    if np.sign(a)*np.sign(b) >= 0:\n        ans = min(ans, max(abs(a), abs(b)))\n        #print(\"d=\"+str(max(abs(a), abs(b))))\n    else:\n        ans = min(ans, abs(a)+abs(b)+min(abs(a), abs(b)))\n        #print(\"d=\"+str(abs(a)+abs(b)))\nprint(ans)\n", "import math\nfrom math import gcd,pi,sqrt\nINF = float(\"inf\")\n\nimport sys\nsys.setrecursionlimit(10**6)\nimport itertools\nfrom collections import Counter,deque\ndef i_input(): return int(input())\ndef i_map(): return list(map(int, input().split()))\ndef i_list(): return list(i_map())\ndef i_row(N): return [i_input() for _ in range(N)]\ndef i_row_list(N): return [i_list() for _ in range(N)]\ndef s_input(): return input()\ndef s_map(): return input().split()\ndef s_list(): return list(s_map())\ndef s_row(N): return [s_input for _ in range(N)]\ndef s_row_str(N): return [s_list() for _ in range(N)]\ndef s_row_list(N): return [list(s_input()) for _ in range(N)]\n\n\ndef main():\n    n, k = i_map()\n    x = i_list()\n\n    l = []\n    r = []\n\n    for i in x:\n        if i < 0:\n            l.append(-i)\n        else:\n            r.append(i)\n    l.reverse()\n\n    # if len(l) > 0:\n    #     L = [l[0]]\n    #     if len(l) > 1:\n    #         for i in range(1, len(l)):\n    #             L.append(L[i-1]+l[i])\n    #\n    # if len(r) > 0:\n    #     R = [r[0]]\n    #     if len(r) > 1:\n    #         for i in range(1, len(r)):\n    #             R.append(R[i-1]+r[i])\n\n\n    R_len = len(r)\n    L_len = len(l)\n\n    ans = INF\n    for i,j in enumerate(l):\n        if R_len >= k - i - 1:\n            if R_len == 0:\n                ans = min(ans, j)\n            else:\n                ans = min(ans,2*j+r[k-i-2])\n\n    for i,j in enumerate(r):\n        if L_len >= k - i - 1:\n            if L_len == 0:\n                ans = min(ans,j)\n            else:\n                ans = min(ans,2*j+l[k-i-2])\n\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Mon Oct  5 20:18:18 2020\n\n@author: liang\n\"\"\"\n\nN, K = map(int, input().split())\nX = [int(x) for x in input().split()]\nans = 10**10\n\nfor i in range(N-K+1):\n    tmp = X[i+K-1] - X[i] + min(abs(X[i+K-1]),abs(X[i])) \n    if tmp < ans:\n        ans = tmp\nprint(ans)", "def main():\n  N, K = [int(n) for n in input().split(\" \")]\n  X = [int(x) for x in input().split(\" \")]\n  X.sort()\n  \n  minus = []\n  plus = []\n  for i in range(len(X)):\n    if X[i] < 0:\n      minus.append(-X[i])\n    else:\n      plus += X[i:]\n      break\n\n  minus.reverse()\n\n  T = []\n  \n  if len(plus) >= K:\n    T.append(plus[K - 1])\n  if len(minus) >= K:\n    T.append(minus[K - 1])\n  for i in range(K):\n    if i < len(plus) and 0 <= K - i - 2 < len(minus):\n      T.append(2 * plus[i] + minus[K - i - 2])\n      T.append(2 * minus[K - i - 2] + plus[i])\n    if i < len(minus) and 0 <= K - i - 2 < len(plus):\n      T.append(2 * minus[i] + plus[K - i - 2])\n      T.append(2 * plus[K - i - 2] + minus[i])\n  \n  print((min(T)))\n\nmain()\n\n", "n,k = map(int, input().split())\nal = list(map(int, input().split()))\n\nres= 10**10\n\nfor i in range(n-k+1):\n    st = al[i]\n    en = al[i+k-1]\n    if st *en <0:\n        temp = min(abs(st),abs(en))*2+max(abs(st),abs(en))\n    else:\n        temp = max(abs(st),abs(en))\n    res = min(temp,res)\n\nprint(res)", "#!/usr/bin/env python3\n# import bisect\n\nn, k = list(map(int, input().split()))\nx = list(map(int, input().split()))\n\n# index = bisect.bisect(list, 0)\n\n# left = index\n# right = n - index\n\n# if left != 0:\n#     if x[index-1] == 0:\n#         k -= 1\n#         del(x[index-1])\n\nans = 10**9\nfor i in range(0, n-k+1):\n    # print(x[i], x[i+k-1])\n    if x[i]*x[i+k-1] >= 0:\n        ans_tmp = max(abs(x[i]), abs(x[i+k-1]))\n    else:\n        ans_tmp = abs(x[i]) + abs(x[i+k-1]) + min(abs(x[i]), abs(x[i+k-1]))\n\n    # print(ans_tmp)\n    ans = min(ans, ans_tmp)\n# print()\nprint(ans)\n", "N,K=map(int,input().split())\n*X,=map(int,input().split())\ni=0\nans=[]\nwhile i+K-1<N:\n    a,b=X[i],X[i+K-1]\n    if b<0:\n        ans.append(abs(a))\n    elif a>0:\n        ans.append(b)\n    else:\n        a=abs(a)\n        ans.append(a+b+min(a,b))\n    i+=1\nprint(min(ans))", "import numpy as np\nN,K = list(map(int,input().split()))\nX = np.array(input().split(), dtype=np.int64)\n\nINF = 10 ** 18\nneg = np.concatenate([-X[X <= 0][::-1], np.full(N+1,INF,dtype=np.int64)])[:K]\npos = np.concatenate([X[X > 0], np.full(N+1,INF,dtype=np.int64)])[:K]\n\nanswer = INF\n# \u5de6\u306e\u307f\nanswer = min(answer, neg[-1])\n# \u53f3\u306e\u307f\nanswer = min(answer, pos[-1])\nif K >= 2:\n  # \u5de6\u306ba\u500b\u3001\u53f3\u306bK-a\u500b\n  answer = min(answer, (neg[:K-1] * 2 + pos[K-2::-1]).min())\n  # \u53f3\u306ba\u500b\u3001\u53f3\u306bK-a\u500b\n  answer = min(answer, (pos[:K-1] * 2 + neg[K-2::-1]).min())\n\nprint(answer)\n", "n,k = map(int, input().split())\nx = list(map(int, input().split()))\n\nans = float(\"inf\")\nfor i in range(n-k+1):\n  # 0\u306e\u4f4d\u7f6e\u304b\u3089\u79fb\u52d5\u3057\u3001i\u301ci+k\u307e\u3067\u306e\u308d\u3046\u305d\u304f\u306b\u706b\u3092\u3064\u3051\u305f\u5834\u5408\u306e\u79fb\u52d5\u6642\u9593\u306b\u3064\u3044\u3066\u5de6\u53f3\u3067\u78ba\u8a8d\u3057\u3001\u6700\u5c0f\u3092\u6c42\u3081\u308b\n  l = abs(x[i]) + abs(x[i]-x[i+k-1])\n  r = abs(x[i+k-1]) + abs(x[i] - x[i+k-1])\n  ans = min(ans, l, r)\nprint(ans)", "# import sys\n# sys.setrecursionlimit(10 ** 6)\n# import bisect\n# from collections import deque\n# from decorator import stop_watch\n# \n# \n# @stop_watch\ndef solve(N, K, x):\n    l = [abs(xi) for xi in x if xi < 0] + [0]\n    l.reverse()\n    r = [0] + [xi for xi in x if xi >= 0]\n    ans = 10 ** 18 * 2 + 1\n    for i in range(max(K - (len(l) - 1), 0), min(K + 1, len(r))):\n        ll = l[K - i]\n        rr = r[i]\n        ans = min(ans, min(ll, rr) * 2 + max(ll, rr))\n    print(ans)\n\n\ndef __starting_point():\n    # S = input()\n    # N = int(input())\n    N, K = list(map(int, input().split()))\n    x = [int(i) for i in input().split()]\n    # B = [int(i) for i in input().split()]\n    # AB = [[int(i) for i in input().split()] for _ in range(N)]\n    solve(N, K, x)\n\n    # # test\n    # from random import randint\n    # from func import random_str\n    # solve()\n\n__starting_point()", "import bisect\nimport math\n\nN,K = map(int, input().split())\nX = list(map(int, input().split()))\na = bisect.bisect_left(X,0)\nX.insert(a,0)\n\nans = math.inf\n\nfor i in range(max(0,a+K-N), min(a+1,K+1)):\n    ans = min(ans, -X[a-i]*2+X[a+K-i], -X[a-i]+X[a+K-i]*2)\n\nprint(ans)", "n, k = list(map(int, input().split()))\nxlst = list(map(int, input().split()))\nminus = []\nplus = []\nfor x in xlst:\n    if x < 0:\n        minus.append(-1 * x)\n    elif x > 0:\n        plus.append(x)\n    else:\n        k -= 1\nif k == 0:\n    print((0))\n    return\nminus.append(0)\nminus = minus[::-1]\nplus = [0] + plus\nans = 10 ** 20\nml = len(minus)\npl = len(plus)\n\npos = min(k, ml - 1)\nwhile 1:\n    mm = minus[pos]\n    pp = plus[k - pos]\n    ans_tmp = max(mm, pp) + min(mm, pp) * 2\n    ans = min(ans, ans_tmp)\n    pos -= 1\n    if pos == -1 or k - pos == pl:\n        break\nprint(ans)\n", "N, K = list(map(int, input().split()))\nD = [int(n) for n in input().split()]\nans = 10000000000\n\nfor i in range(N-K+1):\n    L = D[i]\n    R = D[i+K-1]\n    LR = abs(L) + abs(L - R)\n    RL = abs(R) + abs(R - L)\n    ans = min(ans, min(LR, RL))\n\nprint(ans)\n", "n, k = list(map(int, input().split()))\nl = list(map(int, input().split()))\nans = 10000000000000\nfor i in range(n-k+1):\n    ans1 = abs(l[i]) + abs(l[i+k-1] - l[i])\n    ans2 = abs(l[i+k-1]) + abs(l[i+k-1] - l[i])\n    ans = min(ans, ans1, ans2)\nprint(ans)\n", "from bisect import bisect_left\n\nn, k = list(map(int, input().split()))\nx = list(map(int, input().split()))\n\npos = bisect_left(x, 0)\nif pos < len(x) and x[pos] == 0:\n    k -= 1\nelse:\n    x.insert(pos, 0)\n\nl = pos\nr = pos+k\n\nif r >= len(x):\n    diff = r-len(x) + 1\n    l -= diff\n    r -= diff\n\nans = min(abs(x[l]), x[r])*2 + max(abs(x[l]), x[r])\n\nwhile r >= pos:\n    if l < 0:\n        break\n\n    dist = min(abs(x[l]), x[r])*2 + max(abs(x[l]), x[r])\n    if dist < ans:\n        ans = dist\n\n    l -= 1\n    r -= 1\n\nprint(ans)", "n,k=map(int,input().split())\nx=[int(i) for i in input().split()]\nans=10**9\n \nfor i in range(n-k+1):\n    temp=0\n    temp+=(min(abs(x[i]),abs(x[i+k-1]))+abs(x[i]-x[i+k-1]))\n    ans=min(ans,temp)\nprint(ans)", "n,k=list(map(int,input().split()))\nx=list(map(int,input().split()))\n\nmt=5*10**8\n\nfor i in range(n-k+1):\n  mt=min(mt,2*abs(x[i])+abs(x[i+k-1]),abs(x[i])+2*abs(x[i+k-1]))\n\nif x[0]>0:mt=min(mt,x[k-1])\nelif x[-1]<0:mt=min(mt,abs(x[-1-k+1]))\nprint(mt)\n    \n", "N,K = map(int,input().split())\nx = list(map(int,input().split()))\n\nans = []\nfor i in range(N-K+1):\n    if x[i] < 0 and x[i+K-1] > 0:\n        ans += abs(x[i]) + abs(x[i+K-1]) + min(abs(x[i]),abs(x[i+K-1])),\n    elif x[i] < 0:\n        ans += -x[i],\n    else:\n        ans += x[i+K-1],\nprint(min(ans))", "from sys import stdin\n\ndef getval():\n    n,k = map(int,input().split())\n    x = list(map(int,input().split()))\n    return n,k,x\n\ndef main(n,k,x):\n    idx = k-1\n    ans = 0\n    if x[0]>=0:\n        ans = x[idx]\n    elif x[idx]<=0:\n        ans = abs(x[0])\n    else:\n        ans = min(abs(x[0]),abs(x[idx]))*2+max(abs(x[0]),abs(x[idx]))\n    for i in range(k,n):\n        temp = 0\n        #print(ans)\n        if x[i-k+1]>=0:\n            temp = x[i]\n        elif x[i]<=0:\n            temp = abs(x[i-k+1])\n        else:\n            temp = min(abs(x[i]),abs(x[i-k+1]))*2+max(abs(x[i]),abs(x[i-k+1]))\n        ans = min(ans,temp)\n    print(ans)\n\n\ndef __starting_point():\n    n,k,x = getval()\n    main(n,k,x)\n__starting_point()", "n,k=map(int, input().split())\nx=list(map(int, input().split()))\nc=10**9\nfor i in range(n-k+1):\n  a=x[i+k-1]\n  b=x[i]\n  if a<0:\n    c=min(c,abs(b))\n  else:\n    if b<0:\n      c=min(c,min(a,abs(b))*2+max(a,abs(b)))\n    else:\n      c=min(c,a)\nprint(c)", "n,k = map(int, input().split())\nlis = list(map(int, input().split()))\n\nif len(lis) == 1:\n    print(abs(lis[0]))\n    return\n\nans = 10**9+7\nfor i in range(n-k+1):\n    l = abs(lis[i]) + abs(lis[i+k-1]-lis[i])\n    r = abs(lis[i+k-1]) + abs(lis[i+k-1]-lis[i])\n    ans = min(ans, l, r)\n\nprint(ans)", "import sys\n\ninput = sys.stdin.readline\n\n\ndef main():\n    N, K = list(map(int, input().split()))\n    X = list(map(int, input().split()))\n\n    X.sort()\n    ans = float(\"inf\")\n    for l in range(N - K + 1):\n        r = l + K - 1\n        l2r = abs(X[l]) + abs(X[l] - X[r])\n        r2l = abs(X[r]) + abs(X[r] - X[l])\n        ans = min(ans, l2r, r2l)\n\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n,k= list(map(int,input().split()))\npos= list(map(int,input().split()))\nans = 10**13\nfor i in range(n-k+1):\n    a1 = abs(pos[i]) + abs(pos[i] - pos[i+k-1])\n    a2 = abs(pos[i+k-1]) + abs(pos[i] - pos[i+k-1])\n    ans = min(ans, a1,a2)\nprint(ans)", "n, k = map(int, input().split())\nx = list(map(int, input().split()))\nans = 10**10\nfor left in range(n-k+1):\n    right = left+k-1\n    ans = min(ans, abs(x[left])+abs(x[right]-x[left]), abs(x[right])+abs(x[right]-x[left]))\nprint(ans)"]