2022-04-11 18:12:48.001997 num operations 2
2022-04-11 18:12:48.002023 size on input set 1
2022-04-11 18:12:50.966143 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(N):\n    for j in range(len(prefectures[i])):\n        print(str(i).zfill(6) + str(j+1).zfill(6))\n"
    },
    {
      "index": 1,
      "text": "\n\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(N):\n    for j in range(len(prefectures[i])):\n        print(str(i).zfill(6) + str(j+1).zfill(6))\n"
    }
  ],
  "created": 1649715168,
  "object": "edit"
}
2022-04-11 18:12:50.966407 fix spelling mistakes 2 ['\n\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(N):\n    for j in range(len(prefectures[i])):\n        print(str(i).zfill(6) + str(j+1).zfill(6))\n', '\n\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(N):\n    for j in range(len(prefectures[i])):\n        print(str(i).zfill(6) + str(j+1).zfill(6))\n']
2022-04-11 18:12:50.966445 size on output set 1
2022-04-11 18:12:50.966455 size on input set 1
2022-04-11 18:12:52.855220 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(N):\n    for j in range(len(prefectures[i])):\n        print(str(i).zfill(6) + str(j+1).zfill(6))\n"
    },
    {
      "index": 1,
      "text": "\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(N):\n    for j in range(len(prefectures[i])):\n        print(str(i).zfill(6) + str(j+1).zfill(6))\n"
    }
  ],
  "created": 1649715171,
  "object": "edit"
}
2022-04-11 18:12:52.855346 fix syntax errors 2 ['\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(N):\n    for j in range(len(prefectures[i])):\n        print(str(i).zfill(6) + str(j+1).zfill(6))\n', '\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(N):\n    for j in range(len(prefectures[i])):\n        print(str(i).zfill(6) + str(j+1).zfill(6))\n']
2022-04-11 18:12:52.855363 size on output set 1
2022-04-11 18:12:52.855373 num operations 2
2022-04-11 18:12:52.855376 size on input set 1
2022-04-11 18:12:56.348823 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_cities = [[] for _ in range(N)]  # \u666e\u901a\u306b\u30ea\u30b9\u30c8\u3092\u4f7f\u3046\u5834\u5408\n    prefecture_cities = defaultdict(list)  # defaultdict\u3092\u4f7f\u3046\u5834\u5408\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P].append(Y)\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_cities = [[] for _ in range(N)] # \u30ea\u30b9\u30c8\u306e\u30ea\u30b9\u30c8\n    prefecture_cities = defaultdict(list) # \u8f9e\u66f8\u306e\u30ea\u30b9\u30c8\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P].append(Y)\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649715173,
  "object": "edit"
}
2022-04-11 18:12:56.349023 fix spelling mistakes 2 ["\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_cities = [[] for _ in range(N)]  # 普通にリストを使う場合\n    prefecture_cities = defaultdict(list)  # defaultdictを使う場合\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P].append(Y)\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_cities = [[] for _ in range(N)] # リストのリスト\n    prefecture_cities = defaultdict(list) # 辞書のリスト\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P].append(Y)\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 18:12:56.349078 size on output set 2
2022-04-11 18:12:56.349088 size on input set 2
2022-04-11 18:13:00.665695 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from collections import defaultdict\n\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_cities = [[] for _ in range(N)] # \u30ea\u30b9\u30c8\u306e\u30ea\u30b9\u30c8\n    prefecture_cities = defaultdict(list) # \u8f9e\u66f8\u306e\u30ea\u30b9\u30c8\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P].append(Y)\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    N, M = map(int, input().split())\n    prefecture_cities = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P].append(Y)\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649715176,
  "object": "edit"
}
2022-04-11 18:13:00.666014 fix syntax errors 2 ["from collections import defaultdict\n\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_cities = [[] for _ in range(N)] # リストのリスト\n    prefecture_cities = defaultdict(list) # 辞書のリスト\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P].append(Y)\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, M = map(int, input().split())\n    prefecture_cities = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P].append(Y)\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 18:13:06.854153 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_cities = [[] for _ in range(N)]  # \u666e\u901a\u306b\u30ea\u30b9\u30c8\u3092\u4f7f\u3046\u5834\u5408 \n    prefecture_cities = defaultdict(list)  # defaultdict\u3092\u4f7f\u3046\u5834\u5408 \n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P].append(Y)\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    N, M = map(int, input().split())\n    prefecture_cities = [[] for _ in range(N)]  # \u666e\u901a\u306b\u30ea\u30b9\u30c8\u3092\u4f7f\u3046\u5834\u5408\n    # prefecture_cities = defaultdict(list)  # defaultdict\u3092\u4f7f\u3046\u5834\u5408\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P-1].append(Y)\n    for P, cities in enumerate(prefecture_cities):\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P+1, i))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649715180,
  "object": "edit"
}
2022-04-11 18:13:06.854512 fix syntax errors 2 ["\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_cities = [[] for _ in range(N)]  # 普通にリストを使う場合 \n    prefecture_cities = defaultdict(list)  # defaultdictを使う場合 \n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P].append(Y)\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, M = map(int, input().split())\n    prefecture_cities = [[] for _ in range(N)]  # 普通にリストを使う場合\n    # prefecture_cities = defaultdict(list)  # defaultdictを使う場合\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P-1].append(Y)\n    for P, cities in enumerate(prefecture_cities):\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P+1, i))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 18:13:06.854559 size on output set 4
