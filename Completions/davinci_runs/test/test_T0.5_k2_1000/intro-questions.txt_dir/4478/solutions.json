["import sys\nk=int(input())\nL=[]\ndic=dict()\nflag=False\nfor i in range(k):\n    L.append([int(input())])\n    L[i].append(list(map(int,input().split())))\n    s=sum(L[i][1])\n    q=[]\n    for j in range(L[i][0]):\n        if flag:\n            return\n        t=s-L[i][1][j]\n        if t in dic:\n            x,y=dic[t]\n            print(\"YES\")\n            print(i+1,j+1)\n            print(x,y)\n            flag=True\n        else:\n            q.append((t,i+1,j+1))\n    for a,b,c in q:\n        dic[a]=(b,c)\nprint(\"NO\")\n", "import sys\n\nclass Scanner():\n    def __init__(self):\n        self.tokens = []\n        self.index = -1\n\t\n        for line in sys.stdin:\n            self.tokens.extend(line.split())\n    \n    def next_token(self):\n        self.index += 1\n        return None if self.index == len(self.tokens) \\\n\t\t            else self.tokens[self.index]\n\ndef main():\n    scanner = Scanner()\n    n = int(scanner.next_token())\n    \n    sequences = []\n    for i in range(n):\n        k = int(scanner.next_token())\n        sequences.append([int(scanner.next_token()) for _ in range(k)])\n    \n    mp = dict()\n    for i, ar in enumerate(sequences):\n        s = sum(ar)\n        for j, v in enumerate(ar):\n            x = s - v\n            if x in mp:\n                print(\"YES\")\n                print(\"{} {}\".format(mp[x][0] + 1, mp[x][1] + 1))\n                print(\"{} {}\".format(i + 1, j + 1))\n                return\n        \n        for j, v in enumerate(ar):\n            mp[s - v] = (i, j)\n    \n    print(\"NO\")\n    \ndef __starting_point():\n    main()\n\n__starting_point()", "k = int(input())\na = []\nfor i in range(k):\n    n = int(input())\n    b = [int(i) for i in input().split()]\n    s = sum(b)\n    for j in range(n):\n        x = s-b[j]\n        a.append([x,i,j])\nf = True\na = sorted(a)\nfor i in range(1,len(a)):\n    if a[i][0] == a[i-1][0] and a[i][1]!=a[i-1][1]:\n        f = False\n        print('YES')\n        print(a[i][1]+1,a[i][2]+1)\n        print(a[i-1][1]+1, a[i-1][2]+1)\n        break\nif f:\n    print('NO')", "m=int(input())\na=[]\nfor i in range(m):\n    n=int(input())\n    a.append(list(map(int,input().split())))\nd=dict()\nf=0\nfor i in range(m):\n    summ=sum(a[i])\n    for j in range(len(a[i])):\n        if(summ-a[i][j] in d):\n            if(d[summ-a[i][j]][0]!=i+1):\n                print(\"YES\")\n                print(*d[summ-a[i][j]])\n                print(i+1,j+1)\n                f=1\n                break\n        d[summ-a[i][j]]=[i+1,j+1]\n    if(f):\n        break\nif(f==0):\n    print(\"NO\")", "n = int(input())\ncl = set()\ndic = {}\nfor i in range(n):\n    m = int(input())\n    s = list(map(int, input().split()))\n    t = []\n    sm = sum(s)\n    for x in range(m):\n        a = sm - s[x]\n        if a in cl:\n            print('YES')\n            print('{} {}'.format(i + 1, x + 1))\n            print('{} {}'.format(dic[a][0], dic[a][1]))\n            return\n        dic.update({a: (i+1, x+1)})\n        t.append(a)\n    for x in set(t):\n        cl.add(x)\n\n\nprint('NO')", "read = lambda : list(map(int,input().split()))\n\nk = int(input())\na = []\ns = []\ndict = {}\nfor i in range(k):\n   a.append([])\n   input()\n   s.append(0)\n   for j in read():\n      s[i] += j\n      a[i].append(j)\nok = False\nfor i in range(k):\n   if ok:\n      break\n   for j  in range(len(a[i])):\n      \n      x = s[i] - a[i][j]\n      tmp = dict.get(x)\n      if ( tmp  != None  ):\n         ok = True\n         print(\"YES\")\n         print(i+1,j+1)\n         print(tmp[0]+1,tmp[1]+1)\n         break\n\n   for j in range(len(a[i])):\n      x = s[i] - a[i][j]\n      dict[x] = [i,j]\nif not ok:\n   print(\"NO\")\n\n", "k = int(input())\nn = int(input())\na = list(map(int, input().split()))\nd = {}\nsuma = sum(a)\n\nfor i in range(n):\n    d[suma - a[i]] = [1, i + 1]\n\nans = False\n\nfor i in range(k - 1):\n    n = int(input())\n    a = list(map(int, input().split()))\n    suma = sum(a)\n    for j in range(n):\n        if (suma - a[j]) in d and not d[suma - a[j]][0] == i + 2:\n            print('YES')\n            print(i + 2, j + 1)\n            print(d[suma - a[j]][0], d[suma - a[j]][1])\n            ans = True\n            break\n        else:\n            d[suma - a[j]] = [i + 2, j + 1]\n    if ans:\n        break\nif not ans:\n    print('NO')", "k = int(input())\npossums = {}\nhave_ans = False\nfor i in range(k):\n    if have_ans:\n        break\n\n    n = input()\n    seq = list(map(int, input().split(' ')))\n    s = sum(seq)\n    for i_in_seq, n in enumerate(seq):\n        v = s - n\n        if v in possums and i != possums[v][0]:\n            have_ans = True\n            print('YES')\n            print(i + 1, i_in_seq + 1)\n            print(possums[v][0] + 1, possums[v][1] + 1)\n            break\n        else:\n            possums[v] = (i, i_in_seq)\n\nif not have_ans:\n    print('NO')\n", "k=int(input())\na,c=[],{}\nfor i in range(k):\n    a.append([])\n    n,a[i],s=int(input()),[],0\n    for j in input().split():\n        a[i]+=[-int(j)]\n        s+=int(j)\n    for j in range(n):\n        a[i][j]+=s\n        h=c.get(a[i][j])\n        if h!=None and h[0]!=i+1:\n            print(\"YES\")\n            print(h[0],h[1])\n            print(1+i,1+j)\n            quit()\n        c[a[i][j]]=[i+1,j+1]\nprint(\"NO\")\n"]