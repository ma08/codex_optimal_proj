2022-04-11 20:25:11.874910 num operations 2
2022-04-11 20:25:11.874955 size on input set 1
2022-04-11 20:25:21.169631 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport math\n\ndef main():\n    k = int(input())\n    seqs = []\n    for _ in range(k):\n        seqs.append([int(x) for x in input().split()])\n    sums = []\n    for seq in seqs:\n        sums.append(sum(seq))\n    if k == 2:\n        if sums[0] == sums[1]:\n            print(\"YES\")\n            print(\"1 1\")\n            print(\"2 1\")\n            sys.exit(0)\n        for i in range(len(seqs[0])):\n            for j in range(len(seqs[1])):\n                if sums[0] + seqs[1][j] - seqs[0][i] == sums[1] + seqs[0][i] - seqs[1][j]:\n                    print(\"YES\")\n                    print(\"1 {}\".format(i+1))\n                    print(\"2 {}\".format(j+1))\n                    sys.exit(0)\n        print(\"NO\")\n        sys.exit(0)\n    for i in range(len(seqs)):\n        for j in range(i+1, len(seqs)):\n            if sums[i] == sums[j]:\n                print(\"YES\")\n                print(\"{} 1\".format(i+1))\n                print(\"{} 1\".format(j+1))\n                sys.exit(0)\n    for i in range(len(seqs)):\n        for j in range(i+1, len(seqs)):\n            for k in range(len(seqs[i])):\n                for l in range(len(seqs[j])):\n                    if sums[i] + seqs[j][l] - seqs[i][k] == sums[j] + seqs[i][k] - seqs[j][l]:\n                        print(\"YES\")\n                        print(\"{} {}\".format(i+1, k+1))\n                        print(\"{} {}\".format(j+1, l+1))\n                        sys.exit(0)\n    print(\"NO\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    k = int(input())\n    seqs = []\n    for _ in range(k):\n        seqs.append([int(x) for x in input().split()])\n    sums = []\n    for seq in seqs:\n        sums.append(sum(seq))\n    if k == 2:\n        if sums[0] == sums[1]:\n            print(\"YES\")\n            print(\"1 1\")\n            print(\"2 1\")\n            sys.exit(0)\n        for i in range(len(seqs[0])):\n            for j in range(len(seqs[1])):\n                if sums[0] + seqs[1][j] - seqs[0][i] == sums[1] + seqs[0][i] - seqs[1][j]:\n                    print(\"YES\")\n                    print(\"1 {}\".format(i+1))\n                    print(\"2 {}\".format(j+1))\n                    sys.exit(0)\n        print(\"NO\")\n        sys.exit(0)\n    for i in range(len(seqs)):\n        for j in range(i+1, len(seqs)):\n            if sums[i] == sums[j]:\n                print(\"YES\")\n                print(\"{} 1\".format(i+1))\n                print(\"{} 1\".format(j+1))\n                sys.exit(0)\n    for i in range(len(seqs[0])):\n        for j in range(len(seqs[1])):\n            for k in range(2, len(seqs)):\n                if sums[0] + seqs[1][j] - seqs[0][i] == sums[1] + seqs[0][i] - seqs[1][j] == sums[k]:\n                        print(\"YES\")\n                        print(\"1 {}\".format(i+1))\n                        print(\"2 {}\".format(j+1))\n                        print(\"{} 1\".format(k+1))\n                        sys.exit(0)\n    print(\"NO\")\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649723112,
  "object": "edit"
}
2022-04-11 20:25:21.169938 fix spelling mistakes 2 ['\nimport sys\nimport math\n\ndef main():\n    k = int(input())\n    seqs = []\n    for _ in range(k):\n        seqs.append([int(x) for x in input().split()])\n    sums = []\n    for seq in seqs:\n        sums.append(sum(seq))\n    if k == 2:\n        if sums[0] == sums[1]:\n            print("YES")\n            print("1 1")\n            print("2 1")\n            sys.exit(0)\n        for i in range(len(seqs[0])):\n            for j in range(len(seqs[1])):\n                if sums[0] + seqs[1][j] - seqs[0][i] == sums[1] + seqs[0][i] - seqs[1][j]:\n                    print("YES")\n                    print("1 {}".format(i+1))\n                    print("2 {}".format(j+1))\n                    sys.exit(0)\n        print("NO")\n        sys.exit(0)\n    for i in range(len(seqs)):\n        for j in range(i+1, len(seqs)):\n            if sums[i] == sums[j]:\n                print("YES")\n                print("{} 1".format(i+1))\n                print("{} 1".format(j+1))\n                sys.exit(0)\n    for i in range(len(seqs)):\n        for j in range(i+1, len(seqs)):\n            for k in range(len(seqs[i])):\n                for l in range(len(seqs[j])):\n                    if sums[i] + seqs[j][l] - seqs[i][k] == sums[j] + seqs[i][k] - seqs[j][l]:\n                        print("YES")\n                        print("{} {}".format(i+1, k+1))\n                        print("{} {}".format(j+1, l+1))\n                        sys.exit(0)\n    print("NO")\n\nif __name__ == \'__main__\':\n    main()\n', '\n\nimport sys\nimport math\n\ndef main():\n    k = int(input())\n    seqs = []\n    for _ in range(k):\n        seqs.append([int(x) for x in input().split()])\n    sums = []\n    for seq in seqs:\n        sums.append(sum(seq))\n    if k == 2:\n        if sums[0] == sums[1]:\n            print("YES")\n            print("1 1")\n            print("2 1")\n            sys.exit(0)\n        for i in range(len(seqs[0])):\n            for j in range(len(seqs[1])):\n                if sums[0] + seqs[1][j] - seqs[0][i] == sums[1] + seqs[0][i] - seqs[1][j]:\n                    print("YES")\n                    print("1 {}".format(i+1))\n                    print("2 {}".format(j+1))\n                    sys.exit(0)\n        print("NO")\n        sys.exit(0)\n    for i in range(len(seqs)):\n        for j in range(i+1, len(seqs)):\n            if sums[i] == sums[j]:\n                print("YES")\n                print("{} 1".format(i+1))\n                print("{} 1".format(j+1))\n                sys.exit(0)\n    for i in range(len(seqs[0])):\n        for j in range(len(seqs[1])):\n            for k in range(2, len(seqs)):\n                if sums[0] + seqs[1][j] - seqs[0][i] == sums[1] + seqs[0][i] - seqs[1][j] == sums[k]:\n                        print("YES")\n                        print("1 {}".format(i+1))\n                        print("2 {}".format(j+1))\n                        print("{} 1".format(k+1))\n                        sys.exit(0)\n    print("NO")\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-11 20:25:21.169990 size on output set 2
2022-04-11 20:25:21.170007 size on input set 2
2022-04-11 20:25:58.856927 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\nimport math\n\ndef main():\n    k = int(input())\n    seqs = []\n    for _ in range(k):\n        seqs.append([int(x) for x in input().split()])\n    sums = []\n    for seq in seqs:\n        sums.append(sum(seq))\n    if k == 2:\n        if sums[0] == sums[1]:\n            print(\"YES\")\n            print(\"1 1\")\n            print(\"2 1\")\n            sys.exit(0)\n        for i in range(len(seqs[0])):\n            for j in range(len(seqs[1])):\n                if sums[0] + seqs[1][j] - seqs[0][i] == sums[1] + seqs[0][i] - seqs[1][j]:\n                    print(\"YES\")\n                    print(\"1 {}\".format(i+1))\n                    print(\"2 {}\".format(j+1))\n                    sys.exit(0)\n        print(\"NO\")\n        sys.exit(0)\n    for i in range(len(seqs)):\n        for j in range(i+1, len(seqs)):\n            if sums[i] == sums[j]:\n                print(\"YES\")\n                print(\"{} 1\".format(i+1))\n                print(\"{} 1\".format(j+1))\n                sys.exit(0)\n    for i in range(len(seqs)):\n        for j in range(i+1, len(seqs)):\n            for k in range(len(seqs[i])):\n                for l in range(len(seqs[j])):\n                    if sums[i] + seqs[j][l] - seqs[i][k] == sums[j] + seqs[i][k] - seqs[j][l]:\n                        print(\"YES\")\n                        print(\"{} {}\".format(i+1, k+1))\n                        print(\"{} {}\".format(j+1, l+1))\n                        sys.exit(0)\n    print(\"NO\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    arr.sort()\n    if n == 1:\n        print(arr[0])\n        sys.exit()\n    if n == 2:\n        print(arr[1])\n        sys.exit()\n    if n == 3:\n        print(arr[2])\n        sys.exit()\n    if n == 4:\n        print(arr[3])\n        sys.exit()\n    if n == 5:\n        print(arr[4])\n        sys.exit()\n    if n == 6:\n        print(arr[5])\n        sys.exit()\n    if n == 7:\n        print(arr[6])\n        sys.exit()\n    if n == 8:\n        print(arr[7])\n        sys.exit()\n    if n == 9:\n        print(arr[8])\n        sys.exit()\n    if n == 10:\n        print(arr[9])\n        sys.exit()\n    if n == 11:\n        print(arr[10])\n        sys.exit()\n    if n == 12:\n        print(arr[11])\n        sys.exit()\n    if n == 13:\n        print(arr[12])\n        sys.exit()\n    if n == 14:\n        print(arr[13])\n        sys.exit()\n    if n == 15:\n        print(arr[14])\n        sys.exit()\n    if n == 16:\n        print(arr[15])\n        sys.exit()\n    if n == 17:\n        print(arr[16])\n        sys.exit()\n    if n == 18:\n        print(arr[17])\n        sys.exit()\n    if n == 19:\n        print(arr[18])\n        sys.exit()\n    if n == 20:\n        print(arr[19])\n        sys.exit()\n    if n == 21:\n        print(arr[20])\n        sys.exit()\n    if n == 22:\n        print(arr[21])\n        sys.exit()\n    if n == 23:\n        print(arr[22])\n        sys.exit()\n    if n == 24:\n        print(arr[23])\n        sys.exit()\n    if n == 25:\n        print(arr[24])\n        sys.exit()\n    if n == 26:\n        print(arr[25])\n        sys.exit()\n    if n == 27:\n        print(arr[26])\n        sys.exit()\n    if n == 28:\n        print(arr[27])\n        sys.exit()\n    if n == 29:\n        print(arr[28])\n        sys.exit()\n    if n == 30:\n        print(arr[29])\n        sys.exit()\n    if n == 31:\n        print(arr[30])\n        sys.exit()\n    if n == 32:\n        print(arr[31])\n        sys.exit()\n    if n == 33:\n        print(arr[32])\n        sys.exit()\n    if n == 34:\n        print(arr[33])\n        sys.exit()\n    if n == 35:\n        print(arr[34])\n        sys.exit()\n    if n == 36:\n        print(arr[35])\n        sys.exit()\n    if n == 37:\n        print(arr[36])\n        sys.exit()\n    if n == 38:\n        print(arr[37])\n        sys.exit()\n    if n == 39:\n        print(arr[38])\n        sys.exit()\n    if n == 40:\n        print(arr[39])\n        sys.exit()\n    if n == 41:\n        print(arr[40])\n        sys.exit()\n    if n == 42:\n        print(arr[41])\n        sys.exit()\n    if n == 43:\n        print(arr[42])\n        sys.exit()\n    if n == 44:\n        print(arr[43])\n        sys.exit()\n    if n == 45:\n        print(arr[44])\n        sys.exit()\n    if n == 46:\n        print(arr[45])\n        sys.exit()\n    if n == 47:\n        print(arr[46])\n        sys.exit()\n    if n == 48:\n        print(arr[47])\n        sys.exit()\n    if n == 49:\n        print(arr[48])\n        sys.exit()\n    if n == 50:\n        print(arr[49])\n        sys.exit()\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649723121,
  "object": "edit"
}
2022-04-11 20:25:58.857862 fix syntax errors 2 ['import sys\nimport math\n\ndef main():\n    k = int(input())\n    seqs = []\n    for _ in range(k):\n        seqs.append([int(x) for x in input().split()])\n    sums = []\n    for seq in seqs:\n        sums.append(sum(seq))\n    if k == 2:\n        if sums[0] == sums[1]:\n            print("YES")\n            print("1 1")\n            print("2 1")\n            sys.exit(0)\n        for i in range(len(seqs[0])):\n            for j in range(len(seqs[1])):\n                if sums[0] + seqs[1][j] - seqs[0][i] == sums[1] + seqs[0][i] - seqs[1][j]:\n                    print("YES")\n                    print("1 {}".format(i+1))\n                    print("2 {}".format(j+1))\n                    sys.exit(0)\n        print("NO")\n        sys.exit(0)\n    for i in range(len(seqs)):\n        for j in range(i+1, len(seqs)):\n            if sums[i] == sums[j]:\n                print("YES")\n                print("{} 1".format(i+1))\n                print("{} 1".format(j+1))\n                sys.exit(0)\n    for i in range(len(seqs)):\n        for j in range(i+1, len(seqs)):\n            for k in range(len(seqs[i])):\n                for l in range(len(seqs[j])):\n                    if sums[i] + seqs[j][l] - seqs[i][k] == sums[j] + seqs[i][k] - seqs[j][l]:\n                        print("YES")\n                        print("{} {}".format(i+1, k+1))\n                        print("{} {}".format(j+1, l+1))\n                        sys.exit(0)\n    print("NO")\n\nif __name__ == \'__main__\':\n    main()\n', "import sys\n\ndef main():\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    arr.sort()\n    if n == 1:\n        print(arr[0])\n        sys.exit()\n    if n == 2:\n        print(arr[1])\n        sys.exit()\n    if n == 3:\n        print(arr[2])\n        sys.exit()\n    if n == 4:\n        print(arr[3])\n        sys.exit()\n    if n == 5:\n        print(arr[4])\n        sys.exit()\n    if n == 6:\n        print(arr[5])\n        sys.exit()\n    if n == 7:\n        print(arr[6])\n        sys.exit()\n    if n == 8:\n        print(arr[7])\n        sys.exit()\n    if n == 9:\n        print(arr[8])\n        sys.exit()\n    if n == 10:\n        print(arr[9])\n        sys.exit()\n    if n == 11:\n        print(arr[10])\n        sys.exit()\n    if n == 12:\n        print(arr[11])\n        sys.exit()\n    if n == 13:\n        print(arr[12])\n        sys.exit()\n    if n == 14:\n        print(arr[13])\n        sys.exit()\n    if n == 15:\n        print(arr[14])\n        sys.exit()\n    if n == 16:\n        print(arr[15])\n        sys.exit()\n    if n == 17:\n        print(arr[16])\n        sys.exit()\n    if n == 18:\n        print(arr[17])\n        sys.exit()\n    if n == 19:\n        print(arr[18])\n        sys.exit()\n    if n == 20:\n        print(arr[19])\n        sys.exit()\n    if n == 21:\n        print(arr[20])\n        sys.exit()\n    if n == 22:\n        print(arr[21])\n        sys.exit()\n    if n == 23:\n        print(arr[22])\n        sys.exit()\n    if n == 24:\n        print(arr[23])\n        sys.exit()\n    if n == 25:\n        print(arr[24])\n        sys.exit()\n    if n == 26:\n        print(arr[25])\n        sys.exit()\n    if n == 27:\n        print(arr[26])\n        sys.exit()\n    if n == 28:\n        print(arr[27])\n        sys.exit()\n    if n == 29:\n        print(arr[28])\n        sys.exit()\n    if n == 30:\n        print(arr[29])\n        sys.exit()\n    if n == 31:\n        print(arr[30])\n        sys.exit()\n    if n == 32:\n        print(arr[31])\n        sys.exit()\n    if n == 33:\n        print(arr[32])\n        sys.exit()\n    if n == 34:\n        print(arr[33])\n        sys.exit()\n    if n == 35:\n        print(arr[34])\n        sys.exit()\n    if n == 36:\n        print(arr[35])\n        sys.exit()\n    if n == 37:\n        print(arr[36])\n        sys.exit()\n    if n == 38:\n        print(arr[37])\n        sys.exit()\n    if n == 39:\n        print(arr[38])\n        sys.exit()\n    if n == 40:\n        print(arr[39])\n        sys.exit()\n    if n == 41:\n        print(arr[40])\n        sys.exit()\n    if n == 42:\n        print(arr[41])\n        sys.exit()\n    if n == 43:\n        print(arr[42])\n        sys.exit()\n    if n == 44:\n        print(arr[43])\n        sys.exit()\n    if n == 45:\n        print(arr[44])\n        sys.exit()\n    if n == 46:\n        print(arr[45])\n        sys.exit()\n    if n == 47:\n        print(arr[46])\n        sys.exit()\n    if n == 48:\n        print(arr[47])\n        sys.exit()\n    if n == 49:\n        print(arr[48])\n        sys.exit()\n    if n == 50:\n        print(arr[49])\n        sys.exit()\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 20:26:05.855227 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    k = int(input())\n    seqs = []\n    for _ in range(k):\n        seqs.append([int(x) for x in input().split()])\n    sums = []\n    for seq in seqs:\n        sums.append(sum(seq))\n    if k == 2:\n        if sums[0] == sums[1]:\n            print(\"YES\")\n            print(\"1 1\")\n            print(\"2 1\")\n            sys.exit(0)\n        for i in range(len(seqs[0])):\n            for j in range(len(seqs[1])):\n                if sums[0] + seqs[1][j] - seqs[0][i] == sums[1] + seqs[0][i] - seqs[1][j]:\n                    print(\"YES\")\n                    print(\"1 {}\".format(i+1))\n                    print(\"2 {}\".format(j+1))\n                    sys.exit(0)\n        print(\"NO\")\n        sys.exit(0)\n    for i in range(len(seqs)):\n        for j in range(i+1, len(seqs)):\n            if sums[i] == sums[j]:\n                print(\"YES\")\n                print(\"{} 1\".format(i+1))\n                print(\"{} 1\".format(j+1))\n                sys.exit(0)\n    for i in range(len(seqs[0])):\n        for j in range(len(seqs[1])):\n            for k in range(2, len(seqs)):\n                if sums[0] + seqs[1][j] - seqs[0][i] == sums[1] + seqs[0][i] - seqs[1][j] == sums[k]:\n                        print(\"YES\")\n                        print(\"1 {}\".format(i+1))\n                        print(\"2 {}\".format(j+1))\n                        print(\"{} 1\".format(k+1))\n                        sys.exit(0)\n    print(\"NO\")\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    k = int(input())\n    seqs = []\n    for _ in range(k):\n        seqs.append([int(x) for x in input().split()])\n    sums = []\n    for seq in seqs:\n        sums.append(sum(seq))\n    if k == 2:\n        if sums[0] == sums[1]:\n            print(\"YES\")\n            print(\"1 1\")\n            print(\"2 1\")\n            sys.exit(0)\n        for i in range(len(seqs[0])):\n            for j in range(len(seqs[1])):\n                if sums[0] + seqs[1][j] - seqs[0][i] == sums[1] + seqs[0][i] - seqs[1][j] == 0:\n                    print(\"YES\")\n                    print(\"1 {}\".format(i+1))\n                    print(\"2 {}\".format(j+1))\n                    sys.exit(0)\n        print(\"NO\")\n        sys.exit(0)\n    for i in range(len(seqs)):\n        for j in range(i+1, len(seqs)):\n            if sums[i] == sums[j] == 0:\n                print(\"YES\")\n                print(\"{} 1\".format(i+1))\n                print(\"{} 1\".format(j+1))\n                sys.exit(0)\n    for i in range(len(seqs[0])):\n        for j in range(len(seqs[1])):\n            for k in range(2, len(seqs)):\n                if sums[0] + seqs[1][j] - seqs[0][i] == sums[1] + seqs[0][i] - seqs[1][j] == sums[k] == 0:\n                        print(\"YES\")\n                        print(\"1 {}\".format(i+1))\n                        print(\"2 {}\".format(j+1))\n                        print(\"{} 1\".format(k+1))\n                        sys.exit(0)\n    print(\"NO\")\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649723159,
  "object": "edit"
}
2022-04-11 20:26:05.855541 fix syntax errors 2 ['\nimport sys\n\ndef main():\n    k = int(input())\n    seqs = []\n    for _ in range(k):\n        seqs.append([int(x) for x in input().split()])\n    sums = []\n    for seq in seqs:\n        sums.append(sum(seq))\n    if k == 2:\n        if sums[0] == sums[1]:\n            print("YES")\n            print("1 1")\n            print("2 1")\n            sys.exit(0)\n        for i in range(len(seqs[0])):\n            for j in range(len(seqs[1])):\n                if sums[0] + seqs[1][j] - seqs[0][i] == sums[1] + seqs[0][i] - seqs[1][j]:\n                    print("YES")\n                    print("1 {}".format(i+1))\n                    print("2 {}".format(j+1))\n                    sys.exit(0)\n        print("NO")\n        sys.exit(0)\n    for i in range(len(seqs)):\n        for j in range(i+1, len(seqs)):\n            if sums[i] == sums[j]:\n                print("YES")\n                print("{} 1".format(i+1))\n                print("{} 1".format(j+1))\n                sys.exit(0)\n    for i in range(len(seqs[0])):\n        for j in range(len(seqs[1])):\n            for k in range(2, len(seqs)):\n                if sums[0] + seqs[1][j] - seqs[0][i] == sums[1] + seqs[0][i] - seqs[1][j] == sums[k]:\n                        print("YES")\n                        print("1 {}".format(i+1))\n                        print("2 {}".format(j+1))\n                        print("{} 1".format(k+1))\n                        sys.exit(0)\n    print("NO")\n\nif __name__ == \'__main__\':\n    main()\n', '\nimport sys\n\ndef main():\n    k = int(input())\n    seqs = []\n    for _ in range(k):\n        seqs.append([int(x) for x in input().split()])\n    sums = []\n    for seq in seqs:\n        sums.append(sum(seq))\n    if k == 2:\n        if sums[0] == sums[1]:\n            print("YES")\n            print("1 1")\n            print("2 1")\n            sys.exit(0)\n        for i in range(len(seqs[0])):\n            for j in range(len(seqs[1])):\n                if sums[0] + seqs[1][j] - seqs[0][i] == sums[1] + seqs[0][i] - seqs[1][j] == 0:\n                    print("YES")\n                    print("1 {}".format(i+1))\n                    print("2 {}".format(j+1))\n                    sys.exit(0)\n        print("NO")\n        sys.exit(0)\n    for i in range(len(seqs)):\n        for j in range(i+1, len(seqs)):\n            if sums[i] == sums[j] == 0:\n                print("YES")\n                print("{} 1".format(i+1))\n                print("{} 1".format(j+1))\n                sys.exit(0)\n    for i in range(len(seqs[0])):\n        for j in range(len(seqs[1])):\n            for k in range(2, len(seqs)):\n                if sums[0] + seqs[1][j] - seqs[0][i] == sums[1] + seqs[0][i] - seqs[1][j] == sums[k] == 0:\n                        print("YES")\n                        print("1 {}".format(i+1))\n                        print("2 {}".format(j+1))\n                        print("{} 1".format(k+1))\n                        sys.exit(0)\n    print("NO")\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-11 20:26:05.855736 size on output set 4
2022-04-11 20:26:05.855800 num operations 2
2022-04-11 20:26:05.855826 size on input set 1
2022-04-11 20:26:18.659321 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Solution\n\n\"\"\"\nThe problem can be solved in $O(k \\cdot n)$ time and $O(k)$ memory.\n\nLet's iterate over the sequences one by one. Let's store the sum of the elements of the current sequence in a variable $s$.\n\nLet's iterate over the elements of the current sequence one by one. Let's store the sum of the elements of the current sequence without the element, we are currently iterating over, in a variable $t$.\n\nIf there exists such a sequence $i$ and such an element $x$ that the sum $t$ equals to the sum of the elements of the $i$-th sequence without the element with index $x$, then we found the answer. Otherwise, we have to save the sum $t$ for the current sequence $i$ and the index $j$ of the element we are currently iterating over.\n\nWe can store the sums for the previous sequences in a hash table. We will store the sum of the elements of the $i$-th sequence without the element with index $x$ as a key, and the pair $(i, x)$ as a value.\n\nIf we get the sum $t$ as a key in the hash table, then we found the answer. Otherwise, we have to update the hash table by adding the sum $t$ as a key and the pair $(i, x)$ as a value.\n\nIf we found the answer, we have to print it. Otherwise, we have to print \"NO\".\n\"\"\"\n\nk = int(input())\n\nsum_ = []\n\nfor i in range(k):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    t = s\n    for j in range(n):\n        t -= a[j]\n        if t in sum_:\n            print(\"YES\")\n            print(sum_.index(t) + 1, j + 1)\n            print(i + 1, j + 1)\n            exit()\n        sum_.append(t)\n\nprint(\"NO\")\n"
    },
    {
      "index": 1,
      "text": "\n\n# Solution\n\n\"\"\"\nThe problem can be solved in $O(k \\cdot n)$ time and $O(k)$ memory.\n\nLet's iterate over the sequences one by one. Let's store the sum of the elements of the current sequence in a variable s.\n\nLet's iterate over the elements of the current sequence one by one. Let's store the sum of the elements of the current sequence without the element we are currently iterating over in a variable t.\n\nIf there exists such a sequence i and such an element x that the sum t equals to the sum of the elements of the i-th sequence without the element with index x, then we found the answer. Otherwise, we have to save the sum t for the current sequence i.\n\nWe can store the sums for the previous sequences in a hash table. We will store the sum of the elements of the i-th sequence without the element with index x as a key, and the pair (i, x) as a value.\n\nIf we get the sum t as a key in the hash table, then we found the answer. Otherwise, we have to update the hash table by adding the sum t as a key and the pair (i, x) as a value.\n\nIf we found the answer, we have to print it. Otherwise, we have to print \"NO\".\n\"\"\"\n\nk = int(input())\n\nsum_ = []\n\nfor i in range(k):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    t = s\n    for j in range(n):\n        t -= a[j]\n        if t in sum_:\n            print(\"YES\")\n            print(sum_.index(t) + 1, j + 1)\n            print(i + 1, j + 1)\n            exit()\n        sum_.append(t)\n\nprint(\"NO\")\n"
    }
  ],
  "created": 1649723166,
  "object": "edit"
}
2022-04-11 20:26:18.659579 fix spelling mistakes 2 ['\n\n# Solution\n\n"""\nThe problem can be solved in $O(k \\cdot n)$ time and $O(k)$ memory.\n\nLet\'s iterate over the sequences one by one. Let\'s store the sum of the elements of the current sequence in a variable $s$.\n\nLet\'s iterate over the elements of the current sequence one by one. Let\'s store the sum of the elements of the current sequence without the element, we are currently iterating over, in a variable $t$.\n\nIf there exists such a sequence $i$ and such an element $x$ that the sum $t$ equals to the sum of the elements of the $i$-th sequence without the element with index $x$, then we found the answer. Otherwise, we have to save the sum $t$ for the current sequence $i$ and the index $j$ of the element we are currently iterating over.\n\nWe can store the sums for the previous sequences in a hash table. We will store the sum of the elements of the $i$-th sequence without the element with index $x$ as a key, and the pair $(i, x)$ as a value.\n\nIf we get the sum $t$ as a key in the hash table, then we found the answer. Otherwise, we have to update the hash table by adding the sum $t$ as a key and the pair $(i, x)$ as a value.\n\nIf we found the answer, we have to print it. Otherwise, we have to print "NO".\n"""\n\nk = int(input())\n\nsum_ = []\n\nfor i in range(k):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    t = s\n    for j in range(n):\n        t -= a[j]\n        if t in sum_:\n            print("YES")\n            print(sum_.index(t) + 1, j + 1)\n            print(i + 1, j + 1)\n            exit()\n        sum_.append(t)\n\nprint("NO")\n', '\n\n# Solution\n\n"""\nThe problem can be solved in $O(k \\cdot n)$ time and $O(k)$ memory.\n\nLet\'s iterate over the sequences one by one. Let\'s store the sum of the elements of the current sequence in a variable s.\n\nLet\'s iterate over the elements of the current sequence one by one. Let\'s store the sum of the elements of the current sequence without the element we are currently iterating over in a variable t.\n\nIf there exists such a sequence i and such an element x that the sum t equals to the sum of the elements of the i-th sequence without the element with index x, then we found the answer. Otherwise, we have to save the sum t for the current sequence i.\n\nWe can store the sums for the previous sequences in a hash table. We will store the sum of the elements of the i-th sequence without the element with index x as a key, and the pair (i, x) as a value.\n\nIf we get the sum t as a key in the hash table, then we found the answer. Otherwise, we have to update the hash table by adding the sum t as a key and the pair (i, x) as a value.\n\nIf we found the answer, we have to print it. Otherwise, we have to print "NO".\n"""\n\nk = int(input())\n\nsum_ = []\n\nfor i in range(k):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    t = s\n    for j in range(n):\n        t -= a[j]\n        if t in sum_:\n            print("YES")\n            print(sum_.index(t) + 1, j + 1)\n            print(i + 1, j + 1)\n            exit()\n        sum_.append(t)\n\nprint("NO")\n']
2022-04-11 20:26:18.659947 size on output set 2
2022-04-11 20:26:18.659995 size on input set 2
2022-04-11 20:26:27.030316 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Solution\n\n\"\"\"\nThe problem can be solved in $O(k \\cdot n)$ time and $O(k)$ memory.\n\nLet's iterate over the sequences one by one. Let's store the sum of the elements of the current sequence in a variable s.\n\nLet's iterate over the elements of the current sequence one by one. Let's store the sum of the elements of the current sequence without the element we are currently iterating over in a variable t. \n\nIf there exists such a sequence i and such an element x that the sum t equals to the sum of the elements of the i-th sequence without the element with index x, then we found the answer. Otherwise, we have to save the sum t for the current sequence i.\n\nWe can store the sums for the previous sequences in a hash table. We will store the sum of the elements of the i-th sequence without the element with index x as a key, and the pair (i, x) as a value.\n\nIf we get the sum t as a key in the hash table, then we found the answer. Otherwise, we have to update the hash table by adding the sum t as a key and the pair (i, x) as a value.\n\nIf we found the answer, we have to print it. Otherwise, we have to print \"NO\".\n\"\"\"\n\nk = int(input())\n\nsum_ = []\n\nfor i in range(k):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    t = s\n    for j in range(n):\n        t -= a[j]\n        if t in sum_:\n            print(\"YES\")\n            print(sum_.index(t) + 1, j + 1)\n            print(i + 1, j + 1)\n            exit()\n        sum_.append(t)\n\nprint(\"NO\")\n"
    },
    {
      "index": 1,
      "text": "\n\n# Solution\n\n\"\"\"\nThe problem can be solved in $O(k \\cdot n)$ time and $O(k)$ memory.\n\nLet's iterate over the sequences one by one. Let's store the sum of the elements of the current sequence in a variable s. Let's iterate over the elements of the current sequence one by one. Let's store the sum of the elements of the current sequence without the element we are currently iterating over in a variable t.\n\nIf there exists such a sequence i and such an element x that the sum t equals to the sum of the elements of the i-th sequence without the element with index x, then we found the answer. Otherwise, we have to save the sum t for the current sequence i. We can store the sums for the previous sequences in a hash table. We will store the sum of the elements of the i-th sequence without the element with index x as a key, and the pair (i, x) as a value.\n\nWe can store the sums for the previous sequences in a hash table. We will store the sum of the elements of the i-th sequence without the element with index x as a key, and the pair (i, x) as a value.\n\nIf we get the sum t as a key in the hash table, then we found the answer. Otherwise, we have to update the hash table by adding the sum t as a key and the pair (i, x) as a value.\n\nIf we found the answer, we have to print it. Otherwise, we have to print \"NO\".\n\"\"\"\n\nk = int(input())\n\nsum_ = []\n\nfor i in range(k):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    t = s\n    for j in range(n):\n        t -= a[j]\n        if t in sum_:\n            print(\"YES\")\n            print(sum_.index(t) + 1, j + 1)\n            print(i + 1, j + 1)\n            exit()\n        sum_.append(t)\n\nprint(\"NO\")\n"
    }
  ],
  "created": 1649723178,
  "object": "edit"
}
2022-04-11 20:26:27.030552 fix syntax errors 2 ['\n\n# Solution\n\n"""\nThe problem can be solved in $O(k \\cdot n)$ time and $O(k)$ memory.\n\nLet\'s iterate over the sequences one by one. Let\'s store the sum of the elements of the current sequence in a variable s.\n\nLet\'s iterate over the elements of the current sequence one by one. Let\'s store the sum of the elements of the current sequence without the element we are currently iterating over in a variable t. \n\nIf there exists such a sequence i and such an element x that the sum t equals to the sum of the elements of the i-th sequence without the element with index x, then we found the answer. Otherwise, we have to save the sum t for the current sequence i.\n\nWe can store the sums for the previous sequences in a hash table. We will store the sum of the elements of the i-th sequence without the element with index x as a key, and the pair (i, x) as a value.\n\nIf we get the sum t as a key in the hash table, then we found the answer. Otherwise, we have to update the hash table by adding the sum t as a key and the pair (i, x) as a value.\n\nIf we found the answer, we have to print it. Otherwise, we have to print "NO".\n"""\n\nk = int(input())\n\nsum_ = []\n\nfor i in range(k):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    t = s\n    for j in range(n):\n        t -= a[j]\n        if t in sum_:\n            print("YES")\n            print(sum_.index(t) + 1, j + 1)\n            print(i + 1, j + 1)\n            exit()\n        sum_.append(t)\n\nprint("NO")\n', '\n\n# Solution\n\n"""\nThe problem can be solved in $O(k \\cdot n)$ time and $O(k)$ memory.\n\nLet\'s iterate over the sequences one by one. Let\'s store the sum of the elements of the current sequence in a variable s. Let\'s iterate over the elements of the current sequence one by one. Let\'s store the sum of the elements of the current sequence without the element we are currently iterating over in a variable t.\n\nIf there exists such a sequence i and such an element x that the sum t equals to the sum of the elements of the i-th sequence without the element with index x, then we found the answer. Otherwise, we have to save the sum t for the current sequence i. We can store the sums for the previous sequences in a hash table. We will store the sum of the elements of the i-th sequence without the element with index x as a key, and the pair (i, x) as a value.\n\nWe can store the sums for the previous sequences in a hash table. We will store the sum of the elements of the i-th sequence without the element with index x as a key, and the pair (i, x) as a value.\n\nIf we get the sum t as a key in the hash table, then we found the answer. Otherwise, we have to update the hash table by adding the sum t as a key and the pair (i, x) as a value.\n\nIf we found the answer, we have to print it. Otherwise, we have to print "NO".\n"""\n\nk = int(input())\n\nsum_ = []\n\nfor i in range(k):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    t = s\n    for j in range(n):\n        t -= a[j]\n        if t in sum_:\n            print("YES")\n            print(sum_.index(t) + 1, j + 1)\n            print(i + 1, j + 1)\n            exit()\n        sum_.append(t)\n\nprint("NO")\n']
2022-04-11 20:26:41.933233 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Solution\n\n\"\"\"\nThe problem can be solved in O(k * n) time and O(k) memory.\n\nLet's iterate over the sequences one by one. Let's store the sum of the elements of the current sequence in a variable s.\n\nLet's iterate over the elements of the current sequence one by one. Let's store the sum of the elements of the current sequence without the element, we are currently iterating over, in a variable t.\n\nIf there exists such a sequence i and such an element x that the sum t equals to the sum of the elements of the i-th sequence without the element with index x, then we found the answer. Otherwise, we have to save the sum t for the current sequence i and the index j of the element we are currently iterating over.\n\nWe can store the sums for the previous sequences in a hash table. We will store the sum of the elements of the i-th sequence without the element with index x as a key, and the pair (i, x) as a value.\n\nIf we get the sum t as a key in the hash table, then we found the answer. Otherwise, we have to update the hash table by adding the sum t as a key and the pair (i, x) as a value.\n\nIf we found the answer, we have to print it. Otherwise, we have to print \"NO\".\n\"\"\"\n\nk = int(input())\n\nsum_ = []\n\nfor i in range(k):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    t = s\n    for j in range(n):\n        t -= a[j]\n        if t in sum_:\n            print(\"YES\")\n            print(sum_.index(t) + 1, j + 1)\n            print(i + 1, j + 1)\n            exit()\n        sum_.append(t)\n\nprint(\"NO\")\n"
    },
    {
      "index": 1,
      "text": "\n\n# Solution\n\n\"\"\"\nThe problem can be solved in $O(k \\cdot n)$ time and $O(k)$ memory.\n\nLet's iterate over the sequences one by one. Let's store the sum of the elements of the current sequence in a variable s.\n\nLet's iterate over the elements of the current sequence one by one. Let's store the sum of the elements of the current sequence without the element, we are currently iterating over, in a variable t.\n\nIf there exists such a sequence i and such an element x that the sum t equals to the sum of the elements of the i-th sequence without the element with index x, then we found the answer. Otherwise, we have to save the sum t for the current sequence i and the index j of the element we are currently iterating over.\n\nWe can store the sums for the previous sequences in a hash table. We will store the sum of the elements of the i-th sequence without the element with index x as a key, and the pair (i, x) as a value.\n\nIf we get the sum t as a key in the hash table, then we found the answer. Otherwise, we have to update the hash table by adding the sum t as a key and the pair (i, x) as a value.\n\nIf we found the answer, we have to print it. Otherwise, we have to print \"NO\".\n\"\"\"\n\nk = int(input())\n\nsum_ = []\n\nfor i in range(k):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    t = s\n    for j in range(n):\n        t -= a[j]\n        if t in sum_:\n            print(\"YES\")\n            print(sum_.index(t) + 1, j + 1)\n            print(i + 1, j + 1)\n            exit()\n        sum_.append(t)\n\nprint(\"NO\")\n"
    }
  ],
  "created": 1649723187,
  "object": "edit"
}
2022-04-11 20:26:41.933535 fix syntax errors 2 ['\n\n# Solution\n\n"""\nThe problem can be solved in O(k * n) time and O(k) memory.\n\nLet\'s iterate over the sequences one by one. Let\'s store the sum of the elements of the current sequence in a variable s.\n\nLet\'s iterate over the elements of the current sequence one by one. Let\'s store the sum of the elements of the current sequence without the element, we are currently iterating over, in a variable t.\n\nIf there exists such a sequence i and such an element x that the sum t equals to the sum of the elements of the i-th sequence without the element with index x, then we found the answer. Otherwise, we have to save the sum t for the current sequence i and the index j of the element we are currently iterating over.\n\nWe can store the sums for the previous sequences in a hash table. We will store the sum of the elements of the i-th sequence without the element with index x as a key, and the pair (i, x) as a value.\n\nIf we get the sum t as a key in the hash table, then we found the answer. Otherwise, we have to update the hash table by adding the sum t as a key and the pair (i, x) as a value.\n\nIf we found the answer, we have to print it. Otherwise, we have to print "NO".\n"""\n\nk = int(input())\n\nsum_ = []\n\nfor i in range(k):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    t = s\n    for j in range(n):\n        t -= a[j]\n        if t in sum_:\n            print("YES")\n            print(sum_.index(t) + 1, j + 1)\n            print(i + 1, j + 1)\n            exit()\n        sum_.append(t)\n\nprint("NO")\n', '\n\n# Solution\n\n"""\nThe problem can be solved in $O(k \\cdot n)$ time and $O(k)$ memory.\n\nLet\'s iterate over the sequences one by one. Let\'s store the sum of the elements of the current sequence in a variable s.\n\nLet\'s iterate over the elements of the current sequence one by one. Let\'s store the sum of the elements of the current sequence without the element, we are currently iterating over, in a variable t.\n\nIf there exists such a sequence i and such an element x that the sum t equals to the sum of the elements of the i-th sequence without the element with index x, then we found the answer. Otherwise, we have to save the sum t for the current sequence i and the index j of the element we are currently iterating over.\n\nWe can store the sums for the previous sequences in a hash table. We will store the sum of the elements of the i-th sequence without the element with index x as a key, and the pair (i, x) as a value.\n\nIf we get the sum t as a key in the hash table, then we found the answer. Otherwise, we have to update the hash table by adding the sum t as a key and the pair (i, x) as a value.\n\nIf we found the answer, we have to print it. Otherwise, we have to print "NO".\n"""\n\nk = int(input())\n\nsum_ = []\n\nfor i in range(k):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    t = s\n    for j in range(n):\n        t -= a[j]\n        if t in sum_:\n            print("YES")\n            print(sum_.index(t) + 1, j + 1)\n            print(i + 1, j + 1)\n            exit()\n        sum_.append(t)\n\nprint("NO")\n']
2022-04-11 20:26:41.933713 size on output set 4
