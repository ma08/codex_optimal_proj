["\n\nimport sys\nimport math\n\ndef main():\n\n    # Get the input\n    x = int(sys.stdin.readline())\n\n    # The number of points is the number of prime factors of x\n    print(num_primes(x))\n\n\n# This function returns the number of prime factors of x.\ndef num_primes(x):\n\n    # Initialize the number of primes to 0.\n    num_primes = 0\n\n    # If x is 1, then there are no primes, so return 0.\n    if x == 1:\n        return 0\n\n    # While x is greater than 1, remove the smallest prime factor of x\n    while x > 1:\n\n        # If x is even, then 2 is the smallest prime factor of x\n        if x % 2 == 0:\n            x = x // 2\n\n        # If x is odd, then find the smallest prime factor of x\n        else:\n            # Find the smallest odd factor of x\n            factor = smallest_odd_factor(x)\n\n            # Divide x by the factor\n            x = x // factor\n\n        # Increment the number of primes\n        num_primes += 1\n\n    # Return the number of primes\n    return num_primes\n\n\n# This function returns the smallest odd factor of x\ndef smallest_odd_factor(x):\n\n    # Initialize the smallest odd factor to be x\n    smallest_odd_factor = x\n\n    # Loop through all odd numbers from 3 to sqrt(x)\n    for i in range(3,int(math.sqrt(x)+1),2):\n\n        # If i is a factor of x\n        if x % i == 0:\n\n            # Update the smallest odd factor to i\n            smallest_odd_factor = i\n\n            # Break out of the loop\n            break\n\n    # Return the smallest odd factor\n    return smallest_odd_factor\n\n\n# Call the main function\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\nimport math\n\ndef main():\n    x = int(sys.stdin.readline()) \n\n    k = 0\n    while x > 1:\n        k += 1\n        x //= 2\n\n    print(k)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    \"\"\"main function.\"\"\"\n    x = int(input(\"Enter a number: \"))\n    k = 0\n    while x > 1:\n        k += 1\n        x = x // (2*k + 1)\n    print(k)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\nimport math\n\n# This is the main function that runs the program.\ndef main():\n\n    # Get the input.\n    x = int(sys.stdin.readline())\n\n    # The number of points is the number of prime factors of x.\n    print(num_factors(x))\n\n\n# This function returns the number of prime factors of x.\ndef num_factors(x):\n\n    # Initialize the number of primes to 0.\n    num_factors = 0\n\n    # If x is 1, then there are no primes, so return 0.\n    if x == 1:\n        return 0\n\n    # While x is greater than 1, remove the smallest prime factor of x.\n    while x > 1:\n\n        # If x is even, then 2 is the smallest prime factor of x\n        if x % 2 == 0:\n            x = x // 2\n\n        # If x is odd, then find the smallest prime factor of x\n        else:\n            # Find the smallest odd factor of x\n            factor = smallest_odd_factor(x)\n\n            # Divide x by the factor\n            x = x // factor\n\n        # Increment the number of primes\n        num_factors += 1\n\n    # Return the number of primes\n    return num_factors\n\n\n# This function returns the smallest odd factor of x\ndef smallest_odd_factor(x):\n\n    # Initialize the smallest odd factor to be x\n    smallest_odd_factor = x\n\n    # Loop through all odd numbers from 3 to sqrt(x)\n    for i in range(3,int(math.sqrt(x)+1),2):\n\n        # If i is a factor of x\n        if x % i == 0:\n\n            # Update the smallest odd factor to i\n            smallest_odd_factor = i\n\n            # Break out of the loop\n            break\n\n    # Return the smallest odd factor\n    return smallest_odd_factor\n\n\n# Call the main function\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\nimport math\n\ndef main():\n    X = int(sys.stdin.readline())\n    k = int(math.log2(X))\n    print(k)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\nimport math\n\ndef main():\n    x = int(sys.stdin.readline())\n    n = int(math.sqrt(x)) + 1\n    k = 0\n    while x > 1:\n        if x % n == 0:\n            k += 1\n        x //= n\n    print(k)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nimport math\n\ndef main():\n    print(\"Hello World!\")\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n# This is the main function that runs the program.\ndef main():\n\n    # Get the input\n    x = int(sys.stdin.readline())\n\n    # The number of points is the number of prime factors of x.\n    print(num_primes(x))\n\n\n# This function returns the number of prime factors of x.\ndef num_primes(x):\n\n    # Initialize the number of primes to 0.\n    num_primes = 0\n\n    # If x is 1, then there are no primes, so return 0.\n    if x == 1:\n        return 0\n\n    # While x is greater than 1, remove the smallest prime factor of x.\n    while x > 1:\n\n        # If x is even, then 2 is the smallest prime factor of x.\n        if x % 2 == 0:\n            x = x // 2\n\n        # If x is odd, then find the smallest prime factor of x.\n        else:\n            # Find the smallest odd factor of x.\n            factor = smallest_odd_factor(x)\n\n            # Divide x by the factor.\n            x = x // factor\n\n        # Increment the number of primes.\n        num_primes += 1\n\n    # Return the number of primes\n    return num_primes\n\n\n# This function returns the smallest odd factor of x.\ndef smallest_odd_factor(x):\n\n    # Initialize the smallest odd factor to be x.\n    smallest_odd_factor = x\n\n    # Loop through all odd numbers from 3 to sqrt(x)\n    for i in range(3,int(math.sqrt(x)+1),2):\n\n        # If i is a factor of x.\n        if x % i == 0:\n\n            # Update the smallest odd factor to i.\n            smallest_odd_factor = i\n\n            # Break out of the loop.\n            break\n\n    # Return the smallest odd factor.\n    return smallest_odd_factor\n\n\n# Call the main function.\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\nimport math\n\ndef main():\n    x = int(sys.stdin.readline())\n    k = int(math.log(x, 2))\n    print(k)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\nimport math\n\ndef main():\n    x = int(sys.stdin.readline()) # read the first line\n\n    k = 0 # initialize k\n    while x > 1:\n        k += 1\n        x //= 2\n\n    print(k)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\nimport math\n\ndef main():\n    X = int(sys.stdin.readline())\n    k = int(math.log(X, 2)) + 1\n    print(k)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    \"\"\"main function.\"\"\"\n    x = int(input())\n    k = 0\n    while x > 1:\n        k += 1\n        x = x // (2 * k + 1)\n    print(k)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    # find all prime factors\n    primes = []\n    while n % 2 == 0:\n        primes.append(2)\n        n //= 2\n    i = 3\n    while i * i <= n:\n        if n % i == 0:\n            primes.append(i)\n            n //= i\n        else:\n            i += 2\n    if n != 1:\n        primes.append(n)\n    # count how many times each prime occurs\n    counts = {}\n    for p in primes:\n        if p not in counts:\n            counts[p] = 0\n        counts[p] += 1\n    # find the number of points\n    k = 1\n    for c in counts.values():\n        k *= c + 1\n    print(k)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n# This is the main function that runs the program.\ndef main():\n\n    # Get the input.\n    x = int(input())\n\n    # The number of points is the number of prime factors of x.\n    print(num_primes(x)) \n\n\n# This function returns the number of prime factors of x.\ndef num_primes(x):\n\n    # Initialize the number of primes to 0.\n    num_primes = 0 \n\n    # If x is 1, then there are no primes, so return 0.\n    if x == 1: \n        return 0\n\n    # While x is greater than 1, remove the smallest prime factor of x.\n    while x > 1: \n\n        # If x is even, then 2 is the smallest prime factor of x\n        if x % 2 == 0: \n            x = x // 2\n\n        # If x is odd, then find the smallest prime factor of x\n        else: \n            # Find the smallest odd factor of x\n            factor = smallest_odd_factor(x) \n\n            # Divide x by the factor\n            x = x // factor \n\n        # Increment the number of primes\n        num_primes += 1 \n\n    # Return the number of primes\n    return num_primes \n\n\n# This function returns the smallest odd factor of x\ndef smallest_odd_factor(x):\n\n    # Initialize the smallest odd factor to be x\n    smallest_odd_factor = x \n\n    # Loop through all odd numbers from 3 to sqrt(x)\n    for i in range(3,int(math.sqrt(x)+1),2): \n\n        # If i is a factor of x\n        if x % i == 0: \n\n            # Update the smallest odd factor to i\n            smallest_odd_factor = i \n\n            # Break out of the loop\n            break \n\n    # Return the smallest odd factor\n    return smallest_odd_factor \n\n\n# Call the main function\nif __name__ == \"__main__\": \n    main()\n", "\nimport sys\nimport math\n\ndef main():\n    x = int(sys.stdin.readline())\n\n    k = 0\n    while x > 0:\n        k += 1\n        x //= 2\n\n    print(k)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\nimport math\n\ndef main():\n    x = int(sys.stdin.readline().strip())\n    n = int(math.sqrt(x)) + 1\n    k = 0\n    while x > 1:\n        if x % n == 0:\n            k += 1\n        x //= n\n    print(k)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nimport math\n\ndef main():\n    x = int(sys.stdin.readline())\n    k = int(math.log(x, 2)) + 1\n    print(2 ** k)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\nimport math\n\ndef main():\n    x = int(sys.stdin.readline().strip())\n    k = 0\n    while x > 1:\n        k += 1\n        x = x // 2\n    print(k)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nimport math\n\ndef main():\n    x = int(sys.stdin.readline().strip())\n    n = int(math.sqrt(x)) + 1\n    k = 0\n    while x > 1 and n > 1:\n        if x % n == 0:\n            k += 1\n        x //= n\n    print(k)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nimport math\n\ndef main():\n    x = int(sys.stdin.readline().strip())\n    n = int(math.sqrt(x)) + 1\n    k = 0\n    while x > 1:\n        if x % n == 0:\n            k += 1\n            x //= n\n        else:\n            n -= 1\n    print(k)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport os\nimport math\n\ndef main():\n    print(os.getcwd())\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n\ndef main():\n    x = int(sys.stdin.readline())\n\n    k = 0\n    while x > 1:\n        k += 1\n        x //= 2\n\n    print(k)\n\nif __name__ == \"__main__\":\n    main()\n"]