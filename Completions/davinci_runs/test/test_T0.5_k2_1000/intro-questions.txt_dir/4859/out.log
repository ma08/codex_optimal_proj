2022-04-09 23:08:26.568538 """
Since entering $2^\text {nd}$ grade Theta has daily math homework sheets. The problems on her worksheet usually go like this: There is a certain number of birds, dogs, and cats on a farm. Together they have $14$ legs. How many birds, dogs, and cats could there be? Write down as many answers as you can! 

It is always the same problem, just written in different ways: sometimes with horses, cows, sheep, goats, chickens, beetles, or even spiders – but never with snakes or fishes!

Can you write a program to double-check Theta’s answers?

-----Input-----
Input consists of a single line with $4$ integers: $b$, $d$, $c$, and $l$, with $b$, $d$, and $c$ representing the numbers of legs the first, second, and third type of animal has. You are given that $0 < b, c, d \le 100$ because some farm animals in these math problems may be centipedes. The total number of legs is given by $l$ ($0 \le l \le 250$).

-----Output-----
Output all possible answers, each on a separate line, in lexicographical order so that they are sorted by the number of the first animal, ties broken by the second and third animal numbers’, respectively. Separate the number of the first, second, and third animal with spaces. If there are no possible solutions, output impossible on a single line!

-----Examples-----
Sample Input 1:
2 4 4 14
Sample Output 1:
1 0 3
1 1 2
1 2 1
1 3 0
3 0 2
3 1 1
3 2 0
5 0 1
5 1 0
7 0 0

Sample Input 2:
100 80 60 240
Sample Output 2:
0 0 4
0 3 0
1 1 1
"""
2022-04-09 23:08:26.568556 --------------------------
2022-04-09 23:08:54.220907 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef possible(b, d, c, l):\n    for i in xrange(0, l/b + 1):\n        for j in xrange(0, l/d + 1):\n            for k in xrange(0, l/c + 1):\n                if i*b + j*d + k*c == l:\n                    print i, j, k\n\ndef main():\n    lines = sys.stdin.readlines()\n    b, d, c, l = map(int, lines[0].strip().split(' '))\n    possible(b, d, c, l)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef legs(b,d,c,l):\n    if l<0:\n        return\n    if b==0 and d==0 and c==0:\n        print(\"{} {} {}\".format(b,d,c))\n        return\n    legs(b-1,d,c,l-b)\n    legs(b,d-1,c,l-d)\n    legs(b,d,c-1,l-c)\n\ndef main():\n    data = sys.stdin.readline().split()\n    b = int(data[0])\n    d = int(data[1])\n    c = int(data[2])\n    l = int(data[3])\n    legs(b,d,c,l)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nfrom itertools import product\n\nb, d, c, l = map(int, input().split())\n\nfor i, j, k in product(range(l//b + 1), range(l//d + 1), range(l//c + 1)):\n    if i*b + j*d + k*c == l:\n        print(i, j, k)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nb, d, c, l = [int(x) for x in input().split()]\n\nsolutions = []\n\nfor i in range(l // b + 1):\n    for j in range(l // d + 1):\n        for k in range(l // c + 1):\n            if i * b + j * d + k * c == l:\n                solutions.append((i, j, k))\n\nif len(solutions) == 0:\n    print(\"impossible\")\nelse:\n    for solution in sorted(solutions):\n        print(\" \".join([str(x) for x in solution]))"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    b, d, c, l = [int(x) for x in sys.stdin.readline().split()]\n    solutions = []\n    for num_birds in range(l//b + 1):\n        for num_dogs in range(l//d + 1):\n            for num_cats in range(l//c + 1):\n                if num_birds*b + num_dogs*d + num_cats*c == l:\n                    solutions.append([num_birds, num_dogs, num_cats])\n    if solutions:\n        solutions.sort()\n        for sol in solutions:\n            print(\" \".join([str(x) for x in sol]))\n    else:\n        print(\"impossible\")\n\nmain()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nimport sys\n\nb, d, c, l = map(int, sys.stdin.readline().split())\n\nif l % 2 != 0:\n    print('impossible')\n    sys.exit()\n\nanswers = []\n\nfor birds in range(l // b + 1):\n    for dogs in range(l // d + 1):\n        for cats in range(l // c + 1):\n            if birds * b + dogs * d + cats * c == l:\n                answers.append([birds, dogs, cats])\n\nif len(answers) == 0:\n    print('impossible')\nelse:\n    for answer in sorted(answers):\n        print(*answer)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\n#This solution is incredibly slow, but it works. It uses brute force to find all possible combinations.\n\nb, d, c, l = map(int, input().split())\n\ndef solve(b, d, c, l):\n    if b + d + c > l:\n        return None\n    if b + d + c == l:\n        return [b, d, c]\n    for i in range(l//b + 1):\n        for j in range(l//d + 1):\n            for k in range(l//c + 1):\n                if i * b + j * d + k * c == l:\n                    return [i, j, k]\n    return None\n\nsolutions = []\nfor i in range(l//b + 1):\n    for j in range(l//d + 1):\n        for k in range(l//c + 1):\n            if i * b + j * d + k * c == l:\n                solutions.append([i, j, k])\n\nif len(solutions) == 0:\n    print(\"impossible\")\nelse:\n    for i in sorted(solutions):\n        print(i[0], i[1], i[2])"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\nimport sys\n\ndef main():\n    b, d, c, l = map(int, sys.stdin.readline().split())\n    if l % 2 == 1 or l < b or l < c or l < d or l > b + d + c * 2:\n        print(\"impossible\")\n        return\n    for i in range(0, l // b + 1):\n        for j in range(0, l // d + 1):\n            for k in range(0, l // c + 1):\n                if i * b + j * d + k * c == l:\n                    print(i, j, k)\n\nif __name__ == (\"__main__\"):\n    main()"
    }
  ],
  "created": 1649560106,
  "id": "cmpl-4vIE6UOTZ6kYG9car0Kl7OGzydlp7",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 23:08:54.221117 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef possible(b, d, c, l):\n    for i in xrange(0, l/b + 1):\n        for j in xrange(0, l/d + 1):\n            for k in xrange(0, l/c + 1):\n                if i*b + j*d + k*c == l:\n                    print i, j, k\n\ndef main():\n    lines = sys.stdin.readlines()\n    b, d, c, l = map(int, lines[0].strip().split(' '))\n    possible(b, d, c, l)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 23:08:54.221135 REASON stop
2022-04-09 23:08:54.232358 test/intro-questions.txt_dir/4859/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4859/solutions.json'
2022-04-09 23:08:54.232394 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef legs(b,d,c,l):\n    if l<0:\n        return\n    if b==0 and d==0 and c==0:\n        print(\"{} {} {}\".format(b,d,c))\n        return\n    legs(b-1,d,c,l-b)\n    legs(b,d-1,c,l-d)\n    legs(b,d,c-1,l-c)\n\ndef main():\n    data = sys.stdin.readline().split()\n    b = int(data[0])\n    d = int(data[1])\n    c = int(data[2])\n    l = int(data[3])\n    legs(b,d,c,l)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-09 23:08:54.232471 REASON stop
2022-04-09 23:08:54.232899 test/intro-questions.txt_dir/4859/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4859/solutions.json'
2022-04-09 23:08:54.232946 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nfrom itertools import product\n\nb, d, c, l = map(int, input().split())\n\nfor i, j, k in product(range(l//b + 1), range(l//d + 1), range(l//c + 1)):\n    if i*b + j*d + k*c == l:\n        print(i, j, k)"
}
2022-04-09 23:08:54.233021 REASON stop
2022-04-09 23:08:54.233438 test/intro-questions.txt_dir/4859/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4859/solutions.json'
2022-04-09 23:08:54.233538 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nb, d, c, l = [int(x) for x in input().split()]\n\nsolutions = []\n\nfor i in range(l // b + 1):\n    for j in range(l // d + 1):\n        for k in range(l // c + 1):\n            if i * b + j * d + k * c == l:\n                solutions.append((i, j, k))\n\nif len(solutions) == 0:\n    print(\"impossible\")\nelse:\n    for solution in sorted(solutions):\n        print(\" \".join([str(x) for x in solution]))"
}
2022-04-09 23:08:54.233611 REASON stop
2022-04-09 23:08:54.234013 test/intro-questions.txt_dir/4859/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4859/solutions.json'
2022-04-09 23:08:54.234051 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    b, d, c, l = [int(x) for x in sys.stdin.readline().split()]\n    solutions = []\n    for num_birds in range(l//b + 1):\n        for num_dogs in range(l//d + 1):\n            for num_cats in range(l//c + 1):\n                if num_birds*b + num_dogs*d + num_cats*c == l:\n                    solutions.append([num_birds, num_dogs, num_cats])\n    if solutions:\n        solutions.sort()\n        for sol in solutions:\n            print(\" \".join([str(x) for x in sol]))\n    else:\n        print(\"impossible\")\n\nmain()"
}
2022-04-09 23:08:54.234120 REASON stop
2022-04-09 23:08:54.234522 test/intro-questions.txt_dir/4859/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4859/solutions.json'
2022-04-09 23:08:54.234560 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nimport sys\n\nb, d, c, l = map(int, sys.stdin.readline().split())\n\nif l % 2 != 0:\n    print('impossible')\n    sys.exit()\n\nanswers = []\n\nfor birds in range(l // b + 1):\n    for dogs in range(l // d + 1):\n        for cats in range(l // c + 1):\n            if birds * b + dogs * d + cats * c == l:\n                answers.append([birds, dogs, cats])\n\nif len(answers) == 0:\n    print('impossible')\nelse:\n    for answer in sorted(answers):\n        print(*answer)"
}
2022-04-09 23:08:54.234638 REASON stop
2022-04-09 23:08:54.235045 test/intro-questions.txt_dir/4859/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4859/solutions.json'
2022-04-09 23:08:54.235081 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\n#This solution is incredibly slow, but it works. It uses brute force to find all possible combinations.\n\nb, d, c, l = map(int, input().split())\n\ndef solve(b, d, c, l):\n    if b + d + c > l:\n        return None\n    if b + d + c == l:\n        return [b, d, c]\n    for i in range(l//b + 1):\n        for j in range(l//d + 1):\n            for k in range(l//c + 1):\n                if i * b + j * d + k * c == l:\n                    return [i, j, k]\n    return None\n\nsolutions = []\nfor i in range(l//b + 1):\n    for j in range(l//d + 1):\n        for k in range(l//c + 1):\n            if i * b + j * d + k * c == l:\n                solutions.append([i, j, k])\n\nif len(solutions) == 0:\n    print(\"impossible\")\nelse:\n    for i in sorted(solutions):\n        print(i[0], i[1], i[2])"
}
2022-04-09 23:08:54.235155 REASON stop
2022-04-09 23:08:54.235568 test/intro-questions.txt_dir/4859/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4859/solutions.json'
2022-04-09 23:08:54.235607 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\nimport sys\n\ndef main():\n    b, d, c, l = map(int, sys.stdin.readline().split())\n    if l % 2 == 1 or l < b or l < c or l < d or l > b + d + c * 2:\n        print(\"impossible\")\n        return\n    for i in range(0, l // b + 1):\n        for j in range(0, l // d + 1):\n            for k in range(0, l // c + 1):\n                if i * b + j * d + k * c == l:\n                    print(i, j, k)\n\nif __name__ == (\"__main__\"):\n    main()"
}
2022-04-09 23:08:54.235678 REASON stop
2022-04-09 23:08:54.236164 test/intro-questions.txt_dir/4859/question.txt [Errno 2] No such file or directory: 'test/intro-questions.txt_dir/4859/solutions.json'
