["\n# number of votes\nfrom collections import Counter\n\nnum_of_votes = int(input())\nvotes = [input() for _ in range(num_of_votes)]\n\nc = Counter(votes)\n\nmax_count = max(c.values())\n\nprint(\"\\n\".join(sorted([v for v in c.keys() if c[v] == max_count])))\n", "#number of votes\nfrom collections import Counter\n\nnum_of_votes = int(input())\nvotes = [input() for _ in range(num_of_votes)]\n\nc = Counter(votes)\n\nmax_count = max(c.values())\n\nprint(\"\\n\".join(sorted([v for v in c.keys() if c[v] == max_count])))\n", "import collections\n\nn = int(input())\ns = [input() for _ in range(n)]\n\nc = collections.Counter(s)\n\nprint(\"\\n\".join(sorted(k for k, v in c.items() if v == max(c.values())))\n", "\nimport collections\n\nn = int(input())\ns = [input() for _ in range(n)]\n\nc = collections.Counter(s)\n\nprint(\"\\n\".join(sorted(k for k, v in c.items() if v == max(c.values())))\n", "\n\nfrom collections import Counter\n\nnum_of_votes = int(input())\nvotes = [input() for _ in range(num_of_votes)]\n\nc = Counter(votes)\n\nmax_count = max(c.values())\n\nprint(\"\\n\".join(sorted([v for v in c.keys() if c[v] == max_count])))\n"]