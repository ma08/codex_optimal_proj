2022-04-09 21:35:49.918761 """
Joisino is working as a receptionist at a theater.
The theater has 100000 seats, numbered from 1 to 100000.
According to her memo, N groups of audiences have come so far, and the i-th group occupies the consecutive seats from Seat l_i to Seat r_i (inclusive).
How many people are sitting at the theater now?

-----Constraints-----
 - 1≤N≤1000
 - 1≤l_i≤r_i≤100000
 - No seat is occupied by more than one person.
 - All input values are integers.

-----Input-----
Input is given from Standard Input in the following format:
N
l_1 r_1
:
l_N r_N

-----Output-----
Print the number of people sitting at the theater.

-----Sample Input-----
1
24 30

-----Sample Output-----
7

There are 7 people, sitting at Seat 24,25,26,27,28,29 and 30.
"""
2022-04-09 21:35:49.918787 --------------------------
2022-04-09 21:36:08.088046 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n# \u89e3\u7b54\n# N: \u30b0\u30eb\u30fc\u30d7\u6570\n# l_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u5de6\u7aef\n# r_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u53f3\u7aef\n\nN = int(input())\n\n# \u5ea7\u5e2d\u3092\u8868\u3059\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n# \u5ea7\u5e2d\u306e\u4eba\u6570\u3092\u8868\u3059\uff080\u306f\u7a7a\u5e2d\u30011\u306f1\u4eba\u304c\u5ea7\u3063\u3066\u3044\u308b\uff09\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # \u5ea7\u5e2d\u756a\u53f7\u306f1\u304b\u3089\u59cb\u307e\u308b\u304c\u3001\u30ea\u30b9\u30c8\u306f0\u304b\u3089\u59cb\u307e\u308b\u306e\u3067-1\u3057\u3066\u304a\u304f\n        seats[j] = 1\n\nprint(sum(seats))"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n# Solved by myself\n\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nN = int(input())\nseats = [0] * 100001\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r+1):\n        seats[i] += 1\n\nprint(sum(seats))"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nN = int(input())\ncount = 0\nseats = [0 for i in range(100000)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        seats[j-1] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nN = int(input())\n\ns = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    s += r - l + 1\n\nprint(s)"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\n# N = Number of groups of audiences\n# l = Left-most seat\n# r = Right-most seat\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r+1):\n        s.add(i)\n\nprint(len(s))"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nn = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j - 1] = 1\nprint(sum(seats))"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nN = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        S[j] = 1\nprint(sum(S))"
    }
  ],
  "created": 1649554550,
  "id": "cmpl-4vGmUM2hlI1Ooaowf41z7w062Pofl",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 21:36:08.088518 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n# \u89e3\u7b54\n# N: \u30b0\u30eb\u30fc\u30d7\u6570\n# l_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u5de6\u7aef\n# r_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u53f3\u7aef\n\nN = int(input())\n\n# \u5ea7\u5e2d\u3092\u8868\u3059\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n# \u5ea7\u5e2d\u306e\u4eba\u6570\u3092\u8868\u3059\uff080\u306f\u7a7a\u5e2d\u30011\u306f1\u4eba\u304c\u5ea7\u3063\u3066\u3044\u308b\uff09\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # \u5ea7\u5e2d\u756a\u53f7\u306f1\u304b\u3089\u59cb\u307e\u308b\u304c\u3001\u30ea\u30b9\u30c8\u306f0\u304b\u3089\u59cb\u307e\u308b\u306e\u3067-1\u3057\u3066\u304a\u304f\n        seats[j] = 1\n\nprint(sum(seats))"
}
2022-04-09 21:36:08.088554 REASON stop
2022-04-09 21:36:08.091046 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n# Solved by myself\n\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)"
}
2022-04-09 21:36:08.091253 REASON stop
2022-04-09 21:36:08.092817 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nN = int(input())\nseats = [0] * 100001\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r+1):\n        seats[i] += 1\n\nprint(sum(seats))"
}
2022-04-09 21:36:08.093011 REASON stop
2022-04-09 21:36:08.094966 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nN = int(input())\ncount = 0\nseats = [0 for i in range(100000)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        seats[j-1] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)"
}
2022-04-09 21:36:08.095127 REASON stop
2022-04-09 21:36:08.095987 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nN = int(input())\n\ns = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    s += r - l + 1\n\nprint(s)"
}
2022-04-09 21:36:08.096096 REASON stop
2022-04-09 21:36:08.096634 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\n# N = Number of groups of audiences\n# l = Left-most seat\n# r = Right-most seat\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r+1):\n        s.add(i)\n\nprint(len(s))"
}
2022-04-09 21:36:08.096688 REASON stop
2022-04-09 21:36:08.096955 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nn = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j - 1] = 1\nprint(sum(seats))"
}
2022-04-09 21:36:08.096988 REASON stop
2022-04-09 21:36:08.097799 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nN = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        S[j] = 1\nprint(sum(S))"
}
2022-04-09 21:36:08.097880 REASON stop
