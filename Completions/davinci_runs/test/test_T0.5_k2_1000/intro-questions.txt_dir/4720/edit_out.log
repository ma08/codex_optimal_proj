2022-04-11 22:06:25.725551 num operations 2
2022-04-11 22:06:25.725593 size on input set 1
2022-04-11 22:06:31.943621 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# \u89e3\u7b54\n# N: \u30b0\u30eb\u30fc\u30d7\u6570\n# l_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u5de6\u7aef\uff081\u304b\u3089\u59cb\u307e\u308b\uff09\n# r_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u53f3\u7aef\uff081\u304b\u3089\u59cb\u307e\u308b\uff09\n\nN = int(input())\n\n# \u5ea7\u5e2d\u3092\u8868\u3059\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n# \u5ea7\u5e2d\u306e\u4eba\u6570\u3092\u8868\u3059\uff080\u306f\u7a7a\u5e2d\u30011\u306f1\u4eba\u304c\u5ea7\u3063\u3066\u3044\u308b\uff09\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # \u30ea\u30b9\u30c8\u306f0\u304b\u3089\u59cb\u307e\u308b\u306e\u3067-1\u3057\u3066\u304a\u304f\n        seats[j] = 1\n\nprint(sum(seats))\n"
    },
    {
      "index": 1,
      "text": "\n\n# \u89e3\u7b54\n# N: \u30b0\u30eb\u30fc\u30d7\u6570\n# l_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u5de6\u7aef\n# r_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u53f3\u7aef\n\nN = int(input())\n\n# \u5ea7\u5e2d\u3092\u8868\u3059\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n# \u5ea7\u5e2d\u306e\u4eba\u6570\u3092\u8868\u3059\uff080\u306f\u7a7a\u5e2d\u30011\u306f1\u4eba\u304c\u5ea7\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u8868\u3059\uff09\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # \u5ea7\u5e2d\u756a\u53f7\u306f1\u304b\u3089\u59cb\u307e\u308b\u304c\u3001\u30ea\u30b9\u30c8\u306f0\u304b\u3089\u59cb\u307e\u308b\u306e\u3067-1\u3057\u3066\u304a\u304f\n        seats[j] = 1\n\nprint(sum(seats))\n"
    }
  ],
  "created": 1649729186,
  "object": "edit"
}
2022-04-11 22:06:31.943984 fix spelling mistakes 2 ['\n\n# 解答\n# N: グループ数\n# l_i: i番目のグループの座席の左端（1から始まる）\n# r_i: i番目のグループの座席の右端（1から始まる）\n\nN = int(input())\n\n# 座席を表すリストを作成\n# 座席の人数を表す（0は空席、1は1人が座っている）\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # リストは0から始まるので-1しておく\n        seats[j] = 1\n\nprint(sum(seats))\n', '\n\n# 解答\n# N: グループ数\n# l_i: i番目のグループの座席の左端\n# r_i: i番目のグループの座席の右端\n\nN = int(input())\n\n# 座席を表すリストを作成\n# 座席の人数を表す（0は空席、1は1人が座っていることを表す）\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # 座席番号は1から始まるが、リストは0から始まるので-1しておく\n        seats[j] = 1\n\nprint(sum(seats))\n']
2022-04-11 22:06:31.944061 size on output set 2
2022-04-11 22:06:31.944071 size on input set 2
2022-04-11 22:06:33.979273 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# \u89e3\u7b54\n# N: \u30b0\u30eb\u30fc\u30d7\u6570\n# l_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u5de6\u7aef\n# r_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u53f3\u7aef\n\nN = int(input())\n\n# \u5ea7\u5e2d\u3092\u8868\u3059\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n# \u5ea7\u5e2d\u306e\u4eba\u6570\u3092\u8868\u3059\uff080\u306f\u7a7a\u5e2d\u30011\u306f1\u4eba\u304c\u5ea7\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u8868\u3059\uff09\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # \u5ea7\u5e2d\u756a\u53f7\u306f1\u304b\u3089\u59cb\u307e\u308b\u304c\u3001\u30ea\u30b9\u30c8\u306f0\u304b\u3089\u59cb\u307e\u308b\u306e\u3067-1\u3057\u3066\u304a\u304f\n        seats[j] = 1\n\nprint(sum(seats))\n"
    },
    {
      "index": 1,
      "text": "\n# \u89e3\u7b54\n# N: \u30b0\u30eb\u30fc\u30d7\u6570\n# l_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u5de6\u7aef\n# r_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u53f3\u7aef\n\nN = int(input())\n\n# \u5ea7\u5e2d\u3092\u8868\u3059\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n# \u5ea7\u5e2d\u306e\u4eba\u6570\u3092\u8868\u3059\uff080\u306f\u7a7a\u5e2d\u30011\u306f1\u4eba\u304c\u5ea7\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u8868\u3059\uff09\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # \u5ea7\u5e2d\u756a\u53f7\u306f1\u304b\u3089\u59cb\u307e\u308b\u304c\u3001\u30ea\u30b9\u30c8\u306f0\u304b\u3089\u59cb\u307e\u308b\u306e\u3067-1\u3057\u3066\u304a\u304f\n        seats[j] = 1\n\nprint(sum(seats))\n"
    }
  ],
  "created": 1649729192,
  "object": "edit"
}
2022-04-11 22:06:33.979640 fix syntax errors 2 ['\n# 解答\n# N: グループ数\n# l_i: i番目のグループの座席の左端\n# r_i: i番目のグループの座席の右端\n\nN = int(input())\n\n# 座席を表すリストを作成\n# 座席の人数を表す（0は空席、1は1人が座っていることを表す）\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # 座席番号は1から始まるが、リストは0から始まるので-1しておく\n        seats[j] = 1\n\nprint(sum(seats))\n', '\n# 解答\n# N: グループ数\n# l_i: i番目のグループの座席の左端\n# r_i: i番目のグループの座席の右端\n\nN = int(input())\n\n# 座席を表すリストを作成\n# 座席の人数を表す（0は空席、1は1人が座っていることを表す）\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # 座席番号は1から始まるが、リストは0から始まるので-1しておく\n        seats[j] = 1\n\nprint(sum(seats))\n']
2022-04-11 22:06:35.926676 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# \u89e3\u7b54\n# N: \u30b0\u30eb\u30fc\u30d7\u6570\n# l_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u5de6\u7aef\uff081\u304b\u3089\u59cb\u307e\u308b\uff09\n# r_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u53f3\u7aef\uff081\u304b\u3089\u59cb\u307e\u308b\uff09\n\nN = int(input())\n\n# \u5ea7\u5e2d\u3092\u8868\u3059\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n# \u5ea7\u5e2d\u306e\u4eba\u6570\u3092\u8868\u3059\uff080\u306f\u7a7a\u5e2d\u30011\u306f1\u4eba\u304c\u5ea7\u3063\u3066\u3044\u308b\uff09\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # \u30ea\u30b9\u30c8\u306f0\u304b\u3089\u59cb\u307e\u308b\u306e\u3067-1\u3057\u3066\u304a\u304f\n        seats[j] = 1\n\nprint(sum(seats))\n"
    },
    {
      "index": 1,
      "text": "\n# \u89e3\u7b54\n# N: \u30b0\u30eb\u30fc\u30d7\u6570\n# l_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u5de6\u7aef\uff081\u304b\u3089\u59cb\u307e\u308b\uff09\n# r_i: i\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306e\u5ea7\u5e2d\u306e\u53f3\u7aef\uff081\u304b\u3089\u59cb\u307e\u308b\uff09\n\nN = int(input())\n\n# \u5ea7\u5e2d\u3092\u8868\u3059\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n# \u5ea7\u5e2d\u306e\u4eba\u6570\u3092\u8868\u3059\uff080\u306f\u7a7a\u5e2d\u30011\u306f1\u4eba\u304c\u5ea7\u3063\u3066\u3044\u308b\uff09\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # \u30ea\u30b9\u30c8\u306f0\u304b\u3089\u59cb\u307e\u308b\u306e\u3067-1\u3057\u3066\u304a\u304f\n        seats[j] = 1\n\nprint(sum(seats))\n"
    }
  ],
  "created": 1649729194,
  "object": "edit"
}
2022-04-11 22:06:35.926984 fix syntax errors 2 ['\n# 解答\n# N: グループ数\n# l_i: i番目のグループの座席の左端（1から始まる）\n# r_i: i番目のグループの座席の右端（1から始まる）\n\nN = int(input())\n\n# 座席を表すリストを作成\n# 座席の人数を表す（0は空席、1は1人が座っている）\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # リストは0から始まるので-1しておく\n        seats[j] = 1\n\nprint(sum(seats))\n', '\n# 解答\n# N: グループ数\n# l_i: i番目のグループの座席の左端（1から始まる）\n# r_i: i番目のグループの座席の右端（1から始まる）\n\nN = int(input())\n\n# 座席を表すリストを作成\n# 座席の人数を表す（0は空席、1は1人が座っている）\nseats = [0] * 100000\n\nfor i in range(N):\n    l_i, r_i = map(int, input().split())\n    for j in range(l_i - 1, r_i):  # リストは0から始まるので-1しておく\n        seats[j] = 1\n\nprint(sum(seats))\n']
2022-04-11 22:06:35.927216 size on output set 2
2022-04-11 22:06:35.927243 num operations 2
2022-04-11 22:06:35.927252 size on input set 1
2022-04-11 22:06:37.978266 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Solved by myself.\n\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\n# Solved by myself \n\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n"
    }
  ],
  "created": 1649729196,
  "object": "edit"
}
2022-04-11 22:06:37.978561 fix spelling mistakes 2 ['\n\n# Solved by myself.\n\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n', '\n\n# Solved by myself \n\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n']
2022-04-11 22:06:37.978613 size on output set 2
2022-04-11 22:06:37.978622 size on input set 2
2022-04-11 22:06:40.450081 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Solved by myself.\n\nN = int(input())\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\nseat_list.sort(key=lambda x: x[0])\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\n# Solved by myself\n\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n"
    }
  ],
  "created": 1649729198,
  "object": "edit"
}
2022-04-11 22:06:40.450351 fix syntax errors 2 ['\n# Solved by myself.\n\nN = int(input())\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\nseat_list.sort(key=lambda x: x[0])\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n', '\n\n# Solved by myself\n\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n']
2022-04-11 22:06:43.741758 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Solved by myself \nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n#\n# Solved by myself \n\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n"
    }
  ],
  "created": 1649729200,
  "object": "edit"
}
2022-04-11 22:06:43.742165 fix syntax errors 2 ['\n# Solved by myself \nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n', '\n#\n# Solved by myself \n\nN = int(input())\n\nseat_list = []\n\nfor i in range(N):\n    seat_list.append(list(map(int, input().split())))\n\nseat_list.sort(key=lambda x: x[0])\n\ncount = 0\n\nfor i in range(N):\n    if i == 0:\n        count += seat_list[i][1] - seat_list[i][0] + 1\n    else:\n        if seat_list[i][0] <= seat_list[i-1][1]:\n            if seat_list[i][1] > seat_list[i-1][1]:\n                count += seat_list[i][1] - seat_list[i-1][1]\n        else:\n            count += seat_list[i][1] - seat_list[i][0] + 1\n\nprint(count)\n']
2022-04-11 22:06:43.742421 size on output set 4
2022-04-11 22:06:43.742454 num operations 2
2022-04-11 22:06:43.742465 size on input set 1
2022-04-11 22:06:45.787533 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        S[j] = 1\nprint(sum(S))\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        S[j] = 1\nprint(sum(S))\n"
    }
  ],
  "created": 1649729204,
  "object": "edit"
}
2022-04-11 22:06:45.787815 fix spelling mistakes 2 ['\nN = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        S[j] = 1\nprint(sum(S))\n', '\nN = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        S[j] = 1\nprint(sum(S))\n']
2022-04-11 22:06:45.787837 size on output set 1
2022-04-11 22:06:45.787844 size on input set 1
2022-04-11 22:06:48.187152 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "N = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        S[j] = 1\nprint(sum(S))\n"
    },
    {
      "index": 1,
      "text": "N = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        S[j] = 1\nprint(sum(S))\n"
    }
  ],
  "created": 1649729206,
  "object": "edit"
}
2022-04-11 22:06:48.187437 fix syntax errors 2 ['N = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        S[j] = 1\nprint(sum(S))\n', 'N = int(input())\nS = [0] * 100001\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        S[j] = 1\nprint(sum(S))\n']
2022-04-11 22:06:48.187464 size on output set 2
2022-04-11 22:06:48.187506 num operations 2
2022-04-11 22:06:48.187513 size on input set 1
2022-04-11 22:06:50.115575 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\n\ns = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    s += r - l + 1\n\nprint(s)\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\n\ns = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    s += r - l + 1\n\nprint(s)\n"
    }
  ],
  "created": 1649729208,
  "object": "edit"
}
2022-04-11 22:06:50.115891 fix spelling mistakes 2 ['\nN = int(input())\n\ns = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    s += r - l + 1\n\nprint(s)\n', '\nN = int(input())\n\ns = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    s += r - l + 1\n\nprint(s)\n']
2022-04-11 22:06:50.115909 size on output set 1
2022-04-11 22:06:50.115914 size on input set 1
2022-04-11 22:06:52.129373 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "N = int(input())\n\ns = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    s += r - l + 1\n\nprint(s)\n"
    },
    {
      "index": 1,
      "text": "N = int(input())\ns = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    s += r - l + 1\n\nprint(s)\n"
    }
  ],
  "created": 1649729210,
  "object": "edit"
}
2022-04-11 22:06:52.129680 fix syntax errors 2 ['N = int(input())\n\ns = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    s += r - l + 1\n\nprint(s)\n', 'N = int(input())\ns = 0\nfor i in range(N):\n    l, r = map(int, input().split())\n    s += r - l + 1\n\nprint(s)\n']
2022-04-11 22:06:52.129710 size on output set 2
2022-04-11 22:06:52.129728 num operations 2
2022-04-11 22:06:52.129735 size on input set 1
2022-04-11 22:07:08.518386 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\ncount = 0\nseats = [0 for i in range(100000)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        seats[j-1] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "# \u554f\u984c\u6587\n# \u9ad8\u6a4b\u541b\u306f\u3001N\u4eba\u306e\u4eba\u304c\u5ea7\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u5e2d\u304c\u3042\u308a\u307e\u3059\u3002\n# \u5e2d\u306f1\u304b\u3089N\u307e\u3067\u756a\u53f7\u304c\u3064\u3044\u3066\u3044\u307e\u3059\u3002\n# i(1\u2266i\u2266N)\u756a\u76ee\u306e\u4eba\u306f\u3001\u5e2d\u304c\u7a7a\u3044\u3066\u3044\u308b\u3046\u3061\u3067\u3001\u81ea\u5206\u306e\u5e2d\u304b\u3089\u6700\u3082\u8fd1\u3044\u5e2d\u3092\u9078\u3073\u307e\u3059\u3002\n# \u3053\u306e\u3068\u304d\u3001\u5e2d\u304c\u8907\u6570\u3042\u308b\u5834\u5408\u306f\u3001\u305d\u306e\u3046\u3061\u3067\u5e2d\u756a\u53f7\u304c\u6700\u3082\u5c0f\u3055\u3044\u5e2d\u3092\u9078\u3073\u307e\u3059\u3002\n# \u4f8b\u3048\u3070\u3001\u5e2d\u304c\u7a7a\u3044\u3066\u3044\u308b\u306e\u306f\u3001\u5e2d\u756a\u53f7\u304c3\u30015\u30017\u30019\u300111\u306e5\u3064\u306e\u5e2d\u3067\u3042\u308c\u3070\u3001\u5e2d\u756a\u53f7\u304c3\u306e\u3082\u306e\u3092\u9078\u3073\u307e\u3059\u3002\n# \u3053\u306e\u3068\u304d\u3001\u5e2d\u756a\u53f7\u304c3\u306e\u3082\u306e\u304c\u9078\u3070\u308c\u305f\u306e\u3067\u3001\u5e2d\u756a\u53f7\u304c4\u306e\u3082\u306e\u306f\u5e2d\u304c\u7a7a\u3044\u3066\u3044\u306a\u3044\u3068\u307f\u306a\u3057\u307e\u3059\u3002\n# \u3053\u306e\u3088\u3046\u306b\u3001\u4eba\u304c\u9078\u3093\u3060\u5e2d\u3092\u4f7f\u3063\u305f\u5f8c\u306f\u3001\u305d\u306e\u5e2d\u304b\u30891\u3064\u53f3\u306b\u3042\u308b\u5e2d\u3082\u4f7f\u3063\u305f\u3082\u306e\u3068\u307f\u306a\u3057\u307e\u3059\u3002\n# \u3053\u306e\u3088\u3046\u306b\u3057\u3066\u3001N\u4eba\u304c\u5e2d\u3092\u9078\u3076\u3068\u304d\u3001\u5e2d\u304c\u7a7a\u3044\u3066\u3044\u308b\u3082\u306e\u306f\u4f55\u5e2d\u3067\u3057\u3087\u3046\u304b\u3002\n#\n# \u5236\u7d04\n# 1\u2266N\u2266100000\n# 1\u2266Li\u2266Ri\u2266N\n# Li\u2260Ri\n# \u5165\u529b\u306f\u3059\u3079\u3066\u6574\u6570\u3067\u3042\u308b\u3002\n# \u5165\u529b\n# \u5165\u529b\u306f\u4ee5\u4e0b\u306e\u5f62\u5f0f\u3067\u6a19\u6e96\u5165\u529b\u304b\u3089\u4e0e\u3048\u3089\u308c\u308b\u3002\n#\n# N\n# L1 R1\n# L2 R2\n# :\n# LN RN\n# 1\u884c\u76ee\u306b\u306f\u3001\u5e2d\u306e\u6570\u3092\u8868\u3059\u6574\u6570N\u304c\u4e0e\u3048\u3089\u308c\u308b\u3002\n# \u7d9a\u304fN\u884c\u306b\u306f\u3001\u305d\u308c\u305e\u308c\u306e\u4eba\u304c\u5e2d\u3092\u9078\u3076\u7bc4\u56f2\u3092\u8868\u3059\u6574\u6570Li,Ri\u304c\u7a7a\u767d\u533a\u5207\u308a\u3067\u4e0e\u3048\u3089\u308c\u308b\u3002\n# \u51fa\u529b\n# \u5e2d\u304c\u7a7a\u3044\u3066\u3044\u308b\u3082\u306e\u306f\u4f55\u5e2d\u3067\u3057\u3087\u3046\u304b\u3002\n#\n# \u5165\u529b\u4f8b1\n# 4\n# 1 3\n# 2 4\n# 3 4\n# 1 2\n# \u51fa\u529b\u4f8b1\n# 2\n# \u5165\u529b\u4f8b2\n# 5\n# 1 3\n# 2 4\n# 3 4\n# 1 2\n# 2 3\n# \u51fa\u529b\u4f8b2\n# 3\n# \u5165\u529b\u4f8b3\n# 3\n# 1 3\n# 2 3\n# 1 2\n# \u51fa\u529b\u4f8b3\n# 1\n\nN = int(input())\ncount = 0\nseats = [0 for i in range(100000)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        seats[j-1] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n"
    }
  ],
  "created": 1649729212,
  "object": "edit"
}
2022-04-11 22:07:08.518883 fix spelling mistakes 2 ['\nN = int(input())\ncount = 0\nseats = [0 for i in range(100000)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        seats[j-1] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n', '# 問題文\n# 高橋君は、N人の人が座ることができる席があります。\n# 席は1からNまで番号がついています。\n# i(1≦i≦N)番目の人は、席が空いているうちで、自分の席から最も近い席を選びます。\n# このとき、席が複数ある場合は、そのうちで席番号が最も小さい席を選びます。\n# 例えば、席が空いているのは、席番号が3、5、7、9、11の5つの席であれば、席番号が3のものを選びます。\n# このとき、席番号が3のものが選ばれたので、席番号が4のものは席が空いていないとみなします。\n# このように、人が選んだ席を使った後は、その席から1つ右にある席も使ったものとみなします。\n# このようにして、N人が席を選ぶとき、席が空いているものは何席でしょうか。\n#\n# 制約\n# 1≦N≦100000\n# 1≦Li≦Ri≦N\n# Li≠Ri\n# 入力はすべて整数である。\n# 入力\n# 入力は以下の形式で標準入力から与えられる。\n#\n# N\n# L1 R1\n# L2 R2\n# :\n# LN RN\n# 1行目には、席の数を表す整数Nが与えられる。\n# 続くN行には、それぞれの人が席を選ぶ範囲を表す整数Li,Riが空白区切りで与えられる。\n# 出力\n# 席が空いているものは何席でしょうか。\n#\n# 入力例1\n# 4\n# 1 3\n# 2 4\n# 3 4\n# 1 2\n# 出力例1\n# 2\n# 入力例2\n# 5\n# 1 3\n# 2 4\n# 3 4\n# 1 2\n# 2 3\n# 出力例2\n# 3\n# 入力例3\n# 3\n# 1 3\n# 2 3\n# 1 2\n# 出力例3\n# 1\n\nN = int(input())\ncount = 0\nseats = [0 for i in range(100000)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        seats[j-1] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n']
2022-04-11 22:07:08.518985 size on output set 2
2022-04-11 22:07:08.518996 size on input set 2
2022-04-11 22:07:10.639533 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "N = int(input())\ncount = 0\nseats = [0 for i in range(100000)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        seats[j-1] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "N = int(input())\ncount = 0\nseats = [0 for i in range(100000)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        seats[j-1] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n"
    }
  ],
  "created": 1649729228,
  "object": "edit"
}
2022-04-11 22:07:10.639978 fix syntax errors 2 ['N = int(input())\ncount = 0\nseats = [0 for i in range(100000)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        seats[j-1] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n', 'N = int(input())\ncount = 0\nseats = [0 for i in range(100000)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        seats[j-1] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n']
2022-04-11 22:07:34.911556 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# \u554f\u984c\u6587\n# N\u4eba\u306e\u4eba\u304c\u5ea7\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u5e2d\u304c\u3042\u308a\u307e\u3059\u3002\n# \u5e2d\u306f1\u304b\u3089N\u307e\u3067\u756a\u53f7\u304c\u3064\u3044\u3066\u3044\u307e\u3059\u3002\n# i(1\u2266i\u2266N)\u756a\u76ee\u306e\u4eba\u306f\u3001\u5e2d\u304c\u7a7a\u3044\u3066\u3044\u308b\u3046\u3061\u3067\u3001\u81ea\u5206\u306e\u5e2d\u304b\u3089\u6700\u3082\u8fd1\u3044\u5e2d\u3092\u9078\u3073\u307e\u3059\u3002(i\u756a\u76ee\u306e\u4eba\u306f\u3001\u5e2d\u304c\u7a7a\u3044\u3066\u3044\u308b\u3046\u3061\u3067\u3001\u81ea\u5206\u306e\u5e2d\u304b\u3089\u6700\u3082\u8fd1\u3044\u5e2d\u3092\u9078\u3073\u307e\u3059\u3002)\n# \u3053\u306e\u3068\u304d\u3001\u5e2d\u304c\u8907\u6570\u3042\u308b\u5834\u5408\u306f\u3001\u305d\u306e\u3046\u3061\u3067\u5e2d\u756a\u53f7\u304c\u6700\u3082\u5c0f\u3055\u3044\u5e2d\u3092\u9078\u3073\u307e\u3059\u3002\n# \u4f8b\u3048\u3070\u3001\u5e2d\u304c\u7a7a\u3044\u3066\u3044\u308b\u306e\u306f\u3001\u5e2d\u756a\u53f7\u304c3\u30015\u30017\u30019\u300111\u306e5\u3064\u306e\u5e2d\u3067\u3042\u308c\u3070\u3001\u5e2d\u756a\u53f7\u304c3\u306e\u3082\u306e\u3092\u9078\u3073\u307e\u3059\u3002\n# \u3053\u306e\u3068\u304d\u3001\u5e2d\u756a\u53f7\u304c3\u306e\u3082\u306e\u304c\u9078\u3070\u308c\u305f\u306e\u3067\u3001\u5e2d\u756a\u53f7\u304c4\u306e\u3082\u306e\u306f\u5e2d\u304c\u7a7a\u3044\u3066\u3044\u306a\u3044\u3068\u307f\u306a\u3057\u307e\u3059\u3002\n# \u3053\u306e\u3088\u3046\u306b\u3001\u4eba\u304c\u9078\u3093\u3060\u5e2d\u3092\u4f7f\u3063\u305f\u5f8c\u306f\u3001\u305d\u306e\u5e2d\u304b\u30891\u3064\u53f3\u306b\u3042\u308b\u5e2d\u3082\u4f7f\u3063\u305f\u3082\u306e\u3068\u307f\u306a\u3057\u307e\u3059\u3002\n# \u3053\u306e\u3088\u3046\u306b\u3057\u3066\u3001N\u4eba\u304c\u5e2d\u3092\u9078\u3076\u3068\u304d\u3001\u5e2d\u304c\u7a7a\u3044\u3066\u3044\u308b\u3082\u306e\u306f\u4f55\u5e2d\u3067\u3057\u3087\u3046\u304b\u3002\n#\n# \u5236\u7d04\n# 1\u2266N\u2266100000\n# 1\u2266Li\u2266Ri\u2266N\n# Li\u2260Ri\n# \u5165\u529b\u306f\u3059\u3079\u3066\u6574\u6570\u3067\u3042\u308b\u3002\n# \u5165\u529b\n# \u5165\u529b\u306f\u4ee5\u4e0b\u306e\u5f62\u5f0f\u3067\u6a19\u6e96\u5165\u529b\u304b\u3089\u4e0e\u3048\u3089\u308c\u308b\u3002\n#\n# N\n# L1 R1\n# L2 R2\n# :\n# LN RN\n# 1\u884c\u76ee\u306b\u306f\u3001\u5e2d\u306e\u6570\u3092\u8868\u3059\u6574\u6570N\u304c\u4e0e\u3048\u3089\u308c\u308b\u3002\n# \u7d9a\u304fN\u884c\u306b\u306f\u3001\u305d\u308c\u305e\u308c\u306e\u4eba\u304c\u5e2d\u3092\u9078\u3076\u7bc4\u56f2\u3092\u8868\u3059\u6574\u6570Li,Ri\u304c\u7a7a\u767d\u533a\u5207\u308a\u3067\u4e0e\u3048\u3089\u308c\u308b\u3002\n# \u51fa\u529b\n# \u5e2d\u304c\u7a7a\u3044\u3066\u3044\u308b\u3082\u306e\u306f\u4f55\u5e2d\u3067\u3057\u3087\u3046\u304b\u3002(\u5e2d\u304c\u7a7a\u3044\u3066\u3044\u308b\u3082\u306e\u306f\u4f55\u5e2d\u3067\u3057\u3087\u3046\u304b\u3002)\n#\n# \u5165\u529b\u4f8b1\n# 4\n# 1 3\n# 2 4\n# 3 4\n# 1 2\n# \u51fa\u529b\u4f8b1\n# 2\n# \u5165\u529b\u4f8b2\n# 5\n# 1 3\n# 2 4\n# 3 4\n# 1 2\n# 2 3\n# \u51fa\u529b\u4f8b2\n# 3\n# \u5165\u529b\u4f8b3\n# 3\n# 1 3\n# 2 3\n# 1 2\n# \u51fa\u529b\u4f8b3\n# 1\n\nN = int(input())\ncount = 0\nseats = [0 for i in range(100000)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        seats[j-1] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "import sys\ninput = sys.stdin.readline\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    print(A)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649729230,
  "object": "edit"
}
2022-04-11 22:07:34.911981 fix syntax errors 2 ['# 問題文\n# N人の人が座ることができる席があります。\n# 席は1からNまで番号がついています。\n# i(1≦i≦N)番目の人は、席が空いているうちで、自分の席から最も近い席を選びます。(i番目の人は、席が空いているうちで、自分の席から最も近い席を選びます。)\n# このとき、席が複数ある場合は、そのうちで席番号が最も小さい席を選びます。\n# 例えば、席が空いているのは、席番号が3、5、7、9、11の5つの席であれば、席番号が3のものを選びます。\n# このとき、席番号が3のものが選ばれたので、席番号が4のものは席が空いていないとみなします。\n# このように、人が選んだ席を使った後は、その席から1つ右にある席も使ったものとみなします。\n# このようにして、N人が席を選ぶとき、席が空いているものは何席でしょうか。\n#\n# 制約\n# 1≦N≦100000\n# 1≦Li≦Ri≦N\n# Li≠Ri\n# 入力はすべて整数である。\n# 入力\n# 入力は以下の形式で標準入力から与えられる。\n#\n# N\n# L1 R1\n# L2 R2\n# :\n# LN RN\n# 1行目には、席の数を表す整数Nが与えられる。\n# 続くN行には、それぞれの人が席を選ぶ範囲を表す整数Li,Riが空白区切りで与えられる。\n# 出力\n# 席が空いているものは何席でしょうか。(席が空いているものは何席でしょうか。)\n#\n# 入力例1\n# 4\n# 1 3\n# 2 4\n# 3 4\n# 1 2\n# 出力例1\n# 2\n# 入力例2\n# 5\n# 1 3\n# 2 4\n# 3 4\n# 1 2\n# 2 3\n# 出力例2\n# 3\n# 入力例3\n# 3\n# 1 3\n# 2 3\n# 1 2\n# 出力例3\n# 1\n\nN = int(input())\ncount = 0\nseats = [0 for i in range(100000)]\nfor i in range(N):\n    l, r = map(int, input().split())\n    for j in range(l, r+1):\n        seats[j-1] += 1\nfor i in range(len(seats)):\n    if seats[i] > 0:\n        count += 1\nprint(count)\n', "import sys\ninput = sys.stdin.readline\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    print(A)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 22:07:34.912055 size on output set 3
2022-04-11 22:07:34.912089 num operations 2
2022-04-11 22:07:34.912098 size on input set 1
2022-04-11 22:07:36.924819 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j - 1] = 1\nprint(sum(seats))\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j - 1] = 1\nprint(sum(seats))\n"
    }
  ],
  "created": 1649729255,
  "object": "edit"
}
2022-04-11 22:07:36.925070 fix spelling mistakes 2 ['\nn = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j - 1] = 1\nprint(sum(seats))\n', '\nn = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j - 1] = 1\nprint(sum(seats))\n']
2022-04-11 22:07:36.925092 size on output set 1
2022-04-11 22:07:36.925097 size on input set 1
2022-04-11 22:07:38.907571 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j - 1] = 1\nprint(sum(seats))\n"
    },
    {
      "index": 1,
      "text": "n = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j - 1] = 1\nprint(sum(seats))\n"
    }
  ],
  "created": 1649729257,
  "object": "edit"
}
2022-04-11 22:07:38.907894 fix syntax errors 2 ['n = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j - 1] = 1\nprint(sum(seats))\n', 'n = int(input())\nseats = [0] * 100000\nfor i in range(n):\n    l, r = map(int, input().split())\n    for j in range(l, r + 1):\n        seats[j - 1] = 1\nprint(sum(seats))\n']
2022-04-11 22:07:38.907924 size on output set 1
2022-04-11 22:07:38.907936 num operations 2
2022-04-11 22:07:38.907941 size on input set 1
2022-04-11 22:07:41.555543 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# N = Number of groups of audiences\n# l = Leftmost seat\n# r = Rightmost seat\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r+1):\n        s.add(i)\n\nprint(len(s))\n"
    },
    {
      "index": 1,
      "text": "\n\n# N = Number of groups of audiences\n# l = Leftmost seat\n# r = Rightmost seat\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r+1):\n        s.add(i)\n\nprint(len(s))\n"
    }
  ],
  "created": 1649729259,
  "object": "edit"
}
2022-04-11 22:07:41.555808 fix spelling mistakes 2 ['\n\n# N = Number of groups of audiences\n# l = Leftmost seat\n# r = Rightmost seat\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r+1):\n        s.add(i)\n\nprint(len(s))\n', '\n\n# N = Number of groups of audiences\n# l = Leftmost seat\n# r = Rightmost seat\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r+1):\n        s.add(i)\n\nprint(len(s))\n']
2022-04-11 22:07:41.555843 size on output set 1
2022-04-11 22:07:41.555855 size on input set 1
2022-04-11 22:07:44.827548 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# N = Number of groups of audiences\n# l = Leftmost seat\n# r = Rightmost seat\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r+1):\n        s.add(i)\n\nprint(len(s))\n"
    },
    {
      "index": 1,
      "text": "\n\n# N = Number of groups of audiences, l = Leftmost seat, r = Rightmost seat\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r + 1):\n        s.add(i)\n\nprint(len(s))\n"
    }
  ],
  "created": 1649729262,
  "object": "edit"
}
2022-04-11 22:07:44.827955 fix syntax errors 2 ['\n# N = Number of groups of audiences\n# l = Leftmost seat\n# r = Rightmost seat\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r+1):\n        s.add(i)\n\nprint(len(s))\n', '\n\n# N = Number of groups of audiences, l = Leftmost seat, r = Rightmost seat\nN = int(input())\naudience = [list(map(int, input().split())) for _ in range(N)]\n\ns = set()\nfor l, r in audience:\n    for i in range(l, r + 1):\n        s.add(i)\n\nprint(len(s))\n']
2022-04-11 22:07:44.828017 size on output set 2
2022-04-11 22:07:44.828036 num operations 2
2022-04-11 22:07:44.828041 size on input set 1
2022-04-11 22:07:46.907066 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\nseats = [0] * 100001\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r+1):\n        seats[i] += 1\n\nprint(sum(seats))\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\nseats = [0] * 100001\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r+1):\n        seats[i] += 1\n\nprint(sum(seats))\n"
    }
  ],
  "created": 1649729265,
  "object": "edit"
}
2022-04-11 22:07:46.907592 fix spelling mistakes 2 ['\nN = int(input())\nseats = [0] * 100001\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r+1):\n        seats[i] += 1\n\nprint(sum(seats))\n', '\nN = int(input())\nseats = [0] * 100001\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r+1):\n        seats[i] += 1\n\nprint(sum(seats))\n']
2022-04-11 22:07:46.907633 size on output set 1
2022-04-11 22:07:46.907641 size on input set 1
2022-04-11 22:07:51.286249 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\nseats = [0] * 100001 # seats[i] : i\ubc88 \uc88c\uc11d\uc758 \uc0ac\ub78c \uc218\n\nfor _ in range(N):\n    l, r = map(int, input().split()) # l\ubc88 \uc88c\uc11d\ubd80\ud130 r\ubc88 \uc88c\uc11d\uae4c\uc9c0 \uc0ac\ub78c\uc774 \uc549\uc74c\n    for i in range(l, r+1):\n        seats[i] += 1\n\nprint(sum(seats))\n"
    },
    {
      "index": 1,
      "text": "N = int(input())\nseats = [0] * 100001\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r + 1):\n        seats[i] += 1\n\nprint(sum(seats))\n"
    }
  ],
  "created": 1649729267,
  "object": "edit"
}
2022-04-11 22:07:51.286495 fix syntax errors 2 ['\nN = int(input())\nseats = [0] * 100001 # seats[i] : i번 좌석의 사람 수\n\nfor _ in range(N):\n    l, r = map(int, input().split()) # l번 좌석부터 r번 좌석까지 사람이 앉음\n    for i in range(l, r+1):\n        seats[i] += 1\n\nprint(sum(seats))\n', 'N = int(input())\nseats = [0] * 100001\n\nfor _ in range(N):\n    l, r = map(int, input().split())\n    for i in range(l, r + 1):\n        seats[i] += 1\n\nprint(sum(seats))\n']
2022-04-11 22:07:51.286539 size on output set 2
