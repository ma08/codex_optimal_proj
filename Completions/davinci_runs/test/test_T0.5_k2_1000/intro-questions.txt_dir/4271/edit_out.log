2022-04-11 19:05:04.961860 num operations 2
2022-04-11 19:05:04.961878 size on input set 1
2022-04-11 19:05:07.238919 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n"
    }
  ],
  "created": 1649718305,
  "object": "edit"
}
2022-04-11 19:05:07.239291 fix spelling mistakes 2 ['\n\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\nprint(ans)\n', '\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n']
2022-04-11 19:05:07.239334 size on output set 2
2022-04-11 19:05:07.239346 size on input set 2
2022-04-11 19:05:09.234115 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\nprint(ans)\n"
    }
  ],
  "created": 1649718307,
  "object": "edit"
}
2022-04-11 19:05:09.234339 fix syntax errors 2 ['\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\nprint(ans)\n', '\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\nprint(ans)\n']
2022-04-11 19:05:15.021268 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = list(map(int, input().split()))\na.sort()\nb.sort()\nc.sort()\nprint(a)\nprint(b)\nprint(c)\n"
    },
    {
      "index": 1,
      "text": "n = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n"
    }
  ],
  "created": 1649718309,
  "object": "edit"
}
2022-04-11 19:05:15.021628 fix syntax errors 2 ['import sys\ninput = sys.stdin.readline\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = list(map(int, input().split()))\na.sort()\nb.sort()\nc.sort()\nprint(a)\nprint(b)\nprint(c)\n', 'n = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n']
2022-04-11 19:05:15.021691 size on output set 3
2022-04-11 19:05:15.021710 num operations 2
2022-04-11 19:05:15.021719 size on input set 1
2022-04-11 19:05:19.235008 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:  # if previous dish is previous dish in the list\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    dish_index = dishes[i]\n    total_points += base_points[dish_index]\n    if i != 0 and dishes[i - 1] == dish_index - 1:\n        total_points += additional_points[dish_index - 1]\n\nprint(total_points)\n"
    }
  ],
  "created": 1649718315,
  "object": "edit"
}
2022-04-11 19:05:19.235236 fix spelling mistakes 2 ['\n\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:  # if previous dish is previous dish in the list\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n', '\n\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    dish_index = dishes[i]\n    total_points += base_points[dish_index]\n    if i != 0 and dishes[i - 1] == dish_index - 1:\n        total_points += additional_points[dish_index - 1]\n\nprint(total_points)\n']
2022-04-11 19:05:19.235282 size on output set 2
2022-04-11 19:05:19.235292 size on input set 2
2022-04-11 19:05:22.250375 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    dish_index = dishes[i]\n    total_points += base_points[dish_index]\n    if i != 0 and dishes[i - 1] == dish_index:\n        total_points += additional_points[dish_index]\n\nprint(total_points)\n"
    },
    {
      "index": 1,
      "text": "\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    dish_index = dishes[i]\n    total_points += base_points[dish_index]\n    if i != 0 and dishes[i - 1] == dish_index - 1:\n        total_points += additional_points[dish_index - 1]\n\nprint(total_points)\n"
    }
  ],
  "created": 1649718319,
  "object": "edit"
}
2022-04-11 19:05:22.250587 fix syntax errors 2 ['\n\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    dish_index = dishes[i]\n    total_points += base_points[dish_index]\n    if i != 0 and dishes[i - 1] == dish_index:\n        total_points += additional_points[dish_index]\n\nprint(total_points)\n', '\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    dish_index = dishes[i]\n    total_points += base_points[dish_index]\n    if i != 0 and dishes[i - 1] == dish_index - 1:\n        total_points += additional_points[dish_index - 1]\n\nprint(total_points)\n']
2022-04-11 19:05:27.079244 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish - 1]\n    if i != 0 and dishes[i - 1] == dish:  # if previous dish is previous dish in the list\n        total_points += additional_points[dish - 2]\n\nprint(total_points)\n"
    },
    {
      "index": 1,
      "text": "\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:  # if previous dish is previous dish in the list, add additional points\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n"
    }
  ],
  "created": 1649718322,
  "object": "edit"
}
2022-04-11 19:05:27.079522 fix syntax errors 2 ['\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish - 1]\n    if i != 0 and dishes[i - 1] == dish:  # if previous dish is previous dish in the list\n        total_points += additional_points[dish - 2]\n\nprint(total_points)\n', '\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:  # if previous dish is previous dish in the list, add additional points\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n']
2022-04-11 19:05:27.079548 size on output set 4
