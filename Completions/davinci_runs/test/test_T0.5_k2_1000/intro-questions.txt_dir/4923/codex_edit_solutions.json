["\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# Read input\nn = int(input())\na = list(map(int, input().split()))\n\n# Check if there are any unique numbers in the list.\nunique_numbers = set(a)\nif len(unique_numbers) == 1:\n    print(\"none\")\n\n# Check if there are any unique numbers in the list.\nelse:\n    # Find the highest unique number.\n    for i in range(6, 0, -1):\n        if i in unique_numbers:\n            highest_unique = i\n            break\n\n    # Find the index of the highest unique number.\n    for i in range(n):\n        if a[i] == highest_unique:\n            print(i + 1)\n            break\n", "\n\ndef main():\n    n = int(input())\n    rolls = list(map(int, input().split()))\n    max_rolls = max(rolls)\n    if rolls.count(max_rolls) == 1:\n        print(rolls.index(max_rolls) + 1)\n    else:\n        print(\"none\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# Read input\nn = int(input())\na = list(map(int, input().split()))\n\n# Check if there are any unique numbers in the list\nunique_numbers = set(a)\nif len(unique_numbers) == 1:\n    print(\"none\")\n\n# If there are any unique numbers in the list\nelse:\n    # Find the highest unique number\n    for i in range(6, 0, -1):\n        if i in unique_numbers:\n            highest_unique = i\n            break\n\n    # Find the index of the highest unique number\n    for i in range(n):\n        if a[i] == highest_unique:\n            print(i + 1)\n            break\n", "\nn = int(input())\na = list(map(int, input().split()))\n\nc = [0] * 7\nfor i in range(n):\n    c[a[i]] += 1\n    if c[a[i]] > 1:\n        c[a[i]] = -1\n\nm = max(c)\nif m == 0:\n    print('None')\nelse:\n    print(c.index(m))\n", "\n# 1st attempt \nn = int(input())\ns = input().split()\nd = {}\nfor i in range(len(s)):\n    if s[i] in d:\n        d[s[i]].append(i+1)\n    else:\n        d[s[i]] = [i+1]\nm = max(d.keys())\nif len(d[m]) == 1:\n    print(d[m][0])\nelse:\n    print(\"none\")\n\n# 2nd attempt\nn = int(input())\ns = input().split()\nd = {}\nfor i in range(len(s)):\n    if s[i] in d:\n        d[s[i]].append(i+1)\n    else:\n        d[s[i]] = [i+1]\nm = max(d.keys())\nif len(d[m]) == 1:\n    print(d[m][0])\nelse:\n    print(\"none\")\n", "\n# 1st attempt\nn = int(input())\ns = input().split()\nd = {}\nfor i in range(len(s)):\n    if s[i] in d:\n        d[s[i]].append(i+1)\n    else:\n        d[s[i]] = [i+1]\nm = max(d.values())\nif len(d[s[m-1]]) == 1:\n    print(d[s[m-1]][0])\nelse:\n    print(\"none\")\n\n# 2nd attempt\nn = int(input())\ns = input().split()\nd = {}\nfor i in range(len(s)):\n    if s[i] in d:\n        d[s[i]].append(i+1)\n    else:\n        d[s[i]] = [i+1]\nm = max(d.values())\nif len(d[s[m-1]]) == 1:\n    print(d[s[m-1]][0])\nelse:\n    print(\"none\")\n", "\n# Get the input\nn = int(input())\na = list(map(int, input().split()))[:n]\n\n# Sort the list\na.sort()\n\n# Check if the list has a unique maximum element\nif a[-1] != a[-2]:\n    # Find the index of the unique maximum element\n    for i in range(n):\n        if a[i] == a[-1]:\n            print(i + 1)\n            break\nelse:\n    print(\"none\")\n", "\nfrom collections import Counter\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n", "from collections import Counter\n\ndef main():\n    n = int(input())\n    nums = list(map(int, input().split()))\n    counts = Counter(nums)\n    max_num = max(counts)\n    if counts[max_num] == 1:\n        print(nums.index(max_num) + 1)\n    print(\"none\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n#1st attempt\nn = int(input())\ns = input().split()\nd = {}\nfor i in range(len(s)):\n    if s[i] in d:\n        d[s[i]].append(i+1)\n    else:\n        d[s[i]] = [i+1]\nm = max(d.keys())\nif len(d[m]) == 1:\n    print(d[m][0])\nelse:\n    print(\"none\")\n\n#2nd attempt\nn = int(input())\ns = input().split()\nd = {}\nfor i in range(len(s)):\n    if s[i] in d:\n        d[s[i]].append(i+1)\n    else:\n        d[s[i]] = [i+1]\nm = max(d.keys())\nif len(d[m]) == 1:\n    print(d[m][0])\nelse:\n    print(\"none\")\n", "\n# Get input\nn = int(input())\na = list(map(int, input().split()))\n\n# Sort the list\na.sort()\n\n# Check if the list has a unique maximum element\nif a[-1] != a[-2]: \n    # Find the index of the unique maximum element\n    for i in range(len(a)):\n        if a[i] == a[-1]:\n            print(i + 1)\n            break\nelse:\n    print(\"none\")\n", "\n# Get the input\nn = int(input())\na = list(map(int, input().split()))\n\n# Sort the list\na.sort()\n\n# Check if the list has a unique maximum element\nif a[-1] != a[-2]:\n    # Find the index of the unique maximum element\n    for i in range(len(a)):\n        if a[i] == a[-1]:\n            print(i + 1)\n            break\nelse:\n    print(\"none\")\n", "\n# Read input\nn = int(input())\na = list(map(int, input().split()))\n\n# Check if there are any unique number\nunique_numbers = set(a)\nif len(unique_numbers) == 1:\n    print(\"none\")\n\n# Check if there are any unique number\nelse:\n    # Find the highest unique number\n    for i in range(6, 0, -1):\n        if i in unique_numbers:\n            highest_unique = i\n            break\n\n    # Find the index of the highest unique number\n    for i in range(n):\n        if a[i] == highest_unique:\n            print(i + 1)\n            break\n", "n = int(input())  # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435\na = list(map(int, input().split()))  # \u043c\u0430\u0441\u0441\u0438\u0432\nprint(a)\n", "\n# 1st attempt\nn = int(input())\ns = input().split()\nd = {}\nfor i in range(len(s)):\n    if s[i] in d:\n        d[s[i]].append(i+1)\n    else:\n        d[s[i]] = [i+1]\nm = max(d, key=lambda k: len(d[k]))\nif len(d[m]) == 1:\n    print(d[m][0])\nelse:\n    print(\"none\")\n\n# 2nd attempt\nn = int(input())\ns = input().split()\nd = {}\nfor i in range(len(s)):\n    if s[i] in d:\n        d[s[i]].append(i+1)\n    else:\n        d[s[i]] = [i+1]\nm = max(d, key=lambda k: len(d[k]))\nif len(d[m]) == 1:\n    print(d[m][0])\nelse:\n    print(\"none\")\n", "\n# Get input\nn = int(input())\na = list(map(int, input().split()))\n\n# Sort the list\na.sort()\n\n# Find the index of the unique maximum element\nfor i in range(len(a)):\n    if a[i] == a[-1]:\n        print(i + 1)\n        break\n", "\n\n# Read input\nn = int(input())\na = list(map(int, input().split()))\n\n# Check if there are any unique numbers\nunique_numbers = set(a)\nif len(unique_numbers) == 1:\n    print(\"none\")\n\n# Check if there are any unique numbers\nelse:\n    # Find the highest unique number\n    for i in range(6, 0, -1):\n        if i in unique_numbers:\n            highest_unique = i\n            break\n\n    # Find the index of the highest unique number\n    for i in range(n):\n        if a[i] == highest_unique:\n            print(i + 1)\n            break\n", "n = int(input())\nrolls = [int(x) for x in input().split()]\n\nhighest = 0\nwinner = None\nfor index, roll in enumerate(rolls):\n    if roll > highest:\n        if rolls.count(roll) == 1:\n            highest = roll\n            winner = index\n\nif winner is None:\n    print(\"None\")\nelse:\n    print(winner+1)\n", "n = int(input())\nrolls = [int(x) for x in input().split()]\n\nhighest = 0\nwinner = None\nfor index, roll in enumerate(rolls):\n    if roll > highest:\n        if rolls.count(roll) == 1:\n            highest = roll\n            winner = index\n\nif winner is None:\n    print(\"none\")\nelse:\n    print(winner + 1)\n"]