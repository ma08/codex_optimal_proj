2022-04-12 03:02:25.052645 num operations 2
2022-04-12 03:02:25.052676 size on input set 1
2022-04-12 03:02:27.138718 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n#\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n"
    },
    {
      "index": 1,
      "text": "\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n"
    }
  ],
  "created": 1649746945,
  "object": "edit"
}
2022-04-12 03:02:27.138846 fix spelling mistakes 2 ["\n#\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n", "\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n"]
2022-04-12 03:02:27.138872 size on output set 2
2022-04-12 03:02:27.138876 size on input set 2
2022-04-12 03:02:29.038820 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "words = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n"
    },
    {
      "index": 1,
      "text": "\n\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n"
    }
  ],
  "created": 1649746947,
  "object": "edit"
}
2022-04-12 03:02:29.039036 fix syntax errors 2 ["words = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n", "\n\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n"]
2022-04-12 03:02:31.766751 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word not in unique:\n        unique.append(word)\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n"
    },
    {
      "index": 1,
      "text": "\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end = ' ')\n    else:\n        print('.', end = ' ')\nprint()\n"
    }
  ],
  "created": 1649746949,
  "object": "edit"
}
2022-04-12 03:02:31.766872 fix syntax errors 2 ["\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word not in unique:\n        unique.append(word)\n        print(word, end=' ')\n    else:\n        print('.', end=' ')\nprint()\n", "\nwords = []\n\nwhile True:\n    try:\n        line = input()\n        words.extend(line.split())\n    except EOFError:\n        break\n\nunique = []\nfor word in words:\n    if word.lower() not in unique:\n        unique.append(word.lower())\n        print(word, end = ' ')\n    else:\n        print('.', end = ' ')\nprint()\n"]
2022-04-12 03:02:31.766886 size on output set 4
2022-04-12 03:02:31.766894 num operations 2
2022-04-12 03:02:31.766897 size on input set 1
2022-04-12 03:02:33.665438 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649746951,
  "object": "edit"
}
2022-04-12 03:02:33.665585 fix spelling mistakes 2 ['\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=\' \')\n            else:\n                print(\'.\', end=\' \')\n        print()\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=\' \')\n            else:\n                print(\'.\', end=\' \')\n        print()\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 03:02:33.665614 size on output set 2
2022-04-12 03:02:33.665621 size on input set 2
2022-04-12 03:02:36.321374 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=\" \")\n            else:\n                print(\".\", end=\" \")\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649746953,
  "object": "edit"
}
2022-04-12 03:02:36.321544 fix syntax errors 2 ['import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=" ")\n            else:\n                print(".", end=" ")\n        print()\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=\' \')\n            else:\n                print(\'.\', end=\' \')\n        print\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 03:02:39.250830 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word.lower(), end=' ')\n            else:\n                print('.', end=' ')\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end = ' ')\n            else:\n                print('.', end=' ')\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649746956,
  "object": "edit"
}
2022-04-12 03:02:39.251200 fix syntax errors 2 ['import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word.lower(), end=\' \')\n            else:\n                print(\'.\', end=\' \')\n        print()\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end = \' \')\n            else:\n                print(\'.\', end=\' \')\n        print()\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 03:02:39.251241 size on output set 4
2022-04-12 03:02:39.251264 num operations 2
2022-04-12 03:02:39.251275 size on input set 1
2022-04-12 03:02:41.318747 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n"
    }
  ],
  "created": 1649746959,
  "object": "edit"
}
2022-04-12 03:02:41.318970 fix spelling mistakes 2 ["\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n"]
2022-04-12 03:02:41.319008 size on output set 1
2022-04-12 03:02:41.319018 size on input set 1
2022-04-12 03:02:43.635677 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649746961,
  "object": "edit"
}
2022-04-12 03:02:43.635786 fix syntax errors 2 ["\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip()\n        for word in line.split():\n            if word.lower() not in words:\n                print(word, end=' ')\n                words.append(word.lower())\n            else:\n                print('.', end=' ')\n        print()\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 03:02:43.635800 size on output set 1
2022-04-12 03:02:43.635807 num operations 2
2022-04-12 03:02:43.635810 size on input set 1
2022-04-12 03:02:45.965958 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n#\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(' ')\n        # print(words)\n        words_seen = set()\n        result = ''\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + ' '\n                words_seen.add(word.lower())\n            else:\n                result += '. '\n        print(result[:-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(' ')\n        words_seen = set()\n        result = ''\n        for word in words:\n            if word.lower() not in words_seen:\n                result += word + ' '\n                words_seen.add(word.lower())\n            else:\n                result += '. '\n        print(result[:-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649746963,
  "object": "edit"
}
2022-04-12 03:02:45.966147 fix spelling mistakes 2 ['\n#\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(\' \')\n        # print(words)\n        words_seen = set()\n        result = \'\'\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + \' \'\n                words_seen.add(word.lower())\n            else:\n                result += \'. \'\n        print(result[:-1])\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(\' \')\n        words_seen = set()\n        result = \'\'\n        for word in words:\n            if word.lower() not in words_seen:\n                result += word + \' \'\n                words_seen.add(word.lower())\n            else:\n                result += \'. \'\n        print(result[:-1])\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 03:02:45.966280 size on output set 2
2022-04-12 03:02:45.966293 size on input set 2
2022-04-12 03:02:52.044699 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    words_seen = set()\n    result = ''\n    for line in sys.stdin:\n        words = line.split()\n        for word in words:\n            if word.lower() in words_seen:\n                result += '. '\n            else:\n                result += word + ' '\n                words_seen.add(word.lower())\n    print(result[:-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(' ')\n        words_seen = set()\n        result = ''\n        for word in words:\n            if word.lower() not in words_seen:\n                result += word + ' '\n                words_seen.add(word.lower())\n            else:\n                result += '. '\n        print(result[:-1]) # remove trailing space\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649746966,
  "object": "edit"
}
2022-04-12 03:02:52.044823 fix syntax errors 2 ['\nimport sys\n\ndef main():\n    words_seen = set()\n    result = \'\'\n    for line in sys.stdin:\n        words = line.split()\n        for word in words:\n            if word.lower() in words_seen:\n                result += \'. \'\n            else:\n                result += word + \' \'\n                words_seen.add(word.lower())\n    print(result[:-1])\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(\' \')\n        words_seen = set()\n        result = \'\'\n        for word in words:\n            if word.lower() not in words_seen:\n                result += word + \' \'\n                words_seen.add(word.lower())\n            else:\n                result += \'. \'\n        print(result[:-1]) # remove trailing space\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 03:02:54.864296 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(' ')\n        # print(words)\n        words_seen = set()\n        result = ''\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + ' '\n                words_seen.add(word.lower())\n            else:\n                result += '. '\n        print(result[:-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n#!/usr/bin/env python3\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(' ')\n        # print(words)\n        words_seen = set()\n        result = ''\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + ' '\n                words_seen.add(word.lower())\n            else:\n                result += '. '\n        print(result[:-1], end='')\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649746972,
  "object": "edit"
}
2022-04-12 03:02:54.864396 fix syntax errors 2 ['\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(\' \')\n        # print(words)\n        words_seen = set()\n        result = \'\'\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + \' \'\n                words_seen.add(word.lower())\n            else:\n                result += \'. \'\n        print(result[:-1])\n\nif __name__ == "__main__":\n    main()\n', '\n#!/usr/bin/env python3\nimport sys\n\ndef main():\n    lines = []\n    for line in sys.stdin:\n        lines.append(line)\n    for line in lines:\n        words = line.split(\' \')\n        # print(words)\n        words_seen = set()\n        result = \'\'\n        for word in words:\n            # print(word)\n            if word.lower() not in words_seen:\n                result += word + \' \'\n                words_seen.add(word.lower())\n            else:\n                result += \'. \'\n        print(result[:-1], end=\'\')\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 03:02:54.864411 size on output set 4
2022-04-12 03:02:54.864418 num operations 2
2022-04-12 03:02:54.864421 size on input set 1
2022-04-12 03:02:57.270584 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n        for word in line:\n            if word in words:\n                print(\".\", end=\" \")\n            else:\n                words.append(word)\n                print(word, end=\" \")\n        print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n            word = word.replace(\",\", \"\")\n            word = word.replace(\".\", \"\")\n        for word in line:\n            if word in words:\n                print(\".\", end=\" \")\n            else:\n                words.append(word)\n                print(word, end=\" \")\n        print()\n\nmain()\n"
    }
  ],
  "created": 1649746975,
  "object": "edit"
}
2022-04-12 03:02:57.270773 fix spelling mistakes 2 ['#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n        for word in line:\n            if word in words:\n                print(".", end=" ")\n            else:\n                words.append(word)\n                print(word, end=" ")\n        print()\n\nmain()\n', '\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n            word = word.replace(",", "")\n            word = word.replace(".", "")\n        for word in line:\n            if word in words:\n                print(".", end=" ")\n            else:\n                words.append(word)\n                print(word, end=" ")\n        print()\n\nmain()\n']
2022-04-12 03:02:57.270802 size on output set 2
2022-04-12 03:02:57.270812 size on input set 2
2022-04-12 03:03:00.122165 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n            word = word.replace(\",\", \"\").replace(\".\", \"\")\n        for word in line:\n            if word in words:\n                print(\".\", end=\" \")\n            else:\n                words.append(word)\n                print(word, end=\" \")\n        print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n            word = word.replace(\",\", \"\").replace(\".\", \"\")\n        for word in line:\n            if word in words:\n                print(\".\", end=\" \")\n            else:\n                words.append(word)\n                print(word, end=\" \")\n        print()\n\nmain()\n"
    }
  ],
  "created": 1649746977,
  "object": "edit"
}
2022-04-12 03:03:00.122445 fix syntax errors 2 ['\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n            word = word.replace(",", "").replace(".", "")\n        for word in line:\n            if word in words:\n                print(".", end=" ")\n            else:\n                words.append(word)\n                print(word, end=" ")\n        print()\n\nmain()\n', '\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().split()\n            word = word.replace(",", "").replace(".", "")\n        for word in line:\n            if word in words:\n                print(".", end=" ")\n            else:\n                words.append(word)\n                print(word, end=" ")\n        print()\n\nmain()\n']
2022-04-12 03:03:02.468093 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().strip().split()\n        for word in line:\n            if word in words:\n                print(\".\", end=\" \")\n            else:\n                words.append(word)\n                print(word, end=\" \")\n        print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().strip().split()\n        for word in line:\n            if word in words:\n                print(\".\", end=\" \")\n            else:\n                words.append(word)\n                print(word, end=\" \")\n        print()\n\nmain()\n"
    }
  ],
  "created": 1649746980,
  "object": "edit"
}
2022-04-12 03:03:02.468233 fix syntax errors 2 ['#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().strip().split()\n        for word in line:\n            if word in words:\n                print(".", end=" ")\n            else:\n                words.append(word)\n                print(word, end=" ")\n        print()\n\nmain()\n', '#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.lower().strip().split()\n        for word in line:\n            if word in words:\n                print(".", end=" ")\n            else:\n                words.append(word)\n                print(word, end=" ")\n        print()\n\nmain()\n']
2022-04-12 03:03:02.468260 size on output set 2
2022-04-12 03:03:02.468270 num operations 2
2022-04-12 03:03:02.468277 size on input set 1
2022-04-12 03:03:04.371504 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n#\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nmain()\n"
    }
  ],
  "created": 1649746982,
  "object": "edit"
}
2022-04-12 03:03:04.371894 fix spelling mistakes 2 ["\n#\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nmain()\n", "import sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nmain()\n"]
2022-04-12 03:03:04.371925 size on output set 2
2022-04-12 03:03:04.371937 size on input set 2
2022-04-12 03:03:07.246733 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#!/usr/bin/env python3\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print('')\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n#!/usr/bin/env python3\nimport sys\n\ndef main(argv):\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nmain(sys.argv)\n"
    }
  ],
  "created": 1649746984,
  "object": "edit"
}
2022-04-12 03:03:07.246859 fix syntax errors 2 ["\n#!/usr/bin/env python3\nimport sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print('')\n\nmain()\n", "\n#!/usr/bin/env python3\nimport sys\n\ndef main(argv):\n    words = set()\n    for line in sys.stdin:\n        for word in line.split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print()\n\nmain(sys.argv)\n"]
2022-04-12 03:03:11.560007 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.strip().split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print('')\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    words = set() # create a set\n    for line in sys.stdin:\n        for word in line.split(): # split line by whitespace\n            if word.lower() in words:\n                print('.', end=' ') # print . if word is in set\n            else:\n                print(word, end=' ') # print word if word is not in set\n                words.add(word.lower()) # add word to set\n        print()\n\nmain()\n"
    }
  ],
  "created": 1649746987,
  "object": "edit"
}
2022-04-12 03:03:11.560154 fix syntax errors 2 ["import sys\n\ndef main():\n    words = set()\n    for line in sys.stdin:\n        for word in line.strip().split():\n            if word.lower() in words:\n                print('.', end=' ')\n            else:\n                print(word, end=' ')\n                words.add(word.lower())\n        print('')\n\nmain()\n", "import sys\n\ndef main():\n    words = set() # create a set\n    for line in sys.stdin:\n        for word in line.split(): # split line by whitespace\n            if word.lower() in words:\n                print('.', end=' ') # print . if word is in set\n            else:\n                print(word, end=' ') # print word if word is not in set\n                words.add(word.lower()) # add word to set\n        print()\n\nmain()\n"]
2022-04-12 03:03:11.560251 size on output set 4
2022-04-12 03:03:11.560259 num operations 2
2022-04-12 03:03:11.560262 size on input set 1
2022-04-12 03:03:13.461886 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i+1:]:\n            line[i] = \".\"\n        i += 1\n    print(\" \".join(line))\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i+1:]:\n            line[i] = \".\"\n        i += 1\n    print(\" \".join(line))\n"
    }
  ],
  "created": 1649746991,
  "object": "edit"
}
2022-04-12 03:03:13.462030 fix spelling mistakes 2 ['\nimport sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i+1:]:\n            line[i] = "."\n        i += 1\n    print(" ".join(line))\n', '\nimport sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i+1:]:\n            line[i] = "."\n        i += 1\n    print(" ".join(line))\n']
2022-04-12 03:03:13.462055 size on output set 1
2022-04-12 03:03:13.462062 size on input set 1
2022-04-12 03:03:16.878731 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    for i in range(len(line)):\n        if line[i] in line[i+1:]: line[i] = \".\"\n    print(\" \".join(line))\n"
    },
    {
      "index": 1,
      "text": "import sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i+1:]:\n            line[i] = \".\"\n        i += 1\n    print(\" \".join(line))\n"
    }
  ],
  "created": 1649746993,
  "object": "edit"
}
2022-04-12 03:03:16.878868 fix syntax errors 2 ['import sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    for i in range(len(line)):\n        if line[i] in line[i+1:]: line[i] = "."\n    print(" ".join(line))\n', 'import sys\nimport math\n\nlines = []\nfor line in sys.stdin:\n    lines.append(line)\n\nwords = []\nfor line in lines:\n    words.append(line.split())\n\nfor line in words:\n    i = 0\n    while i < len(line):\n        if line[i] in line[i+1:]:\n            line[i] = "."\n        i += 1\n    print(" ".join(line))\n']
2022-04-12 03:03:16.878892 size on output set 2
2022-04-12 03:03:16.878903 num operations 2
2022-04-12 03:03:16.878909 size on input set 1
2022-04-12 03:03:18.901115 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print('')\nmain()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print('')\n\nmain()\n"
    }
  ],
  "created": 1649746997,
  "object": "edit"
}
2022-04-12 03:03:18.901311 fix spelling mistakes 2 ["\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print('')\nmain()\n", "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print('')\n\nmain()\n"]
2022-04-12 03:03:18.901343 size on output set 2
2022-04-12 03:03:18.901354 size on input set 2
2022-04-12 03:03:21.184256 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split(' ')\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print('')\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n"
    }
  ],
  "created": 1649746999,
  "object": "edit"
}
2022-04-12 03:03:21.184412 fix syntax errors 2 ["\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split(' ')\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print('')\n\nmain()\n", "\nimport sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print()\n\nmain()\n"]
2022-04-12 03:03:23.630513 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split(\" \")\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print('')\nmain()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print()\nmain()\n"
    }
  ],
  "created": 1649747001,
  "object": "edit"
}
2022-04-12 03:03:23.630871 fix syntax errors 2 ['import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split(" ")\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=\' \')\n            else:\n                print(\'.\', end=\' \')\n        print(\'\')\nmain()\n', "import sys\n\ndef main():\n    words = []\n    for line in sys.stdin:\n        line = line.strip().split()\n        for word in line:\n            if word.lower() not in words:\n                words.append(word.lower())\n                print(word, end=' ')\n            else:\n                print('.', end=' ')\n        print()\nmain()\n"]
2022-04-12 03:03:23.630947 size on output set 4
