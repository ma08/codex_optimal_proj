["\n\ndef main():\n    n, m = [int(x) for x in input().split()]\n    k = [int(x) for x in input().split()]\n    offers = []\n    for _ in range(m):\n        offers.append([int(x) for x in input().split()])\n    days = [0] * (n + 1)\n    for day, kind in offers:\n        days[kind] = max(days[kind], day)\n    result = 0\n    for kind, day in enumerate(days):\n        if k[kind] > 0:\n            result = max(result, day + (k[kind] - 1) * 2)\n    print(result)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, m = [int(x) for x in input().split()]  # n - number of days, m - number of offers, k - number of offers for each day\n    offers = []\n    for _ in range(m):\n        offers.append([int(x) for x in input().split()])  # offers - list of offers (day, kind)\n    days = [0] * (n + 1)\n    for day, kind in offers:\n        days[kind] = max(days[kind], day)\n    result = 0\n    for kind, day in enumerate(days[1:], 1):\n        if k[kind - 1] > 0:\n            result = max(result, day + (k[kind - 1] - 1) * 2)\n    print(result)\n\nif __name__ == '__main__':\n    main()\n", "# https://atcoder.jp/contests/abc087/tasks/arc090_a\n\n\ndef main():\n    n, m = map(int, input().split())\n    k = list(map(int, input().split()))\n    d_t = [list(map(int, input().split())) for _ in range(m)]\n    k_sum = sum(k)\n    d_t_dict = {i + 1: 0 for i in range(n)}\n    for d, t in d_t:\n        d_t_dict[t] += 1\n    d_t_dict = sorted(d_t_dict.items(), key=lambda x: x[1])\n    k = sorted(k, reverse=True)\n    d = 0\n    while k_sum != 0:\n        d += 1\n        if d_t_dict[0][0] == d:\n            k_sum -= k[0]\n            k.pop(0)\n            d_t_dict.pop(0)\n        else:\n            k_sum -= sum(k)\n            k = []\n    print(d)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, m = [int(x) for x in input().split()]  # n - number of days, m - number of offers, k - number of offers for each day\n    k = [int(x) for x in input().split()]\n    offers = []\n    for _ in range(m):\n        offers.append([int(x) for x in input().split()])  # offers - list of offers (day, kind)\n    days = [0] * (n + 1)\n    for day, kind in offers:\n        days[kind] = max(days[kind], day)\n    result = 0\n    for kind, day in enumerate(days):\n        if k[kind] > 0:\n            result = max(result, day + (k[kind] - 1) * 2)\n    print(result)\n\nif __name__ == '__main__':\n    main()\n", "# https://atcoder.jp/contests/abc071/tasks/arc081_a\n\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    c.sort()\n    a_i = 0\n    b_i = 0\n    c_i = 0\n    ans = 0\n    while b_i < m:\n        if a[a_i] <= b[b_i] <= c[c_i]:\n            ans += 1\n            a_i += 1\n            b_i += 1\n            c_i += 1\n        elif b[b_i] < a[a_i]:\n            b_i += 1\n        elif c[c_i] < b[b_i]:\n            c_i += 1\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "# https://atcoder.jp/contests/abc071/tasks/arc081_a\n\n\ndef main():\n    n, m = map(int, input().split())\n    k = list(map(int, input().split()))\n    d_t = [list(map(int, input().split())) for _ in range(m)]\n    k_sum = sum(k)\n    d_t_dict = {i+1: 0 for i in range(n)}\n    for d, t in d_t:\n        d_t_dict[t] += 1\n    d_t_dict = sorted(d_t_dict.items(), key=lambda x: x[1])\n    k = sorted(k, reverse=True)\n    d = 0\n    while k_sum != 0:\n        d += 1\n        if d_t_dict[0][1] == d:\n            k_sum -= k[0]\n            k.pop(0)\n            d_t_dict.pop(0)\n        else:\n            k_sum -= sum(k)\n            k = []\n    print(d)\n\n\nif __name__ == '__main__':\n    main()\n"]