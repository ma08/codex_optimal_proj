2022-04-11 20:38:20.143599 num operations 2
2022-04-11 20:38:20.143645 size on input set 1
2022-04-11 20:38:30.083290 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom heapq import heappop, heappush\n\nn, m, k = map(int, input().split())\na = list(map(int, input().split()))\n\nshovels = [(a[i], i) for i in range(n)] # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043b\u043e\u043f\u0430\u0442 \u0438 \u0438\u0445 \u0446\u0435\u043d\u0430\nheap = []\n\nfor _ in range(m):\n    x, y = map(int, input().split())\n    heappush(heap, (x, y)) # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043b\u043e\u043f\u0430\u0442 \u0438 \u0441\u043a\u0438\u0434\u043a\u0430\n\nshovels.sort()\n\nans = 0\n\nwhile k > 0:\n    amount, cost = 0, 0\n    while amount < k and shovels:\n        shovel, shovel_cost = heappop(shovels)\n        amount += 1\n        cost += shovel_cost\n    if not heap:\n        ans += cost\n        break\n    x, y = heappop(heap)\n    if amount <= x:\n        ans += cost\n        k -= amount\n    else:\n        ans += cost - y * shovels[-y][0]\n        k -= x\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom heapq import heappop, heappush\n\nn, m, k = map(int, input().split())\na = list(map(int, input().split()))\n\nshovels = [(a[i], i) for i in range(n)]  # (cost, amount)\nheap = []\n\nfor _ in range(m):\n    x, y = map(int, input().split())\n    heappush(heap, (x, y))  # (amount, cost)\n\nshovels.sort()\n\nans = 0\n\nwhile k > 0:\n    amount, cost = 0, 0\n    while amount < k and shovels:\n        shovel, shovel_cost = heappop(shovels)\n        amount += 1\n        cost += shovel_cost\n    if not heap:\n        ans += cost\n        break\n    x, y = heappop(heap)\n    if amount <= x:\n        ans += cost\n        k -= amount\n    else:\n        ans += cost - y * shovels[-y][0]\n        k -= x\n\nprint(ans)\n"
    }
  ],
  "created": 1649723900,
  "object": "edit"
}
2022-04-11 20:38:30.083639 fix spelling mistakes 2 ['\n\nfrom heapq import heappop, heappush\n\nn, m, k = map(int, input().split())\na = list(map(int, input().split()))\n\nshovels = [(a[i], i) for i in range(n)] # количество лопат и их цена\nheap = []\n\nfor _ in range(m):\n    x, y = map(int, input().split())\n    heappush(heap, (x, y)) # количество лопат и скидка\n\nshovels.sort()\n\nans = 0\n\nwhile k > 0:\n    amount, cost = 0, 0\n    while amount < k and shovels:\n        shovel, shovel_cost = heappop(shovels)\n        amount += 1\n        cost += shovel_cost\n    if not heap:\n        ans += cost\n        break\n    x, y = heappop(heap)\n    if amount <= x:\n        ans += cost\n        k -= amount\n    else:\n        ans += cost - y * shovels[-y][0]\n        k -= x\n\nprint(ans)\n', '\n\nfrom heapq import heappop, heappush\n\nn, m, k = map(int, input().split())\na = list(map(int, input().split()))\n\nshovels = [(a[i], i) for i in range(n)]  # (cost, amount)\nheap = []\n\nfor _ in range(m):\n    x, y = map(int, input().split())\n    heappush(heap, (x, y))  # (amount, cost)\n\nshovels.sort()\n\nans = 0\n\nwhile k > 0:\n    amount, cost = 0, 0\n    while amount < k and shovels:\n        shovel, shovel_cost = heappop(shovels)\n        amount += 1\n        cost += shovel_cost\n    if not heap:\n        ans += cost\n        break\n    x, y = heappop(heap)\n    if amount <= x:\n        ans += cost\n        k -= amount\n    else:\n        ans += cost - y * shovels[-y][0]\n        k -= x\n\nprint(ans)\n']
2022-04-11 20:38:30.083715 size on output set 2
2022-04-11 20:38:30.083727 size on input set 2
2022-04-11 20:38:35.224479 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom heapq import heappop, heappush\n\nn, m, k = map(int, input().split())\na = list(map(int, input().split()))\n\nshovels = [(a[i], i) for i in range(n)]\nheap = []\n\nfor _ in range(m):\n    x, y = map(int, input().split())\n    heappush(heap, (x, y))\n\nshovels.sort()\n\nans = 0\n\nwhile k > 0:\n    amount, cost = 0, 0\n    while amount < k and shovels:\n        shovel, shovel_cost = heappop(shovels)\n        amount += 1\n        cost += shovel_cost\n    if not heap:\n        ans += cost\n        break\n    x, y = heappop(heap)\n    if amount <= x:\n        ans += cost\n        k -= amount\n    else:\n        ans += cost - y * shovels[-y][0]\n        k -= x\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom heapq import heappop, heappush\n\nn, m, k = map(int, input().split())\na = list(map(int, input().split()))\n\nshovels = [(a[i], i) for i in range(n)]\nheap = []\n\nfor _ in range(m):\n    x, y = map(int, input().split())\n    heappush(heap, (x, y))\n\nshovels.sort()\n\nans = 0\n\nwhile k > 0:\n    amount, cost = 0, 0\n    while amount < k and shovels:\n        shovel, shovel_cost = heappop(shovels)\n        amount += 1\n        cost += shovel_cost\n    if not heap:\n        ans += cost\n        break\n    x, y = heappop(heap)\n    if amount <= x:\n        ans += cost\n        k -= amount\n    else:\n        ans += cost - y * shovels[-y][0]\n        k -= x\n\nprint(ans)\n"
    }
  ],
  "created": 1649723910,
  "object": "edit"
}
2022-04-11 20:38:35.224622 fix syntax errors 2 ['\n\nfrom heapq import heappop, heappush\n\nn, m, k = map(int, input().split())\na = list(map(int, input().split()))\n\nshovels = [(a[i], i) for i in range(n)]\nheap = []\n\nfor _ in range(m):\n    x, y = map(int, input().split())\n    heappush(heap, (x, y))\n\nshovels.sort()\n\nans = 0\n\nwhile k > 0:\n    amount, cost = 0, 0\n    while amount < k and shovels:\n        shovel, shovel_cost = heappop(shovels)\n        amount += 1\n        cost += shovel_cost\n    if not heap:\n        ans += cost\n        break\n    x, y = heappop(heap)\n    if amount <= x:\n        ans += cost\n        k -= amount\n    else:\n        ans += cost - y * shovels[-y][0]\n        k -= x\n\nprint(ans)\n', '\n\nfrom heapq import heappop, heappush\n\nn, m, k = map(int, input().split())\na = list(map(int, input().split()))\n\nshovels = [(a[i], i) for i in range(n)]\nheap = []\n\nfor _ in range(m):\n    x, y = map(int, input().split())\n    heappush(heap, (x, y))\n\nshovels.sort()\n\nans = 0\n\nwhile k > 0:\n    amount, cost = 0, 0\n    while amount < k and shovels:\n        shovel, shovel_cost = heappop(shovels)\n        amount += 1\n        cost += shovel_cost\n    if not heap:\n        ans += cost\n        break\n    x, y = heappop(heap)\n    if amount <= x:\n        ans += cost\n        k -= amount\n    else:\n        ans += cost - y * shovels[-y][0]\n        k -= x\n\nprint(ans)\n']
2022-04-11 20:38:39.507118 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom heapq import heappop, heappush\n\nn, m, k = map(int, input().split())\na = list(map(int, input().split()))\n\nshovels = [(a[i], i) for i in range(n)]  # (cost, amount)\nheap = []\n\nfor _ in range(m):\n    x, y = map(int, input().split())\n    heappush(heap, (x, y))  # (amount, cost)\n\nshovels.sort()\n\nans = 0\n\nwhile k > 0:\n    amount, cost = 0, 0  # amount of shovels, cost of shovels\n    while amount < k and shovels:\n        shovel, shovel_cost = heappop(shovels)\n        amount += 1\n        cost += shovel_cost\n    if not heap:\n        ans += cost\n        break\n    x, y = heappop(heap)\n    if amount <= x:  # if amount of shovels is less than amount of sand\n        ans += cost\n        k -= amount\n    else:\n        ans += cost - y * shovels[-y][0]\n        k -= x\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\nfrom heapq import heappop, heappush\n\nn, m, k = map(int, input().split())\na = list(map(int, input().split()))\n\nshovels = [(a[i], i) for i in range(n)]  # (cost, amount)\nheap = []\n\nfor _ in range(m):\n    x, y = map(int, input().split())\n    heappush(heap, (x, y))  # (amount, cost)\n\nshovels.sort()\n\nans = 0\n\nwhile k > 0:\n    amount, cost = 0, 0\n    while amount < k and shovels:\n        shovel, shovel_cost = heappop(shovels)\n        amount += 1\n        cost += shovel_cost\n    if not heap:\n        ans += cost\n        break\n    x, y = heappop(heap)\n    if amount <= x:\n        ans += cost\n        k -= amount\n    else:\n        ans += cost - y * shovels[-y][0]\n        k -= x\n\nprint(ans)\n"
    }
  ],
  "created": 1649723915,
  "object": "edit"
}
2022-04-11 20:38:39.507605 fix syntax errors 2 ['\n\nfrom heapq import heappop, heappush\n\nn, m, k = map(int, input().split())\na = list(map(int, input().split()))\n\nshovels = [(a[i], i) for i in range(n)]  # (cost, amount)\nheap = []\n\nfor _ in range(m):\n    x, y = map(int, input().split())\n    heappush(heap, (x, y))  # (amount, cost)\n\nshovels.sort()\n\nans = 0\n\nwhile k > 0:\n    amount, cost = 0, 0  # amount of shovels, cost of shovels\n    while amount < k and shovels:\n        shovel, shovel_cost = heappop(shovels)\n        amount += 1\n        cost += shovel_cost\n    if not heap:\n        ans += cost\n        break\n    x, y = heappop(heap)\n    if amount <= x:  # if amount of shovels is less than amount of sand\n        ans += cost\n        k -= amount\n    else:\n        ans += cost - y * shovels[-y][0]\n        k -= x\n\nprint(ans)\n', '\nfrom heapq import heappop, heappush\n\nn, m, k = map(int, input().split())\na = list(map(int, input().split()))\n\nshovels = [(a[i], i) for i in range(n)]  # (cost, amount)\nheap = []\n\nfor _ in range(m):\n    x, y = map(int, input().split())\n    heappush(heap, (x, y))  # (amount, cost)\n\nshovels.sort()\n\nans = 0\n\nwhile k > 0:\n    amount, cost = 0, 0\n    while amount < k and shovels:\n        shovel, shovel_cost = heappop(shovels)\n        amount += 1\n        cost += shovel_cost\n    if not heap:\n        ans += cost\n        break\n    x, y = heappop(heap)\n    if amount <= x:\n        ans += cost\n        k -= amount\n    else:\n        ans += cost - y * shovels[-y][0]\n        k -= x\n\nprint(ans)\n']
2022-04-11 20:38:39.507688 size on output set 3
2022-04-11 20:38:39.507728 num operations 2
2022-04-11 20:38:39.507741 size on input set 1
2022-04-11 20:38:42.068339 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    offers = []\n    for _ in range(m):\n        offers.append(list(map(int, input().split())))\n    \n    a.sort(reverse=True)\n    b = a[:]\n    for offer in offers:\n        for i in range(offer[1]):\n            b[i] = min(b[i], a[offer[0] - 1 - i])\n    \n    res = sum(a[:k])\n    for i in range(k):\n        res = min(res, sum(b[:i]) + sum(a[i:k]))\n    \n    print(res)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    offers = []\n    for _ in range(m):\n        offers.append(list(map(int, input().split())))\n    \n    a.sort()\n    b = a[:] # copy\n    for offer in offers:\n        for i in range(offer[1]):\n            b[i] = min(b[i], a[offer[0] - 1 - i])\n    \n    res = sum(a[:k])\n    for i in range(k):\n        res = min(res, sum(b[:i]) + sum(a[i:k]))\n    \n    print(res)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649723919,
  "object": "edit"
}
2022-04-11 20:38:42.068840 fix spelling mistakes 2 ['\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    offers = []\n    for _ in range(m):\n        offers.append(list(map(int, input().split())))\n    \n    a.sort(reverse=True)\n    b = a[:]\n    for offer in offers:\n        for i in range(offer[1]):\n            b[i] = min(b[i], a[offer[0] - 1 - i])\n    \n    res = sum(a[:k])\n    for i in range(k):\n        res = min(res, sum(b[:i]) + sum(a[i:k]))\n    \n    print(res)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    offers = []\n    for _ in range(m):\n        offers.append(list(map(int, input().split())))\n    \n    a.sort()\n    b = a[:] # copy\n    for offer in offers:\n        for i in range(offer[1]):\n            b[i] = min(b[i], a[offer[0] - 1 - i])\n    \n    res = sum(a[:k])\n    for i in range(k):\n        res = min(res, sum(b[:i]) + sum(a[i:k]))\n    \n    print(res)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 20:38:42.068907 size on output set 2
2022-04-11 20:38:42.068917 size on input set 2
2022-04-11 20:38:48.295924 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))[:n]\n    offers = []\n    for _ in range(m):\n        offers.append(list(map(int, input().split())))\n    \n    a.sort(reverse=True)\n    b = a[:]\n    for offer in offers:\n        for i in range(offer[1]):\n            b[i] = min(b[i], a[offer[0] - 1 - i])\n    \n    res = sum(a[:k])\n    for i in range(k):\n        res = min(res, sum(b[:i]) + sum(a[i:k]))\n    \n    print(res)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649723922,
  "object": "edit"
}
2022-04-11 20:38:48.296154 fix syntax errors 2 ['\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))[:n]\n    offers = []\n    for _ in range(m):\n        offers.append(list(map(int, input().split())))\n    \n    a.sort(reverse=True)\n    b = a[:]\n    for offer in offers:\n        for i in range(offer[1]):\n            b[i] = min(b[i], a[offer[0] - 1 - i])\n    \n    res = sum(a[:k])\n    for i in range(k):\n        res = min(res, sum(b[:i]) + sum(a[i:k]))\n    \n    print(res)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    pass\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 20:38:51.616537 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    offers = []\n    for _ in range(m):\n        offers.append(list(map(int, input().split())))\n    \n    a.sort()\n    b = a[:]  # copy\n    for offer in offers:\n        for i in range(offer[1]):\n            b[i] = min(b[i], a[offer[0] - 1 - i])\n\n    res = sum(a[:k])\n    for i in range(k):\n        res = min(res, sum(b[:i]) + sum(a[i:k]))\n\n    print(res)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    offers = []\n    for _ in range(m):\n        offers.append(list(map(int, input().split())))\n\n    a.sort()\n    b = a[:]  # copy\n    for offer in offers:\n        for i in range(offer[1]):\n            b[i] = min(b[i], a[offer[0] - 1 - i])\n\n    res = sum(a[:k])\n    for i in range(k):\n        res = min(res, sum(b[:i]) + sum(a[i:k]))\n\n    print(res)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649723928,
  "object": "edit"
}
2022-04-11 20:38:51.617159 fix syntax errors 2 ['\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    offers = []\n    for _ in range(m):\n        offers.append(list(map(int, input().split())))\n    \n    a.sort()\n    b = a[:]  # copy\n    for offer in offers:\n        for i in range(offer[1]):\n            b[i] = min(b[i], a[offer[0] - 1 - i])\n\n    res = sum(a[:k])\n    for i in range(k):\n        res = min(res, sum(b[:i]) + sum(a[i:k]))\n\n    print(res)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    offers = []\n    for _ in range(m):\n        offers.append(list(map(int, input().split())))\n\n    a.sort()\n    b = a[:]  # copy\n    for offer in offers:\n        for i in range(offer[1]):\n            b[i] = min(b[i], a[offer[0] - 1 - i])\n\n    res = sum(a[:k])\n    for i in range(k):\n        res = min(res, sum(b[:i]) + sum(a[i:k]))\n\n    print(res)\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 20:38:51.617219 size on output set 4
