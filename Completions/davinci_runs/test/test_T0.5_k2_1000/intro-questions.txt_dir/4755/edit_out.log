2022-04-11 23:02:23.169423 num operations 2
2022-04-11 23:02:23.169555 size on input set 1
2022-04-11 23:02:26.341173 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# put your python code here\na, b = [int(x) for x in input().split()]\na -= a % (10**b)\nprint(a)\n"
    },
    {
      "index": 1,
      "text": "\n\nc, k = [int(x) for x in input().split()]\nc -= c % (10**k)\nprint(c)\n"
    }
  ],
  "created": 1649732543,
  "object": "edit"
}
2022-04-11 23:02:26.341376 fix spelling mistakes 2 ['\n\n# put your python code here\na, b = [int(x) for x in input().split()]\na -= a % (10**b)\nprint(a)\n', '\n\nc, k = [int(x) for x in input().split()]\nc -= c % (10**k)\nprint(c)\n']
2022-04-11 23:02:26.341394 size on output set 2
2022-04-11 23:02:26.341399 size on input set 2
2022-04-11 23:02:29.385241 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\na, b = [int(x) for x in input().split()]\na -= a % (10**b)\nprint(a)\n"
    },
    {
      "index": 1,
      "text": "\n\nc, k = [int(x) for x in input().split()]\nc -= c % (10 ** k)\nprint(c)\n"
    }
  ],
  "created": 1649732546,
  "object": "edit"
}
2022-04-11 23:02:29.385397 fix syntax errors 2 ['\n\na, b = [int(x) for x in input().split()]\na -= a % (10**b)\nprint(a)\n', '\n\nc, k = [int(x) for x in input().split()]\nc -= c % (10 ** k)\nprint(c)\n']
2022-04-11 23:02:34.122452 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# put your python code here\na, b = [int(x) for x in input().split()] # \u0432\u0432\u043e\u0434\u0438\u043c \u0447\u0438\u0441\u043b\u043e \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u043d\u0430\u043a\u043e\u0432 \u043f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u044f\u0442\u043e\u0439\na -= a % (10**b) # \u043e\u0442\u043d\u0438\u043c\u0430\u0435\u043c \u043e\u0441\u0442\u0430\u0442\u043e\u043a \u043e\u0442 \u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0447\u0438\u0441\u043b\u0430 \u043d\u0430 10 \u0432 \u0441\u0442\u0435\u043f\u0435\u043d\u0438 b\nprint(a) # \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u0447\u0438\u0441\u043b\u043e\n"
    },
    {
      "index": 1,
      "text": "\n\n# put your python code here\na, b = [int(x) for x in input().split()]\na -= a % (10 ** b)\nprint(a)\n"
    }
  ],
  "created": 1649732549,
  "object": "edit"
}
2022-04-11 23:02:34.122642 fix syntax errors 2 ['\n\n# put your python code here\na, b = [int(x) for x in input().split()] # вводим число и количество знаков после запятой\na -= a % (10**b) # отнимаем остаток от деления числа на 10 в степени b\nprint(a) # выводим число\n', '\n\n# put your python code here\na, b = [int(x) for x in input().split()]\na -= a % (10 ** b)\nprint(a)\n']
2022-04-11 23:02:34.122705 size on output set 4
2022-04-11 23:02:34.122736 num operations 2
2022-04-11 23:02:34.122748 size on input set 1
2022-04-11 23:02:37.746112 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\na, b = map(int, input().split())\nprint(a - a % 10 ** b + 10 ** b if a % 10 ** b >= 5 * 10 ** (b - 1) else a - a % 10 ** b)\n"
    },
    {
      "index": 1,
      "text": "\n\nc, k = map(int, input().split())\nprint(c - c % 10 ** k + 10 ** k if c % 10 ** k >= 5 * 10 ** (k - 1) else c - c % 10 ** k) \n"
    }
  ],
  "created": 1649732554,
  "object": "edit"
}
2022-04-11 23:02:37.746293 fix spelling mistakes 2 ['\n\na, b = map(int, input().split())\nprint(a - a % 10 ** b + 10 ** b if a % 10 ** b >= 5 * 10 ** (b - 1) else a - a % 10 ** b)\n', '\n\nc, k = map(int, input().split())\nprint(c - c % 10 ** k + 10 ** k if c % 10 ** k >= 5 * 10 ** (k - 1) else c - c % 10 ** k) \n']
2022-04-11 23:02:37.746319 size on output set 2
2022-04-11 23:02:37.746329 size on input set 2
2022-04-11 23:02:40.906760 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nc, k = map(int, input().split())\nprint(c - c % 10 ** k + 10 ** k if c % 10 ** k >= 5 * 10 ** (k - 1) else c - c % 10 ** k)\n"
    },
    {
      "index": 1,
      "text": "\n\nc, k = map(int, input().split())\nprint(c - c % 10 ** k + 10 ** k if c % 10 ** k >= 5 * 10 ** (k - 1) else c - c % 10 ** k)\n"
    }
  ],
  "created": 1649732557,
  "object": "edit"
}
2022-04-11 23:02:40.907173 fix syntax errors 2 ['\n\nc, k = map(int, input().split())\nprint(c - c % 10 ** k + 10 ** k if c % 10 ** k >= 5 * 10 ** (k - 1) else c - c % 10 ** k)\n', '\n\nc, k = map(int, input().split())\nprint(c - c % 10 ** k + 10 ** k if c % 10 ** k >= 5 * 10 ** (k - 1) else c - c % 10 ** k)\n']
2022-04-11 23:02:44.362757 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "a = int(input())\nb = int(input())\nprint(a // b)\nprint(a % b)\nprint(divmod(a, b))\n"
    },
    {
      "index": 1,
      "text": "\n\na, b = map(int, input().split())\nprint(a - a % 10 ** b + 10 ** b if a % 10 ** b >= 5 * 10 ** (b - 1) else a - a % 10 ** b) \n"
    }
  ],
  "created": 1649732561,
  "object": "edit"
}
2022-04-11 23:02:44.362907 fix syntax errors 2 ['a = int(input())\nb = int(input())\nprint(a // b)\nprint(a % b)\nprint(divmod(a, b))\n', '\n\na, b = map(int, input().split())\nprint(a - a % 10 ** b + 10 ** b if a % 10 ** b >= 5 * 10 ** (b - 1) else a - a % 10 ** b) \n']
2022-04-11 23:02:44.362925 size on output set 3
2022-04-11 23:02:44.362936 num operations 2
2022-04-11 23:02:44.362942 size on input set 1
2022-04-11 23:02:47.621609 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nC, K = map(int, input().split()) #C is the number, K is the number of digits\n\nfor i in range(K, 10):\n    if C % (10**i) < 5*(10**(i-1)):\n        C = C - C % (10**i)\n    else:\n        C = C - C % (10**i) + 10**i\n\nprint(C)\n"
    },
    {
      "index": 1,
      "text": "\n#\nC, K = map(int, input().split())\n\nfor i in range(K, 10):\n    if C % (10**i) < 5*(10**(i-1)):\n        C = C - C % (10**i)\n    else:\n        C = C - C % (10**i) + 10**i\n\nprint(C)\n"
    }
  ],
  "created": 1649732564,
  "object": "edit"
}
2022-04-11 23:02:47.621864 fix spelling mistakes 2 ['\n\nC, K = map(int, input().split()) #C is the number, K is the number of digits\n\nfor i in range(K, 10):\n    if C % (10**i) < 5*(10**(i-1)):\n        C = C - C % (10**i)\n    else:\n        C = C - C % (10**i) + 10**i\n\nprint(C)\n', '\n#\nC, K = map(int, input().split())\n\nfor i in range(K, 10):\n    if C % (10**i) < 5*(10**(i-1)):\n        C = C - C % (10**i)\n    else:\n        C = C - C % (10**i) + 10**i\n\nprint(C)\n']
2022-04-11 23:02:47.621896 size on output set 2
2022-04-11 23:02:47.621905 size on input set 2
2022-04-11 23:02:49.810837 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nC, K = map(int, input().split())\n\nfor i in range(K, 10):\n    if C % (10**i) < 5*(10**(i-1)):\n        C = C - C % (10**i)\n    else:\n        C = C - C % (10**i) + 10**i\n\nprint(C)\n"
    },
    {
      "index": 1,
      "text": "\n# https://www.acmicpc.net/problem/6359\nC, K = map(int, input().split())\n\nfor i in range(K, 10):\n    if C % (10**i) < 5*(10**(i-1)):\n        C = C - C % (10**i)\n    else:\n        C = C - C % (10**i) + 10**i\n\nprint(C)\n"
    }
  ],
  "created": 1649732567,
  "object": "edit"
}
2022-04-11 23:02:49.811266 fix syntax errors 2 ['\n\nC, K = map(int, input().split())\n\nfor i in range(K, 10):\n    if C % (10**i) < 5*(10**(i-1)):\n        C = C - C % (10**i)\n    else:\n        C = C - C % (10**i) + 10**i\n\nprint(C)\n', '\n# https://www.acmicpc.net/problem/6359\nC, K = map(int, input().split())\n\nfor i in range(K, 10):\n    if C % (10**i) < 5*(10**(i-1)):\n        C = C - C % (10**i)\n    else:\n        C = C - C % (10**i) + 10**i\n\nprint(C)\n']
2022-04-11 23:02:56.010350 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nC, K = map(int, input().split()) #C is the number, K is the number of digits\n\nfor i in range(K, 10): #i is the number of digits\n    if C % (10**i) < 5*(10**(i-1)): #if the last digit is less than 5\n        C = C - C % (10**i) #remove the last digit\n    else:\n        C = C - C % (10**i) + 10**i\n\nprint(C)\n"
    },
    {
      "index": 1,
      "text": "\nC, K = map(int, input().split()) #C is the number, K is the number of digits\n\nfor i in range(K, 10):\n    if C % (10**i) < 5*(10**(i-1)):\n        C = C - C % (10**i)\n    else:\n        C = C - C % (10**i) + 10**i\n\nprint(C)\n"
    }
  ],
  "created": 1649732570,
  "object": "edit"
}
2022-04-11 23:02:56.010580 fix syntax errors 2 ['#!/usr/bin/env python3\n\nC, K = map(int, input().split()) #C is the number, K is the number of digits\n\nfor i in range(K, 10): #i is the number of digits\n    if C % (10**i) < 5*(10**(i-1)): #if the last digit is less than 5\n        C = C - C % (10**i) #remove the last digit\n    else:\n        C = C - C % (10**i) + 10**i\n\nprint(C)\n', '\nC, K = map(int, input().split()) #C is the number, K is the number of digits\n\nfor i in range(K, 10):\n    if C % (10**i) < 5*(10**(i-1)):\n        C = C - C % (10**i)\n    else:\n        C = C - C % (10**i) + 10**i\n\nprint(C)\n']
2022-04-11 23:02:56.010594 size on output set 4
2022-04-11 23:02:56.010601 num operations 2
2022-04-11 23:02:56.010605 size on input set 1
2022-04-11 23:02:58.530343 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#CODE:\n\nc = int(input())\nk = int(input())\n\n\n\n#CODE:\n\nc = int(input())\nk = int(input())\n\nprint(c//(10**k)*(10**k))\nprint(c//(10**k)*(10**k))\n"
    },
    {
      "index": 1,
      "text": "\n\n#CODE: \n\nc = int(input())\nk = int(input())\n\nprint(c//(10**k)*(10**k))\n"
    }
  ],
  "created": 1649732576,
  "object": "edit"
}
2022-04-11 23:02:58.530618 fix spelling mistakes 2 ['\n\n#CODE:\n\nc = int(input())\nk = int(input())\n\n\n\n#CODE:\n\nc = int(input())\nk = int(input())\n\nprint(c//(10**k)*(10**k))\nprint(c//(10**k)*(10**k))\n', '\n\n#CODE: \n\nc = int(input())\nk = int(input())\n\nprint(c//(10**k)*(10**k))\n']
2022-04-11 23:02:58.530686 size on output set 2
2022-04-11 23:02:58.530697 size on input set 2
2022-04-11 23:03:01.160886 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#this is a comment\n#CODE: \n\nc = int(input())\nk = int(input())\n\nprint(c//(10**k)*(10**k))\n"
    },
    {
      "index": 1,
      "text": "\n\n#CODE:\n\nc = int(input())\nk = int(input())\n\nprint(c//(10**k)*(10**k)) \n"
    }
  ],
  "created": 1649732578,
  "object": "edit"
}
2022-04-11 23:03:01.161322 fix syntax errors 2 ['\n#this is a comment\n#CODE: \n\nc = int(input())\nk = int(input())\n\nprint(c//(10**k)*(10**k))\n', '\n\n#CODE:\n\nc = int(input())\nk = int(input())\n\nprint(c//(10**k)*(10**k)) \n']
2022-04-11 23:03:03.701321 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#CODE:\n\nc = int(input())\nk = int(input())\nprint(c//(10**k)*(10**k))\nprint(c//(10**k)*(10**k))\n"
    },
    {
      "index": 1,
      "text": "\n\n#CODE:\n\nc = int(input())\nk = int(input())\n\nprint(c//(10**k)*(10**k))\nprint(c//(10**k)*(10**k))\n"
    }
  ],
  "created": 1649732581,
  "object": "edit"
}
2022-04-11 23:03:03.701666 fix syntax errors 2 ['\n#CODE:\n\nc = int(input())\nk = int(input())\nprint(c//(10**k)*(10**k))\nprint(c//(10**k)*(10**k))\n', '\n\n#CODE:\n\nc = int(input())\nk = int(input())\n\nprint(c//(10**k)*(10**k))\nprint(c//(10**k)*(10**k))\n']
2022-04-11 23:03:03.701705 size on output set 4
2022-04-11 23:03:03.701727 num operations 2
2022-04-11 23:03:03.701737 size on input set 1
2022-04-11 23:03:09.488241 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    # Get the input\n    C, K = [int(x) for x in sys.stdin.readline().split()]\n    \n    # Round to nearest 10^K\n    C = C // (10**K) * (10**K)\n    if C != 0:\n        C += 10**K\n    print(C)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys, os\n\ndef main():\n    # Get the input\n    N = int(sys.stdin.readline())\n\n    # Get the list of numbers\n    nums = [int(x) for x in sys.stdin.readline().split()]\n\n    # Get the list of queries\n    queries = []\n    for i in range(N):\n        queries.append([int(x) for x in sys.stdin.readline().split()])\n\n    # Solve the queries\n    for query in queries:\n        print(sum(nums[query[0] - 1:query[1]]))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649732583,
  "object": "edit"
}
2022-04-11 23:03:09.488388 fix spelling mistakes 2 ['\n\nimport sys\n\ndef main():\n    # Get the input\n    C, K = [int(x) for x in sys.stdin.readline().split()]\n    \n    # Round to nearest 10^K\n    C = C // (10**K) * (10**K)\n    if C != 0:\n        C += 10**K\n    print(C)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys, os\n\ndef main():\n    # Get the input\n    N = int(sys.stdin.readline())\n\n    # Get the list of numbers\n    nums = [int(x) for x in sys.stdin.readline().split()]\n\n    # Get the list of queries\n    queries = []\n    for i in range(N):\n        queries.append([int(x) for x in sys.stdin.readline().split()])\n\n    # Solve the queries\n    for query in queries:\n        print(sum(nums[query[0] - 1:query[1]]))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 23:03:09.488413 size on output set 2
2022-04-11 23:03:09.488417 size on input set 2
2022-04-11 23:03:12.417757 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    # Get the input\n    C, K = [int(x) for x in sys.stdin.readline().split()]\n    \n    # Round to nearest 10^K\n    C = C // (10**K) * (10**K) \n    if C != 0:\n        C += 10**K\n    print(C)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    # Get the input\n    C, K = [int(x) for x in sys.stdin.readline().split()]\n    \n    # Round to nearest 10^K\n    C = C // (10 ** K) * (10 ** K)\n    if C != 0:\n        C += 10 ** K\n    print(C)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649732589,
  "object": "edit"
}
2022-04-11 23:03:12.418118 fix syntax errors 2 ['\n\nimport sys\n\ndef main():\n    # Get the input\n    C, K = [int(x) for x in sys.stdin.readline().split()]\n    \n    # Round to nearest 10^K\n    C = C // (10**K) * (10**K) \n    if C != 0:\n        C += 10**K\n    print(C)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    # Get the input\n    C, K = [int(x) for x in sys.stdin.readline().split()]\n    \n    # Round to nearest 10^K\n    C = C // (10 ** K) * (10 ** K)\n    if C != 0:\n        C += 10 ** K\n    print(C)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 23:03:20.298705 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys, os\n\ndef main():\n    # Get the input\n    N = int(sys.stdin.readline())\n\n    # Get the list of numbers\n    nums = [int(x) for x in sys.stdin.readline().split()]\n\n    # Get the list of queries\n    queries = []\n    for i in range(int(sys.stdin.readline())):\n        queries.append([int(x) for x in sys.stdin.readline().split()])\n\n    # Solve the queries\n    for query in queries:\n        print(sum(nums[query[0] - 1:query[1]])) \n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys, os\n\ndef main():\n    # Get the input \n    N = int(sys.stdin.readline()) \n\n    # Get the list of numbers \n    nums = [int(x) for x in sys.stdin.readline().split()] \n\n    # Get the list of queries \n    queries = [] \n    for i in range(N): \n        queries.append([int(x) for x in sys.stdin.readline().split()]) \n\n    # Solve the queries \n    for query in queries: \n        print(sum(nums[query[0] - 1:query[1]])) \n\n    main() \n"
    }
  ],
  "created": 1649732592,
  "object": "edit"
}
2022-04-11 23:03:20.298870 fix syntax errors 2 ['\n\nimport sys, os\n\ndef main():\n    # Get the input\n    N = int(sys.stdin.readline())\n\n    # Get the list of numbers\n    nums = [int(x) for x in sys.stdin.readline().split()]\n\n    # Get the list of queries\n    queries = []\n    for i in range(int(sys.stdin.readline())):\n        queries.append([int(x) for x in sys.stdin.readline().split()])\n\n    # Solve the queries\n    for query in queries:\n        print(sum(nums[query[0] - 1:query[1]])) \n\nif __name__ == "__main__":\n    main()\n', '\nimport sys, os\n\ndef main():\n    # Get the input \n    N = int(sys.stdin.readline()) \n\n    # Get the list of numbers \n    nums = [int(x) for x in sys.stdin.readline().split()] \n\n    # Get the list of queries \n    queries = [] \n    for i in range(N): \n        queries.append([int(x) for x in sys.stdin.readline().split()]) \n\n    # Solve the queries \n    for query in queries: \n        print(sum(nums[query[0] - 1:query[1]])) \n\n    main() \n']
2022-04-11 23:03:20.299028 size on output set 4
2022-04-11 23:03:20.299041 num operations 2
2022-04-11 23:03:20.299048 size on input set 1
2022-04-11 23:03:22.225348 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nc, k = map(int, input().split())\n\nif c % 10**k >= 5*10**(k-1):\n    print(c + (10**k - c % 10**k))\nelse:\n    print(c - c % 10**k)\n"
    },
    {
      "index": 1,
      "text": "\n#\nc, k = map(int, input().split())\n\nif c % 10**k >= 5*10**(k-1):\n    print(c + (10**k - c % 10**k))\nelse:\n    print(c - c % 10**k)\n"
    }
  ],
  "created": 1649732600,
  "object": "edit"
}
2022-04-11 23:03:22.225589 fix spelling mistakes 2 ['\nc, k = map(int, input().split())\n\nif c % 10**k >= 5*10**(k-1):\n    print(c + (10**k - c % 10**k))\nelse:\n    print(c - c % 10**k)\n', '\n#\nc, k = map(int, input().split())\n\nif c % 10**k >= 5*10**(k-1):\n    print(c + (10**k - c % 10**k))\nelse:\n    print(c - c % 10**k)\n']
2022-04-11 23:03:22.225609 size on output set 2
2022-04-11 23:03:22.225616 size on input set 2
2022-04-11 23:03:25.464704 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "c, k = map(int, input().split())\n\nif c % 10**k >= 5*10**(k-1):\n    print(c + (10**k - c % 10**k))\nelse:\n    print(c - c % 10**k)\n"
    },
    {
      "index": 1,
      "text": "n = int(input())\nprint(n * (n - 1) // 2)\n"
    }
  ],
  "created": 1649732602,
  "object": "edit"
}
2022-04-11 23:03:25.464878 fix syntax errors 2 ['c, k = map(int, input().split())\n\nif c % 10**k >= 5*10**(k-1):\n    print(c + (10**k - c % 10**k))\nelse:\n    print(c - c % 10**k)\n', 'n = int(input())\nprint(n * (n - 1) // 2)\n']
2022-04-11 23:03:27.730823 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# https://atcoder.jp/contests/abc085/tasks/abc085_b\nc, k = map(int, input().split())\n\nif c % 10**k >= 5*10**(k-1):\n    print(c + (10**k - c % 10**k))\nelse:\n    print(c - c % 10**k)\n"
    },
    {
      "index": 1,
      "text": "\n# https://atcoder.jp/contests/abc086/tasks/abc086_a\nc, k = map(int, input().split())\n\nif c % 10**k >= 5*10**(k-1):\n    print(c + (10**k - c % 10**k))\nelse:\n    print(c - c % 10**k)\n"
    }
  ],
  "created": 1649732605,
  "object": "edit"
}
2022-04-11 23:03:27.731094 fix syntax errors 2 ['\n# https://atcoder.jp/contests/abc085/tasks/abc085_b\nc, k = map(int, input().split())\n\nif c % 10**k >= 5*10**(k-1):\n    print(c + (10**k - c % 10**k))\nelse:\n    print(c - c % 10**k)\n', '\n# https://atcoder.jp/contests/abc086/tasks/abc086_a\nc, k = map(int, input().split())\n\nif c % 10**k >= 5*10**(k-1):\n    print(c + (10**k - c % 10**k))\nelse:\n    print(c - c % 10**k)\n']
2022-04-11 23:03:27.731122 size on output set 4
2022-04-11 23:03:27.731171 num operations 2
2022-04-11 23:03:27.731179 size on input set 1
2022-04-11 23:03:29.629584 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom sys import stdin\n\nc, k = map(int, stdin.readline().split())\n\nprint((c + 10**k - 1) // 10**k * 10**k)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\nc, k = map(int, stdin.readline().split())\n\nprint((c + 10**k - 1) // 10**k * 10**k)\n"
    }
  ],
  "created": 1649732608,
  "object": "edit"
}
2022-04-11 23:03:29.629914 fix spelling mistakes 2 ['\nfrom sys import stdin\n\nc, k = map(int, stdin.readline().split())\n\nprint((c + 10**k - 1) // 10**k * 10**k)\n', '\n\nfrom sys import stdin\nc, k = map(int, stdin.readline().split())\n\nprint((c + 10**k - 1) // 10**k * 10**k)\n']
2022-04-11 23:03:29.629988 size on output set 2
2022-04-11 23:03:29.629998 size on input set 2
2022-04-11 23:03:32.170761 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom sys import stdin\n\nc, k = map(int, stdin.readline().split())\n\nprint((c + 10 ** k - 1) // 10 ** k * 10 ** k)\n"
    },
    {
      "index": 1,
      "text": "from sys import stdin\nc, k = map(int, stdin.readline().split())\nprint((c + 10**k - 1) // 10**k * 10**k)\n"
    }
  ],
  "created": 1649732609,
  "object": "edit"
}
2022-04-11 23:03:32.170893 fix syntax errors 2 ['\nfrom sys import stdin\n\nc, k = map(int, stdin.readline().split())\n\nprint((c + 10 ** k - 1) // 10 ** k * 10 ** k)\n', 'from sys import stdin\nc, k = map(int, stdin.readline().split())\nprint((c + 10**k - 1) // 10**k * 10**k)\n']
2022-04-11 23:03:35.158767 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom sys import stdin\nc, k = map(int, stdin.readline().split())\n\nprint((c + 10**k - 1) // 10**k * 10**k)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\na, b = map(int, stdin.readline().split())\n\nprint(a + b)\n"
    }
  ],
  "created": 1649732612,
  "object": "edit"
}
2022-04-11 23:03:35.158964 fix syntax errors 2 ['\nfrom sys import stdin\nc, k = map(int, stdin.readline().split())\n\nprint((c + 10**k - 1) // 10**k * 10**k)\n', '\n\nfrom sys import stdin\na, b = map(int, stdin.readline().split())\n\nprint(a + b)\n']
2022-04-11 23:03:35.158990 size on output set 4
2022-04-11 23:03:35.159005 num operations 2
2022-04-11 23:03:35.159016 size on input set 1
2022-04-11 23:03:38.305590 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nc, k = map(int, input().split()) # c is the price of the item, k is the number of digits after the decimal point\n\nprint((c + 5*10**k - 1)//(10**k) * 10**k)\n"
    },
    {
      "index": 1,
      "text": "\n\na, b = map(int, input().split())\n\nprint((a + 5*10**b - 1)//(10**b) * 10**b)\n"
    }
  ],
  "created": 1649732615,
  "object": "edit"
}
2022-04-11 23:03:38.305751 fix spelling mistakes 2 ['\n\nc, k = map(int, input().split()) # c is the price of the item, k is the number of digits after the decimal point\n\nprint((c + 5*10**k - 1)//(10**k) * 10**k)\n', '\n\na, b = map(int, input().split())\n\nprint((a + 5*10**b - 1)//(10**b) * 10**b)\n']
2022-04-11 23:03:38.305768 size on output set 2
2022-04-11 23:03:38.305773 size on input set 2
2022-04-11 23:03:40.958013 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\na, b = map(int, input().split())\n\nprint((a + 5*10**b - 1)//(10**b) * 10**b)\n"
    },
    {
      "index": 1,
      "text": "\n\na, b = map(int, input().split())\n\nprint((a + 5*10**b - 1)//(10**b) * 10**b) \n"
    }
  ],
  "created": 1649732618,
  "object": "edit"
}
2022-04-11 23:03:40.958298 fix syntax errors 2 ['\na, b = map(int, input().split())\n\nprint((a + 5*10**b - 1)//(10**b) * 10**b)\n', '\n\na, b = map(int, input().split())\n\nprint((a + 5*10**b - 1)//(10**b) * 10**b) \n']
2022-04-11 23:03:43.814803 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# fix syntax errors\n\nc, k = map(int, input().split()) # c is the price of the item, k is the number of digits after the decimal point\n\nprint((c + 5*10**k - 1)//(10**k) * 10**k)\n"
    },
    {
      "index": 1,
      "text": "\n\nc, k = map(int, input().split())  # c is the price of the item, k is the number of digits after the decimal point\n\nprint((c + 5*10**k - 1)//(10**k) * 10**k)\n"
    }
  ],
  "created": 1649732621,
  "object": "edit"
}
2022-04-11 23:03:43.815179 fix syntax errors 2 ['# fix syntax errors\n\nc, k = map(int, input().split()) # c is the price of the item, k is the number of digits after the decimal point\n\nprint((c + 5*10**k - 1)//(10**k) * 10**k)\n', '\n\nc, k = map(int, input().split())  # c is the price of the item, k is the number of digits after the decimal point\n\nprint((c + 5*10**k - 1)//(10**k) * 10**k)\n']
2022-04-11 23:03:43.815211 size on output set 4
