2022-04-11 18:11:07.505704 num operations 2
2022-04-11 18:11:07.505724 size on input set 1
2022-04-11 18:11:15.574708 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n#sets txt to open filename, then sets line to read txt\ntxt = open(filename)\nline = txt.read()\n\n#sets ln to length of line, then sets first to first half of line\n#and second to second half of line\nln = len(line)\nfirst = line[:ln/2]\nsecond = line[ln/2+1:]\n\n#sets second to reversed second, then sets first to reversed first\nsecond = second[::-1]\nfirst = first[::-1]\n\n#sets middle to middle of line, then if first and second are the same\n#and line is the same as reversed line, print yes, otherwise print no\nmiddle = line[ln/2]\nif first == second and line == line[::-1]:\n    print \"Yes\"\nelse:\n    print \"No\"\n"
    },
    {
      "index": 1,
      "text": "\n\n#imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n#sets txt to open filename and read it\ntxt = open(filename)\nline = txt.read()\n\n#sets ln to length of line and middle to middle of line\nln, middle = len(line), line[len(line)/2]\n\nfirst = line[:ln/2][::-1]\n\n#sets second to second half of line and reversed\nsecond = line[ln/2+1:][::-1]\n\n#if first and second are the same and line is the same as reversed line\nif first == second and line == line[::-1]:\n    print \"Yes\"\nelse:\n    print \"No\"\n"
    }
  ],
  "created": 1649715067,
  "object": "edit"
}
2022-04-11 18:11:15.574895 fix spelling mistakes 2 ['\n\n#imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n#sets txt to open filename, then sets line to read txt\ntxt = open(filename)\nline = txt.read()\n\n#sets ln to length of line, then sets first to first half of line\n#and second to second half of line\nln = len(line)\nfirst = line[:ln/2]\nsecond = line[ln/2+1:]\n\n#sets second to reversed second, then sets first to reversed first\nsecond = second[::-1]\nfirst = first[::-1]\n\n#sets middle to middle of line, then if first and second are the same\n#and line is the same as reversed line, print yes, otherwise print no\nmiddle = line[ln/2]\nif first == second and line == line[::-1]:\n    print "Yes"\nelse:\n    print "No"\n', '\n\n#imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n#sets txt to open filename and read it\ntxt = open(filename)\nline = txt.read()\n\n#sets ln to length of line and middle to middle of line\nln, middle = len(line), line[len(line)/2]\n\nfirst = line[:ln/2][::-1]\n\n#sets second to second half of line and reversed\nsecond = line[ln/2+1:][::-1]\n\n#if first and second are the same and line is the same as reversed line\nif first == second and line == line[::-1]:\n    print "Yes"\nelse:\n    print "No"\n']
2022-04-11 18:11:15.574928 size on output set 2
2022-04-11 18:11:15.574935 size on input set 2
2022-04-11 18:11:21.122147 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n#sets txt to open filename and read it\ntxt = open(filename)\nline = txt.read()\n\n#sets ln to length of line and middle to middle of line\nln = len(line)\nmiddle = line[len(line)/2]\n\nfirst = line[:ln/2]\nfirst = first[::-1]\n\n#sets second to second half of line and reversed\nsecond = line[ln/2+1:][::-1]\n\n#if first and second are the same and line is the same as reversed line\nif first == second and line == line[::-1]:\n    print \"Yes\"\nelse:\n    print \"No\"\n"
    },
    {
      "index": 1,
      "text": "\n\n#imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n#sets txt to open filename and read it\ntxt = open(filename)\nline = txt.read()\n\n#sets ln to length of line and middle to middle of line and first to first half of line\nln, middle, first = len(line), line[len(line)/2], line[:ln/2][::-1]\n\n\n\n#sets second to second half of line and reversed\nsecond = line[ln/2+1:][::-1]\n\n#if first and second are the same and line is the same as reversed line\nif first == second and line == line[::-1]:\n    print \"Yes\"\nelse:\n    print \"No\"\n"
    }
  ],
  "created": 1649715075,
  "object": "edit"
}
2022-04-11 18:11:21.122445 fix syntax errors 2 ['\n\n#imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n#sets txt to open filename and read it\ntxt = open(filename)\nline = txt.read()\n\n#sets ln to length of line and middle to middle of line\nln = len(line)\nmiddle = line[len(line)/2]\n\nfirst = line[:ln/2]\nfirst = first[::-1]\n\n#sets second to second half of line and reversed\nsecond = line[ln/2+1:][::-1]\n\n#if first and second are the same and line is the same as reversed line\nif first == second and line == line[::-1]:\n    print "Yes"\nelse:\n    print "No"\n', '\n\n#imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n#sets txt to open filename and read it\ntxt = open(filename)\nline = txt.read()\n\n#sets ln to length of line and middle to middle of line and first to first half of line\nln, middle, first = len(line), line[len(line)/2], line[:ln/2][::-1]\n\n\n\n#sets second to second half of line and reversed\nsecond = line[ln/2+1:][::-1]\n\n#if first and second are the same and line is the same as reversed line\nif first == second and line == line[::-1]:\n    print "Yes"\nelse:\n    print "No"\n']
2022-04-11 18:11:28.122041 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n# sets txt to open filename, then sets line to read txt\ntxt = open(filename)\nline = txt.read()\n\n# sets ln to length of line, then sets first to first half of line\n# and second to second half of line\nln = len(line)\nfirst = line[:ln/2]\nsecond = line[ln/2+1:]\n\n# sets second to reversed second, then sets first to reversed first\nsecond = second[::-1]\nfirst = first[::-1]\n\n# sets middle to middle of line, then if first and second are the same\n# and line is the same as reversed line, print yes, otherwise print no\nmiddle = line[ln/2]\nif first == second and line == line[::-1]:\n    print \"Yes\"\nelse:\n    print \"No\"\n"
    },
    {
      "index": 1,
      "text": "\n\n#imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n#sets line to open filename, then sets line to read line\nline = open(filename)\nline = line.read()\n\n#sets ln to length of line, then sets first to first half of line\n#and second to second half of line\nln = len(line)\nfirst = line[:ln/2]\nsecond = line[ln/2+1:]\n\n#sets second to reversed second, then sets first to reversed first\nsecond = second[::-1]\nfirst = first[::-1]\n\n#sets middle to middle of line, then if first and second are the same\n#and line is the same as reversed line, print yes, otherwise print no\nmiddle = line[ln/2]\nif first == second and line == line[::-1]:\n    print \"Yes\"\nelse:\n    print \"No\"\n"
    }
  ],
  "created": 1649715081,
  "object": "edit"
}
2022-04-11 18:11:28.122196 fix syntax errors 2 ['\n\n# imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n# sets txt to open filename, then sets line to read txt\ntxt = open(filename)\nline = txt.read()\n\n# sets ln to length of line, then sets first to first half of line\n# and second to second half of line\nln = len(line)\nfirst = line[:ln/2]\nsecond = line[ln/2+1:]\n\n# sets second to reversed second, then sets first to reversed first\nsecond = second[::-1]\nfirst = first[::-1]\n\n# sets middle to middle of line, then if first and second are the same\n# and line is the same as reversed line, print yes, otherwise print no\nmiddle = line[ln/2]\nif first == second and line == line[::-1]:\n    print "Yes"\nelse:\n    print "No"\n', '\n\n#imports script, filename\nfrom sys import argv\nscript, filename = argv\n\n#sets line to open filename, then sets line to read line\nline = open(filename)\nline = line.read()\n\n#sets ln to length of line, then sets first to first half of line\n#and second to second half of line\nln = len(line)\nfirst = line[:ln/2]\nsecond = line[ln/2+1:]\n\n#sets second to reversed second, then sets first to reversed first\nsecond = second[::-1]\nfirst = first[::-1]\n\n#sets middle to middle of line, then if first and second are the same\n#and line is the same as reversed line, print yes, otherwise print no\nmiddle = line[ln/2]\nif first == second and line == line[::-1]:\n    print "Yes"\nelse:\n    print "No"\n']
2022-04-11 18:11:28.122306 size on output set 4
2022-04-11 18:11:28.122320 num operations 2
2022-04-11 18:11:28.122326 size on input set 1
2022-04-11 18:11:30.388081 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "input_str = input()\n\nis_palindrome = True\nfor i in range(int(len(input_str) / 2)):\n    if input_str[i] != input_str[-i - 1]:\n        is_palindrome = False\nif is_palindrome:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\ninput_str = input()\n\nis_palindrome = True\nfor i in range(int(len(input_str) / 2)):\n    if input_str[i] != input_str[-i - 1]:\n        is_palindrome = False\n\nif is_palindrome:\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1649715088,
  "object": "edit"
}
2022-04-11 18:11:30.388282 fix spelling mistakes 2 ["input_str = input()\n\nis_palindrome = True\nfor i in range(int(len(input_str) / 2)):\n    if input_str[i] != input_str[-i - 1]:\n        is_palindrome = False\nif is_palindrome:\n    print('Yes')\nelse:\n    print('No')\n", "\ninput_str = input()\n\nis_palindrome = True\nfor i in range(int(len(input_str) / 2)):\n    if input_str[i] != input_str[-i - 1]:\n        is_palindrome = False\n\nif is_palindrome:\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-11 18:11:30.388306 size on output set 2
2022-04-11 18:11:30.388313 size on input set 2
2022-04-11 18:11:33.050301 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ninput_str = input('Enter a string: ')\n\nis_palindrome = True\nfor i in range(int(len(input_str) / 2)):\n    if input_str[i] != input_str[-i - 1]:\n        is_palindrome = False\n\nif is_palindrome:\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "input_str = input()\n\nis_palindrome = True\nfor i in range(int(len(input_str) / 2)):\n    if input_str[i] != input_str[-i-1]:\n        is_palindrome = False\n\nif is_palindrome:\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1649715090,
  "object": "edit"
}
2022-04-11 18:11:33.050529 fix syntax errors 2 ["\ninput_str = input('Enter a string: ')\n\nis_palindrome = True\nfor i in range(int(len(input_str) / 2)):\n    if input_str[i] != input_str[-i - 1]:\n        is_palindrome = False\n\nif is_palindrome:\n    print('Yes')\nelse:\n    print('No')\n", "input_str = input()\n\nis_palindrome = True\nfor i in range(int(len(input_str) / 2)):\n    if input_str[i] != input_str[-i-1]:\n        is_palindrome = False\n\nif is_palindrome:\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-11 18:11:36.000445 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "input_str = input(\"Enter a string: \")\n\nis_palindrome = True\nfor i in range(int(len(input_str) / 2)):\n    if input_str[i] != input_str[-i - 1]:\n        is_palindrome = False\nif is_palindrome:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    },
    {
      "index": 1,
      "text": "input_str = input(\"Enter string: \")\n\nis_palindrome = True\nfor i in range(int(len(input_str) / 2)):\n    if input_str[i] != input_str[-i - 1]:\n        is_palindrome = False\nif is_palindrome:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n"
    }
  ],
  "created": 1649715093,
  "object": "edit"
}
2022-04-11 18:11:36.000584 fix syntax errors 2 ['input_str = input("Enter a string: ")\n\nis_palindrome = True\nfor i in range(int(len(input_str) / 2)):\n    if input_str[i] != input_str[-i - 1]:\n        is_palindrome = False\nif is_palindrome:\n    print("Yes")\nelse:\n    print("No")\n', 'input_str = input("Enter string: ")\n\nis_palindrome = True\nfor i in range(int(len(input_str) / 2)):\n    if input_str[i] != input_str[-i - 1]:\n        is_palindrome = False\nif is_palindrome:\n    print("Yes")\nelse:\n    print("No")\n']
2022-04-11 18:11:36.000603 size on output set 4
