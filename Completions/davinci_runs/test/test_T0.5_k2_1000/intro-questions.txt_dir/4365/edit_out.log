2022-04-11 19:40:27.897260 num operations 2
2022-04-11 19:40:27.897300 size on input set 1
2022-04-11 19:40:31.161994 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nk = int(input())\n\neven_count = k // 2 + 1 if k % 2 != 0 else k // 2\nodd_count = k // 2\n\nprint(even_count * odd_count)\n"
    },
    {
      "index": 1,
      "text": "\nk = int(input())\n\neven_count = k // 2\nodd_count = k // 2 + 1 if k % 2 != 0 else k // 2\n\nprint(even_count * odd_count)\n"
    }
  ],
  "created": 1649720428,
  "object": "edit"
}
2022-04-11 19:40:31.162255 fix spelling mistakes 2 ['\n\nk = int(input())\n\neven_count = k // 2 + 1 if k % 2 != 0 else k // 2\nodd_count = k // 2\n\nprint(even_count * odd_count)\n', '\nk = int(input())\n\neven_count = k // 2\nodd_count = k // 2 + 1 if k % 2 != 0 else k // 2\n\nprint(even_count * odd_count)\n']
2022-04-11 19:40:31.162286 size on output set 2
2022-04-11 19:40:31.162292 size on input set 2
2022-04-11 19:40:33.898438 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nk = int(input())\n\neven_count = k // 2 + 1 if k % 2 != 0 else k // 2 + 1\nodd_count = k // 2\n\nprint(even_count * odd_count)\n"
    },
    {
      "index": 1,
      "text": "\nk = int(input())\neven_count = k // 2 + 1 if k % 2 != 0 else k // 2\nodd_count = k // 2\nprint(even_count * odd_count)\n"
    }
  ],
  "created": 1649720431,
  "object": "edit"
}
2022-04-11 19:40:33.898849 fix syntax errors 2 ['\n\nk = int(input())\n\neven_count = k // 2 + 1 if k % 2 != 0 else k // 2 + 1\nodd_count = k // 2\n\nprint(even_count * odd_count)\n', '\nk = int(input())\neven_count = k // 2 + 1 if k % 2 != 0 else k // 2\nodd_count = k // 2\nprint(even_count * odd_count)\n']
2022-04-11 19:40:35.862205 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "k = int(input())\n\neven_count = k // 2\nodd_count = k // 2 + 1 if k % 2 != 0 else k // 2\n\nprint(even_count * odd_count)\n"
    },
    {
      "index": 1,
      "text": "k = int(input())\n\neven_count = k // 2\nodd_count = k // 2 + 1 if k % 2 != 0 else k // 2\n\nprint(even_count * odd_count)\n"
    }
  ],
  "created": 1649720434,
  "object": "edit"
}
2022-04-11 19:40:35.862501 fix syntax errors 2 ['k = int(input())\n\neven_count = k // 2\nodd_count = k // 2 + 1 if k % 2 != 0 else k // 2\n\nprint(even_count * odd_count)\n', 'k = int(input())\n\neven_count = k // 2\nodd_count = k // 2 + 1 if k % 2 != 0 else k // 2\n\nprint(even_count * odd_count)\n']
2022-04-11 19:40:35.862533 size on output set 3
2022-04-11 19:40:35.862576 num operations 2
2022-04-11 19:40:35.862588 size on input set 1
2022-04-11 19:40:38.185301 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# -*- coding: utf-8 -*-\n\n# AtCoder Beginner Contest 085\n# Problem B\n\nif __name__ == '__main__':\n    k = int(input())\n    result = 0\n\n    for i in range(1, k + 1):\n        if i % 2 == 0:\n            result += 1\n\n    print(result)\n"
    },
    {
      "index": 1,
      "text": "\n\n# -*- coding: utf-8 -*-\n\n# AtCoder Beginner Contest\n# Problem A\n\nif __name__ == '__main__':\n    k = int(input())\n    result = 0\n\n    for i in range(1, k + 1):\n        if i % 2 == 0:\n            result += 1\n\n    print(result)\n"
    }
  ],
  "created": 1649720436,
  "object": "edit"
}
2022-04-11 19:40:38.185621 fix spelling mistakes 2 ["\n\n# -*- coding: utf-8 -*-\n\n# AtCoder Beginner Contest 085\n# Problem B\n\nif __name__ == '__main__':\n    k = int(input())\n    result = 0\n\n    for i in range(1, k + 1):\n        if i % 2 == 0:\n            result += 1\n\n    print(result)\n", "\n\n# -*- coding: utf-8 -*-\n\n# AtCoder Beginner Contest\n# Problem A\n\nif __name__ == '__main__':\n    k = int(input())\n    result = 0\n\n    for i in range(1, k + 1):\n        if i % 2 == 0:\n            result += 1\n\n    print(result)\n"]
2022-04-11 19:40:38.185653 size on output set 2
2022-04-11 19:40:38.185660 size on input set 2
2022-04-11 19:40:43.461284 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# -*- coding: utf-8 -*-\n\n# AtCoder Beginner Contest 086\n# Problem A\n\nif __name__ == '__main__':\n    a, b = list(map(int, input().split()))\n    print('Odd' if (a * b) % 2 == 1 else 'Even')\n"
    },
    {
      "index": 1,
      "text": "\n\n# -*- coding: utf-8 -*-\n\n# AtCoder Beginner Contest 086\n# Problem A\n\nif __name__ == '__main__':\n    a, b = list(map(int, input().split()))\n\n    if (a * b) % 2 == 0:\n        print('Even')\n    else:\n        print('Odd')\n"
    }
  ],
  "created": 1649720438,
  "object": "edit"
}
2022-04-11 19:40:43.461539 fix syntax errors 2 ["\n\n# -*- coding: utf-8 -*-\n\n# AtCoder Beginner Contest 086\n# Problem A\n\nif __name__ == '__main__':\n    a, b = list(map(int, input().split()))\n    print('Odd' if (a * b) % 2 == 1 else 'Even')\n", "\n\n# -*- coding: utf-8 -*-\n\n# AtCoder Beginner Contest 086\n# Problem A\n\nif __name__ == '__main__':\n    a, b = list(map(int, input().split()))\n\n    if (a * b) % 2 == 0:\n        print('Even')\n    else:\n        print('Odd')\n"]
2022-04-11 19:40:49.571133 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# -*- coding: utf-8 -*-\n\n# AtCoder Beginner Contest 085\n# Problem B\n\nif __name__ == '__main__':\n    n = int(input())\n    d = [int(input()) for _ in range(n)]\n    result = 0\n\n    for i in range(n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                result += (d[i] + d[j] + d[k])\n\n    print(result)\n"
    },
    {
      "index": 1,
      "text": "\n\n# -*- coding: utf-8 -*- \n\n# AtCoder Beginner Contest \n# Problem A \n\nif __name__ == '__main__':\n    a, b = list(map(int, input().split()))\n\n    if a * b % 2 == 0:\n        print('Even')\n    else:\n        print('Odd')\n"
    }
  ],
  "created": 1649720443,
  "object": "edit"
}
2022-04-11 19:40:49.571447 fix syntax errors 2 ["\n\n# -*- coding: utf-8 -*-\n\n# AtCoder Beginner Contest 085\n# Problem B\n\nif __name__ == '__main__':\n    n = int(input())\n    d = [int(input()) for _ in range(n)]\n    result = 0\n\n    for i in range(n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                result += (d[i] + d[j] + d[k])\n\n    print(result)\n", "\n\n# -*- coding: utf-8 -*- \n\n# AtCoder Beginner Contest \n# Problem A \n\nif __name__ == '__main__':\n    a, b = list(map(int, input().split()))\n\n    if a * b % 2 == 0:\n        print('Even')\n    else:\n        print('Odd')\n"]
2022-04-11 19:40:49.571474 size on output set 4
