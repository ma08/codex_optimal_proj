["\n\ndef main():\n    \"\"\"\n    The main function\n    \"\"\"\n    # Read the input\n    n1, n2 = [int(x) for x in input().split()]  # pylint: disable=unused-variable\n    row1 = list(input())\n    row2 = list(input())\n    t = int(input())\n\n    # The ants will stay in their original positions if t is even\n    if t % 2 == 0:\n        print(\"\".join(row1 + row2))\n    # Otherwise, the ants will swap places\n    else:\n        print(\"\".join(row2 + row1))\n\nif __name__ == \"__main__\":\n    main()\n", "\n# SOLUTION\n\n# Read input\nn1, n2 = [int(x) for x in input().split()]\na = [x for x in input()]\nb = [x for x in input()]\nt = int(input())\n\n# Reverse lists if needed\nif t % 2 == 1:\n    a, b = b, a\n\n# Swap ants \nfor i in range(t // 2):\n    a.insert(i + 1, b[i])\n    b.insert(i + 1, a[-i - 1])\n    a.pop(-i - 1)\n    b.pop(i)\n\n# Print result\nprint(''.join(a + b))\n", "\n\ndef main():\n    \"\"\"\n    The main function\n    \"\"\"\n    # Read the input\n    row1 = list(input())\n    row2 = list(input())\n\n    # The ants will stay in their original positions if t is even\n    print(\"\".join(row1 + row2))\n    # Otherwise, the ants will swap places\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n\n    # Get the number of ants in the first and second rows\n    num_ants_first_row, num_ants_second_row = map(int, input().split())\n\n    # Get the order of ants in the first and second rows\n    order_ants_first_row = input()\n    order_ants_second_row = input()\n\n    # Get the number of seconds\n    num_seconds = int(input())\n\n    # Initialize the ant order\n    ant_order = \"\"\n\n    # If the number of seconds is odd, reverse the order of the ants\n    if num_seconds % 2 == 1:\n        order_ants_first_row = order_ants_first_row[::-1]\n        order_ants_second_row = order_ants_second_row[::-1]\n\n    # Get the number of ants that will be affected\n    num_ants_affected = min(num_ants_first_row, num_ants_second_row)\n\n    for i in range(num_ants_affected):\n        ant_order += order_ants_first_row[i]\n        ant_order += order_ants_second_row[i]\n\n    # If there are remaining ants in the first row, add them to the ant order\n    for i in range(num_ants_affected, num_ants_first_row):\n        ant_order += order_ants_first_row[i]\n\n    # If there are remaining ants in the second row, add them to the ant order\n    for i in range(num_ants_affected, num_ants_second_row):\n        ant_order += order_ants_second_row[i]\n\n    # Print the ant order\n    print(ant_order)\n\nif __name__ == \"__main__\":\n    main()\n", "\nN1, N2 = map(int, input().split())\nline1 = input()\nline2 = input()\nT = int(input())\n\ndef swap(line, i):\n    if i >= len(line):\n        return line\n    line = list(line)\n    line[i], line[i + 1] = line[i + 1], line[i]\n    return ''.join(line)\n\nfor _ in range(T):\n    line1 = swap(line1, 0)\n    line2 = swap(line2, len(line2) - 1)\n    if len(line1) == 0 or len(line2) == 0:\n        break\n    if line1[0] > line2[len(line2) - 1]:\n        line1 = swap(line1, 0)\n        line2 = swap(line2, len(line2) - 1)\n    elif line1[0] < line2[len(line2) - 1]:\n        line1 = swap(line1, 1)\n        line2 = swap(line2, len(line2) - 2)\n\nprint(line1 + line2)\n", "\n\n\ndef main():\n    \"\"\"Ants.\"\"\"\n    num_1, num_2, time = map(int, input().split())\n    row_1, row_2 = input(), input()\n    for _ in range(time):\n        for i in range(min(num_1, num_2)):\n            row_1[i], row_2[i] = row_2[i], row_1[i]  # swap\n    print(row_1)\n    print(row_2)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef swap(s, i, j):  # swap s[i] and s[j] O(n)\n    return s[:i] + s[j] + s[i+1:j] + s[i] + s[j+1:]\n\nn1, n2 = map(int, input().split())  # O(1)\nrow1 = input()  # O(n)\nrow2 = input()  # O(n)\nt = int(input())  # O(1)\n\nfor i in range(t):\n    if row1[0] != row2[0]:\n        row1 = swap(row1, 0, 1)\n        row2 = swap(row2, 0, 1)\n    else:\n        row1 = swap(row1, 0, 1)\n        row2 = swap(row2, 1, 2)\n\nprint(row1 + row2)\n", "\n\n# SOLUTION \n\n# Read input\nn1, n2 = [int(x) for x in input().split()]\na = [x for x in input()]\nb = [x for x in input()]\nt = int(input())\n\n# Reverse lists if needed\nif t % 2 == 1:\n    a, b = b, a\n\n# Swap ants in lists\nfor i in range(t // 2):\n    a.insert(i + 1, b[i])\n    b.insert(i + 1, a[-i - 1])\n    a.pop(-i - 1)\n    b.pop(i)\n\n# Print result\nprint(''.join(a + b))\n", "\n\ndef main():\n    \"\"\"Ants.\"\"\"\n    num_1 = int(input())\n    num_2 = int(input())\n    first_row = input()\n    second_row = input()\n    time = int(input())\n    row_1 = []\n    row_2 = []\n    for i in range(num_1):\n        row_1.append(first_row[i])\n    for i in range(num_2):\n        row_2.append(second_row[i])\n    for i in range(time):\n        for i in range(min(num_1, num_2)):\n            row_1[i], row_2[i] = row_2[i], row_1[i]\n    print(row_1)\n    print(row_2)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    \"\"\"Ant\"\"\"\n    input_ant1 = input()\n    input_ant2 = input()\n    input_time = int(input())\n    if input_time % 2 == 0:\n        print(input_ant1 + input_ant2)\n    else:\n        print(input_ant2 + input_ant1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# SOLUTION\n\nn1, n2 = map(int, input().split())  # read input\n\nrow1 = input()  # read input\nrow2 = input()\n\nt = int(input())  # read input\n\nrow1 = list(row1)  # convert to list\nrow2 = list(row2)\n\nfor i in range(t):  # loop t times\n    if len(row1) > 0 and len(row2) > 0:  # check if both rows are not empty\n        if row1[0] < row2[0]:\n            row1.append(row1[0])\n            row1.append(row2[0])\n            row1.pop(0)\n            row2.pop(0)\n        else:\n            row2.append(row2[0])\n            row2.append(row1[0])\n            row2.pop(0)\n            row1.pop(0)\n\nprint(''.join(row1 + row2))\n", "\n\ndef main():\n    \"\"\"Ant\"\"\"\n    input_n1 = int(input())\n    input_n2 = int(input())\n    input_ant1 = input()\n    input_ant2 = input()\n    input_time = int(input())\n    if input_time % 2 == 0:\n        print(input_ant1 + input_ant2)\n    else:\n        print(input_ant2 + input_ant1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n# N1, N2 = (int(x) for x in input().split())\n# line1 = input()\n# line2 = input()\n# T = int(input())\n\n# def swap(line, i):\n#     if i >= len(line):\n#         return line\n#     line = list(line)\n#     line[i], line[i+1] = line[i+1], line[i]\n#     return ''.join(line)\n\n# for _ in range(T):\n#     line1 = swap(line1, 0)\n#     line2 = swap(line2, -1)\n#     if len(line1) == 0 or len(line2) == 0:\n#         break\n#     if line1[0] > line2[-1]:\n#         line1 = swap(line1, 0)\n#         line2 = swap(line2, -1)\n#     elif line1[0] < line2[-1]:\n#         line1 = swap(line1, 1)\n#         line2 = swap(line2, -2)\n\n# print(line1 + line2)\n\n# N = int(input())\n# A = [int(x) for x in input().split()]\n# B = [int(x) for x in input().split()]\n\n# def solve(A, B):\n#     for i in range(len(A)):\n#         if A[i] > B[i]:\n#             return False\n#     return True\n\n# if solve(A, B):\n#     print('Yes')\n# else:\n#     print('No')\n\n# N = int(input())\n# A = [int(x) for x in input().split()]\n# B = [int(x) for x in input().split()]\n\n# def solve(A, B):\n#     for i in range(len(A)):\n#         if A[i] < B[i]:\n#             return False\n#     return True\n\n# if solve(A, B):\n#     print('Yes')\n# else:\n#     print('No')\n\n# N = int(input())\n# A = [int(x) for x in input().split()]\n# B = [int(x) for x in input().split()]\n\n# def solve(A, B):\n#     for i in range(len(A)):\n#         if A[i] == B[i]:\n#             return False\n#     return True\n\n# if solve(A, B):\n#     print('Yes')\n# else:\n#     print('No')\n\n# N = int(input())\n# A = [int(x) for x in input().split()]\n# B = [int(x) for x in input().split()]\n\n# def solve(A, B):\n#     for i in range(len(A)):\n#         if A[i] != B[i]:\n#             return False\n#     return True\n\n# if solve(A, B):\n#     print('Yes')\n# else:\n#     print('No')\n\n# N = int(input())\n# A = [int(x) for x in input().split()]\n# B = [int(x) for x in input().split()]\n\n# def solve(A, B):\n#     for i in range(len(A)):\n#         if A[i] <= B[i]:\n#             return False\n#     return True\n\n# if solve(A, B):\n#     print('Yes')\n# else:\n#     print('No')\n\n# N = int(input())\n# A = [int(x) for x in input().split()]\n# B = [int(x) for x in input().split()]\n\n# def solve(A, B):\n#     for i in range(len(A)):\n#         if A[i] >= B[i]:\n#             return False\n#     return True\n\n# if solve(A, B):\n#     print('Yes')\n# else:\n#     print('No')\n\n# N = int(input())\n# A = [int(x) for x in input().split()]\n# B = [int(x) for x in input().split()]\n\n# def solve(A, B):\n#     for i in range(len(A)):\n#         if A[i] < B[i]:\n#             return False\n#     return True\n\n# if solve(A, B):\n#     print('Yes')\n# else:\n#     print('No')\n\n# N = int(input())\n# A = [int(x) for x in input().split()]\n# B = [int(x) for x in input().split()]\n\n# def solve(A, B):\n#     for i in range(len(A)):\n#         if A[i] > B[i]:\n#             return False\n#     return True\n\n# if solve(A, B):\n#     print('Yes')\n# else:\n#     print('No')\n\n# N = int(input())\n# A = [int(x) for x in input().split()]\n# B = [int(x) for x in input().split()]\n\n# def solve(A, B):\n#     for i in range(len(A)):\n#         if A[i] >= B[i]:\n#             return False\n#     return True\n\n# if solve(A, B):\n#     print('Yes')\n# else:\n#     print('No')\n\n# N = int(input())\n# A = [int(x) for x in input().split()]\n# B = [int(x) for x in input().split()]\n\n# def solve(A, B):\n#     for i in range(len(A)):\n#         if A[i] <= B[i]:\n#             return False\n#     return True\n\n# if solve(A, B):\n#     print('Yes')\n# else:\n#     print('No')\n", "\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n\n    # Get the number of ants in the first and second rows\n    num_ants_first_row, num_ants_second_row = map(int, input().split())\n\n    # Get the order of the ants in the first and second rows\n    order_ants_first_row = input()\n    order_ants_second_row = input()\n\n    # Get the number of seconds\n    num_seconds = int(input())\n\n    # Initialize the ant order\n    ant_order = \"\"\n\n    # If the number of seconds is odd, reverse the order of the ants\n    if num_seconds % 2 == 1:\n        order_ants_first_row = order_ants_first_row[::-1]\n        order_ants_second_row = order_ants_second_row[::-1]\n\n    # Get the number of ants that will be affected\n    num_ants_affected = min(num_ants_first_row, num_ants_second_row)\n\n    for i in range(num_ants_affected):\n        ant_order += order_ants_first_row[i]\n        ant_order += order_ants_second_row[i]\n\n    # If there are remaining ants in the first row, add them to the ant order\n    for i in range(num_ants_affected, num_ants_first_row):\n        ant_order += order_ants_first_row[i]\n\n    # If there are remaining ants in the second row, add them to the ant order\n    for i in range(num_ants_affected, num_ants_second_row):\n        ant_order += order_ants_second_row[i]\n\n    # Print the ant order\n    print(ant_order)\n\nif __name__ == \"__main__\":\n    main()\n", "\n# SOLUTION\n\ndef swap_ants(a, b, t):\n    \"\"\"\n    Swaps ants between two lines.\n\n    :param a: List of ants in line A\n    :param b: List of ants in line B\n    :param t: Number of seconds\n    :return: List of ants in line A and B after t seconds\n    \"\"\"\n\n    # Reverse lists if needed\n    if t % 2 == 1:\n        a, b = b, a\n\n    # Swap ants in lists\n    for i in range(t // 2):\n        a.insert(i + 1, b[i])\n        b.insert(i + 1, a[-i - 1])\n        a.pop(-i - 1)\n        b.pop(i)\n\n    return a + b\n\n\nif __name__ == '__main__':\n    # Read input\n    n1, n2 = [int(x) for x in input().split()]\n    a = [x for x in input()]\n    b = [x for x in input()]\n    t = int(input())\n\n    # Print result\n    print(''.join(swap_ants(a, b, t)))\n", "\ndef swap(s, i, j):\n    return s[:i] + s[j] + s[i+1:j] + s[i] + s[j+1:len(s)]\n\nn1, n2 = map(int, input().split())\nrow1 = input()\nrow2 = input()\nt = int(input())\n\nfor i in range(t):\n    if row1[0] != row2[0]:\n        row1 = swap(row1, 0, 1)\n        row2 = swap(row2, 0, 1)\n    else:\n        row1 = swap(row1, 0, 1)\n        row2 = swap(row2, 1, 2)\n\nprint(row1 + row2)\n", "\nN1, N2 = map(int, input().split())\nline1 = input()\nline2 = input()\nT = int(input())\n\ndef swap(line, i):\n    if i >= len(line):\n        return line\n    line = list(line)\n    line[i], line[i+1] = line[i+1], line[i]\n    return ''.join(line)\n\nfor _ in range(T):\n    line1 = swap(line1, 0)\n    line2 = swap(line2, -1)\n    if len(line1) == 0 or len(line2) == 0:\n        break\n    if line1[0] > line2[-1]:\n        line1 = swap(line1, 0)\n        line2 = swap(line2, -1)\n    elif line1[0] < line2[-1]:\n        line1 = swap(line1, 1)\n        line2 = swap(line2, -2)\n\nprint(line1 + line2)\n", "def swap(s, i, j):\n    return s[:i] + s[j] + s[i+1:j] + s[i] + s[j+1:len(s)]\n\nn1, n2 = map(int, input().split())\nrow1 = input()\nrow2 = input()\nt = int(input())\n\nfor i in range(t):\n    if row1[0] != row2[0]:\n        row1 = swap(row1, 0, 1)\n        row2 = swap(row2, 0, 1)\n    else:\n        row1 = swap(row1, 0, 1)\n        row2 = swap(row2, 1, 2)\n\nprint(row1 + row2)\n", "\n\ndef swap(s, i, j):  # swap s[i] and s[j]\n    return s[:i] + s[j] + s[i+1:j] + s[i] + s[j+1:]\n\nn1, n2 = map(int, input().split())\nrow1 = input()\nrow2 = input()\nt = int(input())\n\nfor i in range(t):\n    if row1[0] != row2[0]:\n        row1 = swap(row1, 0, 1)\n        row2 = swap(row2, 0, 1)\n    else:\n        row1 = swap(row1, 0, 1)\n        row2 = swap(row2, 1, 2)\n\nprint(row1 + row2)\n", "\n\n# SOLUTION\n\nn1, n2 = map(int, input().split())\n\nrow1 = input()\nrow2 = input()\n\nt = int(input())\n\nrow1 = list(row1)\nrow2 = list(row2)\n\nfor i in range(t):\n    if len(row1) > 0 and len(row2) > 0:\n        if row1[0] < row2[0]:\n            row1.append(row1[0])\n            row1.append(row2[0])\n            row1.pop(0)\n            row2.pop(0)\n        else:\n            row2.append(row2[0])\n            row2.append(row1[0])\n            row2.pop(0)\n            row1.pop(0)\n\nprint(''.join(row1 + row2))\n", "\ndef swap(line, i):\n    if i >= len(line) - 1:\n        return line\n    line = list(line)\n    line[i], line[i+1] = line[i+1], line[i]\n    return ''.join(line)\n\nN1, N2 = [int(x) for x in input().split()]\nline1 = list(input())\nline2 = list(input())\nT = int(input())\n\nfor _ in range(T):\n    if len(line1) == 0 or len(line2) == 0 or line1[0] == line2[-1]:\n        break\n\n    if line1[0] > line2[-1]:\n        line1 = swap(line1, 1)\n        line2 = swap(line2, -2)\n    elif line1[0] < line2[-1]:\n        line1 = swap(line1, 0)\n        line2 = swap(line2, -1)\n\nprint(''.join(line1 + line2))\n", "\n# SOLUTION\n\n# Read input\nn1, n2 = [int(x) for x in input().split()]\na = [x for x in input()]\nb = [x for x in input()]\nt = int(input())\n\n# Reverse lists if needed\nif t % 2 == 1:\n    a, b = b, a\n\n# Swap ants\nfor i in range(t // 2):\n    a.insert(i + 1, b[i])\n    b.insert(i + 1, a[-i - 1])\n    a.pop(-i - 1)\n    b.pop(i)\n\n# Print result\nprint(''.join(a + b))\n"]