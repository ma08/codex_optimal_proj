["\nprint(1)\n", "\n\nA, B, C, K = map(int, input().split())  # \u5165\u529b\n# A, B, C, K = 2, 1, 1, 3  # \u5165\u529b\n\nif K <= A:\n    print(K)  # \u51fa\u529b\nelif K <= A+B:\n    print(A)  # \u51fa\u529b\nelse:\n    print(A - (K - A - B))  # \u51fa\u529b\n", "from operator import itemgetter\n\ndef get_max_possible_sum(cards):\n    cards.sort(key=itemgetter(1), reverse=True)\n    return sum(card[1] for card in cards[:K])\n\nA, B, C, K = map(int, input().split())  # \u5165\u529b\ncards = [('A', A), ('B', B), ('C', C)]\nprint(get_max_possible_sum(cards))\n", "from operator import itemgetter\n\ndef get_max_possible_sum(cards):\n    cards.sort(key=itemgetter(1), reverse=True) # sort cards by the second element of each tuple\n    return sum(card[1] for card in cards[:K]) # return the sum of the first K cards\n\nA, B, C, K = map(int, input().split())\ncards = [('A', A), ('B', B), ('C', C)]\nprint(get_max_possible_sum(cards))\n", "\nA, B, C, K = map(int, input().split())\n# A, B, C, K = 2, 1, 1, 3\n\nif K <= A:\n    print(K)\nelif K <= A+B:\n    print(A)\nelse:\n    print(A - (K - A - B))\n"]