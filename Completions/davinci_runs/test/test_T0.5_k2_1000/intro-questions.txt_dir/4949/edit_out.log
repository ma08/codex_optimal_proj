2022-04-12 03:42:43.967917 num operations 2
2022-04-12 03:42:43.967948 size on input set 1
2022-04-12 03:42:47.854644 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match = int(input())\n        if match <= w or match <= h or match ** 2 <= w ** 2 + h ** 2: # \u0434\u043b\u044f \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u044b \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u044c\u043d\u044b \u043e\u0441\u044f\u043c \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\n            print(\"DA\")\n        else:\n            print(\"NE\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match = int(input())\n        if match <= w or match <= h or match ** 2 <= w ** 2 + h ** 2:  # \u0441\u0442\u043e\u0440\u043e\u043d\u044b \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0430 \u0438\u043b\u0438 \u0434\u0438\u0430\u0433\u043e\u043d\u0430\u043b\u044c \u043c\u0435\u043d\u044c\u0448\u0435 \u0434\u043b\u0438\u043d\u044b \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u0430\n            print(\"DA\")\n        else:\n            print(\"NE\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649749364,
  "object": "edit"
}
2022-04-12 03:42:47.854833 fix spelling mistakes 2 ['\n\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match = int(input())\n        if match <= w or match <= h or match ** 2 <= w ** 2 + h ** 2: # для прямоугольника стороны которого параллельны осям координат\n            print("DA")\n        else:\n            print("NE")\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match = int(input())\n        if match <= w or match <= h or match ** 2 <= w ** 2 + h ** 2:  # стороны квадрата или диагональ меньше длины прямоугольника\n            print("DA")\n        else:\n            print("NE")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 03:42:47.854889 size on output set 2
2022-04-12 03:42:47.854897 size on input set 2
2022-04-12 03:42:51.661766 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match = int(input())\n        if match <= w or match <= h or match ** 2 <= w ** 2 + h ** 2:\n            print(\"DA\")\n        else:\n            print(\"NE\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match = int(input())\n        if match <= w or match <= h or match ** 2 <= w ** 2 + h ** 2:\n            print(\"DA\")\n        else:\n            print(\"NE\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649749368,
  "object": "edit"
}
2022-04-12 03:42:51.661903 fix syntax errors 2 ['\n\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match = int(input())\n        if match <= w or match <= h or match ** 2 <= w ** 2 + h ** 2:\n            print("DA")\n        else:\n            print("NE")\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match = int(input())\n        if match <= w or match <= h or match ** 2 <= w ** 2 + h ** 2:\n            print("DA")\n        else:\n            print("NE")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 03:42:55.562502 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match = int(input())\n        if match <= w or match <= h or match ** 2 <= w ** 2 + h ** 2:\n            print(\"DA\")\n        else:\n            print(\"NE\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match = int(input())\n        if match <= w or match <= h or match ** 2 <= w ** 2 + h ** 2:\n            print(\"DA\")\n        else:\n            print(\"NE\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649749371,
  "object": "edit"
}
2022-04-12 03:42:55.562913 fix syntax errors 2 ['\n\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match = int(input())\n        if match <= w or match <= h or match ** 2 <= w ** 2 + h ** 2:\n            print("DA")\n        else:\n            print("NE")\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, w, h = map(int, input().split())\n    for i in range(n):\n        match = int(input())\n        if match <= w or match <= h or match ** 2 <= w ** 2 + h ** 2:\n            print("DA")\n        else:\n            print("NE")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 03:42:55.563017 size on output set 1
2022-04-12 03:42:55.563083 num operations 2
2022-04-12 03:42:55.563100 size on input set 1
2022-04-12 03:42:58.396920 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nN, W, H = map(int, input().split())\nfor i in range(N):\n    if int(input()) <= max(W, H):\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 1,
      "text": "\n\nN, W, H = map(int, input().split())  # \u0447\u0438\u0442\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430\nfor i in range(N):\n    if int(input()) <= max(W, H):\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    }
  ],
  "created": 1649749375,
  "object": "edit"
}
2022-04-12 03:42:58.397059 fix spelling mistakes 2 ['\nN, W, H = map(int, input().split())\nfor i in range(N):\n    if int(input()) <= max(W, H):\n        print("DA")\n    else:\n        print("NE")\n', '\n\nN, W, H = map(int, input().split())  # читаем данные из файла\nfor i in range(N):\n    if int(input()) <= max(W, H):\n        print("DA")\n    else:\n        print("NE")\n']
2022-04-12 03:42:58.397089 size on output set 2
2022-04-12 03:42:58.397101 size on input set 2
2022-04-12 03:43:03.710909 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\nwith open(\"input.txt\", \"r\") as f:\n    N, W, H = map(int, f.readline().split())  # \u0447\u0438\u0442\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430\n    for i in range(N):\n        if int(f.readline()) <= max(W, H):\n            print(\"DA\")\n        else:\n            print(\"NE\")\n"
    },
    {
      "index": 1,
      "text": "\n\nN, W, H = map(int, input().split())\nfor i in range(N):\n    if int(input()) <= max(W, H):\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    }
  ],
  "created": 1649749378,
  "object": "edit"
}
2022-04-12 03:43:03.711068 fix syntax errors 2 ['\n\n\nwith open("input.txt", "r") as f:\n    N, W, H = map(int, f.readline().split())  # читаем данные из файла\n    for i in range(N):\n        if int(f.readline()) <= max(W, H):\n            print("DA")\n        else:\n            print("NE")\n', '\n\nN, W, H = map(int, input().split())\nfor i in range(N):\n    if int(input()) <= max(W, H):\n        print("DA")\n    else:\n        print("NE")\n']
2022-04-12 03:43:06.346615 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "N, W, H = map(int, input().split())\nfor i in range(N):\n    if int(input()) <= max(W, H):\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 1,
      "text": "N, W, H = map(int, input().split())\nfor i in range(N):\n    if int(input()) <= max(W, H)**2:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    }
  ],
  "created": 1649749383,
  "object": "edit"
}
2022-04-12 03:43:06.347024 fix syntax errors 2 ['N, W, H = map(int, input().split())\nfor i in range(N):\n    if int(input()) <= max(W, H):\n        print("DA")\n    else:\n        print("NE")\n', 'N, W, H = map(int, input().split())\nfor i in range(N):\n    if int(input()) <= max(W, H)**2:\n        print("DA")\n    else:\n        print("NE")\n']
2022-04-12 03:43:06.347080 size on output set 4
2022-04-12 03:43:06.347169 num operations 2
2022-04-12 03:43:06.347189 size on input set 1
2022-04-12 03:43:08.282653 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nN, W, H = map(int, input().split())\n\nfor i in range(N):\n    match = int(input())\n    if match <= W or match <= H or match <= (W**2 + H**2)**0.5:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 1,
      "text": "\nN, W, H = map(int, input().split())\n\nfor i in range(N):\n    match = int(input())\n    if match <= W or match <= H or match <= (W**2 + H**2)**0.5:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    }
  ],
  "created": 1649749386,
  "object": "edit"
}
2022-04-12 03:43:08.283195 fix spelling mistakes 2 ['\nN, W, H = map(int, input().split())\n\nfor i in range(N):\n    match = int(input())\n    if match <= W or match <= H or match <= (W**2 + H**2)**0.5:\n        print("DA")\n    else:\n        print("NE")\n', '\nN, W, H = map(int, input().split())\n\nfor i in range(N):\n    match = int(input())\n    if match <= W or match <= H or match <= (W**2 + H**2)**0.5:\n        print("DA")\n    else:\n        print("NE")\n']
2022-04-12 03:43:08.283282 size on output set 1
2022-04-12 03:43:08.283292 size on input set 1
2022-04-12 03:43:11.073430 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN, W, H = map(int, input().split())\n\nfor i in range(N):\n    match = int(input())\n    if match <= W or match <= H or match <= (W**2 + H**2)**0.5: \n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 1,
      "text": "\nN, W, H = map(int, input().split())\n\nfor i in range(N):\n    match = int(input())\n    if match <= W or match <= H or match <= (W**2 + H**2)**(1/2):\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    }
  ],
  "created": 1649749388,
  "object": "edit"
}
2022-04-12 03:43:11.073614 fix syntax errors 2 ['\nN, W, H = map(int, input().split())\n\nfor i in range(N):\n    match = int(input())\n    if match <= W or match <= H or match <= (W**2 + H**2)**0.5: \n        print("DA")\n    else:\n        print("NE")\n', '\nN, W, H = map(int, input().split())\n\nfor i in range(N):\n    match = int(input())\n    if match <= W or match <= H or match <= (W**2 + H**2)**(1/2):\n        print("DA")\n    else:\n        print("NE")\n']
2022-04-12 03:43:11.073642 size on output set 2
2022-04-12 03:43:11.073655 num operations 2
2022-04-12 03:43:11.073664 size on input set 1
2022-04-12 03:43:12.962930 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nN, W, H = map(int, input().split())\n\nfor _ in range(N):\n    match = int(input())\n    if match <= (W**2 + H**2)**0.5:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 1,
      "text": "\nN, W, H = map(int, input().split())\n\nfor _ in range(N):\n    match = int(input())\n    if match <= (W**2 + H**2)**0.5:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    }
  ],
  "created": 1649749391,
  "object": "edit"
}
2022-04-12 03:43:12.963288 fix spelling mistakes 2 ['\nN, W, H = map(int, input().split())\n\nfor _ in range(N):\n    match = int(input())\n    if match <= (W**2 + H**2)**0.5:\n        print("DA")\n    else:\n        print("NE")\n', '\nN, W, H = map(int, input().split())\n\nfor _ in range(N):\n    match = int(input())\n    if match <= (W**2 + H**2)**0.5:\n        print("DA")\n    else:\n        print("NE")\n']
2022-04-12 03:43:12.963326 size on output set 1
2022-04-12 03:43:12.963336 size on input set 1
2022-04-12 03:43:17.322908 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "N, W, H = map(int, input().split())\n\nfor _ in range(N):\n    match = int(input())\n    if match <= (W**2 + H**2)**0.5:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 1,
      "text": "#\n# N, W, H = map(int, input().split())\n#\n# for _ in range(N):\n#     match = int(input())\n#     if match <= (W**2 + H**2)**0.5:\n#         print(\"DA\")\n#     else:\n#         print(\"NE\")\n"
    }
  ],
  "created": 1649749393,
  "object": "edit"
}
2022-04-12 03:43:17.323242 fix syntax errors 2 ['N, W, H = map(int, input().split())\n\nfor _ in range(N):\n    match = int(input())\n    if match <= (W**2 + H**2)**0.5:\n        print("DA")\n    else:\n        print("NE")\n', '#\n# N, W, H = map(int, input().split())\n#\n# for _ in range(N):\n#     match = int(input())\n#     if match <= (W**2 + H**2)**0.5:\n#         print("DA")\n#     else:\n#         print("NE")\n']
2022-04-12 03:43:17.323272 size on output set 2
2022-04-12 03:43:17.323341 num operations 2
2022-04-12 03:43:17.323352 size on input set 1
2022-04-12 03:43:19.766889 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef check_fit(w, h, match):\n    if match <= w or match <= h:\n        return \"YES\"\n    else:\n        return \"NO\"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]\n\n    for i in range(n):\n        match_length = int(input())\n        print(check_fit(w, h, match_length))\n\n\nif __name__ == '__main__':\n    run()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef check_fit(w, h, match):\n    if match <= w or match <= h:\n        return \"YES\"\n    else:\n        return \"NO\"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]\n\n    for i in range(n):\n        match_length = int(input())\n        print(check_fit(w, h, match_length))\n\n\nif __name__ == '__main__':\n    run()\n"
    }
  ],
  "created": 1649749397,
  "object": "edit"
}
2022-04-12 03:43:19.767225 fix spelling mistakes 2 ['\n\ndef check_fit(w, h, match):\n    if match <= w or match <= h:\n        return "YES"\n    else:\n        return "NO"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]\n\n    for i in range(n):\n        match_length = int(input())\n        print(check_fit(w, h, match_length))\n\n\nif __name__ == \'__main__\':\n    run()\n', '\n\ndef check_fit(w, h, match):\n    if match <= w or match <= h:\n        return "YES"\n    else:\n        return "NO"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]\n\n    for i in range(n):\n        match_length = int(input())\n        print(check_fit(w, h, match_length))\n\n\nif __name__ == \'__main__\':\n    run()\n']
2022-04-12 03:43:19.767252 size on output set 1
2022-04-12 03:43:19.767258 size on input set 1
2022-04-12 03:43:22.317681 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef check_fit(w, h, match):\n    if match <= w and match <= h:\n        return \"YES\"\n    else:\n        return \"NO\"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]\n\n    for i in range(n):\n        match_length = int(input())\n        print(check_fit(w, h, match_length))\n\n\nif __name__ == '__main__':\n    run()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef check_fit(w, h, match):\n    if match <= w or match <= h or match <= (w**2 + h**2)**0.5:\n        return \"YES\"\n    else:\n        return \"NO\"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]\n\n    for i in range(n):\n        match_length = int(input())\n        print(check_fit(w, h, match_length))\n\n\nif __name__ == '__main__':\n    run()\n"
    }
  ],
  "created": 1649749400,
  "object": "edit"
}
2022-04-12 03:43:22.318014 fix syntax errors 2 ['\n\ndef check_fit(w, h, match):\n    if match <= w and match <= h:\n        return "YES"\n    else:\n        return "NO"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]\n\n    for i in range(n):\n        match_length = int(input())\n        print(check_fit(w, h, match_length))\n\n\nif __name__ == \'__main__\':\n    run()\n', '\n\ndef check_fit(w, h, match):\n    if match <= w or match <= h or match <= (w**2 + h**2)**0.5:\n        return "YES"\n    else:\n        return "NO"\n\n\ndef run():\n    n, w, h = [int(i) for i in input().split()]\n\n    for i in range(n):\n        match_length = int(input())\n        print(check_fit(w, h, match_length))\n\n\nif __name__ == \'__main__\':\n    run()\n']
2022-04-12 03:43:22.318082 size on output set 2
2022-04-12 03:43:22.318101 num operations 2
2022-04-12 03:43:22.318111 size on input set 1
2022-04-12 03:43:24.878305 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nN, W, H = [int(x) for x in input().split()]\nbox = W * H\n\nfor _ in range(N):\n    match = int(input())\n    if match ** 2 <= box:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"
    },
    {
      "index": 1,
      "text": "\nN, W, H = [int(x) for x in input().split()]\nbox = W * H\n\nfor _ in range(N):\n    match = int(input())\n    if match ** 2 <= box:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"
    }
  ],
  "created": 1649749402,
  "object": "edit"
}
2022-04-12 03:43:24.878489 fix spelling mistakes 2 ['\nN, W, H = [int(x) for x in input().split()]\nbox = W * H\n\nfor _ in range(N):\n    match = int(input())\n    if match ** 2 <= box:\n        print("YES")\n    else:\n        print("NO")\n', '\nN, W, H = [int(x) for x in input().split()]\nbox = W * H\n\nfor _ in range(N):\n    match = int(input())\n    if match ** 2 <= box:\n        print("YES")\n    else:\n        print("NO")\n']
2022-04-12 03:43:24.878519 size on output set 1
2022-04-12 03:43:24.878529 size on input set 1
2022-04-12 03:43:27.686179 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "N, W, H = [int(x) for x in input().split()]\nbox = W**2 + H**2\n\nfor _ in range(N):\n    match = int(input())\n    if match**2 <= box:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"
    },
    {
      "index": 1,
      "text": "N, W, H = [int(x) for x in input().split()]\nbox = W * H\n\nfor _ in range(N):\n    match = int(input())\n    if match ** 2 <= box:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"
    }
  ],
  "created": 1649749405,
  "object": "edit"
}
2022-04-12 03:43:27.686362 fix syntax errors 2 ['N, W, H = [int(x) for x in input().split()]\nbox = W**2 + H**2\n\nfor _ in range(N):\n    match = int(input())\n    if match**2 <= box:\n        print("YES")\n    else:\n        print("NO")\n', 'N, W, H = [int(x) for x in input().split()]\nbox = W * H\n\nfor _ in range(N):\n    match = int(input())\n    if match ** 2 <= box:\n        print("YES")\n    else:\n        print("NO")\n']
2022-04-12 03:43:27.686386 size on output set 2
2022-04-12 03:43:27.686399 num operations 2
2022-04-12 03:43:27.686405 size on input set 1
2022-04-12 03:43:30.721487 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\"\"\"\nID: neelkolhe\nTASK: \nLANG: PYTHON3\n\"\"\"\n\ninpFile=open('file.in','r')\noutFile=open('file.out','w')\n\nnumMatches=int(inpFile.readline().split()[0])\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())\n  if length<=width or length<=height or length<=(width**2+height**2)**0.5:\n    outFile.write(\"DA\\n\")\n  else:\n    outFile.write(\"NE\\n\")\n"
    },
    {
      "index": 1,
      "text": "\n\n\"\"\"\nID: neelkolhe\nTASK: \nLANG: PYTHON3\n\"\"\"\n\ninpFile=open('matching.in','r')\noutFile=open('matching.out','w')\n\nnumMatches=int(inpFile.readline().split()[0])\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())\n  if length<=width or length<=height or length<=(width**2+height**2)**0.5:\n    outFile.write(\"DA\\n\")\n  else:\n    outFile.write(\"NE\\n\")\n"
    }
  ],
  "created": 1649749407,
  "object": "edit"
}
2022-04-12 03:43:30.721641 fix spelling mistakes 2 ['\n\n"""\nID: neelkolhe\nTASK: \nLANG: PYTHON3\n"""\n\ninpFile=open(\'file.in\',\'r\')\noutFile=open(\'file.out\',\'w\')\n\nnumMatches=int(inpFile.readline().split()[0])\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())\n  if length<=width or length<=height or length<=(width**2+height**2)**0.5:\n    outFile.write("DA\\n")\n  else:\n    outFile.write("NE\\n")\n', '\n\n"""\nID: neelkolhe\nTASK: \nLANG: PYTHON3\n"""\n\ninpFile=open(\'matching.in\',\'r\')\noutFile=open(\'matching.out\',\'w\')\n\nnumMatches=int(inpFile.readline().split()[0])\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())\n  if length<=width or length<=height or length<=(width**2+height**2)**0.5:\n    outFile.write("DA\\n")\n  else:\n    outFile.write("NE\\n")\n']
2022-04-12 03:43:30.721669 size on output set 2
2022-04-12 03:43:30.721676 size on input set 2
2022-04-12 03:43:33.807326 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\"\"\"\nID: neelkolhe\nTASK: \nLANG: PYTHON3\n\"\"\"\n\ninpFile=open('file.in','r')\noutFile=open('file.out','w')\n\nnumMatches=int(inpFile.readline().split()[0])\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())\n  if length<=width or length<=height or length<=(width**2+height**2)**(1/2):\n    outFile.write(\"DA\\n\")\n  else:\n    outFile.write(\"NE\\n\")\n"
    },
    {
      "index": 1,
      "text": "\n\n\"\"\"\nID: neelkolhe\nTASK: \nLANG: PYTHON3\n\"\"\"\n\ninpFile=open('file.in','r')\noutFile=open('file.out','w')\n\nnumMatches=int(inpFile.readline().split()[0])\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())\n  if length<=width or length<=height or length<=(width**2+height**2)**0.5: #if length is less than or equal to width or height or diagonal\n    outFile.write(\"DA\\n\")\n  else:\n    outFile.write(\"NE\\n\")\n"
    }
  ],
  "created": 1649749410,
  "object": "edit"
}
2022-04-12 03:43:33.807554 fix syntax errors 2 ['\n\n"""\nID: neelkolhe\nTASK: \nLANG: PYTHON3\n"""\n\ninpFile=open(\'file.in\',\'r\')\noutFile=open(\'file.out\',\'w\')\n\nnumMatches=int(inpFile.readline().split()[0])\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())\n  if length<=width or length<=height or length<=(width**2+height**2)**(1/2):\n    outFile.write("DA\\n")\n  else:\n    outFile.write("NE\\n")\n', '\n\n"""\nID: neelkolhe\nTASK: \nLANG: PYTHON3\n"""\n\ninpFile=open(\'file.in\',\'r\')\noutFile=open(\'file.out\',\'w\')\n\nnumMatches=int(inpFile.readline().split()[0])\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())\n  if length<=width or length<=height or length<=(width**2+height**2)**0.5: #if length is less than or equal to width or height or diagonal\n    outFile.write("DA\\n")\n  else:\n    outFile.write("NE\\n")\n']
2022-04-12 03:43:36.758844 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\"\"\"\nID: neelkolhe\nTASK: \nLANG: PYTHON3\n\"\"\"\n\ninpFile=open('matching.in','r')\noutFile=open('matching.out','w')\n\nnumMatches=int(inpFile.readline().split()[0])\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())\n  if length<=width or length<=height or length<=(width**2+height**2)**(0.5):\n    outFile.write(\"DA\\n\")\n  else:\n    outFile.write(\"NE\\n\")\n"
    },
    {
      "index": 1,
      "text": "\n\n\"\"\"\nID: neelkolhe\nTASK: \nLANG: PYTHON3\n\"\"\"\n\ninpFile=open('matching.in','r')\noutFile=open('matching.out','w')\n\nnumMatches=int(inpFile.readline().split()[0])\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())\n  if length<=width or length<=height or length<=(width**2+height**2)**0.5: #checks if the match can fit in the box\n    outFile.write(\"DA\\n\")\n  else:\n    outFile.write(\"NE\\n\")\n"
    }
  ],
  "created": 1649749413,
  "object": "edit"
}
2022-04-12 03:43:36.758986 fix syntax errors 2 ['\n\n"""\nID: neelkolhe\nTASK: \nLANG: PYTHON3\n"""\n\ninpFile=open(\'matching.in\',\'r\')\noutFile=open(\'matching.out\',\'w\')\n\nnumMatches=int(inpFile.readline().split()[0])\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())\n  if length<=width or length<=height or length<=(width**2+height**2)**(0.5):\n    outFile.write("DA\\n")\n  else:\n    outFile.write("NE\\n")\n', '\n\n"""\nID: neelkolhe\nTASK: \nLANG: PYTHON3\n"""\n\ninpFile=open(\'matching.in\',\'r\')\noutFile=open(\'matching.out\',\'w\')\n\nnumMatches=int(inpFile.readline().split()[0])\ndimensions=inpFile.readline().split()\nwidth=int(dimensions[0])\nheight=int(dimensions[1])\n\nfor i in range(numMatches):\n  length=int(inpFile.readline())\n  if length<=width or length<=height or length<=(width**2+height**2)**0.5: #checks if the match can fit in the box\n    outFile.write("DA\\n")\n  else:\n    outFile.write("NE\\n")\n']
2022-04-12 03:43:36.759005 size on output set 4
2022-04-12 03:43:36.759013 num operations 2
2022-04-12 03:43:36.759018 size on input set 1
2022-04-12 03:43:38.642836 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w or int(input()) <= h:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w or int(input()) <= h:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    }
  ],
  "created": 1649749416,
  "object": "edit"
}
2022-04-12 03:43:38.642944 fix spelling mistakes 2 ['import sys\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w or int(input()) <= h:\n        print("DA")\n    else:\n        print("NE")\n', '\nimport sys\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w or int(input()) <= h:\n        print("DA")\n    else:\n        print("NE")\n']
2022-04-12 03:43:38.642958 size on output set 2
2022-04-12 03:43:38.642962 size on input set 2
2022-04-12 03:43:41.759955 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w and int(input()) <= h:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 1,
      "text": "print(\"Hello World!\")\n"
    }
  ],
  "created": 1649749418,
  "object": "edit"
}
2022-04-12 03:43:41.760101 fix syntax errors 2 ['import sys\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w and int(input()) <= h:\n        print("DA")\n    else:\n        print("NE")\n', 'print("Hello World!")\n']
2022-04-12 03:43:44.446890 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w or int(input()) <= h or int(input()) <= w or int(input()) <= h:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w or int(input()) <= h or int(input()) <= w or int(input()) <= h:\n        print(\"DA\")\n    else:\n        print(\"NE\")\n"
    }
  ],
  "created": 1649749421,
  "object": "edit"
}
2022-04-12 03:43:44.447457 fix syntax errors 2 ['\nimport sys\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w or int(input()) <= h or int(input()) <= w or int(input()) <= h:\n        print("DA")\n    else:\n        print("NE")\n', '\nimport sys\n\nn, w, h = map(int, input().split())\n\nfor i in range(n):\n    if int(input()) <= w or int(input()) <= h or int(input()) <= w or int(input()) <= h:\n        print("DA")\n    else:\n        print("NE")\n']
2022-04-12 03:43:44.447494 size on output set 3
