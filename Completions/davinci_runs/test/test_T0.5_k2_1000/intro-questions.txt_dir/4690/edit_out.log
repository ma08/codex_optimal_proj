2022-04-11 21:57:00.889974 num operations 2
2022-04-11 21:57:00.890000 size on input set 1
2022-04-11 21:57:03.199684 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Get input from user\nA, B, C, D = map(int, input().split())\n\n# Calculate areas\narea_1 = A * B\narea_2 = C * D\n\n# Compare areas and print larger\nif area_1 > area_2:\n    print(area_1)\nelif area_2 > area_1:\n    print(area_2)\nelse:\n    print(area_1)\n"
    },
    {
      "index": 1,
      "text": "\n\n# Get inputs\nA, B, C, D = map(int, input().split())\n\n# Calculate areas\narea_1 = A * B\narea_2 = C * D\n\n# Compare areas and print larger\nif area_1 > area_2:\n    print(area_1)\nelif area_2 > area_1:\n    print(area_2)\nelse:\n    print(area_1)\n"
    }
  ],
  "created": 1649728621,
  "object": "edit"
}
2022-04-11 21:57:03.199875 fix spelling mistakes 2 ['\n\n# Get input from user\nA, B, C, D = map(int, input().split())\n\n# Calculate areas\narea_1 = A * B\narea_2 = C * D\n\n# Compare areas and print larger\nif area_1 > area_2:\n    print(area_1)\nelif area_2 > area_1:\n    print(area_2)\nelse:\n    print(area_1)\n', '\n\n# Get inputs\nA, B, C, D = map(int, input().split())\n\n# Calculate areas\narea_1 = A * B\narea_2 = C * D\n\n# Compare areas and print larger\nif area_1 > area_2:\n    print(area_1)\nelif area_2 > area_1:\n    print(area_2)\nelse:\n    print(area_1)\n']
2022-04-11 21:57:03.199945 size on output set 2
2022-04-11 21:57:03.199986 size on input set 2
2022-04-11 21:57:06.511711 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Get inputs\na, b, c, d = map(int, input().split())\n\n# Calculate areas\narea_1 = a * b\narea_2 = c * d\n\n# Compare areas and print larger\nif area_1 > area_2:\n    print(area_1)\nelif area_2 > area_1:\n    print(area_2)\nelse:\n    print(area_1)\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\n# Get inputs\nA, B, C, D = map(int, input().split())\n\n# Calculate areas\narea_1 = A * B\narea_2 = C * D\n\n# Compare areas and print larger\nif area_1 > area_2:\n    print(area_1)\nelif area_2 > area_1:\n    print(area_2)\nelse:\n    print(area_1)\n"
    }
  ],
  "created": 1649728623,
  "object": "edit"
}
2022-04-11 21:57:06.512013 fix syntax errors 2 ['\n# Get inputs\na, b, c, d = map(int, input().split())\n\n# Calculate areas\narea_1 = a * b\narea_2 = c * d\n\n# Compare areas and print larger\nif area_1 > area_2:\n    print(area_1)\nelif area_2 > area_1:\n    print(area_2)\nelse:\n    print(area_1)\n', '#!/usr/bin/env python3\n\n# Get inputs\nA, B, C, D = map(int, input().split())\n\n# Calculate areas\narea_1 = A * B\narea_2 = C * D\n\n# Compare areas and print larger\nif area_1 > area_2:\n    print(area_1)\nelif area_2 > area_1:\n    print(area_2)\nelse:\n    print(area_1)\n']
2022-04-11 21:57:09.163706 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Get input from user\nA, B, C, D = map(int, input().split()) \n\n# Calculate areas\narea_1 = A * B\narea_2 = C * D\n\n# Compare areas and print larger\nif area_1 > area_2:\n    print(area_1)\nelif area_2 > area_1:\n    print(area_2)\nelse:\n    print(area_1)\n"
    },
    {
      "index": 1,
      "text": "\n# Get input from user\nA, B, C, D = map(int, input().split())\n\n# Calculate areas\narea_1 = A * B\narea_2 = C * D\n\n# Compare areas and print larger\nif area_1 > area_2:\n    print(area_1)\nelif area_2 > area_1:\n    print(area_2)\nelse:\n    print(area_1)\n"
    }
  ],
  "created": 1649728626,
  "object": "edit"
}
2022-04-11 21:57:09.164012 fix syntax errors 2 ['\n# Get input from user\nA, B, C, D = map(int, input().split()) \n\n# Calculate areas\narea_1 = A * B\narea_2 = C * D\n\n# Compare areas and print larger\nif area_1 > area_2:\n    print(area_1)\nelif area_2 > area_1:\n    print(area_2)\nelse:\n    print(area_1)\n', '\n# Get input from user\nA, B, C, D = map(int, input().split())\n\n# Calculate areas\narea_1 = A * B\narea_2 = C * D\n\n# Compare areas and print larger\nif area_1 > area_2:\n    print(area_1)\nelif area_2 > area_1:\n    print(area_2)\nelse:\n    print(area_1)\n']
2022-04-11 21:57:09.164040 size on output set 4
2022-04-11 21:57:09.164058 num operations 2
2022-04-11 21:57:09.164064 size on input set 1
2022-04-11 21:57:12.351026 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef area_of_rectangle(a,b,c,d):\n    return max(a*b, c*d)\n\ndef main():\n    a,b,c,d = map(int, sys.stdin.readline().split())\n    print(area_of_rectangle(a,b,c,d))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef area_of_rect(a,b,c,d):\n    return max(a*b, c*d) \n\ndef main():\n    a,b,c,d = map(int, sys.stdin.readline().split())\n    print(area_of_rect(a,b,c,d))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649728629,
  "object": "edit"
}
2022-04-11 21:57:12.351312 fix spelling mistakes 2 ["\n\nimport sys\n\ndef area_of_rectangle(a,b,c,d):\n    return max(a*b, c*d)\n\ndef main():\n    a,b,c,d = map(int, sys.stdin.readline().split())\n    print(area_of_rectangle(a,b,c,d))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef area_of_rect(a,b,c,d):\n    return max(a*b, c*d) \n\ndef main():\n    a,b,c,d = map(int, sys.stdin.readline().split())\n    print(area_of_rect(a,b,c,d))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 21:57:12.351349 size on output set 2
2022-04-11 21:57:12.351360 size on input set 2
2022-04-11 21:57:17.003693 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef area_of_rectangle(a, b, c, d):\n    return max(a * b, c * d)\n\ndef main():\n    a, b, c, d = map(int, sys.stdin.readline().split())\n    print(area_of_rectangle(a, b, c, d))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\n\ndef area_of_rectangle(a,b,c,d):\n    return max(a*b, c*d)\n\n\ndef main():\n    a, b, c, d = map(int, sys.stdin.readline().split())\n    print(area_of_rectangle(a, b, c, d))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649728632,
  "object": "edit"
}
2022-04-11 21:57:17.003937 fix syntax errors 2 ["\nimport sys\n\ndef area_of_rectangle(a, b, c, d):\n    return max(a * b, c * d)\n\ndef main():\n    a, b, c, d = map(int, sys.stdin.readline().split())\n    print(area_of_rectangle(a, b, c, d))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\n\ndef area_of_rectangle(a,b,c,d):\n    return max(a*b, c*d)\n\n\ndef main():\n    a, b, c, d = map(int, sys.stdin.readline().split())\n    print(area_of_rectangle(a, b, c, d))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 21:57:19.565750 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef area_of_rect(a,b,c,d):\n    return max(a*b, c*d) \n\ndef main():\n    a,b,c,d = map(int, sys.stdin.readline().split())\n    print(area_of_rect(a,b,c,d))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef area_of_rect(a,b,c,d):\n    return max(a*b, c*d)\n\ndef main():\n    a,b,c,d = map(int, sys.stdin.readline().split())\n    print(area_of_rect(a,b,c,d))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649728637,
  "object": "edit"
}
2022-04-11 21:57:19.566138 fix syntax errors 2 ["\nimport sys\n\ndef area_of_rect(a,b,c,d):\n    return max(a*b, c*d) \n\ndef main():\n    a,b,c,d = map(int, sys.stdin.readline().split())\n    print(area_of_rect(a,b,c,d))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef area_of_rect(a,b,c,d):\n    return max(a*b, c*d)\n\ndef main():\n    a,b,c,d = map(int, sys.stdin.readline().split())\n    print(area_of_rect(a,b,c,d))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 21:57:19.566190 size on output set 4
