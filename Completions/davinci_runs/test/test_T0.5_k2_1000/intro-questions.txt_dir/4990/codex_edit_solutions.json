["\n\nb, k, g = map(int, input().split())\n\nif k >= b:\n    print(1)\nelse:\n    print(b // (g - 1) + 1 if b % (g - 1) != 0 else b // (g - 1))\n", "\n\nimport sys\n\nb, k, g = map(int, sys.stdin.readline().strip().split())\nprint(b)\n", "\n#Solution\nimport sys\n\nb, k, g = [int(i) for i in sys.stdin.readline().split()]\nprint((b - 1) // (k // g) + 1)\n", "import sys\n\ndef main():\n    b, k, g = map(int, sys.stdin.readline().strip().split())\n    print(b)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\nb, k, g = map(int, sys.stdin.readline().split())\nprint(int(b / g) + (1 if (b % g) > 0 else 0))\n", "\nb, k, g = map(int, input().split())  # b is the number of books, k is the number of books in a shelf, g is the number of books in a group\n\nif k >= b:\n    print(1)\nelse:\n    print(b // (g - 1) + 1 if b % (g - 1) != 0 else b // (g - 1))  # if b % (g - 1) != 0, the last shelf will have less than g books\n", "\nimport sys\n\nb, k, g = map(int, sys.stdin.readline().split())\nprint(b, k, g)\n", "import sys\n\nb, k, g = map(int, sys.stdin.readline().split())\nprint(int(b / g) + (1 if b % g > 0 else 0))\n", "\nimport sys\n\ndef main(args):\n    b, k, g = [int(x) for x in args[1].split()] # b is the number of bugs, k is the maximum number of bugs per day, g is the number of bugs that grow each day\n    days = 0\n    while b > 0:\n        days += 1\n        b -= g # b is the number of bugs, g is the number of bugs that grow each day\n        if b < 0:\n            break\n        b -= k-g # b is the number of bugs, k is the maximum number of bugs per day, g is the number of bugs that grow each day\n    print(days)\n\nif __name__ == '__main__':\n    main(sys.argv)\n", "\n\ndef main():\n    b, k, g = [int(x) for x in input().split()]\n    print(math.ceil(b/g) - 1) #\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # Get input.\n    b, k, g = [int(x) for x in input().split()] # read input\n    # Calculate number of days.\n    days = (b - 1) // (k - g + 1) + 1 # calculate days\n    # Print result.\n    print(days)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\nb, k, g = map(int, sys.stdin.readline().split())\nprint(int(b / g) + (1 if b % g > 0 else 0) + k)\n", "\n\nb, k, g = map(int, input().split())  # b is the number of books, k is the number of books in a shelf, g is the number of books in a group.\n\nif k >= b:\n    print(1)\nelse:\n    print(b // (g - 1) + 1 if b % (g - 1) != 0 else b // (g - 1))  # if b % (g - 1) != 0, the last shelf will have less than g books\n", "\n\n#SOLUTION\n\nb,k,g = map(int,input().split()) #input the value of b, k, g\nprint(b//g+(1 if b%g else 0)) #print the value of b//g+(1 if b%g else 0)\n", "\nimport sys\n\ndef main(args):\n    b, k, g = [int(x) for x in args[1].split()]\n    days = 0\n    while b > 0:\n        days += 1\n        b -= g\n        if b < 0:\n            break\n        b -= (k-g)\n    print(days)\n\nif __name__ == '__main__':\n    main(sys.argv)\n", "\n\n#SOLUTION:\n\nb,k,g = map(int, input().split())\nprint(b // g + (1 if b % g else 0))\n", "import sys\n\nb, k, g = map(int, sys.stdin.readline().strip().split())\nprint(b)\n", "\n\n#SOLUTION\n\nb,k,g = map(int,input().split()) #input the value of b,k,g\nprint(b//g+(1 if b%g else 0)) #print the value of b//g+(1 if b%g else 0) \n", "\n\na, b, c = map(int, input().split()) \n\nif b >= a:\n    print(1)\nelse:\n    print(a // (c - 1) + 1 if a % (c - 1) != 0 else a // (c - 1))\n", "\n#Solution\nimport sys\n\nb,k,g = [int(i) for i in sys.stdin.readline().split()]\nprint((b-1)//(k//g)+1)\n", "\n\ndef main():\n    b, k, g = [int(x) for x in input().split()]\n    print(math.ceil(b/g) - 1) \n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # Get input from user\n    b, k, g = [int(x) for x in input().split()]  # Get input from user\n    days = (b - 1) // (k - g + 1) + 1  # Calculate number of days\n    print(days)  # Print result\n\nif __name__ == '__main__':\n    main()\n", "\n\n# SOLUTION:\n\nb,k,g = map(int,input().split())\nprint(b//g+(1 if b%g else 0))\n", "\n\ndef main():\n    # Get input.\n    b, k, g = [int(x) for x in input().split()]  # pylint: disable=unbalanced-tuple-unpacking\n    # Calculate number of days.\n    days = (b - 1) // (k - g + 1) + 1\n    # Print result.\n    print(days)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # Get input from user\n    b, k, g = [int(x) for x in input().split()]\n    days = (b - 1) // (k - g + 1) + 1 # Calculate number of days\n    print(days) # Print result\n\nif __name__ == '__main__':\n    main()\n"]