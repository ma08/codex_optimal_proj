2022-04-11 20:59:41.742314 num operations 2
2022-04-11 20:59:41.742363 size on input set 1
2022-04-11 20:59:44.021715 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\na, b = map(int, input().split())\ns = input()\n\nif len(s) == a + b + 1 and s[a] == '-' and s[:a].isdigit() and s[a+1:].isdigit():\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\na, b = map(int, input().split())\ns = input()\n\nif len(s) == a + b + 1 and s[a] == '-' and s[:a].isdigit() and s[a+1:].isdigit():\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1649725182,
  "object": "edit"
}
2022-04-11 20:59:44.022010 fix spelling mistakes 2 ["\na, b = map(int, input().split())\ns = input()\n\nif len(s) == a + b + 1 and s[a] == '-' and s[:a].isdigit() and s[a+1:].isdigit():\n    print('Yes')\nelse:\n    print('No')\n", "\na, b = map(int, input().split())\ns = input()\n\nif len(s) == a + b + 1 and s[a] == '-' and s[:a].isdigit() and s[a+1:].isdigit():\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-11 20:59:44.022029 size on output set 1
2022-04-11 20:59:44.022033 size on input set 1
2022-04-11 20:59:48.143673 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\na, b = map(int, input().split())\ns = input()\n\nif len(s) == a + b + 1 and s[a] == '-' and s[:a].isdigit() and s[a + 1:].isdigit():\n    print('Yes')\nelse:\n    print('No')\n"
    },
    {
      "index": 1,
      "text": "\na, b = map(int, input().split())\ns = input()\n\nif len(s) == a + b + 1 and s[a] == '-' and s[:a].isdigit() and s[a + 1:].isdigit():\n    print('Yes')\nelse:\n    print('No')\n"
    }
  ],
  "created": 1649725184,
  "object": "edit"
}
2022-04-11 20:59:48.143899 fix syntax errors 2 ["\na, b = map(int, input().split())\ns = input()\n\nif len(s) == a + b + 1 and s[a] == '-' and s[:a].isdigit() and s[a + 1:].isdigit():\n    print('Yes')\nelse:\n    print('No')\n", "\na, b = map(int, input().split())\ns = input()\n\nif len(s) == a + b + 1 and s[a] == '-' and s[:a].isdigit() and s[a + 1:].isdigit():\n    print('Yes')\nelse:\n    print('No')\n"]
2022-04-11 20:59:48.143924 size on output set 1
2022-04-11 20:59:48.143937 num operations 2
2022-04-11 20:59:48.143942 size on input set 1
2022-04-11 20:59:50.348537 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport re\n\ndef main():\n    S = input()\n    if re.match(r'\\d{3}-\\d{4}', S):\n        print('Yes')\n    else:\n        print('No')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport re\n\ndef main():\n    S = input()\n    if re.match(r'\\d{3}-\\d{4}', S):\n        print('Yes')\n    else:\n        print('No')\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649725188,
  "object": "edit"
}
2022-04-11 20:59:50.348727 fix spelling mistakes 2 ["\n\nimport re\n\ndef main():\n    S = input()\n    if re.match(r'\\d{3}-\\d{4}', S):\n        print('Yes')\n    else:\n        print('No')\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport re\n\ndef main():\n    S = input()\n    if re.match(r'\\d{3}-\\d{4}', S):\n        print('Yes')\n    else:\n        print('No')\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 20:59:50.348754 size on output set 1
2022-04-11 20:59:50.348763 size on input set 1
2022-04-11 20:59:53.271315 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import re\n\ndef main():\n    S = input()\n    if re.match(r'\\d{3}-\\d{4}', S):\n        print('Yes')\n    else:\n        print('No')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport re\n\ndef main():\n    S = input()\n    if re.match(r'[a-zA-Z]{1}[a-zA-Z0-9_]*', S):\n        print('Yes')\n    else:\n        print('No')\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649725190,
  "object": "edit"
}
2022-04-11 20:59:53.271590 fix syntax errors 2 ["import re\n\ndef main():\n    S = input()\n    if re.match(r'\\d{3}-\\d{4}', S):\n        print('Yes')\n    else:\n        print('No')\n\nif __name__ == '__main__':\n    main()\n", "\nimport re\n\ndef main():\n    S = input()\n    if re.match(r'[a-zA-Z]{1}[a-zA-Z0-9_]*', S):\n        print('Yes')\n    else:\n        print('No')\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 20:59:53.271618 size on output set 2
