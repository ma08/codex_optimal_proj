2022-04-11 19:28:25.081149 num operations 2
2022-04-11 19:28:25.081197 size on input set 1
2022-04-11 19:28:29.183300 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef get_number_of_broken_doors(n, x, y, b):\n    return n\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    b = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, b))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef get_number_of_broken_doors(n, x, y, b):\n    return n\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    b = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, b))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649719705,
  "object": "edit"
}
2022-04-11 19:28:29.183649 fix spelling mistakes 2 ["\n\ndef get_number_of_broken_doors(n, x, y, b):\n    return n\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    b = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, b))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef get_number_of_broken_doors(n, x, y, b):\n    return n\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    b = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, b))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 19:28:29.183666 size on output set 1
2022-04-11 19:28:29.183670 size on input set 1
2022-04-11 19:28:33.038920 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef get_number_of_broken_doors(n, x, y, b, a):\n    return n\n\n\n    a = list(map(int, input().split()))\ndef main():\n    n, x, y = map(int, input().split())\n    b = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, b, a))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef get_number_of_broken_doors(n, x, y, b):\n    return 0\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    b = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, b))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649719709,
  "object": "edit"
}
2022-04-11 19:28:33.039026 fix syntax errors 2 ["\n\ndef get_number_of_broken_doors(n, x, y, b, a):\n    return n\n\n\n    a = list(map(int, input().split()))\ndef main():\n    n, x, y = map(int, input().split())\n    b = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, b, a))\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef get_number_of_broken_doors(n, x, y, b):\n    return 0\n\n\ndef main():\n    n, x, y = map(int, input().split())\n    b = list(map(int, input().split()))\n    print(get_number_of_broken_doors(n, x, y, b))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 19:28:33.039039 size on output set 2
2022-04-11 19:28:33.039048 num operations 2
2022-04-11 19:28:33.039051 size on input set 1
2022-04-11 19:28:35.859264 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is odd\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durations is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649719713,
  "object": "edit"
}
2022-04-11 19:28:35.859408 fix spelling mistakes 2 ['\n\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is odd\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durations is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 19:28:35.859439 size on output set 2
2022-04-11 19:28:35.859445 size on input set 2
2022-04-11 19:28:37.783208 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is odd\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is odd\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649719716,
  "object": "edit"
}
2022-04-11 19:28:37.783371 fix syntax errors 2 ['\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is odd\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durabilities is odd\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 19:28:39.707505 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durations is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durations is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649719718,
  "object": "edit"
}
2022-04-11 19:28:39.707990 fix syntax errors 2 ['\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durations is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, x, y = list(map(int, sys.stdin.readline().split()))\n    a = list(map(int, sys.stdin.readline().split()))\n\n    # if x >= y, then you will always win\n    if x >= y:\n        print(n)\n        return\n\n    # if y >= 2 * x, then Slavik will always win\n    if y >= 2 * x:\n        print(0)\n        return\n\n    # if x < y < 2 * x, then Slavik will win if and only if the sum of the initial durations is even\n    if sum(a) % 2 == 0:\n        print(0)\n    else:\n        print(1)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 19:28:39.708051 size on output set 2
