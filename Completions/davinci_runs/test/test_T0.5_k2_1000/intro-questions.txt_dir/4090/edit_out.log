2022-04-11 16:00:38.903540 num operations 2
2022-04-11 16:00:38.903561 size on input set 1
2022-04-11 16:00:42.439599 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len(\"\".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:]\n                ans = min(len(\"\".join(tmp)), ans)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len(\"\".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:]\n                ans = min(len(\"\".join(tmp)), ans)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649707239,
  "object": "edit"
}
2022-04-11 16:00:42.439772 fix spelling mistakes 2 ['\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len("".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:]\n                ans = min(len("".join(tmp)), ans)\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split()]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len("".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()] + words[i+1:]\n                ans = min(len("".join(tmp)), ans)\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 16:00:42.439802 size on output set 1
2022-04-11 16:00:42.439809 size on input set 1
2022-04-11 16:00:48.154998 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    words = input().split()\n    if n == 1:\n        print(len(words[0])+1)\n        return\n    ans = len(\"\".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()+words[i][1:]] + words[i+1:]\n                ans = min(len(\"\".join(tmp)), ans)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split() if x != \"\"]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len(\"\".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper() + words[i][1:]] + words[i+1:]\n                ans = min(len(\"\".join(tmp)), ans)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649707242,
  "object": "edit"
}
2022-04-11 16:00:48.155209 fix syntax errors 2 ['\n\ndef main():\n    n = int(input())\n    words = input().split()\n    if n == 1:\n        print(len(words[0])+1)\n        return\n    ans = len("".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper()+words[i][1:]] + words[i+1:]\n                ans = min(len("".join(tmp)), ans)\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    words = [x for x in input().split() if x != ""]\n    if n == 1:\n        print(len(words[0]))\n        quit()\n    ans = len("".join(words))\n    for i in range(n):\n        for j in range(i+1, n):\n            if words[i] == words[j]:\n                tmp = words[:i] + [words[i][0].upper() + words[i][1:]] + words[i+1:]\n                ans = min(len("".join(tmp)), ans)\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 16:00:48.155244 size on output set 2
2022-04-11 16:00:48.155268 num operations 2
2022-04-11 16:00:48.155276 size on input set 1
2022-04-11 16:00:52.623500 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef min_length(n, words): # O(n)\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef min_length(n, word):\n    count = 1\n    for i in range(n-1):\n        if word[i] != word[i+1]:\n            count += 1\n    return count\n\nn = int(input())\nword = input().split()\n\nprint(min_length(n, word))\n"
    }
  ],
  "created": 1649707248,
  "object": "edit"
}
2022-04-11 16:00:52.623641 fix spelling mistakes 2 ['\n\ndef min_length(n, words): # O(n)\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n', '\n\ndef min_length(n, word):\n    count = 1\n    for i in range(n-1):\n        if word[i] != word[i+1]:\n            count += 1\n    return count\n\nn = int(input())\nword = input().split()\n\nprint(min_length(n, word))\n']
2022-04-11 16:00:52.623661 size on output set 2
2022-04-11 16:00:52.623667 size on input set 2
2022-04-11 16:00:57.915283 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef min_length(n, word):\n    count = 1\n    for i in range(n - 1):\n        if word[i] != word[i + 1]:\n            count += 1\n\n    return count\n\nn = int(input())\nword = input().split()\n\nprint(min_length(n, word))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef min_length(n, word):\n    count = 1\n    for i in range(n - 1):\n        if word[i] != word[i + 1]:\n            count += 1\n\n    return count\n\nn = int(input())\nword = input().split()\n\nprint(min_length(n, word))\n"
    }
  ],
  "created": 1649707253,
  "object": "edit"
}
2022-04-11 16:00:57.915480 fix syntax errors 2 ['\n\ndef min_length(n, word):\n    count = 1\n    for i in range(n - 1):\n        if word[i] != word[i + 1]:\n            count += 1\n\n    return count\n\nn = int(input())\nword = input().split()\n\nprint(min_length(n, word))\n', '\n\ndef min_length(n, word):\n    count = 1\n    for i in range(n - 1):\n        if word[i] != word[i + 1]:\n            count += 1\n\n    return count\n\nn = int(input())\nword = input().split()\n\nprint(min_length(n, word))\n']
2022-04-11 16:01:01.488039 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef min_length(n, words):  # O(n)\n    count = 1\n    for i in range(n - 1):\n        if words[i] != words[i + 1]:\n            count += 1\n\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef min_length(n, words):\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n"
    }
  ],
  "created": 1649707258,
  "object": "edit"
}
2022-04-11 16:01:01.488220 fix syntax errors 2 ['\n\ndef min_length(n, words):  # O(n)\n    count = 1\n    for i in range(n - 1):\n        if words[i] != words[i + 1]:\n            count += 1\n\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n', '\n\ndef min_length(n, words):\n    count = 1\n    for i in range(n-1):\n        if words[i] != words[i+1]:\n            count += 1\n    return count\n\nn = int(input())\nwords = input().split()\n\nprint(min_length(n, words))\n']
2022-04-11 16:01:01.488246 size on output set 3
