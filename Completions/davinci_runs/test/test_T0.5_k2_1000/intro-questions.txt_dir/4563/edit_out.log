2022-04-11 21:03:06.666507 num operations 2
2022-04-11 21:03:06.666558 size on input set 1
2022-04-11 21:03:09.532238 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nfrom fractions import gcd\nfrom functools import reduce\n\ndef lcm(x, y):\n   if x > y:\n       greater = x\n   else:\n       greater = y\n   while(True):\n       if((greater % x == 0) and (greater % y == 0)):\n           lcm = greater\n           break\n       greater += 1\n   return lcm\n\ndef main():\n    N = int(sys.stdin.readline().rstrip())\n    T = []\n    A = []\n    for i in range(N):\n        t,a = map(int, sys.stdin.readline().rstrip().split())\n        T.append(t)\n        A.append(a)\n    #print(T,A) \n    ans = 1\n    for i in range(N):\n        if i == 0:\n            ans = T[0] + A[0] - 1\n        else:\n            lcm_num = lcm(T[i],A[i])\n            ans = lcm_num + ans\n            #print(i,lcm_num,ans)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nfrom fractions import gcd\nfrom functools import reduce\n\ndef lcm(x, y):\n   if x > y:\n       greater = x\n   else:\n       greater = y\n   while(True):\n       if((greater % x == 0) and (greater % y == 0)):\n           lcm = greater\n           break\n       greater += 1\n   return lcm\n\ndef main():\n    N = int(sys.stdin.readline().rstrip())\n    T = []\n    A = []\n    for i in range(N):\n        t,a = map(int, sys.stdin.readline().rstrip().split())\n        T.append(t)\n        A.append(a)\n    #print(T,A)\n    ans = 1\n    for i in range(N):\n        if i == 0:\n            ans = T[0] + A[0] - 1\n        else:\n            lcm_num = lcm(T[i],A[i])\n            ans = lcm_num - ans\n            #print(i,lcm_num,ans)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649725387,
  "object": "edit"
}
2022-04-11 21:03:09.532661 fix spelling mistakes 2 ["\n\nimport sys\nfrom fractions import gcd\nfrom functools import reduce\n\ndef lcm(x, y):\n   if x > y:\n       greater = x\n   else:\n       greater = y\n   while(True):\n       if((greater % x == 0) and (greater % y == 0)):\n           lcm = greater\n           break\n       greater += 1\n   return lcm\n\ndef main():\n    N = int(sys.stdin.readline().rstrip())\n    T = []\n    A = []\n    for i in range(N):\n        t,a = map(int, sys.stdin.readline().rstrip().split())\n        T.append(t)\n        A.append(a)\n    #print(T,A) \n    ans = 1\n    for i in range(N):\n        if i == 0:\n            ans = T[0] + A[0] - 1\n        else:\n            lcm_num = lcm(T[i],A[i])\n            ans = lcm_num + ans\n            #print(i,lcm_num,ans)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nfrom fractions import gcd\nfrom functools import reduce\n\ndef lcm(x, y):\n   if x > y:\n       greater = x\n   else:\n       greater = y\n   while(True):\n       if((greater % x == 0) and (greater % y == 0)):\n           lcm = greater\n           break\n       greater += 1\n   return lcm\n\ndef main():\n    N = int(sys.stdin.readline().rstrip())\n    T = []\n    A = []\n    for i in range(N):\n        t,a = map(int, sys.stdin.readline().rstrip().split())\n        T.append(t)\n        A.append(a)\n    #print(T,A)\n    ans = 1\n    for i in range(N):\n        if i == 0:\n            ans = T[0] + A[0] - 1\n        else:\n            lcm_num = lcm(T[i],A[i])\n            ans = lcm_num - ans\n            #print(i,lcm_num,ans)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 21:03:09.532755 size on output set 2
2022-04-11 21:03:09.532767 size on input set 2
2022-04-11 21:03:12.031853 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef lcm(x, y):\n   if x > y:\n       greater = x\n   else:\n       greater = y\n   while(True):\n       if((greater % x == 0) and (greater % y == 0)):\n           lcm = greater\n           break\n       greater += 1\n   return lcm\n\ndef main():\n    N = int(sys.stdin.readline().rstrip())\n    T = []\n    A = []\n    for i in range(N):\n        t,a = map(int, sys.stdin.readline().rstrip().split())\n        T.append(t)\n        A.append(a)\n    #print(T,A) \n    ans = 1\n    for i in range(N):\n        if i == 0:\n            ans = T[0] + A[0] - 1\n        else:\n            lcm_num = lcm(T[i],A[i])\n            ans = lcm_num + ans\n            #print(i,lcm_num,ans)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nfrom fractions import gcd\nfrom functools import reduce\n\ndef lcm(x, y):\n   if x > y:\n       greater = x\n   else:\n       greater = y\n   while(True):\n       if((greater % x == 0) and (greater % y == 0)):\n           lcm = greater\n           break\n       greater += 1\n   return lcm\n\ndef main():\n    N = int(sys.stdin.readline().rstrip())\n    T = []\n    A = []\n    for i in range(N):\n        t,a = map(int, sys.stdin.readline().rstrip().split())\n        T.append(t)\n        A.append(a)\n    #print(T,A) \n    ans = 1\n    for i in range(N):\n        if i == 0:\n            ans = T[0] + A[0] - 1\n        else:\n            lcm_num = lcm(T[i],A[i])\n            ans = lcm_num + ans\n            #print(i,lcm_num,ans)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649725389,
  "object": "edit"
}
2022-04-11 21:03:12.032180 fix syntax errors 2 ["\nimport sys\n\ndef lcm(x, y):\n   if x > y:\n       greater = x\n   else:\n       greater = y\n   while(True):\n       if((greater % x == 0) and (greater % y == 0)):\n           lcm = greater\n           break\n       greater += 1\n   return lcm\n\ndef main():\n    N = int(sys.stdin.readline().rstrip())\n    T = []\n    A = []\n    for i in range(N):\n        t,a = map(int, sys.stdin.readline().rstrip().split())\n        T.append(t)\n        A.append(a)\n    #print(T,A) \n    ans = 1\n    for i in range(N):\n        if i == 0:\n            ans = T[0] + A[0] - 1\n        else:\n            lcm_num = lcm(T[i],A[i])\n            ans = lcm_num + ans\n            #print(i,lcm_num,ans)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nfrom fractions import gcd\nfrom functools import reduce\n\ndef lcm(x, y):\n   if x > y:\n       greater = x\n   else:\n       greater = y\n   while(True):\n       if((greater % x == 0) and (greater % y == 0)):\n           lcm = greater\n           break\n       greater += 1\n   return lcm\n\ndef main():\n    N = int(sys.stdin.readline().rstrip())\n    T = []\n    A = []\n    for i in range(N):\n        t,a = map(int, sys.stdin.readline().rstrip().split())\n        T.append(t)\n        A.append(a)\n    #print(T,A) \n    ans = 1\n    for i in range(N):\n        if i == 0:\n            ans = T[0] + A[0] - 1\n        else:\n            lcm_num = lcm(T[i],A[i])\n            ans = lcm_num + ans\n            #print(i,lcm_num,ans)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 21:03:14.818217 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nfrom fractions import gcd\nfrom functools import reduce\n\ndef lcm(x, y):\n   if x > y:\n       greater = x\n   else:\n       greater = y\n   while(True):\n       if((greater % x == 0) and (greater % y == 0)):\n           lcm = greater\n           break\n       greater += 1\n   return lcm\n\ndef main():\n    N = int(sys.stdin.readline().rstrip())\n    T = []\n    A = []\n    for i in range(N):\n        t,a = map(int, sys.stdin.readline().rstrip().split())\n        T.append(t)\n        A.append(a)\n    ans = 1\n    for i in range(N):\n        if i == 0:\n            ans = T[0] + A[0] - 1\n        else:\n            lcm_num = lcm(T[i],A[i])\n            ans = lcm_num - ans\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nfrom fractions import gcd\nfrom functools import reduce\n\ndef lcm(x, y):\n   if x > y:\n       greater = x\n   else:\n       greater = y\n   while(True):\n       if((greater % x == 0) and (greater % y == 0)):\n           lcm = greater\n           break\n       greater += 1\n   return lcm\n\ndef main():\n    N = int(sys.stdin.readline().rstrip())\n    T = []\n    A = []\n    for i in range(N):\n        t,a = map(int, sys.stdin.readline().rstrip().split())\n        T.append(t)\n        A.append(a)\n    #print(T,A)\n    ans = 1\n    for i in range(N):\n        if i == 0:\n            ans = T[0] + A[0] - 1\n        else:\n            lcm_num = lcm(T[i],A[i])\n            ans = lcm_num - ans\n            #print(i,lcm_num,ans)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649725392,
  "object": "edit"
}
2022-04-11 21:03:14.818893 fix syntax errors 2 ["\nimport sys\nfrom fractions import gcd\nfrom functools import reduce\n\ndef lcm(x, y):\n   if x > y:\n       greater = x\n   else:\n       greater = y\n   while(True):\n       if((greater % x == 0) and (greater % y == 0)):\n           lcm = greater\n           break\n       greater += 1\n   return lcm\n\ndef main():\n    N = int(sys.stdin.readline().rstrip())\n    T = []\n    A = []\n    for i in range(N):\n        t,a = map(int, sys.stdin.readline().rstrip().split())\n        T.append(t)\n        A.append(a)\n    ans = 1\n    for i in range(N):\n        if i == 0:\n            ans = T[0] + A[0] - 1\n        else:\n            lcm_num = lcm(T[i],A[i])\n            ans = lcm_num - ans\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\nfrom fractions import gcd\nfrom functools import reduce\n\ndef lcm(x, y):\n   if x > y:\n       greater = x\n   else:\n       greater = y\n   while(True):\n       if((greater % x == 0) and (greater % y == 0)):\n           lcm = greater\n           break\n       greater += 1\n   return lcm\n\ndef main():\n    N = int(sys.stdin.readline().rstrip())\n    T = []\n    A = []\n    for i in range(N):\n        t,a = map(int, sys.stdin.readline().rstrip().split())\n        T.append(t)\n        A.append(a)\n    #print(T,A)\n    ans = 1\n    for i in range(N):\n        if i == 0:\n            ans = T[0] + A[0] - 1\n        else:\n            lcm_num = lcm(T[i],A[i])\n            ans = lcm_num - ans\n            #print(i,lcm_num,ans)\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 21:03:14.818961 size on output set 4
2022-04-11 21:03:14.819005 num operations 2
2022-04-11 21:03:14.819018 size on input set 1
2022-04-11 21:03:22.666820 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nN = int(input())\nA = []\nfor _ in range(N):\n    t, a = map(int, input().split())\n    A.append([t, a])\n\nl = A[0][0]\nr = A[0][1]\nfor i in range(1, N):\n    l = lcm(l, A[i][0])\n    r = lcm(r, A[i][1])\n\nprint(l+r)\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\nA = []\nfor _ in range(N):\n    T, X = map(int, input().split())\n    A.append([T, X])\n\nl = A[0][0]\nr = A[0][1]\nfor i in range(1, N):\n    l = lcm(l, A[i][0])\n    r = lcm(r, A[i][1])\n\nprint(l+r)\n"
    }
  ],
  "created": 1649725395,
  "object": "edit"
}
2022-04-11 21:03:22.667058 fix spelling mistakes 2 ['\n\nimport sys\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nN = int(input())\nA = []\nfor _ in range(N):\n    t, a = map(int, input().split())\n    A.append([t, a])\n\nl = A[0][0]\nr = A[0][1]\nfor i in range(1, N):\n    l = lcm(l, A[i][0])\n    r = lcm(r, A[i][1])\n\nprint(l+r)\n', '\nN = int(input())\nA = []\nfor _ in range(N):\n    T, X = map(int, input().split())\n    A.append([T, X])\n\nl = A[0][0]\nr = A[0][1]\nfor i in range(1, N):\n    l = lcm(l, A[i][0])\n    r = lcm(r, A[i][1])\n\nprint(l+r)\n']
2022-04-11 21:03:22.667080 size on output set 2
2022-04-11 21:03:22.667084 size on input set 2
2022-04-11 21:03:24.709827 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nN = int(input())\nA = []\nfor _ in range(N):\n    t, a = map(int, input().split())\n    A.append([t, a])\n\nl = A[0][0]\nr = A[0][1]\nfor i in range(1, N):\n    l = lcm(l, A[i][0])\n    r = lcm(r, A[i][1])\n\nprint(l+r)\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nN = int(input())\nA = []\nfor _ in range(N):\n    t, a = map(int, input().split())\n    A.append([t, a])\n\nl = A[0][0]\nr = A[0][1]\nfor i in range(1, N):\n    l = lcm(l, A[i][0])\n    r = lcm(r, A[i][1])\n\nprint(l+r)\n"
    }
  ],
  "created": 1649725402,
  "object": "edit"
}
2022-04-11 21:03:24.710011 fix syntax errors 2 ['\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nN = int(input())\nA = []\nfor _ in range(N):\n    t, a = map(int, input().split())\n    A.append([t, a])\n\nl = A[0][0]\nr = A[0][1]\nfor i in range(1, N):\n    l = lcm(l, A[i][0])\n    r = lcm(r, A[i][1])\n\nprint(l+r)\n', 'import sys\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nN = int(input())\nA = []\nfor _ in range(N):\n    t, a = map(int, input().split())\n    A.append([t, a])\n\nl = A[0][0]\nr = A[0][1]\nfor i in range(1, N):\n    l = lcm(l, A[i][0])\n    r = lcm(r, A[i][1])\n\nprint(l+r)\n']
2022-04-11 21:03:30.088549 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from math import gcd\nN = int(input())\nA = []\nfor _ in range(N):\n    T, X = map(int, input().split())\n    A.append([T, X])\n\nl = A[0][0]\nr = A[0][1]\nfor i in range(1, N):\n    l = l * A[i][0] // gcd(l, A[i][0])\n    r = r * A[i][1] // gcd(r, A[i][1])\n\nprint(l+r)\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\nA = []\nfor _ in range(N):\n    T, X = map(int, input().split())\n    A.append([T, X])\n\nl = A[0][0]\nr = A[0][1]\nfor i in range(1, N):\n    l = lcm(l, A[i][0]) % MOD\n    r = lcm(r, A[i][1]) % MOD\n\nprint(l+r)\n"
    }
  ],
  "created": 1649725404,
  "object": "edit"
}
2022-04-11 21:03:30.088827 fix syntax errors 2 ['from math import gcd\nN = int(input())\nA = []\nfor _ in range(N):\n    T, X = map(int, input().split())\n    A.append([T, X])\n\nl = A[0][0]\nr = A[0][1]\nfor i in range(1, N):\n    l = l * A[i][0] // gcd(l, A[i][0])\n    r = r * A[i][1] // gcd(r, A[i][1])\n\nprint(l+r)\n', '\nN = int(input())\nA = []\nfor _ in range(N):\n    T, X = map(int, input().split())\n    A.append([T, X])\n\nl = A[0][0]\nr = A[0][1]\nfor i in range(1, N):\n    l = lcm(l, A[i][0]) % MOD\n    r = lcm(r, A[i][1]) % MOD\n\nprint(l+r)\n']
2022-04-11 21:03:30.088849 size on output set 4
