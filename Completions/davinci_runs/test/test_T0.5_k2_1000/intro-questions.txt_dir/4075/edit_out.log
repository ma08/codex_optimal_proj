2022-04-11 15:54:12.240793 num operations 2
2022-04-11 15:54:12.240813 size on input set 1
2022-04-11 15:54:17.004086 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    bulbs = [list(map(int, input().split())) for _ in range(m)]\n    states = list(map(int, input().split()))\n    switches = [[False] * n for _ in range(m)]  # \u5f00\u5173\u72b6\u6001\n    for i in range(m):\n        for j in range(1, bulbs[i][0] + 1):\n            switches[i][bulbs[i][j] - 1] = True\n    cnt = 0\n    for i in range(2 ** n):\n        flag = True\n        for j in range(m):\n            c = 0  # \u7edf\u8ba1\u5f00\u5173\u72b6\u6001\u4e3a1\u7684\u4e2a\u6570\n            for k in range(n):\n                if switches[j][k] and ((i >> k) & 1):\n                    c += 1\n            if c % 2 != states[j]:\n                flag = False\n                break\n        if flag:\n            cnt += 1\n    print(cnt)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    bulbs = [list(map(int, input().split())) for _ in range(m)]\n    states = list(map(int, input().split()))\n    switches = [[False] * n for _ in range(m)]\n    for i in range(m):\n        for j in range(1, bulbs[i][0] + 1):\n            switches[i][bulbs[i][j] - 1] = True\n    # print(switches)\n    cnt = 0\n    for i in range(2 ** n):\n        flag = True\n        for j in range(m):\n            c = 0\n            for k in range(n):\n                if switches[j][k] and ((i >> k) & 1):\n                    c += 1\n            if c % 2 != states[j]:\n                flag = False\n                break\n        if flag:\n            cnt += 1\n    print(cnt)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649706853,
  "object": "edit"
}
2022-04-11 15:54:17.004252 fix spelling mistakes 2 ["\n\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    bulbs = [list(map(int, input().split())) for _ in range(m)]\n    states = list(map(int, input().split()))\n    switches = [[False] * n for _ in range(m)]  # 开关状态\n    for i in range(m):\n        for j in range(1, bulbs[i][0] + 1):\n            switches[i][bulbs[i][j] - 1] = True\n    cnt = 0\n    for i in range(2 ** n):\n        flag = True\n        for j in range(m):\n            c = 0  # 统计开关状态为1的个数\n            for k in range(n):\n                if switches[j][k] and ((i >> k) & 1):\n                    c += 1\n            if c % 2 != states[j]:\n                flag = False\n                break\n        if flag:\n            cnt += 1\n    print(cnt)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, m = map(int, input().split())\n    bulbs = [list(map(int, input().split())) for _ in range(m)]\n    states = list(map(int, input().split()))\n    switches = [[False] * n for _ in range(m)]\n    for i in range(m):\n        for j in range(1, bulbs[i][0] + 1):\n            switches[i][bulbs[i][j] - 1] = True\n    # print(switches)\n    cnt = 0\n    for i in range(2 ** n):\n        flag = True\n        for j in range(m):\n            c = 0\n            for k in range(n):\n                if switches[j][k] and ((i >> k) & 1):\n                    c += 1\n            if c % 2 != states[j]:\n                flag = False\n                break\n        if flag:\n            cnt += 1\n    print(cnt)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 15:54:17.004297 size on output set 2
2022-04-11 15:54:17.004305 size on input set 2
2022-04-11 15:54:20.705249 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    bulbs = [list(map(int, input().split())) for _ in range(m)]\n    states = list(map(int, input().split()))\n    switches = [[False] * n for _ in range(m)]  # \u5f00\u5173\u72b6\u6001\n    for i in range(m):\n        for j in range(1, bulbs[i][0] + 1):\n            switches[i][bulbs[i][j] - 1] = True\n    cnt = 0\n    for i in range(2 ** n):\n        flag = True\n        for j in range(m):\n            c = 0  # \u7edf\u8ba1\u5f00\u5173\u72b6\u6001\u4e3a1\u7684\u4e2a\u6570\n            for k in range(n):\n                if switches[j][k] and ((i >> k) & 1):\n                    c += 1\n            if c % 2 != states[j]:\n                flag = False\n                break\n        if flag:\n            cnt += 1\n    print(cnt)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    bulbs = [list(map(int, input().split())) for _ in range(m)]\n    states = list(map(int, input().split()))\n    switches = [[False] * n for _ in range(m)]\n    for i in range(m):\n        for j in range(1, bulbs[i][0] + 1):\n            switches[i][bulbs[i][j] - 1] = True\n    cnt = 0\n    for i in range(2 ** n):\n        flag = True\n        for j in range(m):\n            c = 0\n            for k in range(n):\n                if switches[j][k] and ((i >> k) & 1):\n                    c += 1\n            if c % 2 != states[j]:\n                flag = False\n                break\n        if flag:\n            cnt += 1\n    print(cnt)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649706857,
  "object": "edit"
}
2022-04-11 15:54:20.705466 fix syntax errors 2 ["#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    bulbs = [list(map(int, input().split())) for _ in range(m)]\n    states = list(map(int, input().split()))\n    switches = [[False] * n for _ in range(m)]  # 开关状态\n    for i in range(m):\n        for j in range(1, bulbs[i][0] + 1):\n            switches[i][bulbs[i][j] - 1] = True\n    cnt = 0\n    for i in range(2 ** n):\n        flag = True\n        for j in range(m):\n            c = 0  # 统计开关状态为1的个数\n            for k in range(n):\n                if switches[j][k] and ((i >> k) & 1):\n                    c += 1\n            if c % 2 != states[j]:\n                flag = False\n                break\n        if flag:\n            cnt += 1\n    print(cnt)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    bulbs = [list(map(int, input().split())) for _ in range(m)]\n    states = list(map(int, input().split()))\n    switches = [[False] * n for _ in range(m)]\n    for i in range(m):\n        for j in range(1, bulbs[i][0] + 1):\n            switches[i][bulbs[i][j] - 1] = True\n    cnt = 0\n    for i in range(2 ** n):\n        flag = True\n        for j in range(m):\n            c = 0\n            for k in range(n):\n                if switches[j][k] and ((i >> k) & 1):\n                    c += 1\n            if c % 2 != states[j]:\n                flag = False\n                break\n        if flag:\n            cnt += 1\n    print(cnt)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 15:54:23.948902 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n, m = map(int, input().split())\n    bulbs = [list(map(int, input().split())) for _ in range(m)]\n    states = list(map(int, input().split()))\n    switches = [[False] * n for _ in range(m)]\n    for i in range(m):\n        for j in range(1, bulbs[i][0] + 1):\n            switches[i][bulbs[i][j] - 1] = True\n    cnt = 0\n    for i in range(2 ** n):\n        flag = True\n        for j in range(m):\n            c = 0\n            for k in range(n):\n                if switches[j][k] and ((i >> k) & 1) == 1:\n                    c += 1\n            if c % 2 != states[j]:\n                flag = False\n                break\n        if flag:\n            cnt += 1\n    print(cnt)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    bulbs = [list(map(int, input().split())) for _ in range(m)]\n    states = list(map(int, input().split()))\n    switches = [[False for _ in range(n)] for _ in range(m)]\n    for i in range(m):\n        for j in range(1, bulbs[i][0] + 1):\n            switches[i][bulbs[i][j] - 1] = True\n    cnt = 0\n    for i in range(2 ** n):\n        flag = True\n        for j in range(m):\n            c = 0\n            for k in range(n):\n                if switches[j][k] and ((i >> k) & 1):\n                    c += 1\n            if c % 2 != states[j]:\n                flag = False\n                break\n        if flag:\n            cnt += 1\n    print(cnt)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649706860,
  "object": "edit"
}
2022-04-11 15:54:23.949199 fix syntax errors 2 ["\ndef main():\n    n, m = map(int, input().split())\n    bulbs = [list(map(int, input().split())) for _ in range(m)]\n    states = list(map(int, input().split()))\n    switches = [[False] * n for _ in range(m)]\n    for i in range(m):\n        for j in range(1, bulbs[i][0] + 1):\n            switches[i][bulbs[i][j] - 1] = True\n    cnt = 0\n    for i in range(2 ** n):\n        flag = True\n        for j in range(m):\n            c = 0\n            for k in range(n):\n                if switches[j][k] and ((i >> k) & 1) == 1:\n                    c += 1\n            if c % 2 != states[j]:\n                flag = False\n                break\n        if flag:\n            cnt += 1\n    print(cnt)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, m = map(int, input().split())\n    bulbs = [list(map(int, input().split())) for _ in range(m)]\n    states = list(map(int, input().split()))\n    switches = [[False for _ in range(n)] for _ in range(m)]\n    for i in range(m):\n        for j in range(1, bulbs[i][0] + 1):\n            switches[i][bulbs[i][j] - 1] = True\n    cnt = 0\n    for i in range(2 ** n):\n        flag = True\n        for j in range(m):\n            c = 0\n            for k in range(n):\n                if switches[j][k] and ((i >> k) & 1):\n                    c += 1\n            if c % 2 != states[j]:\n                flag = False\n                break\n        if flag:\n            cnt += 1\n    print(cnt)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 15:54:23.949266 size on output set 4
2022-04-11 15:54:23.949301 num operations 2
2022-04-11 15:54:23.949312 size on input set 1
2022-04-11 15:54:28.667031 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n# input\nimport sys\nN, M = map(int, sys.stdin.readline().split())\n\nk_list = []\ns_list = []\nfor i in range(M):\n    k_list.append(int(sys.stdin.readline().split()[0]))\n    s_list.append(list(map(int, sys.stdin.readline().split())))\np_list = list(map(int, sys.stdin.readline().split()))\n\n# print(N, M)\n# print(k_list)\n# print(s_list)\n# print(p_list)\n\ndef make_light(state):\n    # print(state)\n    for i in range(M):\n        odd_even = 0\n        for j in range(k_list[i]):\n            if state[s_list[i][j]-1] == 1:\n                odd_even += 1\n        if odd_even % 2 != p_list[i]:\n            return False\n    return True\n\ndef make_state(state, n):\n    if n == N:\n        if make_light(state):\n            return 1\n        else:\n            return 0\n    else:\n        return make_state(state + [1], n+1) + make_state(state + [0], n+1)\n\nprint(make_state([], 0))\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\nN, M = map(int, sys.stdin.readline().split())\n\nk_list = []\ns_list = []\nfor i in range(M):\n    k_list.append(int(sys.stdin.readline().split()[0]))\n    s_list.append(list(map(int, sys.stdin.readline().split())))\n\np_list = list(map(int, sys.stdin.readline().split()))\n\n# print(N, M)\n# print(k_list)\n# print(s_list)\n# print(p_list)\n\ndef make_lights(state):\n    # print(state)\n    for i in range(M):\n        odd_even = 0\n        for j in range(k_list[i]):\n            if state[s_list[i][j]-1] == 1:\n                odd_even += 1\n        if odd_even % 2 != p_list[i]:\n            return False\n    return True\n\ndef make_state(state, n):\n    if n == N:\n        if make_lights(state):\n            return 1\n        else:\n            return 0\n    else:\n        return make_state(state + [1], n+1) + make_state(state + [0], n+1)\n\nprint(make_state([], 0))\n"
    }
  ],
  "created": 1649706864,
  "object": "edit"
}
2022-04-11 15:54:28.667422 fix spelling mistakes 2 ['\n# input\nimport sys\nN, M = map(int, sys.stdin.readline().split())\n\nk_list = []\ns_list = []\nfor i in range(M):\n    k_list.append(int(sys.stdin.readline().split()[0]))\n    s_list.append(list(map(int, sys.stdin.readline().split())))\np_list = list(map(int, sys.stdin.readline().split()))\n\n# print(N, M)\n# print(k_list)\n# print(s_list)\n# print(p_list)\n\ndef make_light(state):\n    # print(state)\n    for i in range(M):\n        odd_even = 0\n        for j in range(k_list[i]):\n            if state[s_list[i][j]-1] == 1:\n                odd_even += 1\n        if odd_even % 2 != p_list[i]:\n            return False\n    return True\n\ndef make_state(state, n):\n    if n == N:\n        if make_light(state):\n            return 1\n        else:\n            return 0\n    else:\n        return make_state(state + [1], n+1) + make_state(state + [0], n+1)\n\nprint(make_state([], 0))\n', '\n\nimport sys\n\nN, M = map(int, sys.stdin.readline().split())\n\nk_list = []\ns_list = []\nfor i in range(M):\n    k_list.append(int(sys.stdin.readline().split()[0]))\n    s_list.append(list(map(int, sys.stdin.readline().split())))\n\np_list = list(map(int, sys.stdin.readline().split()))\n\n# print(N, M)\n# print(k_list)\n# print(s_list)\n# print(p_list)\n\ndef make_lights(state):\n    # print(state)\n    for i in range(M):\n        odd_even = 0\n        for j in range(k_list[i]):\n            if state[s_list[i][j]-1] == 1:\n                odd_even += 1\n        if odd_even % 2 != p_list[i]:\n            return False\n    return True\n\ndef make_state(state, n):\n    if n == N:\n        if make_lights(state):\n            return 1\n        else:\n            return 0\n    else:\n        return make_state(state + [1], n+1) + make_state(state + [0], n+1)\n\nprint(make_state([], 0))\n']
2022-04-11 15:54:28.667463 size on output set 2
2022-04-11 15:54:28.667472 size on input set 2
2022-04-11 15:54:38.035454 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport itertools\nimport sys\n\nN, M = map(int, sys.stdin.readline().split())\n\nk_list = [0] * M\ns_list = [[0] * 10 for i in range(M)]\nfor i in range(M):\n    k_list[i] = int(sys.stdin.readline().split()[0])\n    s_list[i] = list(map(int, sys.stdin.readline().split()))\n\np_list = list(map(int, sys.stdin.readline().split()))\n\nstate_list = list(itertools.product([0, 1], repeat=N))\n\ndef check_lights(state):\n    for i in range(M):\n        odd_even = 0\n        for j in range(k_list[i]):\n            if state[s_list[i][j]-1] == 1:\n                odd_even += 1\n        if odd_even % 2 != p_list[i]:\n            return False\n    return True\n\ndef make_state(state, n):\n    if n == N:\n        if check_lights(state):\n            return 1\n        else:\n            return 0\n    else:\n        return make_state(state + [1], n+1) + make_state(state + [0], n+1)\n\nans = 0\nfor state in state_list:\n    if check_lights(state):\n        ans += 1\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nN, M = map(int, sys.stdin.readline().split())\n\nk_list = []\ns_list = []\nfor i in range(M):\n    k_list.append(int(sys.stdin.readline().split()[0]))\n    s_list.append(list(map(int, sys.stdin.readline().split())))\np_list = list(map(int, sys.stdin.readline().split()))\n# print(N, M)\n# print(k_list)\n# print(s_list)\n# print(p_list)\ndef make_lights(state):\n    # print(state)\n    for i in range(M):\n        odd_even = 0\n        for j in range(k_list[i]):\n            if state[s_list[i][j]-1] == 1:\n                odd_even += 1\n        if odd_even % 2 != p_list[i]:\n            return False\n    return True\ndef make_state(state, n):\n    if n == N:\n        if make_lights(state):\n            return 1\n        else:\n            return 0\n    else:\n        return make_state(state + [1], n+1) + make_state(state + [0], n+1)\nprint(make_state([], 0))\n"
    }
  ],
  "created": 1649706868,
  "object": "edit"
}
2022-04-11 15:54:38.035669 fix syntax errors 2 ['\nimport itertools\nimport sys\n\nN, M = map(int, sys.stdin.readline().split())\n\nk_list = [0] * M\ns_list = [[0] * 10 for i in range(M)]\nfor i in range(M):\n    k_list[i] = int(sys.stdin.readline().split()[0])\n    s_list[i] = list(map(int, sys.stdin.readline().split()))\n\np_list = list(map(int, sys.stdin.readline().split()))\n\nstate_list = list(itertools.product([0, 1], repeat=N))\n\ndef check_lights(state):\n    for i in range(M):\n        odd_even = 0\n        for j in range(k_list[i]):\n            if state[s_list[i][j]-1] == 1:\n                odd_even += 1\n        if odd_even % 2 != p_list[i]:\n            return False\n    return True\n\ndef make_state(state, n):\n    if n == N:\n        if check_lights(state):\n            return 1\n        else:\n            return 0\n    else:\n        return make_state(state + [1], n+1) + make_state(state + [0], n+1)\n\nans = 0\nfor state in state_list:\n    if check_lights(state):\n        ans += 1\n\nprint(ans)\n', '\nimport sys\nN, M = map(int, sys.stdin.readline().split())\n\nk_list = []\ns_list = []\nfor i in range(M):\n    k_list.append(int(sys.stdin.readline().split()[0]))\n    s_list.append(list(map(int, sys.stdin.readline().split())))\np_list = list(map(int, sys.stdin.readline().split()))\n# print(N, M)\n# print(k_list)\n# print(s_list)\n# print(p_list)\ndef make_lights(state):\n    # print(state)\n    for i in range(M):\n        odd_even = 0\n        for j in range(k_list[i]):\n            if state[s_list[i][j]-1] == 1:\n                odd_even += 1\n        if odd_even % 2 != p_list[i]:\n            return False\n    return True\ndef make_state(state, n):\n    if n == N:\n        if make_lights(state):\n            return 1\n        else:\n            return 0\n    else:\n        return make_state(state + [1], n+1) + make_state(state + [0], n+1)\nprint(make_state([], 0))\n']
2022-04-11 15:54:59.950902 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# input\nimport sys\n\nN, M = map(int, input().split())\n\nk_list = []\ns_list = []\nfor i in range(M):\n    k_list.append(int(input().split()[0]))\n    s_list.append(list(map(int, input().split())))\np_list = list(map(int, input().split()))\n\n# print(N, M)\n# print(k_list)\n# print(s_list)\n# print(p_list)\n\ndef make_light(state, N):\n    for i in range(M):\n        odd_even = 0\n        for j in range(k_list[i]):\n            if state[s_list[i][j] - 1] == 1:\n                odd_even += 1\n        if odd_even % 2 != p_list[i]:\n            return False\n    return True\n\ndef make_state(state, n, N):\n    if n == N:\n        if make_light(state, N):\n            return 1\n        else:\n            return 0\n    else:\n        return make_state(state + [1], n + 1, N) + make_state(state + [0], n + 1, N)\n\nprint(make_state([], 0, N))\n"
    },
    {
      "index": 1,
      "text": "\n# # input\n# import sys\n# N, M = map(int, sys.stdin.readline().split())\n\n# k_list = []\n# s_list = []\n# for i in range(M):\n#     k_list.append(int(sys.stdin.readline().split()[0]))\n#     s_list.append(list(map(int, sys.stdin.readline().split())))\n# p_list = list(map(int, sys.stdin.readline().split()))\n\n# # print(N, M)\n# # print(k_list)\n# # print(s_list)\n# # print(p_list)\n\n# def make_light(state):\n#     # print(state)\n#     for i in range(M):\n#         odd_even = 0\n#         for j in range(k_list[i]):\n#             if state[s_list[i][j]-1] == 1:\n#                 odd_even += 1\n#         if odd_even % 2 != p_list[i]:\n#             return False\n#     return True\n\n# def make_state(state, n):\n#     if n == N:\n#         if make_light(state):\n#             return 1\n#         else:\n#             return 0\n#     else:\n#         return make_state(state + [1], n+1) + make_state(state + [0], n+1)\n\n# print(make_state([], 0))\n\nN = int(input())\nA = list(map(int, input().split()))\n\nA.sort()\n\nfor i in range(N):\n    if i == 0:\n        ans = A[i]\n    else:\n        ans = ans * A[i]\n\nprint(ans)\n"
    }
  ],
  "created": 1649706878,
  "object": "edit"
}
2022-04-11 15:54:59.951078 fix syntax errors 2 ['# input\nimport sys\n\nN, M = map(int, input().split())\n\nk_list = []\ns_list = []\nfor i in range(M):\n    k_list.append(int(input().split()[0]))\n    s_list.append(list(map(int, input().split())))\np_list = list(map(int, input().split()))\n\n# print(N, M)\n# print(k_list)\n# print(s_list)\n# print(p_list)\n\ndef make_light(state, N):\n    for i in range(M):\n        odd_even = 0\n        for j in range(k_list[i]):\n            if state[s_list[i][j] - 1] == 1:\n                odd_even += 1\n        if odd_even % 2 != p_list[i]:\n            return False\n    return True\n\ndef make_state(state, n, N):\n    if n == N:\n        if make_light(state, N):\n            return 1\n        else:\n            return 0\n    else:\n        return make_state(state + [1], n + 1, N) + make_state(state + [0], n + 1, N)\n\nprint(make_state([], 0, N))\n', '\n# # input\n# import sys\n# N, M = map(int, sys.stdin.readline().split())\n\n# k_list = []\n# s_list = []\n# for i in range(M):\n#     k_list.append(int(sys.stdin.readline().split()[0]))\n#     s_list.append(list(map(int, sys.stdin.readline().split())))\n# p_list = list(map(int, sys.stdin.readline().split()))\n\n# # print(N, M)\n# # print(k_list)\n# # print(s_list)\n# # print(p_list)\n\n# def make_light(state):\n#     # print(state)\n#     for i in range(M):\n#         odd_even = 0\n#         for j in range(k_list[i]):\n#             if state[s_list[i][j]-1] == 1:\n#                 odd_even += 1\n#         if odd_even % 2 != p_list[i]:\n#             return False\n#     return True\n\n# def make_state(state, n):\n#     if n == N:\n#         if make_light(state):\n#             return 1\n#         else:\n#             return 0\n#     else:\n#         return make_state(state + [1], n+1) + make_state(state + [0], n+1)\n\n# print(make_state([], 0))\n\nN = int(input())\nA = list(map(int, input().split()))\n\nA.sort()\n\nfor i in range(N):\n    if i == 0:\n        ans = A[i]\n    else:\n        ans = ans * A[i]\n\nprint(ans)\n']
2022-04-11 15:54:59.951118 size on output set 4
