["\n\nN = int(input())\n\nd = {}\nfor i in range(N):\n    S, P = input().split()\n    P = int(P)\n    if S in d:\n        d[S].append((i + 1, P))\n    else:\n        d[S] = [(i + 1, P)]\n\nfor S in sorted(d.keys()):\n    for i, P in sorted(d[S], key=lambda x: x[1], reverse=True):  # key=lambda x: x[1]\u306fx[1]\u306e\u5024\u3067\u30bd\u30fc\u30c8\u3059\u308b\u3002\n        print(i)\n", "\nn = int(input())\nd = {}\nfor i in range(n):\n    s, p = input().split()\n    p = int(p)\n    if s not in d.keys():\n        d[s] = [p]\n    else:\n        d[s].append(p)\n\nfor s in sorted(d.keys()):\n    d[s].sort(reverse=True)\n\nfor s in sorted(d.keys()):\n    for p in d[s]:\n        print(s, p)\n", "# coding: utf-8\n\nn = int(input())\nd = {}\nfor i in range(n):\n    s, p = input().split()  # s: subject, p: point\n    p = int(p)  # convert str to int\n    if s not in d.keys():\n        d[s] = [p]  # d[s] is a list\n    else:\n        d[s].append(p)  # append p to the list d[s]\n\nfor s in sorted(d.keys()):\n    d[s].sort(reverse=True)  # sort the list d[s] in descending order\n\nfor s in sorted(d.keys()):\n    for p in d[s]:\n        print(p)  # print each element in the list d[s]\n", "# coding: utf-8\n\nn = int(input())\nd = {}\nfor i in range(n):\n    s, p = input().split() # s: subject, p: point\n    p = int(p) # convert str to int\n    if s not in d.keys():\n        d[s] = [p] # create a new list\n    else:\n        d[s].append(p) # add the point to the list\n\nfor s in sorted(d.keys()):\n    d[s].sort(reverse=True) # sort in descending order\n\nfor s in sorted(d.keys()):\n    for p in d[s]: # print out the points\n        print(p)\n", "\n#\nN = int(input())\n\nd = {}\nfor i in range(N):\n    S, P = input().split()\n    P = int(P)\n    if S in d:\n        d[S].append((i + 1, P))\n    else:\n        d[S] = [(i + 1, P)]\n\nfor S in sorted(d.keys()):\n    for i, P in sorted(d[S], key=lambda x: x[1], reverse=True):  # key=lambda x: x[1]\u306fx[1]\u306e\u5024\u3067\u30bd\u30fc\u30c8\u3059\u308b\n        print(i)\n", "n = int(input())\nd = {}\nfor i in range(n):\n    s, p = input().split()\n    p = int(p)\n    if s not in d.keys():\n        d[s] = [p]\n    else:\n        d[s].append(p)\n\nfor s in sorted(d.keys()):\n    d[s].sort(reverse=True)\n\nfor s in sorted(d.keys()):\n    for p in d[s]:\n        print(p)\n", "N = int(input())\nd = {}\nfor i in range(N):\n    S, P = input().split()\n    P = int(P)\n    if S in d:\n        d[S].append((i + 1, P))\n    else:\n        d[S] = [(i + 1, P)]\nfor S in sorted(d.keys()):\n    for i, P in sorted(d[S], key=lambda x: x[1], reverse=True):\n        print(i)\n", "N = int(input())\n\nd = {}\nfor i in range(N):\n    S, P = input().split()\n    P = int(P)\n    if S in d:\n        d[S].append((i + 1, P))\n    else:\n        d[S] = [(i + 1, P)]\n\nfor S in sorted(d.keys()):\n    for i, P in sorted(d[S], key=lambda x: (-x[1], x[0])):\n        print(i)\n"]