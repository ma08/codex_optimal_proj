2022-04-11 19:19:39.849911 num operations 2
2022-04-11 19:19:39.849942 size on input set 1
2022-04-11 19:19:43.757481 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    # N = int(sys.stdin.readline().strip())\n    # for i in range(N, 1000):\n    #     if (i % 111) == 0:\n    #         print(i)\n    #         break\n    print(sys.stdin.readline().strip())\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    for i in range(N, 1000):\n        if (i % 111) == 0:\n            print(i)\n            break\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649719180,
  "object": "edit"
}
2022-04-11 19:19:43.757639 fix spelling mistakes 2 ['\n\nimport sys\n\ndef main():\n    # N = int(sys.stdin.readline().strip())\n    # for i in range(N, 1000):\n    #     if (i % 111) == 0:\n    #         print(i)\n    #         break\n    print(sys.stdin.readline().strip())\n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    for i in range(N, 1000):\n        if (i % 111) == 0:\n            print(i)\n            break\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 19:19:43.757662 size on output set 2
2022-04-11 19:19:43.757670 size on input set 2
2022-04-11 19:19:47.771222 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    for i in range(N, 1000):\n        if (i % 111) == 0:\n            print(i)\n            break\n    print(sys.stdin.readline().strip())\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    for i in range(N, 1000):\n        if (i % 111) == 0:\n            print(i)\n            break\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649719183,
  "object": "edit"
}
2022-04-11 19:19:47.771485 fix syntax errors 2 ['\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    for i in range(N, 1000):\n        if (i % 111) == 0:\n            print(i)\n            break\n    print(sys.stdin.readline().strip())\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    for i in range(N, 1000):\n        if (i % 111) == 0:\n            print(i)\n            break\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 19:19:51.047248 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    for i in range(N, 1000): # range(start, stop)\n        if (i % 111) == 0:\n            print(i)\n            break\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    if N > 1000:\n        print(1000)\n    else:\n        for i in range(N, 1000):\n            if (i % 111) == 0:\n                print(i)\n                break\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649719187,
  "object": "edit"
}
2022-04-11 19:19:51.047407 fix syntax errors 2 ['#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    for i in range(N, 1000): # range(start, stop)\n        if (i % 111) == 0:\n            print(i)\n            break\n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    N = int(sys.stdin.readline().strip())\n    if N > 1000:\n        print(1000)\n    else:\n        for i in range(N, 1000):\n            if (i % 111) == 0:\n                print(i)\n                break\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 19:19:51.047423 size on output set 4
2022-04-11 19:19:51.047433 num operations 2
2022-04-11 19:19:51.047437 size on input set 1
2022-04-11 19:19:52.933864 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nN = int(sys.stdin.readline())\n\nfor i in range(100, N + 1):\n    if len(set(list(str(i)))) == 1:\n        print(i)\n        break\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nN = int(sys.stdin.readline())\n\nfor i in range(100, N + 1):\n    if len(set(list(str(i)))) == 1:\n        print(i)\n        break\n"
    }
  ],
  "created": 1649719191,
  "object": "edit"
}
2022-04-11 19:19:52.933981 fix spelling mistakes 2 ['\nimport sys\n\nN = int(sys.stdin.readline())\n\nfor i in range(100, N + 1):\n    if len(set(list(str(i)))) == 1:\n        print(i)\n        break\n', '\nimport sys\n\nN = int(sys.stdin.readline())\n\nfor i in range(100, N + 1):\n    if len(set(list(str(i)))) == 1:\n        print(i)\n        break\n']
2022-04-11 19:19:52.933993 size on output set 1
2022-04-11 19:19:52.933997 size on input set 1
2022-04-11 19:19:56.487265 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\nN = int(sys.stdin.readline())\n\nif N < 100:\n    print(N)\nelse:\n    for i in range(100, N + 1):\n        if len(set(list(str(i)))) == 1:\n            print(i)\n            break\n"
    },
    {
      "index": 1,
      "text": "import sys\n\nN = int(sys.stdin.readline())\n\nfor i in range(100, N + 1):\n    if len(set(list(str(i)))) == 1:\n        print(i)\n        break\n"
    }
  ],
  "created": 1649719193,
  "object": "edit"
}
2022-04-11 19:19:56.487560 fix syntax errors 2 ['import sys\n\nN = int(sys.stdin.readline())\n\nif N < 100:\n    print(N)\nelse:\n    for i in range(100, N + 1):\n        if len(set(list(str(i)))) == 1:\n            print(i)\n            break\n', 'import sys\n\nN = int(sys.stdin.readline())\n\nfor i in range(100, N + 1):\n    if len(set(list(str(i)))) == 1:\n        print(i)\n        break\n']
2022-04-11 19:19:56.487570 size on output set 2
