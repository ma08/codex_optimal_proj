["\n\ndef remove_adjacent(nums):\n    word = input()\n    for i in range(1,len(word)):\n        if word[i] == word[i-1]:\n            word = word[:i] + word[i+1:]\n            i -= 1\n\nprint(word)\n", "\n\nname = input(\"Enter your name: \")\n\ncompacted = \"\"\n\nfor i in range(len(name)):\n    if name[i] != name[i - 1]:\n        compacted += name[i]\n\nprint(compacted)\n", "\ndef remove_adjacent(nums):\n    for i in range(1,len(nums)):\n        if nums[i] == nums[i-1]:\n            nums = nums[:i] + nums[i+1:]\n            i -= 1\n    return nums\n\nprint(remove_adjacent([1, 2, 2, 3]))\n", "\nimport sys\n\ndef main():\n    string = sys.stdin.readline().strip()\n    compact = string[0]\n    for i in range(1, len(string)):\n        if string[i] != compact[-1]:\n            compact += string[i]\n    print(compact) \n\nmain()\n", "\n\ndef remove_adjacent(lst):\n    i = 0\n\n    while i < len(lst) - 1:\n        if lst[i] == lst[i + 1]:\n            lst = lst[:i + 1] + lst[i + 2:]\n        else:\n            i += 1\n\n    return lst\n", "\nname = input(\"Enter your name: \")\ncompact = \"\"\n\nfor i in range(len(name)):\n    if name[i] != name[i - 1]:\n        compact += name[i]\n\nprint(compact)\n", "\n\nname = input(\"Enter your name: \")\n\ncompacted = name[0].upper()\n\nfor i in range(1,len(name)):\n    if name[i] != name[i-1]:\n        compacted += name[i].upper()\n\nprint(compacted)\n", "\nword = input() # \u0432\u0432\u043e\u0434\u0438\u043c \u0441\u043b\u043e\u0432\u043e\n\nprint(word[0], end='') # \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u043f\u0435\u0440\u0432\u0443\u044e \u0431\u0443\u043a\u0432\u0443\n\nfor i in range(1, len(word)):\n    if word[i-1] != word[i]:\n        print(word[i], end='')\n", "\nimport sys\n\ndef main():\n    string = sys.stdin.readline().strip() # read in the string\n    compact = string[0] # start the compact string with the first letter of the string\n    for i in range(1, len(string)): # loop through the string\n        if string[i] != compact[-1]: # if the current letter is not the same as the last letter of the compact string\n            compact += string[i] # add the current letter to the compact string\n    print(compact) # print the compact string\n\nmain() # call the main function\n", "\n\nword = input()\nfor i in range(1, len(word)):\n    if word[i] == word[i-1]:\n        word = word[:i] + word[i+1:]\n        i -= 1\n\nprint(word)\n", "\nname = input()\ni = 0\n\nwhile i < len(name) - 1:\n    if name[i] == name[i + 1] and name[i] != ' ':\n        name = name[:i + 1] + name[i + 2:]\n    else:\n        i += 1\n\nprint(name)\n", "\nname = input()  # \u0432\u0432\u043e\u0434\u0438\u043c \u0441\u0442\u0440\u043e\u043a\u0443\ni = 0\n\nwhile i < len(name) - 1:  # \u043f\u043e\u043a\u0430 \u0438\u043d\u0434\u0435\u043a\u0441 \u043c\u0435\u043d\u044c\u0448\u0435 \u0434\u043b\u0438\u043d\u044b \u0441\u0442\u0440\u043e\u043a\u0438\n    if name[i] == name[i + 1]:  # \u0435\u0441\u043b\u0438 \u0441\u0438\u043c\u0432\u043e\u043b \u0440\u0430\u0432\u0435\u043d \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c\u0443\n        name = name[:i + 1] + name[i + 2:]  # \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u0441\u0438\u043c\u0432\u043e\u043b\n    else:\n        i += 1  # \u0438\u043d\u0430\u0447\u0435 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043a \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c\u0443 \u0441\u0438\u043c\u0432\u043e\u043b\u0443\n\nprint(name)\n", "import sys, string\n\ndef main():\n    for line in sys.stdin:\n        name = line.strip()\n        compact = name[0]\n        for i in range(1, len(name)):\n            if name[i] != compact[-1]:\n                compact += name[i]\n        print(compact)\n\nmain()\n", "\n\nword = input()\n\nprint(word[0], end='')\nfor i in range(1, len(word)):\n    if word[i-1] != word[i]:\n        print(word[i], end='')\n", "\n\nname = input()  # \u0432\u0432\u043e\u0434\u0438\u043c \u0441\u0442\u0440\u043e\u043a\u0443\ni = 0\n\nwhile i < len(name) - 1:  # \u043f\u043e\u043a\u0430 \u0438\u043d\u0434\u0435\u043a\u0441 \u043c\u0435\u043d\u044c\u0448\u0435 \u0434\u043b\u0438\u043d\u044b \u0441\u0442\u0440\u043e\u043a\u0438\n    if name[i] == name[i + 1]:  # \u0435\u0441\u043b\u0438 \u0441\u0438\u043c\u0432\u043e\u043b \u0440\u0430\u0432\u0435\u043d \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c\u0443\n        name = name[:i + 1] + name[i + 2:]  # \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u0441\u0438\u043c\u0432\u043e\u043b\n    else:\n        i += 1  # \u0438\u043d\u0430\u0447\u0435 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043a \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c\u0443 \u0441\u0438\u043c\u0432\u043e\u043b\u0443\n\nprint(name)\n", "\n\nname = input()\nnew_name = \"\"\n\nfor i in range(len(name)):\n    if i == 0:\n        new_name += name[0]\n    elif name[i] != name[i-1]:\n        new_name += name[i]\n\nprint(new_name)\n", "\n\nname = input(\"Enter your name: \").lower()\n\ncompact = \"\"\n\nfor i in range(len(name) - 1):\n    if name[i] != name[i + 1]:\n        compact += name[i + 1]\n\nprint(compact)\n", "\nname = input(\"Enter your name: \")\n\ncompacted = name[0]\n\nfor i in range(1,len(name)):\n    if name[i] != name[i-1]:\n        compacted += name[i]\n\nprint(compacted)\n", "\ndef remove_adjacent(nums):\n    i = 0\n    while i < len(nums)-1:\n        if nums[i] == nums[i+1]:\n            nums.pop(i)\n        else:\n            i += 1\n    return nums\n\nprint(remove_adjacent([1,2,2,3,4,4,4,4,5]))\n", "import sys\n\ndef main():\n    name = sys.stdin.readline().strip()\n    compact = name[0] # compact is a string\n    for i in range(1, len(name)):\n        if name[i] != compact[-1]: # compact[-1] is the last element of compact\n            compact += name[i]\n    print(compact)\n\nmain()\n", "\nword = input()\n\nprint(word[0], end='') # \u043f\u0435\u0447\u0430\u0442\u0430\u0435\u043c \u043f\u0435\u0440\u0432\u0443\u044e \u0431\u0443\u043a\u0432\u0443\nfor i in range(1, len(word)):\n    if word[i-1] != word[i]: # \u0435\u0441\u043b\u0438 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0430\u044f \u0431\u0443\u043a\u0432\u0430 \u043d\u0435 \u0440\u0430\u0432\u043d\u0430 \u0442\u0435\u043a\u0443\u0449\u0435\u0439, \u0442\u043e \u043f\u0435\u0447\u0430\u0442\u0430\u0435\u043c \u0442\u0435\u043a\u0443\u0449\u0443\u044e\n        print(word[i], end='')\n", "\n\nname = input()  # input string\n\ncompacted = name[0]  # first character\n\nfor i in range(1, len(name)):\n    if name[i] != name[i - 1]:\n        compacted += name[i]\n\nprint(compacted)\n", "\n\nname = input()\n\ncompacted = \"\"\n\nfor i in range(len(name)):\n    if name[i] != name[i - 1] or i == 0:\n        compacted += name[i]\n\nprint(compacted)\n", "\nprint(input()[0], end = \"\")\nfor i in range(1, len(input())): \n    if input()[i] != input()[i - 1]: \n        print(input()[i], end = \"\")\n", "\n\nname = input()  # input name\n\nprint(name[0], end=\"\")\nfor i in range(1, len(name)):\n    if name[i] != name[i - 1]:\n        print(name[i], end=\"\")\n", "\n\nname = input()  # \u0432\u0432\u043e\u0434\u0438\u043c \u0438\u043c\u044f\nnew_name = \"\"  # \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0434\u043b\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u0438\u043c\u0435\u043d\u0438\n\nfor i in range(len(name)):  # \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u043c \u043f\u043e \u0432\u0441\u0435\u043c \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c \u0438\u043c\u0435\u043d\u0438\n    if i == 0:\n        new_name += name[0]\n    elif name[i] != name[i-1]:  # \u0435\u0441\u043b\u0438 \u0441\u0438\u043c\u0432\u043e\u043b \u043d\u0435 \u0440\u0430\u0432\u0435\u043d \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u043c\u0443, \u0442\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0435\u0433\u043e \u0432 \u043d\u043e\u0432\u043e\u0435 \u0438\u043c\u044f\n        new_name += name[i]\n\nprint(new_name)\n", "\nprint(input()[0], end='')\nfor i in range(1, len(input())): \n    if input()[i] != input()[i - 1]: \n        print(input()[i], end='')\n"]