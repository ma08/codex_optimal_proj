2022-04-12 00:02:45.049032 num operations 2
2022-04-12 00:02:45.049054 size on input set 1
2022-04-12 00:02:49.281561 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nname = input() # input string\n\ncompacted = name[0] # first character\n\nfor i in range(1,len(name)):\n    if name[i] != name[i-1]:\n        compacted += name[i]\n\nprint(compacted)\n"
    },
    {
      "index": 1,
      "text": "\n\nname = input(\"Enter your name: \")\n\ncompacted = name[0]\n\nfor i in range(1,len(name)):\n    if name[i] != name[i-1]:\n        compacted += name[i]\n\nprint(compacted)\n"
    }
  ],
  "created": 1649736165,
  "object": "edit"
}
2022-04-12 00:02:49.281681 fix spelling mistakes 2 ['\n\nname = input() # input string\n\ncompacted = name[0] # first character\n\nfor i in range(1,len(name)):\n    if name[i] != name[i-1]:\n        compacted += name[i]\n\nprint(compacted)\n', '\n\nname = input("Enter your name: ")\n\ncompacted = name[0]\n\nfor i in range(1,len(name)):\n    if name[i] != name[i-1]:\n        compacted += name[i]\n\nprint(compacted)\n']
2022-04-12 00:02:49.281694 size on output set 2
2022-04-12 00:02:49.281698 size on input set 2
2022-04-12 00:02:53.034612 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nname = input(\"Enter your name: \")\n\ncompacted = name[0].upper()\n\nfor i in range(1,len(name)):\n    if name[i] != name[i-1]:\n        compacted += name[i].upper()\n\nprint(compacted)\n"
    },
    {
      "index": 1,
      "text": "\nname = input(\"Enter your name: \")\n\ncompacted = name[0]\n\nfor i in range(1,len(name)):\n    if name[i] != name[i-1]:\n        compacted += name[i]\n\nprint(compacted)\n"
    }
  ],
  "created": 1649736169,
  "object": "edit"
}
2022-04-12 00:02:53.034969 fix syntax errors 2 ['\n\nname = input("Enter your name: ")\n\ncompacted = name[0].upper()\n\nfor i in range(1,len(name)):\n    if name[i] != name[i-1]:\n        compacted += name[i].upper()\n\nprint(compacted)\n', '\nname = input("Enter your name: ")\n\ncompacted = name[0]\n\nfor i in range(1,len(name)):\n    if name[i] != name[i-1]:\n        compacted += name[i]\n\nprint(compacted)\n']
2022-04-12 00:02:57.244918 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nname = input()  # input string\n\ncompacted = name[0]  # first character\n\nfor i in range(1, len(name)):\n    if name[i] != name[i - 1]:\n        compacted += name[i]\n\nprint(compacted)\n"
    },
    {
      "index": 1,
      "text": "\n\nname = input()  # input string\n\ncompacted = name[0]  # first character\n\nfor i in range(1, len(name)):\n    if name[i] != name[i - 1]:\n        compacted += name[i]\n\nprint(compacted)\n"
    }
  ],
  "created": 1649736173,
  "object": "edit"
}
2022-04-12 00:02:57.245099 fix syntax errors 2 ['\n\nname = input()  # input string\n\ncompacted = name[0]  # first character\n\nfor i in range(1, len(name)):\n    if name[i] != name[i - 1]:\n        compacted += name[i]\n\nprint(compacted)\n', '\n\nname = input()  # input string\n\ncompacted = name[0]  # first character\n\nfor i in range(1, len(name)):\n    if name[i] != name[i - 1]:\n        compacted += name[i]\n\nprint(compacted)\n']
2022-04-12 00:02:57.245126 size on output set 3
2022-04-12 00:02:57.245148 num operations 2
2022-04-12 00:02:57.245152 size on input set 1
2022-04-12 00:03:01.397655 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nprint(input()[0], end=\"\")\nfor i in range(1, len(input())):\n    if input()[i] != input()[i - 1]:\n        print(input()[i], end=\"\")\n"
    },
    {
      "index": 1,
      "text": "\n\nname = input() #input name\n\nprint(name[0], end=\"\")\nfor i in range(1, len(name)):\n    if name[i] != name[i - 1]:\n        print(name[i], end=\"\")\n"
    }
  ],
  "created": 1649736177,
  "object": "edit"
}
2022-04-12 00:03:01.397772 fix spelling mistakes 2 ['\nprint(input()[0], end="")\nfor i in range(1, len(input())):\n    if input()[i] != input()[i - 1]:\n        print(input()[i], end="")\n', '\n\nname = input() #input name\n\nprint(name[0], end="")\nfor i in range(1, len(name)):\n    if name[i] != name[i - 1]:\n        print(name[i], end="")\n']
2022-04-12 00:03:01.397784 size on output set 2
2022-04-12 00:03:01.397788 size on input set 2
2022-04-12 00:03:05.874711 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nprint(input()[0], end='')\nfor i in range(1, len(input())): \n    if input()[i] != input()[i - 1]: \n        print(input()[i], end='')\n"
    },
    {
      "index": 1,
      "text": "\nprint(input()[0], end = \"\")\nfor i in range(1, len(input())): \n    if input()[i] != input()[i - 1]: \n        print(input()[i], end = \"\")\n"
    }
  ],
  "created": 1649736181,
  "object": "edit"
}
2022-04-12 00:03:05.874934 fix syntax errors 2 ["\nprint(input()[0], end='')\nfor i in range(1, len(input())): \n    if input()[i] != input()[i - 1]: \n        print(input()[i], end='')\n", '\nprint(input()[0], end = "")\nfor i in range(1, len(input())): \n    if input()[i] != input()[i - 1]: \n        print(input()[i], end = "")\n']
2022-04-12 00:03:10.669526 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nname = input()  # input name\n\nprint(name[0], end=\"\")\nfor i in range(1, len(name)):\n    if name[i] != name[i - 1]:\n        print(name[i], end=\"\")\n"
    },
    {
      "index": 1,
      "text": "\n\nname = input()  # input name\n\nprint(name[0], end=\"\")\nfor i in range(1, len(name)):\n    if name[i] != name[i - 1]:\n        print(name[i], end=\"\")\n"
    }
  ],
  "created": 1649736186,
  "object": "edit"
}
2022-04-12 00:03:10.669678 fix syntax errors 2 ['\n\nname = input()  # input name\n\nprint(name[0], end="")\nfor i in range(1, len(name)):\n    if name[i] != name[i - 1]:\n        print(name[i], end="")\n', '\n\nname = input()  # input name\n\nprint(name[0], end="")\nfor i in range(1, len(name)):\n    if name[i] != name[i - 1]:\n        print(name[i], end="")\n']
2022-04-12 00:03:10.669695 size on output set 3
2022-04-12 00:03:10.669702 num operations 2
2022-04-12 00:03:10.669705 size on input set 1
2022-04-12 00:03:15.058365 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nname = input()\nfor i in range(1,len(name)):\n    if name[i] == name[i-1]:\n        name = name[:i] + name[i+1:]\n        i -= 1\n\nprint(name)\n"
    },
    {
      "index": 1,
      "text": "\n\nword = input()\nfor i in range(1,len(word)):\n    if word[i] == word[i-1]:\n        word = word[:i] + word[i+1:]\n        i -= 1\n\nprint(word)\n"
    }
  ],
  "created": 1649736190,
  "object": "edit"
}
2022-04-12 00:03:15.058691 fix spelling mistakes 2 ['\nname = input()\nfor i in range(1,len(name)):\n    if name[i] == name[i-1]:\n        name = name[:i] + name[i+1:]\n        i -= 1\n\nprint(name)\n', '\n\nword = input()\nfor i in range(1,len(word)):\n    if word[i] == word[i-1]:\n        word = word[:i] + word[i+1:]\n        i -= 1\n\nprint(word)\n']
2022-04-12 00:03:15.058745 size on output set 2
2022-04-12 00:03:15.058914 size on input set 2
2022-04-12 00:03:22.362458 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nword = input()\nfor i in range(1, len(word)):\n    if word[i] == word[i-1]:\n        word = word[:i] + word[i+1:]\n        i -= 1\n\nprint(word)\n"
    },
    {
      "index": 1,
      "text": "\n\ndef remove_adjacent(nums):\n    word = input()\n    for i in range(1,len(word)):\n        if word[i] == word[i-1]:\n            word = word[:i] + word[i+1:]\n            i -= 1\n\nprint(word)\n"
    }
  ],
  "created": 1649736195,
  "object": "edit"
}
2022-04-12 00:03:22.362639 fix syntax errors 2 ['\n\nword = input()\nfor i in range(1, len(word)):\n    if word[i] == word[i-1]:\n        word = word[:i] + word[i+1:]\n        i -= 1\n\nprint(word)\n', '\n\ndef remove_adjacent(nums):\n    word = input()\n    for i in range(1,len(word)):\n        if word[i] == word[i-1]:\n            word = word[:i] + word[i+1:]\n            i -= 1\n\nprint(word)\n']
2022-04-12 00:03:27.930736 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef remove_adjacent(nums):\n    for i in range(1,len(nums)):\n        if nums[i] == nums[i-1]:\n            nums = nums[:i] + nums[i+1:]\n            i -= 1\n    return nums\n\nprint(remove_adjacent([1, 2, 2, 3]))\n"
    },
    {
      "index": 1,
      "text": "\ndef remove_adjacent(nums):\n    i = 0\n    while i < len(nums)-1:\n        if nums[i] == nums[i+1]:\n            nums.pop(i)\n        else:\n            i += 1\n    return nums\n\nprint(remove_adjacent([1,2,2,3,4,4,4,4,5]))\n"
    }
  ],
  "created": 1649736202,
  "object": "edit"
}
2022-04-12 00:03:27.931158 fix syntax errors 2 ['\ndef remove_adjacent(nums):\n    for i in range(1,len(nums)):\n        if nums[i] == nums[i-1]:\n            nums = nums[:i] + nums[i+1:]\n            i -= 1\n    return nums\n\nprint(remove_adjacent([1, 2, 2, 3]))\n', '\ndef remove_adjacent(nums):\n    i = 0\n    while i < len(nums)-1:\n        if nums[i] == nums[i+1]:\n            nums.pop(i)\n        else:\n            i += 1\n    return nums\n\nprint(remove_adjacent([1,2,2,3,4,4,4,4,5]))\n']
2022-04-12 00:03:27.931180 size on output set 4
2022-04-12 00:03:27.931192 num operations 2
2022-04-12 00:03:27.931198 size on input set 1
2022-04-12 00:03:32.341385 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    string = sys.stdin.readline().strip()\n    compact = string[0]\n    for i in range(1, len(string)):\n        if string[i] != compact[-1]:\n            compact += string[i]\n    print(compact)\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    name = sys.stdin.readline().strip()\n    compact = name[0]\n    for i in range(1, len(name)):\n        if name[i] != compact[-1]:\n            compact += name[i]\n    print(compact)\n\nmain()\n"
    }
  ],
  "created": 1649736208,
  "object": "edit"
}
2022-04-12 00:03:32.341628 fix spelling mistakes 2 ['\n\nimport sys\n\ndef main():\n    string = sys.stdin.readline().strip()\n    compact = string[0]\n    for i in range(1, len(string)):\n        if string[i] != compact[-1]:\n            compact += string[i]\n    print(compact)\n\nmain()\n', '\nimport sys\n\ndef main():\n    name = sys.stdin.readline().strip()\n    compact = name[0]\n    for i in range(1, len(name)):\n        if name[i] != compact[-1]:\n            compact += name[i]\n    print(compact)\n\nmain()\n']
2022-04-12 00:03:32.341651 size on output set 2
2022-04-12 00:03:32.341658 size on input set 2
2022-04-12 00:03:37.581170 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys, string\n\ndef main():\n    for line in sys.stdin:\n        name = line.strip()\n        compact = name[0]\n        for i in range(1, len(name)):\n            if name[i] != compact[-1]:\n                compact += name[i]\n        print(compact)\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    name = sys.stdin.readline().strip()\n    compact = name[0] # compact is a string\n    for i in range(1, len(name)):\n        if name[i] != compact[-1]: # compact[-1] is the last element of compact\n            compact += name[i]\n    print(compact)\n\nmain()\n"
    }
  ],
  "created": 1649736212,
  "object": "edit"
}
2022-04-12 00:03:37.581406 fix syntax errors 2 ['import sys, string\n\ndef main():\n    for line in sys.stdin:\n        name = line.strip()\n        compact = name[0]\n        for i in range(1, len(name)):\n            if name[i] != compact[-1]:\n                compact += name[i]\n        print(compact)\n\nmain()\n', 'import sys\n\ndef main():\n    name = sys.stdin.readline().strip()\n    compact = name[0] # compact is a string\n    for i in range(1, len(name)):\n        if name[i] != compact[-1]: # compact[-1] is the last element of compact\n            compact += name[i]\n    print(compact)\n\nmain()\n']
2022-04-12 00:03:44.227152 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    string = sys.stdin.readline().strip() # read in the string\n    compact = string[0] # start the compact string with the first letter of the string\n    for i in range(1, len(string)): # loop through the string\n        if string[i] != compact[-1]: # if the current letter is not the same as the last letter of the compact string\n            compact += string[i] # add the current letter to the compact string\n    print(compact) # print the compact string\n\nmain() # call the main function\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    string = sys.stdin.readline().strip()\n    compact = string[0]\n    for i in range(1, len(string)):\n        if string[i] != compact[-1]:\n            compact += string[i]\n    print(compact) \n\nmain()\n"
    }
  ],
  "created": 1649736217,
  "object": "edit"
}
2022-04-12 00:03:44.227253 fix syntax errors 2 ['\nimport sys\n\ndef main():\n    string = sys.stdin.readline().strip() # read in the string\n    compact = string[0] # start the compact string with the first letter of the string\n    for i in range(1, len(string)): # loop through the string\n        if string[i] != compact[-1]: # if the current letter is not the same as the last letter of the compact string\n            compact += string[i] # add the current letter to the compact string\n    print(compact) # print the compact string\n\nmain() # call the main function\n', '\nimport sys\n\ndef main():\n    string = sys.stdin.readline().strip()\n    compact = string[0]\n    for i in range(1, len(string)):\n        if string[i] != compact[-1]:\n            compact += string[i]\n    print(compact) \n\nmain()\n']
2022-04-12 00:03:44.227266 size on output set 4
2022-04-12 00:03:44.227271 num operations 2
2022-04-12 00:03:44.227275 size on input set 1
2022-04-12 00:03:50.494766 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nname = input()\n\ni = 0\n\nwhile i < len(name) - 1:\n    if name[i] == name[i + 1] and name[i] != ' ':\n        name = name[:i + 1] + name[i + 2:]\n    else:\n        i += 1\n\nprint(name)\n"
    },
    {
      "index": 1,
      "text": "\n\nname = input()  # \u0432\u0432\u043e\u0434\u0438\u043c \u0441\u0442\u0440\u043e\u043a\u0443\n\ni = 0\n\nwhile i < len(name) - 1:  # \u043f\u043e\u043a\u0430 \u0438\u043d\u0434\u0435\u043a\u0441 \u043c\u0435\u043d\u044c\u0448\u0435 \u0434\u043b\u0438\u043d\u044b \u0441\u0442\u0440\u043e\u043a\u0438\n    if name[i] == name[i + 1]:  # \u0435\u0441\u043b\u0438 \u0441\u0438\u043c\u0432\u043e\u043b \u0440\u0430\u0432\u0435\u043d \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c\u0443\n        name = name[:i + 1] + name[i + 2:]  # \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u0441\u0438\u043c\u0432\u043e\u043b\n    else:\n        i += 1  # \u0438\u043d\u0430\u0447\u0435 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043a \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c\u0443 \u0441\u0438\u043c\u0432\u043e\u043b\u0443\n\nprint(name)\n"
    }
  ],
  "created": 1649736224,
  "object": "edit"
}
2022-04-12 00:03:50.495197 fix spelling mistakes 2 ["\n\nname = input()\n\ni = 0\n\nwhile i < len(name) - 1:\n    if name[i] == name[i + 1] and name[i] != ' ':\n        name = name[:i + 1] + name[i + 2:]\n    else:\n        i += 1\n\nprint(name)\n", '\n\nname = input()  # вводим строку\n\ni = 0\n\nwhile i < len(name) - 1:  # пока индекс меньше длины строки\n    if name[i] == name[i + 1]:  # если символ равен следующему\n        name = name[:i + 1] + name[i + 2:]  # удаляем символ\n    else:\n        i += 1  # иначе переходим к следующему символу\n\nprint(name)\n']
2022-04-12 00:03:50.495272 size on output set 2
2022-04-12 00:03:50.495285 size on input set 2
2022-04-12 00:03:52.914728 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nname = input()  # \u0432\u0432\u043e\u0434\u0438\u043c \u0441\u0442\u0440\u043e\u043a\u0443\ni = 0\n\nwhile i < len(name) - 1:  # \u043f\u043e\u043a\u0430 \u0438\u043d\u0434\u0435\u043a\u0441 \u043c\u0435\u043d\u044c\u0448\u0435 \u0434\u043b\u0438\u043d\u044b \u0441\u0442\u0440\u043e\u043a\u0438\n    if name[i] == name[i + 1]:  # \u0435\u0441\u043b\u0438 \u0441\u0438\u043c\u0432\u043e\u043b \u0440\u0430\u0432\u0435\u043d \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c\u0443\n        name = name[:i + 1] + name[i + 2:]  # \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u0441\u0438\u043c\u0432\u043e\u043b\n    else:\n        i += 1  # \u0438\u043d\u0430\u0447\u0435 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043a \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c\u0443 \u0441\u0438\u043c\u0432\u043e\u043b\u0443\n\nprint(name)\n"
    },
    {
      "index": 1,
      "text": "\nname = input()  # \u0432\u0432\u043e\u0434\u0438\u043c \u0441\u0442\u0440\u043e\u043a\u0443\ni = 0\n\nwhile i < len(name) - 1:  # \u043f\u043e\u043a\u0430 \u0438\u043d\u0434\u0435\u043a\u0441 \u043c\u0435\u043d\u044c\u0448\u0435 \u0434\u043b\u0438\u043d\u044b \u0441\u0442\u0440\u043e\u043a\u0438\n    if name[i] == name[i + 1]:  # \u0435\u0441\u043b\u0438 \u0441\u0438\u043c\u0432\u043e\u043b \u0440\u0430\u0432\u0435\u043d \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c\u0443\n        name = name[:i + 1] + name[i + 2:]  # \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u0441\u0438\u043c\u0432\u043e\u043b\n    else:\n        i += 1  # \u0438\u043d\u0430\u0447\u0435 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043a \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c\u0443 \u0441\u0438\u043c\u0432\u043e\u043b\u0443\n\nprint(name)\n"
    }
  ],
  "created": 1649736230,
  "object": "edit"
}
2022-04-12 00:03:52.915024 fix syntax errors 2 ['\n\nname = input()  # вводим строку\ni = 0\n\nwhile i < len(name) - 1:  # пока индекс меньше длины строки\n    if name[i] == name[i + 1]:  # если символ равен следующему\n        name = name[:i + 1] + name[i + 2:]  # удаляем символ\n    else:\n        i += 1  # иначе переходим к следующему символу\n\nprint(name)\n', '\nname = input()  # вводим строку\ni = 0\n\nwhile i < len(name) - 1:  # пока индекс меньше длины строки\n    if name[i] == name[i + 1]:  # если символ равен следующему\n        name = name[:i + 1] + name[i + 2:]  # удаляем символ\n    else:\n        i += 1  # иначе переходим к следующему символу\n\nprint(name)\n']
2022-04-12 00:03:57.600934 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nname = input()\ni = 0\n\nwhile i < len(name) - 1:\n    if name[i] == name[i + 1] and name[i] != ' ':\n        name = name[:i + 1] + name[i + 2:]\n    else:\n        i += 1\n\nprint(name)\n"
    },
    {
      "index": 1,
      "text": "\n\ndef remove_adjacent(lst):\n    i = 0\n\n    while i < len(lst) - 1:\n        if lst[i] == lst[i + 1]:\n            lst = lst[:i + 1] + lst[i + 2:]\n        else:\n            i += 1\n\n    return lst\n"
    }
  ],
  "created": 1649736233,
  "object": "edit"
}
2022-04-12 00:03:57.601036 fix syntax errors 2 ["\nname = input()\ni = 0\n\nwhile i < len(name) - 1:\n    if name[i] == name[i + 1] and name[i] != ' ':\n        name = name[:i + 1] + name[i + 2:]\n    else:\n        i += 1\n\nprint(name)\n", '\n\ndef remove_adjacent(lst):\n    i = 0\n\n    while i < len(lst) - 1:\n        if lst[i] == lst[i + 1]:\n            lst = lst[:i + 1] + lst[i + 2:]\n        else:\n            i += 1\n\n    return lst\n']
2022-04-12 00:03:57.601049 size on output set 4
2022-04-12 00:03:57.601056 num operations 2
2022-04-12 00:03:57.601059 size on input set 1
2022-04-12 00:04:01.833471 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nword = input()\n\nprint(word[0], end='') # \u043f\u0435\u0447\u0430\u0442\u0430\u0435\u043c \u043f\u0435\u0440\u0432\u0443\u044e \u0431\u0443\u043a\u0432\u0443\nfor i in range(1, len(word)):\n    if word[i-1] != word[i]: # \u0435\u0441\u043b\u0438 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0430\u044f \u0431\u0443\u043a\u0432\u0430 \u043d\u0435 \u0440\u0430\u0432\u043d\u0430 \u0442\u0435\u043a\u0443\u0449\u0435\u0439, \u0442\u043e \u043f\u0435\u0447\u0430\u0442\u0430\u0435\u043c \u0442\u0435\u043a\u0443\u0449\u0443\u044e\n        print(word[i], end='')\n"
    },
    {
      "index": 1,
      "text": "\n\nword = input() # \u0432\u0432\u043e\u0434\u0438\u043c \u0441\u043b\u043e\u0432\u043e\n\nprint(word[0], end='')\nfor i in range(1, len(word)):\n    if word[i-1] != word[i]:\n        print(word[i], end='')\n"
    }
  ],
  "created": 1649736237,
  "object": "edit"
}
2022-04-12 00:04:01.833787 fix spelling mistakes 2 ["\n\nword = input()\n\nprint(word[0], end='') # печатаем первую букву\nfor i in range(1, len(word)):\n    if word[i-1] != word[i]: # если предыдущая буква не равна текущей, то печатаем текущую\n        print(word[i], end='')\n", "\n\nword = input() # вводим слово\n\nprint(word[0], end='')\nfor i in range(1, len(word)):\n    if word[i-1] != word[i]:\n        print(word[i], end='')\n"]
2022-04-12 00:04:01.833835 size on output set 2
2022-04-12 00:04:01.833843 size on input set 2
2022-04-12 00:04:05.694158 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nword = input() # \u0432\u0432\u043e\u0434\u0438\u043c \u0441\u043b\u043e\u0432\u043e\n\nprint(word[0], end='') # \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u043f\u0435\u0440\u0432\u0443\u044e \u0431\u0443\u043a\u0432\u0443\n\nfor i in range(1, len(word)):\n    if word[i-1] != word[i]:\n        print(word[i], end='')\n"
    },
    {
      "index": 1,
      "text": "\n\nword = input()\n\nprint(word[0], end='')\nfor i in range(1, len(word)):\n    if word[i-1] != word[i]:\n        print(word[i], end='')\n"
    }
  ],
  "created": 1649736242,
  "object": "edit"
}
2022-04-12 00:04:05.694394 fix syntax errors 2 ["\nword = input() # вводим слово\n\nprint(word[0], end='') # выводим первую букву\n\nfor i in range(1, len(word)):\n    if word[i-1] != word[i]:\n        print(word[i], end='')\n", "\n\nword = input()\n\nprint(word[0], end='')\nfor i in range(1, len(word)):\n    if word[i-1] != word[i]:\n        print(word[i], end='')\n"]
2022-04-12 00:04:07.730759 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nword = input()\n\nprint(word[0], end='') # \u043f\u0435\u0447\u0430\u0442\u0430\u0435\u043c \u043f\u0435\u0440\u0432\u0443\u044e \u0431\u0443\u043a\u0432\u0443\nfor i in range(1, len(word)):\n    if word[i-1] != word[i]: # \u0435\u0441\u043b\u0438 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0430\u044f \u0431\u0443\u043a\u0432\u0430 \u043d\u0435 \u0440\u0430\u0432\u043d\u0430 \u0442\u0435\u043a\u0443\u0449\u0435\u0439, \u0442\u043e \u043f\u0435\u0447\u0430\u0442\u0430\u0435\u043c \u0442\u0435\u043a\u0443\u0449\u0443\u044e\n        print(word[i], end='')\n"
    },
    {
      "index": 1,
      "text": "\nword = input()\n\nprint(word[0], end='') # \u043f\u0435\u0447\u0430\u0442\u0430\u0435\u043c \u043f\u0435\u0440\u0432\u0443\u044e \u0431\u0443\u043a\u0432\u0443\nfor i in range(1, len(word)):\n    if word[i-1] != word[i]: # \u0435\u0441\u043b\u0438 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0430\u044f \u0431\u0443\u043a\u0432\u0430 \u043d\u0435 \u0440\u0430\u0432\u043d\u0430 \u0442\u0435\u043a\u0443\u0449\u0435\u0439, \u0442\u043e \u043f\u0435\u0447\u0430\u0442\u0430\u0435\u043c \u0442\u0435\u043a\u0443\u0449\u0443\u044e\n        print(word[i], end='')\n"
    }
  ],
  "created": 1649736245,
  "object": "edit"
}
2022-04-12 00:04:07.731042 fix syntax errors 2 ["\nword = input()\n\nprint(word[0], end='') # печатаем первую букву\nfor i in range(1, len(word)):\n    if word[i-1] != word[i]: # если предыдущая буква не равна текущей, то печатаем текущую\n        print(word[i], end='')\n", "\nword = input()\n\nprint(word[0], end='') # печатаем первую букву\nfor i in range(1, len(word)):\n    if word[i-1] != word[i]: # если предыдущая буква не равна текущей, то печатаем текущую\n        print(word[i], end='')\n"]
2022-04-12 00:04:07.731182 size on output set 3
2022-04-12 00:04:07.731193 num operations 2
2022-04-12 00:04:07.731197 size on input set 1
2022-04-12 00:04:13.229158 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nname = input() # \u0432\u0432\u043e\u0434\u0438\u043c \u0438\u043c\u044f\nnew_name = \"\" # \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0434\u043b\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u0438\u043c\u0435\u043d\u0438\n\nfor i in range(len(name)): # \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u043c \u043f\u043e \u0432\u0441\u0435\u043c \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c \u0438\u043c\u0435\u043d\u0438\n    if i == 0:\n        new_name += name[0]\n    elif name[i] != name[i-1]: # \u0435\u0441\u043b\u0438 \u0441\u0438\u043c\u0432\u043e\u043b \u043d\u0435 \u0440\u0430\u0432\u0435\u043d \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u043c\u0443, \u0442\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0435\u0433\u043e \u0432 \u043d\u043e\u0432\u043e\u0435 \u0438\u043c\u044f\n        new_name += name[i]\n\nprint(new_name)\n"
    },
    {
      "index": 1,
      "text": "\n\nname = input()\nnew_name = \"\"\n\nfor i in range(len(name)):\n    if i == 0:\n        new_name += name[0]\n    elif name[i] != name[i-1]:\n        new_name += name[i]\n#\nprint(new_name)\n"
    }
  ],
  "created": 1649736248,
  "object": "edit"
}
2022-04-12 00:04:13.229347 fix spelling mistakes 2 ['\n\nname = input() # вводим имя\nnew_name = "" # переменная для нового имени\n\nfor i in range(len(name)): # проходим по всем символам имени\n    if i == 0:\n        new_name += name[0]\n    elif name[i] != name[i-1]: # если символ не равен предыдущему, то добавляем его в новое имя\n        new_name += name[i]\n\nprint(new_name)\n', '\n\nname = input()\nnew_name = ""\n\nfor i in range(len(name)):\n    if i == 0:\n        new_name += name[0]\n    elif name[i] != name[i-1]:\n        new_name += name[i]\n#\nprint(new_name)\n']
2022-04-12 00:04:13.229389 size on output set 2
2022-04-12 00:04:13.229399 size on input set 2
2022-04-12 00:04:21.737848 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nname = input()  # \u0432\u0432\u043e\u0434\u0438\u043c \u0438\u043c\u044f\nnew_name = \"\"  # \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0434\u043b\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u0438\u043c\u0435\u043d\u0438\n\nfor i in range(len(name)):  # \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u043c \u043f\u043e \u0432\u0441\u0435\u043c \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c \u0438\u043c\u0435\u043d\u0438\n    if i == 0:\n        new_name += name[0]\n    elif name[i] != name[i-1]:  # \u0435\u0441\u043b\u0438 \u0441\u0438\u043c\u0432\u043e\u043b \u043d\u0435 \u0440\u0430\u0432\u0435\u043d \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u043c\u0443, \u0442\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0435\u0433\u043e \u0432 \u043d\u043e\u0432\u043e\u0435 \u0438\u043c\u044f\n        new_name += name[i]\n\nprint(new_name)\n"
    },
    {
      "index": 1,
      "text": "\n\nname = input()  # \u0432\u0432\u043e\u0434\u0438\u043c \u0438\u043c\u044f\nnew_name = \"\"  # \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0434\u043b\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u0438\u043c\u0435\u043d\u0438\n\nfor i in range(len(name)):  # \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u043c \u043f\u043e \u0432\u0441\u0435\u043c \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u043c \u0438\u043c\u0435\u043d\u0438\n    if i == 0:\n        new_name += name[0]\n    elif name[i] != name[i-1]:  # \u0435\u0441\u043b\u0438 \u0441\u0438\u043c\u0432\u043e\u043b \u043d\u0435 \u0440\u0430\u0432\u0435\u043d \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u043c\u0443, \u0442\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0435\u0433\u043e \u0432 \u043d\u043e\u0432\u043e\u0435 \u0438\u043c\u044f\n        new_name += name[i]\n\nprint(new_name)\n"
    }
  ],
  "created": 1649736253,
  "object": "edit"
}
2022-04-12 00:04:21.738082 fix syntax errors 2 ['\n\nname = input()  # вводим имя\nnew_name = ""  # переменная для нового имени\n\nfor i in range(len(name)):  # проходим по всем символам имени\n    if i == 0:\n        new_name += name[0]\n    elif name[i] != name[i-1]:  # если символ не равен предыдущему, то добавляем его в новое имя\n        new_name += name[i]\n\nprint(new_name)\n', '\n\nname = input()  # вводим имя\nnew_name = ""  # переменная для нового имени\n\nfor i in range(len(name)):  # проходим по всем символам имени\n    if i == 0:\n        new_name += name[0]\n    elif name[i] != name[i-1]:  # если символ не равен предыдущему, то добавляем его в новое имя\n        new_name += name[i]\n\nprint(new_name)\n']
2022-04-12 00:04:23.844457 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nname = input()\nnew_name = \"\"\n\nfor i in range(len(name)):\n    if i == 0:\n        new_name += name[0]\n    elif name[i] != name[i-1]:\n        new_name += name[i]\n\nprint(new_name)\n"
    },
    {
      "index": 1,
      "text": "\n\nname = input()\nnew_name = \"\"\n\nfor i in range(len(name)):\n    if i == 0:\n        new_name += name[0]\n    elif name[i] != name[i-1]:\n        new_name += name[i]\n\nprint(new_name)\n"
    }
  ],
  "created": 1649736262,
  "object": "edit"
}
2022-04-12 00:04:23.844594 fix syntax errors 2 ['\n\nname = input()\nnew_name = ""\n\nfor i in range(len(name)):\n    if i == 0:\n        new_name += name[0]\n    elif name[i] != name[i-1]:\n        new_name += name[i]\n\nprint(new_name)\n', '\n\nname = input()\nnew_name = ""\n\nfor i in range(len(name)):\n    if i == 0:\n        new_name += name[0]\n    elif name[i] != name[i-1]:\n        new_name += name[i]\n\nprint(new_name)\n']
2022-04-12 00:04:23.844614 size on output set 2
2022-04-12 00:04:23.844625 num operations 2
2022-04-12 00:04:23.844631 size on input set 1
2022-04-12 00:04:26.868493 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nname = input(\"Enter your name: \")\n\ncompact = \"\"\n\nfor i in range(len(name)):\n    if name[i] != name[i - 1]:\n        compact += name[i]\n\nprint(compact)\n"
    },
    {
      "index": 1,
      "text": "\n\nname = input()\n\ncompacted = \"\"\n\nfor i in range(len(name)):\n    if name[i] != name[i - 1]:\n        compacted += name[i]\n\nprint(compacted)\n"
    }
  ],
  "created": 1649736264,
  "object": "edit"
}
2022-04-12 00:04:26.868601 fix spelling mistakes 2 ['\n\nname = input("Enter your name: ")\n\ncompact = ""\n\nfor i in range(len(name)):\n    if name[i] != name[i - 1]:\n        compact += name[i]\n\nprint(compact)\n', '\n\nname = input()\n\ncompacted = ""\n\nfor i in range(len(name)):\n    if name[i] != name[i - 1]:\n        compacted += name[i]\n\nprint(compacted)\n']
2022-04-12 00:04:26.868614 size on output set 2
2022-04-12 00:04:26.868619 size on input set 2
2022-04-12 00:04:29.393521 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nname = input()\n\ncompacted = \"\"\n\nfor i in range(len(name)):\n    if name[i] != name[i - 1] or i == 0:\n        compacted += name[i]\n\nprint(compacted)\n"
    },
    {
      "index": 1,
      "text": "\n\nname = input(\"Enter your name: \")\n\ncompacted = \"\"\n\nfor i in range(len(name)):\n    if name[i] != name[i - 1]:\n        compacted += name[i]\n\nprint(compacted)\n"
    }
  ],
  "created": 1649736267,
  "object": "edit"
}
2022-04-12 00:04:29.393872 fix syntax errors 2 ['\n\nname = input()\n\ncompacted = ""\n\nfor i in range(len(name)):\n    if name[i] != name[i - 1] or i == 0:\n        compacted += name[i]\n\nprint(compacted)\n', '\n\nname = input("Enter your name: ")\n\ncompacted = ""\n\nfor i in range(len(name)):\n    if name[i] != name[i - 1]:\n        compacted += name[i]\n\nprint(compacted)\n']
2022-04-12 00:04:33.332386 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nname = input(\"Enter your name: \").lower()\n\ncompact = \"\"\n\nfor i in range(len(name) - 1):\n    if name[i] != name[i + 1]:\n        compact += name[i + 1]\n\nprint(compact)\n"
    },
    {
      "index": 1,
      "text": "\nname = input(\"Enter your name: \")\ncompact = \"\"\n\nfor i in range(len(name)):\n    if name[i] != name[i - 1]:\n        compact += name[i]\n\nprint(compact)\n"
    }
  ],
  "created": 1649736269,
  "object": "edit"
}
2022-04-12 00:04:33.332650 fix syntax errors 2 ['\n\nname = input("Enter your name: ").lower()\n\ncompact = ""\n\nfor i in range(len(name) - 1):\n    if name[i] != name[i + 1]:\n        compact += name[i + 1]\n\nprint(compact)\n', '\nname = input("Enter your name: ")\ncompact = ""\n\nfor i in range(len(name)):\n    if name[i] != name[i - 1]:\n        compact += name[i]\n\nprint(compact)\n']
2022-04-12 00:04:33.332672 size on output set 4
