2022-04-11 18:37:01.489292 num operations 2
2022-04-11 18:37:01.489325 size on input set 1
2022-04-11 18:37:03.859205 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n#\nd, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n"
    },
    {
      "index": 1,
      "text": "\n\nd, n = map(int, input().split()) \n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n"
    }
  ],
  "created": 1649716621,
  "object": "edit"
}
2022-04-11 18:37:03.859422 fix spelling mistakes 2 ['\n#\nd, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n', '\n\nd, n = map(int, input().split()) \n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n']
2022-04-11 18:37:03.859460 size on output set 2
2022-04-11 18:37:03.859469 size on input set 2
2022-04-11 18:37:05.730989 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nd, n = map(int, input().split()) \n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n"
    },
    {
      "index": 1,
      "text": "\nd, n = map(int, input().split()) \n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n"
    }
  ],
  "created": 1649716624,
  "object": "edit"
}
2022-04-11 18:37:05.731174 fix syntax errors 2 ['\nd, n = map(int, input().split()) \n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n', '\nd, n = map(int, input().split()) \n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n']
2022-04-11 18:37:07.617383 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "d, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n"
    },
    {
      "index": 1,
      "text": "\n# \nd, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n"
    }
  ],
  "created": 1649716626,
  "object": "edit"
}
2022-04-11 18:37:07.617630 fix syntax errors 2 ['d, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n', '\n# \nd, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n']
2022-04-11 18:37:07.617648 size on output set 3
2022-04-11 18:37:07.617671 num operations 2
2022-04-11 18:37:07.617677 size on input set 1
2022-04-11 18:37:10.135387 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n \nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n    print(10000 * N)\n"
    },
    {
      "index": 1,
      "text": "# AtCoder Beginner Contest 069\n# A - \n# https://atcoder.jp/contests/abc069/tasks/abc069_a\n\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n    print(10000 * N)\n"
    }
  ],
  "created": 1649716627,
  "object": "edit"
}
2022-04-11 18:37:10.135666 fix spelling mistakes 2 ['\n \nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n    print(10000 * N)\n', '# AtCoder Beginner Contest 069\n# A - \n# https://atcoder.jp/contests/abc069/tasks/abc069_a\n\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n    print(10000 * N)\n']
2022-04-11 18:37:10.135696 size on output set 2
2022-04-11 18:37:10.135705 size on input set 2
2022-04-11 18:37:12.279254 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n    print(10000 * N)\n"
    },
    {
      "index": 1,
      "text": "\n# -*- coding: utf-8 -*-\n\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n    print(10000 * N)\n"
    }
  ],
  "created": 1649716630,
  "object": "edit"
}
2022-04-11 18:37:12.279368 fix syntax errors 2 ['\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n    print(10000 * N)\n', '\n# -*- coding: utf-8 -*-\n\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n    print(10000 * N)\n']
2022-04-11 18:37:15.939311 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# AtCoder Beginner Contest 069\n# A - \u4e09\u89d2\u5f62\n# https://atcoder.jp/contests/abc069/tasks/abc069_a\n\nN = int(input())\n\nprint(int(N * (N - 1) / 2))\n"
    },
    {
      "index": 1,
      "text": "# AtCoder Beginner Contest 069\n# A - \u4f55\u500b\u3067\u3082\u8db3\u305b\u308b\u3088\n# https://atcoder.jp/contests/abc069/tasks/abc069_a\n\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n    print(10000 * N)\n"
    }
  ],
  "created": 1649716632,
  "object": "edit"
}
2022-04-11 18:37:15.939490 fix syntax errors 2 ['# AtCoder Beginner Contest 069\n# A - 三角形\n# https://atcoder.jp/contests/abc069/tasks/abc069_a\n\nN = int(input())\n\nprint(int(N * (N - 1) / 2))\n', '# AtCoder Beginner Contest 069\n# A - 何個でも足せるよ\n# https://atcoder.jp/contests/abc069/tasks/abc069_a\n\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n    print(10000 * N)\n']
2022-04-11 18:37:15.939519 size on output set 4
