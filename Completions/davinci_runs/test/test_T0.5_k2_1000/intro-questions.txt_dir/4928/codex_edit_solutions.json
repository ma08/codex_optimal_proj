["\n# Workaround for raw_input in Python 3.\ntry:\n    input = raw_input\nexcept NameError:\n    pass\n\ndef main():\n    print(int(input()) + 1)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# The number of cuts is the number of rectangles.\n# So the maximum number of pieces is the number of rectangles plus one.\n# The number of rectangles is the sum of the number of rectangles in each row and the number of rectangles in each column.\n# The number of rectangles in each row is the number of rectangles in the first row plus the number of rectangles in the second row plus...\n# The number of rectangles in the first row is 1.\n# The number of rectangles in the second row is 2.\n# ...\n# The number of rectangles in the nth row is n.\n# The sum of the first n natural numbers is n(n+1)/2.\n# So the number of rectangles is n(n+1).\n# So the maximum number of pieces is n(n+1)+1\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nprint(n*(n+1)+1)\n", "\n\n# The number of cuts is the number of squares.\n# So the maximum number of pieces is the number of squares plus one.\n# The number of squares is the sum of the number of squares in each row and column. (1+2+3+...+n) + (1+2+3+...+n) = n(n+1)/2\n# The number of squares in each row and column is the number of squares in the first row/column plus the number of squares in the second row/column plus... (1+2+3+...+n) = n(n+1)/2\n# The number of squares in the first row/column is 1.\n# The number of squares in the second row/column is 2.\n# ...\n# The number of squares in the nth row/column is n.\n# The sum of the first n natural numbers is n(n+1)/2. (1+2+3+...+n) = n(n+1)/2\n# So the number of squares is n(n+1)/2.\n# So the maximum number of pieces is n(n+1)/2+1.\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nprint(n*(n+1)//2+1)\n", "\n# this is a comment\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(n)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    print(n + 1) \n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(n + 1)\n\nif __name__ == '__main__':\n    main()\n", "# this is a comment\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(n + 1)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    print(n + 2)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    print(n*n)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# Get input.\nn = int(input(\"Enter a number: \"))\n\n# Calculate and output.\nprint(n + 1)\n", "\n\nimport sys\n\nprint(int(sys.stdin.readline()) + 2) \n", "\n\n# Workaround for raw_input in Python 3.\ntry:\n    input = raw_input\nexcept NameError:\n    pass\n\ndef main():\n    n = int(input())\n    print(n + 1) \n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    print(n * n * n)\n\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    print(n + 2)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    print(n * n * n)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    print(n + 2)\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n = int(input())\n    if n == 1:\n        print(2)\n    else:\n        print(n*2-2)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# The number of cuts is the number of squares.\n# So the maximum number of pieces is the number of squares plus one.\n# The number of squares is the sum of the number of squares in each row and column. (1+2+3+...+n) + (1+2+3+...+n) = n(n+1).\n# The number of squares in each row and column is the number of squares in the first row/column plus the number of squares in the second row/column plus... (1+2+3+...+n).\n# The number of squares in the first row/column is 1.\n# The number of squares in the second row/column is 2.\n# ...\n# The number of squares in the nth row/column is n.\n# The sum of the first n natural numbers is n(n+1)/2. (1+2+3+...+n) = n(n+1)/2.\n# So the number of squares is n(n+1).\n# So the maximum number of pieces is n(n+1)+1.\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nprint(n*(n+1)+1)\n", "\n\nimport sys\n\nprint(int(sys.stdin.readline()) + 1)\n", "\n# Get input\nn = int(input())\n\n# Calculate and output it\nprint(n + 1)\n", "\n\ndef main():\n    n = int(input())\n    if n == 1:\n        print(2)\n    else:\n        print(n*2 - 2)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# The number of cuts is the number of rectangles.\n# So the maximum number of pieces is the number of rectangles plus one.\n# The number of rectangles is the sum of the number of rectangles in each row and column.\n# The number of rectangles in each row and column is the number of rectangles in the first row/column plus the number of rectangles in the second row/column plus... etc.\n# The number of rectangles in the first row/column is 1.\n# The number of rectangles in the second row/column is 2.\n# ... etc.\n# The number of rectangles in the nth row/column is n.\n# The sum of the first n natural numbers is n(n+1)/2.\n# So the number of rectangles is n(n+1).\n# So the maximum number of pieces is n(n+1)+1.\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nprint(n*(n+1)+1)\n", "\n# Get input.\nn = int(input())\n\n# Calculate and output.\nprint(n + 1)\n"]