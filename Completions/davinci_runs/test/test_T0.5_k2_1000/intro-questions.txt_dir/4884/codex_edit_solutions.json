["\n\ndef main():\n    N, C = map(int, input().split())\n    for i in range(N):\n        input() # read the line\n    print(C)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ncontestants, hufflepuffs = map(int, input().split()) # map(int, input().split())\n\nprint(hufflepuffs)\n", "\n\ndef carrots(n, c):\n    carrots = c\n    for i in range(n):\n        input()\n    print(carrots)\n\nN, C = map(int, input().split())\ncarrots(N, C)\n", "\n\ndef main():\n    n, p = map(int, input().split())\n    for _ in range(n):\n        input()\n    print(p)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef carrots():\n    n, p = [int(x) for x in input().split()]\n    for i in range(n):\n        input()\n    print(p)\n\ncarrots()\n", "\n\ncontestants, hufflepuffs = map(int, input().split()) #input\n\nprint(hufflepuffs)\n", "\ndef main():\n    n, p = [int(i) for i in input().split()]\n    for _ in range(n):\n        input()\n    print(p)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\nn, p = map(int, input().split())  # n = number of pages, p = page to print\n\nprint(p)  # print the page\n", "\n\ndef main():\n    \"\"\"\n    Main method to be called at runtime.\n    \"\"\"\n    contest_info = input().split(\" \")\n    num_contestants = int(contest_info[0])\n    num_problems = int(contest_info[1])\n    carrots = 0\n    for i in range(0, num_contestants):\n        contestant = input()\n        if \"carrot\" in contestant:\n            carrots += 1\n        else:\n            carrots += 0\n    print(carrots)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\n\ndef main():\n    carrots = 0\n    n, p = map(int, sys.stdin.readline().split())\n    for i in range(n):\n        sys.stdin.readline()\n        carrots += p\n    print carrots\n\nif __name__ == '__main__':\n    main()\n", "\nn, p = map(int, input().split()) # n is the number of pages, p is the page to print\n\nfor i in range(n): # skip the first n lines\n    input()\n\nprint(p)\n", "\n\ndef main():\n    \"\"\"\n    Main method to be called at runtime.\n    \"\"\"\n    contest_info = input().split(\" \")\n    num_contestants = int(contest_info[0])\n    num_problems = int(contest_info[1])\n    carrots = 0\n    for _ in range(0, num_contestants):\n        contestant = input()\n        if \"carrot\" in contestant:\n            carrots += 1\n        else:\n            carrots += 0\n    print(carrots)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    \"\"\"\n    Main method to be called at runtime.\n    \"\"\"\n    contest_info = input().split(\" \")\n    num_contestants = int(contest_info[0])\n    num_problems = int(contest_info[1])\n    carrots = 0\n    for i in range(0, num_contestants):\n        contestant = input().split(\" \")\n        if \"carrots\" in contestant:\n            carrots += 1\n        else:\n            carrots += 0\n    print(carrots)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    carrots = 0\n    n, p = map(int, sys.stdin.readline().split())\n    for i in range(n):\n        sys.stdin.readline()\n        carrots += p\n    print(carrots)\n\nif __name__ == '__main__':\n    main()\n", "n, p = map(int, input().split())\nfor i in range(n):\n    input()\n\nprint(p)\n", "\n\ndef main():\n    n, p = [int(i) for i in input().split()]  # noqa\n    for _ in range(n):\n        input()\n    print(p)\n\nif __name__ == '__main__':\n    main()\n", "n, p = map(int, input().split())\n\nprint(p)\n", "\n\ndef main():\n    \"\"\"\n    Main method to be called at runtime.\n    \"\"\"\n    contest_info = input().split()\n    num_contestants = contest_info[0]\n    num_problems = contest_info[1]\n    carrots = 0\n    for i in range(0, int(num_contestants)):\n        contestant = input()\n        if \"carrot\" in contestant:\n            carrots += 1\n        else:\n            carrots += 0\n    print(carrots)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef carrots():\n    n, p = [int(x) for x in input().split()]\n    for i in range(n):\n        input()\n    print(p)\n\ncarrots_()\n", "\n\ndef file():\n    n, p = [int(x) for x in input().split()]\n    for i in range(n):\n        input()\n    print(p)\n\nfile()\n"]