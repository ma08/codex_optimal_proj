2022-04-11 15:51:08.304935 num operations 2
2022-04-11 15:51:08.304953 size on input set 1
2022-04-11 15:51:12.134455 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport numpy as np\n\ndef main():\n    N, M = map(int, input().split())\n    broken_steps = [int(input()) for _ in range(M)]\n    broken_steps.sort()\n    dp = np.zeros(N+1, dtype=np.int64)\n    dp[0] = 1\n    dp[1] = 1\n    for i in range(2, N+1):\n        if i in broken_steps:\n            dp[i] = 0\n        else:\n            dp[i] = (dp[i-1] + dp[i-2]) % 1000000007\n    print(dp[N])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport numpy as np\n\ndef main():\n    N, M = map(int, input().split())\n    broken_stairs = [int(input()) for _ in range(M)]\n    broken_stairs.sort()\n    dp = np.zeros((N+1), dtype=np.int64)\n    dp[0] = 1\n    dp[1] = 1\n    for i in range(2, N+1):\n        if i in broken_stairs:\n            dp[i] = 0\n        else:\n            dp[i] = (dp[i-1] + dp[i-2]) % 1000000007\n    print(dp[N])\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649706668,
  "object": "edit"
}
2022-04-11 15:51:12.134675 fix spelling mistakes 2 ['\n\nimport numpy as np\n\ndef main():\n    N, M = map(int, input().split())\n    broken_steps = [int(input()) for _ in range(M)]\n    broken_steps.sort()\n    dp = np.zeros(N+1, dtype=np.int64)\n    dp[0] = 1\n    dp[1] = 1\n    for i in range(2, N+1):\n        if i in broken_steps:\n            dp[i] = 0\n        else:\n            dp[i] = (dp[i-1] + dp[i-2]) % 1000000007\n    print(dp[N])\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport numpy as np\n\ndef main():\n    N, M = map(int, input().split())\n    broken_stairs = [int(input()) for _ in range(M)]\n    broken_stairs.sort()\n    dp = np.zeros((N+1), dtype=np.int64)\n    dp[0] = 1\n    dp[1] = 1\n    for i in range(2, N+1):\n        if i in broken_stairs:\n            dp[i] = 0\n        else:\n            dp[i] = (dp[i-1] + dp[i-2]) % 1000000007\n    print(dp[N])\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 15:51:12.134715 size on output set 2
2022-04-11 15:51:12.134725 size on input set 2
2022-04-11 15:51:14.157784 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport numpy as np\n\ndef main():\n    N, M = map(int, input().split())\n    broken_stairs = [int(input()) for _ in range(M)]\n    broken_stairs.sort()\n    dp = np.zeros((N+1), dtype=np.int64)\n    dp[0] = 1\n    dp[1] = 1\n    for i in range(2, N+1):\n        if i in broken_stairs:\n            dp[i] = 0\n        else:\n            dp[i] = (dp[i-1] + dp[i-2]) % 1000000007\n    print(dp[N])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport numpy as np\n\ndef main():\n    N, M = map(int, input().split())\n    broken_stairs = [int(input()) for _ in range(M)]\n    broken_stairs.sort()\n    dp = np.zeros((N+1), dtype=np.int64)\n    dp[0] = 1\n    dp[1] = 1\n    for i in range(2, N+1):\n        if i in broken_stairs:\n            dp[i] = 0\n        else:\n            dp[i] = (dp[i-1] + dp[i-2]) % 1000000007\n    print(dp[N])\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649706672,
  "object": "edit"
}
2022-04-11 15:51:14.157990 fix syntax errors 2 ['\nimport numpy as np\n\ndef main():\n    N, M = map(int, input().split())\n    broken_stairs = [int(input()) for _ in range(M)]\n    broken_stairs.sort()\n    dp = np.zeros((N+1), dtype=np.int64)\n    dp[0] = 1\n    dp[1] = 1\n    for i in range(2, N+1):\n        if i in broken_stairs:\n            dp[i] = 0\n        else:\n            dp[i] = (dp[i-1] + dp[i-2]) % 1000000007\n    print(dp[N])\n\nif __name__ == "__main__":\n    main()\n', '\nimport numpy as np\n\ndef main():\n    N, M = map(int, input().split())\n    broken_stairs = [int(input()) for _ in range(M)]\n    broken_stairs.sort()\n    dp = np.zeros((N+1), dtype=np.int64)\n    dp[0] = 1\n    dp[1] = 1\n    for i in range(2, N+1):\n        if i in broken_stairs:\n            dp[i] = 0\n        else:\n            dp[i] = (dp[i-1] + dp[i-2]) % 1000000007\n    print(dp[N])\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 15:51:18.430697 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport numpy as np\n\ndef main():\n    N, M = map(int, input().split())\n    broken_steps = set([int(input()) for _ in range(M)])\n    dp = np.zeros(N+1, dtype=np.int64)\n    dp[0] = 1\n    dp[1] = 1\n    for i in range(2, N+1):\n        if i in broken_steps:\n            dp[i] = 0\n        else:\n            dp[i] = (dp[i-1] + dp[i-2]) % 1000000007\n    print(dp[N])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport numpy as np\n\ndef main():\n    N, M = map(int, input().split())\n    broken_steps = set([int(input()) for _ in range(M)])\n    dp = np.zeros(N+1, dtype=np.int64)\n    dp[1] = 1 if 1 not in broken_steps else 0\n    for i in range(2, N+1, 1):\n        if i in broken_steps:\n            dp[i] = 0\n        else:\n            dp[i] = (dp[i-1] + dp[i-2]) % 1000000007\n    print(dp[N])\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649706674,
  "object": "edit"
}
2022-04-11 15:51:18.430881 fix syntax errors 2 ['\nimport numpy as np\n\ndef main():\n    N, M = map(int, input().split())\n    broken_steps = set([int(input()) for _ in range(M)])\n    dp = np.zeros(N+1, dtype=np.int64)\n    dp[0] = 1\n    dp[1] = 1\n    for i in range(2, N+1):\n        if i in broken_steps:\n            dp[i] = 0\n        else:\n            dp[i] = (dp[i-1] + dp[i-2]) % 1000000007\n    print(dp[N])\n\nif __name__ == "__main__":\n    main()\n', '\nimport numpy as np\n\ndef main():\n    N, M = map(int, input().split())\n    broken_steps = set([int(input()) for _ in range(M)])\n    dp = np.zeros(N+1, dtype=np.int64)\n    dp[1] = 1 if 1 not in broken_steps else 0\n    for i in range(2, N+1, 1):\n        if i in broken_steps:\n            dp[i] = 0\n        else:\n            dp[i] = (dp[i-1] + dp[i-2]) % 1000000007\n    print(dp[N])\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 15:51:18.430915 size on output set 3
2022-04-11 15:51:18.430936 num operations 2
2022-04-11 15:51:18.430945 size on input set 1
2022-04-11 15:51:27.702729 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\narr = [int(i) for i in input().split()]\ndp = [0] * (n+1)\n\ndp = [0] * (n+1)\ndp[0] = 1\ndp[1] = 1\n\nfor i in range(2, n+1):\n    if i in broken:\n        continue\n    dp[i] = dp[i-1] + dp[i-2]\n\nprint(dp[n] % 1000000007)\n"
    },
    {
      "index": 1,
      "text": "\nn, m = map(int, input().split())\nbroken = set(map(int, [input() for _ in range(m)]))\n\ndp = [0] * (n+1)\ndp[0] = 1\ndp[1] = 1\n\nfor i in range(2, n+1):\n    if i in broken:\n        continue\n    dp[i] = dp[i-1] + dp[i-2]\n\nprint(dp[n] % 1000000007)\n"
    }
  ],
  "created": 1649706678,
  "object": "edit"
}
2022-04-11 15:51:27.702911 fix spelling mistakes 2 ['\n\nn = int(input())\narr = [int(i) for i in input().split()]\ndp = [0] * (n+1)\n\ndp = [0] * (n+1)\ndp[0] = 1\ndp[1] = 1\n\nfor i in range(2, n+1):\n    if i in broken:\n        continue\n    dp[i] = dp[i-1] + dp[i-2]\n\nprint(dp[n] % 1000000007)\n', '\nn, m = map(int, input().split())\nbroken = set(map(int, [input() for _ in range(m)]))\n\ndp = [0] * (n+1)\ndp[0] = 1\ndp[1] = 1\n\nfor i in range(2, n+1):\n    if i in broken:\n        continue\n    dp[i] = dp[i-1] + dp[i-2]\n\nprint(dp[n] % 1000000007)\n']
2022-04-11 15:51:27.702940 size on output set 2
2022-04-11 15:51:27.702949 size on input set 2
2022-04-11 15:51:30.635379 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, m = map(int, input().split())\nbroken = set(map(int, input().split()))\n\ndp = [0] * (n+1)\ndp[0] = 1\ndp[1] = 1\n\nfor i in range(2, n+1):\n    if i in broken:\n        continue\n    dp[i] = dp[i-1] + dp[i-2]\n\nprint(dp[n] % 1000000007)\n"
    },
    {
      "index": 1,
      "text": "n, m = map(int, input().split())\nbroken = set(map(int, input().split()))\n\ndp = [0] * (n+1)\ndp[0] = 1\ndp[1] = 1\n\nfor i in range(2, n+1):\n    if i in broken:\n        continue\n    dp[i] = dp[i-1] + dp[i-2]\n\nprint(dp[n] % 1000000007)\n"
    }
  ],
  "created": 1649706688,
  "object": "edit"
}
2022-04-11 15:51:30.635675 fix syntax errors 2 ['\nn, m = map(int, input().split())\nbroken = set(map(int, input().split()))\n\ndp = [0] * (n+1)\ndp[0] = 1\ndp[1] = 1\n\nfor i in range(2, n+1):\n    if i in broken:\n        continue\n    dp[i] = dp[i-1] + dp[i-2]\n\nprint(dp[n] % 1000000007)\n', 'n, m = map(int, input().split())\nbroken = set(map(int, input().split()))\n\ndp = [0] * (n+1)\ndp[0] = 1\ndp[1] = 1\n\nfor i in range(2, n+1):\n    if i in broken:\n        continue\n    dp[i] = dp[i-1] + dp[i-2]\n\nprint(dp[n] % 1000000007)\n']
2022-04-11 15:51:33.792603 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\narr = [int(i) for i in input().split()]\ndp = [0] * (n+1)\ndp[0] = 1\ndp[1] = 1\n\nfor i in range(2, n+1):\n    if i in broken:\n        continue\n    dp[i] = dp[i-1] + dp[i-2]\n\nprint(dp[n] % 1000000007)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\narr = [int(i) for i in input().split()]\nbroken = set(arr)\n\ndp = [0] * (n+1)\ndp[0] = 1\ndp[1] = 1\n\nfor i in range(2, n+1):\n    if i in broken or i == 0:\n        continue\n    dp[i] = dp[i-1] + dp[i-2]\n\nprint(dp[n] % 1000000007)\n"
    }
  ],
  "created": 1649706690,
  "object": "edit"
}
2022-04-11 15:51:33.792806 fix syntax errors 2 ['\n\nn = int(input())\narr = [int(i) for i in input().split()]\ndp = [0] * (n+1)\ndp[0] = 1\ndp[1] = 1\n\nfor i in range(2, n+1):\n    if i in broken:\n        continue\n    dp[i] = dp[i-1] + dp[i-2]\n\nprint(dp[n] % 1000000007)\n', '\nn = int(input())\narr = [int(i) for i in input().split()]\nbroken = set(arr)\n\ndp = [0] * (n+1)\ndp[0] = 1\ndp[1] = 1\n\nfor i in range(2, n+1):\n    if i in broken or i == 0:\n        continue\n    dp[i] = dp[i-1] + dp[i-2]\n\nprint(dp[n] % 1000000007)\n']
2022-04-11 15:51:33.792834 size on output set 4
