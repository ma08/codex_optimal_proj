2022-04-11 19:29:32.762016 num operations 2
2022-04-11 19:29:32.762066 size on input set 1
2022-04-11 19:29:51.255268 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Solution \n\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 200000 + 10;\n\nint n, a[N];\nvector<int> g[N];\n\nvoid dfs(int u, int p, int &red, int &blue, int &uncolored) {\n\tred += (a[u] == 1);\n\tblue += (a[u] == 2);\n\tuncolored += (a[u] == 0);\n\tfor (int v : g[u]) {\n\t\tif (v == p) continue;\n\t\tdfs(v, u, red, blue, uncolored);\n\t}\n}\n\nint main() {\n\tint ans = 0;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> a[i];\n\t}\n\tfor (int i = 1; i < n; i++) {\n\t\tint u, v;\n\t\tcin >> u >> v;\n\t\tg[u].push_back(v);\n\t\tg[v].push_back(u);\n\t}\n\tfor (int u = 1; u <= n; u++) {\n\t\tfor (int v : g[u]) {\n\t\t\tint red = 0, blue = 0, uncolored = 0;\n\t\t\tdfs(u, v, red, blue, uncolored);\n\t\t\tint red1 = 0, blue1 = 0, uncolored1 = 0;\n\t\t\tdfs(v, u, red1, blue1, uncolored1);\n\t\t\tif (red && blue1) continue;\n\t\t\tif (red1 && blue) continue;\n\t\t\tans++;\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n"
    },
    {
      "index": 1,
      "text": "\n\n# Solution\n\n#include <bits/stdc++.h> \nusing namespace std; \n\nconst int N = 200000 + 10; \n\nint n, a[N]; \nvector<int> g[N]; \n\nvoid dfs(int u, int p, int &red, int &blue, int &uncolored) { \n\tred += (a[u] == 1); \n\tblue += (a[u] == 2); \n\tuncolored += (a[u] == 0); \n\tfor (int v : g[u]) { \n\t\tif (v == p) continue; \n\t\tdfs(v, u, red, blue, uncolored); \n\t} \n} \n\nint main() { \n\tint ans = 0; \n\tcin >> n; \n\tfor (int i = 1; i <= n; i++) { \n\t\tcin >> a[i]; \n\t} \n\tfor (int i = 1; i < n; i++) { \n\t\tint u, v; \n\t\tcin >> u >> v; \n\t\tg[u].push_back(v); \n\t\tg[v].push_back(u); \n\t} \n\tfor (int u = 1; u <= n; u++) { \n\t\tfor (int v : g[u]) { \n\t\t\tint red = 0, blue = 0, uncolored = 0; \n\t\t\tdfs(u, v, red, blue, uncolored); \n\t\t\tint red1 = 0, blue1 = 0, uncolored1 = 0; \n\t\t\tdfs(v, u, red1, blue1, uncolored1); \n\t\t\tif (red && blue1) continue; \n\t\t\tif (red1 && blue) continue; \n\t\t\tans++; \n\t\t} \n\t} \n\tcout << ans << endl; \n\treturn 0; \n} \n"
    }
  ],
  "created": 1649719773,
  "object": "edit"
}
2022-04-11 19:29:51.255739 fix spelling mistakes 2 ['\n\n# Solution \n\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 200000 + 10;\n\nint n, a[N];\nvector<int> g[N];\n\nvoid dfs(int u, int p, int &red, int &blue, int &uncolored) {\n\tred += (a[u] == 1);\n\tblue += (a[u] == 2);\n\tuncolored += (a[u] == 0);\n\tfor (int v : g[u]) {\n\t\tif (v == p) continue;\n\t\tdfs(v, u, red, blue, uncolored);\n\t}\n}\n\nint main() {\n\tint ans = 0;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> a[i];\n\t}\n\tfor (int i = 1; i < n; i++) {\n\t\tint u, v;\n\t\tcin >> u >> v;\n\t\tg[u].push_back(v);\n\t\tg[v].push_back(u);\n\t}\n\tfor (int u = 1; u <= n; u++) {\n\t\tfor (int v : g[u]) {\n\t\t\tint red = 0, blue = 0, uncolored = 0;\n\t\t\tdfs(u, v, red, blue, uncolored);\n\t\t\tint red1 = 0, blue1 = 0, uncolored1 = 0;\n\t\t\tdfs(v, u, red1, blue1, uncolored1);\n\t\t\tif (red && blue1) continue;\n\t\t\tif (red1 && blue) continue;\n\t\t\tans++;\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n', '\n\n# Solution\n\n#include <bits/stdc++.h> \nusing namespace std; \n\nconst int N = 200000 + 10; \n\nint n, a[N]; \nvector<int> g[N]; \n\nvoid dfs(int u, int p, int &red, int &blue, int &uncolored) { \n\tred += (a[u] == 1); \n\tblue += (a[u] == 2); \n\tuncolored += (a[u] == 0); \n\tfor (int v : g[u]) { \n\t\tif (v == p) continue; \n\t\tdfs(v, u, red, blue, uncolored); \n\t} \n} \n\nint main() { \n\tint ans = 0; \n\tcin >> n; \n\tfor (int i = 1; i <= n; i++) { \n\t\tcin >> a[i]; \n\t} \n\tfor (int i = 1; i < n; i++) { \n\t\tint u, v; \n\t\tcin >> u >> v; \n\t\tg[u].push_back(v); \n\t\tg[v].push_back(u); \n\t} \n\tfor (int u = 1; u <= n; u++) { \n\t\tfor (int v : g[u]) { \n\t\t\tint red = 0, blue = 0, uncolored = 0; \n\t\t\tdfs(u, v, red, blue, uncolored); \n\t\t\tint red1 = 0, blue1 = 0, uncolored1 = 0; \n\t\t\tdfs(v, u, red1, blue1, uncolored1); \n\t\t\tif (red && blue1) continue; \n\t\t\tif (red1 && blue) continue; \n\t\t\tans++; \n\t\t} \n\t} \n\tcout << ans << endl; \n\treturn 0; \n} \n']
2022-04-11 19:29:51.255809 size on output set 2
2022-04-11 19:29:51.255820 size on input set 2
2022-04-11 19:30:09.919268 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 200000 + 10;\n\nint n, a[N];\nvector<int> g[N];\n\nvoid dfs(int u, int p, int &red, int &blue, int &uncolored) {\n\tred += (a[u] == 1);\n\tblue += (a[u] == 2);\n\tuncolored += (a[u] == 0);\n\tfor (int v : g[u]) {\n\t\tif (v == p) continue;\n\t\tdfs(v, u, red, blue, uncolored);\n\t}\n}\n\nint main() {\n\tint ans = 0;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> a[i];\n\t}\n\tfor (int i = 1; i < n; i++) {\n\t\tint u, v;\n\t\tcin >> u >> v;\n\t\tg[u].push_back(v);\n\t\tg[v].push_back(u);\n\t}\n\tfor (int u = 1; u <= n; u++) {\n\t\tfor (int v : g[u]) {\n\t\t\tint red = 0, blue = 0, uncolored = 0;\n\t\t\tdfs(u, v, red, blue, uncolored);\n\t\t\tint red1 = 0, blue1 = 0, uncolored1 = 0;\n\t\t\tdfs(v, u, red1, blue1, uncolored1);\n\t\t\tif (red && blue1) continue;\n\t\t\tif (red1 && blue) continue;\n\t\t\tans++;\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n"
    },
    {
      "index": 1,
      "text": "\n\n// Solution\n\n#include <bits/stdc++.h> \nusing namespace std; \n\nconst int N = 200000 + 10; \n\nint n, a[N]; \nvector<int> g[N]; \n\nvoid dfs(int u, int p, int &red, int &blue, int &uncolored) { \n\tred += (a[u] == 1); \n\tblue += (a[u] == 2); \n\tuncolored += (a[u] == 0); \n\tfor (int v : g[u]) { \n\t\tif (v == p) continue; \n\t\tdfs(v, u, red, blue, uncolored); \n\t} \n} \n\nint main() { \n\tint ans = 0; \n\tcin >> n; \n\tfor (int i = 1; i <= n; i++) { \n\t\tcin >> a[i]; \n\t} \n\tfor (int i = 1; i < n; i++) { \n\t\tint u, v; \n\t\tcin >> u >> v; \n\t\tg[u].push_back(v); \n\t\tg[v].push_back(u); \n\t} \n\tfor (int u = 1; u <= n; u++) { \n\t\tfor (int v : g[u]) { \n\t\t\tint red = 0, blue = 0, uncolored = 0; \n\t\t\tdfs(u, v, red, blue, uncolored); \n\t\t\tint red1 = 0, blue1 = 0, uncolored1 = 0; \n\t\t\tdfs(v, u, red1, blue1, uncolored1); \n\t\t\tif (red && blue1) continue; \n\t\t\tif (red1 && blue) continue; \n\t\t\tans++; \n\t\t} \n\t} \n\tcout << ans << endl; \n\treturn 0; \n} \n"
    }
  ],
  "created": 1649719791,
  "object": "edit"
}
2022-04-11 19:30:09.919656 fix syntax errors 2 ['\n\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 200000 + 10;\n\nint n, a[N];\nvector<int> g[N];\n\nvoid dfs(int u, int p, int &red, int &blue, int &uncolored) {\n\tred += (a[u] == 1);\n\tblue += (a[u] == 2);\n\tuncolored += (a[u] == 0);\n\tfor (int v : g[u]) {\n\t\tif (v == p) continue;\n\t\tdfs(v, u, red, blue, uncolored);\n\t}\n}\n\nint main() {\n\tint ans = 0;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> a[i];\n\t}\n\tfor (int i = 1; i < n; i++) {\n\t\tint u, v;\n\t\tcin >> u >> v;\n\t\tg[u].push_back(v);\n\t\tg[v].push_back(u);\n\t}\n\tfor (int u = 1; u <= n; u++) {\n\t\tfor (int v : g[u]) {\n\t\t\tint red = 0, blue = 0, uncolored = 0;\n\t\t\tdfs(u, v, red, blue, uncolored);\n\t\t\tint red1 = 0, blue1 = 0, uncolored1 = 0;\n\t\t\tdfs(v, u, red1, blue1, uncolored1);\n\t\t\tif (red && blue1) continue;\n\t\t\tif (red1 && blue) continue;\n\t\t\tans++;\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n', '\n\n// Solution\n\n#include <bits/stdc++.h> \nusing namespace std; \n\nconst int N = 200000 + 10; \n\nint n, a[N]; \nvector<int> g[N]; \n\nvoid dfs(int u, int p, int &red, int &blue, int &uncolored) { \n\tred += (a[u] == 1); \n\tblue += (a[u] == 2); \n\tuncolored += (a[u] == 0); \n\tfor (int v : g[u]) { \n\t\tif (v == p) continue; \n\t\tdfs(v, u, red, blue, uncolored); \n\t} \n} \n\nint main() { \n\tint ans = 0; \n\tcin >> n; \n\tfor (int i = 1; i <= n; i++) { \n\t\tcin >> a[i]; \n\t} \n\tfor (int i = 1; i < n; i++) { \n\t\tint u, v; \n\t\tcin >> u >> v; \n\t\tg[u].push_back(v); \n\t\tg[v].push_back(u); \n\t} \n\tfor (int u = 1; u <= n; u++) { \n\t\tfor (int v : g[u]) { \n\t\t\tint red = 0, blue = 0, uncolored = 0; \n\t\t\tdfs(u, v, red, blue, uncolored); \n\t\t\tint red1 = 0, blue1 = 0, uncolored1 = 0; \n\t\t\tdfs(v, u, red1, blue1, uncolored1); \n\t\t\tif (red && blue1) continue; \n\t\t\tif (red1 && blue) continue; \n\t\t\tans++; \n\t\t} \n\t} \n\tcout << ans << endl; \n\treturn 0; \n} \n']
2022-04-11 19:30:12.102578 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# Solution \n\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 200000 + 10;\n\nint n, a[N];\nvector<int> g[N];\n\nvoid dfs(int u, int p, int &red, int &blue, int &uncolored) {\n\tred += (a[u] == 1);\n\tblue += (a[u] == 2);\n\tuncolored += (a[u] == 0);\n\tfor (int v : g[u]) {\n\t\tif (v == p) continue;\n\t\tdfs(v, u, red, blue, uncolored);\n\t}\n}\n\nint main() {\n\tint ans = 0;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> a[i];\n\t}\n\tfor (int i = 1; i < n; i++) {\n\t\tint u, v;\n\t\tcin >> u >> v;\n\t\tg[u].push_back(v);\n\t\tg[v].push_back(u);\n\t}\n\tfor (int u = 1; u <= n; u++) {\n\t\tfor (int v : g[u]) {\n\t\t\tint red = 0, blue = 0, uncolored = 0;\n\t\t\tdfs(u, v, red, blue, uncolored);\n\t\t\tint red1 = 0, blue1 = 0, uncolored1 = 0;\n\t\t\tdfs(v, u, red1, blue1, uncolored1);\n\t\t\tif (red && blue1) continue;\n\t\t\tif (red1 && blue) continue;\n\t\t\tans++;\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n"
    },
    {
      "index": 1,
      "text": "\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 200000 + 10;\n\nint n, a[N];\nvector<int> g[N];\n\nvoid dfs(int u, int p, int &red, int &blue, int &uncolored) {\n\tred += (a[u] == 1);\n\tblue += (a[u] == 2);\n\tuncolored += (a[u] == 0);\n\tfor (int v : g[u]) {\n\t\tif (v == p) continue;\n\t\tdfs(v, u, red, blue, uncolored);\n\t}\n}\n\nint main() {\n\tint ans = 0;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> a[i];\n\t}\n\tfor (int i = 1; i < n; i++) {\n\t\tint u, v;\n\t\tcin >> u >> v;\n\t\tg[u].push_back(v);\n\t\tg[v].push_back(u);\n\t}\n\tfor (int u = 1; u <= n; u++) {\n\t\tfor (int v : g[u]) {\n\t\t\tint red = 0, blue = 0, uncolored = 0;\n\t\t\tdfs(u, v, red, blue, uncolored);\n\t\t\tint red1 = 0, blue1 = 0, uncolored1 = 0;\n\t\t\tdfs(v, u, red1, blue1, uncolored1);\n\t\t\tif (red && blue1) continue;\n\t\t\tif (red1 && blue) continue;\n\t\t\tans++;\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n"
    }
  ],
  "created": 1649719810,
  "object": "edit"
}
2022-04-11 19:30:12.102703 fix syntax errors 2 ['# Solution \n\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 200000 + 10;\n\nint n, a[N];\nvector<int> g[N];\n\nvoid dfs(int u, int p, int &red, int &blue, int &uncolored) {\n\tred += (a[u] == 1);\n\tblue += (a[u] == 2);\n\tuncolored += (a[u] == 0);\n\tfor (int v : g[u]) {\n\t\tif (v == p) continue;\n\t\tdfs(v, u, red, blue, uncolored);\n\t}\n}\n\nint main() {\n\tint ans = 0;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> a[i];\n\t}\n\tfor (int i = 1; i < n; i++) {\n\t\tint u, v;\n\t\tcin >> u >> v;\n\t\tg[u].push_back(v);\n\t\tg[v].push_back(u);\n\t}\n\tfor (int u = 1; u <= n; u++) {\n\t\tfor (int v : g[u]) {\n\t\t\tint red = 0, blue = 0, uncolored = 0;\n\t\t\tdfs(u, v, red, blue, uncolored);\n\t\t\tint red1 = 0, blue1 = 0, uncolored1 = 0;\n\t\t\tdfs(v, u, red1, blue1, uncolored1);\n\t\t\tif (red && blue1) continue;\n\t\t\tif (red1 && blue) continue;\n\t\t\tans++;\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n', '\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 200000 + 10;\n\nint n, a[N];\nvector<int> g[N];\n\nvoid dfs(int u, int p, int &red, int &blue, int &uncolored) {\n\tred += (a[u] == 1);\n\tblue += (a[u] == 2);\n\tuncolored += (a[u] == 0);\n\tfor (int v : g[u]) {\n\t\tif (v == p) continue;\n\t\tdfs(v, u, red, blue, uncolored);\n\t}\n}\n\nint main() {\n\tint ans = 0;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> a[i];\n\t}\n\tfor (int i = 1; i < n; i++) {\n\t\tint u, v;\n\t\tcin >> u >> v;\n\t\tg[u].push_back(v);\n\t\tg[v].push_back(u);\n\t}\n\tfor (int u = 1; u <= n; u++) {\n\t\tfor (int v : g[u]) {\n\t\t\tint red = 0, blue = 0, uncolored = 0;\n\t\t\tdfs(u, v, red, blue, uncolored);\n\t\t\tint red1 = 0, blue1 = 0, uncolored1 = 0;\n\t\t\tdfs(v, u, red1, blue1, uncolored1);\n\t\t\tif (red && blue1) continue;\n\t\t\tif (red1 && blue) continue;\n\t\t\tans++;\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n']
2022-04-11 19:30:12.102722 size on output set 4
2022-04-11 19:30:12.102738 num operations 2
2022-04-11 19:30:12.102742 size on input set 1
2022-04-11 19:30:17.983215 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    edges = []\n    for i in range(n-1):\n        v, u = map(int, input().split())\n        edges.append((v, u))\n    # n = 5\n    # a = [2, 0, 0, 1, 2]\n    # edges = [(1, 2), (2, 3), (2, 4), (2, 5)]\n    # n = 5\n    # a = [1, 0, 0, 0, 2]\n    # edges = [(1, 2), (2, 3), (3, 4), (4, 5)]\n    # n = 3\n    # a = [1, 1, 2]\n    # edges = [(2, 3), (1, 3)]\n    nice_edges = 0\n    for i in range(n-1):\n        v, u = edges[i]\n        if a[v-1] == 0 or a[u-1] == 0:\n            nice_edges += 1\n    print(nice_edges)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    # n = int(input())\n    # a = list(map(int, input().split()))\n    # edges = []\n    # for i in range(n-1):\n    #     v, u = map(int, input().split())\n    #     edges.append((v, u))\n    n = 5\n    a = [2, 0, 0, 1, 2]\n    edges = [(1, 2), (2, 3), (2, 4), (2, 5)]\n    n = 5\n    a = [1, 0, 0, 0, 2]\n    edges = [(1, 2), (2, 3), (3, 4), (4, 5)]\n    # n = 3\n    # a = [1, 1, 2]\n    # edges = [(2, 3), (1, 3)]\n    nice_edges = 0\n    for i in range(n-1):\n        v, u = edges[i]\n        if a[v-1] == 0 or a[u-1] == 0:\n            nice_edges += 1\n    print(nice_edges)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649719812,
  "object": "edit"
}
2022-04-11 19:30:17.983365 fix spelling mistakes 2 ["\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    edges = []\n    for i in range(n-1):\n        v, u = map(int, input().split())\n        edges.append((v, u))\n    # n = 5\n    # a = [2, 0, 0, 1, 2]\n    # edges = [(1, 2), (2, 3), (2, 4), (2, 5)]\n    # n = 5\n    # a = [1, 0, 0, 0, 2]\n    # edges = [(1, 2), (2, 3), (3, 4), (4, 5)]\n    # n = 3\n    # a = [1, 1, 2]\n    # edges = [(2, 3), (1, 3)]\n    nice_edges = 0\n    for i in range(n-1):\n        v, u = edges[i]\n        if a[v-1] == 0 or a[u-1] == 0:\n            nice_edges += 1\n    print(nice_edges)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    # n = int(input())\n    # a = list(map(int, input().split()))\n    # edges = []\n    # for i in range(n-1):\n    #     v, u = map(int, input().split())\n    #     edges.append((v, u))\n    n = 5\n    a = [2, 0, 0, 1, 2]\n    edges = [(1, 2), (2, 3), (2, 4), (2, 5)]\n    n = 5\n    a = [1, 0, 0, 0, 2]\n    edges = [(1, 2), (2, 3), (3, 4), (4, 5)]\n    # n = 3\n    # a = [1, 1, 2]\n    # edges = [(2, 3), (1, 3)]\n    nice_edges = 0\n    for i in range(n-1):\n        v, u = edges[i]\n        if a[v-1] == 0 or a[u-1] == 0:\n            nice_edges += 1\n    print(nice_edges)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 19:30:17.983443 size on output set 2
2022-04-11 19:30:17.983449 size on input set 2
2022-04-11 19:30:27.269785 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    # n = int(input())\n    # a = list(map(int, input().split()))\n    # edges = []\n    # for i in range(n-1):\n    #     v, u = map(int, input().split())\n    #     edges.append((v, u))\n    # n = 5\n    # a = [2, 0, 0, 1, 2]\n    # edges = [(1, 2), (2, 3), (2, 4), (2, 5)]\n    # n = 5\n    # a = [1, 0, 0, 0, 2]\n    # edges = [(1, 2), (2, 3), (3, 4), (4, 5)]\n    # n = 3\n    # a = [1, 1, 2]\n    # edges = [(2, 3), (1, 3)]\n    nice_edges = 0\n    for i in range(n-1):\n        v, u = edges[i]\n        if a[v-1] == 0 or a[u-1] == 0:\n            nice_edges += 1\n    print(nice_edges)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    edges = []\n    for i in range(n-1):\n        v, u = map(int, input().split())\n        edges.append((v, u))\n    # n = 5\n    # a = [2, 0, 0, 1, 2]\n    # edges = [(1, 2), (2, 3), (2, 4), (2, 5)]\n    # n = 5\n    # a = [1, 0, 0, 0, 2]\n    # edges = [(1, 2), (2, 3), (3, 4), (4, 5)]\n    # n = 3\n    # a = [1, 1, 2]\n    # edges = [(2, 3), (1, 3)]\n    nice_edges = 0\n    for i in range(n-1):\n        v, u = edges[i]\n        if a[v-1] == 0 or a[u-1] == 0:\n            nice_edges += 1\n    print(nice_edges)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649719818,
  "object": "edit"
}
2022-04-11 19:30:27.269928 fix syntax errors 2 ["\ndef main():\n    # n = int(input())\n    # a = list(map(int, input().split()))\n    # edges = []\n    # for i in range(n-1):\n    #     v, u = map(int, input().split())\n    #     edges.append((v, u))\n    # n = 5\n    # a = [2, 0, 0, 1, 2]\n    # edges = [(1, 2), (2, 3), (2, 4), (2, 5)]\n    # n = 5\n    # a = [1, 0, 0, 0, 2]\n    # edges = [(1, 2), (2, 3), (3, 4), (4, 5)]\n    # n = 3\n    # a = [1, 1, 2]\n    # edges = [(2, 3), (1, 3)]\n    nice_edges = 0\n    for i in range(n-1):\n        v, u = edges[i]\n        if a[v-1] == 0 or a[u-1] == 0:\n            nice_edges += 1\n    print(nice_edges)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    edges = []\n    for i in range(n-1):\n        v, u = map(int, input().split())\n        edges.append((v, u))\n    # n = 5\n    # a = [2, 0, 0, 1, 2]\n    # edges = [(1, 2), (2, 3), (2, 4), (2, 5)]\n    # n = 5\n    # a = [1, 0, 0, 0, 2]\n    # edges = [(1, 2), (2, 3), (3, 4), (4, 5)]\n    # n = 3\n    # a = [1, 1, 2]\n    # edges = [(2, 3), (1, 3)]\n    nice_edges = 0\n    for i in range(n-1):\n        v, u = edges[i]\n        if a[v-1] == 0 or a[u-1] == 0:\n            nice_edges += 1\n    print(nice_edges)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 19:31:03.794127 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    edges = []\n    for i in range(n-1):\n        v, u = map(int, input().split())\n        edges.append((v, u))\n    nice_edges = 0\n    for i in range(n-1):\n        v, u = edges[i]\n        if a[v-1] == 0 or a[u-1] == 0:\n            nice_edges += 1\n    print(nice_edges)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "def main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n\n    # n, m = 5, 3\n    # a = [1, 2, 3, 4, 5]\n    # n, m = 5, 3\n    # a = [3, 1, 4, 5, 2]\n    # n, m = 4, 3\n    # a = [1, 2, 3, 4]\n    # n, m = 5, 4\n    # a = [1, 2, 3, 4, 5]\n    # n, m = 5, 4\n    # a = [5, 4, 3, 2, 1]\n    # n, m = 5, 4\n    # a = [1, 2, 3, 5, 4]\n    # n, m = 5, 4\n    # a = [1, 2, 4, 5, 3]\n    # n, m = 5, 4\n    # a = [1, 2, 4, 3, 5]\n    # n, m = 5, 4\n    # a = [1, 2, 5, 4, 3]\n    # n, m = 5, 4\n    # a = [1, 2, 5, 3, 4]\n    # n, m = 5, 4\n    # a = [1, 3, 4, 5, 2]\n    # n, m = 5, 4\n    # a = [1, 3, 4, 2, 5]\n    # n, m = 5, 4\n    # a = [1, 3, 5, 4, 2]\n    # n, m = 5, 4\n    # a = [1, 3, 5, 2, 4]\n    # n, m = 5, 4\n    # a = [1, 4, 5, 3, 2]\n    # n, m = 5, 4\n    # a = [1, 4, 5, 2, 3]\n    # n, m = 5, 4\n    # a = [1, 5, 4, 3, 2]\n    # n, m = 5, 4\n    # a = [1, 5, 4, 2, 3]\n    # n, m = 5, 4\n    # a = [1, 5, 3, 4, 2]\n    # n, m = 5, 4\n    # a = [1, 5, 3, 2, 4]\n    # n, m = 5, 4\n    # a = [2, 1, 3, 4, 5]\n    # n, m = 5, 4\n    # a = [2, 1, 3, 5, 4]\n    # n, m = 5, 4\n    # a = [2, 1, 4, 5, 3]\n    # n, m = 5, 4\n    # a = [2, 1, 4, 3, 5]\n    # n, m = 5, 4\n    # a = [2, 1, 5, 4, 3]\n    # n, m = 5, 4\n    # a = [2, 1, 5, 3, 4]\n    # n, m = 5, 4\n    # a = [2, 3, 1, 4, 5]\n    # n, m = 5, 4\n    # a = [2, 3, 1, 5, 4]\n    # n, m = 5, 4\n    # a = [2, 3, 4, 5, 1]\n    # n, m = 5, 4\n    # a = [2, 3, 4, 1, 5]\n    # n, m = 5, 4\n    # a = [2, 3, 5, 4, 1]\n    # n, m = 5, 4\n    # a = [2, 3, 5, 1, 4]\n    # n, m = 5, 4\n    # a = [2, 4, 5, 3, 1]\n    # n, m = 5, 4\n    # a = [2, 4, 5, 1, 3]\n    # n, m = 5, 4\n    # a = [2, 5, 4, 3, 1]\n    # n, m = 5, 4\n    # a = [2, 5, 4, 1, 3]\n    # n, m = 5, 4\n    # a = [2, 5, 3, 4, 1]\n    # n, m = 5, 4\n    # a = [2, 5, 3, 1, 4]\n    # n, m = 5, 4\n    # a = [3, 1, 2, 4, 5]\n    # n, m = 5, 4\n    # a = [3, 1, 2, 5, 4]\n    # n, m = 5, 4\n    # a = [3, 1, 4, 5, 2]\n    # n, m = 5, 4\n    # a = [3, 1, 4, 2, 5]\n    # n, m = 5, 4\n    # a = [3, 1, 5, 4, 2]\n    # n, m = 5, 4\n    # a = [3, 1, 5, 2, 4]\n    # n, m = 5, 4\n    # a = [3, 2, 1, 4, 5]\n    # n, m = 5, 4\n    # a = [3, 2, 1, 5, 4]\n    # n, m = 5, 4\n    # a = [3, 2, 4, 5, 1]\n    # n, m = 5, 4\n    # a = [3, 2, 4, 1, 5]\n    # n, m = 5, 4\n    # a = [3, 2, 5, 4, 1]\n    # n, m = 5, 4\n    # a = [3, 2, 5, 1, 4]\n    # n, m = 5, 4\n    # a = [3, 4, 5, 2, 1]\n    # n, m = 5, 4\n    # a = [3, 4, 5, 1, 2]\n    # n, m = 5, 4\n    # a = [3, 5, 4, 2, 1]\n    # n, m = 5, 4\n    # a = [3, 5, 4, 1, 2]\n    # n, m = 5, 4\n    # a = [3, 5, 2, 4, 1]\n    # n, m = 5, 4\n    # a = [3, 5, 2, 1, 4]\n    # n, m = 5, 4\n    # a = [4, 1, 2, 3, 5]\n    # n, m = 5, 4\n    # a = [4, 1, 2, 5, 3]\n    # n, m = 5, 4\n    # a = [4, 1, 3, 5, 2]\n    # n, m = 5, 4\n    # a = [4, 1, 3, 2, 5]\n    # n, m = 5, 4\n    # a = [4, 1, 5, 3, 2]\n    # n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649719827,
  "object": "edit"
}
2022-04-11 19:31:03.794355 fix syntax errors 2 ["\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    edges = []\n    for i in range(n-1):\n        v, u = map(int, input().split())\n        edges.append((v, u))\n    nice_edges = 0\n    for i in range(n-1):\n        v, u = edges[i]\n        if a[v-1] == 0 or a[u-1] == 0:\n            nice_edges += 1\n    print(nice_edges)\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n\n    # n, m = 5, 3\n    # a = [1, 2, 3, 4, 5]\n    # n, m = 5, 3\n    # a = [3, 1, 4, 5, 2]\n    # n, m = 4, 3\n    # a = [1, 2, 3, 4]\n    # n, m = 5, 4\n    # a = [1, 2, 3, 4, 5]\n    # n, m = 5, 4\n    # a = [5, 4, 3, 2, 1]\n    # n, m = 5, 4\n    # a = [1, 2, 3, 5, 4]\n    # n, m = 5, 4\n    # a = [1, 2, 4, 5, 3]\n    # n, m = 5, 4\n    # a = [1, 2, 4, 3, 5]\n    # n, m = 5, 4\n    # a = [1, 2, 5, 4, 3]\n    # n, m = 5, 4\n    # a = [1, 2, 5, 3, 4]\n    # n, m = 5, 4\n    # a = [1, 3, 4, 5, 2]\n    # n, m = 5, 4\n    # a = [1, 3, 4, 2, 5]\n    # n, m = 5, 4\n    # a = [1, 3, 5, 4, 2]\n    # n, m = 5, 4\n    # a = [1, 3, 5, 2, 4]\n    # n, m = 5, 4\n    # a = [1, 4, 5, 3, 2]\n    # n, m = 5, 4\n    # a = [1, 4, 5, 2, 3]\n    # n, m = 5, 4\n    # a = [1, 5, 4, 3, 2]\n    # n, m = 5, 4\n    # a = [1, 5, 4, 2, 3]\n    # n, m = 5, 4\n    # a = [1, 5, 3, 4, 2]\n    # n, m = 5, 4\n    # a = [1, 5, 3, 2, 4]\n    # n, m = 5, 4\n    # a = [2, 1, 3, 4, 5]\n    # n, m = 5, 4\n    # a = [2, 1, 3, 5, 4]\n    # n, m = 5, 4\n    # a = [2, 1, 4, 5, 3]\n    # n, m = 5, 4\n    # a = [2, 1, 4, 3, 5]\n    # n, m = 5, 4\n    # a = [2, 1, 5, 4, 3]\n    # n, m = 5, 4\n    # a = [2, 1, 5, 3, 4]\n    # n, m = 5, 4\n    # a = [2, 3, 1, 4, 5]\n    # n, m = 5, 4\n    # a = [2, 3, 1, 5, 4]\n    # n, m = 5, 4\n    # a = [2, 3, 4, 5, 1]\n    # n, m = 5, 4\n    # a = [2, 3, 4, 1, 5]\n    # n, m = 5, 4\n    # a = [2, 3, 5, 4, 1]\n    # n, m = 5, 4\n    # a = [2, 3, 5, 1, 4]\n    # n, m = 5, 4\n    # a = [2, 4, 5, 3, 1]\n    # n, m = 5, 4\n    # a = [2, 4, 5, 1, 3]\n    # n, m = 5, 4\n    # a = [2, 5, 4, 3, 1]\n    # n, m = 5, 4\n    # a = [2, 5, 4, 1, 3]\n    # n, m = 5, 4\n    # a = [2, 5, 3, 4, 1]\n    # n, m = 5, 4\n    # a = [2, 5, 3, 1, 4]\n    # n, m = 5, 4\n    # a = [3, 1, 2, 4, 5]\n    # n, m = 5, 4\n    # a = [3, 1, 2, 5, 4]\n    # n, m = 5, 4\n    # a = [3, 1, 4, 5, 2]\n    # n, m = 5, 4\n    # a = [3, 1, 4, 2, 5]\n    # n, m = 5, 4\n    # a = [3, 1, 5, 4, 2]\n    # n, m = 5, 4\n    # a = [3, 1, 5, 2, 4]\n    # n, m = 5, 4\n    # a = [3, 2, 1, 4, 5]\n    # n, m = 5, 4\n    # a = [3, 2, 1, 5, 4]\n    # n, m = 5, 4\n    # a = [3, 2, 4, 5, 1]\n    # n, m = 5, 4\n    # a = [3, 2, 4, 1, 5]\n    # n, m = 5, 4\n    # a = [3, 2, 5, 4, 1]\n    # n, m = 5, 4\n    # a = [3, 2, 5, 1, 4]\n    # n, m = 5, 4\n    # a = [3, 4, 5, 2, 1]\n    # n, m = 5, 4\n    # a = [3, 4, 5, 1, 2]\n    # n, m = 5, 4\n    # a = [3, 5, 4, 2, 1]\n    # n, m = 5, 4\n    # a = [3, 5, 4, 1, 2]\n    # n, m = 5, 4\n    # a = [3, 5, 2, 4, 1]\n    # n, m = 5, 4\n    # a = [3, 5, 2, 1, 4]\n    # n, m = 5, 4\n    # a = [4, 1, 2, 3, 5]\n    # n, m = 5, 4\n    # a = [4, 1, 2, 5, 3]\n    # n, m = 5, 4\n    # a = [4, 1, 3, 5, 2]\n    # n, m = 5, 4\n    # a = [4, 1, 3, 2, 5]\n    # n, m = 5, 4\n    # a = [4, 1, 5, 3, 2]\n    # n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 19:31:03.794499 size on output set 4
