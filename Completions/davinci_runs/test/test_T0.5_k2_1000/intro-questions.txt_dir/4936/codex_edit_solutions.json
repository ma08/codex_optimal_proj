["\n\ndef main():\n    n = int(input())\n    t = list(map(int, input().split()))\n    max_temp = 0\n    max_day = 1\n    for i in range(n-2):\n        if max(t[i], t[i+2]) > max_temp:\n            max_temp = max(t[i], t[i+2])\n            max_day = i+1\n    print(max_day, max_temp)\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    temp = [int(i) for i in sys.stdin.readline().strip().split()]\n    max_temp = []\n    for i in range(len(temp)-2):\n        max_temp.append(max(temp[i], temp[i+1], temp[i+2]))\n    index = max_temp.index(min(max_temp))\n    print(index+1, max_temp[index]) \n\nif __name__ == '__main__':\n    main()\n", "import sys\n\nnumDays = int(sys.stdin.readline())\ntemp = sys.stdin.readline().split()\nminTemp = 100\nminDay = 0\nfor i in range(0,numDays-2):\n    if int(temp[i])+int(temp[i+1])+int(temp[i+2]) < minTemp:\n        minTemp = int(temp[i])+int(temp[i+1])+int(temp[i+2])\n        minDay = i+1\nprint(minDay, minTemp)\n", "\n\nimport sys\n\nnumDays = int(sys.stdin.readline())\ntemp = sys.stdin.readline().split()\n\nminTemp = 100\nminDay = 0\nfor i in range(0, numDays - 2):\n    if int(temp[i]) + int(temp[i + 1]) + int(temp[i + 2]) < minTemp:\n        minTemp = int(temp[i]) + int(temp[i + 1]) + int(temp[i + 2])\n        minDay = i + 1\n\nprint(minDay, minTemp)\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    temps = [int(x) for x in sys.stdin.readline().split()]\n    min_temp = min(min(temps[0], temps[n-1]), min(temps[1:n-1])) # min(temps[1:n-1]) is not inclusive\n    min_day = 1\n    for i in range(1, n-1):\n        temp = min(min(temps[i], temps[i-1]), min(temps[i+1:n-1])) # min(temps[i+1:n-1]) is not inclusive\n        if temp < min_temp:\n            min_temp = temp\n            min_day = i + 1\n    print(min_day, min_temp)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    temps = list(map(int, input().split()))  # \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0432 \u0441\u043f\u0438\u0441\u043e\u043a\n\n    max_temp = 0  # \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0442\u0435\u043c\u043f\u0435\u0440\u0430\u0442\u0443\u0440\u0430\n    day = 0\n\n    for i in range(n - 2):\n        temp = max(temps[i], temps[i + 1], temps[i + 2])  # \u043d\u0430\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u0442\u0435\u043c\u043f\u0435\u0440\u0430\u0442\u0443\u0440\u044b\n\n        if temp > max_temp:\n            max_temp = temp\n            day = i + 1\n\n    print(day, max_temp)\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    days = int(input())\n    temp = [int(i) for i in input().split()]\n    m = max(temp)\n    for i in range(days-3):\n        t = max(temp[i:i+3])\n        if t < m:\n            m = t\n            d = i+1\n    print(d, m)\n\nif __name__ == '__main__':\n    main()\n", "\n#https://www.hackerrank.com/challenges/minimum-loss/problem\nimport sys\n\nnumDays = int(input())\ntemp = input().split()\n\nminTemp = 100\nminDay = 0\nfor i in range(0,numDays-2):\n    if int(temp[i])+int(temp[i+1])+int(temp[i+2]) < minTemp:\n        minTemp = int(temp[i])+int(temp[i+1])+int(temp[i+2])\n        minDay = i+1\n\nprint(minTemp)\n", "\ndef main():\n    days = int(input())\n    temp = [int(i) for i in input().split()]\n    m = max(temp)\n    for i in range(days - 2):\n        t = max(temp[i:i+3])\n        if t < m:\n            m = t\n            d = i + 1\n    print(d, m)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    temp = [int(i) for i in sys.stdin.readline().strip().split()] # readline() returns a string, so we need to convert it to int\n    max_temp = [] # store the maximum temperature of each 3-day period\n    for i in range(len(temp)-2): # we only need to consider the first n-2 days\n        max_temp.append(max(temp[i], temp[i+1], temp[i+2])) # append the maximum temperature of each 3-day period to the list\n    index = max_temp.index(min(max_temp)) # find the index of the minimum maximum temperature\n    print(index+1, max_temp[index]) # print the index of the minimum maximum temperature and the minimum maximum temperature\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    t = list(map(int, input().split()))\n    max_temp = 101\n    max_day = 0\n    for i in range(n - 2):\n        if max(t[i], t[i + 2]) < max_temp:\n            max_temp = max(t[i], t[i + 2])\n            max_day = i + 1\n\n    print(max_day, max_temp)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    temp = [int(i) for i in sys.stdin.readline().strip().split()] # read in an array of integers\n    max_temp = []\n    for i in range(len(temp)-2): # loop through the array\n        max_temp.append(max(temp[i], temp[i+1], temp[i+2])) # add the max of 3 consecutive elements to max_temp\n    index = max_temp.index(min(max_temp)) # find the index of the minimum max\n    print(index+1, max_temp[index])\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    temps = [int(i) for i in input().split()]\n    best_day = 0\n    best_temp = temps[0] + temps[1] + temps[2] + temps[3] + temps[4]\n    for i in range(1, n-2):\n        tmp = temps[i] + temps[i+1] + temps[i+2] + temps[i+3] + temps[i+4]\n        if tmp < best_temp:\n            best_day = i+1\n            best_temp = tmp\n    print(best_day, best_temp)\n\nmain()\n", "\n\ndef main():\n    n = int(input())\n    temps = [int(i) for i in input().split()]\n    best_day = 0\n    best_temp = temps[0] + temps[1] + temps[2]\n    for i in range(1, n-2):\n        tmp = temps[i] + temps[i+1] + temps[i+2] - 3\n        if tmp < best_temp:\n            best_day = i+1\n            best_temp = tmp\n    print(best_day, best_temp)\n\nmain()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    temps = [int(x) for x in sys.stdin.readline().split()]\n    min_temp = min(temps[0], temps[n-1])\n    for i in range(1, n-1):\n        min_temp = min(min_temp, temps[i])\n    min_day = 1\n    for i in range(1, n-1):\n        temp = min(temps[i], temps[i-1])\n        for j in range(i+1, n-1):\n            temp = min(temp, temps[j])\n        if temp < min_temp:\n            min_temp = temp\n            min_day = i + 1\n    print(min_day, min_temp)\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    # n = int(sys.stdin.readline().strip())\n    # temp = [int(i) for i in sys.stdin.readline().strip().split()]\n    # max_temp = []\n    # for i in range(len(temp)-2):\n    #     max_temp.append(max(temp[i], temp[i+1], temp[i+2]))\n    # index = max_temp.index(min(max_temp))\n    # print(index+1, max_temp[index])\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    temps = [int(x) for x in sys.stdin.readline().split()]\n    min_temp = max(max(temps[0], temps[n-1]), max(temps[1:n-1]))\n    min_day = 1\n    for i in range(1, n-1):\n        temp = max(max(temps[i], temps[i-1]), max(temps[i+1:n-1]))\n        if temp < min_temp:\n            min_temp = temp\n            min_day = i + 1\n    print(min_day, min_temp)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    temps = [int(i) for i in input().split()]\n    best_day = 0\n    best_temp = sum(temps[0:3]) - 3\n    for i in range(1, n-2):\n        tmp = temps[i] + temps[i+1] + temps[i+2]\n        if tmp < best_temp:\n            best_day = i+1\n            best_temp = tmp\n    print(best_day, best_temp)\n\nmain()\n", "\n\ndef main():\n    days = int(input())  # number of days\n    temp = [int(i) for i in input().split()]\n    m = max(temp)\n    for i in range(days - 2):\n        t = max(temp[i:i + 3])\n        if t < m:\n            m = t\n            d = i + 1\n\n    print(d, m)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    temps = list(map(int, input().split()))\n\n    max_temp = -1\n    day = 0\n\n    for i in range(n - 2):\n        temp = max(temps[i], temps[i + 1], temps[i + 2])\n\n        if temp > max_temp:\n            max_temp = temp\n            day = i + 1\n\n    print(day, max_temp)\n\nif __name__ == \"__main__\":\n    main()\n", "\n# \nimport sys\n\nnumDays = int(sys.stdin.readline())\ntemp = sys.stdin.readline().split()\n\nminTemp = 100\nminDay = 0\nfor i in range(0,numDays-2):\n    if int(temp[i])+int(temp[i+1])+int(temp[i+2]) < minTemp:\n        minTemp = int(temp[i])+int(temp[i+1])+int(temp[i+2])\n        minDay = i+1\n\nprint(minDay, temp[minDay])\n"]