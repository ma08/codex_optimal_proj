2022-04-12 01:11:19.777017 num operations 2
2022-04-12 01:11:19.777049 size on input set 1
2022-04-12 01:11:23.954148 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n, c = map(int, input().split())\n    fruits = [int(x) for x in input().split()]\n    eaten = 0\n    for i in range(n):\n        if fruits[i] <= c:\n            c -= fruits[i]\n            eaten += 1\n    print(eaten)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n, k = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    print(sum(1 for x in a if x <= k))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649740280,
  "object": "edit"
}
2022-04-12 01:11:23.954321 fix spelling mistakes 2 ['\ndef main():\n    n, c = map(int, input().split())\n    fruits = [int(x) for x in input().split()]\n    eaten = 0\n    for i in range(n):\n        if fruits[i] <= c:\n            c -= fruits[i]\n            eaten += 1\n    print(eaten)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n, k = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    print(sum(1 for x in a if x <= k))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 01:11:23.954344 size on output set 2
2022-04-12 01:11:23.954352 size on input set 2
2022-04-12 01:11:28.534317 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n, c = map(int, input().split()) # number of fruits, capacity\n    fruits = [int(x) for x in input().split()] # list of fruits\n    eaten = 0\n    for i in range(n):\n        if fruits[i] <= c:\n            c -= fruits[i]\n            eaten += 1\n    print(eaten)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649740284,
  "object": "edit"
}
2022-04-12 01:11:28.534545 fix syntax errors 2 ['\ndef main():\n    n, c = map(int, input().split()) # number of fruits, capacity\n    fruits = [int(x) for x in input().split()] # list of fruits\n    eaten = 0\n    for i in range(n):\n        if fruits[i] <= c:\n            c -= fruits[i]\n            eaten += 1\n    print(eaten)\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    pass\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 01:11:31.525012 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(sum(1 for x in a if x < k))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n, k = map(int, input().split())\n    a = [int(x) for x in input().split()]  # list comprehension\n    print(sum(1 for x in a if x <= k))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649740288,
  "object": "edit"
}
2022-04-12 01:11:31.525120 fix syntax errors 2 ['\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    print(sum(1 for x in a if x < k))\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n, k = map(int, input().split())\n    a = [int(x) for x in input().split()]  # list comprehension\n    print(sum(1 for x in a if x <= k))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 01:11:31.525132 size on output set 4
2022-04-12 01:11:31.525142 num operations 2
2022-04-12 01:11:31.525145 size on input set 1
2022-04-12 01:11:34.457689 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, c = map(int, input().split())\n    w = list(map(int, input().split()))\n    weights = sorted(w)\n\n    i = 0\n    total = 0\n    while i < n:\n        if total + weights[i] <= c:\n            total += weights[i]\n            i += 1\n        else:\n            break\n\n    print(i)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, c = map(int, input().split())\n    w = list(map(int, input().split()))\n    fruits = sorted(w, reverse=True)\n\n    i = 0\n    total = 0\n    while i < n:\n        if total + fruits[i] <= c:\n            total += fruits[i]\n            i += 1\n        else:\n            break\n\n    print(i)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649740291,
  "object": "edit"
}
2022-04-12 01:11:34.457848 fix spelling mistakes 2 ['\n\ndef main():\n    n, c = map(int, input().split())\n    w = list(map(int, input().split()))\n    weights = sorted(w)\n\n    i = 0\n    total = 0\n    while i < n:\n        if total + weights[i] <= c:\n            total += weights[i]\n            i += 1\n        else:\n            break\n\n    print(i)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, c = map(int, input().split())\n    w = list(map(int, input().split()))\n    fruits = sorted(w, reverse=True)\n\n    i = 0\n    total = 0\n    while i < n:\n        if total + fruits[i] <= c:\n            total += fruits[i]\n            i += 1\n        else:\n            break\n\n    print(i)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 01:11:34.457874 size on output set 2
2022-04-12 01:11:34.457881 size on input set 2
2022-04-12 01:11:40.814795 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\ndef main():\n    n, c = map(int, input().split())\n    w = list(map(int, input().split()))\n    weights = sorted(w)\n\n    i = 0\n    total = 0\n    while i < n:\n        if total + weights[i] <= c:\n            total += weights[i]\n            i += 1\n\n        else:\n            break\n\n    print(i)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, c = map(int, input().split())  # n: number of items, c: capacity\n    w = list(map(int, input().split()))  # w: weights\n    weights = sorted(w)  # sort weights\n\n    i = 0  # index\n    total = 0  # total weight\n    while i < n:  # loop through all items\n        if total + weights[i] <= c:  # if total weight + current weight <= capacity\n            total += weights[i]  # add current weight to total\n            i += 1  # increment index\n        else:\n            break  # else, break\n\n    print(i)  # print number of items\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649740294,
  "object": "edit"
}
2022-04-12 01:11:40.815057 fix syntax errors 2 ['\n\n\ndef main():\n    n, c = map(int, input().split())\n    w = list(map(int, input().split()))\n    weights = sorted(w)\n\n    i = 0\n    total = 0\n    while i < n:\n        if total + weights[i] <= c:\n            total += weights[i]\n            i += 1\n\n        else:\n            break\n\n    print(i)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, c = map(int, input().split())  # n: number of items, c: capacity\n    w = list(map(int, input().split()))  # w: weights\n    weights = sorted(w)  # sort weights\n\n    i = 0  # index\n    total = 0  # total weight\n    while i < n:  # loop through all items\n        if total + weights[i] <= c:  # if total weight + current weight <= capacity\n            total += weights[i]  # add current weight to total\n            i += 1  # increment index\n        else:\n            break  # else, break\n\n    print(i)  # print number of items\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 01:11:46.294638 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a = sorted(a, reverse=True)\n    b = sorted(b, reverse=True)\n\n    i = 0\n    total = 0\n    while i < n:\n        if total + a[i] <= m:\n            total += a[i]\n            i += 1\n        else:\n            break\n\n    print(i)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n\n    ans = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if a[i] > a[j]:\n                ans += 1\n\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649740301,
  "object": "edit"
}
2022-04-12 01:11:46.295274 fix syntax errors 2 ['\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a = sorted(a, reverse=True)\n    b = sorted(b, reverse=True)\n\n    i = 0\n    total = 0\n    while i < n:\n        if total + a[i] <= m:\n            total += a[i]\n            i += 1\n        else:\n            break\n\n    print(i)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n\n    ans = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if a[i] > a[j]:\n                ans += 1\n\n    print(ans)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 01:11:46.295312 size on output set 4
2022-04-12 01:11:46.295333 num operations 2
2022-04-12 01:11:46.295341 size on input set 1
2022-04-12 01:11:48.222051 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nn, c = map(int, input().split())\nw = list(map(int, input().split()))\n\neaten = 0\ncurr = 0\nw.sort()\n\nfor x in w:\n    if curr + x <= c:\n        curr += x\n        eaten += 1\n\nprint(eaten)\n"
    },
    {
      "index": 1,
      "text": "\nn, c = map(int, input().split())\nw = list(map(int, input().split()))\n\neaten = 0\ncurr = 0\nw.sort()\n\nfor x in w:\n    if curr + x <= c:\n        curr += x\n        eaten += 1\n\nprint(eaten)\n"
    }
  ],
  "created": 1649740306,
  "object": "edit"
}
2022-04-12 01:11:48.222209 fix spelling mistakes 2 ['\nn, c = map(int, input().split())\nw = list(map(int, input().split()))\n\neaten = 0\ncurr = 0\nw.sort()\n\nfor x in w:\n    if curr + x <= c:\n        curr += x\n        eaten += 1\n\nprint(eaten)\n', '\nn, c = map(int, input().split())\nw = list(map(int, input().split()))\n\neaten = 0\ncurr = 0\nw.sort()\n\nfor x in w:\n    if curr + x <= c:\n        curr += x\n        eaten += 1\n\nprint(eaten)\n']
2022-04-12 01:11:48.222232 size on output set 1
2022-04-12 01:11:48.222236 size on input set 1
2022-04-12 01:11:52.294775 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n, c = map(int, input().split())\nw = list(map(int, input().split()))\n\neaten = 0\ncurr = 0\nw.sort()\n\nfor x in w:\n    if curr + x <= c:\n        curr += x\n        eaten += 1\n\nprint(eaten)\n"
    },
    {
      "index": 1,
      "text": "n, c = map(int, input().split())\nw = list(map(int, input().split()))\nw.sort()\n\neaten = 1\ncurr = w[0]\n\nfor x in w[1:]:\n    if curr + x <= c:\n        curr += x\n        eaten += 1\n\nprint(eaten)\n"
    }
  ],
  "created": 1649740308,
  "object": "edit"
}
2022-04-12 01:11:52.295034 fix syntax errors 2 ['n, c = map(int, input().split())\nw = list(map(int, input().split()))\n\neaten = 0\ncurr = 0\nw.sort()\n\nfor x in w:\n    if curr + x <= c:\n        curr += x\n        eaten += 1\n\nprint(eaten)\n', 'n, c = map(int, input().split())\nw = list(map(int, input().split()))\nw.sort()\n\neaten = 1\ncurr = w[0]\n\nfor x in w[1:]:\n    if curr + x <= c:\n        curr += x\n        eaten += 1\n\nprint(eaten)\n']
2022-04-12 01:11:52.295060 size on output set 2
2022-04-12 01:11:52.295073 num operations 2
2022-04-12 01:11:52.295078 size on input set 1
2022-04-12 01:11:54.338742 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#-----main-----#\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\neaten = set()\ncur_sum = 0\nfor fruit in fruits:\n    if fruit + cur_sum <= c and fruit not in eaten:\n        eaten.add(fruit)\n        cur_sum += fruit\n\nprint(len(eaten))\n"
    },
    {
      "index": 1,
      "text": "\n#-----main-----\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\neaten = set()\ncur_sum = 0\nfor fruit in fruits:\n    if fruit + cur_sum <= c and fruit not in eaten:\n        eaten.add(fruit)\n        cur_sum += fruit\n\nprint(len(eaten))\n"
    }
  ],
  "created": 1649740312,
  "object": "edit"
}
2022-04-12 01:11:54.338967 fix spelling mistakes 2 ['\n\n#-----main-----#\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\neaten = set()\ncur_sum = 0\nfor fruit in fruits:\n    if fruit + cur_sum <= c and fruit not in eaten:\n        eaten.add(fruit)\n        cur_sum += fruit\n\nprint(len(eaten))\n', '\n#-----main-----\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\neaten = set()\ncur_sum = 0\nfor fruit in fruits:\n    if fruit + cur_sum <= c and fruit not in eaten:\n        eaten.add(fruit)\n        cur_sum += fruit\n\nprint(len(eaten))\n']
2022-04-12 01:11:54.339011 size on output set 2
2022-04-12 01:11:54.339021 size on input set 2
2022-04-12 01:11:56.238149 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#-----main-----#\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\neaten = set()\ncur_sum = 0\nfor fruit in fruits:\n    if fruit + cur_sum <= c and fruit not in eaten:\n        eaten.add(fruit)\n        cur_sum += fruit\n\nprint(len(eaten))\n"
    },
    {
      "index": 1,
      "text": "\n#-----main-----#\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\neaten = set()\ncur_sum = 0\nfor fruit in fruits:\n    if fruit + cur_sum <= c and fruit not in eaten:\n        eaten.add(fruit)\n        cur_sum += fruit\n\nprint(len(eaten))\n"
    }
  ],
  "created": 1649740314,
  "object": "edit"
}
2022-04-12 01:11:56.238292 fix syntax errors 2 ['\n#-----main-----#\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\neaten = set()\ncur_sum = 0\nfor fruit in fruits:\n    if fruit + cur_sum <= c and fruit not in eaten:\n        eaten.add(fruit)\n        cur_sum += fruit\n\nprint(len(eaten))\n', '\n#-----main-----#\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\neaten = set()\ncur_sum = 0\nfor fruit in fruits:\n    if fruit + cur_sum <= c and fruit not in eaten:\n        eaten.add(fruit)\n        cur_sum += fruit\n\nprint(len(eaten))\n']
2022-04-12 01:11:58.168421 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#-----main-----\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\neaten = set()\ncur_sum = 0\nfor fruit in fruits:\n    if fruit + cur_sum <= c and fruit not in eaten:\n        eaten.add(fruit)\n        cur_sum += fruit\n\nprint(len(eaten))\n"
    },
    {
      "index": 1,
      "text": "#-----main-----\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\neaten = set()\ncur_sum = 0\nfor fruit in fruits:\n    if fruit + cur_sum <= c and fruit not in eaten:\n        eaten.add(fruit)\n        cur_sum += fruit\n\nprint(len(eaten))\n"
    }
  ],
  "created": 1649740316,
  "object": "edit"
}
2022-04-12 01:11:58.168607 fix syntax errors 2 ['#-----main-----\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\neaten = set()\ncur_sum = 0\nfor fruit in fruits:\n    if fruit + cur_sum <= c and fruit not in eaten:\n        eaten.add(fruit)\n        cur_sum += fruit\n\nprint(len(eaten))\n', '#-----main-----\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\neaten = set()\ncur_sum = 0\nfor fruit in fruits:\n    if fruit + cur_sum <= c and fruit not in eaten:\n        eaten.add(fruit)\n        cur_sum += fruit\n\nprint(len(eaten))\n']
2022-04-12 01:11:58.168737 size on output set 2
2022-04-12 01:11:58.168757 num operations 2
2022-04-12 01:11:58.168766 size on input set 1
2022-04-12 01:12:00.104903 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom sys import stdin\nfrom collections import deque\n\nn, c = map(int, stdin.readline().split())\nweights = deque(map(int, stdin.readline().split()))\n\neaten = set()\nwhile weights and c >= weights[0]:\n    c -= weights.popleft()\n    eaten.add(c)\n\nprint(len(eaten))\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\nfrom collections import deque\n#\nn, c = map(int, stdin.readline().split())\nweights = deque(map(int, stdin.readline().split()))\n\neaten = set()\nwhile weights and c >= weights[0]:\n    c -= weights.popleft()\n    eaten.add(c)\n\nprint(len(eaten))\n"
    }
  ],
  "created": 1649740318,
  "object": "edit"
}
2022-04-12 01:12:00.105003 fix spelling mistakes 2 ['\nfrom sys import stdin\nfrom collections import deque\n\nn, c = map(int, stdin.readline().split())\nweights = deque(map(int, stdin.readline().split()))\n\neaten = set()\nwhile weights and c >= weights[0]:\n    c -= weights.popleft()\n    eaten.add(c)\n\nprint(len(eaten))\n', '\n\nfrom sys import stdin\nfrom collections import deque\n#\nn, c = map(int, stdin.readline().split())\nweights = deque(map(int, stdin.readline().split()))\n\neaten = set()\nwhile weights and c >= weights[0]:\n    c -= weights.popleft()\n    eaten.add(c)\n\nprint(len(eaten))\n']
2022-04-12 01:12:00.105016 size on output set 2
2022-04-12 01:12:00.105019 size on input set 2
2022-04-12 01:12:03.265116 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from sys import stdin\nfrom collections import deque\n\nn, c = map(int, stdin.readline().split())\nweights = deque(map(int, stdin.readline().split()))\n\neaten = set()\nwhile weights and c >= weights[0]:\n    c -= weights.popleft()\n    eaten.add(c)\n\nprint(len(eaten))\n"
    },
    {
      "index": 1,
      "text": "\nfrom sys import stdin\nfrom collections import deque\n\nn, c = map(int, stdin.readline().split(' '))\nweights = deque(map(int, stdin.readline().split(' ')))\n\neaten = set()\nwhile weights and c >= weights[0]:\n    c -= weights.popleft()\n    eaten.add(c)\n\nprint(len(eaten))\n"
    }
  ],
  "created": 1649740320,
  "object": "edit"
}
2022-04-12 01:12:03.265360 fix syntax errors 2 ['from sys import stdin\nfrom collections import deque\n\nn, c = map(int, stdin.readline().split())\nweights = deque(map(int, stdin.readline().split()))\n\neaten = set()\nwhile weights and c >= weights[0]:\n    c -= weights.popleft()\n    eaten.add(c)\n\nprint(len(eaten))\n', "\nfrom sys import stdin\nfrom collections import deque\n\nn, c = map(int, stdin.readline().split(' '))\nweights = deque(map(int, stdin.readline().split(' ')))\n\neaten = set()\nwhile weights and c >= weights[0]:\n    c -= weights.popleft()\n    eaten.add(c)\n\nprint(len(eaten))\n"]
2022-04-12 01:12:05.190732 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\nfrom collections import deque\n\nn, c = map(int, stdin.readline().split())\nweights = deque(map(int, stdin.readline().split()))\n\neaten = set()\nwhile weights and c >= weights[0]:\n    c -= weights.popleft()\n    eaten.add(c)\n\nprint(len(eaten))\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\nfrom collections import deque\n\nn, c = map(int, stdin.readline().split())\nweights = deque(map(int, stdin.readline().split()))\n\neaten = set()\nwhile weights and c >= weights[0]:\n    c -= weights.popleft()\n    eaten.add(c)\n\nprint(len(eaten))\n"
    }
  ],
  "created": 1649740323,
  "object": "edit"
}
2022-04-12 01:12:05.190826 fix syntax errors 2 ['\n\nfrom sys import stdin\nfrom collections import deque\n\nn, c = map(int, stdin.readline().split())\nweights = deque(map(int, stdin.readline().split()))\n\neaten = set()\nwhile weights and c >= weights[0]:\n    c -= weights.popleft()\n    eaten.add(c)\n\nprint(len(eaten))\n', '\n\nfrom sys import stdin\nfrom collections import deque\n\nn, c = map(int, stdin.readline().split())\nweights = deque(map(int, stdin.readline().split()))\n\neaten = set()\nwhile weights and c >= weights[0]:\n    c -= weights.popleft()\n    eaten.add(c)\n\nprint(len(eaten))\n']
2022-04-12 01:12:05.190839 size on output set 3
2022-04-12 01:12:05.190844 num operations 2
2022-04-12 01:12:05.190847 size on input set 1
2022-04-12 01:12:09.918702 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#N, W = map(int, input().split())\nN, W = 5, 5\n#w = list(map(int, input().split())) #weight\nw = [3, 1, 2, 1, 1] #weight\n\ncount = 0\n\nwhile W > 0:\n    if w[count] <= W:\n        W -= w[count]\n        count += 1\n    else:\n        break\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\nN, C = map(int, input().split())\n#N, C = 5, 5\nw = list(map(int, input().split()))\n#w = [3, 1, 2, 1, 1]\n\ncount = 0\n\nwhile C > 0:\n    if w[count] <= C:\n        C -= w[count]\n        count += 1\n    else:\n        break\n\nprint(count)\n"
    }
  ],
  "created": 1649740325,
  "object": "edit"
}
2022-04-12 01:12:09.918861 fix spelling mistakes 2 ['\n\n#N, W = map(int, input().split())\nN, W = 5, 5\n#w = list(map(int, input().split())) #weight\nw = [3, 1, 2, 1, 1] #weight\n\ncount = 0\n\nwhile W > 0:\n    if w[count] <= W:\n        W -= w[count]\n        count += 1\n    else:\n        break\n\nprint(count)\n', '\n\nN, C = map(int, input().split())\n#N, C = 5, 5\nw = list(map(int, input().split()))\n#w = [3, 1, 2, 1, 1]\n\ncount = 0\n\nwhile C > 0:\n    if w[count] <= C:\n        C -= w[count]\n        count += 1\n    else:\n        break\n\nprint(count)\n']
2022-04-12 01:12:09.918874 size on output set 2
2022-04-12 01:12:09.918879 size on input set 2
2022-04-12 01:12:13.810753 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN, W = map(int, input().split())\n#N, W = 5, 5\nw = list(map(int, input().split())) #weight\n#w = [3, 1, 2, 1, 1] #weight\n\ncount = 0\n\nwhile W > 0:\n    if w[count] <= W:\n        W -= w[count]\n        count += 1\n    else:\n        break\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\nN, W = map(int, input().split())\n#N, W = 5, 5\nw = list(map(int, input().split())) #weight\n#w = [3, 1, 2, 1, 1] #weight\n\ncount = 0\n\nwhile W > 0:\n    if w[count] <= W:\n        W -= w[count]\n        count += 1\n    else:\n        break\n\nprint(count)\n"
    }
  ],
  "created": 1649740330,
  "object": "edit"
}
2022-04-12 01:12:13.810979 fix syntax errors 2 ['\n\nN, W = map(int, input().split())\n#N, W = 5, 5\nw = list(map(int, input().split())) #weight\n#w = [3, 1, 2, 1, 1] #weight\n\ncount = 0\n\nwhile W > 0:\n    if w[count] <= W:\n        W -= w[count]\n        count += 1\n    else:\n        break\n\nprint(count)\n', '\n\nN, W = map(int, input().split())\n#N, W = 5, 5\nw = list(map(int, input().split())) #weight\n#w = [3, 1, 2, 1, 1] #weight\n\ncount = 0\n\nwhile W > 0:\n    if w[count] <= W:\n        W -= w[count]\n        count += 1\n    else:\n        break\n\nprint(count)\n']
2022-04-12 01:12:16.734744 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN, C = map(int, input().split())\n#N, C = 5, 5\nw = list(map(int, input().split()))\n#w = [3, 1, 2, 1, 1]\n\ncount = 0\n\nwhile C > 0:\n    if w[count] <= C:\n        C -= w[count]\n        count += 1\n    else:\n        break\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\nN, C = map(int, input().split())\n# N, C = 5, 5\nw = list(map(int, input().split()))\n# w = [3, 1, 2, 1, 1]\n\ncount = 0\n\nwhile C > 0:\n    if w[count] <= C:\n        C -= w[count]\n        count += 1\n    else:\n        break\n\nprint(count)\n"
    }
  ],
  "created": 1649740334,
  "object": "edit"
}
2022-04-12 01:12:16.735177 fix syntax errors 2 ['\nN, C = map(int, input().split())\n#N, C = 5, 5\nw = list(map(int, input().split()))\n#w = [3, 1, 2, 1, 1]\n\ncount = 0\n\nwhile C > 0:\n    if w[count] <= C:\n        C -= w[count]\n        count += 1\n    else:\n        break\n\nprint(count)\n', '\n\nN, C = map(int, input().split())\n# N, C = 5, 5\nw = list(map(int, input().split()))\n# w = [3, 1, 2, 1, 1]\n\ncount = 0\n\nwhile C > 0:\n    if w[count] <= C:\n        C -= w[count]\n        count += 1\n    else:\n        break\n\nprint(count)\n']
2022-04-12 01:12:16.735203 size on output set 3
2022-04-12 01:12:16.735219 num operations 2
2022-04-12 01:12:16.735223 size on input set 1
2022-04-12 01:12:19.426744 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    N, C = map(int, sys.stdin.readline().split())\n    weights = sorted(map(int, sys.stdin.readline().split()))\n    eaten = 0\n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print eaten\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    N, C = map(int, sys.stdin.readline().split())\n    weights = sorted(map(int, sys.stdin.readline().split()))\n    eaten = 0\n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print eaten\n\nmain()\n"
    }
  ],
  "created": 1649740337,
  "object": "edit"
}
2022-04-12 01:12:19.427062 fix spelling mistakes 2 ['\n\nimport sys\n\ndef main():\n    N, C = map(int, sys.stdin.readline().split())\n    weights = sorted(map(int, sys.stdin.readline().split()))\n    eaten = 0\n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print eaten\n\nmain()\n', '\n\nimport sys\n\ndef main():\n    N, C = map(int, sys.stdin.readline().split())\n    weights = sorted(map(int, sys.stdin.readline().split()))\n    eaten = 0\n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print eaten\n\nmain()\n']
2022-04-12 01:12:19.427099 size on output set 1
2022-04-12 01:12:19.427108 size on input set 1
2022-04-12 01:12:22.201247 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    N, C = map(int, sys.stdin.readline().split())\n    weights = sorted(map(int, sys.stdin.readline().split()))\n    eaten = 0\n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print(eaten)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    N, C = map(int, sys.stdin.readline().split())\n    weights = sorted(map(int, sys.stdin.readline().split()), reverse=True)\n    eaten = 0\n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print eaten\n\nmain()\n"
    }
  ],
  "created": 1649740339,
  "object": "edit"
}
2022-04-12 01:12:22.201366 fix syntax errors 2 ["import sys\n\ndef main():\n    N, C = map(int, sys.stdin.readline().split())\n    weights = sorted(map(int, sys.stdin.readline().split()))\n    eaten = 0\n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print(eaten)\n\nif __name__ == '__main__':\n    main()\n", '\n\nimport sys\n\ndef main():\n    N, C = map(int, sys.stdin.readline().split())\n    weights = sorted(map(int, sys.stdin.readline().split()), reverse=True)\n    eaten = 0\n    for i in range(N):\n        if weights[i] <= C:\n            C -= weights[i]\n            eaten += 1\n    print eaten\n\nmain()\n']
2022-04-12 01:12:22.201381 size on output set 2
2022-04-12 01:12:22.201390 num operations 2
2022-04-12 01:12:22.201394 size on input set 1
2022-04-12 01:12:24.454755 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\n# create a set of unique fruits \nunique_fruits = set()\n\n# iterate over the fruits\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity\n    # add the fruit to the set\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n"
    },
    {
      "index": 1,
      "text": "\n\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\n# create a set of unique fruits.\nunique_fruits = set()\n\n# iterate over the fruits\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity\n    # add the fruit to the set\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n"
    }
  ],
  "created": 1649740342,
  "object": "edit"
}
2022-04-12 01:12:24.455055 fix spelling mistakes 2 ['\n\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\n# create a set of unique fruits \nunique_fruits = set()\n\n# iterate over the fruits\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity\n    # add the fruit to the set\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n', '\n\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\n# create a set of unique fruits.\nunique_fruits = set()\n\n# iterate over the fruits\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity\n    # add the fruit to the set\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n']
2022-04-12 01:12:24.455084 size on output set 2
2022-04-12 01:12:24.455092 size on input set 2
2022-04-12 01:12:26.398802 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\n# create a set of unique fruits.\nunique_fruits = set()\n\n# iterate over the fruits\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity\n    # add the fruit to the set\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n"
    },
    {
      "index": 1,
      "text": "\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\n# create a set of unique fruits.\nunique_fruits = set()\n\n# iterate over the fruits\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity\n    # add the fruit to the set\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n"
    }
  ],
  "created": 1649740344,
  "object": "edit"
}
2022-04-12 01:12:26.399145 fix syntax errors 2 ['\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\n# create a set of unique fruits.\nunique_fruits = set()\n\n# iterate over the fruits\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity\n    # add the fruit to the set\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n', '\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\n# create a set of unique fruits.\nunique_fruits = set()\n\n# iterate over the fruits\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity\n    # add the fruit to the set\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n']
2022-04-12 01:12:28.438787 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\n# create a set of unique fruits \nunique_fruits = set()\n\n# iterate over the fruits\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity\n    # add the fruit to the set\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n"
    },
    {
      "index": 1,
      "text": "\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\n# create a set of unique fruits \nunique_fruits = set()\n\n# iterate over the fruits\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity\n    # add the fruit to the set\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n"
    }
  ],
  "created": 1649740346,
  "object": "edit"
}
2022-04-12 01:12:28.438988 fix syntax errors 2 ['#!/usr/bin/env python3\n\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\n# create a set of unique fruits \nunique_fruits = set()\n\n# iterate over the fruits\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity\n    # add the fruit to the set\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n', '\nn, c = map(int, input().split())\nfruits = list(map(int, input().split()))\n\n# create a set of unique fruits \nunique_fruits = set()\n\n# iterate over the fruits\nfor fruit in fruits:\n    # if the fruit is not in the set and we have enough capacity\n    # add the fruit to the set\n    if fruit not in unique_fruits and c - fruit >= 0:\n        unique_fruits.add(fruit)\n        c -= fruit\n\n# print the number of unique fruits\nprint(len(unique_fruits))\n']
2022-04-12 01:12:28.439024 size on output set 3
