["\n# SOLUTION\nn, c = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\n\n# Using lift\nlift = [c + b[0]]\nfor i in range(1, n - 1):\n    lift.append(lift[i - 1] + c + b[i])\n\n# Using stairs\nstairs = [0]\nfor i in range(1, n - 1):\n    stairs.append(stairs[i - 1] + a[i - 1])\n\n# Compute minimum\nt = [0]\nfor i in range(1, n):\n    t.append(min(lift[i - 1], stairs[i - 1]))\n\nprint(*t)\n", "\n\n# SOLUTION\nn, c = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\n\n# Using elevator\nelevator = [c + b[0]]\nfor i in range(1, n - 1):\n    elevator.append(elevator[i - 1] + c + b[i])\n\n# Using stairs\nstairs = [0]\nfor i in range(1, n - 1):\n    stairs.append(stairs[i - 1] + a[i - 1])\n\n# Compute minimum\nt = [0]\nfor i in range(1, n):\n    t.append(min(elevator[i - 1], stairs[i - 1]))\n\nprint(*t)\n", "\nn, c = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nans = [0] * n\nfor i in range(1, n):\n    ans[i] = min(ans[i - 1] + a[i], ans[i - 1] + c + b[i - 1])\n\nprint(*ans)\n", "\nn, c = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nans = [0] * n\nfor i in range(1, n):\n    ans[i] = min(ans[i - 1] + a[i], ans[i - 1] + c + b[i])\n\nprint(*ans)\n", "\n\n# Solution\nn, c = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\n\n# Using lift\nlift = [c + b[0]]\nfor i in range(1, n - 1):\n    lift.append(lift[i - 1] + c + b[i])\n\n# Using stairs\nstairs = [0]\nfor i in range(1, n - 1):\n    stairs.append(stairs[i - 1] + a[i - 1])\n\n# Compute minimum\nt = [0]\nfor i in range(1, n):\n    t.append(min(lift[i - 1], stairs[i - 1]))\n\nprint(*t)\n", "\n# SOLUTION 1\nn, c = map(int, input().split())\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\n\n# Using elevator\nelevator = [c + b[0]]\nfor i in range(1, n):\n    elevator.append(elevator[i - 1] + c + b[i])\n\n# Using stairs\nstairs = [0]\nfor i in range(1, n):\n    stairs.append(stairs[i - 1] + a[i - 1])\n\n# Compute minimum\nt = [0]\nfor i in range(1, n):\n    t.append(min(elevator[i - 1], stairs[i - 1]))\n\nprint(*t)\n", "n, c = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nans = [0] * n\nfor i in range(1, n):\n    ans[i] = min(ans[i - 1] + a[i - 1], ans[i - 1] + c + b[i - 1])\n\nprint(*ans)\n"]