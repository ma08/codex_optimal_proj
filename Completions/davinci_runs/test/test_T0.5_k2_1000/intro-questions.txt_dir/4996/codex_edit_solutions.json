["\n\ndef encrypt(c, k):\n    encrypted = \"\"\n    for i in range(len(c)):\n        if i % 2 == 0:\n            encrypted += chr((ord(c[i]) - ord(k[i]) + 26) % 26 + ord('A'))\n        else:\n            encrypted += chr((ord(c[i]) - ord(k[i]) - 26) % 26 + ord('A'))\n    return encrypted\n\nprint(encrypt(input(), input()))\n", "\n\ndef encrypt(message, key):\n    encrypted = \"\"\n    for i in range(len(message)):\n        if i % 2 == 0:\n            encrypted = encrypted + chr((ord(message[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n        else:\n            encrypted = encrypted + chr((ord(message[i]) - ord(key[i]) - 26) % 26 + ord('a'))\n    return encrypted\n\nprint(encrypt(input(), input()))\n", "\n\ndef encrypt(message, key, mode):\n    encrypted = \"\"\n    for i in range(len(message)):\n        if mode == \"e\":\n            encrypted = encrypted + chr((ord(message[i]) - ord(key[i]) + 26) % 26 + ord('A'))\n        else:\n            encrypted = encrypted + chr((ord(message[i]) - ord(key[i]) - 26) % 26 + ord('A'))\n    return encrypted\n\nprint(encrypt(input(), input(), input()))\n", "\n\ndef encrypt(message, key):\n    encrypted = \"\"\n    for i in range(len(message)):\n        if i % 2 == 0:\n            encrypted = encrypted + chr((ord(message[i]) + ord(key[i % len(key)]) + 26) % 26 + ord('A'))\n        else:\n            encrypted = encrypted + chr((ord(message[i]) + ord(key[i % len(key)]) - 26) % 26 + ord('A'))\n    return encrypted\n\nprint(encrypt(input(), input()))\n", "message = input()\nkey = input()\n\ndecrypted = []\n\nfor i in range(len(message)):\n    shift = ord(key[i % len(key)]) - 65\n    if i % 2 == 0:\n        decrypted.append(chr((ord(message[i]) - shift - 65) % 26 + 65))\n    else:\n        decrypted.append(chr((ord(message[i]) + shift - 65) % 26 + 65))\n\nprint(''.join(decrypted))\n", "\n\ndef main():\n    message = input(\"Enter the message: \")\n    key = input(\"Enter the key: \")\n    decrypted = \"\"\n    for i in range(len(message)):\n        if i % 2 == 0:\n            decrypted += chr((ord(message[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n        else:\n            decrypted += chr((ord(message[i]) - ord(key[i]) - 26) % 26 + ord('a'))\n    print(\"Decrypted message: \" + decrypted)\n\nmain()\n", "def shift(c, key, i):\n    if i % 2 == 0:\n        return chr((ord(c) - ord('A') + ord(key[i]) - ord('A')) % 26 + ord('A'))\n    else:\n        return chr((ord(c) - ord('A') - ord(key[i]) + ord('A')) % 26 + ord('A'))\n\nc = input()\nk = input()\nprint(\"\".join(shift(c[i], k, i) for i in range(len(c))))\n", "\n\n# get input\nmessage = input()\nkey = input()\n\n# create the alphabet list\nalphabet = []\nfor i in range(26):\n    alphabet.append(chr(65+i))\n\n# create the encrypted message\nencrypted = \"\"\nfor i in range(len(message)):\n    if i % 2 == 0:\n        encrypted += alphabet[(alphabet.index(message[i]) - alphabet.index(key[i%len(key)]) + 26) % 26]\n    else:\n        encrypted += alphabet[(alphabet.index(message[i]) + alphabet.index(key[i%len(key)]) + 26) % 26]\n\n# print the encrypted message\nprint(encrypted)\n", "\ndef decrypt(cipher, key):\n    plaintext = \"\"\n    for i in range(len(cipher)):\n        if i % 2 == 0:\n            plaintext += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('A'))  # for even characters\n        else:\n            plaintext += chr((ord(cipher[i]) - ord(key[i]) - 26) % 26 + ord('A'))  # for odd characters\n    return plaintext\n\nprint(decrypt(input(), input()))\n", "\nimport sys\n\nmessage = sys.stdin.readline().strip()\nkey = sys.stdin.readline().strip()\n\noutput = \"\"\nfor i in range(len(message)):\n    if (i % 2 == 0):\n        output += chr((ord(message[i]) - ord(key[i]) + 26) % 26 + ord('A'))\n    else:\n        output += chr((ord(message[i]) - ord(key[i]) - 26) % 26 + ord('A'))\nprint(output)\n", "\n\ndef vigenereCipherEncrypt(plain, key, encrypt):\n    i = 0\n    encrypted = \"\"\n    for char in plain:\n        if encrypt:\n            encrypted += chr(ord(char) + (ord(key[i % len(key)]) - ord('A')))\n        else:\n            encrypted += chr(ord(char) - (ord(key[i % len(key)]) - ord('A')))\n        i += 1\n    return encrypted\n\nprint(vigenereCipherEncrypt(input(), input(), True))\n", "\nimport sys\n\nmessage = sys.stdin.readline().strip()\nkey = sys.stdin.readline().strip()\n\noutput = \"\"\nfor i in range(len(message)):\n    if (i % 2 == 0):\n        output += chr((ord(message[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n    else:\n        output += chr((ord(message[i]) - ord(key[i]) - 26) % 26 + ord('a'))\nprint(output)\n", "\n\nmessage = input()\nkey = input()\n\ndecrypted = []\n\nfor i in range(len(message)):\n    shift = ord(key[i % len(key)]) - 65\n    if i % 2 == 0:\n        decrypted.append(chr((ord(message[i]) - shift - 65) % 26 + 65))\n    else:\n        decrypted.append(chr((ord(message[i]) + shift - 65) % 26 + 65))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprint(''.join(decrypted))\n", "def shift(c, key, i): \n    if i % 2 == 0: \n        return chr((ord(c) - ord('A') + ord(key[i]) - ord('A')) % 26 + ord('A')) \n    else: \n        return chr((ord(c) - ord('A') - (ord(key[i]) - ord('A'))) % 26 + ord('A')) \nc = input() \nk = input() \nprint(\"\".join(shift(c[i], k, i) for i in range(len(c)))) \n", "\n\ndef main():\n    message = input()\n    key = input()\n    decrypted = \"\"\n    for i in range(len(message)):\n        if i % 2 == 0:\n            decrypted += chr((ord(message[i]) - ord(key[i]) + 26) % 26 + ord('A'))\n        else:\n            decrypted += chr((ord(message[i]) - ord(key[i]) - 26) % 26 + ord('A'))\n    print(decrypted)\n\nmain()\n", "\ndef shift(c, key, i):\n    if i % 2 == 0:\n        return chr((ord(c) - ord('A') + ord(key[i % len(key)]) - ord('A')) % 26 + ord('A'))  # noqa\n    else:\n        return chr((ord(c) - ord('A') - (ord(key[i % len(key)]) - ord('A'))) % 26 + ord('A'))  # noqa\n\nc = input()\nk = input()\nprint(\"\".join(shift(c[i], k, i) for i in range(len(c))))\n", "\n\ndef shift(c, key, i):\n    if i % 2 == 0:\n        return chr((ord(c) - ord('A') + (ord(key[i % len(key)]) - ord('A'))) % 26 + ord('A'))\n    else:\n        return chr((ord(c) - ord('A') - (ord(key[i % len(key)]) - ord('A'))) % 26 + ord('A'))\n\nc = input()\nk = input()\nprint(\"\".join(shift(c[i], k, i) for i in range(len(c))))\n", "\n\ndef encrypt(message, key):\n    encrypted = \"\"\n    for i in range(len(message)):\n        if i % 2 == 0:\n            encrypted = encrypted + chr((ord(message[i]) + ord(key[i]) + 26) % 26 + ord('a'))\n        else:\n            encrypted = encrypted + chr((ord(message[i]) + ord(key[i]) - 26) % 26 + ord('a'))\n    return encrypted\n\nprint(encrypt(input(), input()))\n", "\n\ndef main():\n    message = input(\"Enter message: \")\n    key = input(\"Enter key: \")\n    encrypted = \"\"\n    for i in range(len(message)):\n        if i % 2 == 0:\n            encrypted += chr((ord(message[i]) - ord(key[i]) + 26) % 26 + ord('a'))\n        else:\n            encrypted += chr((ord(message[i]) - ord(key[i]) - 26) % 26 + ord('a'))\n    print(encrypted)\n\nmain()\n", "\n\n# get input\nmessage = input()\nkey = input()\n\n# create the alphabet list\nalphabet = []\nfor i in range(26):\n    alphabet.append(chr(65+i))\n\n# create the encrypted message\nencrypted = \"\"\nfor i in range(len(message)):\n    if i % 2 == 0:\n        encrypted += alphabet[(alphabet.index(message[i]) - alphabet.index(key[i % len(key)]) + 26) % 26]\n    else:\n        encrypted += alphabet[(alphabet.index(message[i]) + alphabet.index(key[i % len(key)]) + 26) % 26]\n\n# print the decrypted message\nprint(encrypted)\n", "\n\ndef vigenereCipherEncrypt(plaintext, key):\n    key_length = len(key)\n    key_as_int = [ord(i) for i in key]\n    plaintext_int = [ord(i) for i in plaintext]\n    ciphertext = ''\n    for i in range(len(plaintext_int)):\n        value = (plaintext_int[i] + key_as_int[i % key_length]) % 26\n        ciphertext += chr(value + 65)\n    return ciphertext\n\n\ndef vigenereCipherDecrypt(ciphertext, key):\n    key_length = len(key)\n    key_as_int = [ord(i) for i in key]\n    ciphertext_int = [ord(i) for i in ciphertext]\n    plaintext = ''\n    for i in range(len(ciphertext_int)):\n        value = (ciphertext_int[i] - key_as_int[i % key_length]) % 26\n        plaintext += chr(value + 65)\n    return plaintext\n\n\ndef main():\n    print(vigenereCipherEncrypt(input(), input()))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\n# get input\nmessage = input()\nkey = input()\n\n# create the alphabet list\nalphabet = []\nfor i in range(26):\n    alphabet.append(chr(65+i))\n\n# create the encrypted message\nencrypted = \"\"\nfor i in range(len(message)):\n    if i % 2 == 0:\n        encrypted += alphabet[(alphabet.index(message[i]) - alphabet.index(key[i]) + 26) % 26]\n    else:\n        encrypted += alphabet[(alphabet.index(message[i]) + alphabet.index(key[i]) + 26) % 26] \n\n# print the decrypted message\nprint(encrypted)\n", "\ndef decrypt(cipher, key):\n    plaintext = \"\"\n    for i in range(len(cipher)):\n        if i % 2 == 0:\n            plaintext += chr((ord(cipher[i]) - ord(key[i]) + 26) % 26 + ord('A'))\n        else:\n            plaintext += chr((ord(cipher[i]) - ord(key[i]) - 26) % 26 + ord('A'))\n    return plaintext\n\nprint(decrypt(input(), input())) \n", "\n\ndef vigenereCipherEncrypt(plain, key):\n    i = 0\n    encrypted = \"\"\n    for char in plain:\n        if i % 2 == 0:\n            encrypted += chr(ord(char) + (ord(key[i]) - ord('A')))\n        else:\n            encrypted += chr(ord(char) - (ord(key[i]) - ord('A')))\n        i += 1\n    return encrypted\n\nprint(vigenereCipherEncrypt(input(), input()))\n", "\n\ndef main():\n    message = input()\n    key = input()\n    encrypted = \"\"\n    for i in range(len(message)):\n        if i % 2 == 0:\n            encrypted += chr((ord(message[i]) + ord(key[i]) - 2 * ord('A')) % 26 + ord('A'))\n        else:\n            encrypted += chr((ord(message[i]) - ord(key[i]) + 26) % 26 + ord('A'))\n    print(encrypted)\n\nmain()\n", "\n\ndef vigenereCipherDecrypt(cipher, key):\n    i = 0\n    decrypted = \"\"\n    for char in cipher:\n        if i % 2 == 0:\n            decrypted += chr(ord(char) + (ord(key[i]) - ord('A')))\n        else:\n            decrypted += chr(ord(char) - (ord(key[i]) - ord('A')))\n        i += 1\n    return decrypted\n\nprint(vigenereCipherDecrypt(input(), input()))\n", "\nmessage = input()\nkey = input()\n\ndecrypted = []\n\nfor i in range(len(message)):\n    shift = ord(key[i % len(key)]) - 65\n    if i % 2 == 0:\n        decrypted.append(chr((ord(message[i]) - shift - 65) % 26 + 65))\n    else:\n        decrypted.append(chr((ord(message[i]) + shift - 65) % 26 + 65))\n\nprint(''.join(decrypted))\n", "\n\n# get input\nmessage = input()\nkey = input()\n\n# create the alphabet list\nalphabet = []\nfor i in range(26):\n    alphabet.append(chr(65+i))\n\n# create the encrypted message\nencrypted = \"\"\nfor i in range(len(message)):\n    if i % 2 == 0:\n        encrypted += alphabet[(alphabet.index(message[i]) - alphabet.index(key[i % len(key)]) + 26) % 26]\n    else:\n        encrypted += alphabet[(alphabet.index(message[i]) + alphabet.index(key[i % len(key)]) + 26) % 26]\n\n# print the encrypted message\nprint(encrypted)\n"]