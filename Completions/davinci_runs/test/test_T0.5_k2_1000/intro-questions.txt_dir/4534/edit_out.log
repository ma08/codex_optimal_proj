2022-04-11 20:52:22.511191 num operations 2
2022-04-11 20:52:22.511259 size on input set 1
2022-04-11 20:52:28.040551 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "class Solution:\n    def getRow(self, rowIndex: int):\n        res = [1]\n        for i in range(1, rowIndex+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, rowIndex):\n        res = [0 for _ in range(rowIndex+1)]\n        res[0] = 1\n        for i in range(1, rowIndex+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n    print(s.getRow2(3))\n"
    },
    {
      "index": 1,
      "text": "\nclass Solution:\n    def getRow(self, row_index: int):\n        res = [1]\n        for i in range(1, row_index+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, row_index):\n        res = [0 for _ in range(row_index+1)]\n        res[0] = 1\n        for i in range(1, row_index+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n    print(s.getRow2(3))\n"
    }
  ],
  "created": 1649724742,
  "object": "edit"
}
2022-04-11 20:52:28.040847 fix spelling mistakes 2 ["class Solution:\n    def getRow(self, rowIndex: int):\n        res = [1]\n        for i in range(1, rowIndex+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, rowIndex):\n        res = [0 for _ in range(rowIndex+1)]\n        res[0] = 1\n        for i in range(1, rowIndex+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n    print(s.getRow2(3))\n", "\nclass Solution:\n    def getRow(self, row_index: int):\n        res = [1]\n        for i in range(1, row_index+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, row_index):\n        res = [0 for _ in range(row_index+1)]\n        res[0] = 1\n        for i in range(1, row_index+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n    print(s.getRow2(3))\n"]
2022-04-11 20:52:28.040877 size on output set 2
2022-04-11 20:52:28.040883 size on input set 2
2022-04-11 20:52:30.751577 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "class Solution:\n    def getRow(self, rowIndex: int):\n        res = [1]\n        for i in range(1, rowIndex+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, rowIndex):\n        res = [0] * (rowIndex+1)\n        res[0] = 1\n        for i in range(1, rowIndex+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n    print(s.getRow2(3))\n"
    },
    {
      "index": 1,
      "text": "class Solution:\n    def getRow(self, rowIndex: int):\n        res = [1]\n        for i in range(1, rowIndex+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, rowIndex: int):\n        res = [0 for _ in range(rowIndex+1)]\n        res[0] = 1\n        for i in range(1, rowIndex+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n    print(s.getRow2(3))\n"
    }
  ],
  "created": 1649724748,
  "object": "edit"
}
2022-04-11 20:52:30.751913 fix syntax errors 2 ["class Solution:\n    def getRow(self, rowIndex: int):\n        res = [1]\n        for i in range(1, rowIndex+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, rowIndex):\n        res = [0] * (rowIndex+1)\n        res[0] = 1\n        for i in range(1, rowIndex+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n    print(s.getRow2(3))\n", "class Solution:\n    def getRow(self, rowIndex: int):\n        res = [1]\n        for i in range(1, rowIndex+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, rowIndex: int):\n        res = [0 for _ in range(rowIndex+1)]\n        res[0] = 1\n        for i in range(1, rowIndex+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n    print(s.getRow2(3))\n"]
2022-04-11 20:52:33.675511 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "class Solution:\n    def getRow(self, row_index: int):\n        res = [1]\n        for i in range(1, row_index+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, row_index):\n        res = [0 for _ in range(row_index+1)]\n        res[0] = 1\n        for i in range(1, row_index+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n    print(s.getRow2(3))\n"
    },
    {
      "index": 1,
      "text": "class Solution:\n    def getRow(self, row_index: int):\n        res = [1]\n        for i in range(1, row_index+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, row_index: int):\n        res = [0 for _ in range(row_index+1)]\n        res[0] = 1\n        for i in range(1, row_index+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n    print(s.getRow2(3))\n"
    }
  ],
  "created": 1649724751,
  "object": "edit"
}
2022-04-11 20:52:33.675804 fix syntax errors 2 ["class Solution:\n    def getRow(self, row_index: int):\n        res = [1]\n        for i in range(1, row_index+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, row_index):\n        res = [0 for _ in range(row_index+1)]\n        res[0] = 1\n        for i in range(1, row_index+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n    print(s.getRow2(3))\n", "class Solution:\n    def getRow(self, row_index: int):\n        res = [1]\n        for i in range(1, row_index+1):\n            res = [1] + [res[j] + res[j+1] for j in range(i-1)] + [1]\n        return res\n\n    def getRow2(self, row_index: int):\n        res = [0 for _ in range(row_index+1)]\n        res[0] = 1\n        for i in range(1, row_index+1):\n            for j in range(i, 0, -1):\n                res[j] += res[j-1]\n        return res\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getRow(3))\n    print(s.getRow2(3))\n"]
2022-04-11 20:52:33.675837 size on output set 4
2022-04-11 20:52:33.675858 num operations 2
2022-04-11 20:52:33.675864 size on input set 1
2022-04-11 20:52:35.724429 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nclass Solution:\n    def getRow(self, rowIndex: int) -> List[int]:\n        if rowIndex == 0:\n            return [1]\n        if rowIndex == 1:\n            return [1, 1]\n        result = [1, 1]\n        for i in range(2, rowIndex + 1):\n            temp = [1] * (i + 1)\n            for j in range(1, i):\n                temp[j] = result[j - 1] + result[j]\n            result = temp\n        return result\n"
    },
    {
      "index": 1,
      "text": "\nclass Solution:\n    def getRow(self, rowIndex: int) -> List[int]:\n        if rowIndex == 0:\n            return [1]\n        if rowIndex == 1:\n            return [1, 1]\n        result = [1, 1]\n        for i in range(2, rowIndex + 1):\n            temp = [1] * (i + 1)\n            for j in range(1, i):\n                temp[j] = result[j - 1] + result[j]\n            result = temp\n        return result\n"
    }
  ],
  "created": 1649724753,
  "object": "edit"
}
2022-04-11 20:52:35.725029 fix spelling mistakes 2 ['\nclass Solution:\n    def getRow(self, rowIndex: int) -> List[int]:\n        if rowIndex == 0:\n            return [1]\n        if rowIndex == 1:\n            return [1, 1]\n        result = [1, 1]\n        for i in range(2, rowIndex + 1):\n            temp = [1] * (i + 1)\n            for j in range(1, i):\n                temp[j] = result[j - 1] + result[j]\n            result = temp\n        return result\n', '\nclass Solution:\n    def getRow(self, rowIndex: int) -> List[int]:\n        if rowIndex == 0:\n            return [1]\n        if rowIndex == 1:\n            return [1, 1]\n        result = [1, 1]\n        for i in range(2, rowIndex + 1):\n            temp = [1] * (i + 1)\n            for j in range(1, i):\n                temp[j] = result[j - 1] + result[j]\n            result = temp\n        return result\n']
2022-04-11 20:52:35.725078 size on output set 1
2022-04-11 20:52:35.725090 size on input set 1
2022-04-11 20:52:37.760512 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from typing import List\nclass Solution:\n    def getRow(self, rowIndex: int) -> List[int]:\n        if rowIndex == 0:\n            return [1]\n        if rowIndex == 1:\n            return [1, 1]\n        result = [1, 1]\n        for i in range(2, rowIndex + 1):\n            temp = [1] * (i + 1)\n            for j in range(1, i):\n                temp[j] = result[j - 1] + result[j]\n            result = temp\n        return result\n"
    },
    {
      "index": 1,
      "text": "class Solution:\n    def getRow(self, rowIndex: int) -> List[int]:\n        if rowIndex == 0:\n            return [1]\n        if rowIndex == 1:\n            return [1, 1]\n        result = [1, 1]\n        for i in range(2, rowIndex + 1):\n            temp = [1] * (i + 1)\n            for j in range(1, i):\n                temp[j] = result[j - 1] + result[j]\n            result = temp\n        return result\n"
    }
  ],
  "created": 1649724755,
  "object": "edit"
}
2022-04-11 20:52:37.760712 fix syntax errors 2 ['from typing import List\nclass Solution:\n    def getRow(self, rowIndex: int) -> List[int]:\n        if rowIndex == 0:\n            return [1]\n        if rowIndex == 1:\n            return [1, 1]\n        result = [1, 1]\n        for i in range(2, rowIndex + 1):\n            temp = [1] * (i + 1)\n            for j in range(1, i):\n                temp[j] = result[j - 1] + result[j]\n            result = temp\n        return result\n', 'class Solution:\n    def getRow(self, rowIndex: int) -> List[int]:\n        if rowIndex == 0:\n            return [1]\n        if rowIndex == 1:\n            return [1, 1]\n        result = [1, 1]\n        for i in range(2, rowIndex + 1):\n            temp = [1] * (i + 1)\n            for j in range(1, i):\n                temp[j] = result[j - 1] + result[j]\n            result = temp\n        return result\n']
2022-04-11 20:52:37.760744 size on output set 2
