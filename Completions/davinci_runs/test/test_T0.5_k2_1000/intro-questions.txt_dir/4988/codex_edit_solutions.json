["import sys\n\n# number of test cases\nT = int(sys.stdin.readline())\n\n# digit array\ndigits = [1]\n# last digit\nlast = 1\n\n# for each test case\nfor i in range(T):\n    # read in the number\n    N = int(sys.stdin.readline())\n    # if we need more digits\n    if N > len(digits):\n        # compute all of the digits\n        for j in range(len(digits), N):\n            last *= j+1\n            digits.append(last % 10)\n    # print out the last digit\n    print(digits[N-1])\n", "\ndef factorial(num):\n    if num == 0:\n        return 1 \n    return num * factorial(num-1)\n\nfor _ in range(int(input())): \n    print(factorial(int(input())) % 10) \n", "\n\ndef main():\n    num_cases = int(input().strip())\n    for i in range(num_cases):\n        n = int(input().strip())\n        print(last_digit_recursive(n))\n\n\ndef last_digit_recursive(n):\n    return factorial_recursive(n) % 10\n\ndef last_digit_iterative(n):\n    return factorial_iterative(n) % 10\n\ndef factorial_recursive(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial_recursive(n-1)\n\ndef factorial_iterative(n):\n    result = 1\n    for i in range(1, n+1):\n        result *= i\n    return result\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef factorial_recursive(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n\ndef factorial_iterative(n):\n    result = 1\n    for i in range(1, n + 1):\n        result *= i\n\n    return result\n\ndef last_digit_recursive(n):\n    return factorial_recursive(n) % 10\n\n\ndef last_digit_iterative(n):\n    return factorial_iterative(n) % 10\n\n\ndef main():\n    num_cases = int(input().strip())\n    for i in range(num_cases):\n        n = int(input().strip())\n        print(last_digit_recursive(n))\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    '''\n    Reads the number of test cases, then reads each test case, and prints the\n    last digit of the factorial of the test case.\n    '''\n    num_test_cases = int(input())\n    for _ in range(num_test_cases):\n        n = int(input())\n\n        print(factorial(n))\n\ndef factorial(n):\n    '''\n    Computes the last digit of n!\n    '''\n    if n < 2:\n        return 1\n    else:\n        return (n * factorial(n - 1)) % 10\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef factorial(N):\n    if N <= 1:\n        return 1\n    else:\n        return N * factorial(N-1)\n\ndef main():\n    T = int(input())\n    for i in range(T):\n        N = int(input())\n        print(str(factorial(N))[-1])\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    '''\n    Reads the number of test cases, then reads each test case, and prints the last digit of the factorial of the test case.\n    '''\n    num_test_cases = int(input(\"\"))\n    for _ in range(num_test_cases):\n        n = int(input(\"\"))\n        print(factorial(n))\n\ndef factorial(n):\n    '''\n    Computes the last digit of n!\n    '''\n    if n < 2:\n        return 1\n    else:\n        return (n * factorial(n - 1)) % 10\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    '''\n    Reads the number of test cases, then reads each test case, and prints the\n    last digit of the factorial of the test case.\n    '''\n    num_test_cases = int(input('Enter number of test cases: '))\n    for _ in range(num_test_cases):\n        n = int(input('Enter a number: '))\n        print(factorial(n))\n\ndef factorial(n):\n    '''\n    Computes the last digit of n!\n    '''\n    if n < 2:\n        return 1\n    else:\n        return (n * factorial(n - 1)) % 10\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return n*factorial(n-1)\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        print(str(factorial(n))[-1])\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\n\ndef last_digit(n):\n\n    return factorial(n) % 10\n\ndef main():\n    test_cases = int(input())\n    for i in range(test_cases):\n        n = int(input())\n        print(last_digit(n))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    '''\n    Reads the number of test cases, then reads each test case, and prints the\n    last digit of the factorial of the test case.\n    '''\n    num_test_cases = int(input())\n    for _ in range(num_test_cases):\n        n = int(input())\n        print(factorial(n))\n\ndef factorial(n):\n    '''\n    Computes the last digit of n!\n    '''\n    if n < 2:\n        return 1\n    else:\n        return (n * factorial(n - 1)) % 10\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef factorial(n):  # function for factorial\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\n\ndef last_digit(n):  # function for last digit\n\n    return factorial(n) % 10\n\ndef main():\n    test_cases = int(input())\n    for i in range(test_cases):\n        n = int(input())\n        print(last_digit(n))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef factorial(n, m=10):\n    return n * factorial(n-1, m) % m\n\ndef last_digit(n):\n    return factorial(n) % 10\n\ndef main():\n    num_cases = int(input().strip())\n    for i in range(num_cases):\n        n = int(input().strip())\n        print(last_digit(n))\n\nif __name__ == '__main__':\n    main()\n", "\ndef factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return n*factorial(n-1)\n\ndef main():\n    T = int(input())\n    for i in range(T):\n        N = int(input())\n        print(str(factorial(N))[-1], end=\"\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nfrom sys import stdin\n\nfactorials = [1, 1, 2, 6, 4, 2, 2, 4, 2, 8]  # last digit of factorials\n\n\ndef last_digit_factorial(n):\n    if n < 10:\n        return factorials[n]\n    else:\n        return (last_digit_factorial(n // 10) * factorials[n % 10]) % 10\n\ndef main():\n    num_cases = int(stdin.readline().strip())\n    for _ in range(num_cases):\n        n = int(stdin.readline().strip())\n        print(last_digit_factorial(n))\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\n\nfactorials = [1, 1, 2, 6, 4, 2, 2, 4, 2, 8]  # last digit of factorials\n\ndef last_digit_factorial(n):\n    if n < 10:\n        return factorials[n]\n    else:\n\n        return (last_digit_factorial(n // 10) * factorials[n % 10]) % 10\n\ndef main():\n    num_cases = int(stdin.readline().strip())\n    for _ in range(num_cases):\n        n = int(stdin.readline().strip())\n        print(last_digit_factorial(n))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\n#number of test cases\nT = int(sys.stdin.readline())\n\n#factorial array\nfactorials = [1]\n#last factorial\nlast = 1 #1!\n\n#for each test case\nfor i in range(T):\n\t#read in the number\n\tN = int(sys.stdin.readline())\n\t#if we need more digits\n\tif N > len(factorials):\n\t\t#compute all of the factorials\n\t\tfor j in range(len(factorials), N):\n\t\t\tlast *= j+1\n\t\t\tfactorials.append(last % 10)\n\t#print out the last digit\n\tprint(factorials[N-1])\n", "\nimport sys\n\n# number of test cases\nT = int(sys.stdin.readline())\n\n# digit array\ndigits = [1]\n# last digit\nlast = 1\n\n# for each test case\nfor i in range(T):\n\t# read in the number\n\tN = int(sys.stdin.readline())\n\t# if we need more digits\n\tif N > len(digits):\n\t\t# compute all of the digits\n\t\tfor j in range(len(digits), N):\n\t\t\tlast *= j + 1\n\t\t\tdigits.append(last % 10)\n\t# print out the last digit\n\tprint(digits[N-1])\n", "\ndef factorial(num):\n    if num == 0:\n        return 1\n    return num * factorial(num-1)\n\nfor _ in range(int(input())):\n    print(factorial(int(input())) % 10)\n", "\ndef main():\n    N = int(input())\n    for i in range(N):\n        S = input()\n        print(S)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef factorial(n):\n    return n * factorial(n-1) % 10\n\ndef last_digit(n):\n    return factorial(n) % 10\n\ndef main():\n    num_cases = int(input().strip())\n    for i in range(num_cases):\n        n = int(input().strip())\n        print(last_digit(n))\n\nif __name__ == '__main__':\n    main()\n", "\ndef factorial(n): #function for factorial\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef last_digit(n): #function for last digit\n    return factorial(n) % 10\n\ndef main():\n    test_cases = int(input())\n    for i in range(test_cases):\n        n = int(input())\n        print(last_digit(n))\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return (n * factorial(n - 1)) % 10\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        print(factorial(int(sys.stdin.readline())))\n\nmain()\n", "\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\nfor _ in range(int(input())):\n    print(factorial(int(input())) % 10)\n", "\nimport sys\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return (n * factorial(n-1))\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        print(factorial(int(sys.stdin.readline())) % 10)\n\nmain()\n", "\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef last_digit(n):\n    return factorial(n) % 10\n\ndef main():\n    test_cases = int(input())\n    for i in range(test_cases):\n        n = int(input())\n        print(last_digit(n))\n\nif __name__ == \"__main__\":\n    main()\n"]