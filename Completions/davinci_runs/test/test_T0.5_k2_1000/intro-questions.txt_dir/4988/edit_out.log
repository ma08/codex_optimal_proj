2022-04-12 04:44:06.020840 num operations 2
2022-04-12 04:44:06.020885 size on input set 1
2022-04-12 04:44:10.251006 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\nfor _ in range(int(input())):\n    print(\"hello\")\n    print(factorial(int(input())) % 10)\n"
    },
    {
      "index": 1,
      "text": "\n\ndef factorial(num):\n    if num == 0:\n        return 1 \n    return num * factorial(num-1)\n\nfor _ in range(int(input())): \n    print(factorial(int(input())) % 10) \n"
    }
  ],
  "created": 1649753046,
  "object": "edit"
}
2022-04-12 04:44:10.251321 fix spelling mistakes 2 ['\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\nfor _ in range(int(input())):\n    print("hello")\n    print(factorial(int(input())) % 10)\n', '\n\ndef factorial(num):\n    if num == 0:\n        return 1 \n    return num * factorial(num-1)\n\nfor _ in range(int(input())): \n    print(factorial(int(input())) % 10) \n']
2022-04-12 04:44:10.251381 size on output set 2
2022-04-12 04:44:10.251394 size on input set 2
2022-04-12 04:44:12.299150 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\nfor _ in range(int(input())):\n    print(factorial(int(input())) % 10)\n"
    },
    {
      "index": 1,
      "text": "\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\nfor _ in range(int(input())):\n    print(factorial(int(input())) % 10)\n"
    }
  ],
  "created": 1649753050,
  "object": "edit"
}
2022-04-12 04:44:12.299336 fix syntax errors 2 ['\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\nfor _ in range(int(input())):\n    print(factorial(int(input())) % 10)\n', '\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\nfor _ in range(int(input())):\n    print(factorial(int(input())) % 10)\n']
2022-04-12 04:44:15.413768 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef factorial(num):\n    if num == 0:\n        return 1 \n    return num * factorial(num-1)\n\nfor _ in range(int(input())): \n    print(factorial(int(input())) % 10) \n"
    },
    {
      "index": 1,
      "text": "\ndef factorial(num):\n    if num == 0:\n        return 1\n    return num * factorial(num-1)\n\nfor _ in range(int(input())):\n    print(factorial(int(input())) % 10)\n"
    }
  ],
  "created": 1649753052,
  "object": "edit"
}
2022-04-12 04:44:15.413864 fix syntax errors 2 ['\ndef factorial(num):\n    if num == 0:\n        return 1 \n    return num * factorial(num-1)\n\nfor _ in range(int(input())): \n    print(factorial(int(input())) % 10) \n', '\ndef factorial(num):\n    if num == 0:\n        return 1\n    return num * factorial(num-1)\n\nfor _ in range(int(input())):\n    print(factorial(int(input())) % 10)\n']
2022-04-12 04:44:15.413875 size on output set 3
2022-04-12 04:44:15.413886 num operations 2
2022-04-12 04:44:15.413889 size on input set 1
2022-04-12 04:44:20.916583 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef factorial(n, m):\n    return n * factorial(n-1, m) % m\n\ndef last_digit(n):\n    return factorial(n) % 10\n\ndef main():\n    num_cases = int(input().strip())\n    for i in range(num_cases):\n        n = int(input().strip())\n        print(last_digit(n))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef factorial_recursive(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial_recursive(n-1)\n\ndef factorial_iterative(n):\n    result = 1\n    for i in range(1, n+1):\n        result *= i\n    return result\n\ndef last_digit_recursive(n):\n    return factorial_recursive(n) % 10\n\ndef last_digit_iterative(n):\n    return factorial_iterative(n) % 10\n\ndef main():\n    num_cases = int(input().strip())\n    for i in range(num_cases):\n        n = int(input().strip())\n        print(last_digit_recursive(n))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649753055,
  "object": "edit"
}
2022-04-12 04:44:20.916685 fix spelling mistakes 2 ["\n\ndef factorial(n, m):\n    return n * factorial(n-1, m) % m\n\ndef last_digit(n):\n    return factorial(n) % 10\n\ndef main():\n    num_cases = int(input().strip())\n    for i in range(num_cases):\n        n = int(input().strip())\n        print(last_digit(n))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef factorial_recursive(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial_recursive(n-1)\n\ndef factorial_iterative(n):\n    result = 1\n    for i in range(1, n+1):\n        result *= i\n    return result\n\ndef last_digit_recursive(n):\n    return factorial_recursive(n) % 10\n\ndef last_digit_iterative(n):\n    return factorial_iterative(n) % 10\n\ndef main():\n    num_cases = int(input().strip())\n    for i in range(num_cases):\n        n = int(input().strip())\n        print(last_digit_recursive(n))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 04:44:20.916699 size on output set 2
2022-04-12 04:44:20.916703 size on input set 2
2022-04-12 04:44:27.850535 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef factorial_recursive(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n\ndef factorial_iterative(n):\n    result = 1\n    for i in range(1, n + 1):\n        result *= i\n\n    return result\n\ndef last_digit_recursive(n):\n    return factorial_recursive(n) % 10\n\n\ndef last_digit_iterative(n):\n    return factorial_iterative(n) % 10\n\n\ndef main():\n    num_cases = int(input().strip())\n    for i in range(num_cases):\n        n = int(input().strip())\n        print(last_digit_recursive(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    num_cases = int(input().strip())\n    for i in range(num_cases):\n        n = int(input().strip())\n        print(last_digit_recursive(n))\n\n\ndef last_digit_recursive(n):\n    return factorial_recursive(n) % 10\n\ndef last_digit_iterative(n):\n    return factorial_iterative(n) % 10\n\ndef factorial_recursive(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial_recursive(n-1)\n\ndef factorial_iterative(n):\n    result = 1\n    for i in range(1, n+1):\n        result *= i\n    return result\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649753061,
  "object": "edit"
}
2022-04-12 04:44:27.850786 fix syntax errors 2 ["\n\ndef factorial_recursive(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n\ndef factorial_iterative(n):\n    result = 1\n    for i in range(1, n + 1):\n        result *= i\n\n    return result\n\ndef last_digit_recursive(n):\n    return factorial_recursive(n) % 10\n\n\ndef last_digit_iterative(n):\n    return factorial_iterative(n) % 10\n\n\ndef main():\n    num_cases = int(input().strip())\n    for i in range(num_cases):\n        n = int(input().strip())\n        print(last_digit_recursive(n))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    num_cases = int(input().strip())\n    for i in range(num_cases):\n        n = int(input().strip())\n        print(last_digit_recursive(n))\n\n\ndef last_digit_recursive(n):\n    return factorial_recursive(n) % 10\n\ndef last_digit_iterative(n):\n    return factorial_iterative(n) % 10\n\ndef factorial_recursive(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial_recursive(n-1)\n\ndef factorial_iterative(n):\n    result = 1\n    for i in range(1, n+1):\n        result *= i\n    return result\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 04:44:30.573729 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef factorial(n, m=10):\n    return n * factorial(n-1, m) % m\n\ndef last_digit(n):\n    return factorial(n) % 10\n\ndef main():\n    num_cases = int(input().strip())\n    for i in range(num_cases):\n        n = int(input().strip())\n        print(last_digit(n))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef factorial(n):\n    return n * factorial(n-1) % 10\n\ndef last_digit(n):\n    return factorial(n) % 10\n\ndef main():\n    num_cases = int(input().strip())\n    for i in range(num_cases):\n        n = int(input().strip())\n        print(last_digit(n))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649753068,
  "object": "edit"
}
2022-04-12 04:44:30.574187 fix syntax errors 2 ["\n\ndef factorial(n, m=10):\n    return n * factorial(n-1, m) % m\n\ndef last_digit(n):\n    return factorial(n) % 10\n\ndef main():\n    num_cases = int(input().strip())\n    for i in range(num_cases):\n        n = int(input().strip())\n        print(last_digit(n))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef factorial(n):\n    return n * factorial(n-1) % 10\n\ndef last_digit(n):\n    return factorial(n) % 10\n\ndef main():\n    num_cases = int(input().strip())\n    for i in range(num_cases):\n        n = int(input().strip())\n        print(last_digit(n))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 04:44:30.574210 size on output set 4
2022-04-12 04:44:30.574225 num operations 2
2022-04-12 04:44:30.574230 size on input set 1
2022-04-12 04:44:33.534862 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    '''\n    Reads the number of test cases, then reads each test case, and prints the \n    last digit of the factorial of the test case.\n    '''\n    num_test_cases = int(input())\n    for _ in range(num_test_cases):\n        n = int(input())\n        print(factorial(n))\n\ndef factorial(n):\n    '''\n    Computes the last digit of n!\n    '''\n    if n < 2:\n        return 1\n    else:\n        return (n * factorial(n - 1)) % 10\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    '''\n    Reads the number of test cases, then reads each test case, and prints the last digit of the factorial of the test case.\n    '''\n    num_test_cases = int(input())\n    for _ in range(num_test_cases):\n        n = int(input())\n        print(factorial(n))\n\ndef factorial(n):\n    '''\n    Computes the last digit of n!\n    '''\n    if n < 2:\n        return 1\n    else:\n        return (n * factorial(n - 1)) % 10\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649753070,
  "object": "edit"
}
2022-04-12 04:44:33.535019 fix spelling mistakes 2 ['\n\ndef main():\n    \'\'\'\n    Reads the number of test cases, then reads each test case, and prints the \n    last digit of the factorial of the test case.\n    \'\'\'\n    num_test_cases = int(input())\n    for _ in range(num_test_cases):\n        n = int(input())\n        print(factorial(n))\n\ndef factorial(n):\n    \'\'\'\n    Computes the last digit of n!\n    \'\'\'\n    if n < 2:\n        return 1\n    else:\n        return (n * factorial(n - 1)) % 10\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    \'\'\'\n    Reads the number of test cases, then reads each test case, and prints the last digit of the factorial of the test case.\n    \'\'\'\n    num_test_cases = int(input())\n    for _ in range(num_test_cases):\n        n = int(input())\n        print(factorial(n))\n\ndef factorial(n):\n    \'\'\'\n    Computes the last digit of n!\n    \'\'\'\n    if n < 2:\n        return 1\n    else:\n        return (n * factorial(n - 1)) % 10\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 04:44:33.535047 size on output set 2
2022-04-12 04:44:33.535054 size on input set 2
2022-04-12 04:44:37.193248 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    '''\n    Reads the number of test cases, then reads each test case, and prints the last digit of the factorial of the test case.\n    '''\n    num_test_cases = int(input(\"\"))\n    for _ in range(num_test_cases):\n        n = int(input(\"\"))\n        print(factorial(n))\n\ndef factorial(n):\n    '''\n    Computes the last digit of n!\n    '''\n    if n < 2:\n        return 1\n    else:\n        return (n * factorial(n - 1)) % 10\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    '''\n    Reads the number of test cases, then reads each test case, and prints the\n    last digit of the factorial of the test case.\n    '''\n    num_test_cases = int(input())\n    for _ in range(num_test_cases):\n        n = int(input())\n\n        print(factorial(n))\n\ndef factorial(n):\n    '''\n    Computes the last digit of n!\n    '''\n    if n < 2:\n        return 1\n    else:\n        return (n * factorial(n - 1)) % 10\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649753073,
  "object": "edit"
}
2022-04-12 04:44:37.193346 fix syntax errors 2 ['\n\ndef main():\n    \'\'\'\n    Reads the number of test cases, then reads each test case, and prints the last digit of the factorial of the test case.\n    \'\'\'\n    num_test_cases = int(input(""))\n    for _ in range(num_test_cases):\n        n = int(input(""))\n        print(factorial(n))\n\ndef factorial(n):\n    \'\'\'\n    Computes the last digit of n!\n    \'\'\'\n    if n < 2:\n        return 1\n    else:\n        return (n * factorial(n - 1)) % 10\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    \'\'\'\n    Reads the number of test cases, then reads each test case, and prints the\n    last digit of the factorial of the test case.\n    \'\'\'\n    num_test_cases = int(input())\n    for _ in range(num_test_cases):\n        n = int(input())\n\n        print(factorial(n))\n\ndef factorial(n):\n    \'\'\'\n    Computes the last digit of n!\n    \'\'\'\n    if n < 2:\n        return 1\n    else:\n        return (n * factorial(n - 1)) % 10\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 04:44:41.337070 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    '''\n    Reads the number of test cases, then reads each test case, and prints the\n    last digit of the factorial of the test case.\n    '''\n    num_test_cases = int(input())\n    for _ in range(num_test_cases):\n        n = int(input())\n        print(factorial(n))\n\ndef factorial(n):\n    '''\n    Computes the last digit of n!\n    '''\n    if n < 2:\n        return 1\n    else:\n        return (n * factorial(n - 1)) % 10\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    '''\n    Reads the number of test cases, then reads each test case, and prints the\n    last digit of the factorial of the test case.\n    '''\n    num_test_cases = int(input('Enter number of test cases: '))\n    for _ in range(num_test_cases):\n        n = int(input('Enter a number: '))\n        print(factorial(n))\n\ndef factorial(n):\n    '''\n    Computes the last digit of n!\n    '''\n    if n < 2:\n        return 1\n    else:\n        return (n * factorial(n - 1)) % 10\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649753077,
  "object": "edit"
}
2022-04-12 04:44:41.337226 fix syntax errors 2 ['\n\ndef main():\n    \'\'\'\n    Reads the number of test cases, then reads each test case, and prints the\n    last digit of the factorial of the test case.\n    \'\'\'\n    num_test_cases = int(input())\n    for _ in range(num_test_cases):\n        n = int(input())\n        print(factorial(n))\n\ndef factorial(n):\n    \'\'\'\n    Computes the last digit of n!\n    \'\'\'\n    if n < 2:\n        return 1\n    else:\n        return (n * factorial(n - 1)) % 10\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    \'\'\'\n    Reads the number of test cases, then reads each test case, and prints the\n    last digit of the factorial of the test case.\n    \'\'\'\n    num_test_cases = int(input(\'Enter number of test cases: \'))\n    for _ in range(num_test_cases):\n        n = int(input(\'Enter a number: \'))\n        print(factorial(n))\n\ndef factorial(n):\n    \'\'\'\n    Computes the last digit of n!\n    \'\'\'\n    if n < 2:\n        return 1\n    else:\n        return (n * factorial(n - 1)) % 10\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 04:44:41.337336 size on output set 4
2022-04-12 04:44:41.337368 num operations 2
2022-04-12 04:44:41.337377 size on input set 1
2022-04-12 04:44:44.350879 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\n\nfactorials = [1, 1, 2, 6, 4, 2, 2, 4, 2, 8] # last digit of factorials\n\ndef last_digit_factorial(n):\n    if n < 10:\n        return factorials[n]\n    else:\n        return (last_digit_factorial(n // 10) * factorials[n % 10]) % 10\n\ndef main():\n    num_cases = int(stdin.readline().strip())\n    for _ in range(num_cases):\n        n = int(stdin.readline().strip())\n        print(last_digit_factorial(n))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\n\nfactorials = [1, 1, 2, 6, 4, 2, 2, 4, 2, 8] # last digit of factorials\n\ndef last_digit_factorial(n):\n    if n < 10:\n        return factorials[n]\n    else:\n        return (last_digit_factorial(n // 10) * factorials[n % 10]) % 10\n\ndef main():\n    num_cases = int(stdin.readline().strip())\n    for _ in range(num_cases):\n        n = int(stdin.readline().strip())\n        print(last_digit_factorial(n))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649753081,
  "object": "edit"
}
2022-04-12 04:44:44.351030 fix spelling mistakes 2 ["\n\nfrom sys import stdin\n\nfactorials = [1, 1, 2, 6, 4, 2, 2, 4, 2, 8] # last digit of factorials\n\ndef last_digit_factorial(n):\n    if n < 10:\n        return factorials[n]\n    else:\n        return (last_digit_factorial(n // 10) * factorials[n % 10]) % 10\n\ndef main():\n    num_cases = int(stdin.readline().strip())\n    for _ in range(num_cases):\n        n = int(stdin.readline().strip())\n        print(last_digit_factorial(n))\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\n\nfactorials = [1, 1, 2, 6, 4, 2, 2, 4, 2, 8] # last digit of factorials\n\ndef last_digit_factorial(n):\n    if n < 10:\n        return factorials[n]\n    else:\n        return (last_digit_factorial(n // 10) * factorials[n % 10]) % 10\n\ndef main():\n    num_cases = int(stdin.readline().strip())\n    for _ in range(num_cases):\n        n = int(stdin.readline().strip())\n        print(last_digit_factorial(n))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 04:44:44.351061 size on output set 1
2022-04-12 04:44:44.351069 size on input set 1
2022-04-12 04:44:48.033392 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\n\nfactorials = [1, 1, 2, 6, 4, 2, 2, 4, 2, 8]  # last digit of factorials\n\ndef last_digit_factorial(n):\n    if n < 10:\n        return factorials[n]\n    else:\n\n        return (last_digit_factorial(n // 10) * factorials[n % 10]) % 10\n\ndef main():\n    num_cases = int(stdin.readline().strip())\n    for _ in range(num_cases):\n        n = int(stdin.readline().strip())\n        print(last_digit_factorial(n))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\n\nfactorials = [1, 1, 2, 6, 4, 2, 2, 4, 2, 8]  # last digit of factorials\n\n\ndef last_digit_factorial(n):\n    if n < 10:\n        return factorials[n]\n    else:\n        return (last_digit_factorial(n // 10) * factorials[n % 10]) % 10\n\ndef main():\n    num_cases = int(stdin.readline().strip())\n    for _ in range(num_cases):\n        n = int(stdin.readline().strip())\n        print(last_digit_factorial(n))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649753084,
  "object": "edit"
}
2022-04-12 04:44:48.033491 fix syntax errors 2 ["\n\nfrom sys import stdin\n\nfactorials = [1, 1, 2, 6, 4, 2, 2, 4, 2, 8]  # last digit of factorials\n\ndef last_digit_factorial(n):\n    if n < 10:\n        return factorials[n]\n    else:\n\n        return (last_digit_factorial(n // 10) * factorials[n % 10]) % 10\n\ndef main():\n    num_cases = int(stdin.readline().strip())\n    for _ in range(num_cases):\n        n = int(stdin.readline().strip())\n        print(last_digit_factorial(n))\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\n\nfactorials = [1, 1, 2, 6, 4, 2, 2, 4, 2, 8]  # last digit of factorials\n\n\ndef last_digit_factorial(n):\n    if n < 10:\n        return factorials[n]\n    else:\n        return (last_digit_factorial(n // 10) * factorials[n % 10]) % 10\n\ndef main():\n    num_cases = int(stdin.readline().strip())\n    for _ in range(num_cases):\n        n = int(stdin.readline().strip())\n        print(last_digit_factorial(n))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-12 04:44:48.033505 size on output set 2
2022-04-12 04:44:48.033511 num operations 2
2022-04-12 04:44:48.033513 size on input set 1
2022-04-12 04:44:49.930116 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return (n * factorial(n-1)) % 10\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        print(factorial(int(sys.stdin.readline())))\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return (n * factorial(n-1)) % 10\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        print(factorial(int(sys.stdin.readline())))\n\nmain()\n"
    }
  ],
  "created": 1649753088,
  "object": "edit"
}
2022-04-12 04:44:49.930305 fix spelling mistakes 2 ['\nimport sys\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return (n * factorial(n-1)) % 10\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        print(factorial(int(sys.stdin.readline())))\n\nmain()\n', '\nimport sys\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return (n * factorial(n-1)) % 10\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        print(factorial(int(sys.stdin.readline())))\n\nmain()\n']
2022-04-12 04:44:49.930334 size on output set 1
2022-04-12 04:44:49.930345 size on input set 1
2022-04-12 04:44:52.980470 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return (n * factorial(n - 1)) % 10\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        print(factorial(int(sys.stdin.readline())))\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return (n * factorial(n-1))\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        print(factorial(int(sys.stdin.readline())) % 10)\n\nmain()\n"
    }
  ],
  "created": 1649753090,
  "object": "edit"
}
2022-04-12 04:44:52.980655 fix syntax errors 2 ['import sys\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return (n * factorial(n - 1)) % 10\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        print(factorial(int(sys.stdin.readline())))\n\nmain()\n', '\nimport sys\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return (n * factorial(n-1))\n\ndef main():\n    for i in range(int(sys.stdin.readline())):\n        print(factorial(int(sys.stdin.readline())) % 10)\n\nmain()\n']
2022-04-12 04:44:52.980775 size on output set 2
2022-04-12 04:44:52.980790 num operations 2
2022-04-12 04:44:52.980799 size on input set 1
2022-04-12 04:44:55.886927 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef factorial(N):\n    if N <= 1:\n        return 1\n    else:\n        return N*factorial(N-1)\n\ndef main():\n    T = int(input())\n    for i in range(T):\n        N = int(input())\n        print(str(factorial(N))[-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return n*factorial(n-1)\n\ndef main():\n    T = int(input())\n    for i in range(T):\n        N = int(input())\n        print(str(factorial(N))[-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649753093,
  "object": "edit"
}
2022-04-12 04:44:55.887107 fix spelling mistakes 2 ['\n\ndef factorial(N):\n    if N <= 1:\n        return 1\n    else:\n        return N*factorial(N-1)\n\ndef main():\n    T = int(input())\n    for i in range(T):\n        N = int(input())\n        print(str(factorial(N))[-1])\n\nif __name__ == "__main__":\n    main()\n', '\ndef factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return n*factorial(n-1)\n\ndef main():\n    T = int(input())\n    for i in range(T):\n        N = int(input())\n        print(str(factorial(N))[-1])\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 04:44:55.887134 size on output set 2
2022-04-12 04:44:55.887142 size on input set 2
2022-04-12 04:45:00.470846 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef factorial(N):\n    if N <= 1:\n        return 1\n    else:\n        return N * factorial(N-1)\n\ndef main():\n    T = int(input())\n    for i in range(T):\n        N = int(input())\n        print(str(factorial(N))[-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return n*factorial(n-1)\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        print(str(factorial(n))[-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649753096,
  "object": "edit"
}
2022-04-12 04:45:00.470965 fix syntax errors 2 ['\n\ndef factorial(N):\n    if N <= 1:\n        return 1\n    else:\n        return N * factorial(N-1)\n\ndef main():\n    T = int(input())\n    for i in range(T):\n        N = int(input())\n        print(str(factorial(N))[-1])\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return n*factorial(n-1)\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        print(str(factorial(n))[-1])\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 04:45:04.513437 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return n*factorial(n-1)\n\ndef main():\n    T = int(input())\n    for i in range(T):\n        N = int(input())\n        print(str(factorial(N))[-1], end=\"\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    N = int(input())\n    for i in range(N):\n        S = input()\n        print(S)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649753100,
  "object": "edit"
}
2022-04-12 04:45:04.513580 fix syntax errors 2 ['\ndef factorial(n):\n    if n <= 1:\n        return 1\n    else:\n        return n*factorial(n-1)\n\ndef main():\n    T = int(input())\n    for i in range(T):\n        N = int(input())\n        print(str(factorial(N))[-1], end="")\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    N = int(input())\n    for i in range(N):\n        S = input()\n        print(S)\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 04:45:04.513602 size on output set 4
2022-04-12 04:45:04.513613 num operations 2
2022-04-12 04:45:04.513619 size on input set 1
2022-04-12 04:45:12.702863 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\n#number of test cases\nT = int(sys.stdin.readline())\n\n#factorial array\nfactorials = [1]\n#last factorial\nlast = 1 #1!\n\n#for each test case\nfor i in range(T):\n\t#read in the number\n\tN = int(sys.stdin.readline())\n\t#if we need more digits\n\tif N > len(factorials):\n\t\t#compute all of the factorials\n\t\tfor j in range(len(factorials), N):\n\t\t\tlast *= j+1\n\t\t\tdigits.append(last % 10)\n\t#print out the last digit\n\tprint(digits[N-1])\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\n# number of test cases\nT = int(sys.stdin.readline())\n\n# digit array\ndigits = [1]\n# last digit\nlast = 1\n\n# for each test case\nfor i in range(T):\n\t# read in the number\n\tN = int(sys.stdin.readline())\n\t# if we need more digits\n\tif N > len(digits):\n\t\t# compute all of the digits\n\t\tfor j in range(len(digits), N):\n\t\t\tlast *= j+1\n\t\t\tdigits.append(last % 10)\n\t# print out the last digit\n\tprint(digits[N-1])\n"
    }
  ],
  "created": 1649753104,
  "object": "edit"
}
2022-04-12 04:45:12.703007 fix spelling mistakes 2 ['\nimport sys\n\n#number of test cases\nT = int(sys.stdin.readline())\n\n#factorial array\nfactorials = [1]\n#last factorial\nlast = 1 #1!\n\n#for each test case\nfor i in range(T):\n\t#read in the number\n\tN = int(sys.stdin.readline())\n\t#if we need more digits\n\tif N > len(factorials):\n\t\t#compute all of the factorials\n\t\tfor j in range(len(factorials), N):\n\t\t\tlast *= j+1\n\t\t\tdigits.append(last % 10)\n\t#print out the last digit\n\tprint(digits[N-1])\n', '\nimport sys\n\n# number of test cases\nT = int(sys.stdin.readline())\n\n# digit array\ndigits = [1]\n# last digit\nlast = 1\n\n# for each test case\nfor i in range(T):\n\t# read in the number\n\tN = int(sys.stdin.readline())\n\t# if we need more digits\n\tif N > len(digits):\n\t\t# compute all of the digits\n\t\tfor j in range(len(digits), N):\n\t\t\tlast *= j+1\n\t\t\tdigits.append(last % 10)\n\t# print out the last digit\n\tprint(digits[N-1])\n']
2022-04-12 04:45:12.703032 size on output set 2
2022-04-12 04:45:12.703039 size on input set 2
2022-04-12 04:45:18.239067 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\n# number of test cases\nT = int(sys.stdin.readline())\n\n# digit array\ndigits = [1]\n# last digit\nlast = 1\n\n# for each test case\nfor i in range(T):\n\t# read in the number\n\tN = int(sys.stdin.readline())\n\t# if we need more digits\n\tif N > len(digits):\n\t\t# compute all of the digits\n\t\tfor j in range(len(digits), N):\n\t\t\tlast *= j + 1\n\t\t\tdigits.append(last % 10)\n\t# print out the last digit\n\tprint(digits[N-1])\n"
    },
    {
      "index": 1,
      "text": "import sys\n\n# number of test cases\nT = int(sys.stdin.readline())\n\n# digit array\ndigits = [1]\n# last digit\nlast = 1\n\n# for each test case\nfor i in range(T):\n    # read in the number\n    N = int(sys.stdin.readline())\n    # if we need more digits\n    if N > len(digits):\n        # compute all of the digits\n        for j in range(len(digits), N):\n            last *= j+1\n            digits.append(last % 10)\n    # print out the last digit\n    print(digits[N-1])\n"
    }
  ],
  "created": 1649753112,
  "object": "edit"
}
2022-04-12 04:45:18.239270 fix syntax errors 2 ['\nimport sys\n\n# number of test cases\nT = int(sys.stdin.readline())\n\n# digit array\ndigits = [1]\n# last digit\nlast = 1\n\n# for each test case\nfor i in range(T):\n\t# read in the number\n\tN = int(sys.stdin.readline())\n\t# if we need more digits\n\tif N > len(digits):\n\t\t# compute all of the digits\n\t\tfor j in range(len(digits), N):\n\t\t\tlast *= j + 1\n\t\t\tdigits.append(last % 10)\n\t# print out the last digit\n\tprint(digits[N-1])\n', 'import sys\n\n# number of test cases\nT = int(sys.stdin.readline())\n\n# digit array\ndigits = [1]\n# last digit\nlast = 1\n\n# for each test case\nfor i in range(T):\n    # read in the number\n    N = int(sys.stdin.readline())\n    # if we need more digits\n    if N > len(digits):\n        # compute all of the digits\n        for j in range(len(digits), N):\n            last *= j+1\n            digits.append(last % 10)\n    # print out the last digit\n    print(digits[N-1])\n']
2022-04-12 04:45:21.062860 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\n#number of test cases\nT = int(sys.stdin.readline())\n\n#factorial array\nfactorials = [1]\n#last factorial\nlast = 1 #1!\n\n#for each test case\nfor i in range(T):\n\t#read in the number\n\tN = int(sys.stdin.readline())\n\t#if we need more digits\n\tif N > len(factorials):\n\t\t#compute all of the factorials\n\t\tfor j in range(len(factorials), N):\n\t\t\tlast *= j+1\n\t\t\tfactorials.append(last % 10)\n\t#print out the last digit\n\tprint(factorials[N-1])\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\n#number of test cases\nT = int(sys.stdin.readline())\n\n#factorial array\nfactorials = [1]\n#last factorial\nlast = 1 #1!\n\n#for each test case\nfor i in range(T):\n\t#read in the number\n\tN = int(sys.stdin.readline())\n\t#if we need more digits\n\tif N > len(factorials):\n\t\t#compute all of the factorials\n\t\tfor j in range(len(factorials), N):\n\t\t\tlast *= j+1\n\t\t\tfactorials.append(last % 10)\n\t#print out the last digit\n\tprint(factorials[N-1])\n"
    }
  ],
  "created": 1649753118,
  "object": "edit"
}
2022-04-12 04:45:21.063001 fix syntax errors 2 ['\nimport sys\n\n#number of test cases\nT = int(sys.stdin.readline())\n\n#factorial array\nfactorials = [1]\n#last factorial\nlast = 1 #1!\n\n#for each test case\nfor i in range(T):\n\t#read in the number\n\tN = int(sys.stdin.readline())\n\t#if we need more digits\n\tif N > len(factorials):\n\t\t#compute all of the factorials\n\t\tfor j in range(len(factorials), N):\n\t\t\tlast *= j+1\n\t\t\tfactorials.append(last % 10)\n\t#print out the last digit\n\tprint(factorials[N-1])\n', '\nimport sys\n\n#number of test cases\nT = int(sys.stdin.readline())\n\n#factorial array\nfactorials = [1]\n#last factorial\nlast = 1 #1!\n\n#for each test case\nfor i in range(T):\n\t#read in the number\n\tN = int(sys.stdin.readline())\n\t#if we need more digits\n\tif N > len(factorials):\n\t\t#compute all of the factorials\n\t\tfor j in range(len(factorials), N):\n\t\t\tlast *= j+1\n\t\t\tfactorials.append(last % 10)\n\t#print out the last digit\n\tprint(factorials[N-1])\n']
2022-04-12 04:45:21.063027 size on output set 3
2022-04-12 04:45:21.063038 num operations 2
2022-04-12 04:45:21.063044 size on input set 1
2022-04-12 04:45:24.077257 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef factorial(n): \n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef last_digit(n):\n    return factorial(n) % 10\n\ndef main():\n    test_cases = int(input())\n    for i in range(test_cases):\n        n = int(input())\n        print(last_digit(n))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef factorial(n): #function for factorial\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef last_digit(n): #function for last digit\n    return factorial(n) % 10\n\ndef main():\n    test_cases = int(input())\n    for i in range(test_cases):\n        n = int(input())\n        print(last_digit(n))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649753121,
  "object": "edit"
}
2022-04-12 04:45:24.077402 fix spelling mistakes 2 ['\n\ndef factorial(n): \n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef last_digit(n):\n    return factorial(n) % 10\n\ndef main():\n    test_cases = int(input())\n    for i in range(test_cases):\n        n = int(input())\n        print(last_digit(n))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef factorial(n): #function for factorial\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef last_digit(n): #function for last digit\n    return factorial(n) % 10\n\ndef main():\n    test_cases = int(input())\n    for i in range(test_cases):\n        n = int(input())\n        print(last_digit(n))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 04:45:24.077427 size on output set 2
2022-04-12 04:45:24.077434 size on input set 2
2022-04-12 04:45:27.250880 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\n\ndef last_digit(n):\n\n    return factorial(n) % 10\n\ndef main():\n    test_cases = int(input())\n    for i in range(test_cases):\n        n = int(input())\n        print(last_digit(n))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef last_digit(n):\n    return factorial(n) % 10\n\ndef main():\n    test_cases = int(input())\n    for i in range(test_cases):\n        n = int(input())\n        print(last_digit(n))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649753124,
  "object": "edit"
}
2022-04-12 04:45:27.250999 fix syntax errors 2 ['\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\n\ndef last_digit(n):\n\n    return factorial(n) % 10\n\ndef main():\n    test_cases = int(input())\n    for i in range(test_cases):\n        n = int(input())\n        print(last_digit(n))\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef last_digit(n):\n    return factorial(n) % 10\n\ndef main():\n    test_cases = int(input())\n    for i in range(test_cases):\n        n = int(input())\n        print(last_digit(n))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 04:45:30.562955 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef factorial(n): #function for factorial\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef last_digit(n): #function for last digit\n    return factorial(n) % 10\n\ndef main():\n    test_cases = int(input())\n    for i in range(test_cases):\n        n = int(input())\n        print(last_digit(n))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef factorial(n):  # function for factorial\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\n\ndef last_digit(n):  # function for last digit\n\n    return factorial(n) % 10\n\ndef main():\n    test_cases = int(input())\n    for i in range(test_cases):\n        n = int(input())\n        print(last_digit(n))\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649753127,
  "object": "edit"
}
2022-04-12 04:45:30.563846 fix syntax errors 2 ['\ndef factorial(n): #function for factorial\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef last_digit(n): #function for last digit\n    return factorial(n) % 10\n\ndef main():\n    test_cases = int(input())\n    for i in range(test_cases):\n        n = int(input())\n        print(last_digit(n))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef factorial(n):  # function for factorial\n    if n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)\n\n\ndef last_digit(n):  # function for last digit\n\n    return factorial(n) % 10\n\ndef main():\n    test_cases = int(input())\n    for i in range(test_cases):\n        n = int(input())\n        print(last_digit(n))\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 04:45:30.564176 size on output set 4
