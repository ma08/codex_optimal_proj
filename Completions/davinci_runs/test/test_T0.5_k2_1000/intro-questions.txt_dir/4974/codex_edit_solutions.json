["import sys\n\ndef main():\n    r, n = map(int, sys.stdin.readline().split())  # read the first line\n    booked = []\n    for _ in range(n):\n        booked.append(int(sys.stdin.readline()))  # read the following lines\n    booked.sort()\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == '__main__':\n    main()\n", "\nr, n = map(int, input().split()) # r = number of rooms, n = number of rooms already occupied\n\nfor i in range(1, r+1): # looping through all rooms\n    if i not in map(int, input().split()): # if the room is not occupied\n        print(i) # print the room number\n        break\nelse:\n    print(\"too late\")\n", "r,n = map(int, input().split())\nrooms = set(range(1,r+1))\nbooked = set(map(int, [input() for _ in range(n)]))\nrooms = rooms - booked\nif len(rooms) > 0:\n    print(min(rooms))\nelse:\n    print(\"too late\")\n", "\n\nr, n = [int(x) for x in input().split()]  # r = rooms, n = number of booked rooms\nbooked = set()\nfor _ in range(n):\n    booked.add(int(input()))  # add rooms to set\nfor i in range(1, r+1):\n    if i not in booked:\n        print(i)\n        break\nelse:\n    print(\"too late\")\n", "\nr, n = map(int, input().split())  # r = rooms, n = number of people\n\nfor i in range(1, r+1):\n    if i not in map(int, input().split()):\n        print(i)\n        break\nelse:\n    print(\"too late\")\n", "\n# Solution\n\n# Get input\nr, n = [int(x) for x in input().split()] \n\n# Create a list of rooms and fill it with 0's\nrooms = [0] * r \n\n# Get taken rooms\nfor i in range(n):\n    rooms[int(input()) - 1] = 1 \n\n# Check if there is a room available\nfor i in range(r):\n    if rooms[i] == 0: \n        print(i + 1) \n        break \nelse:\n    print(\"too late\")\n", "import sys\n\ndef main():\n    r, n = map(int, sys.stdin.readline().split())\n    booked = []\n    for _ in range(n):\n        booked.append(int(sys.stdin.readline()))\n    booked.sort()\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == '__main__':\n    main()\n", "\n# Solution\n\n# Get input\nr, n = [int(x) for x in input().split()]\n\n# Create a list of rooms and fill it with 0's\nrooms = [0] * r\n\n# Get taken rooms\nfor i in range(n):\n    rooms[int(input()) - 1] = 1\n\n# Check if there is a room available\nfor i in range(r):\n    if rooms[i] == 0:\n        print(i + 1)\n        break\nelse:\n    print(\"too late\")\n", "\n\n#%%\nr,n = map(int, input().split())\nrooms = set(range(1,r+1))\nbooked = set(map(int, [input() for _ in range(n)]))\nrooms = rooms - booked\nif len(rooms) > 0:\n    print(min(rooms))\nelse:\n    print(\"too late\")\n\n#%%\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = list(map(int, input().split()))\n\na.sort()\nb.sort()\nc.sort()\n\nans = 0\nfor i in range(n):\n    ans += b[i] * (bisect_left(c, b[i]) + bisect_right(a, b[i]))\nprint(ans)\n", "\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\nfor i in range(m):\n    b, c = map(int, input().split())\n    for j in range(b):\n        a[j] = c\n    a.sort()\n\nprint(sum(a))\n", "\n\ndef main():\n    r, n = map(int, input().split())  # r - rooms, n - booked rooms \n    booked = set()\n    for _ in range(n):\n        booked.add(int(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# Solution\n\ndef main():\n    r, n = map(int, input().split())\n    booked = set()\n    for i in range(n):\n        booked.add(input())\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == \"__main__\":\n    main()\n", "input_line = input().split()\nr = int(input_line[0])\nn = int(input_line[1])\n\nbooked = set()\nfor i in range(n):\n    booked.add(int(input()))\n\nfor i in range(1, r+1):\n    if i not in booked:\n        print(i)\n        break\nelse:\n    print(\"too late\")\n", "\n# Solution \n\ndef main():\n    n = int(input())\n    s = input()\n    l = s.split()\n    print(l)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    r, n = map(int, input().split())  # r - rooms, n - booked rooms.\n    booked = set()\n    for _ in range(n):\n        booked.add(int(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == \"__main__\":\n    main()\n", "\nr, n = [int(x) for x in input().split()] # r = rooms, n = number of booked rooms\nbooked = set()\nfor _ in range(n):\n    booked.add(int(input())) # add rooms to set\nfor i in range(1, r+1):\n    if i not in booked:\n        print(i)\n        break\nelse:\n    print(\"too late\")\n", "r, n = map(int, input().split())\n\nfor i in range(1, r + 1):\n    if i not in map(int, input().split()):\n        print(i)\n        break\nelse:\n    print(\"too late\")\n", "\n\ndef main():\n    r, n = map(int, input().split())  # r - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u043d\u0430\u0442, n - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043a\u043e\u043c\u043d\u0430\u0442.\n    booked = set()\n    for _ in range(n):\n        booked.add(int(input()))  # \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u043e\u043c\u0435\u0440\u0430 \u0437\u0430\u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043a\u043e\u043c\u043d\u0430\u0442 \u0432 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e.\n    for i in range(1, r+1):\n        if i not in booked:  # \u0435\u0441\u043b\u0438 \u043d\u043e\u043c\u0435\u0440 \u043a\u043e\u043c\u043d\u0430\u0442\u044b \u043d\u0435 \u0432\u0445\u043e\u0434\u0438\u0442 \u0432 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043a\u043e\u043c\u043d\u0430\u0442, \u0442\u043e \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u0435\u0433\u043e.\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == \"__main__\":\n    main()\n", "\nr, n = [int(x) for x in input().split()]  # number of rooms and number of booked rooms\nbooked = set()\nfor _ in range(n):\n    booked.add(int(input()))  # add booked rooms to set\nfor i in range(1, r+1):\n    if i not in booked:\n        print(i)\n        break\nelse:\n    print(\"too late\")\n", "\n\n# Solution\n\ndef main():\n    r, n = [int(i) for i in input().split()]\n    booked = set()\n    for i in range(n):\n        booked.add(int(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n#%%\nr,n = map(int, input().split())\nrooms = set(range(1,r+1))\nbooked = set(map(int, [input() for _ in range(n)]))\nrooms = rooms - booked\nif len(rooms) > 0:\n    print(min(rooms))\nelse:\n    print(\"too late\")\n\n#%%\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = list(map(int, input().split()))\n\na.sort()\nb.sort()\nc.sort()\n\nans = 0\nfor i in range(n):\n    ans += b[i] * (bisect_left(a, b[i]) + bisect_left(c, b[i]))\nprint(ans)\n", "\n\n\n#%%\nimport sys\nsys.stdin = open(\"input.txt\")\n\n\n#%%\nr,n = map(int, input().split())\nrooms = set(range(1,r+1))\nbooked = set(map(int, [input() for _ in range(n)]))\nrooms = rooms - booked\nif len(rooms) > 0:\n    print(min(rooms))\nelse:\n\n\n#%%\nimport sys\nsys.stdin = open(\"input.txt\")\n\n\n#%%\nn = int(input())\nl = list(map(int, input().split()))\nl.sort()\nprint(l[0])\n    print(\"too late\")\n", "\n\ndef main():\n    r, n = map(int, input().split())\n    booked = set()\n    for _ in range(n):\n        booked.add(int(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n# Solution \n\ndef main():\n    r, n = [int(i) for i in input().split()]\n    booked = set()\n    for i in range(n):\n        booked.add(int(input()))\n    for i in range(1, r+1):\n        if i not in booked:\n            print(i)\n            return\n    print(\"too late\")\n\nif __name__ == \"__main__\":\n    main()\n"]