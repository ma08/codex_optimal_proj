2022-04-11 23:30:36.276157 num operations 2
2022-04-11 23:30:36.276195 size on input set 1
2022-04-11 23:30:53.238785 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    line = sys.stdin.readline().strip()\n    if line == '0':\n        print('0')\n    else:\n        print(int(line) + 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    for i in range(n):\n        line = sys.stdin.readline().strip().split(' ')\n        R = int(line[0])\n        C = int(line[1])\n        crossword = list()\n        for i in range(R):\n            crossword.append(sys.stdin.readline().strip())\n        words = list()\n        for i in range(R):\n            word = ''\n            for j in range(C):\n                if crossword[i][j] != '#':\n                    word += crossword[i][j]\n                else:\n                    if len(word) >= 2:\n                        words.append(word)\n                    word = ''\n            if len(word) >= 2:\n                words.append(word)\n        for j in range(C):\n            word = ''\n            for i in range(R):\n                if crossword[i][j] != '#':\n                    word += crossword[i][j]\n                else:\n                    if len(word) >= 2:\n                        words.append(word)\n                    word = ''\n            if len(word) >= 2:\n                words.append(word)\n        words.sort()\n        print(words[0])\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649734236,
  "object": "edit"
}
2022-04-11 23:30:53.239013 fix spelling mistakes 2 ["\n\nimport sys\nimport math\n\ndef main():\n    line = sys.stdin.readline().strip()\n    if line == '0':\n        print('0')\n    else:\n        print(int(line) + 1)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    for i in range(n):\n        line = sys.stdin.readline().strip().split(' ')\n        R = int(line[0])\n        C = int(line[1])\n        crossword = list()\n        for i in range(R):\n            crossword.append(sys.stdin.readline().strip())\n        words = list()\n        for i in range(R):\n            word = ''\n            for j in range(C):\n                if crossword[i][j] != '#':\n                    word += crossword[i][j]\n                else:\n                    if len(word) >= 2:\n                        words.append(word)\n                    word = ''\n            if len(word) >= 2:\n                words.append(word)\n        for j in range(C):\n            word = ''\n            for i in range(R):\n                if crossword[i][j] != '#':\n                    word += crossword[i][j]\n                else:\n                    if len(word) >= 2:\n                        words.append(word)\n                    word = ''\n            if len(word) >= 2:\n                words.append(word)\n        words.sort()\n        print(words[0])\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 23:30:53.239056 size on output set 2
2022-04-11 23:30:53.239066 size on input set 2
2022-04-11 23:30:56.046357 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport math\n\ndef main():\n    line = sys.stdin.readline().strip()\n    if line == '0':\n        print('0')\n    else:\n        print(int(line) + 1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    line = sys.stdin.readline().strip()\n    if line == '0':\n        print('0')\n    else:\n        print(int(line) + 1) \n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649734253,
  "object": "edit"
}
2022-04-11 23:30:56.046487 fix syntax errors 2 ["\nimport sys\nimport math\n\ndef main():\n    line = sys.stdin.readline().strip()\n    if line == '0':\n        print('0')\n    else:\n        print(int(line) + 1)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\n\ndef main():\n    line = sys.stdin.readline().strip()\n    if line == '0':\n        print('0')\n    else:\n        print(int(line) + 1) \n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 23:31:02.924618 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    for i in range(n):\n        line = sys.stdin.readline().strip().split(' ')\n        R = int(line[0])\n        C = int(line[1])\n        crossword = list()\n        for i in range(R):\n            crossword.append(sys.stdin.readline().strip())\n        words = list()\n        for k in range(R):\n            word = ''\n            for j in range(C):\n                if crossword[i][j] != '#':\n                    word += crossword[i][j]\n                else:\n                    if len(word) >= 2:\n                        words.append(word)\n                    word = ''\n            if len(word) >= 2:\n                words.append(word)\n        for k in range(C):\n            word = ''\n            for i in range(R):\n                if crossword[i][j] != '#':\n                    word += crossword[i][j]\n                else:\n                    if len(word) >= 2:\n                        words.append(word)\n                    word = ''\n            if len(word) >= 2:\n                words.append(word)\n        words.sort()\n        print(words[0])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    for i in range(n):\n        line = sys.stdin.readline().strip().split(' ')\n        R = int(line[0])\n        C = int(line[1])\n        crossword = list()\n        for j in range(R):\n            crossword.append(sys.stdin.readline().strip())\n        words = list()\n        for k in range(R):\n            word = ''\n            for l in range(C):\n                if crossword[k][l] != '#':\n                    word += crossword[k][l]\n                else:\n                    if len(word) >= 2:\n                        words.append(word)\n                    word = ''\n            if len(word) >= 2:\n                words.append(word)\n        for m in range(C):\n            word = ''\n            for n in range(R):\n                if crossword[n][m] != '#':\n                    word += crossword[n][m]\n                else:\n                    if len(word) >= 2:\n                        words.append(word)\n                    word = ''\n            if len(word) >= 2:\n                words.append(word)\n        words.sort()\n        print(words[0])\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649734256,
  "object": "edit"
}
2022-04-11 23:31:02.924729 fix syntax errors 2 ["\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    for i in range(n):\n        line = sys.stdin.readline().strip().split(' ')\n        R = int(line[0])\n        C = int(line[1])\n        crossword = list()\n        for i in range(R):\n            crossword.append(sys.stdin.readline().strip())\n        words = list()\n        for k in range(R):\n            word = ''\n            for j in range(C):\n                if crossword[i][j] != '#':\n                    word += crossword[i][j]\n                else:\n                    if len(word) >= 2:\n                        words.append(word)\n                    word = ''\n            if len(word) >= 2:\n                words.append(word)\n        for k in range(C):\n            word = ''\n            for i in range(R):\n                if crossword[i][j] != '#':\n                    word += crossword[i][j]\n                else:\n                    if len(word) >= 2:\n                        words.append(word)\n                    word = ''\n            if len(word) >= 2:\n                words.append(word)\n        words.sort()\n        print(words[0])\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().strip())\n    for i in range(n):\n        line = sys.stdin.readline().strip().split(' ')\n        R = int(line[0])\n        C = int(line[1])\n        crossword = list()\n        for j in range(R):\n            crossword.append(sys.stdin.readline().strip())\n        words = list()\n        for k in range(R):\n            word = ''\n            for l in range(C):\n                if crossword[k][l] != '#':\n                    word += crossword[k][l]\n                else:\n                    if len(word) >= 2:\n                        words.append(word)\n                    word = ''\n            if len(word) >= 2:\n                words.append(word)\n        for m in range(C):\n            word = ''\n            for n in range(R):\n                if crossword[n][m] != '#':\n                    word += crossword[n][m]\n                else:\n                    if len(word) >= 2:\n                        words.append(word)\n                    word = ''\n            if len(word) >= 2:\n                words.append(word)\n        words.sort()\n        print(words[0])\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 23:31:02.924818 size on output set 4
2022-04-11 23:31:02.924828 num operations 2
2022-04-11 23:31:02.924831 size on input set 1
2022-04-11 23:31:08.390778 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nR, C = map(int, input().split())\n\ncrossword = []\nfor _ in range(R):\n    crossword.append(input())\n\nlex_max = '~'\n\nfor i in range(R):\n    for j in range(C):\n        if crossword[i][j] == '#':\n            continue\n        if j < C - 1 and crossword[i][j + 1] != '#':\n            lex_max = max(lex_max, crossword[i][j:j + 2])\n        if i < R - 1 and crossword[i + 1][j] != '#':\n            lex_max = max(lex_max, crossword[i][j] + crossword[i + 1][j])\n\nprint(lex_max)\n"
    },
    {
      "index": 1,
      "text": "\n\nR, C = map(int, input().split())\n\ncrossword = []\nfor _ in range(R):\n    crossword.append(input())\n\nlex_min = 'z'\n\nfor i in range(R):\n    for j in range(C):\n        if crossword[i][j] == '#':\n            continue\n        if j < C - 1 and crossword[i][j + 1] != '#':\n            lex_min = min(lex_min, crossword[i][j:j + 2])\n        if i < R - 1 and crossword[i + 1][j] != '#':\n            lex_min = min(lex_min, crossword[i][j] + crossword[i + 1][j])\n\nprint(lex_min)\n"
    }
  ],
  "created": 1649734263,
  "object": "edit"
}
2022-04-11 23:31:08.390961 fix spelling mistakes 2 ["\n\nR, C = map(int, input().split())\n\ncrossword = []\nfor _ in range(R):\n    crossword.append(input())\n\nlex_max = '~'\n\nfor i in range(R):\n    for j in range(C):\n        if crossword[i][j] == '#':\n            continue\n        if j < C - 1 and crossword[i][j + 1] != '#':\n            lex_max = max(lex_max, crossword[i][j:j + 2])\n        if i < R - 1 and crossword[i + 1][j] != '#':\n            lex_max = max(lex_max, crossword[i][j] + crossword[i + 1][j])\n\nprint(lex_max)\n", "\n\nR, C = map(int, input().split())\n\ncrossword = []\nfor _ in range(R):\n    crossword.append(input())\n\nlex_min = 'z'\n\nfor i in range(R):\n    for j in range(C):\n        if crossword[i][j] == '#':\n            continue\n        if j < C - 1 and crossword[i][j + 1] != '#':\n            lex_min = min(lex_min, crossword[i][j:j + 2])\n        if i < R - 1 and crossword[i + 1][j] != '#':\n            lex_min = min(lex_min, crossword[i][j] + crossword[i + 1][j])\n\nprint(lex_min)\n"]
2022-04-11 23:31:08.390986 size on output set 2
2022-04-11 23:31:08.390990 size on input set 2
2022-04-11 23:31:10.338782 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#\nR, C = map(int, input().split())\n\ncrossword = []\nfor _ in range(R):\n    crossword.append(input())\n\nlex_min = 'z'\n\nfor i in range(R):\n    for j in range(C):\n        if crossword[i][j] == '#':\n            continue\n        if j < C - 1 and crossword[i][j + 1] != '#':\n            lex_min = min(lex_min, crossword[i][j:j + 2])\n        if i < R - 1 and crossword[i + 1][j] != '#':\n            lex_min = min(lex_min, crossword[i][j] + crossword[i + 1][j])\n\nprint(lex_min)\n"
    },
    {
      "index": 1,
      "text": "\nR, C = map(int, input().split())\n\ncrossword = []\nfor _ in range(R):\n    crossword.append(input())\n\nlex_min = 'z'\n\nfor i in range(R):\n    for j in range(C):\n        if crossword[i][j] == '#':\n            continue\n        if j < C - 1 and crossword[i][j + 1] != '#':\n            lex_min = min(lex_min, crossword[i][j:j + 2])\n        if i < R - 1 and crossword[i + 1][j] != '#':\n            lex_min = min(lex_min, crossword[i][j] + crossword[i + 1][j])\n\nprint(lex_min)\n"
    }
  ],
  "created": 1649734268,
  "object": "edit"
}
2022-04-11 23:31:10.339151 fix syntax errors 2 ["\n#\nR, C = map(int, input().split())\n\ncrossword = []\nfor _ in range(R):\n    crossword.append(input())\n\nlex_min = 'z'\n\nfor i in range(R):\n    for j in range(C):\n        if crossword[i][j] == '#':\n            continue\n        if j < C - 1 and crossword[i][j + 1] != '#':\n            lex_min = min(lex_min, crossword[i][j:j + 2])\n        if i < R - 1 and crossword[i + 1][j] != '#':\n            lex_min = min(lex_min, crossword[i][j] + crossword[i + 1][j])\n\nprint(lex_min)\n", "\nR, C = map(int, input().split())\n\ncrossword = []\nfor _ in range(R):\n    crossword.append(input())\n\nlex_min = 'z'\n\nfor i in range(R):\n    for j in range(C):\n        if crossword[i][j] == '#':\n            continue\n        if j < C - 1 and crossword[i][j + 1] != '#':\n            lex_min = min(lex_min, crossword[i][j:j + 2])\n        if i < R - 1 and crossword[i + 1][j] != '#':\n            lex_min = min(lex_min, crossword[i][j] + crossword[i + 1][j])\n\nprint(lex_min)\n"]
2022-04-11 23:31:12.893009 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nR, C = map(int, input().split())\n\ncrossword = []\nfor _ in range(R):\n    crossword.append(input())\n\nlex_max = '~'\n\nfor i in range(R):\n    for j in range(C):\n        if crossword[i][j] == '#':\n            continue\n        if j < C - 1 and crossword[i][j + 1] != '#':\n            lex_max = max(lex_max, crossword[i][j:j + 2])\n        if i < R - 1 and crossword[i + 1][j] != '#':\n            lex_max = max(lex_max, crossword[i][j] + crossword[i + 1][j])\n\nprint(lex_max)\n"
    },
    {
      "index": 1,
      "text": "R, C = map(int, input().split())\n\ncrossword = []\nfor _ in range(R):\n    crossword.append(input())\nlex_max = '~'\nfor i in range(R):\n    for j in range(C):\n        if crossword[i][j] == '#':\n            continue\n        if j < C - 1 and crossword[i][j + 1] != '#':\n            lex_max = max(lex_max, crossword[i][j:j + 2])\n        if i < R - 1 and crossword[i + 1][j] != '#':\n            lex_max = max(lex_max, crossword[i][j] + crossword[i + 1][j])\nprint(lex_max)\n"
    }
  ],
  "created": 1649734270,
  "object": "edit"
}
2022-04-11 23:31:12.893302 fix syntax errors 2 ["\nR, C = map(int, input().split())\n\ncrossword = []\nfor _ in range(R):\n    crossword.append(input())\n\nlex_max = '~'\n\nfor i in range(R):\n    for j in range(C):\n        if crossword[i][j] == '#':\n            continue\n        if j < C - 1 and crossword[i][j + 1] != '#':\n            lex_max = max(lex_max, crossword[i][j:j + 2])\n        if i < R - 1 and crossword[i + 1][j] != '#':\n            lex_max = max(lex_max, crossword[i][j] + crossword[i + 1][j])\n\nprint(lex_max)\n", "R, C = map(int, input().split())\n\ncrossword = []\nfor _ in range(R):\n    crossword.append(input())\nlex_max = '~'\nfor i in range(R):\n    for j in range(C):\n        if crossword[i][j] == '#':\n            continue\n        if j < C - 1 and crossword[i][j + 1] != '#':\n            lex_max = max(lex_max, crossword[i][j:j + 2])\n        if i < R - 1 and crossword[i + 1][j] != '#':\n            lex_max = max(lex_max, crossword[i][j] + crossword[i + 1][j])\nprint(lex_max)\n"]
2022-04-11 23:31:12.893335 size on output set 4
2022-04-11 23:31:12.893356 num operations 2
2022-04-11 23:31:12.893363 size on input set 1
2022-04-11 23:31:14.868694 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nR, C = map(int, input().split())\ncrossword = []\nfor i in range(R):\n    crossword.append(list(input()))\n\ndef check_horizontal(crossword, R, C):\n    for r in range(R):\n        for c in range(C - 1):\n            if crossword[r][c].isalpha() and crossword[r][c + 1].isalpha():\n                return True\n    return False\n\ndef check_vertical(crossword, R, C):\n    for c in range(C):\n        for r in range(R - 1):\n            if crossword[r][c].isalpha() and crossword[r + 1][c].isalpha():\n                return True\n    return False\n\ndef get_horizontal(crossword, R, C):\n    for r in range(R):\n        for c in range(C - 1):\n            if crossword[r][c].isalpha() and crossword[r][c + 1].isalpha():\n                return crossword[r][c] + crossword[r][c + 1]\n\ndef get_vertical(crossword, R, C):\n    for c in range(C):\n        for r in range(R - 1):\n            if crossword[r][c].isalpha() and crossword[r + 1][c].isalpha():\n                return crossword[r][c] + crossword[r + 1][c]\n\nif check_horizontal(crossword, R, C):\n    print(get_horizontal(crossword, R, C))\nelse:\n    print(get_vertical(crossword, R, C))\n"
    },
    {
      "index": 1,
      "text": "\nR, C = map(int, input().split())\ncrossword = []\nfor i in range(R):\n    crossword.append(list(input()))\n\ndef check_horizontal(crossword, R, C):\n    for r in range(R):\n        for c in range(C - 1):\n            if crossword[r][c].isalpha() and crossword[r][c + 1].isalpha():\n                return True\n    return False\n\ndef check_vertical(crossword, R, C):\n    for c in range(C):\n        for r in range(R - 1):\n            if crossword[r][c].isalpha() and crossword[r + 1][c].isalpha():\n                return True\n    return False\n\ndef get_horizontal(crossword, R, C):\n    for r in range(R):\n        for c in range(C - 1):\n            if crossword[r][c].isalpha() and crossword[r][c + 1].isalpha():\n                return crossword[r][c] + crossword[r][c + 1]\n\ndef get_vertical(crossword, R, C):\n    for c in range(C):\n        for r in range(R - 1):\n            if crossword[r][c].isalpha() and crossword[r + 1][c].isalpha():\n                return crossword[r][c] + crossword[r + 1][c]\n\nif check_horizontal(crossword, R, C):\n    print(get_horizontal(crossword, R, C))\nelse:\n    print(get_vertical(crossword, R, C))\n"
    }
  ],
  "created": 1649734273,
  "object": "edit"
}
2022-04-11 23:31:14.868978 fix spelling mistakes 2 ['\nR, C = map(int, input().split())\ncrossword = []\nfor i in range(R):\n    crossword.append(list(input()))\n\ndef check_horizontal(crossword, R, C):\n    for r in range(R):\n        for c in range(C - 1):\n            if crossword[r][c].isalpha() and crossword[r][c + 1].isalpha():\n                return True\n    return False\n\ndef check_vertical(crossword, R, C):\n    for c in range(C):\n        for r in range(R - 1):\n            if crossword[r][c].isalpha() and crossword[r + 1][c].isalpha():\n                return True\n    return False\n\ndef get_horizontal(crossword, R, C):\n    for r in range(R):\n        for c in range(C - 1):\n            if crossword[r][c].isalpha() and crossword[r][c + 1].isalpha():\n                return crossword[r][c] + crossword[r][c + 1]\n\ndef get_vertical(crossword, R, C):\n    for c in range(C):\n        for r in range(R - 1):\n            if crossword[r][c].isalpha() and crossword[r + 1][c].isalpha():\n                return crossword[r][c] + crossword[r + 1][c]\n\nif check_horizontal(crossword, R, C):\n    print(get_horizontal(crossword, R, C))\nelse:\n    print(get_vertical(crossword, R, C))\n', '\nR, C = map(int, input().split())\ncrossword = []\nfor i in range(R):\n    crossword.append(list(input()))\n\ndef check_horizontal(crossword, R, C):\n    for r in range(R):\n        for c in range(C - 1):\n            if crossword[r][c].isalpha() and crossword[r][c + 1].isalpha():\n                return True\n    return False\n\ndef check_vertical(crossword, R, C):\n    for c in range(C):\n        for r in range(R - 1):\n            if crossword[r][c].isalpha() and crossword[r + 1][c].isalpha():\n                return True\n    return False\n\ndef get_horizontal(crossword, R, C):\n    for r in range(R):\n        for c in range(C - 1):\n            if crossword[r][c].isalpha() and crossword[r][c + 1].isalpha():\n                return crossword[r][c] + crossword[r][c + 1]\n\ndef get_vertical(crossword, R, C):\n    for c in range(C):\n        for r in range(R - 1):\n            if crossword[r][c].isalpha() and crossword[r + 1][c].isalpha():\n                return crossword[r][c] + crossword[r + 1][c]\n\nif check_horizontal(crossword, R, C):\n    print(get_horizontal(crossword, R, C))\nelse:\n    print(get_vertical(crossword, R, C))\n']
2022-04-11 23:31:14.869011 size on output set 1
2022-04-11 23:31:14.869019 size on input set 1
2022-04-11 23:31:22.738872 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Tue Nov 26 19:46:07 2019\n\n@author: abhijithneilabraham\n\"\"\"\n\n\nR, C = map(int, input().split())\ncrossword = []\nfor i in range(R):\n    crossword.append(list(input()))\n\ndef check_horizontal(crossword, R, C):\n    for r in range(R):\n        for c in range(C - 1):\n            if crossword[r][c].isalpha() and crossword[r][c + 1].isalpha():\n                return True\n    return False\n\ndef check_vertical(crossword, R, C):\n    for c in range(C):\n        for r in range(R - 1):\n            if crossword[r][c].isalpha() and crossword[r + 1][c].isalpha():\n                return True\n    return False\n\ndef get_horizontal(crossword, R, C):\n    for r in range(R):\n        for c in range(C - 1):\n            if crossword[r][c].isalpha() and crossword[r][c + 1].isalpha():\n                return crossword[r][c] + crossword[r][c + 1]\n\ndef get_vertical(crossword, R, C):\n    for c in range(C):\n        for r in range(R - 1):\n            if crossword[r][c].isalpha() and crossword[r + 1][c].isalpha():\n                return crossword[r][c] + crossword[r + 1][c]\n\nif check_horizontal(crossword, R, C):\n    print(get_horizontal(crossword, R, C))\nelse:\n    print(get_vertical(crossword, R, C))\n"
    },
    {
      "index": 1,
      "text": "R, C = map(int, input().split())\ncrossword = []\nfor i in range(R):\n    crossword.append(input())\n\ndef check_horizontal(crossword, R, C):\n    for r in range(R):\n        for c in range(C - 1):\n            if crossword[r][c].isalpha() and crossword[r][c + 1].isalpha() and crossword[r][c] != crossword[r][c + 1]:\n                return True\n    return False\n\ndef check_vertical(crossword, R, C):\n    for c in range(C):\n        for r in range(R - 1):\n            if crossword[r][c].isalpha() and crossword[r + 1][c].isalpha() and crossword[r][c] != crossword[r + 1][c]:\n                return True\n    return False\n\ndef get_horizontal(crossword, R, C):\n    for r in range(R):\n        for c in range(C - 1):\n            if crossword[r][c].isalpha() and crossword[r][c + 1].isalpha() and crossword[r][c] != crossword[r][c + 1]:\n                return crossword[r][c] + crossword[r][c + 1]\n\ndef get_vertical(crossword, R, C):\n    for c in range(C):\n        for r in range(R - 1):\n            if crossword[r][c].isalpha() and crossword[r + 1][c].isalpha() and crossword[r][c] != crossword[r + 1][c]:\n                return crossword[r][c] + crossword[r + 1][c]\n\nif check_horizontal(crossword, R, C):\n    print(get_horizontal(crossword, R, C))\nelse:\n    print(get_vertical(crossword, R, C))\n"
    }
  ],
  "created": 1649734275,
  "object": "edit"
}
2022-04-11 23:31:22.739403 fix syntax errors 2 ['\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n"""\nCreated on Tue Nov 26 19:46:07 2019\n\n@author: abhijithneilabraham\n"""\n\n\nR, C = map(int, input().split())\ncrossword = []\nfor i in range(R):\n    crossword.append(list(input()))\n\ndef check_horizontal(crossword, R, C):\n    for r in range(R):\n        for c in range(C - 1):\n            if crossword[r][c].isalpha() and crossword[r][c + 1].isalpha():\n                return True\n    return False\n\ndef check_vertical(crossword, R, C):\n    for c in range(C):\n        for r in range(R - 1):\n            if crossword[r][c].isalpha() and crossword[r + 1][c].isalpha():\n                return True\n    return False\n\ndef get_horizontal(crossword, R, C):\n    for r in range(R):\n        for c in range(C - 1):\n            if crossword[r][c].isalpha() and crossword[r][c + 1].isalpha():\n                return crossword[r][c] + crossword[r][c + 1]\n\ndef get_vertical(crossword, R, C):\n    for c in range(C):\n        for r in range(R - 1):\n            if crossword[r][c].isalpha() and crossword[r + 1][c].isalpha():\n                return crossword[r][c] + crossword[r + 1][c]\n\nif check_horizontal(crossword, R, C):\n    print(get_horizontal(crossword, R, C))\nelse:\n    print(get_vertical(crossword, R, C))\n', 'R, C = map(int, input().split())\ncrossword = []\nfor i in range(R):\n    crossword.append(input())\n\ndef check_horizontal(crossword, R, C):\n    for r in range(R):\n        for c in range(C - 1):\n            if crossword[r][c].isalpha() and crossword[r][c + 1].isalpha() and crossword[r][c] != crossword[r][c + 1]:\n                return True\n    return False\n\ndef check_vertical(crossword, R, C):\n    for c in range(C):\n        for r in range(R - 1):\n            if crossword[r][c].isalpha() and crossword[r + 1][c].isalpha() and crossword[r][c] != crossword[r + 1][c]:\n                return True\n    return False\n\ndef get_horizontal(crossword, R, C):\n    for r in range(R):\n        for c in range(C - 1):\n            if crossword[r][c].isalpha() and crossword[r][c + 1].isalpha() and crossword[r][c] != crossword[r][c + 1]:\n                return crossword[r][c] + crossword[r][c + 1]\n\ndef get_vertical(crossword, R, C):\n    for c in range(C):\n        for r in range(R - 1):\n            if crossword[r][c].isalpha() and crossword[r + 1][c].isalpha() and crossword[r][c] != crossword[r + 1][c]:\n                return crossword[r][c] + crossword[r + 1][c]\n\nif check_horizontal(crossword, R, C):\n    print(get_horizontal(crossword, R, C))\nelse:\n    print(get_vertical(crossword, R, C))\n']
2022-04-11 23:31:22.739463 size on output set 2
2022-04-11 23:31:22.739480 num operations 2
2022-04-11 23:31:22.739486 size on input set 1
2022-04-11 23:31:27.030800 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, m = [int(i) for i in input().split()]\n    puzzle = [input() for i in range(n)]\n    words = set()\n    for i in range(n):\n        word = ''\n        for j in range(m):\n            if puzzle[i][j].isalpha():\n                word += puzzle[i][j]\n            else:\n                if len(word) > 1:\n                    words.add(word)\n                word = ''\n        if len(word) > 1:\n            words.add(word)\n    for j in range(m):\n        word = ''\n        for i in range(n):\n            if puzzle[i][j].isalpha():\n                word += puzzle[i][j]\n            else:\n                if len(word) > 1:\n                    words.add(word)\n                word = ''\n        if len(word) > 1:\n            words.add(word)\n    print(min(words))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, m = [int(i) for i in input().split()]\n    puzzle = [input() for i in range(n)]\n    words = set()\n    for i in range(n):\n        word = ''\n        for j in range(m):\n            if puzzle[i][j].isalpha():\n                word += puzzle[i][j]\n            else:\n                if len(word) > 1:\n                    words.add(word)\n                word = ''\n        if len(word) > 1:\n            words.add(word)\n    for j in range(m):\n        word = ''\n        for i in range(n):\n            if puzzle[i][j].isalpha():\n                word += puzzle[i][j]\n            else:\n                if len(word) > 1:\n                    words.add(word)\n                word = ''\n        if len(word) > 1:\n            words.add(word)\n    print(min(words))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649734282,
  "object": "edit"
}
2022-04-11 23:31:27.031068 fix spelling mistakes 2 ["\n\ndef main():\n    n, m = [int(i) for i in input().split()]\n    puzzle = [input() for i in range(n)]\n    words = set()\n    for i in range(n):\n        word = ''\n        for j in range(m):\n            if puzzle[i][j].isalpha():\n                word += puzzle[i][j]\n            else:\n                if len(word) > 1:\n                    words.add(word)\n                word = ''\n        if len(word) > 1:\n            words.add(word)\n    for j in range(m):\n        word = ''\n        for i in range(n):\n            if puzzle[i][j].isalpha():\n                word += puzzle[i][j]\n            else:\n                if len(word) > 1:\n                    words.add(word)\n                word = ''\n        if len(word) > 1:\n            words.add(word)\n    print(min(words))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, m = [int(i) for i in input().split()]\n    puzzle = [input() for i in range(n)]\n    words = set()\n    for i in range(n):\n        word = ''\n        for j in range(m):\n            if puzzle[i][j].isalpha():\n                word += puzzle[i][j]\n            else:\n                if len(word) > 1:\n                    words.add(word)\n                word = ''\n        if len(word) > 1:\n            words.add(word)\n    for j in range(m):\n        word = ''\n        for i in range(n):\n            if puzzle[i][j].isalpha():\n                word += puzzle[i][j]\n            else:\n                if len(word) > 1:\n                    words.add(word)\n                word = ''\n        if len(word) > 1:\n            words.add(word)\n    print(min(words))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 23:31:27.031255 size on output set 1
2022-04-11 23:31:27.031264 size on input set 1
2022-04-11 23:31:29.354741 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, m = [int(i) for i in input().split()]\n    puzzle = [input() for _ in range(n)]\n    words = set()\n    for i in range(n):\n        word = ''\n        for j in range(m):\n            if puzzle[i][j].isalpha():\n                word += puzzle[i][j]\n            else:\n                if len(word) > 1:\n                    words.add(word)\n                word = ''\n        if len(word) > 1:\n            words.add(word)\n    for j in range(m):\n        word = ''\n        for i in range(n):\n            if puzzle[i][j].isalpha():\n                word += puzzle[i][j]\n            else:\n                if len(word) > 1:\n                    words.add(word)\n                word = ''\n        if len(word) > 1:\n            words.add(word)\n    print(min(words))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n, m = [int(i) for i in input().split()]\n    puzzle = [input() for _ in range(n)]\n    words = set()\n    for i in range(n):\n        word = ''\n        for j in range(m):\n            if puzzle[i][j].isalpha():\n                word += puzzle[i][j]\n            else:\n                if len(word) > 1:\n                    words.add(word)\n                word = ''\n        if len(word) > 1:\n            words.add(word)\n    for j in range(m):\n        word = ''\n        for i in range(n):\n            if puzzle[i][j].isalpha():\n                word += puzzle[i][j]\n            else:\n                if len(word) > 1:\n                    words.add(word)\n                word = ''\n        if len(word) > 1:\n            words.add(word)\n    print(min(words))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649734287,
  "object": "edit"
}
2022-04-11 23:31:29.354868 fix syntax errors 2 ["\n\ndef main():\n    n, m = [int(i) for i in input().split()]\n    puzzle = [input() for _ in range(n)]\n    words = set()\n    for i in range(n):\n        word = ''\n        for j in range(m):\n            if puzzle[i][j].isalpha():\n                word += puzzle[i][j]\n            else:\n                if len(word) > 1:\n                    words.add(word)\n                word = ''\n        if len(word) > 1:\n            words.add(word)\n    for j in range(m):\n        word = ''\n        for i in range(n):\n            if puzzle[i][j].isalpha():\n                word += puzzle[i][j]\n            else:\n                if len(word) > 1:\n                    words.add(word)\n                word = ''\n        if len(word) > 1:\n            words.add(word)\n    print(min(words))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, m = [int(i) for i in input().split()]\n    puzzle = [input() for _ in range(n)]\n    words = set()\n    for i in range(n):\n        word = ''\n        for j in range(m):\n            if puzzle[i][j].isalpha():\n                word += puzzle[i][j]\n            else:\n                if len(word) > 1:\n                    words.add(word)\n                word = ''\n        if len(word) > 1:\n            words.add(word)\n    for j in range(m):\n        word = ''\n        for i in range(n):\n            if puzzle[i][j].isalpha():\n                word += puzzle[i][j]\n            else:\n                if len(word) > 1:\n                    words.add(word)\n                word = ''\n        if len(word) > 1:\n            words.add(word)\n    print(min(words))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 23:31:29.354885 size on output set 1
2022-04-11 23:31:29.354891 num operations 2
2022-04-11 23:31:29.354895 size on input set 1
2022-04-11 23:31:31.558718 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    R, C = map(int, sys.stdin.readline().split())\n    grid = [sys.stdin.readline().strip() for _ in range(R)]\n    words = []\n\n    # horizontal words\n    for row in grid:\n        word = ''\n        for char in row:\n            if char == '#':\n                if len(word) > 1:\n                    words.append(word)\n                word = ''\n            else:\n                word += char\n        if len(word) > 1:\n            words.append(word)\n\n    # vertical words\n    for col in range(C):\n        word = ''\n        for row in range(R):\n            char = grid[row][col]\n            if char == '#':\n                if len(word) > 1:\n                    words.append(word)\n                word = ''\n            else:\n                word += char\n        if len(word) > 1:\n            words.append(word)\n\n    print(sorted(words)[0])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    R, C = map(int, sys.stdin.readline().split())\n    grid = [sys.stdin.readline().strip() for _ in range(R)]\n    words = []\n\n    # horizontal words.\n    for row in grid:\n        word = ''\n        for char in row:\n            if char == '#':\n                if len(word) > 1:\n                    words.append(word)\n                word = ''\n            else:\n                word += char\n        if len(word) > 1:\n            words.append(word)\n\n    # vertical words\n    for col in range(C):\n        word = ''\n        for row in range(R):\n            char = grid[row][col]\n            if char == '#':\n                if len(word) > 1:\n                    words.append(word)\n                word = ''\n            else:\n                word += char\n        if len(word) > 1:\n            words.append(word)\n\n    print(sorted(words)[0])\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649734289,
  "object": "edit"
}
2022-04-11 23:31:31.558968 fix spelling mistakes 2 ["# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    R, C = map(int, sys.stdin.readline().split())\n    grid = [sys.stdin.readline().strip() for _ in range(R)]\n    words = []\n\n    # horizontal words\n    for row in grid:\n        word = ''\n        for char in row:\n            if char == '#':\n                if len(word) > 1:\n                    words.append(word)\n                word = ''\n            else:\n                word += char\n        if len(word) > 1:\n            words.append(word)\n\n    # vertical words\n    for col in range(C):\n        word = ''\n        for row in range(R):\n            char = grid[row][col]\n            if char == '#':\n                if len(word) > 1:\n                    words.append(word)\n                word = ''\n            else:\n                word += char\n        if len(word) > 1:\n            words.append(word)\n\n    print(sorted(words)[0])\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    R, C = map(int, sys.stdin.readline().split())\n    grid = [sys.stdin.readline().strip() for _ in range(R)]\n    words = []\n\n    # horizontal words.\n    for row in grid:\n        word = ''\n        for char in row:\n            if char == '#':\n                if len(word) > 1:\n                    words.append(word)\n                word = ''\n            else:\n                word += char\n        if len(word) > 1:\n            words.append(word)\n\n    # vertical words\n    for col in range(C):\n        word = ''\n        for row in range(R):\n            char = grid[row][col]\n            if char == '#':\n                if len(word) > 1:\n                    words.append(word)\n                word = ''\n            else:\n                word += char\n        if len(word) > 1:\n            words.append(word)\n\n    print(sorted(words)[0])\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 23:31:31.559053 size on output set 2
2022-04-11 23:31:31.559058 size on input set 2
2022-04-11 23:31:35.798811 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    r, c = map(int, sys.stdin.readline().split())\n    grid = [sys.stdin.readline().strip() for _ in range(r)]\n    words = []\n\n    # horizontal words\n    for row in grid:\n        word = ''\n        for char in row:\n            if char == '#':\n                if len(word) > 1:\n                    words.append(word)\n                word = ''\n            else:\n                word += char\n        if len(word) > 1:\n            words.append(word)\n\n    # vertical words\n    for col in range(c):\n        word = ''\n        for row in range(r):\n            char = grid[row][col]\n            if char == '#':\n                if len(word) > 1:\n                    words.append(word)\n                word = ''\n            else:\n                word += char\n        if len(word) > 1:\n            words.append(word)\n\n    print(sorted(words)[0])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    R, C = map(int, sys.stdin.readline().split())\n    grid = [sys.stdin.readline().rstrip() for _ in range(R)]\n    words = []\n\n    # horizontal words\n    for row in grid:\n        word = ''\n        for char in row:\n            if char == '#':\n                if len(word) > 1:\n                    words.append(word)\n                word = ''\n            else:\n                word += char\n        if len(word) > 1:\n            words.append(word)\n\n    # vertical words\n    for col in range(C):\n        word = ''\n        for row in range(R):\n            char = grid[row][col]\n            if char == '#':\n                if len(word) > 1:\n                    words.append(word)\n                word = ''\n            else:\n                word += char\n        if len(word) > 1:\n            words.append(word)\n\n    print(sorted(words)[0])\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649734291,
  "object": "edit"
}
2022-04-11 23:31:35.799094 fix syntax errors 2 ["# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    r, c = map(int, sys.stdin.readline().split())\n    grid = [sys.stdin.readline().strip() for _ in range(r)]\n    words = []\n\n    # horizontal words\n    for row in grid:\n        word = ''\n        for char in row:\n            if char == '#':\n                if len(word) > 1:\n                    words.append(word)\n                word = ''\n            else:\n                word += char\n        if len(word) > 1:\n            words.append(word)\n\n    # vertical words\n    for col in range(c):\n        word = ''\n        for row in range(r):\n            char = grid[row][col]\n            if char == '#':\n                if len(word) > 1:\n                    words.append(word)\n                word = ''\n            else:\n                word += char\n        if len(word) > 1:\n            words.append(word)\n\n    print(sorted(words)[0])\n\nif __name__ == '__main__':\n    main()\n", "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    R, C = map(int, sys.stdin.readline().split())\n    grid = [sys.stdin.readline().rstrip() for _ in range(R)]\n    words = []\n\n    # horizontal words\n    for row in grid:\n        word = ''\n        for char in row:\n            if char == '#':\n                if len(word) > 1:\n                    words.append(word)\n                word = ''\n            else:\n                word += char\n        if len(word) > 1:\n            words.append(word)\n\n    # vertical words\n    for col in range(C):\n        word = ''\n        for row in range(R):\n            char = grid[row][col]\n            if char == '#':\n                if len(word) > 1:\n                    words.append(word)\n                word = ''\n            else:\n                word += char\n        if len(word) > 1:\n            words.append(word)\n\n    print(sorted(words)[0])\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 23:31:42.027001 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    r, c = map(int, sys.stdin.readline().split())\n    grid = [sys.stdin.readline().strip() for _ in range(r)]\n    words = set()\n\n    # horizontal words.\n    for row in grid:\n        word = ''\n        for char in row:\n            if char == '#':\n                if len(word) > 1:\n                    words.add(word)\n                word = ''\n            else:\n                word += char\n        if len(word) > 1:\n            words.add(word)\n\n    # vertical words\n    for col in range(c):\n        word = ''\n        for row in range(r):\n            char = grid[row][col]\n            if char == '#':\n                if len(word) > 1:\n                    words.add(word)\n                word = ''\n            else:\n                word += char\n        if len(word) > 1:\n            words.add(word)\n\n    print(sorted(words)[0])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nif __name__ == '__main__':\n    R, C = map(int, sys.stdin.readline().split())\n    grid = [sys.stdin.readline().strip() for _ in range(R)]\n    words = []\n\n    # horizontal words.\n    for row in grid:\n        word = ''\n        for char in row:\n            if char == '#':\n                if len(word) > 1:\n                    words.append(word)\n                word = ''\n            else:\n                word += char\n        if len(word) > 1:\n            words.append(word)\n\n    # vertical words\n    for col in range(C):\n        word = ''\n        for row in range(R):\n            char = grid[row][col]\n            if char == '#':\n                if len(word) > 1:\n                    words.append(word)\n                word = ''\n            else:\n                word += char\n        if len(word) > 1:\n            words.append(word)\n\n    print(sorted(words)[0])\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649734296,
  "object": "edit"
}
2022-04-11 23:31:42.027477 fix syntax errors 2 ["\nimport sys\n\ndef main():\n    r, c = map(int, sys.stdin.readline().split())\n    grid = [sys.stdin.readline().strip() for _ in range(r)]\n    words = set()\n\n    # horizontal words.\n    for row in grid:\n        word = ''\n        for char in row:\n            if char == '#':\n                if len(word) > 1:\n                    words.add(word)\n                word = ''\n            else:\n                word += char\n        if len(word) > 1:\n            words.add(word)\n\n    # vertical words\n    for col in range(c):\n        word = ''\n        for row in range(r):\n            char = grid[row][col]\n            if char == '#':\n                if len(word) > 1:\n                    words.add(word)\n                word = ''\n            else:\n                word += char\n        if len(word) > 1:\n            words.add(word)\n\n    print(sorted(words)[0])\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\nif __name__ == '__main__':\n    R, C = map(int, sys.stdin.readline().split())\n    grid = [sys.stdin.readline().strip() for _ in range(R)]\n    words = []\n\n    # horizontal words.\n    for row in grid:\n        word = ''\n        for char in row:\n            if char == '#':\n                if len(word) > 1:\n                    words.append(word)\n                word = ''\n            else:\n                word += char\n        if len(word) > 1:\n            words.append(word)\n\n    # vertical words\n    for col in range(C):\n        word = ''\n        for row in range(R):\n            char = grid[row][col]\n            if char == '#':\n                if len(word) > 1:\n                    words.append(word)\n                word = ''\n            else:\n                word += char\n        if len(word) > 1:\n            words.append(word)\n\n    print(sorted(words)[0])\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 23:31:42.027507 size on output set 4
2022-04-11 23:31:42.027521 num operations 2
2022-04-11 23:31:42.027526 size on input set 1
2022-04-11 23:31:44.287138 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    row, col = map(int, input().split())\n    matrix = []\n    for i in range(row):\n        matrix.append(input())\n    # print(matrix)\n    words = []\n    for i in range(row):\n        for j in range(col):\n            if matrix[i][j] != '#':\n                if j < col-1 and matrix[i][j+1] != '#':\n                    word = matrix[i][j]\n                    k = j+1\n                    while k < col and matrix[i][k] != '#':\n                        word += matrix[i][k]\n                        k += 1\n                    words.append(word)\n                if i < row-1 and matrix[i+1][j] != '#':\n                    word = matrix[i][j]\n                    k = i+1\n                    while k < row and matrix[k][j] != '#':\n                        word += matrix[k][j]\n                        k += 1\n                    words.append(word)\n    print(min(words))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    row, col = map(int, input().split())\n    matrix = []\n    for i in range(row):\n        matrix.append(input())\n    # print(matrix)\n    words = []\n    for i in range(row):\n        for j in range(col):\n            if matrix[i][j] != '#':\n                if j < col-1 and matrix[i][j+1] != '#':\n                    word = matrix[i][j]\n                    k = j+1\n                    while k < col and matrix[i][k] != '#':\n                        word += matrix[i][k]\n                        k += 1\n                    words.append(word)\n                if i < row-1 and matrix[i+1][j] != '#':\n                    word = matrix[i][j]\n                    k = i+1\n                    while k < row and matrix[k][j] != '#':\n                        word += matrix[k][j]\n                        k += 1\n                    words.append(word)\n    print(min(words))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649734302,
  "object": "edit"
}
2022-04-11 23:31:44.287331 fix spelling mistakes 2 ['\n\ndef main():\n    """\n    Main function\n    """\n    row, col = map(int, input().split())\n    matrix = []\n    for i in range(row):\n        matrix.append(input())\n    # print(matrix)\n    words = []\n    for i in range(row):\n        for j in range(col):\n            if matrix[i][j] != \'#\':\n                if j < col-1 and matrix[i][j+1] != \'#\':\n                    word = matrix[i][j]\n                    k = j+1\n                    while k < col and matrix[i][k] != \'#\':\n                        word += matrix[i][k]\n                        k += 1\n                    words.append(word)\n                if i < row-1 and matrix[i+1][j] != \'#\':\n                    word = matrix[i][j]\n                    k = i+1\n                    while k < row and matrix[k][j] != \'#\':\n                        word += matrix[k][j]\n                        k += 1\n                    words.append(word)\n    print(min(words))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    Main function\n    """\n    row, col = map(int, input().split())\n    matrix = []\n    for i in range(row):\n        matrix.append(input())\n    # print(matrix)\n    words = []\n    for i in range(row):\n        for j in range(col):\n            if matrix[i][j] != \'#\':\n                if j < col-1 and matrix[i][j+1] != \'#\':\n                    word = matrix[i][j]\n                    k = j+1\n                    while k < col and matrix[i][k] != \'#\':\n                        word += matrix[i][k]\n                        k += 1\n                    words.append(word)\n                if i < row-1 and matrix[i+1][j] != \'#\':\n                    word = matrix[i][j]\n                    k = i+1\n                    while k < row and matrix[k][j] != \'#\':\n                        word += matrix[k][j]\n                        k += 1\n                    words.append(word)\n    print(min(words))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 23:31:44.287455 size on output set 1
2022-04-11 23:31:44.287466 size on input set 1
2022-04-11 23:31:46.674734 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    row, col = map(int, input().split())\n    matrix = []\n    for i in range(row):\n        matrix.append(input())\n    words = []\n    for i in range(row):\n        for j in range(col):\n            if matrix[i][j] != '#':\n                if j < col-1 and matrix[i][j+1] != '#':\n                    word = matrix[i][j]\n                    k = j+1\n                    while k < col and matrix[i][k] != '#':\n                        word += matrix[i][k]\n                        k += 1\n                    words.append(word)\n                if i < row-1 and matrix[i+1][j] != '#':\n                    word = matrix[i][j]\n                    k = i+1\n                    while k < row and matrix[k][j] != '#':\n                        word += matrix[k][j]\n                        k += 1\n                    words.append(word)\n    print(min(words))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    row, col = map(int, input().split())\n    matrix = []\n    for i in range(row):\n        matrix.append(input())\n    words = []\n    for i in range(row):\n        for j in range(col):\n            if matrix[i][j] != '#':\n                if j < col-1 and matrix[i][j+1] != '#':\n                    word = matrix[i][j]\n                    k = j+1\n                    while k < col and matrix[i][k] != '#':\n                        word += matrix[i][k]\n                        k += 1\n                    words.append(word)\n                if i < row-1 and matrix[i+1][j] != '#':\n                    word = matrix[i][j]\n                    k = i+1\n                    while k < row and matrix[k][j] != '#':\n                        word += matrix[k][j]\n                        k += 1\n                    words.append(word)\n    print(min(words))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649734304,
  "object": "edit"
}
2022-04-11 23:31:46.674948 fix syntax errors 2 ['\n\ndef main():\n    """\n    Main function\n    """\n    row, col = map(int, input().split())\n    matrix = []\n    for i in range(row):\n        matrix.append(input())\n    words = []\n    for i in range(row):\n        for j in range(col):\n            if matrix[i][j] != \'#\':\n                if j < col-1 and matrix[i][j+1] != \'#\':\n                    word = matrix[i][j]\n                    k = j+1\n                    while k < col and matrix[i][k] != \'#\':\n                        word += matrix[i][k]\n                        k += 1\n                    words.append(word)\n                if i < row-1 and matrix[i+1][j] != \'#\':\n                    word = matrix[i][j]\n                    k = i+1\n                    while k < row and matrix[k][j] != \'#\':\n                        word += matrix[k][j]\n                        k += 1\n                    words.append(word)\n    print(min(words))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    """\n    Main function\n    """\n    row, col = map(int, input().split())\n    matrix = []\n    for i in range(row):\n        matrix.append(input())\n    words = []\n    for i in range(row):\n        for j in range(col):\n            if matrix[i][j] != \'#\':\n                if j < col-1 and matrix[i][j+1] != \'#\':\n                    word = matrix[i][j]\n                    k = j+1\n                    while k < col and matrix[i][k] != \'#\':\n                        word += matrix[i][k]\n                        k += 1\n                    words.append(word)\n                if i < row-1 and matrix[i+1][j] != \'#\':\n                    word = matrix[i][j]\n                    k = i+1\n                    while k < row and matrix[k][j] != \'#\':\n                        word += matrix[k][j]\n                        k += 1\n                    words.append(word)\n    print(min(words))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 23:31:46.674997 size on output set 1
2022-04-11 23:31:46.675012 num operations 2
2022-04-11 23:31:46.675020 size on input set 1
2022-04-11 23:31:52.042046 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\n\ndef main():\n    r, c = sys.stdin.readline().split()\n    r = int(r)\n    c = int(c)\n    crossword = []\n    for i in range(r):\n        row = sys.stdin.readline().strip()\n        crossword.append(row)\n\n    smallest_word = 'z'\n    for r in range(r):\n        for c in range(c):\n            if crossword[r][c] != '#':\n                if r + 1 < r:\n                    if crossword[r + 1][c] != '#':\n                        word = crossword[r][c] + crossword[r + 1][c]\n                        if word < smallest_word:\n                            smallest_word = word\n                if c + 1 < c:\n                    if crossword[r][c + 1] != '#':\n                        word = crossword[r][c] + crossword[r][c + 1]\n                        if word < smallest_word:\n                            smallest_word = word\n\n    print(smallest_word)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n#\nimport sys\n\n\ndef main():\n    R, C = sys.stdin.readline().split()\n    R = int(R)\n    C = int(C)\n    crossword = []\n    for i in range(R):\n        row = sys.stdin.readline().strip()\n        crossword.append(row)\n\n    smallest_word = 'z'\n    for r in range(R):\n        for c in range(C):\n            if crossword[r][c] != '#':\n                if r + 1 < R:\n                    if crossword[r + 1][c] != '#':\n                        word = crossword[r][c] + crossword[r + 1][c]\n                        if word < smallest_word:\n                            smallest_word = word\n                if c + 1 < C:\n                    if crossword[r][c + 1] != '#':\n                        word = crossword[r][c] + crossword[r][c + 1]\n                        if word < smallest_word:\n                            smallest_word = word\n\n    print(smallest_word)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649734306,
  "object": "edit"
}
2022-04-11 23:31:52.042196 fix spelling mistakes 2 ["\nimport sys\n\n\ndef main():\n    r, c = sys.stdin.readline().split()\n    r = int(r)\n    c = int(c)\n    crossword = []\n    for i in range(r):\n        row = sys.stdin.readline().strip()\n        crossword.append(row)\n\n    smallest_word = 'z'\n    for r in range(r):\n        for c in range(c):\n            if crossword[r][c] != '#':\n                if r + 1 < r:\n                    if crossword[r + 1][c] != '#':\n                        word = crossword[r][c] + crossword[r + 1][c]\n                        if word < smallest_word:\n                            smallest_word = word\n                if c + 1 < c:\n                    if crossword[r][c + 1] != '#':\n                        word = crossword[r][c] + crossword[r][c + 1]\n                        if word < smallest_word:\n                            smallest_word = word\n\n    print(smallest_word)\n\n\nif __name__ == '__main__':\n    main()\n", "\n#\nimport sys\n\n\ndef main():\n    R, C = sys.stdin.readline().split()\n    R = int(R)\n    C = int(C)\n    crossword = []\n    for i in range(R):\n        row = sys.stdin.readline().strip()\n        crossword.append(row)\n\n    smallest_word = 'z'\n    for r in range(R):\n        for c in range(C):\n            if crossword[r][c] != '#':\n                if r + 1 < R:\n                    if crossword[r + 1][c] != '#':\n                        word = crossword[r][c] + crossword[r + 1][c]\n                        if word < smallest_word:\n                            smallest_word = word\n                if c + 1 < C:\n                    if crossword[r][c + 1] != '#':\n                        word = crossword[r][c] + crossword[r][c + 1]\n                        if word < smallest_word:\n                            smallest_word = word\n\n    print(smallest_word)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 23:31:52.042214 size on output set 2
2022-04-11 23:31:52.042218 size on input set 2
2022-04-11 23:31:58.302299 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\n\ndef main():\n    r, c = sys.stdin.readline().split()\n    r = int(r)\n    c = int(c)\n    crossword = []\n    for i in range(r):\n        row = sys.stdin.readline().strip()\n        crossword.append(row)\n\n    smallest_word = 'z'\n    for r in range(r):\n        for c in range(c):\n            if crossword[r][c] != '#':\n                if r + 1 < r and c + 1 < c:\n                    if crossword[r + 1][c] != '#':\n                        word = crossword[r][c] + crossword[r + 1][c]\n                        if word < smallest_word:\n                            smallest_word = word\n                    if crossword[r][c + 1] != '#':\n                        word = crossword[r][c] + crossword[r][c + 1]\n                        if word < smallest_word:\n                            smallest_word = word\n\n    print(smallest_word)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\n\ndef main():\n    r, c = sys.stdin.readline().split()\n    r = int(r)\n    c = int(c)\n    crossword = []\n    for i in range(r):\n        row = sys.stdin.readline().strip()\n        crossword.append(row)\n\n    smallest_word = 'z'\n    for row in range(r):\n        for col in range(c):\n            if crossword[row][col] != '#':\n                if row + 1 < r:\n                    if crossword[row + 1][col] != '#':\n                        word = crossword[row][col] + crossword[row + 1][col]\n                        if word < smallest_word:\n                            smallest_word = word\n                if col + 1 < c:\n                    if crossword[row][col + 1] != '#':\n                        word = crossword[row][col] + crossword[row][col + 1]\n                        if word < smallest_word:\n                            smallest_word = word\n\n    print(smallest_word)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649734312,
  "object": "edit"
}
2022-04-11 23:31:58.302429 fix syntax errors 2 ["\nimport sys\n\n\ndef main():\n    r, c = sys.stdin.readline().split()\n    r = int(r)\n    c = int(c)\n    crossword = []\n    for i in range(r):\n        row = sys.stdin.readline().strip()\n        crossword.append(row)\n\n    smallest_word = 'z'\n    for r in range(r):\n        for c in range(c):\n            if crossword[r][c] != '#':\n                if r + 1 < r and c + 1 < c:\n                    if crossword[r + 1][c] != '#':\n                        word = crossword[r][c] + crossword[r + 1][c]\n                        if word < smallest_word:\n                            smallest_word = word\n                    if crossword[r][c + 1] != '#':\n                        word = crossword[r][c] + crossword[r][c + 1]\n                        if word < smallest_word:\n                            smallest_word = word\n\n    print(smallest_word)\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\n\ndef main():\n    r, c = sys.stdin.readline().split()\n    r = int(r)\n    c = int(c)\n    crossword = []\n    for i in range(r):\n        row = sys.stdin.readline().strip()\n        crossword.append(row)\n\n    smallest_word = 'z'\n    for row in range(r):\n        for col in range(c):\n            if crossword[row][col] != '#':\n                if row + 1 < r:\n                    if crossword[row + 1][col] != '#':\n                        word = crossword[row][col] + crossword[row + 1][col]\n                        if word < smallest_word:\n                            smallest_word = word\n                if col + 1 < c:\n                    if crossword[row][col + 1] != '#':\n                        word = crossword[row][col] + crossword[row][col + 1]\n                        if word < smallest_word:\n                            smallest_word = word\n\n    print(smallest_word)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 23:32:00.609452 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# https://codeforces.com/problemset/problem/1283/A\nimport sys\n\n\ndef main():\n    R, C = sys.stdin.readline().split()\n    R = int(R)\n    C = int(C)\n    crossword = []\n    for i in range(R):\n        row = sys.stdin.readline().strip()\n        crossword.append(row)\n\n    smallest_word = 'z'\n    for r in range(R):\n        for c in range(C):\n            if crossword[r][c] != '#':\n                if r + 1 < R:\n                    if crossword[r + 1][c] != '#':\n                        word = crossword[r][c] + crossword[r + 1][c]\n                        if word < smallest_word:\n                            smallest_word = word\n                if c + 1 < C:\n                    if crossword[r][c + 1] != '#':\n                        word = crossword[r][c] + crossword[r][c + 1]\n                        if word < smallest_word:\n                            smallest_word = word\n\n    print(smallest_word)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\n\ndef main():\n    R, C = sys.stdin.readline().split()\n    R = int(R)\n    C = int(C)\n    crossword = []\n    for i in range(R):\n        row = sys.stdin.readline().strip()\n        crossword.append(row)\n\n    smallest_word = 'z'\n    for r in range(R):\n        for c in range(C):\n            if crossword[r][c] != '#':\n                if r + 1 < R:\n                    if crossword[r + 1][c] != '#':\n                        word = crossword[r][c] + crossword[r + 1][c]\n                        if word < smallest_word:\n                            smallest_word = word\n                if c + 1 < C:\n                    if crossword[r][c + 1] != '#':\n                        word = crossword[r][c] + crossword[r][c + 1]\n                        if word < smallest_word:\n                            smallest_word = word\n\n    print(smallest_word)\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649734318,
  "object": "edit"
}
2022-04-11 23:32:00.609673 fix syntax errors 2 ["\n# https://codeforces.com/problemset/problem/1283/A\nimport sys\n\n\ndef main():\n    R, C = sys.stdin.readline().split()\n    R = int(R)\n    C = int(C)\n    crossword = []\n    for i in range(R):\n        row = sys.stdin.readline().strip()\n        crossword.append(row)\n\n    smallest_word = 'z'\n    for r in range(R):\n        for c in range(C):\n            if crossword[r][c] != '#':\n                if r + 1 < R:\n                    if crossword[r + 1][c] != '#':\n                        word = crossword[r][c] + crossword[r + 1][c]\n                        if word < smallest_word:\n                            smallest_word = word\n                if c + 1 < C:\n                    if crossword[r][c + 1] != '#':\n                        word = crossword[r][c] + crossword[r][c + 1]\n                        if word < smallest_word:\n                            smallest_word = word\n\n    print(smallest_word)\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\n\ndef main():\n    R, C = sys.stdin.readline().split()\n    R = int(R)\n    C = int(C)\n    crossword = []\n    for i in range(R):\n        row = sys.stdin.readline().strip()\n        crossword.append(row)\n\n    smallest_word = 'z'\n    for r in range(R):\n        for c in range(C):\n            if crossword[r][c] != '#':\n                if r + 1 < R:\n                    if crossword[r + 1][c] != '#':\n                        word = crossword[r][c] + crossword[r + 1][c]\n                        if word < smallest_word:\n                            smallest_word = word\n                if c + 1 < C:\n                    if crossword[r][c + 1] != '#':\n                        word = crossword[r][c] + crossword[r][c + 1]\n                        if word < smallest_word:\n                            smallest_word = word\n\n    print(smallest_word)\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 23:32:00.609695 size on output set 4
2022-04-11 23:32:00.609711 num operations 2
2022-04-11 23:32:00.609714 size on input set 1
2022-04-11 23:32:03.082778 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Accepted after 2nd attempt (wrong answer on 1st attempt)\n\n# Read input\nR, C = [int(i) for i in input().split()]\ngrid = []\nfor i in range(R):\n    grid.append(list(input()))\n\n# Find all words\nwords = []\nfor r in range(R):\n    for c in range(C):\n        # Check horizontal\n        if c < C-1 and grid[r][c] != '#' and grid[r][c+1] != '#':\n            word = grid[r][c]\n            while c < C-1 and grid[r][c+1] != '#':\n                c += 1\n                word += grid[r][c]\n            if len(word) > 1:\n                words.append(word)\n\n        # Check vertical\n        if r < R-1 and grid[r][c] != '#' and grid[r+1][c] != '#':\n            word = grid[r][c]\n            while r < R-1 and grid[r+1][c] != '#':\n                r += 1\n                word += grid[r][c]\n            if len(word) > 1:\n                words.append(word)\n\n# Print lexicographically smallest word\nprint(min(words))\n"
    },
    {
      "index": 1,
      "text": "\n\n# Accepted after 2nd attempt (wrong answer on the first attempt)\n\n# Read input\nR, C = [int(i) for i in input().split()]\ngrid = []\nfor i in range(R):\n    grid.append(list(input()))\n\n# Find all words\nwords = []\nfor r in range(R):\n    for c in range(C):\n        # Check horizontal\n        if c < C-1 and grid[r][c] != '#' and grid[r][c+1] != '#':\n            word = grid[r][c]\n            while c < C-1 and grid[r][c+1] != '#':\n                c += 1\n                word += grid[r][c]\n            if len(word) > 1:\n                words.append(word)\n\n        # Check vertical\n        if r < R-1 and grid[r][c] != '#' and grid[r+1][c] != '#':\n            word = grid[r][c]\n            while r < R-1 and grid[r+1][c] != '#':\n                r += 1\n                word += grid[r][c]\n            if len(word) > 1:\n                words.append(word)\n\n# Print lexicographically smallest word\nprint(min(words))\n"
    }
  ],
  "created": 1649734320,
  "object": "edit"
}
2022-04-11 23:32:03.083033 fix spelling mistakes 2 ["\n\n# Accepted after 2nd attempt (wrong answer on 1st attempt)\n\n# Read input\nR, C = [int(i) for i in input().split()]\ngrid = []\nfor i in range(R):\n    grid.append(list(input()))\n\n# Find all words\nwords = []\nfor r in range(R):\n    for c in range(C):\n        # Check horizontal\n        if c < C-1 and grid[r][c] != '#' and grid[r][c+1] != '#':\n            word = grid[r][c]\n            while c < C-1 and grid[r][c+1] != '#':\n                c += 1\n                word += grid[r][c]\n            if len(word) > 1:\n                words.append(word)\n\n        # Check vertical\n        if r < R-1 and grid[r][c] != '#' and grid[r+1][c] != '#':\n            word = grid[r][c]\n            while r < R-1 and grid[r+1][c] != '#':\n                r += 1\n                word += grid[r][c]\n            if len(word) > 1:\n                words.append(word)\n\n# Print lexicographically smallest word\nprint(min(words))\n", "\n\n# Accepted after 2nd attempt (wrong answer on the first attempt)\n\n# Read input\nR, C = [int(i) for i in input().split()]\ngrid = []\nfor i in range(R):\n    grid.append(list(input()))\n\n# Find all words\nwords = []\nfor r in range(R):\n    for c in range(C):\n        # Check horizontal\n        if c < C-1 and grid[r][c] != '#' and grid[r][c+1] != '#':\n            word = grid[r][c]\n            while c < C-1 and grid[r][c+1] != '#':\n                c += 1\n                word += grid[r][c]\n            if len(word) > 1:\n                words.append(word)\n\n        # Check vertical\n        if r < R-1 and grid[r][c] != '#' and grid[r+1][c] != '#':\n            word = grid[r][c]\n            while r < R-1 and grid[r+1][c] != '#':\n                r += 1\n                word += grid[r][c]\n            if len(word) > 1:\n                words.append(word)\n\n# Print lexicographically smallest word\nprint(min(words))\n"]
2022-04-11 23:32:03.083062 size on output set 2
2022-04-11 23:32:03.083204 size on input set 2
2022-04-11 23:32:06.037396 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Accepted after 2nd attempt (wrong answer on 1st attempt)\n# Read input\nR, C = [int(i) for i in input().split()]\ngrid = []\nfor i in range(R):\n    grid.append(list(input()))\n\n# Find all words\nwords = []\nfor r in range(R):\n    for c in range(C):\n        # Check horizontal\n        if c < C-1 and grid[r][c] != '#' and grid[r][c+1] != '#':\n            word = grid[r][c]\n            while c < C-1 and grid[r][c+1] != '#':\n                c += 1\n                word += grid[r][c]\n            if len(word) > 1:\n                words.append(word)\n\n        # Check vertical\n        if r < R-1 and grid[r][c] != '#' and grid[r+1][c] != '#':\n            word = grid[r][c]\n            while r < R-1 and grid[r+1][c] != '#':\n                r += 1\n                word += grid[r][c]\n            if len(word) > 1:\n                words.append(word)\n\n# Print lexicographically smallest word\nprint(min(words))\n"
    },
    {
      "index": 1,
      "text": "\n# Accepted after 2nd attempt (wrong answer on 1st attempt)\n\n# Read input\nR, C = map(int, input().split())\ngrid = []\nfor i in range(R):\n    grid.append(input())\n\n# Find all words\nwords = []\nfor r in range(R):\n    for c in range(C):\n        # Check horizontal\n        if c < C-1 and grid[r][c] != '#' and grid[r][c+1] != '#':\n            word = grid[r][c]\n            while c < C-1 and grid[r][c+1] != '#':\n                c += 1\n                word += grid[r][c]\n            if len(word) > 1:\n                words.append(word)\n\n        # Check vertical\n        if r < R-1 and grid[r][c] != '#' and grid[r+1][c] != '#':\n            word = grid[r][c]\n            while r < R-1 and grid[r+1][c] != '#':\n                r += 1\n                word += grid[r][c]\n            if len(word) > 1:\n                words.append(word)\n\n# Print lexicographically smallest word\nprint(min(words))\n"
    }
  ],
  "created": 1649734323,
  "object": "edit"
}
2022-04-11 23:32:06.037503 fix syntax errors 2 ["\n# Accepted after 2nd attempt (wrong answer on 1st attempt)\n# Read input\nR, C = [int(i) for i in input().split()]\ngrid = []\nfor i in range(R):\n    grid.append(list(input()))\n\n# Find all words\nwords = []\nfor r in range(R):\n    for c in range(C):\n        # Check horizontal\n        if c < C-1 and grid[r][c] != '#' and grid[r][c+1] != '#':\n            word = grid[r][c]\n            while c < C-1 and grid[r][c+1] != '#':\n                c += 1\n                word += grid[r][c]\n            if len(word) > 1:\n                words.append(word)\n\n        # Check vertical\n        if r < R-1 and grid[r][c] != '#' and grid[r+1][c] != '#':\n            word = grid[r][c]\n            while r < R-1 and grid[r+1][c] != '#':\n                r += 1\n                word += grid[r][c]\n            if len(word) > 1:\n                words.append(word)\n\n# Print lexicographically smallest word\nprint(min(words))\n", "\n# Accepted after 2nd attempt (wrong answer on 1st attempt)\n\n# Read input\nR, C = map(int, input().split())\ngrid = []\nfor i in range(R):\n    grid.append(input())\n\n# Find all words\nwords = []\nfor r in range(R):\n    for c in range(C):\n        # Check horizontal\n        if c < C-1 and grid[r][c] != '#' and grid[r][c+1] != '#':\n            word = grid[r][c]\n            while c < C-1 and grid[r][c+1] != '#':\n                c += 1\n                word += grid[r][c]\n            if len(word) > 1:\n                words.append(word)\n\n        # Check vertical\n        if r < R-1 and grid[r][c] != '#' and grid[r+1][c] != '#':\n            word = grid[r][c]\n            while r < R-1 and grid[r+1][c] != '#':\n                r += 1\n                word += grid[r][c]\n            if len(word) > 1:\n                words.append(word)\n\n# Print lexicographically smallest word\nprint(min(words))\n"]
2022-04-11 23:32:09.860860 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Accepted after 2nd attempt (wrong answer on the first attempt)\n\n# Read input\nR, C = [int(i) for i in input().split()]  # type: int, int\ngrid = []\nfor i in range(R):\n    grid.append(list(input()))  # type: List[List[str]]\n\n# Find all words\nwords = []  # type: List[str]\nfor r in range(R):\n    for c in range(C):\n        # Check horizontal\n        if c < C-1 and grid[r][c] != '#' and grid[r][c+1] != '#':\n            word = grid[r][c]\n            while c < C-1 and grid[r][c+1] != '#':\n                c += 1\n                word += grid[r][c]\n            if len(word) > 1:\n                words.append(word)\n\n        # Check vertical\n        if r < R-1 and grid[r][c] != '#' and grid[r+1][c] != '#':\n            word = grid[r][c]\n            while r < R-1 and grid[r+1][c] != '#':\n                r += 1\n                word += grid[r][c]\n            if len(word) > 1:\n                words.append(word)\n\n# Print lexicographically smallest word\nprint(min(words))\n"
    },
    {
      "index": 1,
      "text": "\n# Accepted after 2nd attempt (wrong answer on the first attempt)\n\n# Read input\nR, C = [int(i) for i in input().split()]\ngrid = []\nfor i in range(R):\n    grid.append(list(input()))\n\n# Find all words\nwords = []\nfor r in range(R):\n    for c in range(C):\n        # Check horizontal\n        if c < C-1 and grid[r][c] != '#' and grid[r][c+1] != '#':\n            word = grid[r][c]\n            while c < C-1 and grid[r][c+1] != '#':\n                c += 1\n                word += grid[r][c]\n            if len(word) > 1:\n                words.append(word)\n\n        # Check vertical\n        if r < R-1 and grid[r][c] != '#' and grid[r+1][c] != '#':\n            word = grid[r][c]\n            while r < R-1 and grid[r+1][c] != '#':\n                r += 1\n                word += grid[r][c]\n            if len(word) > 1:\n                words.append(word)\n\n# Print lexicographically smallest word\nprint(min(words))\n"
    }
  ],
  "created": 1649734326,
  "object": "edit"
}
2022-04-11 23:32:09.860964 fix syntax errors 2 ["\n# Accepted after 2nd attempt (wrong answer on the first attempt)\n\n# Read input\nR, C = [int(i) for i in input().split()]  # type: int, int\ngrid = []\nfor i in range(R):\n    grid.append(list(input()))  # type: List[List[str]]\n\n# Find all words\nwords = []  # type: List[str]\nfor r in range(R):\n    for c in range(C):\n        # Check horizontal\n        if c < C-1 and grid[r][c] != '#' and grid[r][c+1] != '#':\n            word = grid[r][c]\n            while c < C-1 and grid[r][c+1] != '#':\n                c += 1\n                word += grid[r][c]\n            if len(word) > 1:\n                words.append(word)\n\n        # Check vertical\n        if r < R-1 and grid[r][c] != '#' and grid[r+1][c] != '#':\n            word = grid[r][c]\n            while r < R-1 and grid[r+1][c] != '#':\n                r += 1\n                word += grid[r][c]\n            if len(word) > 1:\n                words.append(word)\n\n# Print lexicographically smallest word\nprint(min(words))\n", "\n# Accepted after 2nd attempt (wrong answer on the first attempt)\n\n# Read input\nR, C = [int(i) for i in input().split()]\ngrid = []\nfor i in range(R):\n    grid.append(list(input()))\n\n# Find all words\nwords = []\nfor r in range(R):\n    for c in range(C):\n        # Check horizontal\n        if c < C-1 and grid[r][c] != '#' and grid[r][c+1] != '#':\n            word = grid[r][c]\n            while c < C-1 and grid[r][c+1] != '#':\n                c += 1\n                word += grid[r][c]\n            if len(word) > 1:\n                words.append(word)\n\n        # Check vertical\n        if r < R-1 and grid[r][c] != '#' and grid[r+1][c] != '#':\n            word = grid[r][c]\n            while r < R-1 and grid[r+1][c] != '#':\n                r += 1\n                word += grid[r][c]\n            if len(word) > 1:\n                words.append(word)\n\n# Print lexicographically smallest word\nprint(min(words))\n"]
2022-04-11 23:32:09.860982 size on output set 4
