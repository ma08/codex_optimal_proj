2022-04-11 21:54:02.345201 num operations 2
2022-04-11 21:54:02.345234 size on input set 1
2022-04-11 21:54:05.198339 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef cal_lucas(n):  # Lucas sequence\n    if n == 0:\n        return 2\n    elif n == 1:\n        return 1\n    else:\n        return cal_lucas(n-1) + cal_lucas(n-2)\n\ndef main():\n    n = int(input())\n    print(cal_lucas(n))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef cal_lucas(n): # recursive\n    if n == 0:\n        return 2\n    elif n == 1:\n        return 1\n    else:\n        return cal_lucas(n-1) + cal_lucas(n-2)\n\ndef main():\n    n = int(input())\n    print(cal_lucas(n))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649728443,
  "object": "edit"
}
2022-04-11 21:54:05.198459 fix spelling mistakes 2 ["\n\ndef cal_lucas(n):  # Lucas sequence\n    if n == 0:\n        return 2\n    elif n == 1:\n        return 1\n    else:\n        return cal_lucas(n-1) + cal_lucas(n-2)\n\ndef main():\n    n = int(input())\n    print(cal_lucas(n))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef cal_lucas(n): # recursive\n    if n == 0:\n        return 2\n    elif n == 1:\n        return 1\n    else:\n        return cal_lucas(n-1) + cal_lucas(n-2)\n\ndef main():\n    n = int(input())\n    print(cal_lucas(n))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 21:54:05.198475 size on output set 2
2022-04-11 21:54:05.198479 size on input set 2
2022-04-11 21:54:07.554055 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef cal_lucas(n): # recursive\n    if n == 0:\n        return 2\n    elif n == 1:\n        return 1\n    else:\n        return cal_lucas(n-1) + cal_lucas(n-2)\n\ndef main():\n    n = int(input())\n    print(cal_lucas(n))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef cal_lucas(n):\n    if n == 0:\n        return 2\n    elif n == 1:\n        return 1\n    else:\n        return cal_lucas(n-1) + cal_lucas(n-2)\n\ndef main():\n    n = int(input())\n    print(cal_lucas(n))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649728445,
  "object": "edit"
}
2022-04-11 21:54:07.554320 fix syntax errors 2 ["\ndef cal_lucas(n): # recursive\n    if n == 0:\n        return 2\n    elif n == 1:\n        return 1\n    else:\n        return cal_lucas(n-1) + cal_lucas(n-2)\n\ndef main():\n    n = int(input())\n    print(cal_lucas(n))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef cal_lucas(n):\n    if n == 0:\n        return 2\n    elif n == 1:\n        return 1\n    else:\n        return cal_lucas(n-1) + cal_lucas(n-2)\n\ndef main():\n    n = int(input())\n    print(cal_lucas(n))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 21:54:09.457775 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef cal_lucas(n):  # Lucas sequence\n    if n == 0:\n        return 2\n    elif n == 1:\n        return 1\n    else:\n        return cal_lucas(n-1) + cal_lucas(n-2)\n\ndef main():\n    n = int(input())\n    print(cal_lucas(n))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef cal_lucas(n):  # Lucas sequence\n    if n == 0:\n        return 2\n    elif n == 1:\n        return 1\n    else:\n        return cal_lucas(n-1) + cal_lucas(n-2)\n\ndef main():\n    n = int(input())\n    print(cal_lucas(n))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649728447,
  "object": "edit"
}
2022-04-11 21:54:09.457975 fix syntax errors 2 ["\ndef cal_lucas(n):  # Lucas sequence\n    if n == 0:\n        return 2\n    elif n == 1:\n        return 1\n    else:\n        return cal_lucas(n-1) + cal_lucas(n-2)\n\ndef main():\n    n = int(input())\n    print(cal_lucas(n))\n\nif __name__ == '__main__':\n    main()\n", "\ndef cal_lucas(n):  # Lucas sequence\n    if n == 0:\n        return 2\n    elif n == 1:\n        return 1\n    else:\n        return cal_lucas(n-1) + cal_lucas(n-2)\n\ndef main():\n    n = int(input())\n    print(cal_lucas(n))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 21:54:09.458004 size on output set 3
2022-04-11 21:54:09.458026 num operations 2
2022-04-11 21:54:09.458035 size on input set 1
2022-04-11 21:54:11.680578 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    l = [2, 1]\n    for i in range(n):\n        l.append(l[i] + l[i+1])\n    print(l[n])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    l = [1, 1]\n    for i in range(n):\n        l.append(l[i] + l[i+1])\n    print(l[n])\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649728449,
  "object": "edit"
}
2022-04-11 21:54:11.680690 fix spelling mistakes 2 ["\n\ndef main():\n    n = int(input())\n    l = [2, 1]\n    for i in range(n):\n        l.append(l[i] + l[i+1])\n    print(l[n])\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    l = [1, 1]\n    for i in range(n):\n        l.append(l[i] + l[i+1])\n    print(l[n])\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 21:54:11.680715 size on output set 2
2022-04-11 21:54:11.680719 size on input set 2
2022-04-11 21:54:14.778968 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    l = [1, 1, 2]\n    for i in range(n):\n        l.append(l[i] + l[i+1] + l[i+2])\n    print(l[n])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    l = [1, 1, 2]\n    for i in range(n):\n        l.append(l[i] + l[i+1] + l[i+2])\n    print(l[n])\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649728451,
  "object": "edit"
}
2022-04-11 21:54:14.779375 fix syntax errors 2 ["\n\nimport sys\n\ndef main():\n    n = int(input())\n    l = [1, 1, 2]\n    for i in range(n):\n        l.append(l[i] + l[i+1] + l[i+2])\n    print(l[n])\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    l = [1, 1, 2]\n    for i in range(n):\n        l.append(l[i] + l[i+1] + l[i+2])\n    print(l[n])\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 21:54:17.574203 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    l = [1, 1]\n    for i in range(n):\n        l.append(l[i] + l[i+1])\n    print(l[n])\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    l = [0, 1]\n    for i in range(n):\n        l.append(l[i] + l[i+1])\n    print(l[n])\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1649728454,
  "object": "edit"
}
2022-04-11 21:54:17.574316 fix syntax errors 2 ["\n\ndef main():\n    n = int(input())\n    l = [1, 1]\n    for i in range(n):\n        l.append(l[i] + l[i+1])\n    print(l[n])\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    l = [0, 1]\n    for i in range(n):\n        l.append(l[i] + l[i+1])\n    print(l[n])\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-11 21:54:17.574337 size on output set 3
