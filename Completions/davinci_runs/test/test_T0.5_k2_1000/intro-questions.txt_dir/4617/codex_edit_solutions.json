["\n\nc1 = input()\nc2 = input()\n\nif c1[::-1] == c2:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "\n\nc1 = input()  # \u0432\u0432\u043e\u0434\u0438\u043c \u0441\u0442\u0440\u043e\u043a\u0443 c1\nc2 = input()  # \u0432\u0432\u043e\u0434\u0438\u043c \u0441\u0442\u0440\u043e\u043a\u0443 c2\n\nif c1[::-1] == c2:  # \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0441\u0442\u0440\u043e\u043a\u0430 c2 \u043f\u0435\u0440\u0435\u0432\u0435\u0440\u0442\u044b\u0448\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0438 c1\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "\n# -----Constant-----\nYES = 'YES'\nNO = 'NO'\n\n# -----Functions-----\ndef is_same_grid(grid):\n    if grid[0][0] == grid[1][1] and grid[0][1] == grid[1][0] and grid[0][2] == grid[1][2]:\n        return True\n    else:\n        return False\n\n# -----Input and Output-----\ngrid = []\nfor i in range(2):\n    grid.append(list(input()))\n\nif is_same_grid(grid):\n    print(YES)\nelse:\n    print(NO)\n"]