["import heapq\n\na, b, k = map(int, input().split())\n\nh = []\nfor i in range(a, b + 1):\n    heapq.heappush(h, i)\n\nfor i in range(k):\n    print(heapq.heappop(h))\n\nfor i in range(k):\n    print(heapq.heappop(h))\n", "import heapq\n\na, b, k = map(int, input().split())\n\nh = []\nfor i in range(a, b + 1):\n    heapq.heappush(h, i)\n\nfor i in range(k):\n    print(heapq.heappop(h))\n", "# coding: utf-8\n\nimport heapq\n\na, b, k = map(int, input().split())\n\nh = []\nfor i in range(a, b + 1):\n    heapq.heappush(h, i)\n\nfor i in range(k):\n    print(heapq.heappop(h))\n\nfor i in range(k):\n    print(heapq.heappop(h))\n", "import sys\n\nimport heapq\n\na, b, k = map(int, sys.stdin.readline().split())\n\nh = []\nfor i in range(a, b + 1):\n    heapq.heappush(h, i)\n\nfor i in range(k):\n    sys.stdout.write(str(heapq.heappop(h)) + '\\n')\n\nfor i in range(k):\n    print(heapq.heappop(h[::-1]))\n", "\n\ndef main():\n    a, b, k = map(int, input().split())\n    x = sorted(range(a, b + 1))\n    print(*x[:k], sep='\\n')\n    print(*x[-k:], sep='\\n')\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    a, b, k = map(int, input().split())\n    x = sorted(range(a, b + 1))\n    print(*x[:k], sep='\\n')  # first k elements\n    print(*x[-k:], sep='\\n')  # last k elements\n\n\nif __name__ == '__main__':\n    main()\n"]