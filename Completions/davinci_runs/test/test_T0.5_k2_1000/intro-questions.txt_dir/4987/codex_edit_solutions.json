["\ndef main():\n    s, c, k = map(int, input().split())\n    d = list(map(int, input().split()))\n\n    d.sort()\n\n    machines = 0\n    machine_load = 0\n\n    for i in range(s):\n        if machine_load >= c or (machine_load > 0 and d[i] - d[i-1] > k):\n            machine_load = 0\n            machines += 1\n        machine_load += 1\n\n    if machine_load > 0:\n        machines += 1\n\n    print(machines)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    S, C, K = [int(i) for i in sys.stdin.readline().split()] # S is the number of socks, C is the number of colors, K is the maximum difference.\n    D = [int(i) for i in sys.stdin.readline().split()] # D is the color of the socks.\n    D.sort() # sort the socks by color.\n    i = 0\n    count = 0\n    while i < S:\n        count += 1\n        j = i + 1\n        while j < S and D[j] - D[i] <= K: # if the difference between the color of the socks is less than or equal to K, put them in the same machine.\n            j += 1\n        i = j\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    print(\"Hello World!\")\n\nif __name__ == \"__main__\":\n    main()\n", "socks, capacity, colorDiff = [int(x) for x in input().split()]\ncolors = [int(x) for x in input().split()]\n\ncolors.sort()\n\ncount = 0\n\nfor i in range(socks):\n    if i == 0 or colors[i] - colors[i - 1] > colorDiff:\n        count += 1\n\nif count % capacity == 0:\n    print(count // capacity)\nelse:\n    print(count // capacity + 1)\n", "\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n# Solution\n\nsocks, capacity, colorDiff = [int(x) for x in input().split()]\ncolors = [int(x) for x in input().split()]\n\ncolors.sort()\n\ncount = 0\n\nfor i in range(socks):\n    if i == 0 or colors[i] - colors[i - 1] > colorDiff:\n        count += 1\n\nif count % capacity == 0:\n    print(count // capacity)\nelse:\n    print(count // capacity + 1)\n", "S, C, K = map(int, input().split())\nsocks = list(map(int, input().split()))\nsocks.sort()\nmachines = 0\nwhile len(socks) > 0:\n    current_machine = []\n    current_machine.append(socks.pop(0))\n    while len(current_machine) < C and len(socks) > 0:\n        if abs(current_machine[-1] - socks[0]) <= K:\n            current_machine.append(socks.pop(0))\n        else:\n            break\n    machines += 1\nprint(machines)\n", "\n\nimport sys\nimport math\n\ns, c, k = [int(x) for x in sys.stdin.readline().split()]\nd = [int(x) for x in sys.stdin.readline().split()]\n\nd.sort()\n\nnumMachines = 0\n\nwhile len(d) > 0:\n    numMachines += 1\n    currentMachine = [d.pop(0)]\n    for i in range(len(d)):\n        if abs(d[i] - currentMachine[-1]) <= k:\n            currentMachine.append(d.pop(i))\n            i -= 1\n\n    if len(currentMachine) > c:\n        print(\"Too many socks for machine.\")\n        sys.exit(0)\n\nprint(\"Number of machines: \" + str(numMachines))\n", "from sys import stdin\n\nS, C, K = map(int, stdin.readline().split())\nD = list(map(int, stdin.readline().split()))\n\nD.sort()\n\nmachine_count = 0\n\nfor i in range(0, S, C):\n    machine_count += 1\n\n    if K == 0:\n        continue\n\n    for j in range(i, i + C - 1):\n        if abs(D[j] - D[j + 1]) > K:\n            machine_count += 1\n            break\n\nprint(machine_count)\n", "#\n# S, C, K = map(int, input().split())\n# socks = list(map(int, input().split()))\n# # print(socks)\n# socks.sort()\n#\n# machines = 0\n#\n# while len(socks) > 0:\n#     current_machine = []\n#     current_machine.append(socks.pop(0))\n#     while len(current_machine) < C and len(socks) > 0:\n#         if abs(current_machine[-1] - socks[0]) <= K:\n#             current_machine.append(socks.pop(0))\n#         else:\n#             break\n#     machines += 1\n#\n# print(machines)\n", "\nimport sys\nimport math\n\ns, c, k = [int(x) for x in input().split()]\nd = [int(x) for x in input().split()]\n\nd.sort()\n\nnumMachines = 0\n\nwhile len(d) > 0:\n    numMachines += 1\n    currentMachine = [d.pop(0)]\n    for i in range(len(d)):\n        if abs(d[i] - currentMachine[-1]) <= k:\n            currentMachine.append(d.pop(i))\n            i -= 1\n\n    if len(currentMachine) > c:\n        print(\"Too many socks for machine.\")\n        sys.exit(0)\n\nprint(\"Number of machines: \" + str(numMachines))\n", "\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nans = 0\ncnt = 0\n\nfor i in range(n):\n    if cnt >= k or (cnt > 0 and a[i] - a[i-1] > k):\n        cnt = 0\n        ans += 1\n    cnt += 1\n\nif cnt > 0:\n    ans += 1\n\nprint(ans)\n", "\nn, c, k = map(int, input().split())\nd = list(map(int, input().split()))\n\nd.sort()\n\nmachines = 0\nmachine_load = 0\n\nfor i in range(n):\n    if machine_load >= c or (machine_load > 0 and d[i] - d[i - 1] > k):\n        machine_load = 0\n        machines += 1\n    machine_load += 1\n\nif machine_load > 0:\n    machines += 1\n\nprint(machines)\n", "\nimport sys\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    print(\"Hello World\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nimport sys\nimport math\n\ns, c, k = [int(x) for x in input().split()]\nd = [int(x) for x in input().split()]\n\nd.sort()\n\nnumMachines = 0\n\nwhile len(d) > 0:\n    numMachines += 1\n    currentMachine = [d.pop(0)]\n    for i in range(len(d)):\n        if abs(d[i] - currentMachine[-1]) <= k:\n            currentMachine.append(d.pop(i))\n            i -= 1\n\n    if len(currentMachine) > c:\n        print(\"Too many socks for machine.\")\n        sys.exit(0)\n\nprint(\"Number of machines: \" + str(numMachines))\n", "\nimport sys\n\ndef main():\n    S, C, K = [int(i) for i in sys.stdin.readline().split()]\n    D = [int(i) for i in sys.stdin.readline().split()]\n    D.sort()\n    i = 0\n    count = 0\n    while i < S:\n        count += 1\n        j = i + 1\n        while j < S and D[j] - D[i] <= K and j - i + 1 <= C:\n            j += 1\n        i = j\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\nfrom sys import stdin\n\nN, M = map(int, stdin.readline().split())\nA = list(map(int, stdin.readline().split()))\n\nA.sort()\n\ncount = 0\n\nfor i in range(0, N, M):\n    count += 1\n\n    for j in range(i, i + M - 1):\n        if abs(A[j] - A[j + 1]) > 0:\n            count += 1\n            break\n\nprint(count)\n", "\n\n# Solution\n\nsocks, capacity, colorDiff = [int(x) for x in input().split()]  # socks, capacity, colorDiff = input().split()\ncolors = [int(x) for x in input().split()]  # colors = input().split()\n\ncolors.sort()\n\ncount = 0\n\nfor i in range(socks):\n    if i == 0 or colors[i] - colors[i - 1] > colorDiff:\n        count += 1\n\nif count % capacity == 0:\n    print(count // capacity)\nelse:\n    print(count // capacity + 1)\n", "\n# SOLUTION \n\nsocks, capacity, colorDiff = [int(x) for x in input().split()]\ncolors = [int(x) for x in input().split()]\n\ncolors.sort()\n\ncount = 0\n\nfor i in range(socks):\n    if i == 0 or colors[i] - colors[i - 1] > colorDiff:\n        count += 1\n\nif count % capacity == 0:\n    print(count // capacity)\nelse:\n    print(count // capacity + 1)\n", "\n\ndef solution(A):\n    A.sort()\n    for i in range(len(A)):\n        if A[i] != i + 1:\n            return 0\n    return 1\n\nprint(solution([4, 1, 3, 2]))\n", "\nS, C, K = map(int, input().split())\nsocks = list(map(int, input().split()))\n\nsocks.sort()\n\nmachines = 0\n\nwhile len(socks) > 0:\n    current_machine = []\n    current_machine.append(socks.pop(0))\n    while len(current_machine) < C and len(socks) > 0:\n        if abs(current_machine[-1] - socks[0]) <= K:\n            current_machine.append(socks.pop(0))\n        else:\n            break\n    machines += 1\n\n\nprint(machines)\n", "from sys import stdin\n\nN, M = map(int, stdin.readline().split())\n\nfile_list = []\nfor _ in range(N):\n    file_list.append(stdin.readline().strip())\n\nfor _ in range(M):\n    command = stdin.readline().strip()\n\n    if command == 'ls':\n        print(' '.join(file_list))\n\n    elif command == 'touch':\n        file_name = stdin.readline().strip()\n\n        if file_name in file_list:\n            print(f'{file_name} is already exist')\n        else:\n            file_list.append(file_name)\n\n    elif command == 'rm':\n        file_name = stdin.readline().strip()\n\n        if file_name in file_list:\n            file_list.remove(file_name)\n        else:\n            print(f'{file_name} is not exist')\n\n    elif command == 'rename':\n        old_name, new_name = stdin.readline().strip().split()\n\n        if old_name in file_list:\n            file_list[file_list.index(old_name)] = new_name\n        else:\n            print(f'{old_name} is not exist')\n", "\n\nimport sys\n\ns, c, k = [int(x) for x in sys.stdin.readline().split()]\nd = [int(x) for x in sys.stdin.readline().split()]\n\nd.sort()\n\nnumMachines = 0\n\nwhile len(d) > 0:\n    numMachines += 1\n    currentMachine = [d.pop(0)]\n    for i in range(len(d)):\n        if abs(d[i] - currentMachine[-1]) <= k:\n            currentMachine.append(d.pop(i))\n            i -= 1\n\n    if len(currentMachine) > c:\n        print(\"Too many socks for machine.\")\n        sys.exit(0)\n\nprint(\"Number of machines: \" + str(numMachines))\n", "\nimport sys\n\ndef main():\n    S, C, K = [int(i) for i in sys.stdin.readline().split()]\n    D = [int(i) for i in sys.stdin.readline().split()]\n    D.sort()\n    i = 0\n    count = 0\n    while i < S:\n        count += 1\n        j = i + 1\n        while j < S and D[j] - D[i] <= K:\n            j += 1\n        i = j\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n", "# \uc637\uc758 \uc885\ub958 \uc218\n# \uc637\uc744 \ucd5c\ub300 \uba87 \uac1c\uae4c\uc9c0 \uac19\uc774 \uc138\ud2b8\ub85c \ud314 \uc218 \uc788\ub294\uc9c0\n# \uc637\uc758 \uc138\ud2b8\ub97c \ud314 \ub54c \uc637\uc758 \uc0c9\uae54\uc774 \uac19\uc740 \uc637\uc740 \ucd5c\ub300 \uba87 \uac1c\uae4c\uc9c0 \ud314 \uc218 \uc788\ub294\uc9c0\nfrom sys import stdin\n\nS, C, K = map(int, stdin.readline().split())\nD = list(map(int, stdin.readline().split()))\n\nD.sort()\n\nmachine_count = 0\n\nfor i in range(0, S, C):\n    machine_count += 1\n\n    if K == 0:\n        continue\n\n    for j in range(i, i + C - 1):\n        if abs(D[j] - D[j + 1]) > K:\n            machine_count += 1\n            break\n\nprint(machine_count)\n", "s, c, k = map(int, input().split())\nd = list(map(int, input().split()))\n\nd.sort()\n\nmachines = 0\nmachine_load = 0\n\nfor i in range(1, s):\n    if machine_load >= c or (machine_load > 0 and d[i] - d[i-1] > k):\n        machine_load = 0\n        machines += 1\n    machine_load += 1\n\nif machine_load > 0:\n    machines += 1\n\nprint(machines)\n"]