2022-04-12 01:06:30.308765 num operations 2
2022-04-12 01:06:30.308815 size on input set 1
2022-04-12 01:06:32.821904 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#input\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            print(s[j], end='') #print the character\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"
    },
    {
      "index": 1,
      "text": "\n\n#input string\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            print(s[j], end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"
    }
  ],
  "created": 1649739990,
  "object": "edit"
}
2022-04-12 01:06:32.822030 fix spelling mistakes 2 ["\n\n#input\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            print(s[j], end='') #print the character\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n", "\n\n#input string\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            print(s[j], end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"]
2022-04-12 01:06:32.822051 size on output set 2
2022-04-12 01:06:32.822054 size on input set 2
2022-04-12 01:06:35.314775 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#input string\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n        print(s[j], end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"
    },
    {
      "index": 1,
      "text": "\n\n#input string\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n        print(s[j], end='')\n        if i == 2:\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"
    }
  ],
  "created": 1649739993,
  "object": "edit"
}
2022-04-12 01:06:35.314995 fix syntax errors 2 ["\n\n#input string\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n        print(s[j], end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n", "\n\n#input string\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n        print(s[j], end='')\n        if i == 2:\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"]
2022-04-12 01:06:43.301778 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#input\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            print(s[j], end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n"
    },
    {
      "index": 1,
      "text": "\n\n#input\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='') #print 4 dots\n            else:\n                print('.'*2, end='') #print 2 dots\n            if j != len(s)-1:\n                print('#', end='') #print #\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='') #print 3 dots\n            else:\n                print('.', end='') #print 1 dot\n            if j != len(s)-1:\n                print('#', end='') #print #\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='') #print 2 dots\n            else:\n                print('#', end='') #print #\n            if j != len(s)-1:\n                print('.', end='') #print 1 dot\n            print(s[j], end='') #print the character\n            if j != len(s)-1:\n                print('#', end='') #print #\n            else:\n                print('.'*2, end='') #print 2 dots\n    print()\n"
    }
  ],
  "created": 1649739995,
  "object": "edit"
}
2022-04-12 01:06:43.301970 fix syntax errors 2 ["\n\n#input\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='')\n            else:\n                print('.'*2, end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='')\n            else:\n                print('.', end='')\n            if j != len(s)-1:\n                print('#', end='')\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='')\n            else:\n                print('#', end='')\n            if j != len(s)-1:\n                print('.', end='')\n            print(s[j], end='')\n            if j != len(s)-1:\n                print('#', end='')\n            else:\n                print('.'*2, end='')\n    print()\n", "\n\n#input\ns = input()\n\n#output\nfor i in range(5):\n    for j in range(len(s)):\n        if i == 0 or i == 4:\n            if j%3 == 2:\n                print('.'*4, end='') #print 4 dots\n            else:\n                print('.'*2, end='') #print 2 dots\n            if j != len(s)-1:\n                print('#', end='') #print #\n        elif i == 1 or i == 3:\n            if j%3 == 2:\n                print('.'*3, end='') #print 3 dots\n            else:\n                print('.', end='') #print 1 dot\n            if j != len(s)-1:\n                print('#', end='') #print #\n        elif i == 2:\n            if j%3 == 2:\n                print('.'*2, end='') #print 2 dots\n            else:\n                print('#', end='') #print #\n            if j != len(s)-1:\n                print('.', end='') #print 1 dot\n            print(s[j], end='') #print the character\n            if j != len(s)-1:\n                print('#', end='') #print #\n            else:\n                print('.'*2, end='') #print 2 dots\n    print()\n"]
2022-04-12 01:06:43.301997 size on output set 4
2022-04-12 01:06:43.302009 num operations 2
2022-04-12 01:06:43.302012 size on input set 1
2022-04-12 01:06:49.604375 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(\"..\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \"..\", end=\" \")\n            elif i == 1 or i == 3:\n                print(\".#\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \".#\", end=\" \")\n            else:\n                print(\"#.\" + char + \".\" + (\"#\" if char in \"AEIOUY\" else \"*\"), end=\"\")\n        print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(\"..\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \"..\", end=\"\") \n            elif i == 1 or i == 3:\n                print(\".#\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \".#\", end=\"\")\n            else:\n                print(\"#.\" + char + \".\" + (\"#\" if char in \"AEIOUY\" else \"*\"), end=\"\")\n        print()\n\nmain()\n"
    }
  ],
  "created": 1649740003,
  "object": "edit"
}
2022-04-12 01:06:49.604493 fix spelling mistakes 2 ['\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(".." + ("#" if char in "AEIOUY" else "*") + "..", end=" ")\n            elif i == 1 or i == 3:\n                print(".#" + ("#" if char in "AEIOUY" else "*") + ".#", end=" ")\n            else:\n                print("#." + char + "." + ("#" if char in "AEIOUY" else "*"), end="")\n        print()\n\nmain()\n', '\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(".." + ("#" if char in "AEIOUY" else "*") + "..", end="") \n            elif i == 1 or i == 3:\n                print(".#" + ("#" if char in "AEIOUY" else "*") + ".#", end="")\n            else:\n                print("#." + char + "." + ("#" if char in "AEIOUY" else "*"), end="")\n        print()\n\nmain()\n']
2022-04-12 01:06:49.604507 size on output set 2
2022-04-12 01:06:49.604510 size on input set 2
2022-04-12 01:06:52.418337 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(\"..\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \"..\", end=\"\")\n            elif i == 1 or i == 3:\n                print(\".#\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \".#\", end=\"\")\n            else:\n                print(\"#.\" + char + \".\" + (\"#\" if char in \"AEIOUY\" else \"*\"), end=\"\")\n        print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(\"..\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \"..\", end=\"\")\n            elif i == 1 or i == 3:\n                print(\".#\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \".#\", end=\"\")\n            else:\n                print(\"#.\" + char + \".\" + (\"#\" if char in \"AEIOUY\" else \"*\"), end=\"\")\n        print()\n\nmain()\n"
    }
  ],
  "created": 1649740009,
  "object": "edit"
}
2022-04-12 01:06:52.418876 fix syntax errors 2 ['\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(".." + ("#" if char in "AEIOUY" else "*") + "..", end="")\n            elif i == 1 or i == 3:\n                print(".#" + ("#" if char in "AEIOUY" else "*") + ".#", end="")\n            else:\n                print("#." + char + "." + ("#" if char in "AEIOUY" else "*"), end="")\n        print()\n\nmain()\n', '\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(".." + ("#" if char in "AEIOUY" else "*") + "..", end="")\n            elif i == 1 or i == 3:\n                print(".#" + ("#" if char in "AEIOUY" else "*") + ".#", end="")\n            else:\n                print("#." + char + "." + ("#" if char in "AEIOUY" else "*"), end="")\n        print()\n\nmain()\n']
2022-04-12 01:06:55.358766 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(\"..\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \"..\", end=\" \")\n            elif i == 1 or i == 3:\n                print(\".#\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \".#\", end=\" \")\n            else:\n                print(\"#.\" + char + \".\" + (\"#\" if char in \"AEIOUY\" else \"*\"), end=\" \")\n        print()\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(\"..\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \"..\", end=\" \")\n            elif i == 1 or i == 3:\n                print(\".#\" + (\"#\" if char in \"AEIOUY\" else \"*\") + \".#\", end=\" \")\n            else:\n                print(\"#.\" + char + \".\" + (\"#\" if char in \"AEIOUY\" else \"*\"), end=\" \")\n        print()\n\nmain()\n"
    }
  ],
  "created": 1649740012,
  "object": "edit"
}
2022-04-12 01:06:55.359112 fix syntax errors 2 ['\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(".." + ("#" if char in "AEIOUY" else "*") + "..", end=" ")\n            elif i == 1 or i == 3:\n                print(".#" + ("#" if char in "AEIOUY" else "*") + ".#", end=" ")\n            else:\n                print("#." + char + "." + ("#" if char in "AEIOUY" else "*"), end=" ")\n        print()\n\nmain()\n', '\n\ndef main():\n    word = input()\n    for i in range(5):\n        for char in word:\n            if i == 0 or i == 4:\n                print(".." + ("#" if char in "AEIOUY" else "*") + "..", end=" ")\n            elif i == 1 or i == 3:\n                print(".#" + ("#" if char in "AEIOUY" else "*") + ".#", end=" ")\n            else:\n                print("#." + char + "." + ("#" if char in "AEIOUY" else "*"), end=" ")\n        print()\n\nmain()\n']
2022-04-12 01:06:55.359155 size on output set 2
2022-04-12 01:06:55.359184 num operations 2
2022-04-12 01:06:55.359193 size on input set 1
2022-04-12 01:06:59.912544 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline().strip()\n    for i in range(0, len(input)):\n        if i % 3 == 2:\n            print(\"..*..\")\n            print(\".*.*.\")\n            print(\"*.{}.*\".format(input[i]))\n            print(\".*.*.\")\n            print(\"..*..\")\n        else:\n            print(\"..#..\")\n            print(\".#.#.\")\n            print(\"#.{}#\".format(input[i]))\n            print(\".#.#.\")\n            print(\"..#..\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    inp = sys.stdin.readline().strip()\n    for i in range(0, len(inp)):\n        if i % 3 == 2:\n            print(\"..*..\")\n            print(\".*.*.\")\n            print(\"*.{}.*\".format(inp[i]))\n            print(\".*.*.\")\n            print(\"..*..\")\n        else:\n            print(\"..#..\")\n            print(\".#.#.\")\n            print(\"#.{}#\".format(inp[i]))\n            print(\".#.#.\")\n            print(\"..#..\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649740015,
  "object": "edit"
}
2022-04-12 01:06:59.912656 fix spelling mistakes 2 ['\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline().strip()\n    for i in range(0, len(input)):\n        if i % 3 == 2:\n            print("..*..")\n            print(".*.*.")\n            print("*.{}.*".format(input[i]))\n            print(".*.*.")\n            print("..*..")\n        else:\n            print("..#..")\n            print(".#.#.")\n            print("#.{}#".format(input[i]))\n            print(".#.#.")\n            print("..#..")\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    inp = sys.stdin.readline().strip()\n    for i in range(0, len(inp)):\n        if i % 3 == 2:\n            print("..*..")\n            print(".*.*.")\n            print("*.{}.*".format(inp[i]))\n            print(".*.*.")\n            print("..*..")\n        else:\n            print("..#..")\n            print(".#.#.")\n            print("#.{}#".format(inp[i]))\n            print(".#.#.")\n            print("..#..")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 01:06:59.912671 size on output set 2
2022-04-12 01:06:59.912675 size on input set 2
2022-04-12 01:07:07.084548 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    inp = sys.stdin.readline().strip().upper()\n    for i in range(0, len(inp)):\n        if i % 3 == 2:\n            print(\"..*..\", end=\"\")\n            print(\".*.*.\", end=\"\")\n            print(\"*.{}.*\".format(inp[i]), end=\"\")\n            print(\".*.*.\", end=\"\")\n            print(\"..*..\", end=\"\")\n        else:\n            print(\"..#..\", end=\"\")\n            print(\".#.#.\", end=\"\")\n            print(\"#.{}#\".format(inp[i]), end=\"\")\n            print(\".#.#.\", end=\"\")\n            print(\"..#..\", end=\"\")\n    print(\"\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    inp = sys.stdin.readline().strip().upper()\n    for i in range(0, len(inp)):\n        if i % 3 == 2:\n            print(\"..*..\", end=\"\")\n            print(\".*.*.\", end=\"\")\n            print(\"*.{}.*\".format(inp[i]), end=\"\")\n            print(\".*.*.\", end=\"\")\n            print(\"..*..\", end=\"\")\n        else:\n            print(\"..#..\", end=\"\")\n            print(\".#.#.\", end=\"\")\n            print(\"#.{}#\".format(inp[i]), end=\"\")\n            print(\".#.#.\", end=\"\")\n            print(\"..#..\", end=\"\")\n    print()\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649740020,
  "object": "edit"
}
2022-04-12 01:07:07.084649 fix syntax errors 2 ['import sys\n\ndef main():\n    inp = sys.stdin.readline().strip().upper()\n    for i in range(0, len(inp)):\n        if i % 3 == 2:\n            print("..*..", end="")\n            print(".*.*.", end="")\n            print("*.{}.*".format(inp[i]), end="")\n            print(".*.*.", end="")\n            print("..*..", end="")\n        else:\n            print("..#..", end="")\n            print(".#.#.", end="")\n            print("#.{}#".format(inp[i]), end="")\n            print(".#.#.", end="")\n            print("..#..", end="")\n    print("")\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\ndef main():\n    inp = sys.stdin.readline().strip().upper()\n    for i in range(0, len(inp)):\n        if i % 3 == 2:\n            print("..*..", end="")\n            print(".*.*.", end="")\n            print("*.{}.*".format(inp[i]), end="")\n            print(".*.*.", end="")\n            print("..*..", end="")\n        else:\n            print("..#..", end="")\n            print(".#.#.", end="")\n            print("#.{}#".format(inp[i]), end="")\n            print(".#.#.", end="")\n            print("..#..", end="")\n    print()\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 01:07:11.612778 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport math\n\ndef main():\n    input_string = sys.stdin.readline().strip()\n    for i in range(0, len(input_string)):\n        if i % 3 == 2:\n            print(\"..*..\")\n            print(\".*.*.\")\n            print(\"*.{}.*\".format(input_string[i]))\n            print(\".*.*.\")\n            print(\"..*..\")\n        else:\n            print(\"..#..\")\n            print(\".#.#.\")\n            print(\"#.{}#\".format(input_string[i]))\n            print(\".#.#.\")\n            print(\"..#..\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport math\n\ndef main():\n    inp = sys.stdin.readline().strip()\n    for i in range(0, len(inp)):\n        if i % 3 == 2:\n            print(\"..*..\")\n            print(\".*.*.\")\n            print(\"*.{}.*\".format(inp[i]))\n            print(\".*.*.\")\n            print(\"..*..\")\n        else:\n            print(\"..#..\")\n            print(\".#.#.\")\n            print(\"#.{}#\".format(inp[i]))\n            print(\".#.#.\")\n            print(\"..#..\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649740027,
  "object": "edit"
}
2022-04-12 01:07:11.612981 fix syntax errors 2 ['\nimport sys\nimport math\n\ndef main():\n    input_string = sys.stdin.readline().strip()\n    for i in range(0, len(input_string)):\n        if i % 3 == 2:\n            print("..*..")\n            print(".*.*.")\n            print("*.{}.*".format(input_string[i]))\n            print(".*.*.")\n            print("..*..")\n        else:\n            print("..#..")\n            print(".#.#.")\n            print("#.{}#".format(input_string[i]))\n            print(".#.#.")\n            print("..#..")\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\nimport math\n\ndef main():\n    inp = sys.stdin.readline().strip()\n    for i in range(0, len(inp)):\n        if i % 3 == 2:\n            print("..*..")\n            print(".*.*.")\n            print("*.{}.*".format(inp[i]))\n            print(".*.*.")\n            print("..*..")\n        else:\n            print("..#..")\n            print(".#.#.")\n            print("#.{}#".format(inp[i]))\n            print(".#.#.")\n            print("..#..")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 01:07:11.613006 size on output set 4
2022-04-12 01:07:11.613038 num operations 2
2022-04-12 01:07:11.613047 size on input set 1
2022-04-12 01:07:20.081742 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Solution\n\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n# Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append(\"*\")\n    else:\n        frames.append(\"#\")\n\n# Print the top frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n\n# Print the middle frame\nfor i in range(length):\n    print(frames[i]+\".\"+letters[i]+\".\"+frames[i], end=\"\")\nprint()\n\n# Print the bottom frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n"
    },
    {
      "index": 1,
      "text": "\n# Solution\n\n#Get input\nword = input()\n\n#Get number of characters\nlength = len(word)\n\n#Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append(\"*\")\n    else:\n        frames.append(\"#\")\n\n#Print the top frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+\".\"+letters[i]+\".\"+frames[i], end=\"\")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n"
    }
  ],
  "created": 1649740031,
  "object": "edit"
}
2022-04-12 01:07:20.081892 fix spelling mistakes 2 ['\n\n# Solution\n\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n# Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append("*")\n    else:\n        frames.append("#")\n\n# Print the top frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n\n# Print the middle frame\nfor i in range(length):\n    print(frames[i]+"."+letters[i]+"."+frames[i], end="")\nprint()\n\n# Print the bottom frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n', '\n# Solution\n\n#Get input\nword = input()\n\n#Get number of characters\nlength = len(word)\n\n#Create a list of the characters\nletters = list(word)\n\n#Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append("*")\n    else:\n        frames.append("#")\n\n#Print the top frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n\n#Print the middle frame\nfor i in range(length):\n    print(frames[i]+"."+letters[i]+"."+frames[i], end="")\nprint()\n\n#Print the bottom frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n']
2022-04-12 01:07:20.081922 size on output set 2
2022-04-12 01:07:20.081929 size on input set 2
2022-04-12 01:07:28.178753 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# Solution\n\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n# Create a list of the frames\nframes = []\nfor i in range(length):\n    if i % 3 == 0:\n        frames.append(\"*\")\n    else:\n        frames.append(\"#\")\n\n# Print the top frame\nfor i in range(length):\n    print(\".\" + frames[i] + \".\", end=\"\")\nprint()\n\n# Print the middle frame\nfor i in range(length):\n    print(frames[i] + \".\" + letters[i] + \".\" + frames[i], end=\"\")\nprint()\n\n# Print the bottom frame\nfor i in range(length):\n    print(\".\" + frames[i] + \".\", end=\"\")\nprint()\n"
    },
    {
      "index": 1,
      "text": "# Solution\n\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n# Create a list of the frames\nframes = []\nfor i in range(length):\n    if i % 3 == 0:\n        frames.append(\"*\")\n    else:\n        frames.append(\"#\")\n\n# Print the top frame\nfor i in range(length):\n    print(\".\" + frames[i] + \".\", end=\"\")\nprint()\n\n# Print the middle frame\nfor i in range(length):\n    print(frames[i] + \".\" + letters[i] + \".\" + frames[i], end=\"\")\nprint()\n\n# Print the bottom frame\nfor i in range(length):\n    print(\".\" + frames[i] + \".\", end=\"\")\nprint()\n"
    }
  ],
  "created": 1649740040,
  "object": "edit"
}
2022-04-12 01:07:28.179171 fix syntax errors 2 ['# Solution\n\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n# Create a list of the frames\nframes = []\nfor i in range(length):\n    if i % 3 == 0:\n        frames.append("*")\n    else:\n        frames.append("#")\n\n# Print the top frame\nfor i in range(length):\n    print("." + frames[i] + ".", end="")\nprint()\n\n# Print the middle frame\nfor i in range(length):\n    print(frames[i] + "." + letters[i] + "." + frames[i], end="")\nprint()\n\n# Print the bottom frame\nfor i in range(length):\n    print("." + frames[i] + ".", end="")\nprint()\n', '# Solution\n\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n# Create a list of the frames\nframes = []\nfor i in range(length):\n    if i % 3 == 0:\n        frames.append("*")\n    else:\n        frames.append("#")\n\n# Print the top frame\nfor i in range(length):\n    print("." + frames[i] + ".", end="")\nprint()\n\n# Print the middle frame\nfor i in range(length):\n    print(frames[i] + "." + letters[i] + "." + frames[i], end="")\nprint()\n\n# Print the bottom frame\nfor i in range(length):\n    print("." + frames[i] + ".", end="")\nprint()\n']
2022-04-12 01:07:46.494785 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Solution\n\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n# Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append(\"*\")\n    else:\n        frames.append(\"#\")\n\n# Print the top frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n\n# Print the middle frame\nfor i in range(length):\n    print(frames[i]+\".\"+letters[i]+\".\"+frames[i], end=\"\")\nprint()\n\n# Print the bottom frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n"
    },
    {
      "index": 1,
      "text": "\n\n# Solution 1\n\n# # Get input\n# word = input()\n\n# # Get number of characters\n# length = len(word)\n\n# # Create a list of the characters\n# letters = list(word)\n\n# # Create a list of the frames\n# frames = []\n# for i in range(length):\n#     if i%3 == 0:\n#         frames.append(\"*\")\n#     else:\n#         frames.append(\"#\")\n\n# # Print the top frame\n# for i in range(length):\n#     print(\".\"+frames[i]+\".\", end=\"\")\n# print()\n\n# # Print the middle frame\n# for i in range(length):\n#     print(frames[i]+\".\"+letters[i]+\".\"+frames[i], end=\"\")\n# print()\n\n# Print the bottom frame\nfor i in range(length):\n    print(\".\"+frames[i]+\".\", end=\"\")\nprint()\n"
    }
  ],
  "created": 1649740048,
  "object": "edit"
}
2022-04-12 01:07:46.495062 fix syntax errors 2 ['\n# Solution\n\n# Get input\nword = input()\n\n# Get number of characters\nlength = len(word)\n\n# Create a list of the characters\nletters = list(word)\n\n# Create a list of the frames\nframes = []\nfor i in range(length):\n    if i%3 == 0:\n        frames.append("*")\n    else:\n        frames.append("#")\n\n# Print the top frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n\n# Print the middle frame\nfor i in range(length):\n    print(frames[i]+"."+letters[i]+"."+frames[i], end="")\nprint()\n\n# Print the bottom frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n', '\n\n# Solution 1\n\n# # Get input\n# word = input()\n\n# # Get number of characters\n# length = len(word)\n\n# # Create a list of the characters\n# letters = list(word)\n\n# # Create a list of the frames\n# frames = []\n# for i in range(length):\n#     if i%3 == 0:\n#         frames.append("*")\n#     else:\n#         frames.append("#")\n\n# # Print the top frame\n# for i in range(length):\n#     print("."+frames[i]+".", end="")\n# print()\n\n# # Print the middle frame\n# for i in range(length):\n#     print(frames[i]+"."+letters[i]+"."+frames[i], end="")\n# print()\n\n# Print the bottom frame\nfor i in range(length):\n    print("."+frames[i]+".", end="")\nprint()\n']
2022-04-12 01:07:46.495094 size on output set 3
2022-04-12 01:07:46.495107 num operations 2
2022-04-12 01:07:46.495112 size on input set 1
2022-04-12 01:07:48.701486 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# SOLUTION\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print(\"..#..\", end=\"\")\n            elif letter in word[2::3]:\n                print(\"..*..\", end=\"\")\n            else:\n                print(\"..#..\", end=\"\")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(\".#.#.\", end=\"\")\n            elif letter in word[2::3]:\n                print(\".*.*.\", end=\"\")\n            else:\n                print(\".#.#.\", end=\"\")\n        elif i == 2:\n            if letter == word[0]:\n                print(\"#.{}#\".format(letter), end=\"\")\n            elif letter in word[2::3]:\n                print(\"*.{}.*\".format(letter), end=\"\")\n            else:\n                print(\"#.{}#\".format(letter), end=\"\")\n        if letter != word[-1]:\n            print(\"*\", end=\"\")\n    print()\n"
    },
    {
      "index": 1,
      "text": "\n\n#SOLUTION:\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print(\"..#..\", end=\"\")\n            elif letter in word[2::3]:\n                print(\"..*..\", end=\"\")\n            else:\n                print(\"..#..\", end=\"\")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(\".#.#.\", end=\"\")\n            elif letter in word[2::3]:\n                print(\".*.*.\", end=\"\")\n            else:\n                print(\".#.#.\", end=\"\")\n        elif i == 2:\n            if letter == word[0]:\n                print(\"#.{}#\".format(letter), end=\"\")\n            elif letter in word[2::3]:\n                print(\"*.{}.*\".format(letter), end=\"\")\n            else:\n                print(\"#.{}#\".format(letter), end=\"\")\n        if letter != word[-1]:\n            print(\"*\", end=\"\")\n    print()\n"
    }
  ],
  "created": 1649740066,
  "object": "edit"
}
2022-04-12 01:07:48.701606 fix spelling mistakes 2 ['\n\n# SOLUTION\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print("..#..", end="")\n            elif letter in word[2::3]:\n                print("..*..", end="")\n            else:\n                print("..#..", end="")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(".#.#.", end="")\n            elif letter in word[2::3]:\n                print(".*.*.", end="")\n            else:\n                print(".#.#.", end="")\n        elif i == 2:\n            if letter == word[0]:\n                print("#.{}#".format(letter), end="")\n            elif letter in word[2::3]:\n                print("*.{}.*".format(letter), end="")\n            else:\n                print("#.{}#".format(letter), end="")\n        if letter != word[-1]:\n            print("*", end="")\n    print()\n', '\n\n#SOLUTION:\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print("..#..", end="")\n            elif letter in word[2::3]:\n                print("..*..", end="")\n            else:\n                print("..#..", end="")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(".#.#.", end="")\n            elif letter in word[2::3]:\n                print(".*.*.", end="")\n            else:\n                print(".#.#.", end="")\n        elif i == 2:\n            if letter == word[0]:\n                print("#.{}#".format(letter), end="")\n            elif letter in word[2::3]:\n                print("*.{}.*".format(letter), end="")\n            else:\n                print("#.{}#".format(letter), end="")\n        if letter != word[-1]:\n            print("*", end="")\n    print()\n']
2022-04-12 01:07:48.701681 size on output set 2
2022-04-12 01:07:48.701686 size on input set 2
2022-04-12 01:07:52.960886 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# SOLUTION:\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print(\"..#..\", end=\"\")\n            elif letter in word[2::3]:\n                print(\"..*..\", end=\"\")\n            else:\n                print(\"..#..\", end=\"\")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(\".#.#.\", end=\"\")\n            elif letter in word[2::3]:\n                print(\".*.*.\", end=\"\")\n            else:\n                print(\".#.#.\", end=\"\")\n        elif i == 2:\n            if letter == word[0]:\n                print(\"#.{}#\".format(letter), end=\"\")\n            elif letter in word[2::3]:\n                print(\"*.{}.*\".format(letter), end=\"\")\n            else:\n                print(\"#.{}#\".format(letter), end=\"\")\n        if letter != word[-1]:\n            print(\"*\", end=\"\")\n    print()\n"
    },
    {
      "index": 1,
      "text": "\n\n# SOLUTION:\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print(\"..#..\", end=\"\")\n            elif letter in word[2::3]:\n                print(\"..*..\", end=\"\")\n            else:\n                print(\"..#..\", end=\"\")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(\".#.#.\", end=\"\")\n            elif letter in word[2::3]:\n                print(\".*.*.\", end=\"\")\n            else:\n                print(\".#.#.\", end=\"\")\n        elif i == 2:\n            if letter == word[0]:\n                print(\"#.{}.#\".format(letter), end=\"\")\n            elif letter in word[2::3]:\n                print(\"*.{}.*\".format(letter), end=\"\")  # *.*.a.*.*\n            else:\n                print(\"#.{}.#\".format(letter), end=\"\")\n        if letter != word[-1]:\n            print(\"*\", end=\"\")\n    print()\n"
    }
  ],
  "created": 1649740068,
  "object": "edit"
}
2022-04-12 01:07:52.961034 fix syntax errors 2 ['\n\n# SOLUTION:\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print("..#..", end="")\n            elif letter in word[2::3]:\n                print("..*..", end="")\n            else:\n                print("..#..", end="")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(".#.#.", end="")\n            elif letter in word[2::3]:\n                print(".*.*.", end="")\n            else:\n                print(".#.#.", end="")\n        elif i == 2:\n            if letter == word[0]:\n                print("#.{}#".format(letter), end="")\n            elif letter in word[2::3]:\n                print("*.{}.*".format(letter), end="")\n            else:\n                print("#.{}#".format(letter), end="")\n        if letter != word[-1]:\n            print("*", end="")\n    print()\n', '\n\n# SOLUTION:\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print("..#..", end="")\n            elif letter in word[2::3]:\n                print("..*..", end="")\n            else:\n                print("..#..", end="")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(".#.#.", end="")\n            elif letter in word[2::3]:\n                print(".*.*.", end="")\n            else:\n                print(".#.#.", end="")\n        elif i == 2:\n            if letter == word[0]:\n                print("#.{}.#".format(letter), end="")\n            elif letter in word[2::3]:\n                print("*.{}.*".format(letter), end="")  # *.*.a.*.*\n            else:\n                print("#.{}.#".format(letter), end="")\n        if letter != word[-1]:\n            print("*", end="")\n    print()\n']
2022-04-12 01:07:56.554637 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# SOLUTION\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print(\"..#..\", end=\"\")\n            elif letter in word[2:len(word):3]:\n                print(\"..*..\", end=\"\")\n            else:\n                print(\"..#..\", end=\"\")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(\".#.#.\", end=\"\")\n            elif letter in word[2:len(word):3]:\n                print(\".*.*.\", end=\"\")\n            else:\n                print(\".#.#.\", end=\"\")\n        elif i == 2:\n            if letter == word[0]:\n                print(\"#.{}#\".format(letter), end=\"\")\n            elif letter in word[2:len(word):3]:\n                print(\"*.{}.*\".format(letter), end=\"\")\n            else:\n                print(\"#.{}#\".format(letter), end=\"\")\n        if letter != word[-1]:\n            print(\"*\", end=\"\")\n    print()\n"
    },
    {
      "index": 1,
      "text": "\n# SOLUTION\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print(\"..#..\", end=\"\")\n            elif letter in word[2::3]:\n                print(\"..*..\", end=\"\")\n            else:\n                print(\"..#..\", end=\"\")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(\".#.#.\", end=\"\")\n            elif letter in word[2::3]:\n                print(\".*.*.\", end=\"\")\n            else:\n                print(\".#.#.\", end=\"\")\n        elif i == 2:\n            if letter == word[0]:\n                print(\"#.{}#\".format(letter), end=\"\")\n            elif letter in word[2::3]:\n                print(\"*.{}.*\".format(letter), end=\"\")\n            else:\n                print(\"#.{}#\".format(letter), end=\"\")\n        if letter != word[-1]:\n            print(\"*\", end=\"\")\n    print()\n"
    }
  ],
  "created": 1649740073,
  "object": "edit"
}
2022-04-12 01:07:56.554919 fix syntax errors 2 ['\n\n# SOLUTION\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print("..#..", end="")\n            elif letter in word[2:len(word):3]:\n                print("..*..", end="")\n            else:\n                print("..#..", end="")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(".#.#.", end="")\n            elif letter in word[2:len(word):3]:\n                print(".*.*.", end="")\n            else:\n                print(".#.#.", end="")\n        elif i == 2:\n            if letter == word[0]:\n                print("#.{}#".format(letter), end="")\n            elif letter in word[2:len(word):3]:\n                print("*.{}.*".format(letter), end="")\n            else:\n                print("#.{}#".format(letter), end="")\n        if letter != word[-1]:\n            print("*", end="")\n    print()\n', '\n# SOLUTION\nword = input()\n\nfor i in range(5):\n    for letter in word:\n        if i == 0 or i == 4:\n            if letter == word[0]:\n                print("..#..", end="")\n            elif letter in word[2::3]:\n                print("..*..", end="")\n            else:\n                print("..#..", end="")\n        elif i == 1 or i == 3:\n            if letter == word[0]:\n                print(".#.#.", end="")\n            elif letter in word[2::3]:\n                print(".*.*.", end="")\n            else:\n                print(".#.#.", end="")\n        elif i == 2:\n            if letter == word[0]:\n                print("#.{}#".format(letter), end="")\n            elif letter in word[2::3]:\n                print("*.{}.*".format(letter), end="")\n            else:\n                print("#.{}#".format(letter), end="")\n        if letter != word[-1]:\n            print("*", end="")\n    print()\n']
2022-04-12 01:07:56.555001 size on output set 4
2022-04-12 01:07:56.555019 num operations 2
2022-04-12 01:07:56.555026 size on input set 1
2022-04-12 01:08:07.670715 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\npeterpan_frame = [\n    \"..#..\",\n    \".#.#.\",\n    \"#.X.#\",\n    \".#.#.\",\n    \"..#..\"\n    ]\n\nwendy_frame = [\n    \"..*..\",\n    \".*.*.\",\n    \"*.X.*\",\n    \".*.*.\",\n    \"..*..\"\n    ]\n\ndef create_frame(word, frame):\n    frame_word = \"\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peterpan_frame[0]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peterpan_frame[1]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace(\"X\", word[i])\n        else:\n            frame_word += peterpan_frame[2].replace(\"X\", word[i])\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peterpan_frame[3]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peterpan_frame[4]\n    frame_word += \"\\n\"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peter_pan_frame))\n"
    },
    {
      "index": 1,
      "text": "\n\npeter_pan_frames = [\n    \"..#..\",\n    \".#.#.\",\n    \"#.X.#\",\n    \".#.#.\",\n    \"..#..\"\n    ]\n\nwendy_frames = [\n    \"..*..\",\n    \".*.*.\",\n    \"*.X.*\",\n    \".*.*.\",\n    \"..*..\"\n    ]\n\ndef create_frames(word, frame):\n    frame_word = \"\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[0]\n        else:\n            frame_word += peter_pan_frames[0]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[1]\n        else:\n            frame_word += peter_pan_frames[1]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[2].replace(\"X\", word[i])\n        else:\n            frame_word += peter_pan_frames[2].replace(\"X\", word[i])\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[3]\n        else:\n            frame_word += peter_pan_frames[3]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[4]\n        else:\n            frame_word += peter_pan_frames[4]\n    frame_word += \"\\n\"\n    return frame_word\n\nword = input()\nprint(create_frames(word, peter_pan_frames))\n"
    }
  ],
  "created": 1649740076,
  "object": "edit"
}
2022-04-12 01:08:07.670861 fix spelling mistakes 2 ['\n\npeterpan_frame = [\n    "..#..",\n    ".#.#.",\n    "#.X.#",\n    ".#.#.",\n    "..#.."\n    ]\n\nwendy_frame = [\n    "..*..",\n    ".*.*.",\n    "*.X.*",\n    ".*.*.",\n    "..*.."\n    ]\n\ndef create_frame(word, frame):\n    frame_word = ""\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peterpan_frame[0]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peterpan_frame[1]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace("X", word[i])\n        else:\n            frame_word += peterpan_frame[2].replace("X", word[i])\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peterpan_frame[3]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peterpan_frame[4]\n    frame_word += "\\n"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peter_pan_frame))\n', '\n\npeter_pan_frames = [\n    "..#..",\n    ".#.#.",\n    "#.X.#",\n    ".#.#.",\n    "..#.."\n    ]\n\nwendy_frames = [\n    "..*..",\n    ".*.*.",\n    "*.X.*",\n    ".*.*.",\n    "..*.."\n    ]\n\ndef create_frames(word, frame):\n    frame_word = ""\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[0]\n        else:\n            frame_word += peter_pan_frames[0]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[1]\n        else:\n            frame_word += peter_pan_frames[1]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[2].replace("X", word[i])\n        else:\n            frame_word += peter_pan_frames[2].replace("X", word[i])\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[3]\n        else:\n            frame_word += peter_pan_frames[3]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[4]\n        else:\n            frame_word += peter_pan_frames[4]\n    frame_word += "\\n"\n    return frame_word\n\nword = input()\nprint(create_frames(word, peter_pan_frames))\n']
2022-04-12 01:08:07.670938 size on output set 2
2022-04-12 01:08:07.670947 size on input set 2
2022-04-12 01:08:10.210783 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\npeterpan_frame = [\n    \"..#..\",\n    \".#.#.\",\n    \"#.X.#\",\n    \".#.#.\",\n    \"..#..\"\n    ]\n\nwendy_frame = [\n    \"..*..\",\n    \".*.*.\",\n    \"*.X.*\",\n    \".*.*.\",\n    \"..*..\"\n    ]\n\ndef create_frame(word, frame):\n    frame_word = \"\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peterpan_frame[0]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peterpan_frame[1]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace(\"X\", word[i])\n        else:\n            frame_word += peterpan_frame[2].replace(\"X\", word[i])\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peterpan_frame[3]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peterpan_frame[4]\n    frame_word += \"\\n\"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peterpan_frame))\n"
    },
    {
      "index": 1,
      "text": "\n\npeterpan_frame = [\n    \"..#..\",\n    \".#.#.\",\n    \"#.X.#\",\n    \".#.#.\",\n    \"..#..\"\n    ]\n\nwendy_frame = [\n    \"..*..\",\n    \".*.*.\",\n    \"*.X.*\",\n    \".*.*.\",\n    \"..*..\"\n    ]\n\ndef create_frame(word, frame):\n    frame_word = \"\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peterpan_frame[0]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peterpan_frame[1]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace(\"X\", word[i])\n        else:\n            frame_word += peterpan_frame[2].replace(\"X\", word[i])\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peterpan_frame[3]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peterpan_frame[4]\n    frame_word += \"\\n\"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peterpan_frame))\n"
    }
  ],
  "created": 1649740087,
  "object": "edit"
}
2022-04-12 01:08:10.211069 fix syntax errors 2 ['\n\npeterpan_frame = [\n    "..#..",\n    ".#.#.",\n    "#.X.#",\n    ".#.#.",\n    "..#.."\n    ]\n\nwendy_frame = [\n    "..*..",\n    ".*.*.",\n    "*.X.*",\n    ".*.*.",\n    "..*.."\n    ]\n\ndef create_frame(word, frame):\n    frame_word = ""\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peterpan_frame[0]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peterpan_frame[1]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace("X", word[i])\n        else:\n            frame_word += peterpan_frame[2].replace("X", word[i])\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peterpan_frame[3]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peterpan_frame[4]\n    frame_word += "\\n"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peterpan_frame))\n', '\n\npeterpan_frame = [\n    "..#..",\n    ".#.#.",\n    "#.X.#",\n    ".#.#.",\n    "..#.."\n    ]\n\nwendy_frame = [\n    "..*..",\n    ".*.*.",\n    "*.X.*",\n    ".*.*.",\n    "..*.."\n    ]\n\ndef create_frame(word, frame):\n    frame_word = ""\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[0]\n        else:\n            frame_word += peterpan_frame[0]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[1]\n        else:\n            frame_word += peterpan_frame[1]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[2].replace("X", word[i])\n        else:\n            frame_word += peterpan_frame[2].replace("X", word[i])\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[3]\n        else:\n            frame_word += peterpan_frame[3]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frame[4]\n        else:\n            frame_word += peterpan_frame[4]\n    frame_word += "\\n"\n    return frame_word\n\nword = input()\nprint(create_frame(word, peterpan_frame))\n']
2022-04-12 01:08:12.612607 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\npeter_pan_frames = [\n    \"..#..\",\n    \".#.#.\",\n    \"#.X.#\",\n    \".#.#.\",\n    \"..#..\"\n]\n\nwendy_frames = [\n    \"..*..\",\n    \".*.*.\",\n    \"*.X.*\",\n    \".*.*.\",\n    \"..*..\"\n]\n\ndef create_frames(word, frame):\n    frame_word = \"\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[0]\n        else:\n            frame_word += peter_pan_frames[0]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[1]\n        else:\n            frame_word += peter_pan_frames[1]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[2].replace(\"X\", word[i])\n        else:\n            frame_word += peter_pan_frames[2].replace(\"X\", word[i])\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[3]\n        else:\n            frame_word += peter_pan_frames[3]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[4]\n        else:\n            frame_word += peter_pan_frames[4]\n    frame_word += \"\\n\"\n    return frame_word\n\nword = input()\nprint(create_frames(word, peter_pan_frames))\n"
    },
    {
      "index": 1,
      "text": "\n\npeter_pan_frames = [\n    \"..#..\",\n    \".#.#.\",\n    \"#.X.#\",\n    \".#.#.\",\n    \"..#..\"\n]\n\nwendy_frames = [\n    \"..*..\",\n    \".*.*.\",\n    \"*.X.*\",\n    \".*.*.\",\n    \"..*..\"\n]\n\ndef create_frames(word, frame):\n    frame_word = \"\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[0]\n        else:\n            frame_word += peter_pan_frames[0]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[1]\n        else:\n            frame_word += peter_pan_frames[1]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[2].replace(\"X\", word[i])\n        else:\n            frame_word += peter_pan_frames[2].replace(\"X\", word[i])\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[3]\n        else:\n            frame_word += peter_pan_frames[3]\n    frame_word += \"\\n\"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[4]\n        else:\n            frame_word += peter_pan_frames[4]\n    frame_word += \"\\n\"\n    return frame_word\n\nword = input()\nprint(create_frames(word, peter_pan_frames))\n"
    }
  ],
  "created": 1649740090,
  "object": "edit"
}
2022-04-12 01:08:12.612796 fix syntax errors 2 ['\npeter_pan_frames = [\n    "..#..",\n    ".#.#.",\n    "#.X.#",\n    ".#.#.",\n    "..#.."\n]\n\nwendy_frames = [\n    "..*..",\n    ".*.*.",\n    "*.X.*",\n    ".*.*.",\n    "..*.."\n]\n\ndef create_frames(word, frame):\n    frame_word = ""\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[0]\n        else:\n            frame_word += peter_pan_frames[0]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[1]\n        else:\n            frame_word += peter_pan_frames[1]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[2].replace("X", word[i])\n        else:\n            frame_word += peter_pan_frames[2].replace("X", word[i])\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[3]\n        else:\n            frame_word += peter_pan_frames[3]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[4]\n        else:\n            frame_word += peter_pan_frames[4]\n    frame_word += "\\n"\n    return frame_word\n\nword = input()\nprint(create_frames(word, peter_pan_frames))\n', '\n\npeter_pan_frames = [\n    "..#..",\n    ".#.#.",\n    "#.X.#",\n    ".#.#.",\n    "..#.."\n]\n\nwendy_frames = [\n    "..*..",\n    ".*.*.",\n    "*.X.*",\n    ".*.*.",\n    "..*.."\n]\n\ndef create_frames(word, frame):\n    frame_word = ""\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[0]\n        else:\n            frame_word += peter_pan_frames[0]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[1]\n        else:\n            frame_word += peter_pan_frames[1]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[2].replace("X", word[i])\n        else:\n            frame_word += peter_pan_frames[2].replace("X", word[i])\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[3]\n        else:\n            frame_word += peter_pan_frames[3]\n    frame_word += "\\n"\n    for i in range(len(word)):\n        if i % 3 == 0:\n            frame_word += wendy_frames[4]\n        else:\n            frame_word += peter_pan_frames[4]\n    frame_word += "\\n"\n    return frame_word\n\nword = input()\nprint(create_frames(word, peter_pan_frames))\n']
2022-04-12 01:08:12.612825 size on output set 3
2022-04-12 01:08:12.612919 num operations 2
2022-04-12 01:08:12.612924 size on input set 1
2022-04-12 01:08:14.674778 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Solution \n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n            elif i == 1:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 2:\n                print(\"#.\" + c + \".#\" if c in \"AEIOU\" else \"*.\" + c + \".*\", end=\"\")\n            elif i == 3:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 4:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n# Solution \n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n            elif i == 1:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 2:\n                print(\"#.\" + c + \".#\" if c in \"AEIOU\" else \"*.\" + c + \".*\", end=\"\")\n            elif i == 3:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 4:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649740092,
  "object": "edit"
}
2022-04-12 01:08:14.675103 fix spelling mistakes 2 ['\n\n# Solution \n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n            elif i == 1:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 2:\n                print("#." + c + ".#" if c in "AEIOU" else "*." + c + ".*", end="")\n            elif i == 3:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 4:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n        print()\n\nif __name__ == "__main__":\n    main()\n', '\n\n# Solution \n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n            elif i == 1:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 2:\n                print("#." + c + ".#" if c in "AEIOU" else "*." + c + ".*", end="")\n            elif i == 3:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 4:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n        print()\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 01:08:14.675149 size on output set 1
2022-04-12 01:08:14.675156 size on input set 1
2022-04-12 01:08:16.808458 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# Solution \n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n            elif i == 1:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 2:\n                print(\"#.\" + c + \".#\" if c in \"AEIOU\" else \"*.\" + c + \".*\", end=\"\")\n            elif i == 3:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 4:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n# Solution \n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n            elif i == 1:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 2:\n                print(\"#.\" + c + \".#\" if c in \"AEIOU\" else \"*.\" + c + \".*\", end=\"\")\n            elif i == 3:\n                print(\".#.#.\" if c in \"AEIOU\" else \".*.*.\", end=\"\")\n            elif i == 4:\n                print(\"..#..\" if c in \"AEIOU\" else \"..*..\", end=\"\")\n        print()\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649740094,
  "object": "edit"
}
2022-04-12 01:08:16.808873 fix syntax errors 2 ['# Solution \n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n            elif i == 1:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 2:\n                print("#." + c + ".#" if c in "AEIOU" else "*." + c + ".*", end="")\n            elif i == 3:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 4:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n        print()\n\nif __name__ == "__main__":\n    main()\n', '\n# Solution \n\ndef main():\n    word = input()\n    for i in range(5):\n        for c in word:\n            if i == 0:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n            elif i == 1:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 2:\n                print("#." + c + ".#" if c in "AEIOU" else "*." + c + ".*", end="")\n            elif i == 3:\n                print(".#.#." if c in "AEIOU" else ".*.*.", end="")\n            elif i == 4:\n                print("..#.." if c in "AEIOU" else "..*..", end="")\n        print()\n\nif __name__ == "__main__":\n    main()\n']
2022-04-12 01:08:16.808974 size on output set 2
2022-04-12 01:08:16.809020 num operations 2
2022-04-12 01:08:16.809035 size on input set 1
2022-04-12 01:08:28.338725 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == ' ': return '     '\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == 'a': return '..#..'\n        if ch == 'b': return '.#.#.'\n        if ch == 'c': return '#..#.'\n        if ch == 'd': return '#.#..'\n        if ch == 'e': return '#...#'\n        if ch == 'f': return '#..#.'\n        if ch == 'g': return '##.##'\n        if ch == 'h': return '#.##.'\n        if ch == 'i': return '.#..#'\n        if ch == 'j': return '.##.#'\n        if ch == 'k': return '#.#.#'\n        if ch == 'l': return '.###.'\n        if ch == 'm': return '##..#'\n        if ch == 'n': return '##.#.'\n        if ch == 'o': return '###..'\n        if ch == 'p': return '##...'\n        if ch == 'q': return '##.#.'\n        if ch == 'r': return '##..#'\n        if ch == 's': return '#.#.#.'\n        if ch == 't': return '##...'\n        if ch == 'u': return '#.###'\n        if ch == 'v': return '#.###'\n        if ch == 'w': return '.#.##.'\n        if ch == 'x': return '#.##.#'\n        if ch == 'y': return '#.###.'\n        if ch == 'z': return '###.#.'\n        if ch == '.': return '..*..'\n        if ch == ',': return '.*.*.'\n        if ch == '!': return '*.!.*'\n        if ch == '?': return '*?.!*'\n        if ch == '-': return '*-.-*'\n        if ch == '\\'': return '*.*..'\n        if ch == '\"': return '*.*.*.'\n        if ch == ':': return '*.::*'\n        if ch == ';': return '*.:.*'\n        if ch == '=': return '*=.=*'\n        if ch == '+': return '*=.=*'\n        if ch == '*': return '*.**.'\n        if ch == '/': return '*/./*'\n        if ch == '\\\\': return '*\\\\.*/'\n        if ch == '@': return '*@.@*'\n        if ch == '#': return '*#.#*'\n        if ch == '$': return '*.$$.'\n        if ch == '%': return '*%.%*'\n        if ch == '^': return '*^.^*'\n        if ch == '&': return '*.&&.'\n        if ch == '(': return '*(.(*'\n        if ch == ')': return '*)).*'\n        if ch == '[': return '*[.[*'\n        if ch == ']': return '*].]*'\n        if ch == '{': return '*{.{*'\n        if ch == '}': return '*}.}*'\n        if ch == '<': return '*<.<*'\n        if ch == '>': return '*>.>*'\n        if ch == '_': return '*.__.'\n        if ch == '~': return '*~.~*'\n        if ch == '`': return '*.``.'\n        if ch == '|': return '*.|.*'\n        if ch == '0': return '###...#'\n        if ch == '1': return '..##..#'\n        if ch == '2': return '..#..##'\n        if ch == '3': return '..###..'\n        if ch == '4': return '.#.##..'\n        if ch == '5': return '.#..##.'\n        if ch == '6': return '.#...##'\n        if ch == '7': return '##..#..'\n        if ch == '8': return '##.#...'\n        if ch == '9': return '##...#.'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace('\\n','')\n    line = line.replace('\\r','')\n    line = line.replace('\\t','')\n    line = line.replace(' ','')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write('\\n')\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == ' ': return '     '\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == 'a': return '..#..'\n        if ch == 'b': return '.#.#.'\n        if ch == 'c': return '#..#.'\n        if ch == 'd': return '#.#..'\n        if ch == 'e': return '#...#'\n        if ch == 'f': return '#..#.'\n        if ch == 'g': return '##.##'\n        if ch == 'h': return '#.##.'\n        if ch == 'i': return '.#..#'\n        if ch == 'j': return '.##.#'\n        if ch == 'k': return '#.#.#'\n        if ch == 'l': return '.###.'\n        if ch == 'm': return '##..#'\n        if ch == 'n': return '##.#.'\n        if ch == 'o': return '###..'\n        if ch == 'p': return '##...'\n        if ch == 'q': return '##.#.'\n        if ch == 'r': return '##..#'\n        if ch == 's': return '#.#.#.'\n        if ch == 't': return '##...#'\n        if ch == 'u': return '#.####'\n        if ch == 'v': return '#.####'\n        if ch == 'w': return '.#.##.'\n        if ch == 'x': return '#.##.#'\n        if ch == 'y': return '#.###.'\n        if ch == 'z': return '###.#.'\n        if ch == '.': return '..*..'\n        if ch == ',': return '.*.*.'\n        if ch == '!': return '*.!.*'\n        if ch == '?': return '*?.!*'\n        if ch == '-': return '*-.-*'\n        if ch == '\\'': return '*.*..'\n        if ch == '\"': return '*.*.*.'\n        if ch == ':': return '*.::*'\n        if ch == ';': return '*.:.*'\n        if ch == '=': return '*=.=*'\n        if ch == '+': return '*=.=*'\n        if ch == '*': return '*.**.'\n        if ch == '/': return '*/./*'\n        if ch == '\\\\': return '*\\\\.*/'\n        if ch == '@': return '*@.@*'\n        if ch == '#': return '*#.#*'\n        if ch == '$': return '*.$$.'\n        if ch == '%': return '*%.%*'\n        if ch == '^': return '*^.^*'\n        if ch == '&': return '*.&&.'\n        if ch == '(': return '*(.(*'\n        if ch == ')': return '*)).*'\n        if ch == '[': return '*[.[*'\n        if ch == ']': return '*].]*'\n        if ch == '{': return '*{.{*'\n        if ch == '}': return '*}.}*'\n        if ch == '<': return '*<.<*'\n        if ch == '>': return '*>.>*'\n        if ch == '_': return '*.__.'\n        if ch == '~': return '*~.~*'\n        if ch == '`': return '*.``.'\n        if ch == '|': return '*.|.*'\n        if ch == '0': return '###...#'\n        if ch == '1': return '..##..#'\n        if ch == '2': return '..#..##'\n        if ch == '3': return '..###..'\n        if ch == '4': return '.#.##..'\n        if ch == '5': return '.#..##.'\n        if ch == '6': return '.#...##'\n        if ch == '7': return '##..#..'\n        if ch == '8': return '##.#...'\n        if ch == '9': return '##...#.'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace('\\n','')\n    line = line.replace('\\r','')\n    line = line.replace('\\t','')\n    line = line.replace(' ','')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write('\\n')\n\nmain()\n"
    }
  ],
  "created": 1649740097,
  "object": "edit"
}
2022-04-12 01:08:28.339113 fix spelling mistakes 2 ['\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == \' \': return \'     \'\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == \'a\': return \'..#..\'\n        if ch == \'b\': return \'.#.#.\'\n        if ch == \'c\': return \'#..#.\'\n        if ch == \'d\': return \'#.#..\'\n        if ch == \'e\': return \'#...#\'\n        if ch == \'f\': return \'#..#.\'\n        if ch == \'g\': return \'##.##\'\n        if ch == \'h\': return \'#.##.\'\n        if ch == \'i\': return \'.#..#\'\n        if ch == \'j\': return \'.##.#\'\n        if ch == \'k\': return \'#.#.#\'\n        if ch == \'l\': return \'.###.\'\n        if ch == \'m\': return \'##..#\'\n        if ch == \'n\': return \'##.#.\'\n        if ch == \'o\': return \'###..\'\n        if ch == \'p\': return \'##...\'\n        if ch == \'q\': return \'##.#.\'\n        if ch == \'r\': return \'##..#\'\n        if ch == \'s\': return \'#.#.#.\'\n        if ch == \'t\': return \'##...\'\n        if ch == \'u\': return \'#.###\'\n        if ch == \'v\': return \'#.###\'\n        if ch == \'w\': return \'.#.##.\'\n        if ch == \'x\': return \'#.##.#\'\n        if ch == \'y\': return \'#.###.\'\n        if ch == \'z\': return \'###.#.\'\n        if ch == \'.\': return \'..*..\'\n        if ch == \',\': return \'.*.*.\'\n        if ch == \'!\': return \'*.!.*\'\n        if ch == \'?\': return \'*?.!*\'\n        if ch == \'-\': return \'*-.-*\'\n        if ch == \'\\\'\': return \'*.*..\'\n        if ch == \'"\': return \'*.*.*.\'\n        if ch == \':\': return \'*.::*\'\n        if ch == \';\': return \'*.:.*\'\n        if ch == \'=\': return \'*=.=*\'\n        if ch == \'+\': return \'*=.=*\'\n        if ch == \'*\': return \'*.**.\'\n        if ch == \'/\': return \'*/./*\'\n        if ch == \'\\\\\': return \'*\\\\.*/\'\n        if ch == \'@\': return \'*@.@*\'\n        if ch == \'#\': return \'*#.#*\'\n        if ch == \'$\': return \'*.$$.\'\n        if ch == \'%\': return \'*%.%*\'\n        if ch == \'^\': return \'*^.^*\'\n        if ch == \'&\': return \'*.&&.\'\n        if ch == \'(\': return \'*(.(*\'\n        if ch == \')\': return \'*)).*\'\n        if ch == \'[\': return \'*[.[*\'\n        if ch == \']\': return \'*].]*\'\n        if ch == \'{\': return \'*{.{*\'\n        if ch == \'}\': return \'*}.}*\'\n        if ch == \'<\': return \'*<.<*\'\n        if ch == \'>\': return \'*>.>*\'\n        if ch == \'_\': return \'*.__.\'\n        if ch == \'~\': return \'*~.~*\'\n        if ch == \'`\': return \'*.``.\'\n        if ch == \'|\': return \'*.|.*\'\n        if ch == \'0\': return \'###...#\'\n        if ch == \'1\': return \'..##..#\'\n        if ch == \'2\': return \'..#..##\'\n        if ch == \'3\': return \'..###..\'\n        if ch == \'4\': return \'.#.##..\'\n        if ch == \'5\': return \'.#..##.\'\n        if ch == \'6\': return \'.#...##\'\n        if ch == \'7\': return \'##..#..\'\n        if ch == \'8\': return \'##.#...\'\n        if ch == \'9\': return \'##...#.\'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace(\'\\n\',\'\')\n    line = line.replace(\'\\r\',\'\')\n    line = line.replace(\'\\t\',\'\')\n    line = line.replace(\' \',\'\')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write(\'\\n\')\n\nmain()\n', '\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == \' \': return \'     \'\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == \'a\': return \'..#..\'\n        if ch == \'b\': return \'.#.#.\'\n        if ch == \'c\': return \'#..#.\'\n        if ch == \'d\': return \'#.#..\'\n        if ch == \'e\': return \'#...#\'\n        if ch == \'f\': return \'#..#.\'\n        if ch == \'g\': return \'##.##\'\n        if ch == \'h\': return \'#.##.\'\n        if ch == \'i\': return \'.#..#\'\n        if ch == \'j\': return \'.##.#\'\n        if ch == \'k\': return \'#.#.#\'\n        if ch == \'l\': return \'.###.\'\n        if ch == \'m\': return \'##..#\'\n        if ch == \'n\': return \'##.#.\'\n        if ch == \'o\': return \'###..\'\n        if ch == \'p\': return \'##...\'\n        if ch == \'q\': return \'##.#.\'\n        if ch == \'r\': return \'##..#\'\n        if ch == \'s\': return \'#.#.#.\'\n        if ch == \'t\': return \'##...#\'\n        if ch == \'u\': return \'#.####\'\n        if ch == \'v\': return \'#.####\'\n        if ch == \'w\': return \'.#.##.\'\n        if ch == \'x\': return \'#.##.#\'\n        if ch == \'y\': return \'#.###.\'\n        if ch == \'z\': return \'###.#.\'\n        if ch == \'.\': return \'..*..\'\n        if ch == \',\': return \'.*.*.\'\n        if ch == \'!\': return \'*.!.*\'\n        if ch == \'?\': return \'*?.!*\'\n        if ch == \'-\': return \'*-.-*\'\n        if ch == \'\\\'\': return \'*.*..\'\n        if ch == \'"\': return \'*.*.*.\'\n        if ch == \':\': return \'*.::*\'\n        if ch == \';\': return \'*.:.*\'\n        if ch == \'=\': return \'*=.=*\'\n        if ch == \'+\': return \'*=.=*\'\n        if ch == \'*\': return \'*.**.\'\n        if ch == \'/\': return \'*/./*\'\n        if ch == \'\\\\\': return \'*\\\\.*/\'\n        if ch == \'@\': return \'*@.@*\'\n        if ch == \'#\': return \'*#.#*\'\n        if ch == \'$\': return \'*.$$.\'\n        if ch == \'%\': return \'*%.%*\'\n        if ch == \'^\': return \'*^.^*\'\n        if ch == \'&\': return \'*.&&.\'\n        if ch == \'(\': return \'*(.(*\'\n        if ch == \')\': return \'*)).*\'\n        if ch == \'[\': return \'*[.[*\'\n        if ch == \']\': return \'*].]*\'\n        if ch == \'{\': return \'*{.{*\'\n        if ch == \'}\': return \'*}.}*\'\n        if ch == \'<\': return \'*<.<*\'\n        if ch == \'>\': return \'*>.>*\'\n        if ch == \'_\': return \'*.__.\'\n        if ch == \'~\': return \'*~.~*\'\n        if ch == \'`\': return \'*.``.\'\n        if ch == \'|\': return \'*.|.*\'\n        if ch == \'0\': return \'###...#\'\n        if ch == \'1\': return \'..##..#\'\n        if ch == \'2\': return \'..#..##\'\n        if ch == \'3\': return \'..###..\'\n        if ch == \'4\': return \'.#.##..\'\n        if ch == \'5\': return \'.#..##.\'\n        if ch == \'6\': return \'.#...##\'\n        if ch == \'7\': return \'##..#..\'\n        if ch == \'8\': return \'##.#...\'\n        if ch == \'9\': return \'##...#.\'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace(\'\\n\',\'\')\n    line = line.replace(\'\\r\',\'\')\n    line = line.replace(\'\\t\',\'\')\n    line = line.replace(\' \',\'\')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write(\'\\n\')\n\nmain()\n']
2022-04-12 01:08:28.339220 size on output set 2
2022-04-12 01:08:28.339227 size on input set 2
2022-04-12 01:08:49.430763 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == ' ': return '     '\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == 'a': return '..#..'\n        if ch == 'b': return '.#.#.'\n        if ch == 'c': return '#..#.'\n        if ch == 'd': return '#.#..'\n        if ch == 'e': return '#...#'\n        if ch == 'f': return '#..#.'\n        if ch == 'g': return '##.##'\n        if ch == 'h': return '#.##.'\n        if ch == 'i': return '.#..#'\n        if ch == 'j': return '.##.#'\n        if ch == 'k': return '#.#.#'\n        if ch == 'l': return '.###.'\n        if ch == 'm': return '##..#'\n        if ch == 'n': return '##.#.'\n        if ch == 'o': return '###..'\n        if ch == 'p': return '##...'\n        if ch == 'q': return '##.#.'\n        if ch == 'r': return '##..#'\n        if ch == 's': return '#.#.#.'\n        if ch == 't': return '##...#'\n        if ch == 'u': return '#.####'\n        if ch == 'v': return '#.####'\n        if ch == 'w': return '.#.##.'\n        if ch == 'x': return '#.##.#'\n        if ch == 'y': return '#.###.'\n        if ch == 'z': return '###.#.'\n        if ch == '.': return '..*..'\n        if ch == ',': return '.*.*.'\n        if ch == '!': return '*.!.*'\n        if ch == '?': return '*?.!*'\n        if ch == '-': return '*-.-*'\n        if ch == '\\'': return '*.*..'\n        if ch == '\"': return '*.*.*.'\n        if ch == ':': return '*.::*'\n        if ch == ';': return '*.:.*'\n        if ch == '=': return '*=.=*'\n        if ch == '+': return '*=.=*'\n        if ch == '*': return '*.**.'\n        if ch == '/': return '*/./*'\n        if ch == '\\\\': return '*\\\\.*/'\n        if ch == '@': return '*@.@*'\n        if ch == '#': return '*#.#*'\n        if ch == '$': return '*.$$.'\n        if ch == '%': return '*%.%*'\n        if ch == '^': return '*^.^*'\n        if ch == '&': return '*.&&.'\n        if ch == '(': return '*(.(*'\n        if ch == ')': return '*)).*'\n        if ch == '[': return '*[.[*'\n        if ch == ']': return '*].]*'\n        if ch == '{': return '*{.{*'\n        if ch == '}': return '*}.}*'\n        if ch == '<': return '*<.<*'\n        if ch == '>': return '*>.>*'\n        if ch == '_': return '*.__.'\n        if ch == '~': return '*~.~*'\n        if ch == '`': return '*.``.'\n        if ch == '|': return '*.|.*'\n        if ch == '0': return '###...#'\n        if ch == '1': return '..##..#'\n        if ch == '2': return '..#..##'\n        if ch == '3': return '..###..'\n        if ch == '4': return '.#.##..'\n        if ch == '5': return '.#..##.'\n        if ch == '6': return '.#...##'\n        if ch == '7': return '##..#..'\n        if ch == '8': return '##.#...'\n        if ch == '9': return '##...#.'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace('\\n','')\n    line = line.replace('\\r','')\n    line = line.replace('\\t','')\n    line = line.replace(' ','')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write('\\n')\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == ' ': return '     '\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == 'a': return '..#..'\n        if ch == 'b': return '.#.#.'\n        if ch == 'c': return '#..#.'\n        if ch == 'd': return '#.#..'\n        if ch == 'e': return '#...#'\n        if ch == 'f': return '#..#.'\n        if ch == 'g': return '##.##'\n        if ch == 'h': return '#.##.'\n        if ch == 'i': return '.#..#'\n        if ch == 'j': return '.##.#'\n        if ch == 'k': return '#.#.#'\n        if ch == 'l': return '.###.'\n        if ch == 'm': return '##..#'\n        if ch == 'n': return '##.#.'\n        if ch == 'o': return '###..'\n        if ch == 'p': return '##...'\n        if ch == 'q': return '##.#.'\n        if ch == 'r': return '##..#'\n        if ch == 's': return '#.#.#.'\n        if ch == 't': return '##...#'\n        if ch == 'u': return '#.####'\n        if ch == 'v': return '#.####'\n        if ch == 'w': return '.#.##.'\n        if ch == 'x': return '#.##.#'\n        if ch == 'y': return '#.###.'\n        if ch == 'z': return '###.#.'\n        if ch == '.': return '..*..'\n        if ch == ',': return '.*.*.'\n        if ch == '!': return '*.!.*'\n        if ch == '?': return '*?.!*'\n        if ch == '-': return '*-.-*'\n        if ch == '\\'': return '*.*..'\n        if ch == '\"': return '*.*.*.'\n        if ch == ':': return '*.::*'\n        if ch == ';': return '*.:.*'\n        if ch == '=': return '*=.=*'\n        if ch == '+': return '*=.=*'\n        if ch == '*': return '*.**.'\n        if ch == '/': return '*/./*'\n        if ch == '\\\\': return '*\\\\.*/'\n        if ch == '@': return '*@.@*'\n        if ch == '#': return '*#.#*'\n        if ch == '$': return '*.$$.'\n        if ch == '%': return '*%.%*'\n        if ch == '^': return '*^.^*'\n        if ch == '&': return '*.&&.'\n        if ch == '(': return '*(.(*'\n        if ch == ')': return '*)).*'\n        if ch == '[': return '*[.[*'\n        if ch == ']': return '*].]*'\n        if ch == '{': return '*{.{*'\n        if ch == '}': return '*}.}*'\n        if ch == '<': return '*<.<*'\n        if ch == '>': return '*>.>*'\n        if ch == '_': return '*.__.'\n        if ch == '~': return '*~.~*'\n        if ch == '`': return '*.``.'\n        if ch == '|': return '*.|.*'\n        if ch == '0': return '###...#'\n        if ch == '1': return '..##..#'\n        if ch == '2': return '..#..##'\n        if ch == '3': return '..###..'\n        if ch == '4': return '.#.##..'\n        if ch == '5': return '.#..##.'\n        if ch == '6': return '.#...##'\n        if ch == '7': return '##..#..'\n        if ch == '8': return '##.#...'\n        if ch == '9': return '##...#.'\n\n    return '*'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace('\\n','')\n    line = line.replace('\\r','')\n    line = line.replace('\\t','')\n    line = line.replace(' ','')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write('\\n')\n\nmain()\n"
    }
  ],
  "created": 1649740108,
  "object": "edit"
}
2022-04-12 01:08:49.431233 fix syntax errors 2 ['\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == \' \': return \'     \'\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == \'a\': return \'..#..\'\n        if ch == \'b\': return \'.#.#.\'\n        if ch == \'c\': return \'#..#.\'\n        if ch == \'d\': return \'#.#..\'\n        if ch == \'e\': return \'#...#\'\n        if ch == \'f\': return \'#..#.\'\n        if ch == \'g\': return \'##.##\'\n        if ch == \'h\': return \'#.##.\'\n        if ch == \'i\': return \'.#..#\'\n        if ch == \'j\': return \'.##.#\'\n        if ch == \'k\': return \'#.#.#\'\n        if ch == \'l\': return \'.###.\'\n        if ch == \'m\': return \'##..#\'\n        if ch == \'n\': return \'##.#.\'\n        if ch == \'o\': return \'###..\'\n        if ch == \'p\': return \'##...\'\n        if ch == \'q\': return \'##.#.\'\n        if ch == \'r\': return \'##..#\'\n        if ch == \'s\': return \'#.#.#.\'\n        if ch == \'t\': return \'##...#\'\n        if ch == \'u\': return \'#.####\'\n        if ch == \'v\': return \'#.####\'\n        if ch == \'w\': return \'.#.##.\'\n        if ch == \'x\': return \'#.##.#\'\n        if ch == \'y\': return \'#.###.\'\n        if ch == \'z\': return \'###.#.\'\n        if ch == \'.\': return \'..*..\'\n        if ch == \',\': return \'.*.*.\'\n        if ch == \'!\': return \'*.!.*\'\n        if ch == \'?\': return \'*?.!*\'\n        if ch == \'-\': return \'*-.-*\'\n        if ch == \'\\\'\': return \'*.*..\'\n        if ch == \'"\': return \'*.*.*.\'\n        if ch == \':\': return \'*.::*\'\n        if ch == \';\': return \'*.:.*\'\n        if ch == \'=\': return \'*=.=*\'\n        if ch == \'+\': return \'*=.=*\'\n        if ch == \'*\': return \'*.**.\'\n        if ch == \'/\': return \'*/./*\'\n        if ch == \'\\\\\': return \'*\\\\.*/\'\n        if ch == \'@\': return \'*@.@*\'\n        if ch == \'#\': return \'*#.#*\'\n        if ch == \'$\': return \'*.$$.\'\n        if ch == \'%\': return \'*%.%*\'\n        if ch == \'^\': return \'*^.^*\'\n        if ch == \'&\': return \'*.&&.\'\n        if ch == \'(\': return \'*(.(*\'\n        if ch == \')\': return \'*)).*\'\n        if ch == \'[\': return \'*[.[*\'\n        if ch == \']\': return \'*].]*\'\n        if ch == \'{\': return \'*{.{*\'\n        if ch == \'}\': return \'*}.}*\'\n        if ch == \'<\': return \'*<.<*\'\n        if ch == \'>\': return \'*>.>*\'\n        if ch == \'_\': return \'*.__.\'\n        if ch == \'~\': return \'*~.~*\'\n        if ch == \'`\': return \'*.``.\'\n        if ch == \'|\': return \'*.|.*\'\n        if ch == \'0\': return \'###...#\'\n        if ch == \'1\': return \'..##..#\'\n        if ch == \'2\': return \'..#..##\'\n        if ch == \'3\': return \'..###..\'\n        if ch == \'4\': return \'.#.##..\'\n        if ch == \'5\': return \'.#..##.\'\n        if ch == \'6\': return \'.#...##\'\n        if ch == \'7\': return \'##..#..\'\n        if ch == \'8\': return \'##.#...\'\n        if ch == \'9\': return \'##...#.\'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace(\'\\n\',\'\')\n    line = line.replace(\'\\r\',\'\')\n    line = line.replace(\'\\t\',\'\')\n    line = line.replace(\' \',\'\')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write(\'\\n\')\n\nmain()\n', '\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == \' \': return \'     \'\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == \'a\': return \'..#..\'\n        if ch == \'b\': return \'.#.#.\'\n        if ch == \'c\': return \'#..#.\'\n        if ch == \'d\': return \'#.#..\'\n        if ch == \'e\': return \'#...#\'\n        if ch == \'f\': return \'#..#.\'\n        if ch == \'g\': return \'##.##\'\n        if ch == \'h\': return \'#.##.\'\n        if ch == \'i\': return \'.#..#\'\n        if ch == \'j\': return \'.##.#\'\n        if ch == \'k\': return \'#.#.#\'\n        if ch == \'l\': return \'.###.\'\n        if ch == \'m\': return \'##..#\'\n        if ch == \'n\': return \'##.#.\'\n        if ch == \'o\': return \'###..\'\n        if ch == \'p\': return \'##...\'\n        if ch == \'q\': return \'##.#.\'\n        if ch == \'r\': return \'##..#\'\n        if ch == \'s\': return \'#.#.#.\'\n        if ch == \'t\': return \'##...#\'\n        if ch == \'u\': return \'#.####\'\n        if ch == \'v\': return \'#.####\'\n        if ch == \'w\': return \'.#.##.\'\n        if ch == \'x\': return \'#.##.#\'\n        if ch == \'y\': return \'#.###.\'\n        if ch == \'z\': return \'###.#.\'\n        if ch == \'.\': return \'..*..\'\n        if ch == \',\': return \'.*.*.\'\n        if ch == \'!\': return \'*.!.*\'\n        if ch == \'?\': return \'*?.!*\'\n        if ch == \'-\': return \'*-.-*\'\n        if ch == \'\\\'\': return \'*.*..\'\n        if ch == \'"\': return \'*.*.*.\'\n        if ch == \':\': return \'*.::*\'\n        if ch == \';\': return \'*.:.*\'\n        if ch == \'=\': return \'*=.=*\'\n        if ch == \'+\': return \'*=.=*\'\n        if ch == \'*\': return \'*.**.\'\n        if ch == \'/\': return \'*/./*\'\n        if ch == \'\\\\\': return \'*\\\\.*/\'\n        if ch == \'@\': return \'*@.@*\'\n        if ch == \'#\': return \'*#.#*\'\n        if ch == \'$\': return \'*.$$.\'\n        if ch == \'%\': return \'*%.%*\'\n        if ch == \'^\': return \'*^.^*\'\n        if ch == \'&\': return \'*.&&.\'\n        if ch == \'(\': return \'*(.(*\'\n        if ch == \')\': return \'*)).*\'\n        if ch == \'[\': return \'*[.[*\'\n        if ch == \']\': return \'*].]*\'\n        if ch == \'{\': return \'*{.{*\'\n        if ch == \'}\': return \'*}.}*\'\n        if ch == \'<\': return \'*<.<*\'\n        if ch == \'>\': return \'*>.>*\'\n        if ch == \'_\': return \'*.__.\'\n        if ch == \'~\': return \'*~.~*\'\n        if ch == \'`\': return \'*.``.\'\n        if ch == \'|\': return \'*.|.*\'\n        if ch == \'0\': return \'###...#\'\n        if ch == \'1\': return \'..##..#\'\n        if ch == \'2\': return \'..#..##\'\n        if ch == \'3\': return \'..###..\'\n        if ch == \'4\': return \'.#.##..\'\n        if ch == \'5\': return \'.#..##.\'\n        if ch == \'6\': return \'.#...##\'\n        if ch == \'7\': return \'##..#..\'\n        if ch == \'8\': return \'##.#...\'\n        if ch == \'9\': return \'##...#.\'\n\n    return \'*\'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace(\'\\n\',\'\')\n    line = line.replace(\'\\r\',\'\')\n    line = line.replace(\'\\t\',\'\')\n    line = line.replace(\' \',\'\')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write(\'\\n\')\n\nmain()\n']
2022-04-12 01:08:57.364294 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == ' ': return '     '\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == 'a': return '..#..'\n        if ch == 'b': return '.#.#.'\n        if ch == 'c': return '#..#.'\n        if ch == 'd': return '#.#..'\n        if ch == 'e': return '#...#'\n        if ch == 'f': return '#..#.'\n        if ch == 'g': return '##.##'\n        if ch == 'h': return '#.##.'\n        if ch == 'i': return '.#..#'\n        if ch == 'j': return '.##.#'\n        if ch == 'k': return '#.#.#'\n        if ch == 'l': return '.###.'\n        if ch == 'm': return '##..#'\n        if ch == 'n': return '##.#.'\n        if ch == 'o': return '###..'\n        if ch == 'p': return '##...'\n        if ch == 'q': return '##.#.'\n        if ch == 'r': return '##..#'\n        if ch == 's': return '#.#.#.'\n        if ch == 't': return '##...'\n        if ch == 'u': return '#.###'\n        if ch == 'v': return '#.###'\n        if ch == 'w': return '.#.##.'\n        if ch == 'x': return '#.##.#'\n        if ch == 'y': return '#.###.'\n        if ch == 'z': return '###.#.'\n        if ch == '.': return '..*..'\n        if ch == ',': return '.*.*.'\n        if ch == '!': return '*.!.*'\n        if ch == '?': return '*?.!*'\n        if ch == '-': return '*-.-*'\n        if ch == '\\'': return '*.*..'\n        if ch == '\"': return '*.*.*.'\n        if ch == ':': return '*.::*'\n        if ch == ';': return '*.:.*'\n        if ch == '=': return '*=.=*'\n        if ch == '+': return '*=.=*'\n        if ch == '*': return '*.**.'\n        if ch == '/': return '*/./*'\n        if ch == '\\\\': return '*\\\\.*/'\n        if ch == '@': return '*@.@*'\n        if ch == '#': return '*#.#*'\n        if ch == '$': return '*.$$.'\n        if ch == '%': return '*%.%*'\n        if ch == '^': return '*^.^*'\n        if ch == '&': return '*.&&.'\n        if ch == '(': return '*(.(*'\n        if ch == ')': return '*)).*'\n        if ch == '[': return '*[.[*'\n        if ch == ']': return '*].]*'\n        if ch == '{': return '*{.{*'\n        if ch == '}': return '*}.}*'\n        if ch == '<': return '*<.<*'\n        if ch == '>': return '*>.>*'\n        if ch == '_': return '*.__.'\n        if ch == '~': return '*~.~*'\n        if ch == '`': return '*.``.'\n        if ch == '|': return '*.|.*'\n        if ch == '0': return '###...#'\n        if ch == '1': return '..##..#'\n        if ch == '2': return '..#..##'\n        if ch == '3': return '..###..'\n        if ch == '4': return '.#.##..'\n        if ch == '5': return '.#..##.'\n        if ch == '6': return '.#...##'\n        if ch == '7': return '##..#..'\n        if ch == '8': return '##.#...'\n        if ch == '9': return '##...#.'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace('\\n','')\n    line = line.replace('\\r','')\n    line = line.replace('\\t','')\n    line = line.replace(' ','')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write('\\n')\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == ' ': return '     '\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == 'a': return '..#..'\n        if ch == 'b': return '.#.#.'\n        if ch == 'c': return '#..#.'\n        if ch == 'd': return '#.#..'\n        if ch == 'e': return '#...#'\n        if ch == 'f': return '#..#.'\n        if ch == 'g': return '##.##'\n        if ch == 'h': return '#.##.'\n        if ch == 'i': return '.#..#'\n        if ch == 'j': return '.##.#'\n        if ch == 'k': return '#.#.#'\n        if ch == 'l': return '.###.'\n        if ch == 'm': return '##..#'\n        if ch == 'n': return '##.#.'\n        if ch == 'o': return '###..'\n        if ch == 'p': return '##...'\n        if ch == 'q': return '##.#.'\n        if ch == 'r': return '##..#'\n        if ch == 's': return '#.#.#'\n        if ch == 't': return '##...'\n        if ch == 'u': return '#.###'\n        if ch == 'v': return '#.###'\n        if ch == 'w': return '.#.##.'\n        if ch == 'x': return '#.##.#'\n        if ch == 'y': return '#.###.'\n        if ch == 'z': return '###.#.'\n        if ch == '.': return '..*..'\n        if ch == ',': return '.*.*.'\n        if ch == '!': return '*.!.*'\n        if ch == '?': return '*?.!*'\n        if ch == '-': return '*-.-*'\n        if ch == '\\'': return '*.*..'\n        if ch == '\"': return '*.*.*'\n        if ch == ':': return '*.::*'\n        if ch == ';': return '*.:.*'\n        if ch == '=': return '*=.=*'\n        if ch == '+': return '*=.=*'\n        if ch == '*': return '*.**'\n        if ch == '/': return '*/./*'\n        if ch == '\\\\': return '*\\\\.*/'\n        if ch == '@': return '*@.@*'\n        if ch == '#': return '*#.#*'\n        if ch == '$': return '*.$$'\n        if ch == '%': return '*%.%*'\n        if ch == '^': return '*^.^*'\n        if ch == '&': return '*.&&'\n        if ch == '(': return '*(.(*'\n        if ch == ')': return '*)).*'\n        if ch == '[': return '*[.[*'\n        if ch == ']': return '*].]*'\n        if ch == '{': return '*{.{*'\n        if ch == '}': return '*}.}*'\n        if ch == '<': return '*<.<*'\n        if ch == '>': return '*>.>*'\n        if ch == '_': return '*.__'\n        if ch == '~': return '*~.~*'\n        if ch == '`': return '*.``'\n        if ch == '|': return '*.|.*'\n        if ch == '0': return '###...#'\n        if ch == '1': return '..##..#'\n        if ch == '2': return '..#..##'\n        if ch == '3': return '..###..'\n        if ch == '4': return '.#.##..'\n        if ch == '5': return '.#..##.'\n        if ch == '6': return '.#...##'\n        if ch == '7': return '##..#..'\n        if ch == '8': return '##.#...'\n        if ch == '9': return '##...#.'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace('\\n','')\n    line = line.replace('\\r','')\n    line = line.replace('\\t','')\n    line = line.replace(' ','')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write('\\n')\n\nmain()\n"
    }
  ],
  "created": 1649740129,
  "object": "edit"
}
2022-04-12 01:08:57.364543 fix syntax errors 2 ['\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == \' \': return \'     \'\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == \'a\': return \'..#..\'\n        if ch == \'b\': return \'.#.#.\'\n        if ch == \'c\': return \'#..#.\'\n        if ch == \'d\': return \'#.#..\'\n        if ch == \'e\': return \'#...#\'\n        if ch == \'f\': return \'#..#.\'\n        if ch == \'g\': return \'##.##\'\n        if ch == \'h\': return \'#.##.\'\n        if ch == \'i\': return \'.#..#\'\n        if ch == \'j\': return \'.##.#\'\n        if ch == \'k\': return \'#.#.#\'\n        if ch == \'l\': return \'.###.\'\n        if ch == \'m\': return \'##..#\'\n        if ch == \'n\': return \'##.#.\'\n        if ch == \'o\': return \'###..\'\n        if ch == \'p\': return \'##...\'\n        if ch == \'q\': return \'##.#.\'\n        if ch == \'r\': return \'##..#\'\n        if ch == \'s\': return \'#.#.#.\'\n        if ch == \'t\': return \'##...\'\n        if ch == \'u\': return \'#.###\'\n        if ch == \'v\': return \'#.###\'\n        if ch == \'w\': return \'.#.##.\'\n        if ch == \'x\': return \'#.##.#\'\n        if ch == \'y\': return \'#.###.\'\n        if ch == \'z\': return \'###.#.\'\n        if ch == \'.\': return \'..*..\'\n        if ch == \',\': return \'.*.*.\'\n        if ch == \'!\': return \'*.!.*\'\n        if ch == \'?\': return \'*?.!*\'\n        if ch == \'-\': return \'*-.-*\'\n        if ch == \'\\\'\': return \'*.*..\'\n        if ch == \'"\': return \'*.*.*.\'\n        if ch == \':\': return \'*.::*\'\n        if ch == \';\': return \'*.:.*\'\n        if ch == \'=\': return \'*=.=*\'\n        if ch == \'+\': return \'*=.=*\'\n        if ch == \'*\': return \'*.**.\'\n        if ch == \'/\': return \'*/./*\'\n        if ch == \'\\\\\': return \'*\\\\.*/\'\n        if ch == \'@\': return \'*@.@*\'\n        if ch == \'#\': return \'*#.#*\'\n        if ch == \'$\': return \'*.$$.\'\n        if ch == \'%\': return \'*%.%*\'\n        if ch == \'^\': return \'*^.^*\'\n        if ch == \'&\': return \'*.&&.\'\n        if ch == \'(\': return \'*(.(*\'\n        if ch == \')\': return \'*)).*\'\n        if ch == \'[\': return \'*[.[*\'\n        if ch == \']\': return \'*].]*\'\n        if ch == \'{\': return \'*{.{*\'\n        if ch == \'}\': return \'*}.}*\'\n        if ch == \'<\': return \'*<.<*\'\n        if ch == \'>\': return \'*>.>*\'\n        if ch == \'_\': return \'*.__.\'\n        if ch == \'~\': return \'*~.~*\'\n        if ch == \'`\': return \'*.``.\'\n        if ch == \'|\': return \'*.|.*\'\n        if ch == \'0\': return \'###...#\'\n        if ch == \'1\': return \'..##..#\'\n        if ch == \'2\': return \'..#..##\'\n        if ch == \'3\': return \'..###..\'\n        if ch == \'4\': return \'.#.##..\'\n        if ch == \'5\': return \'.#..##.\'\n        if ch == \'6\': return \'.#...##\'\n        if ch == \'7\': return \'##..#..\'\n        if ch == \'8\': return \'##.#...\'\n        if ch == \'9\': return \'##...#.\'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace(\'\\n\',\'\')\n    line = line.replace(\'\\r\',\'\')\n    line = line.replace(\'\\t\',\'\')\n    line = line.replace(\' \',\'\')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write(\'\\n\')\n\nmain()\n', '\n\nimport sys\nimport math\n\ndef frame(ch):\n    if ch == \' \': return \'     \'\n    if ch.isalpha():\n        if ch.isupper():\n            ch = ch.lower()\n        if ch == \'a\': return \'..#..\'\n        if ch == \'b\': return \'.#.#.\'\n        if ch == \'c\': return \'#..#.\'\n        if ch == \'d\': return \'#.#..\'\n        if ch == \'e\': return \'#...#\'\n        if ch == \'f\': return \'#..#.\'\n        if ch == \'g\': return \'##.##\'\n        if ch == \'h\': return \'#.##.\'\n        if ch == \'i\': return \'.#..#\'\n        if ch == \'j\': return \'.##.#\'\n        if ch == \'k\': return \'#.#.#\'\n        if ch == \'l\': return \'.###.\'\n        if ch == \'m\': return \'##..#\'\n        if ch == \'n\': return \'##.#.\'\n        if ch == \'o\': return \'###..\'\n        if ch == \'p\': return \'##...\'\n        if ch == \'q\': return \'##.#.\'\n        if ch == \'r\': return \'##..#\'\n        if ch == \'s\': return \'#.#.#\'\n        if ch == \'t\': return \'##...\'\n        if ch == \'u\': return \'#.###\'\n        if ch == \'v\': return \'#.###\'\n        if ch == \'w\': return \'.#.##.\'\n        if ch == \'x\': return \'#.##.#\'\n        if ch == \'y\': return \'#.###.\'\n        if ch == \'z\': return \'###.#.\'\n        if ch == \'.\': return \'..*..\'\n        if ch == \',\': return \'.*.*.\'\n        if ch == \'!\': return \'*.!.*\'\n        if ch == \'?\': return \'*?.!*\'\n        if ch == \'-\': return \'*-.-*\'\n        if ch == \'\\\'\': return \'*.*..\'\n        if ch == \'"\': return \'*.*.*\'\n        if ch == \':\': return \'*.::*\'\n        if ch == \';\': return \'*.:.*\'\n        if ch == \'=\': return \'*=.=*\'\n        if ch == \'+\': return \'*=.=*\'\n        if ch == \'*\': return \'*.**\'\n        if ch == \'/\': return \'*/./*\'\n        if ch == \'\\\\\': return \'*\\\\.*/\'\n        if ch == \'@\': return \'*@.@*\'\n        if ch == \'#\': return \'*#.#*\'\n        if ch == \'$\': return \'*.$$\'\n        if ch == \'%\': return \'*%.%*\'\n        if ch == \'^\': return \'*^.^*\'\n        if ch == \'&\': return \'*.&&\'\n        if ch == \'(\': return \'*(.(*\'\n        if ch == \')\': return \'*)).*\'\n        if ch == \'[\': return \'*[.[*\'\n        if ch == \']\': return \'*].]*\'\n        if ch == \'{\': return \'*{.{*\'\n        if ch == \'}\': return \'*}.}*\'\n        if ch == \'<\': return \'*<.<*\'\n        if ch == \'>\': return \'*>.>*\'\n        if ch == \'_\': return \'*.__\'\n        if ch == \'~\': return \'*~.~*\'\n        if ch == \'`\': return \'*.``\'\n        if ch == \'|\': return \'*.|.*\'\n        if ch == \'0\': return \'###...#\'\n        if ch == \'1\': return \'..##..#\'\n        if ch == \'2\': return \'..#..##\'\n        if ch == \'3\': return \'..###..\'\n        if ch == \'4\': return \'.#.##..\'\n        if ch == \'5\': return \'.#..##.\'\n        if ch == \'6\': return \'.#...##\'\n        if ch == \'7\': return \'##..#..\'\n        if ch == \'8\': return \'##.#...\'\n        if ch == \'9\': return \'##...#.\'\n\ndef main():\n    line = sys.stdin.readline()\n    line = line.replace(\'\\n\',\'\')\n    line = line.replace(\'\\r\',\'\')\n    line = line.replace(\'\\t\',\'\')\n    line = line.replace(\' \',\'\')\n    for i in range(5):\n        for ch in line:\n            sys.stdout.write(frame(ch)[i])\n        sys.stdout.write(\'\\n\')\n\nmain()\n']
2022-04-12 01:08:57.364625 size on output set 4
