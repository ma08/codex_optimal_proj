2022-04-11 21:52:53.711821 num operations 2
2022-04-11 21:52:53.711880 size on input set 1
2022-04-11 21:52:56.298587 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom bisect import bisect_left\n\nn = int(input())\na = list(map(int, input().split()))\n\nstools = [0]  # \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0439 \u0441\u0442\u0443\u043b\nfor i in range(n):\n    if a[i] > stools[-1]:\n        stools.append(a[i])\n    else:\n        stools[bisect_left(stools, a[i])] = a[i]\nprint(len(stools)-1)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom bisect import bisect_left\n\nn = int(input())\na = list(map(int, input().split()))\n\nstools = [0] # stools[i] is the smallest height of a stool with i+1 stools\nfor i in range(n):\n    if a[i] > stools[-1]:\n        stools.append(a[i])\n    else:\n        stools[bisect_left(stools, a[i])] = a[i]\nprint(len(stools)-1)\n"
    }
  ],
  "created": 1649728374,
  "object": "edit"
}
2022-04-11 21:52:56.298923 fix spelling mistakes 2 ['\n\nfrom bisect import bisect_left\n\nn = int(input())\na = list(map(int, input().split()))\n\nstools = [0]  # начальный стул\nfor i in range(n):\n    if a[i] > stools[-1]:\n        stools.append(a[i])\n    else:\n        stools[bisect_left(stools, a[i])] = a[i]\nprint(len(stools)-1)\n', '\n\nfrom bisect import bisect_left\n\nn = int(input())\na = list(map(int, input().split()))\n\nstools = [0] # stools[i] is the smallest height of a stool with i+1 stools\nfor i in range(n):\n    if a[i] > stools[-1]:\n        stools.append(a[i])\n    else:\n        stools[bisect_left(stools, a[i])] = a[i]\nprint(len(stools)-1)\n']
2022-04-11 21:52:56.298977 size on output set 2
2022-04-11 21:52:56.298984 size on input set 2
2022-04-11 21:53:00.890322 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom bisect import bisect_left\n\nn = int(input())\na = list(map(int, input().split()))\n\nstools = [0]  # stools[i] is the smallest height of a stool with i+1 stools\nfor i in range(n):\n    if a[i] > stools[-1]:\n        stools.append(a[i])\n    else:\n        stools[bisect_left(stools, a[i])] = a[i]\nprint(len(stools) - 1)\n"
    },
    {
      "index": 1,
      "text": "\na = [1,2,3,4,5]\nprint(a[-1])\n"
    }
  ],
  "created": 1649728376,
  "object": "edit"
}
2022-04-11 21:53:00.890610 fix syntax errors 2 ['\nfrom bisect import bisect_left\n\nn = int(input())\na = list(map(int, input().split()))\n\nstools = [0]  # stools[i] is the smallest height of a stool with i+1 stools\nfor i in range(n):\n    if a[i] > stools[-1]:\n        stools.append(a[i])\n    else:\n        stools[bisect_left(stools, a[i])] = a[i]\nprint(len(stools) - 1)\n', '\na = [1,2,3,4,5]\nprint(a[-1])\n']
2022-04-11 21:53:07.734734 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom bisect import bisect_left\n\nn = int(input())\na = list(map(int, input().split()))\n\nstools = [0]  # \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0439 \u0441\u0442\u0443\u043b\nfor i in range(n):\n    if a[i] > stools[-1]:\n        stools.append(a[i])\n    else:\n        stools[bisect_left(stools, a[i])] = a[i]\nprint(len(stools) - 1)\n"
    },
    {
      "index": 1,
      "text": "\n\ndef lis(arr):\n    n = len(arr)\n    lis = [1] * n\n    for i in range(1, n):\n        for j in range(0, i):\n            if arr[i] > arr[j] and lis[i] < lis[j] + 1:\n                lis[i] = lis[j] + 1\n    maximum = 0\n    for i in range(n):\n        maximum = max(maximum, lis[i])\n    return maximum\n\narr = [10, 22, 9, 33, 21, 50, 41, 60]\nprint(lis(arr))\n"
    }
  ],
  "created": 1649728381,
  "object": "edit"
}
2022-04-11 21:53:07.734836 fix syntax errors 2 ['\nfrom bisect import bisect_left\n\nn = int(input())\na = list(map(int, input().split()))\n\nstools = [0]  # начальный стул\nfor i in range(n):\n    if a[i] > stools[-1]:\n        stools.append(a[i])\n    else:\n        stools[bisect_left(stools, a[i])] = a[i]\nprint(len(stools) - 1)\n', '\n\ndef lis(arr):\n    n = len(arr)\n    lis = [1] * n\n    for i in range(1, n):\n        for j in range(0, i):\n            if arr[i] > arr[j] and lis[i] < lis[j] + 1:\n                lis[i] = lis[j] + 1\n    maximum = 0\n    for i in range(n):\n        maximum = max(maximum, lis[i])\n    return maximum\n\narr = [10, 22, 9, 33, 21, 50, 41, 60]\nprint(lis(arr))\n']
2022-04-11 21:53:07.734853 size on output set 4
2022-04-11 21:53:07.734867 num operations 2
2022-04-11 21:53:07.734871 size on input set 1
2022-04-11 21:53:10.341988 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    num_people = int(sys.stdin.readline())\n    heights = [int(x) for x in sys.stdin.readline().split()]\n    stools = [0 for _ in range(num_people)]\n    current_max = 0\n    for i in range(num_people):\n        stools[i] = max(current_max, heights[i])\n        current_max = stools[i]\n    print(sum(stools))\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    num_people = int(sys.stdin.readline())\n    heights = [int(x) for x in sys.stdin.readline().split()]\n    stools = [0 for i in range(num_people)]\n    current_max = 0\n    for i in range(num_people):\n        stools[i] = max(current_max, heights[i])\n        current_max = stools[i]\n    print(sum(stools))\n\nmain()\n"
    }
  ],
  "created": 1649728388,
  "object": "edit"
}
2022-04-11 21:53:10.342283 fix spelling mistakes 2 ['\n\nimport sys\n\ndef main():\n    num_people = int(sys.stdin.readline())\n    heights = [int(x) for x in sys.stdin.readline().split()]\n    stools = [0 for _ in range(num_people)]\n    current_max = 0\n    for i in range(num_people):\n        stools[i] = max(current_max, heights[i])\n        current_max = stools[i]\n    print(sum(stools))\n\nmain()\n', '#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    num_people = int(sys.stdin.readline())\n    heights = [int(x) for x in sys.stdin.readline().split()]\n    stools = [0 for i in range(num_people)]\n    current_max = 0\n    for i in range(num_people):\n        stools[i] = max(current_max, heights[i])\n        current_max = stools[i]\n    print(sum(stools))\n\nmain()\n']
2022-04-11 21:53:10.342323 size on output set 2
2022-04-11 21:53:10.342329 size on input set 2
2022-04-11 21:53:17.095951 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    num_people = int(sys.stdin.readline())\n    heights = [int(x) for x in sys.stdin.readline().split()]\n    stools = [0 for _ in range(num_people)]\n    current_max = 0\n    for i in range(num_people):\n        stools[i] = max(current_max, heights[i])\n        current_max = stools[i]\n    print(sum(stools))\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    num_cases = int(sys.stdin.readline())\n    for _ in range(num_cases):\n        num_people = int(sys.stdin.readline())\n        heights = [int(x) for x in sys.stdin.readline().split()]\n        stools = [0 for _ in range(num_people)]\n        current_max = 0\n        for i in range(num_people):\n            stools[i] = max(current_max, heights[i])\n            current_max = stools[i]\n        print(sum(stools))\n\nmain()\n"
    }
  ],
  "created": 1649728390,
  "object": "edit"
}
2022-04-11 21:53:17.096263 fix syntax errors 2 ['\nimport sys\n\ndef main():\n    num_people = int(sys.stdin.readline())\n    heights = [int(x) for x in sys.stdin.readline().split()]\n    stools = [0 for _ in range(num_people)]\n    current_max = 0\n    for i in range(num_people):\n        stools[i] = max(current_max, heights[i])\n        current_max = stools[i]\n    print(sum(stools))\n\nmain()\n', '\n\nimport sys\n\ndef main():\n    num_cases = int(sys.stdin.readline())\n    for _ in range(num_cases):\n        num_people = int(sys.stdin.readline())\n        heights = [int(x) for x in sys.stdin.readline().split()]\n        stools = [0 for _ in range(num_people)]\n        current_max = 0\n        for i in range(num_people):\n            stools[i] = max(current_max, heights[i])\n            current_max = stools[i]\n        print(sum(stools))\n\nmain()\n']
2022-04-11 21:53:24.110158 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    pass\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    num_people = int(sys.stdin.readline()) # number of people\n    heights = [int(x) for x in sys.stdin.readline().split()] # heights of people\n    stools = [0 for i in range(num_people)] # number of stools each person needs\n    current_max = 0 # current max height\n    for i in range(num_people): # for each person\n        stools[i] = max(current_max, heights[i]) # set the number of stools to the max of the current max height and the current person's height\n        current_max = stools[i] # update the current max height\n    print(sum(stools)) # print the sum of the number of stools needed\n\nmain()\n"
    }
  ],
  "created": 1649728397,
  "object": "edit"
}
2022-04-11 21:53:24.110406 fix syntax errors 2 ['#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    pass\n\nmain()\n', "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    num_people = int(sys.stdin.readline()) # number of people\n    heights = [int(x) for x in sys.stdin.readline().split()] # heights of people\n    stools = [0 for i in range(num_people)] # number of stools each person needs\n    current_max = 0 # current max height\n    for i in range(num_people): # for each person\n        stools[i] = max(current_max, heights[i]) # set the number of stools to the max of the current max height and the current person's height\n        current_max = stools[i] # update the current max height\n    print(sum(stools)) # print the sum of the number of stools needed\n\nmain()\n"]
2022-04-11 21:53:24.110446 size on output set 4
