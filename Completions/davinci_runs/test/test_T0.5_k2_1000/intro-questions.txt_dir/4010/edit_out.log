2022-04-11 15:21:57.292783 num operations 2
2022-04-11 15:21:57.292804 size on input set 1
2022-04-11 15:21:59.912447 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Solution \n\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        if a[0] == a[-1]:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n# Solution for https://www.codechef.com/problems/CHN15A\n\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        if a[0] == a[-1]:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649704917,
  "object": "edit"
}
2022-04-11 15:21:59.912667 fix spelling mistakes 2 ['\n\n# Solution \n\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        if a[0] == a[-1]:\n            print("YES")\n        else:\n            print("NO")\n\nif __name__ == "__main__":\n    main()\n', '\n\n# Solution for https://www.codechef.com/problems/CHN15A\n\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        if a[0] == a[-1]:\n            print("YES")\n        else:\n            print("NO")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 15:21:59.912702 size on output set 2
2022-04-11 15:21:59.912712 size on input set 2
2022-04-11 15:22:02.498380 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Solution \n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        if a[0] == a[-1]:\n            print(\"YES\")\n        else:\n            print(\"NO\")\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n# Solution \n\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        if a[0] == a[-1]:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649704920,
  "object": "edit"
}
2022-04-11 15:22:02.498629 fix syntax errors 2 ['\n# Solution \n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        if a[0] == a[-1]:\n            print("YES")\n        else:\n            print("NO")\nif __name__ == "__main__":\n    main()\n', '\n# Solution \n\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        if a[0] == a[-1]:\n            print("YES")\n        else:\n            print("NO")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 15:22:06.376299 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# Solution for https://www.codechef.com/problems/CHEFAPAR\n\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        print(a)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n# Solution for https://www.codechef.com/problems/CHN15A\n\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        print(\"YES\" if a[0] == a[-1] else \"NO\")\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1649704922,
  "object": "edit"
}
2022-04-11 15:22:06.376396 fix syntax errors 2 ['\n\n# Solution for https://www.codechef.com/problems/CHEFAPAR\n\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        print(a)\n\nif __name__ == "__main__":\n    main()\n', '\n# Solution for https://www.codechef.com/problems/CHN15A\n\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        print("YES" if a[0] == a[-1] else "NO")\n\nif __name__ == "__main__":\n    main()\n']
2022-04-11 15:22:06.376409 size on output set 4
2022-04-11 15:22:06.376420 num operations 2
2022-04-11 15:22:06.376423 size on input set 1
2022-04-11 15:22:13.421420 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\ndef get_input():\n    return open(\"input.txt\", \"r\")\n\n\ndef get_output():\n    return open(\"output.txt\", \"w\")\n\n\ndef get_number_of_test_cases():\n    return int(input())\n\n\ndef get_array_length(test_case_number):\n    return int(input())\n\n\ndef get_array(array_length):\n    return [int(x) for x in input().split()]\n\n\ndef is_array_palindrome(array):\n    return array == array[::-1]\n\n\ndef get_all_subsequences(array, subsequence_length):\n    return [array[i:i + subsequence_length] for i in range(len(array) - subsequence_length + 1)]\n\n\ndef solve_test_case(test_case_number, array_length, array):\n    for subsequence_length in range(3, len(array) + 1):\n        for subsequence in get_all_subsequences(array, subsequence_length):\n            if is_array_palindrome(subsequence):\n                return \"YES\"\n    return \"NO\" \n\n\ndef solve_problem():\n    number_of_test_cases = get_number_of_test_cases()\n    for test_case_number in range(1, number_of_test_cases + 1):\n        array_length = get_array_length(test_case_number)\n        array = get_array(array_length)\n        output = solve_test_case(test_case_number, array_length, array)\n        print(output)\n\n\nsolve_problem()\n"
    },
    {
      "index": 1,
      "text": "\n\n\ndef get_input():\n    return open(\"input.txt\", \"r\")\n\n\ndef get_output():\n    return open(\"output.txt\", \"w\")\n\n\ndef get_number_of_test_cases():\n    return int(input())\n\n\ndef get_array_length(test_case_number):\n    return int(input())\n\n\ndef get_array(array_length):\n    return [int(x) for x in input().split()]\n\n\ndef is_array_palindrome(array):\n    return array == array[::-1]\n\n\ndef get_all_subarrays(array):\n    return [array[i:j] for i in range(len(array)) for j in range(i + 1, len(array) + 1)]\n\n\ndef solve_test_case(test_case_number, array_length, array):\n    for subarray in get_all_subarrays(array):\n        if len(subarray) >= 3 and is_array_palindrome(subarray):\n            return \"YES\"\n    return \"NO\"\n\n\ndef solve_problem():\n    number_of_test_cases = get_number_of_test_cases()\n    for test_case_number in range(1, number_of_test_cases + 1):\n        array_length = get_array_length(test_case_number)\n        array = get_array(array_length)\n        output = solve_test_case(test_case_number, array_length, array)\n        print(output)\n\n\nsolve_problem()\n"
    }
  ],
  "created": 1649704926,
  "object": "edit"
}
2022-04-11 15:22:13.421618 fix spelling mistakes 2 ['\n\n\ndef get_input():\n    return open("input.txt", "r")\n\n\ndef get_output():\n    return open("output.txt", "w")\n\n\ndef get_number_of_test_cases():\n    return int(input())\n\n\ndef get_array_length(test_case_number):\n    return int(input())\n\n\ndef get_array(array_length):\n    return [int(x) for x in input().split()]\n\n\ndef is_array_palindrome(array):\n    return array == array[::-1]\n\n\ndef get_all_subsequences(array, subsequence_length):\n    return [array[i:i + subsequence_length] for i in range(len(array) - subsequence_length + 1)]\n\n\ndef solve_test_case(test_case_number, array_length, array):\n    for subsequence_length in range(3, len(array) + 1):\n        for subsequence in get_all_subsequences(array, subsequence_length):\n            if is_array_palindrome(subsequence):\n                return "YES"\n    return "NO" \n\n\ndef solve_problem():\n    number_of_test_cases = get_number_of_test_cases()\n    for test_case_number in range(1, number_of_test_cases + 1):\n        array_length = get_array_length(test_case_number)\n        array = get_array(array_length)\n        output = solve_test_case(test_case_number, array_length, array)\n        print(output)\n\n\nsolve_problem()\n', '\n\n\ndef get_input():\n    return open("input.txt", "r")\n\n\ndef get_output():\n    return open("output.txt", "w")\n\n\ndef get_number_of_test_cases():\n    return int(input())\n\n\ndef get_array_length(test_case_number):\n    return int(input())\n\n\ndef get_array(array_length):\n    return [int(x) for x in input().split()]\n\n\ndef is_array_palindrome(array):\n    return array == array[::-1]\n\n\ndef get_all_subarrays(array):\n    return [array[i:j] for i in range(len(array)) for j in range(i + 1, len(array) + 1)]\n\n\ndef solve_test_case(test_case_number, array_length, array):\n    for subarray in get_all_subarrays(array):\n        if len(subarray) >= 3 and is_array_palindrome(subarray):\n            return "YES"\n    return "NO"\n\n\ndef solve_problem():\n    number_of_test_cases = get_number_of_test_cases()\n    for test_case_number in range(1, number_of_test_cases + 1):\n        array_length = get_array_length(test_case_number)\n        array = get_array(array_length)\n        output = solve_test_case(test_case_number, array_length, array)\n        print(output)\n\n\nsolve_problem()\n']
2022-04-11 15:22:13.421774 size on output set 2
2022-04-11 15:22:13.421785 size on input set 2
2022-04-11 15:22:19.485429 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\ndef get_input():\n    return open(\"input.txt\", \"r\").readlines()\ndef get_output():\n    return open(\"output.txt\", \"w\")\n\n\ndef get_number_of_test_cases():\n    return int(get_input()[0])\n\n\ndef get_array_length(test_case_number):\n    return int(get_input()[test_case_number])\n\n\ndef get_array(array_length):\n    return [int(x) for x in get_input()[test_case_number + 1].split()]\n\n\ndef is_array_palindrome(array):\n    return array == array[::-1]\n\n\ndef get_all_subarrays(array):\n    return [array[i:j] for i in range(len(array)) for j in range(i + 1, len(array) + 1)]\n\n\ndef solve_test_case(test_case_number, array_length, array):\n    for subarray in get_all_subarrays(array):\n        if len(subarray) >= 3 and is_array_palindrome(subarray):\n            return \"YES\"\n    return \"NO\"\n\n\ndef solve_problem():\n    number_of_test_cases = get_number_of_test_cases()\n    for test_case_number in range(1, number_of_test_cases + 1):\n        array_length = get_array_length(test_case_number)\n        array = get_array(array_length)\n        output = solve_test_case(test_case_number, array_length, array)\n        print(output, file=get_output())\n\n\nsolve_problem()\n"
    },
    {
      "index": 1,
      "text": "\ndef get_input():\n    return open(\"input.txt\", \"r\")\n\n\ndef get_output():\n    return open(\"output.txt\", \"w\")\n\n\ndef get_number_of_test_cases():\n    return int(input())\n\n\ndef get_array_length(test_case_number):\n    return int(input())\n\n\ndef get_array(array_length):\n    return [int(x) for x in input().split()]\n\n\ndef is_array_palindrome(array):\n    return array == array[::-1]\n\n\ndef get_all_subarrays(array):\n    return [array[i:j] for i in range(len(array)) for j in range(i + 1, len(array) + 1)]\n\n\ndef solve_test_case(test_case_number, array_length, array):\n    for subarray in get_all_subarrays(array):\n        if len(subarray) >= 3 and is_array_palindrome(subarray):\n            return \"YES\"\n    return \"NO\"\n\n\ndef solve_problem():\n    number_of_test_cases = get_number_of_test_cases()\n    for test_case_number in range(1, number_of_test_cases + 1):\n        array_length = get_array_length(test_case_number)\n        array = get_array(array_length)\n        output = solve_test_case(test_case_number, array_length, array)\n        print(output)\n\n\nsolve_problem()\n"
    }
  ],
  "created": 1649704933,
  "object": "edit"
}
2022-04-11 15:22:19.485624 fix syntax errors 2 ['\n\n\ndef get_input():\n    return open("input.txt", "r").readlines()\ndef get_output():\n    return open("output.txt", "w")\n\n\ndef get_number_of_test_cases():\n    return int(get_input()[0])\n\n\ndef get_array_length(test_case_number):\n    return int(get_input()[test_case_number])\n\n\ndef get_array(array_length):\n    return [int(x) for x in get_input()[test_case_number + 1].split()]\n\n\ndef is_array_palindrome(array):\n    return array == array[::-1]\n\n\ndef get_all_subarrays(array):\n    return [array[i:j] for i in range(len(array)) for j in range(i + 1, len(array) + 1)]\n\n\ndef solve_test_case(test_case_number, array_length, array):\n    for subarray in get_all_subarrays(array):\n        if len(subarray) >= 3 and is_array_palindrome(subarray):\n            return "YES"\n    return "NO"\n\n\ndef solve_problem():\n    number_of_test_cases = get_number_of_test_cases()\n    for test_case_number in range(1, number_of_test_cases + 1):\n        array_length = get_array_length(test_case_number)\n        array = get_array(array_length)\n        output = solve_test_case(test_case_number, array_length, array)\n        print(output, file=get_output())\n\n\nsolve_problem()\n', '\ndef get_input():\n    return open("input.txt", "r")\n\n\ndef get_output():\n    return open("output.txt", "w")\n\n\ndef get_number_of_test_cases():\n    return int(input())\n\n\ndef get_array_length(test_case_number):\n    return int(input())\n\n\ndef get_array(array_length):\n    return [int(x) for x in input().split()]\n\n\ndef is_array_palindrome(array):\n    return array == array[::-1]\n\n\ndef get_all_subarrays(array):\n    return [array[i:j] for i in range(len(array)) for j in range(i + 1, len(array) + 1)]\n\n\ndef solve_test_case(test_case_number, array_length, array):\n    for subarray in get_all_subarrays(array):\n        if len(subarray) >= 3 and is_array_palindrome(subarray):\n            return "YES"\n    return "NO"\n\n\ndef solve_problem():\n    number_of_test_cases = get_number_of_test_cases()\n    for test_case_number in range(1, number_of_test_cases + 1):\n        array_length = get_array_length(test_case_number)\n        array = get_array(array_length)\n        output = solve_test_case(test_case_number, array_length, array)\n        print(output)\n\n\nsolve_problem()\n']
2022-04-11 15:22:21.480203 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef get_input():\n    return open(\"input.txt\", \"r\")\n\n\ndef get_output():\n    return open(\"output.txt\", \"w\")\n\n\ndef get_number_of_test_cases():\n    return int(input())\n\n\ndef get_array_length(test_case_number):\n    return int(input())\n\n\ndef get_array(array_length):\n    return [int(x) for x in input().split()]\n\n\ndef is_array_palindrome(array):\n    return array == array[::-1]\n\n\ndef get_all_subsequences(array, subsequence_length):\n    return [array[i:i + subsequence_length] for i in range(len(array) - subsequence_length + 1)]\n\n\ndef solve_test_case(test_case_number, array_length, array):\n    for subsequence_length in range(3, len(array) + 1):\n        for subsequence in get_all_subsequences(array, subsequence_length):\n            if is_array_palindrome(subsequence):\n                return \"YES\"\n    return \"NO\" \n\n\ndef solve_problem():\n    number_of_test_cases = get_number_of_test_cases()\n    for test_case_number in range(1, number_of_test_cases + 1):\n        array_length = get_array_length(test_case_number)\n        array = get_array(array_length)\n        output = solve_test_case(test_case_number, array_length, array)\n        print(output)\n\n\nsolve_problem()\n"
    },
    {
      "index": 1,
      "text": "\ndef get_input():\n    return open(\"input.txt\", \"r\")\n\n\ndef get_output():\n    return open(\"output.txt\", \"w\")\n\n\ndef get_number_of_test_cases():\n    return int(input())\n\n\ndef get_array_length(test_case_number):\n    return int(input())\n\n\ndef get_array(array_length):\n    return [int(x) for x in input().split()]\n\n\ndef is_array_palindrome(array):\n    return array == array[::-1]\n\n\ndef get_all_subsequences(array, subsequence_length):\n    return [array[i:i + subsequence_length] for i in range(len(array) - subsequence_length + 1)]\n\n\ndef solve_test_case(test_case_number, array_length, array):\n    for subsequence_length in range(3, len(array) + 1):\n        for subsequence in get_all_subsequences(array, subsequence_length):\n            if is_array_palindrome(subsequence):\n                return \"YES\"\n    return \"NO\" \n\n\ndef solve_problem():\n    number_of_test_cases = get_number_of_test_cases()\n    for test_case_number in range(1, number_of_test_cases + 1):\n        array_length = get_array_length(test_case_number)\n        array = get_array(array_length)\n        output = solve_test_case(test_case_number, array_length, array)\n        print(output)\n\n\nsolve_problem()\n"
    }
  ],
  "created": 1649704939,
  "object": "edit"
}
2022-04-11 15:22:21.480491 fix syntax errors 2 ['\ndef get_input():\n    return open("input.txt", "r")\n\n\ndef get_output():\n    return open("output.txt", "w")\n\n\ndef get_number_of_test_cases():\n    return int(input())\n\n\ndef get_array_length(test_case_number):\n    return int(input())\n\n\ndef get_array(array_length):\n    return [int(x) for x in input().split()]\n\n\ndef is_array_palindrome(array):\n    return array == array[::-1]\n\n\ndef get_all_subsequences(array, subsequence_length):\n    return [array[i:i + subsequence_length] for i in range(len(array) - subsequence_length + 1)]\n\n\ndef solve_test_case(test_case_number, array_length, array):\n    for subsequence_length in range(3, len(array) + 1):\n        for subsequence in get_all_subsequences(array, subsequence_length):\n            if is_array_palindrome(subsequence):\n                return "YES"\n    return "NO" \n\n\ndef solve_problem():\n    number_of_test_cases = get_number_of_test_cases()\n    for test_case_number in range(1, number_of_test_cases + 1):\n        array_length = get_array_length(test_case_number)\n        array = get_array(array_length)\n        output = solve_test_case(test_case_number, array_length, array)\n        print(output)\n\n\nsolve_problem()\n', '\ndef get_input():\n    return open("input.txt", "r")\n\n\ndef get_output():\n    return open("output.txt", "w")\n\n\ndef get_number_of_test_cases():\n    return int(input())\n\n\ndef get_array_length(test_case_number):\n    return int(input())\n\n\ndef get_array(array_length):\n    return [int(x) for x in input().split()]\n\n\ndef is_array_palindrome(array):\n    return array == array[::-1]\n\n\ndef get_all_subsequences(array, subsequence_length):\n    return [array[i:i + subsequence_length] for i in range(len(array) - subsequence_length + 1)]\n\n\ndef solve_test_case(test_case_number, array_length, array):\n    for subsequence_length in range(3, len(array) + 1):\n        for subsequence in get_all_subsequences(array, subsequence_length):\n            if is_array_palindrome(subsequence):\n                return "YES"\n    return "NO" \n\n\ndef solve_problem():\n    number_of_test_cases = get_number_of_test_cases()\n    for test_case_number in range(1, number_of_test_cases + 1):\n        array_length = get_array_length(test_case_number)\n        array = get_array(array_length)\n        output = solve_test_case(test_case_number, array_length, array)\n        print(output)\n\n\nsolve_problem()\n']
2022-04-11 15:22:21.480541 size on output set 3
