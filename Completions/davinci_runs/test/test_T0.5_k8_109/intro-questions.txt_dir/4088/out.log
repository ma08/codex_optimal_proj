2022-04-09 23:39:22.772923 """
Polycarp wrote on the board a string $s$ containing only lowercase Latin letters ('a'-'z'). This string is known for you and given in the input.

After that, he erased some letters from the string $s$, and he rewrote the remaining letters in any order. As a result, he got some new string $t$. You have to find it with some additional information.

Suppose that the string $t$ has length $m$ and the characters are numbered from left to right from $1$ to $m$. You are given a sequence of $m$ integers: $b_1, b_2, \ldots, b_m$, where $b_i$ is the sum of the distances $|i-j|$ from the index $i$ to all such indices $j$ that $t_j > t_i$ (consider that 'a'<'b'<...<'z'). In other words, to calculate $b_i$, Polycarp finds all such indices $j$ that the index $j$ contains a letter that is later in the alphabet than $t_i$ and sums all the values $|i-j|$.

For example, if $t$ = "abzb", then:  since $t_1$='a', all other indices contain letters which are later in the alphabet, that is: $b_1=|1-2|+|1-3|+|1-4|=1+2+3=6$;  since $t_2$='b', only the index $j=3$ contains the letter, which is later in the alphabet, that is: $b_2=|2-3|=1$;  since $t_3$='z', then there are no indexes $j$ such that $t_j>t_i$, thus $b_3=0$;  since $t_4$='b', only the index $j=3$ contains the letter, which is later in the alphabet, that is: $b_4=|4-3|=1$. 

Thus, if $t$ = "abzb", then $b=[6,1,0,1]$.

Given the string $s$ and the array $b$, find any possible string $t$ for which the following two requirements are fulfilled simultaneously:  $t$ is obtained from $s$ by erasing some letters (possibly zero) and then writing the rest in any order;  the array, constructed from the string $t$ according to the rules above, equals to the array $b$ specified in the input data. 


-----Input-----

The first line contains an integer $q$ ($1 \le q \le 100$) — the number of test cases in the test. Then $q$ test cases follow.

Each test case consists of three lines:  the first line contains string $s$, which has a length from $1$ to $50$ and consists of lowercase English letters;  the second line contains positive integer $m$ ($1 \le m \le |s|$), where $|s|$ is the length of the string $s$, and $m$ is the length of the array $b$;  the third line contains the integers $b_1, b_2, \dots, b_m$ ($0 \le b_i \le 1225$). 

It is guaranteed that in each test case an answer exists.


-----Output-----

Output $q$ lines: the $k$-th of them should contain the answer (string $t$) to the $k$-th test case. It is guaranteed that an answer to each test case exists. If there are several answers, output any.


-----Example-----
Input
4
abac
3
2 1 0
abc
1
0
abba
3
1 0 1
ecoosdcefr
10
38 13 24 14 11 5 3 24 17 0

Output
aac
b
aba
codeforces



-----Note-----

In the first test case, such strings $t$ are suitable: "aac', "aab".

In the second test case, such trings $t$ are suitable: "a", "b", "c".

In the third test case, only the string $t$ equals to "aba" is suitable, but the character 'b' can be from the second or third position.
"""
2022-04-09 23:39:22.772955 --------------------------
2022-04-09 23:40:19.674671 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport random\n\ndef gen_test_cases(q):\n    for i in range(q):\n        s = \"\"\n        for j in range(random.randint(1,50)):\n            s += chr(random.randint(97,122))\n        m = random.randint(1,len(s))\n        b = []\n        for j in range(m):\n            b.append(random.randint(0,1225))\n        print(s)\n        print(m)\n        print(\" \".join(str(k) for k in b))\n\nif __name__ == \"__main__\":\n    gen_test_cases(4)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n#from collections import defaultdict\n\ndef solve(s, b):\n\t#print(\"s: \", s)\n\t#print(\"b: \", b)\n\t#print(\"\")\n\tres = []\n\tif len(b) == 0:\n\t\treturn s\n\tif len(s) == 0:\n\t\treturn \"\"\n\tfor i in range(len(s)):\n\t\tif s[i] == 'a':\n\t\t\tcontinue\n\t\tb[0] -= (len(s) - i)\n\t\tb[i] -= i\n\t\t#print(\"i: \", i)\n\t\t#print(\"b: \", b)\n\t\tif b[0] >= 0 and b[i] >= 0:\n\t\t\t#print(\"b: \", b)\n\t\t\t#print(\"s[:i]: \", s[:i])\n\t\t\t#print(\"s[i+1:]: \", s[i+1:])\n\t\t\t#print(\"s: \", s)\n\t\t\t#print(\"b: \", b)\n\t\t\t#print(\"\")\n\t\t\t#print(\"s[:i] + s[i+1:]: \", s[:i] + s[i+1:])\n\t\t\t#print(\"s: \", s)\n\t\t\t#print(\"b: \", b)\n\t\t\t#print(\"\")\n\t\t\t#print(\"b[1:]: \", b[1:])\n\t\t\t#print(\"s: \", s)\n\t\t\t#print(\"b: \", b)\n\t\t\t#print(\"\")\n\t\t\t#print(\"solve(s[:i] + s[i+1:], b[1:]): \", solve(s[:i] + s[i+1:], b[1:]))\n\t\t\t#print(\"s: \", s)\n\t\t\t#print(\"b: \", b)\n\t\t\t#print(\"\")\n\t\t\t#print(\"s[i] + solve(s[:i] + s[i+1:], b[1:]): \", s[i] + solve(s[:i] + s[i+1:], b[1:]))\n\t\t\t#print(\"s: \", s)\n\t\t\t#print(\"b: \", b)\n\t\t\t#print(\"\")\n\t\t\t#print(\"res.append(s[i] + solve(s[:i] + s[i+1:], b[1:])): \", res.append(s[i] + solve(s[:i] + s[i+1:], b[1:])))\n\t\t\t#print(\"s: \", s)\n\t\t\t#print(\"b: \", b)\n\t\t\t#print(\"\")\n\t\t\t#print(\"res: \", res)\n\t\t\t#print(\"s: \", s)\n\t\t\t#print(\"b: \", b)\n\t\t\t#print(\"\")\n\t\t\tres.append(s[i] + solve(s[:i] + s[i+1:], b[1:]))\n\t\t\t#print(\"res: \", res)\n\t\t\t#print(\"s: \", s)\n\t\t\t#print(\"b: \", b)\n\t\t\t#print(\"\")\n\t\tb[0] += (len(s) - i)\n\t\tb[i] += i\n\t#print(\"res: \", res)\n\t#print(\"s: \", s)\n\t#print(\"b: \", b)\n\t#print(\"\")\n\tif len(res) > 0:\n\t\treturn min(res)\n\treturn \"\"\n\nq = int(input())\nfor i in range(q):\n\ts = input()\n\tm = int(input())\n\tb = [int(x) for x in input().split()]\n\tprint(solve(s, b))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nq = int(input())\nfor _ in range(q):\n    s = input()\n    m = int(input())\n    b = list(map(int, input().split()))\n    res = \"\"\n    for i in range(m):\n        # find the minimum distance in b[i:]\n        min_idx = min(range(i, m), key=lambda x: b[x])\n        res += s[min_idx]\n        s = s[:min_idx] + s[min_idx+1:]\n    print(res)"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\n# cook your dish here\nt=int(input())\nfor _ in range(t):\n    s=input()\n    m=int(input())\n    b=list(map(int,input().split()))\n    l=list(s)\n    l.sort()\n    ans=''\n    for i in range(m):\n        if(b[i]==0):\n            ans+=l[i]\n            l.remove(l[i])\n        else:\n            j=i\n            k=b[i]\n            while(k>0):\n                if(l[j]>l[i]):\n                    ans+=l[j]\n                    l.remove(l[j])\n                    k-=1\n                else:\n                    j+=1\n    print(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    q = int(sys.stdin.readline().strip())\n    for _ in range(q):\n        s = sys.stdin.readline().strip()\n        m = int(sys.stdin.readline().strip())\n        b = [int(x) for x in sys.stdin.readline().strip().split()]\n        t = []\n        for i in range(m):\n            if b[i] <= i:\n                t.append(s[i-b[i]])\n            else:\n                t.append(s[i])\n        print(''.join(t))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\nimport sys\n\ndef main():\n    num_cases = int(sys.stdin.readline())\n    for i in range(num_cases):\n        s = list(sys.stdin.readline().strip())\n        m = int(sys.stdin.readline().strip())\n        b = [int(i) for i in sys.stdin.readline().strip().split()]\n        #print(s,m,b)\n        t = []\n        for i in range(len(b)):\n            curr_char = s[i]\n            curr_b = b[i]\n            for j in range(26):\n                if chr(ord('a') + j) > curr_char:\n                    curr_b -= abs(ord(curr_char) - ord('a') - j)\n            t.append(chr(ord('a') + curr_b))\n        print(''.join(t))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    q = int(input())\n    for i in range(q):\n        s = input()\n        m = int(input())\n        b = list(map(int,input().split()))\n        #print(s,m,b)\n        t = \"\"\n        for i in range(m):\n            if b[i] == 0:\n                t += s[i]\n            elif b[i] == 1:\n                if s[i] == 'z':\n                    t += 'a'\n                else:\n                    t += chr(ord(s[i])+1)\n            else:\n                t += 'b'\n        print(t)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": ""
    }
  ],
  "created": 1649561963,
  "id": "cmpl-4vIi3u6RSm14AxeZwFCvouDvGbkYC",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 23:40:19.675239 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport random\n\ndef gen_test_cases(q):\n    for i in range(q):\n        s = \"\"\n        for j in range(random.randint(1,50)):\n            s += chr(random.randint(97,122))\n        m = random.randint(1,len(s))\n        b = []\n        for j in range(m):\n            b.append(random.randint(0,1225))\n        print(s)\n        print(m)\n        print(\" \".join(str(k) for k in b))\n\nif __name__ == \"__main__\":\n    gen_test_cases(4)"
}
2022-04-09 23:40:19.675352 REASON stop
2022-04-09 23:40:19.676845 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n#from collections import defaultdict\n\ndef solve(s, b):\n\t#print(\"s: \", s)\n\t#print(\"b: \", b)\n\t#print(\"\")\n\tres = []\n\tif len(b) == 0:\n\t\treturn s\n\tif len(s) == 0:\n\t\treturn \"\"\n\tfor i in range(len(s)):\n\t\tif s[i] == 'a':\n\t\t\tcontinue\n\t\tb[0] -= (len(s) - i)\n\t\tb[i] -= i\n\t\t#print(\"i: \", i)\n\t\t#print(\"b: \", b)\n\t\tif b[0] >= 0 and b[i] >= 0:\n\t\t\t#print(\"b: \", b)\n\t\t\t#print(\"s[:i]: \", s[:i])\n\t\t\t#print(\"s[i+1:]: \", s[i+1:])\n\t\t\t#print(\"s: \", s)\n\t\t\t#print(\"b: \", b)\n\t\t\t#print(\"\")\n\t\t\t#print(\"s[:i] + s[i+1:]: \", s[:i] + s[i+1:])\n\t\t\t#print(\"s: \", s)\n\t\t\t#print(\"b: \", b)\n\t\t\t#print(\"\")\n\t\t\t#print(\"b[1:]: \", b[1:])\n\t\t\t#print(\"s: \", s)\n\t\t\t#print(\"b: \", b)\n\t\t\t#print(\"\")\n\t\t\t#print(\"solve(s[:i] + s[i+1:], b[1:]): \", solve(s[:i] + s[i+1:], b[1:]))\n\t\t\t#print(\"s: \", s)\n\t\t\t#print(\"b: \", b)\n\t\t\t#print(\"\")\n\t\t\t#print(\"s[i] + solve(s[:i] + s[i+1:], b[1:]): \", s[i] + solve(s[:i] + s[i+1:], b[1:]))\n\t\t\t#print(\"s: \", s)\n\t\t\t#print(\"b: \", b)\n\t\t\t#print(\"\")\n\t\t\t#print(\"res.append(s[i] + solve(s[:i] + s[i+1:], b[1:])): \", res.append(s[i] + solve(s[:i] + s[i+1:], b[1:])))\n\t\t\t#print(\"s: \", s)\n\t\t\t#print(\"b: \", b)\n\t\t\t#print(\"\")\n\t\t\t#print(\"res: \", res)\n\t\t\t#print(\"s: \", s)\n\t\t\t#print(\"b: \", b)\n\t\t\t#print(\"\")\n\t\t\tres.append(s[i] + solve(s[:i] + s[i+1:], b[1:]))\n\t\t\t#print(\"res: \", res)\n\t\t\t#print(\"s: \", s)\n\t\t\t#print(\"b: \", b)\n\t\t\t#print(\"\")\n\t\tb[0] += (len(s) - i)\n\t\tb[i] += i\n\t#print(\"res: \", res)\n\t#print(\"s: \", s)\n\t#print(\"b: \", b)\n\t#print(\"\")\n\tif len(res) > 0:\n\t\treturn min(res)\n\treturn \"\"\n\nq = int(input())\nfor i in range(q):\n\ts = input()\n\tm = int(input())\n\tb = [int(x) for x in input().split()]\n\tprint(solve(s, b))"
}
2022-04-09 23:40:19.677059 REASON stop
2022-04-09 23:40:19.677961 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nq = int(input())\nfor _ in range(q):\n    s = input()\n    m = int(input())\n    b = list(map(int, input().split()))\n    res = \"\"\n    for i in range(m):\n        # find the minimum distance in b[i:]\n        min_idx = min(range(i, m), key=lambda x: b[x])\n        res += s[min_idx]\n        s = s[:min_idx] + s[min_idx+1:]\n    print(res)"
}
2022-04-09 23:40:19.678047 REASON stop
2022-04-09 23:40:19.678519 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\n# cook your dish here\nt=int(input())\nfor _ in range(t):\n    s=input()\n    m=int(input())\n    b=list(map(int,input().split()))\n    l=list(s)\n    l.sort()\n    ans=''\n    for i in range(m):\n        if(b[i]==0):\n            ans+=l[i]\n            l.remove(l[i])\n        else:\n            j=i\n            k=b[i]\n            while(k>0):\n                if(l[j]>l[i]):\n                    ans+=l[j]\n                    l.remove(l[j])\n                    k-=1\n                else:\n                    j+=1\n    print(ans)"
}
2022-04-09 23:40:19.678584 REASON stop
2022-04-09 23:40:19.679578 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    q = int(sys.stdin.readline().strip())\n    for _ in range(q):\n        s = sys.stdin.readline().strip()\n        m = int(sys.stdin.readline().strip())\n        b = [int(x) for x in sys.stdin.readline().strip().split()]\n        t = []\n        for i in range(m):\n            if b[i] <= i:\n                t.append(s[i-b[i]])\n            else:\n                t.append(s[i])\n        print(''.join(t))\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-09 23:40:19.679707 REASON stop
2022-04-09 23:40:19.680504 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\nimport sys\n\ndef main():\n    num_cases = int(sys.stdin.readline())\n    for i in range(num_cases):\n        s = list(sys.stdin.readline().strip())\n        m = int(sys.stdin.readline().strip())\n        b = [int(i) for i in sys.stdin.readline().strip().split()]\n        #print(s,m,b)\n        t = []\n        for i in range(len(b)):\n            curr_char = s[i]\n            curr_b = b[i]\n            for j in range(26):\n                if chr(ord('a') + j) > curr_char:\n                    curr_b -= abs(ord(curr_char) - ord('a') - j)\n            t.append(chr(ord('a') + curr_b))\n        print(''.join(t))\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-09 23:40:19.680611 REASON stop
2022-04-09 23:40:19.681475 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    q = int(input())\n    for i in range(q):\n        s = input()\n        m = int(input())\n        b = list(map(int,input().split()))\n        #print(s,m,b)\n        t = \"\"\n        for i in range(m):\n            if b[i] == 0:\n                t += s[i]\n            elif b[i] == 1:\n                if s[i] == 'z':\n                    t += 'a'\n                else:\n                    t += chr(ord(s[i])+1)\n            else:\n                t += 'b'\n        print(t)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-09 23:40:19.681638 REASON stop
2022-04-09 23:40:19.682300 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": ""
}
2022-04-09 23:40:19.682354 REASON stop
