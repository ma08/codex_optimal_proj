["\n\nimport sys\n\ndef main():\n    n, k = [int(x) for x in sys.stdin.readline().strip().split()]\n    s = sys.stdin.readline().strip()\n    if n < k:\n        print -1\n        return\n    if n == k:\n        print 0\n        return\n    if n > k:\n        print n - k\n        return\n\nif __name__ == '__main__':\n    main()", "\n\nfrom sys import stdin\n\n[n, k] = [int(x) for x in stdin.readline().strip().split()]\ns = stdin.readline().strip()\ncosts = [0] + [n - len(s[:i]) for i in range(1, n + 1)]\n\n# dp[i][j] is the minimum cost to get the first i characters and sum to j\ndp = [[float('inf')] * (k + 1) for i in range(n + 1)]\ndp[0][0] = 0\nfor i in range(1, n + 1):\n    for j in range(k + 1):\n        # If you don't use the ith character, the cost is the same\n        dp[i][j] = dp[i - 1][j]\n        # If you use the ith character, the cost is the previous cost plus the cost of the ith character\n        if j - costs[i] >= 0:\n            dp[i][j] = min(dp[i][j], dp[i - 1][j - costs[i]] + costs[i])\n\nif dp[n][k] == float('inf'):\n    print('-1')\nelse:\n    print(dp[n][k])", "\n\n\ndef main():\n    \"\"\"\n    We can use dynamic programming to solve this problem.\n    Let dp[i][j] be the minimum cost to obtain a set of size j using the first i characters of the string.\n    dp[i][j] = min(dp[i-1][j], dp[i-1][j-1] + n-i+1)\n    \"\"\"\n    n, k = [int(x) for x in input().split()]\n    s = input()\n    dp = [[0]*(k+1) for _ in range(n+1)]\n    for i in range(1, n+1):\n        dp[i][1] = n-i+1\n    for i in range(1, n+1):\n        for j in range(2, k+1):\n            dp[i][j] = min(dp[i-1][j], dp[i-1][j-1] + n-i+1)\n    if dp[n][k] > 10**12:\n        print(-1)\n    else:\n        print(dp[n][k])\n\n\nif __name__ == \"__main__\":\n    main()", "\n\n\ndef main():\n    n, k = (int(x) for x in input().split())\n    s = input()\n    cost = 0\n    for i in range(1, n+1):\n        cost += i\n        if cost >= k:\n            print(n-i)\n            return\n    print(-1)\n\n\nif __name__ == \"__main__\":\n    main()", "\n\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n    if k > n ** 2:\n        print(-1)\n    else:\n        print(n * (n + 1) // 2 - n + k)\n\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\n# read data for n sequences\nn, k = map(int, sys.stdin.readline().rstrip().split())\n\n# read the nth sequence\ns = sys.stdin.readline().rstrip()\n\n# print output\nprint(n - k)", "\n\ndef main():\n    n, k = map(int, input().split())\n    s = input()\n\n    dp = [0] * (n+1)\n    for i in range(1, n+1):\n        dp[i] = dp[i-1] + i\n\n    for i in range(n, 0, -1):\n        if dp[i] <= k:\n            return dp[i]\n    return -1\n\nprint(main())"]