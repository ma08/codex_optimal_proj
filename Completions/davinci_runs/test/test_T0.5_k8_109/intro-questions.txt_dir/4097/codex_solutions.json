["\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if n == 1:\n        print(0)\n        return\n    if n == 2:\n        print(0)\n        return\n    if n == 3:\n        if a[1] - a[0] == a[2] - a[1]:\n            print(0)\n        else:\n            print(-1)\n        return\n    d = a[1] - a[0]\n    c = 0\n    for i in range(n - 1):\n        if a[i + 1] - a[i] != d:\n            c += 1\n            if c > 1:\n                print(-1)\n                return\n            if a[i + 1] - a[i] == d + 1:\n                a[i] += 1\n            elif a[i + 1] - a[i] == d - 1:\n                a[i + 1] += 1\n            else:\n                print(-1)\n                return\n    print(c)\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    if n == 1:\n        print(0)\n        sys.exit(0)\n\n    if n == 2:\n        if a[0] == a[1]:\n            print(0)\n        else:\n            print(1)\n        sys.exit(0)\n\n    d = a[1] - a[0]\n    changed = 0\n    for i in range(1, n):\n        if a[i] != a[i-1] + d:\n            changed += 1\n            if changed > 1:\n                print(-1)\n                sys.exit(0)\n            if a[i] == a[i-1] + d - 1:\n                a[i] += 1\n            elif a[i] == a[i-1] + d + 1:\n                a[i] -= 1\n            else:\n                print(-1)\n                sys.exit(0)\n    print(changed)\n\n\nif __name__ == '__main__':\n    main()", "\n\nn = int(input())\nlst = [int(x) for x in input().split()]\n\ndef solve(n, lst):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return 0\n    else:\n        d = lst[1] - lst[0]\n        for i in range(1, n-1):\n            if d != lst[i+1] - lst[i]:\n                return -1\n        return 0\n\n\nprint(solve(n, lst))", "\n\ndef solve():\n    n = int(input())\n    b = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n        return\n    if n == 2:\n        print(0 if b[0] == b[1] else 1)\n        return\n    dif = b[1] - b[0]\n    for i in range(2, n):\n        if dif != (b[i] - b[i-1]):\n            if dif == (b[i] - b[i-1] + 1) and (b[i-1] - 1) == b[i-2]:\n                b[i-1] -= 1\n            elif dif == (b[i] - b[i-1] - 1) and (b[i-1] + 1) == b[i-2]:\n                b[i-1] += 1\n            else:\n                print(-1)\n                return\n    print(sum(1 for i in range(1, n) if b[i] != b[i-1]))\n\nsolve()", "\n\n\ndef is_arithmetic_progression(seq):\n    if len(seq) == 1:\n        return True\n    diff = seq[1] - seq[0]\n    for i in range(2, len(seq)):\n        if seq[i] - seq[i-1] != diff:\n            return False\n    return True\n\n\ndef min_change_to_arithmetic_progression(seq):\n    if len(seq) <= 2:\n        return 0\n    diff = seq[1] - seq[0]\n    for i in range(2, len(seq)):\n        if seq[i] - seq[i-1] != diff:\n            return min(min_change_to_arithmetic_progression(seq[:i-1] + [seq[i-1]+1] + seq[i:]),\n                       min_change_to_arithmetic_progression(seq[:i-1] + [seq[i-1]-1] + seq[i:]),\n                       min_change_to_arithmetic_progression(seq[:i-1] + [seq[i-1]] + seq[i:]),\n                       min_change_to_arithmetic_progression(seq[:i-2] + [seq[i-2]+1] + seq[i-1:]),\n                       min_change_to_arithmetic_progression(seq[:i-2] + [seq[i-2]-1] + seq[i-1:]),\n                       min_change_to_arithmetic_progression(seq[:i-2] + [seq[i-2]] + seq[i-1:])) + 1\n    return 0\n\n\ndef main():\n    n = int(input())\n    b = list(map(int, input().split()))\n    if is_arithmetic_progression(b):\n        print(0)\n    else:\n        print(min_change_to_arithmetic_progression(b))\n\n\nif __name__ == '__main__':\n    main()", "\n\nfrom math import ceil\nfrom sys import stdin\n\n\ndef main():\n    n = int(stdin.readline())\n    b = list(map(int, stdin.readline().split()))\n    min_b = min(b)\n    max_b = max(b)\n    if max_b - min_b > n - 1:\n        print(-1)\n    else:\n        print(n - (max_b - min_b) - 1)\n\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    n = int(input())\n    b = [int(i) for i in input().split()]\n\n    if n == 1:\n        print(0)\n        return\n\n    if n == 2:\n        if b[0] == b[1]:\n            print(0)\n            return\n        else:\n            print(1)\n            return\n\n    d = b[1] - b[0]\n    used = [0] * n\n    for i in range(1, n):\n        if b[i] - b[i - 1] != d:\n            if b[i] - b[i - 1] == d - 1:\n                if used[i - 1] == 0:\n                    used[i - 1] = 1\n                    b[i - 1] += 1\n                else:\n                    print(-1)\n                    return\n            elif b[i] - b[i - 1] == d + 1:\n                if used[i] == 0:\n                    used[i] = 1\n                    b[i] -= 1\n                else:\n                    print(-1)\n                    return\n            else:\n                print(-1)\n                return\n\n    print(sum(used))\n\nif __name__ == \"__main__\":\n    main()", "\n\nn = int(input())\nb = list(map(int, input().split()))\n\ndef is_arithmetic(lst):\n    if len(lst) <= 2:\n        return True\n    diff = lst[1] - lst[0]\n    for i in range(1, len(lst) - 1):\n        if lst[i + 1] - lst[i] != diff:\n            return False\n    return True\n\ndef get_min_changes(lst):\n    if is_arithmetic(lst):\n        return 0\n    if len(lst) == 2:\n        return -1\n    if n == 3:\n        return 1\n    if lst[0] - lst[1] == lst[2] - lst[1]:\n        return 1\n    if lst[-1] - lst[-2] == lst[-3] - lst[-2]:\n        return 1\n    return 2\n\nprint(get_min_changes(b))"]