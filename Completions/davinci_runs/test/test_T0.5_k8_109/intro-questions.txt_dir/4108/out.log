2022-04-09 23:57:05.358919 """
You are given strings S and T consisting of lowercase English letters.
You can perform the following operation on S any number of times:
Operation: Choose two distinct lowercase English letters c_1 and c_2, then replace every occurrence of c_1 with c_2, and every occurrence of c_2 with c_1.
Determine if S and T can be made equal by performing the operation zero or more times.

-----Constraints-----
 - 1 \leq |S| \leq 2 \times 10^5
 - |S| = |T|
 - S and T consists of lowercase English letters.

-----Input-----
Input is given from Standard Input in the following format:
S
T

-----Output-----
If S and T can be made equal, print Yes; otherwise, print No.

-----Sample Input-----
azzel
apple

-----Sample Output-----
Yes

azzel can be changed to apple, as follows:
 - Choose e as c_1 and l as c_2. azzel becomes azzle.
 - Choose z as c_1 and p as c_2. azzle becomes apple.
"""
2022-04-09 23:57:05.358943 --------------------------
2022-04-09 23:57:38.423492 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    T = sys.stdin.readline().rstrip()\n\n    if len(S) != len(T):\n        print(\"No\")\n        return\n\n    s_dict = {}\n    t_dict = {}\n\n    for i in range(len(S)):\n        if S[i] in s_dict:\n            s_dict[S[i]] += 1\n        else:\n            s_dict[S[i]] = 1\n\n        if T[i] in t_dict:\n            t_dict[T[i]] += 1\n        else:\n            t_dict[T[i]] = 1\n\n    for k in s_dict.keys():\n        if k not in t_dict or s_dict[k] != t_dict[k]:\n            print(\"No\")\n            return\n\n    print(\"Yes\")\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef main():\n    s = input()\n    t = input()\n\n    if len(s) != len(t):\n        print(\"No\")\n        exit()\n\n    # create a dictionary of each letter in the string\n    # and the number of times it occurs\n    s_dict = {}\n    t_dict = {}\n    for i in range(len(s)):\n        if s[i] in s_dict:\n            s_dict[s[i]] += 1\n        else:\n            s_dict[s[i]] = 1\n        if t[i] in t_dict:\n            t_dict[t[i]] += 1\n        else:\n            t_dict[t[i]] = 1\n\n    # compare the dictionaries\n    if s_dict == t_dict:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nS = input()\nT = input()\n\nS_set = set(S)\nT_set = set(T)\n\nif len(S_set) == len(T_set):\n    print('Yes')\nelse:\n    print('No')"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    s = input()\n    t = input()\n\n    if s == t:\n        print(\"Yes\")\n        sys.exit()\n\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            if s.count(s[i]) == t.count(t[i]) and s.count(t[i]) == t.count(s[i]):\n                print(\"Yes\")\n                sys.exit()\n\n    print(\"No\")\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nS = input()\nT = input()\n\nif len(S) != len(T):\n    print(\"No\")\n    exit()\n\ndic = {}\nfor s, t in zip(S, T):\n    if s not in dic:\n        if t not in dic.values():\n            dic[s] = t\n        else:\n            print(\"No\")\n            exit()\n    else:\n        if dic[s] != t:\n            print(\"No\")\n            exit()\n\nprint(\"Yes\")"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    S = input()\n    T = input()\n    # \u5358\u7d14\u306b\u3001\u6587\u5b57\u5217S\u3068\u6587\u5b57\u5217T\u3092\u6bd4\u8f03\u3059\u308b\n    if S == T:\n        print(\"Yes\")\n        return\n\n    # \u6587\u5b57\u5217S\u306b\u542b\u307e\u308c\u308b\u6587\u5b57\u3092\u3001\u6587\u5b57\u5217T\u306b\u542b\u307e\u308c\u308b\u6587\u5b57\u3068\u6bd4\u8f03\u3059\u308b\n    #   - \u6587\u5b57\u5217S\u306b\u542b\u307e\u308c\u308b\u6587\u5b57\u304c\u6587\u5b57\u5217T\u306b\u542b\u307e\u308c\u306a\u3044\u5834\u5408\u3001\u6587\u5b57\u5217S\u3068\u6587\u5b57\u5217T\u306f\u7b49\u3057\u304f\u306a\u3044\n    #   - \u6587\u5b57\u5217S\u306b\u542b\u307e\u308c\u308b\u6587\u5b57\u304c\u6587\u5b57\u5217T\u306b\u542b\u307e\u308c\u308b\u5834\u5408\u3001\u6587\u5b57\u5217S\u3068\u6587\u5b57\u5217T\u306f\u7b49\u3057\u3044\n    for i in range(len(S)):\n        if S[i] not in T:\n            print(\"No\")\n            return\n    print(\"Yes\")\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nS = input()\nT = input()\n\nif len(S) != len(T):\n    print(\"No\")\n    exit()\n\nif S == T:\n    print(\"Yes\")\n    exit()\n\n# \u5404\u6587\u5b57\u306e\u51fa\u73fe\u56de\u6570\u3092\u6570\u3048\u308b\nS_dict = {}\nT_dict = {}\nfor i in range(len(S)):\n    if S[i] in S_dict.keys():\n        S_dict[S[i]] += 1\n    else:\n        S_dict[S[i]] = 1\n    if T[i] in T_dict.keys():\n        T_dict[T[i]] += 1\n    else:\n        T_dict[T[i]] = 1\n\n# \u51fa\u73fe\u56de\u6570\u304c\u7570\u306a\u308b\u6587\u5b57\u304c\u3042\u308c\u3070\u4e0d\u53ef\u80fd\nif S_dict != T_dict:\n    print(\"No\")\n    exit()\n\n# \u5404\u6587\u5b57\u306e\u51fa\u73fe\u56de\u6570\u304c\u540c\u3058\u3067\u3042\u308c\u3070\u30012\u3064\u306e\u6587\u5b57\u5217\u304c\u540c\u3058\u6587\u5b57\u3092\u6301\u305f\u306a\u3044\u304b\u78ba\u8a8d\u3059\u308b\nS_list = list(S_dict.keys())\nfor i in range(len(S_list)):\n    for j in range(i+1, len(S_list)):\n        if S_list[i] in T and S_list[j] in T:\n            print(\"Yes\")\n            exit()\n\nprint(\"No\")"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nS = input()\nT = input()\n\nif len(set(S)) != len(set(T)):\n    print(\"No\")\n    exit()\n\nd = {}\nfor s, t in zip(S, T):\n    if s in d:\n        if d[s] != t:\n            print(\"No\")\n            exit()\n    else:\n        d[s] = t\n\nprint(\"Yes\")"
    }
  ],
  "created": 1649563025,
  "id": "cmpl-4vIzB7ErHlyE47NtmBOgWhFPHsMDs",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 23:57:38.423780 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    T = sys.stdin.readline().rstrip()\n\n    if len(S) != len(T):\n        print(\"No\")\n        return\n\n    s_dict = {}\n    t_dict = {}\n\n    for i in range(len(S)):\n        if S[i] in s_dict:\n            s_dict[S[i]] += 1\n        else:\n            s_dict[S[i]] = 1\n\n        if T[i] in t_dict:\n            t_dict[T[i]] += 1\n        else:\n            t_dict[T[i]] = 1\n\n    for k in s_dict.keys():\n        if k not in t_dict or s_dict[k] != t_dict[k]:\n            print(\"No\")\n            return\n\n    print(\"Yes\")\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-09 23:57:38.423803 REASON stop
2022-04-09 23:57:38.432397 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef main():\n    s = input()\n    t = input()\n\n    if len(s) != len(t):\n        print(\"No\")\n        exit()\n\n    # create a dictionary of each letter in the string\n    # and the number of times it occurs\n    s_dict = {}\n    t_dict = {}\n    for i in range(len(s)):\n        if s[i] in s_dict:\n            s_dict[s[i]] += 1\n        else:\n            s_dict[s[i]] = 1\n        if t[i] in t_dict:\n            t_dict[t[i]] += 1\n        else:\n            t_dict[t[i]] = 1\n\n    # compare the dictionaries\n    if s_dict == t_dict:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 23:57:38.432541 REASON stop
2022-04-09 23:57:38.438828 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nS = input()\nT = input()\n\nS_set = set(S)\nT_set = set(T)\n\nif len(S_set) == len(T_set):\n    print('Yes')\nelse:\n    print('No')"
}
2022-04-09 23:57:38.439035 REASON stop
2022-04-09 23:57:38.446402 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    s = input()\n    t = input()\n\n    if s == t:\n        print(\"Yes\")\n        sys.exit()\n\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            if s.count(s[i]) == t.count(t[i]) and s.count(t[i]) == t.count(s[i]):\n                print(\"Yes\")\n                sys.exit()\n\n    print(\"No\")\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 23:57:38.446545 REASON stop
2022-04-09 23:57:38.454406 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nS = input()\nT = input()\n\nif len(S) != len(T):\n    print(\"No\")\n    exit()\n\ndic = {}\nfor s, t in zip(S, T):\n    if s not in dic:\n        if t not in dic.values():\n            dic[s] = t\n        else:\n            print(\"No\")\n            exit()\n    else:\n        if dic[s] != t:\n            print(\"No\")\n            exit()\n\nprint(\"Yes\")"
}
2022-04-09 23:57:38.454558 REASON stop
2022-04-09 23:57:38.462662 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    S = input()\n    T = input()\n    # \u5358\u7d14\u306b\u3001\u6587\u5b57\u5217S\u3068\u6587\u5b57\u5217T\u3092\u6bd4\u8f03\u3059\u308b\n    if S == T:\n        print(\"Yes\")\n        return\n\n    # \u6587\u5b57\u5217S\u306b\u542b\u307e\u308c\u308b\u6587\u5b57\u3092\u3001\u6587\u5b57\u5217T\u306b\u542b\u307e\u308c\u308b\u6587\u5b57\u3068\u6bd4\u8f03\u3059\u308b\n    #   - \u6587\u5b57\u5217S\u306b\u542b\u307e\u308c\u308b\u6587\u5b57\u304c\u6587\u5b57\u5217T\u306b\u542b\u307e\u308c\u306a\u3044\u5834\u5408\u3001\u6587\u5b57\u5217S\u3068\u6587\u5b57\u5217T\u306f\u7b49\u3057\u304f\u306a\u3044\n    #   - \u6587\u5b57\u5217S\u306b\u542b\u307e\u308c\u308b\u6587\u5b57\u304c\u6587\u5b57\u5217T\u306b\u542b\u307e\u308c\u308b\u5834\u5408\u3001\u6587\u5b57\u5217S\u3068\u6587\u5b57\u5217T\u306f\u7b49\u3057\u3044\n    for i in range(len(S)):\n        if S[i] not in T:\n            print(\"No\")\n            return\n    print(\"Yes\")\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 23:57:38.462810 REASON stop
2022-04-09 23:57:38.469294 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nS = input()\nT = input()\n\nif len(S) != len(T):\n    print(\"No\")\n    exit()\n\nif S == T:\n    print(\"Yes\")\n    exit()\n\n# \u5404\u6587\u5b57\u306e\u51fa\u73fe\u56de\u6570\u3092\u6570\u3048\u308b\nS_dict = {}\nT_dict = {}\nfor i in range(len(S)):\n    if S[i] in S_dict.keys():\n        S_dict[S[i]] += 1\n    else:\n        S_dict[S[i]] = 1\n    if T[i] in T_dict.keys():\n        T_dict[T[i]] += 1\n    else:\n        T_dict[T[i]] = 1\n\n# \u51fa\u73fe\u56de\u6570\u304c\u7570\u306a\u308b\u6587\u5b57\u304c\u3042\u308c\u3070\u4e0d\u53ef\u80fd\nif S_dict != T_dict:\n    print(\"No\")\n    exit()\n\n# \u5404\u6587\u5b57\u306e\u51fa\u73fe\u56de\u6570\u304c\u540c\u3058\u3067\u3042\u308c\u3070\u30012\u3064\u306e\u6587\u5b57\u5217\u304c\u540c\u3058\u6587\u5b57\u3092\u6301\u305f\u306a\u3044\u304b\u78ba\u8a8d\u3059\u308b\nS_list = list(S_dict.keys())\nfor i in range(len(S_list)):\n    for j in range(i+1, len(S_list)):\n        if S_list[i] in T and S_list[j] in T:\n            print(\"Yes\")\n            exit()\n\nprint(\"No\")"
}
2022-04-09 23:57:38.469466 REASON stop
2022-04-09 23:57:38.477032 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nS = input()\nT = input()\n\nif len(set(S)) != len(set(T)):\n    print(\"No\")\n    exit()\n\nd = {}\nfor s, t in zip(S, T):\n    if s in d:\n        if d[s] != t:\n            print(\"No\")\n            exit()\n    else:\n        d[s] = t\n\nprint(\"Yes\")"
}
2022-04-09 23:57:38.477203 REASON stop
