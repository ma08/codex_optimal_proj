["\n\ndef max_adj_diff(n, m):\n    if n == 1:\n        return 0\n    return m - 1\n\nif __name__ == '__main__':\n    t = int(input())\n    for _ in range(t):\n        n, m = map(int, input().split())\n        print(max_adj_diff(n, m))", "\n\n# SOLUTION\n# This problem is quite easy.\n# The maximum possible sum of absolute differences between adjacent elements\n# is obtained when the array is sorted (or reversed sorted).\n# The answer is then the sum of all differences between consecutive elements.\n# The differences are the same as the element itself,\n# so the answer is the sum of all elements of the array.\n# As the array must have a sum of m,\n# the answer is m*(n-1).\n\nt = int(input())\n\nfor _ in range(t):\n    n, m = map(int, input().split())\n    print(m*(n-1))", "\n\n\ndef solve(n, m):\n    if n == 1:\n        return 0\n    if n == 2:\n        return m\n    if n == 3:\n        return m - 1\n    if n == 4:\n        return m - 2\n    if n % 2 == 0:\n        return m - n // 2 + 1\n    else:\n        return m - n // 2\n\nT = int(input())\nfor _ in range(T):\n    n, m = map(int, input().split())\n    print(solve(n, m))", "\n\n# SOLUTION\n# This is a math problem.\n# If we have an array of length n, and the sum is m, then the max diff is m - n.\n# If we have an array of length n, and the sum is less than m, then the max diff is sum - n.\n# If we have an array of length n, and the sum is greater than m, then the max diff is m - n.\n\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    print(max(m - n, 0))", "\n\nimport sys\n\ndef main():\n    t = int(sys.stdin.readline().strip())\n\n    for _ in range(t):\n        n, m = map(int, sys.stdin.readline().strip().split())\n        a = [0] * (n - 1) + [m]\n        print(sum(abs(a[i] - a[i + 1]) for i in range(n - 1)))\n\nif __name__ == '__main__':\n    main()", "\n\n\ndef solve(n, m):\n    if n == 1:\n        return 0\n    if m == 0:\n        return n - 1\n\n    return max(m - 1, n - m)\n\n\nif __name__ == '__main__':\n    n_tests = int(input())\n    for _ in range(n_tests):\n        n, m = map(int, input().split())\n        print(solve(n, m))", "\n\ndef max_sum_of_adjacent_difference(n, m):\n    \"\"\"\n    Find max sum of absolute difference between adjacent elements of array of length n with sum m.\n    \"\"\"\n    if n == 1:\n        return 0\n    if m > n * (n-1) / 2:\n        return n * (n-1)\n    else:\n        return m * 2\n\nfor _ in range(int(input())):\n    n, m = map(int, input().split())\n    print(max_sum_of_adjacent_difference(n, m))", "\n\nt = int(input())\n\nfor _ in range(t):\n    n, m = map(int, input().split())\n\n    if n == 1:\n        print(0)\n        continue\n\n    if n == 2:\n        print(m)\n        continue\n\n    if n == 3:\n        print(m*2)\n        continue\n\n    half = m // 2\n\n    if m % 2 == 0:\n        print(half*2)\n    else:\n        print(half*2 + 1)"]