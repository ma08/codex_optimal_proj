["\n\ndef check_palindrome(arr):\n    if len(arr) < 3:\n        return False\n    for i in range(len(arr)):\n        if i == 0:\n            continue\n        elif i == len(arr)-1:\n            return True\n        if arr[i] != arr[-i-1]:\n            return False\n\ndef palindrome(arr):\n    for i in range(len(arr)):\n        for j in range(i+2, len(arr)+1):\n            if check_palindrome(arr[i:j]):\n                return True\n    return False\n\nif __name__ == '__main__':\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        if palindrome(arr):\n            print('YES')\n        else:\n            print('NO')", "\n\ndef isPalindrome(arr):\n    for i in range(len(arr)//2):\n        if arr[i] != arr[len(arr)-i-1]:\n            return False\n    return True\n\ndef isPalindromeSubsequence(arr):\n    for i in range(len(arr)-2):\n        for j in range(i+2,len(arr)+1):\n            if isPalindrome(arr[i:j]):\n                return True\n    return False\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        arr = list(map(int,input().split()))\n        if isPalindromeSubsequence(arr):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\nmain()", "\n\n\ndef check_palindrome(sub_seq):\n    return sub_seq[0] == sub_seq[-1] and sub_seq[1] == sub_seq[-2]\n\n\ndef is_palindrome(seq):\n    return check_palindrome(seq) or (len(seq) > 3 and is_palindrome(seq[1:-1]))\n\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        seq = list(map(int, input().split()))\n        if is_palindrome(seq):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef isPalindrome(sub):\n    for i in range(int(len(sub)/2)):\n        if sub[i] != sub[-i-1]:\n            return False\n    return True\n\ndef isAnyPalindrome(a):\n    for i in range(3, len(a)+1):\n        for j in range(len(a)-i+1):\n            if isPalindrome(a[j:j+i]):\n                return True\n    return False\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if isAnyPalindrome(a):\n        print(\"YES\")\n    else:\n        print(\"NO\")", "\n\nt = int(input())\n\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    if n < 3:\n        print('NO')\n        continue\n    if n == 3:\n        if a[0] == a[1] or a[1] == a[2]:\n            print('YES')\n            continue\n        else:\n            print('NO')\n            continue\n    # n > 3    \n    if a[0] == a[1]:\n        i = 2\n        while i < n:\n            if a[0] == a[i]:\n                print('YES')\n                break\n            i += 1\n        if i == n:\n            print('NO')\n    else:\n        if a[1] == a[2]:\n            print('YES')\n        else:\n            print('NO')", "\n\nt = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    flag = False\n    for i in range(n-2):\n        if a[i] == a[i+1]:\n            if a[i+1] == a[i+2]:\n                flag = True\n                break\n            if i+3 < n and a[i+1] == a[i+3]:\n                flag = True\n                break\n    if flag:\n        print(\"YES\")\n    else:\n        print(\"NO\")", "\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        for j in range(n):\n            for k in range(j+1, n):\n                if a[j] == a[k]:\n                    for l in range(k+1, n):\n                        if a[l] == a[j]:\n                            print(\"YES\")\n                            break\n                    else:\n                        print(\"NO\")\n                    break\n            else:\n                continue\n            break\n        else:\n            print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()"]