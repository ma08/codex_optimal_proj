["\n\n\ndef main():\n    n = int(input())\n    a = input()\n    f = [int(x) for x in input().split()]\n\n    max_num = 0\n    max_idx = 0\n    for i in range(n):\n        if int(a[i]) == max(f):\n            max_num = max(max_num, int(a[i:]))\n            max_idx = i\n            break\n\n    for i in range(n - 1, -1, -1):\n        if int(a[i]) == max(f):\n            max_num = max(max_num, int(a[:i + 1]))\n\n    print(max_num)\n\n\nif __name__ == \"__main__\":\n    main()", "\n\nn = int(input())\na = input()\nf = list(map(int, input().split()))\n\n# if the function is the identity, then we can't do anything\nif f == list(range(1, 10)):\n    print(a)\n    exit()\n\n# if the function is the reverse identity, then we can make all the digits 9\nif f == list(range(9, 0, -1)):\n    print(9 * n)\n    exit()\n\n# if the function is the constant function with value 1, then we can make all the digits 1\nif f == [1] * 9:\n    print(1 * n)\n    exit()\n\n# if the function is the constant function with value 9, then we can make all the digits 9\nif f == [9] * 9:\n    print(9 * n)\n    exit()\n\n# otherwise, we can't do anything\nprint(a)", "\n\nn = int(input())\na = input()\nf = list(map(int, input().split()))\n\ns = 0\nfor i in range(1, n + 1):\n    s += f[int(a[-i]) - 1] * 10 ** (i - 1)\nprint(s)", "\n\n\ndef solve(n, a, f):\n    # a = list(map(int, a))\n    # f = list(map(int, f.split()))\n    f = [0] + f\n    # print(a)\n    # print(f)\n\n    a = list(a)\n    for i in range(n):\n        a[i] = f[int(a[i])]\n    # print(a)\n\n    cnt = 1\n    i = n - 1\n    while i > 0:\n        if a[i] > a[i-1]:\n            break\n        i -= 1\n    # print(i)\n    if i > 0:\n        a[i-1] = f[int(a[i-1])]\n        cnt += 1\n    # print(a)\n    a = ''.join(map(str, a))\n    return a, cnt\n\n\ndef main():\n    n = int(input())\n    a = input()\n    f = input()\n    a, cnt = solve(n, a, f)\n    print(a)\n    # print(cnt)\n\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef solve(a, f):\n    n = len(a)\n    d = [0 for i in range(n)]\n    for i in range(n):\n        d[i] = f[int(a[i]) - 1]\n    d.append(0)\n    f[0] = -1\n    f[8] = -1\n    for i in range(n):\n        if d[i] == d[i + 1]:\n            d[i] = f[d[i] - 1]\n    return int(''.join(map(str, d[:-1])))\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = sys.stdin.readline().strip()\n    f = list(map(int, sys.stdin.readline().split()))\n    print(solve(a, f))\n\n\nif __name__ == \"__main__\":\n    main()", "\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input()))\n    f = list(map(int, input().split()))\n\n    max_num = []\n    for i in range(n):\n        max_num.append(f[a[i]-1])\n\n    max_num_str = ''.join(map(str, max_num))\n    print(max_num_str)\n\n\nif __name__ == '__main__':\n    main()", "\n\ndef f(a, n, f):\n    a = list(a)\n    for i in range(n):\n        a[i] = str(f[int(a[i])])\n    return int(\"\".join(a))\n\ndef main():\n    n = int(input())\n    a = input()\n    f = list(map(int, input().split()))\n    print(max(f(a, n, f), f(a[::-1], n, f[::-1])))\n\nif __name__ == \"__main__\":\n    main()"]