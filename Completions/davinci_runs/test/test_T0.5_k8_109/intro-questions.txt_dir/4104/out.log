2022-04-09 23:51:49.589191 """
One very experienced problem writer decided to prepare a problem for April Fools Day contest. The task was very simple - given an arithmetic expression, return the result of evaluating this expression. However, looks like there is a bug in the reference solution...


-----Input-----

The only line of input data contains the arithmetic expression. The expression will contain between 2 and 10 operands, separated with arithmetic signs plus and/or minus. Each operand will be an integer between 0 and 255, inclusive.


-----Output-----

Reproduce the output of the reference solution, including the bug.


-----Examples-----
Input
8-7+6-5+4-3+2-1-0

Output
4

Input
2+2

Output
-46

Input
112-37

Output
375
"""
2022-04-09 23:51:49.589280 --------------------------
2022-04-09 23:52:13.448949 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n# My Solution\n\ndef calculate(expression):\n    # Write your code here\n    expression = expression.split('-')\n    result = 0\n    for i in range(len(expression)):\n        if i == 0:\n            result += int(expression[i])\n        else:\n            result -= int(expression[i])\n    return result\n\nprint(calculate('8-7+6-5+4-3+2-1-0'))\nprint(calculate('2+2'))\nprint(calculate('112-37'))"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    expression = sys.stdin.readline().strip()\n    result = 0\n    for c in expression:\n        if c == '+':\n            result += 1\n        elif c == '-':\n            result -= 1\n    print(result)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    expr = sys.stdin.readline().strip()\n    expr_list = expr.split('+')\n    result = 0\n    for num in expr_list:\n        num_list = num.split('-')\n        for n in num_list:\n            result += int(n)\n    print(result)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\ndef main():\n    expr = input()\n    result = 0\n    for i in range(len(expr)):\n        if expr[i] == '+':\n            result += int(expr[i+1])\n        elif expr[i] == '-':\n            result -= int(expr[i+1])\n    print(result)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\n\ninput = sys.stdin.readline().strip()\n\noperands = input.split(\"+\")\n\nfor i in range(len(operands)):\n    operands[i] = operands[i].split(\"-\")\n    if len(operands[i]) == 1:\n        operands[i] = int(operands[i][0])\n    else:\n        operands[i][0] = int(operands[i][0])\n        operands[i][1] = int(operands[i][1])\n        operands[i] = operands[i][0] - operands[i][1]\n\nprint(sum(operands))"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\ndef main():\n    s = input()\n\n    res = s.split('+')\n    res = [int(x) for x in res]\n    res = sum(res)\n\n    res = s.split('-')\n    res = [int(x) for x in res]\n    res = sum(res)\n\n    print(res)\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nimport re\n\ndef main():\n    input = raw_input()\n    print(re.sub(r'(\\d+)', r'0\\1', input))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\ndef eval_expr(expr):\n    a = expr.split('+')\n    a = [int(i) for i in a]\n    b = a[0]\n    for i in a[1:]:\n        b = b - i\n    return b\n\nprint(eval_expr(input()))"
    }
  ],
  "created": 1649562709,
  "id": "cmpl-4vIu58WLC2mu3HfKlEL7uU3J8gjaE",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 23:52:13.449365 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n# My Solution\n\ndef calculate(expression):\n    # Write your code here\n    expression = expression.split('-')\n    result = 0\n    for i in range(len(expression)):\n        if i == 0:\n            result += int(expression[i])\n        else:\n            result -= int(expression[i])\n    return result\n\nprint(calculate('8-7+6-5+4-3+2-1-0'))\nprint(calculate('2+2'))\nprint(calculate('112-37'))"
}
2022-04-09 23:52:13.449424 REASON stop
2022-04-09 23:52:13.461639 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    expression = sys.stdin.readline().strip()\n    result = 0\n    for c in expression:\n        if c == '+':\n            result += 1\n        elif c == '-':\n            result -= 1\n    print(result)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 23:52:13.461791 REASON stop
2022-04-09 23:52:13.463044 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    expr = sys.stdin.readline().strip()\n    expr_list = expr.split('+')\n    result = 0\n    for num in expr_list:\n        num_list = num.split('-')\n        for n in num_list:\n            result += int(n)\n    print(result)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 23:52:13.463126 REASON stop
2022-04-09 23:52:13.463760 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\ndef main():\n    expr = input()\n    result = 0\n    for i in range(len(expr)):\n        if expr[i] == '+':\n            result += int(expr[i+1])\n        elif expr[i] == '-':\n            result -= int(expr[i+1])\n    print(result)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 23:52:13.463875 REASON stop
2022-04-09 23:52:13.465101 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\n\ninput = sys.stdin.readline().strip()\n\noperands = input.split(\"+\")\n\nfor i in range(len(operands)):\n    operands[i] = operands[i].split(\"-\")\n    if len(operands[i]) == 1:\n        operands[i] = int(operands[i][0])\n    else:\n        operands[i][0] = int(operands[i][0])\n        operands[i][1] = int(operands[i][1])\n        operands[i] = operands[i][0] - operands[i][1]\n\nprint(sum(operands))"
}
2022-04-09 23:52:13.465215 REASON stop
2022-04-09 23:52:13.466437 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\ndef main():\n    s = input()\n\n    res = s.split('+')\n    res = [int(x) for x in res]\n    res = sum(res)\n\n    res = s.split('-')\n    res = [int(x) for x in res]\n    res = sum(res)\n\n    print(res)\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 23:52:13.466550 REASON stop
2022-04-09 23:52:13.467503 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nimport re\n\ndef main():\n    input = raw_input()\n    print(re.sub(r'(\\d+)', r'0\\1', input))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 23:52:13.467645 REASON stop
2022-04-09 23:52:13.469306 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\ndef eval_expr(expr):\n    a = expr.split('+')\n    a = [int(i) for i in a]\n    b = a[0]\n    for i in a[1:]:\n        b = b - i\n    return b\n\nprint(eval_expr(input()))"
}
2022-04-09 23:52:13.469403 REASON stop
