2022-04-09 23:16:09.436698 """
Polycarp has $n$ coins, the value of the $i$-th coin is $a_i$. Polycarp wants to distribute all the coins between his pockets, but he cannot put two coins with the same value into the same pocket.

For example, if Polycarp has got six coins represented as an array $a = [1, 2, 4, 3, 3, 2]$, he can distribute the coins into two pockets as follows: $[1, 2, 3], [2, 3, 4]$.

Polycarp wants to distribute all the coins with the minimum number of used pockets. Help him to do that.


-----Input-----

The first line of the input contains one integer $n$ ($1 \le n \le 100$) — the number of coins.

The second line of the input contains $n$ integers $a_1, a_2, \dots, a_n$ ($1 \le a_i \le 100$) — values of coins.


-----Output-----

Print only one integer — the minimum number of pockets Polycarp needs to distribute all the coins so no two coins with the same value are put into the same pocket.


-----Examples-----
Input
6
1 2 4 3 3 2

Output
2

Input
1
100

Output
1
"""
2022-04-09 23:16:09.436719 --------------------------
2022-04-09 23:16:33.209672 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = set()\n    c = 0\n    for i in a:\n        if i in s:\n            c += 1\n            s = set()\n        s.add(i)\n    print(c + 1)\n\nmain()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    coins = map(int, sys.stdin.readline().split())\n    # print n, coins\n\n    coins.sort()\n    # print coins\n\n    pockets = [coins[0]]\n    for i in range(1, n):\n        if coins[i] != coins[i-1]:\n            pockets.append(coins[i])\n\n    print len(pockets)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(len(set(a)))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\ndef solve(a):\n    # sort the array\n    a.sort()\n    # loop over the array\n    # if the next value is the same as the current value, then increment the number of pockets\n    # otherwise, keep the number of pockets the same\n    pockets = 1\n    for i in range(1, len(a)):\n        if a[i] == a[i - 1]:\n            pockets += 1\n    return pockets\n\nprint(solve(a))"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    coins = set(a)\n    print(len(coins))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nans = 1\nfor i in range(1, n):\n    if a[i] != a[i - 1]:\n        ans += 1\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\na = list(set(a))\nprint(len(a))"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nn = int(input())\na = [int(i) for i in input().split()]\n\ndef find_min_pockets(a):\n    a.sort()\n    curr_pockets = 1\n    curr_pocket = [a[0]]\n    for i in range(1, len(a)):\n        if a[i] in curr_pocket:\n            curr_pocket = [a[i]]\n            curr_pockets += 1\n        else:\n            curr_pocket.append(a[i])\n    return curr_pockets\n\nprint(find_min_pockets(a))"
    }
  ],
  "created": 1649560570,
  "id": "cmpl-4vILa7A4oUwsEVntjnmVfHqZUCRpg",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 23:16:33.210000 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = set()\n    c = 0\n    for i in a:\n        if i in s:\n            c += 1\n            s = set()\n        s.add(i)\n    print(c + 1)\n\nmain()"
}
2022-04-09 23:16:33.210024 REASON stop
2022-04-09 23:16:33.211539 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    coins = map(int, sys.stdin.readline().split())\n    # print n, coins\n\n    coins.sort()\n    # print coins\n\n    pockets = [coins[0]]\n    for i in range(1, n):\n        if coins[i] != coins[i-1]:\n            pockets.append(coins[i])\n\n    print len(pockets)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 23:16:33.211655 REASON stop
2022-04-09 23:16:33.212487 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(len(set(a)))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 23:16:33.212590 REASON stop
2022-04-09 23:16:33.213275 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\ndef solve(a):\n    # sort the array\n    a.sort()\n    # loop over the array\n    # if the next value is the same as the current value, then increment the number of pockets\n    # otherwise, keep the number of pockets the same\n    pockets = 1\n    for i in range(1, len(a)):\n        if a[i] == a[i - 1]:\n            pockets += 1\n    return pockets\n\nprint(solve(a))"
}
2022-04-09 23:16:33.213369 REASON stop
2022-04-09 23:16:33.213708 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    coins = set(a)\n    print(len(coins))\n\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-09 23:16:33.213739 REASON stop
2022-04-09 23:16:33.214124 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nans = 1\nfor i in range(1, n):\n    if a[i] != a[i - 1]:\n        ans += 1\n\nprint(ans)"
}
2022-04-09 23:16:33.214228 REASON stop
2022-04-09 23:16:33.214944 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nn = int(input())\na = list(map(int, input().split()))\na = list(set(a))\nprint(len(a))"
}
2022-04-09 23:16:33.215060 REASON stop
2022-04-09 23:16:33.215663 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nn = int(input())\na = [int(i) for i in input().split()]\n\ndef find_min_pockets(a):\n    a.sort()\n    curr_pockets = 1\n    curr_pocket = [a[0]]\n    for i in range(1, len(a)):\n        if a[i] in curr_pocket:\n            curr_pocket = [a[i]]\n            curr_pockets += 1\n        else:\n            curr_pocket.append(a[i])\n    return curr_pockets\n\nprint(find_min_pockets(a))"
}
2022-04-09 23:16:33.215772 REASON stop
