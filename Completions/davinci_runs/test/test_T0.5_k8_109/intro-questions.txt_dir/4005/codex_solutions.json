["", "\n\ndef main():\n    x1, y1, x2, y2 = map(int, input().split())\n    x3, y3, x4, y4 = map(int, input().split())\n    x5, y5, x6, y6 = map(int, input().split())\n\n    if (x1 >= x4 or x2 <= x3) and (x1 >= x6 or x2 <= x5) and (y1 >= y4 or y2 <= y3) and (y1 >= y6 or y2 <= y5):\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    white_sheet = [int(x) for x in input().split()]\n    black_sheet_1 = [int(x) for x in input().split()]\n    black_sheet_2 = [int(x) for x in input().split()]\n\n    # white sheet is fully covered by the black sheets\n    if (white_sheet[0] >= black_sheet_1[0] and white_sheet[1] >= black_sheet_1[1] and white_sheet[2] <= black_sheet_1[2] and white_sheet[3] <= black_sheet_1[3]) or (white_sheet[0] >= black_sheet_2[0] and white_sheet[1] >= black_sheet_2[1] and white_sheet[2] <= black_sheet_2[2] and white_sheet[3] <= black_sheet_2[3]):\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n\tx1, y1, x2, y2 = [int(x) for x in input().split()]\n\tx3, y3, x4, y4 = [int(x) for x in input().split()]\n\tx5, y5, x6, y6 = [int(x) for x in input().split()]\n\n\tif x3 <= x1 and x4 >= x2 and y3 <= y1 and y4 >= y2:\n\t\tprint(\"NO\")\n\t\treturn\n\n\tif x5 <= x1 and x6 >= x2 and y5 <= y1 and y6 >= y2:\n\t\tprint(\"NO\")\n\t\treturn\n\n\tprint(\"YES\")\n\nif __name__ == '__main__':\n\tmain()", "\n\n# SOLUTION\n\nwhite = [int(x) for x in input().split()]\nblack1 = [int(x) for x in input().split()]\nblack2 = [int(x) for x in input().split()]\n\n# check if white rectangle is completely covered\nif white[0] >= black1[0] and white[1] >= black1[1] and white[2] <= black1[2] and white[3] <= black1[3]:\n    print('NO')\nelif white[0] >= black2[0] and white[1] >= black2[1] and white[2] <= black2[2] and white[3] <= black2[3]:\n    print('NO')\nelse:\n    print('YES')", "\n\ndef check_overlap(a, b):\n    if a[1] < b[0] or a[0] > b[1]:\n        return False\n    else:\n        return True\n\ndef check_overlap_x(a, b):\n    if a[3] < b[2] or a[2] > b[3]:\n        return False\n    else:\n        return True\n\ndef check_overlap_y(a, b):\n    if a[0] < b[1] or a[1] > b[0]:\n        return False\n    else:\n        return True\n\ndef check_overlap_xy(a, b):\n    if a[0] < b[1] or a[1] > b[0]:\n        return False\n    elif a[3] < b[2] or a[2] > b[3]:\n        return False\n    else:\n        return True\n\n\ndef check_overlap_x_y(a, b):\n    if a[0] < b[1] or a[1] > b[0]:\n        return False\n    elif a[3] < b[2] or a[2] > b[3]:\n        return False\n    else:\n        return True\n\ndef main():\n    white_sheet = [int(x) for x in input().split()]\n    black_sheet1 = [int(x) for x in input().split()]\n    black_sheet2 = [int(x) for x in input().split()]\n    #white_sheet = [3, 3, 7, 5]\n    #black_sheet1 = [0, 0, 4, 6]\n    #black_sheet2 = [0, 0, 7, 4]\n    #white_sheet = [5, 2, 10, 5]\n    #black_sheet1 = [3, 1, 7, 6]\n    #black_sheet2 = [8, 1, 11, 7]\n    #white_sheet = [0, 0, 1000000, 1000000]\n    #black_sheet1 = [0, 0, 499999, 1000000]\n    #black_sheet2 = [500000, 0, 1000000, 1000000]\n    if check_overlap(black_sheet1, black_sheet2):\n        if check_overlap_xy(white_sheet, black_sheet1) and check_overlap_xy(white_sheet, black_sheet2):\n            print(\"NO\")\n        else:\n            print(\"YES\")\n    else:\n        if check_overlap_xy(white_sheet, black_sheet1) and check_overlap_xy(white_sheet, black_sheet2):\n            print(\"NO\")\n        else:\n            print(\"YES\")\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    white_sheet_x1, white_sheet_y1, white_sheet_x2, white_sheet_y2 = map(int, input().split())\n    black_sheet_1_x1, black_sheet_1_y1, black_sheet_1_x2, black_sheet_1_y2 = map(int, input().split())\n    black_sheet_2_x1, black_sheet_2_y1, black_sheet_2_x2, black_sheet_2_y2 = map(int, input().split())\n\n    if white_sheet_x1 == black_sheet_1_x1 and white_sheet_x2 == black_sheet_1_x2 and white_sheet_y1 == black_sheet_1_y1 and white_sheet_y2 == black_sheet_1_y2:\n        print(\"NO\")\n    elif black_sheet_1_x1 > white_sheet_x2 or black_sheet_1_x2 < white_sheet_x1 or black_sheet_1_y1 > white_sheet_y2 or black_sheet_1_y2 < white_sheet_y1:\n        print(\"YES\")\n    elif black_sheet_2_x1 > white_sheet_x2 or black_sheet_2_x2 < white_sheet_x1 or black_sheet_2_y1 > white_sheet_y2 or black_sheet_2_y2 < white_sheet_y1:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n\tw_corner_x, w_corner_y, w_width, w_height = map(int, input().split())\n\tb_corner_x, b_corner_y, b_width, b_height = map(int, input().split())\n\tb2_corner_x, b2_corner_y, b2_width, b2_height = map(int, input().split())\n\n\tif b_corner_x < w_corner_x and b_corner_x + b_width > w_corner_x + w_width and b_corner_y < w_corner_y and b_corner_y + b_height > w_corner_y + w_height:\n\t\tif b2_corner_x < w_corner_x and b2_corner_x + b2_width > w_corner_x + w_width and b2_corner_y < w_corner_y and b2_corner_y + b2_height > w_corner_y + w_height:\n\t\t\tprint(\"NO\")\n\t\telse:\n\t\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"YES\")\n\nif __name__ == '__main__':\n\tmain()"]