["\n\nn = int(input())\nx = [int(i) for i in input().split()]\nx.sort()\n\nif n == 1:\n    print(0)\nelif n == 2:\n    print(abs(x[0] - x[1]) // 2)\nelse:\n    if x[0] == x[n - 1]:\n        print(0)\n    elif x[0] == x[1]:\n        print(abs(x[0] - x[n - 1]) // 2)\n    elif x[n - 2] == x[n - 1]:\n        print(abs(x[0] - x[n - 1]) // 2)\n    else:\n        print(min(abs(x[0] - x[n - 2]), abs(x[1] - x[n - 1])) // 2 + 1)", "\n\nn = int(input())\nchips = list(map(int, input().split()))\n\nmin_chip = min(chips)\nmin_chip_count = chips.count(min_chip)\n\n# print(min_chip)\n# print(min_chip_count)\n\nmin_cost = 0\n\nfor i in range(n):\n    if chips[i] > min_chip:\n        min_cost += chips[i] - min_chip\n\nif min_chip_count == 1:\n    min_cost += 1\n\nprint(min_cost)", "\n\nn=int(input())\nx=list(map(int,input().split()))\nx=sorted(x)\nans=0\nif x[0]!=x[-1]:\n    ans+=1\n    for i in range(1,n):\n        if x[i]==x[i-1]:\n            ans+=1\nprint(ans)", "\n\nn = int(input())\nx = [int(i) for i in input().split()]\n\n# calculate the minimum and maximum values of the chips\nm = min(x)\nM = max(x)\n\n# find the number of chips with the minimum value\nm_count = x.count(m)\n\n# find the number of chips with the maximum value\nM_count = x.count(M)\n\n# find the number of chips with values between the minimum and maximum values\nbetween_count = n - m_count - M_count\n\n# find the best case for the number of coins to move the chips\nbest_case = M_count*(M-m) + between_count*(M-m-1)\n\n# print the best case for the number of coins to move the chips\nprint(best_case)", "\n\n#-----Solution-----\n\nn = int(input())\nx = [int(i) for i in input().split()]\n\nmin_x = min(x)\nmax_x = max(x)\n\nprint(min(max_x - min_x, (max_x - min_x) // 2 + (max_x - min_x) % 2))", "\n\nn = int(input())\nx = [int(i) for i in input().split()]\n\nx.sort()\n\nl = 0\nr = 1000000000\n\nwhile l < r:\n    m = (l + r) // 2\n    c = 0\n    for i in x:\n        c += abs(m - i)\n    if c <= n:\n        r = m\n    else:\n        l = m + 1\n\nc = 0\nfor i in x:\n    c += abs(l - i)\n\nprint(c // 2)", "\n\nn = int(input())\nx = list(map(int, input().split()))\n\nmin_x = min(x)\nmax_x = max(x)\n\n# The answer is the number of chips with the minimum coordinate + the number of chips with the maximum coordinate.\nprint(x.count(min_x) + x.count(max_x))", "\n\nimport sys\n\ndef solve():\n    n = int(input())\n    x = list(map(int, input().split()))\n    x.sort()\n    print(min(x[i] - x[i-1] for i in range(1, n)))\n\nif __name__ == \"__main__\":\n    solve()"]