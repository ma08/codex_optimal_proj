2022-04-09 23:50:46.159414 """
Takahashi has decided to hold fastest-finger-fast quiz games. Kizahashi, who is in charge of making the scoreboard, is struggling to write the program that manages the players' scores in a game, which proceeds as follows.
A game is played by N players, numbered 1 to N. At the beginning of a game, each player has K points.
When a player correctly answers a question, each of the other N-1 players receives minus one (-1) point. There is no other factor that affects the players' scores.
At the end of a game, the players with 0 points or lower are eliminated, and the remaining players survive.
In the last game, the players gave a total of Q correct answers, the i-th of which was given by Player A_i.
For Kizahashi, write a program that determines whether each of the N players survived this game.

-----Constraints-----
 - All values in input are integers.
 - 2 \leq N \leq 10^5
 - 1 \leq K \leq 10^9
 - 1 \leq Q \leq 10^5
 - 1 \leq A_i \leq N\ (1 \leq i \leq Q)

-----Input-----
Input is given from Standard Input in the following format:
N K Q
A_1
A_2
.
.
.
A_Q

-----Output-----
Print N lines. The i-th line should contain Yes if Player i survived the game, and No otherwise.

-----Sample Input-----
6 3 4
3
1
3
2

-----Sample Output-----
No
No
Yes
No
No
No

In the beginning, the players' scores are (3, 3, 3, 3, 3, 3).
 - Player 3 correctly answers a question. The players' scores are now (2, 2, 3, 2, 2, 2).
 - Player 1 correctly answers a question. The players' scores are now (2, 1, 2, 1, 1, 1).
 - Player 3 correctly answers a question. The players' scores are now (1, 0, 2, 0, 0, 0).
 - Player 2 correctly answers a question. The players' scores are now (0, 0, 1, -1, -1, -1).
Players 1, 2, 4, 5 and 6, who have 0 points or lower, are eliminated, and Player 3 survives this game.
"""
2022-04-09 23:50:46.159458 --------------------------
2022-04-09 23:51:12.163926 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n# N: number of players, K: points each player starts with, Q: total number of correct answers\nN, K, Q = map(int, input().split())\n\n# A: the player who answered correctly\nA = []\nfor i in range(Q):\n    a = int(input())\n    A.append(a)\n\n# each player's score\nscore = [K] * N\n\n# each player's survival status\nsurvived = [\"No\"] * N\n\nfor a in A:\n    # score of each player except the one who answered correctly\n    score[a-1] += 1\n    for i in range(N):\n        if i != a-1:\n            score[i] -= 1\n            if score[i] <= 0:\n                survived[i] = \"Yes\"\n\nfor s in survived:\n    print(s)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n#%%\nN, K, Q = map(int, input().split())\nA = [int(input()) for _ in range(Q)]\n\nplayers = [K]*N\nfor a in A:\n    players[a-1] += 1\n    for i in range(N):\n        if i != a-1:\n            players[i] -= 1\n\nfor p in players:\n    if p > 0:\n        print('Yes')\n    else:\n        print('No')"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    N, K, Q = map(int, sys.stdin.readline().split())\n    players = [K] * N\n    for i in range(Q):\n        A = int(sys.stdin.readline())\n        for j in range(N):\n            if j != A-1:\n                players[j] -= 1\n    for i in range(N):\n        if players[i] > 0:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    return\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\n# Read input\nN, K, Q = map(int, input().split())\nA = [int(input()) for _ in range(Q)]\n\n# Initialize players' scores\nscores = [K] * N\n\n# Update players' scores\nfor i in range(Q):\n    for j in range(N):\n        if j == A[i] - 1:\n            continue\n        else:\n            scores[j] -= 1\n\n# Output\nfor i in range(N):\n    if scores[i] <= 0:\n        print('No')\n    else:\n        print('Yes')"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nN, K, Q = map(int, input().split())\nA = [int(input()) for _ in range(Q)]\n\nscores = [K for _ in range(N)]\nfor a in A:\n    scores[a-1] += 1\n\nfor s in scores:\n    if s > 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\nn, k, q = map(int, input().split())\na = [int(input()) for _ in range(q)]\n\n# \u5404\u30d7\u30ec\u30a4\u30e4\u30fc\u306e\u6b63\u89e3\u6570\u3092\u6570\u3048\u308b\nplayers = [0] * n\nfor a_i in a:\n    players[a_i - 1] += 1\n\n# \u5404\u30d7\u30ec\u30a4\u30e4\u30fc\u306e\u30b9\u30b3\u30a2\u3092\u8a08\u7b97\u3059\u308b\nscores = [k - (q - p) for p in players]\n\n# \u30b9\u30b3\u30a2\u304c0\u4ee5\u4e0a\u306a\u3089\u751f\u304d\u6b8b\u308a\u3001\u305d\u3046\u3067\u306a\u3051\u308c\u3070\u6557\u9000\nfor score in scores:\n    if score > 0:\n        print('Yes')\n    else:\n        print('No')"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\nn, k, q = map(int, input().split())\na_list = [int(input()) for i in range(q)]\n\nscore_list = [k - q] * n\nfor a in a_list:\n    score_list[a - 1] += 1\n\nfor score in score_list:\n    if score > 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\nn, k, q = map(int, input().split())\nplayers = [k] * n\nfor _ in range(q):\n    players[int(input()) - 1] -= 1\nfor player in players:\n    if player > 0:\n        print('Yes')\n    else:\n        print('No')"
    }
  ],
  "created": 1649562646,
  "id": "cmpl-4vIt4cyj6vmSsSpo7YsVMcqeJgvpp",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 23:51:12.164163 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n# N: number of players, K: points each player starts with, Q: total number of correct answers\nN, K, Q = map(int, input().split())\n\n# A: the player who answered correctly\nA = []\nfor i in range(Q):\n    a = int(input())\n    A.append(a)\n\n# each player's score\nscore = [K] * N\n\n# each player's survival status\nsurvived = [\"No\"] * N\n\nfor a in A:\n    # score of each player except the one who answered correctly\n    score[a-1] += 1\n    for i in range(N):\n        if i != a-1:\n            score[i] -= 1\n            if score[i] <= 0:\n                survived[i] = \"Yes\"\n\nfor s in survived:\n    print(s)"
}
2022-04-09 23:51:12.164213 REASON stop
2022-04-09 23:51:12.209259 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n#%%\nN, K, Q = map(int, input().split())\nA = [int(input()) for _ in range(Q)]\n\nplayers = [K]*N\nfor a in A:\n    players[a-1] += 1\n    for i in range(N):\n        if i != a-1:\n            players[i] -= 1\n\nfor p in players:\n    if p > 0:\n        print('Yes')\n    else:\n        print('No')"
}
2022-04-09 23:51:12.209340 REASON stop
2022-04-09 23:51:12.238839 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    N, K, Q = map(int, sys.stdin.readline().split())\n    players = [K] * N\n    for i in range(Q):\n        A = int(sys.stdin.readline())\n        for j in range(N):\n            if j != A-1:\n                players[j] -= 1\n    for i in range(N):\n        if players[i] > 0:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    return\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-09 23:51:12.238931 REASON stop
2022-04-09 23:51:12.261228 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\n# Read input\nN, K, Q = map(int, input().split())\nA = [int(input()) for _ in range(Q)]\n\n# Initialize players' scores\nscores = [K] * N\n\n# Update players' scores\nfor i in range(Q):\n    for j in range(N):\n        if j == A[i] - 1:\n            continue\n        else:\n            scores[j] -= 1\n\n# Output\nfor i in range(N):\n    if scores[i] <= 0:\n        print('No')\n    else:\n        print('Yes')"
}
2022-04-09 23:51:12.261484 REASON stop
2022-04-09 23:51:12.283383 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nN, K, Q = map(int, input().split())\nA = [int(input()) for _ in range(Q)]\n\nscores = [K for _ in range(N)]\nfor a in A:\n    scores[a-1] += 1\n\nfor s in scores:\n    if s > 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")"
}
2022-04-09 23:51:12.283532 REASON stop
2022-04-09 23:51:12.306699 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\nn, k, q = map(int, input().split())\na = [int(input()) for _ in range(q)]\n\n# \u5404\u30d7\u30ec\u30a4\u30e4\u30fc\u306e\u6b63\u89e3\u6570\u3092\u6570\u3048\u308b\nplayers = [0] * n\nfor a_i in a:\n    players[a_i - 1] += 1\n\n# \u5404\u30d7\u30ec\u30a4\u30e4\u30fc\u306e\u30b9\u30b3\u30a2\u3092\u8a08\u7b97\u3059\u308b\nscores = [k - (q - p) for p in players]\n\n# \u30b9\u30b3\u30a2\u304c0\u4ee5\u4e0a\u306a\u3089\u751f\u304d\u6b8b\u308a\u3001\u305d\u3046\u3067\u306a\u3051\u308c\u3070\u6557\u9000\nfor score in scores:\n    if score > 0:\n        print('Yes')\n    else:\n        print('No')"
}
2022-04-09 23:51:12.306900 REASON stop
2022-04-09 23:51:12.333180 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\nn, k, q = map(int, input().split())\na_list = [int(input()) for i in range(q)]\n\nscore_list = [k - q] * n\nfor a in a_list:\n    score_list[a - 1] += 1\n\nfor score in score_list:\n    if score > 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")"
}
2022-04-09 23:51:12.333266 REASON stop
2022-04-09 23:51:12.357823 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\nn, k, q = map(int, input().split())\nplayers = [k] * n\nfor _ in range(q):\n    players[int(input()) - 1] -= 1\nfor player in players:\n    if player > 0:\n        print('Yes')\n    else:\n        print('No')"
}
2022-04-09 23:51:12.357929 REASON stop
