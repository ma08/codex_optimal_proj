2022-04-09 22:37:36.406803 """
You are given an array $a$ consisting of $n$ integer numbers.

Let instability of the array be the following value: $\max\limits_{i = 1}^{n} a_i - \min\limits_{i = 1}^{n} a_i$.

You have to remove exactly one element from this array to minimize instability of the resulting $(n-1)$-elements array. Your task is to calculate the minimum possible instability.


-----Input-----

The first line of the input contains one integer $n$ ($2 \le n \le 10^5$) — the number of elements in the array $a$.

The second line of the input contains $n$ integers $a_1, a_2, \dots, a_n$ ($1 \le a_i \le 10^5$) — elements of the array $a$.


-----Output-----

Print one integer — the minimum possible instability of the array if you have to remove exactly one element from the array $a$.


-----Examples-----
Input
4
1 3 3 7

Output
2

Input
2
1 100000

Output
0



-----Note-----

In the first example you can remove $7$ then instability of the remaining array will be $3 - 1 = 2$.

In the second example you can remove either $1$ or $100000$ then instability of the remaining array will be $100000 - 100000 = 0$ and $1 - 1 = 0$ correspondingly.
"""
2022-04-09 22:37:36.406836 --------------------------
2022-04-09 22:38:02.028533 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n\n    max_instability = 0\n    for i in range(n):\n        instability = max(arr[:i] + arr[i + 1:]) - min(arr[:i] + arr[i + 1:])\n        if instability > max_instability:\n            max_instability = instability\n\n    print(max_instability)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n#-----Code-----\n\nn = int(input())\na = list(map(int, input().split()))\n\na.remove(max(a))\nprint(max(a) - min(a))"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    if n == 2:\n        print(0)\n    else:\n        print(min(a[n-2] - a[0], a[n-1] - a[1]))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 3,
      "logprobs": null,
      "text": "\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nprint(max(a) - min(a) - max([abs(a[i] - a[i+1]) for i in range(n-1)]) - min([abs(a[i] - a[i+1]) for i in range(n-1)]))"
    },
    {
      "finish_reason": "stop",
      "index": 4,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef min_instability(arr):\n    min_inst = sys.maxsize\n    for i in range(len(arr)):\n        inst = max(arr[:i] + arr[i+1:]) - min(arr[:i] + arr[i+1:])\n        if inst < min_inst:\n            min_inst = inst\n    return min_inst\n\nif __name__ == '__main__':\n    n = int(input().strip())\n    arr = list(map(int, input().strip().split()))\n    print(min_instability(arr))"
    },
    {
      "finish_reason": "stop",
      "index": 5,
      "logprobs": null,
      "text": "\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    min_value = min(a)\n    max_value = max(a)\n    min_index = a.index(min_value)\n    max_index = a.index(max_value)\n\n    if min_index < max_index:\n        print(max_value - min(a[:min_index] + a[min_index + 1:]))\n    else:\n        print(max(a[:max_index] + a[max_index + 1:]) - min_value)\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 6,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    print(min([max(a[:i] + a[i+1:]) - min(a[:i] + a[i+1:]) for i in range(n)]))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 7,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(min(a[n-2] - a[0], a[n-1] - a[1]))\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1649558256,
  "id": "cmpl-4vHkGmgEFciNQFDuuggKHeI6ah2uz",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 22:38:02.028878 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n\n    max_instability = 0\n    for i in range(n):\n        instability = max(arr[:i] + arr[i + 1:]) - min(arr[:i] + arr[i + 1:])\n        if instability > max_instability:\n            max_instability = instability\n\n    print(max_instability)\n\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-09 22:38:02.028917 REASON stop
2022-04-09 22:38:02.041009 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n#-----Code-----\n\nn = int(input())\na = list(map(int, input().split()))\n\na.remove(max(a))\nprint(max(a) - min(a))"
}
2022-04-09 22:38:02.041088 REASON stop
2022-04-09 22:38:02.041555 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    if n == 2:\n        print(0)\n    else:\n        print(min(a[n-2] - a[0], a[n-1] - a[1]))\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-09 22:38:02.041648 REASON stop
2022-04-09 22:38:02.042115 3 {
  "finish_reason": "stop",
  "index": 3,
  "logprobs": null,
  "text": "\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nprint(max(a) - min(a) - max([abs(a[i] - a[i+1]) for i in range(n-1)]) - min([abs(a[i] - a[i+1]) for i in range(n-1)]))"
}
2022-04-09 22:38:02.042185 REASON stop
2022-04-09 22:38:02.042400 4 {
  "finish_reason": "stop",
  "index": 4,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef min_instability(arr):\n    min_inst = sys.maxsize\n    for i in range(len(arr)):\n        inst = max(arr[:i] + arr[i+1:]) - min(arr[:i] + arr[i+1:])\n        if inst < min_inst:\n            min_inst = inst\n    return min_inst\n\nif __name__ == '__main__':\n    n = int(input().strip())\n    arr = list(map(int, input().strip().split()))\n    print(min_instability(arr))"
}
2022-04-09 22:38:02.042431 REASON stop
2022-04-09 22:38:02.042627 5 {
  "finish_reason": "stop",
  "index": 5,
  "logprobs": null,
  "text": "\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    min_value = min(a)\n    max_value = max(a)\n    min_index = a.index(min_value)\n    max_index = a.index(max_value)\n\n    if min_index < max_index:\n        print(max_value - min(a[:min_index] + a[min_index + 1:]))\n    else:\n        print(max(a[:max_index] + a[max_index + 1:]) - min_value)\n\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 22:38:02.042652 REASON stop
2022-04-09 22:38:02.042874 6 {
  "finish_reason": "stop",
  "index": 6,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    print(min([max(a[:i] + a[i+1:]) - min(a[:i] + a[i+1:]) for i in range(n)]))\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-09 22:38:02.042900 REASON stop
2022-04-09 22:38:02.043101 7 {
  "finish_reason": "stop",
  "index": 7,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(min(a[n-2] - a[0], a[n-1] - a[1]))\n\nif __name__ == '__main__':\n    main()"
}
2022-04-09 22:38:02.043129 REASON stop
