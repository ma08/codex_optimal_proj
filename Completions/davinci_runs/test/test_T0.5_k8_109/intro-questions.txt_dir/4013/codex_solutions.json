["\n\nimport sys\n\ndef min_instability(arr):\n    min_inst = sys.maxsize\n    for i in range(len(arr)):\n        inst = max(arr[:i] + arr[i+1:]) - min(arr[:i] + arr[i+1:])\n        if inst < min_inst:\n            min_inst = inst\n    return min_inst\n\nif __name__ == '__main__':\n    n = int(input().strip())\n    arr = list(map(int, input().strip().split()))\n    print(min_instability(arr))", "\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    min_value = min(a)\n    max_value = max(a)\n    min_index = a.index(min_value)\n    max_index = a.index(max_value)\n\n    if min_index < max_index:\n        print(max_value - min(a[:min_index] + a[min_index + 1:]))\n    else:\n        print(max(a[:max_index] + a[max_index + 1:]) - min_value)\n\n\nif __name__ == '__main__':\n    main()", "\n\n\ndef main():\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n\n    max_instability = 0\n    for i in range(n):\n        instability = max(arr[:i] + arr[i + 1:]) - min(arr[:i] + arr[i + 1:])\n        if instability > max_instability:\n            max_instability = instability\n\n    print(max_instability)\n\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    print(min([max(a[:i] + a[i+1:]) - min(a[:i] + a[i+1:]) for i in range(n)]))\n\nif __name__ == \"__main__\":\n    main()", "\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nprint(max(a) - min(a) - max([abs(a[i] - a[i+1]) for i in range(n-1)]) - min([abs(a[i] - a[i+1]) for i in range(n-1)]))", "\n\n#-----Code-----\n\nn = int(input())\na = list(map(int, input().split()))\n\na.remove(max(a))\nprint(max(a) - min(a))", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    if n == 2:\n        print(0)\n    else:\n        print(min(a[n-2] - a[0], a[n-1] - a[1]))\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(min(a[n-2] - a[0], a[n-1] - a[1]))\n\nif __name__ == '__main__':\n    main()"]