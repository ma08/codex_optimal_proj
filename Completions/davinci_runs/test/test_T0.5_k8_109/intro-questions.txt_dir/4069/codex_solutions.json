["\n\n\ndef main():\n    \"\"\"\n    The key to solving this problem is to find the remainder of X after moving K times\n    \"\"\"\n    # get inputs\n    X, K, D = map(int, input().split())\n\n    # get the remainder of X after moving K times\n    r = abs(X) % D\n\n    # if the remainder is smaller than the distance to move\n    if r < D - r:\n        print(r)\n    else:\n        print(D - r)\n\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\ndef main():\n    x, k, d = map(int, sys.stdin.readline().rstrip().split())\n    if x < 0:\n        x = -x\n    if k < x // d:\n        print(x - k * d)\n    else:\n        x -= k * d\n        k -= x // d\n        if k % 2 == 0:\n            print(x % d)\n        else:\n            print(d - x % d)\n\nif __name__ == \"__main__\":\n    main()", "\n\n# python3\n# X, K, D = map(int, input().split())\nX, K, D = 6, 2, 4\n\n# \u6b63\u306e\u6574\u6570K\u306b\u5bfe\u3057\u3066\u3001K\u3092D\u3067\u5272\u3063\u305f\u5546\u3068\u3042\u307e\u308a\u3092\u6c42\u3081\u308b\n# \u4f8b\uff1aK=5, D=3 \u306e\u3068\u304d\u3001\u5546\u306f1\u3001\u3042\u307e\u308a\u306f2\nq, r = divmod(K, D)\n\n# \u524d\u8ff0\u306e\u901a\u308a\u3001K\u3092D\u3067\u5272\u3063\u305f\u5546\u304c\u5076\u6570\u306e\u3068\u304d\u306f\u3001\u7d76\u5bfe\u5024\u304c\u5c0f\u3055\u304f\u306a\u308b\u3088\u3046\u306bK\u56de\u79fb\u52d5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n# \u4f8b\uff1aK=5, D=3 \u306e\u3068\u304d\u3001\u79fb\u52d5\u56de\u6570\u306f5\u56de\u3067\u7d76\u5bfe\u5024\u304c\u5c0f\u3055\u304f\u306a\u308b\u3088\u3046\u306b\u79fb\u52d5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\nif q % 2 == 0:\n    print(abs(X - r))\n\n# \u524d\u8ff0\u306e\u901a\u308a\u3001K\u3092D\u3067\u5272\u3063\u305f\u5546\u304c\u5947\u6570\u306e\u3068\u304d\u306f\u3001\u7d76\u5bfe\u5024\u304c\u5c0f\u3055\u304f\u306a\u308b\u3088\u3046\u306bK\u56de\u79fb\u52d5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\n# \u4f8b\uff1aK=6, D=3 \u306e\u3068\u304d\u3001\u79fb\u52d5\u56de\u6570\u306f6\u56de\u3067\u7d76\u5bfe\u5024\u304c\u5c0f\u3055\u304f\u306a\u308b\u3088\u3046\u306b\u79fb\u52d5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\nelse:\n    # \u3053\u306e\u3068\u304d\u3001K=6, D=3 \u306e\u3068\u304d\u306f\u3001K=5, D=3 \u306e\u3068\u304d\u3068\u540c\u69d8\u306b\u79fb\u52d5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n    # \u3064\u307e\u308a\u3001K=6, D=3 \u306e\u3068\u304d\u306f\u3001(K-1)\u56de\u79fb\u52d5\u3057\u3066\u304b\u3089\u3001(D-r)\u56de\u79fb\u52d5\u3059\u308b\u3053\u3068\u3067\u7d76\u5bfe\u5024\u304c\u5c0f\u3055\u304f\u306a\u308b\u3088\u3046\u306b\u79fb\u52d5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n    # \u4f8b\uff1aK=6, D=3 \u306e\u3068\u304d\u3001(K-1)\u56de\u79fb\u52d5\u3057\u3066\u304b\u3089\u3001(D-r)\u56de\u79fb\u52d5\u3059\u308b\u3053\u3068\u3067\u7d76\u5bfe\u5024\u304c\u5c0f\u3055\u304f\u306a\u308b\u3088\u3046\u306b\u79fb\u52d5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n    # \u3057\u305f\u304c\u3063\u3066\u3001K=6, D=3 \u306e\u3068\u304d\u306e\u7d76\u5bfe\u5024\u306f\u3001(D-r)\u3068\u306a\u308b\n    print(abs(X - (D - r)))", "\n\n# ========\n# Solution\n# ========\n\n# Read input\nx, k, d = map(int, input().split())\n\n# If the number of steps is even, then the final position will be x - k * d\n# If the number of steps is odd, then the final position will be x - (k - 1) * d\n# If the final position is over the limit, then we need to move back again\nif (x - k * d) > 0:\n    print(x - k * d)\nelif (x - (k - 1) * d) < 0:\n    print(abs(x - (k - 1) * d))\nelse:\n    print(abs(x - k * d))", "\n\nx, k, d = map(int, input().split())\n\n# if x is within k*d distance of 0, the answer is always x-k*d\nif abs(x) <= k*d:\n    print(abs(x - k*d))\n    exit()\n\n# if x is outside k*d distance of 0, the answer is always x%d\nprint(x % d)", "\n\nx, k, d = map(int, input().split())\n\nif k * d <= abs(x):\n    print(abs(x) - k * d)\nelse:\n    k -= abs(x) // d\n    x = abs(x) % d\n    if k % 2 == 0:\n        print(x)\n    else:\n        print(abs(x - d))", "\n\nimport sys\n\nx, k, d = map(int, sys.stdin.readline().split())\n\nif abs(x) >= k * d:\n    print(abs(x) - k * d)\nelse:\n    if ((k - abs(x) // d) % 2 == 0):\n        print(abs(x) % d)\n    else:\n        print(d - abs(x) % d)", "\n\ndef main():\n    x, k, d = map(int, input().split())\n\n    min_abs = abs(x)\n    if k <= min_abs // d:\n        print(abs(x - d * k))\n    else:\n        k -= min_abs // d\n        if k % 2 == 0:\n            print(abs(x - d * (min_abs // d)))\n        else:\n            print(abs(x - d * (min_abs // d)) - d)\n\nif __name__ == '__main__':\n    main()"]