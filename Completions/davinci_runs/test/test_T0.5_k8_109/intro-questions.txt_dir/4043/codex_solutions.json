["\n\ndef solution(n, d, k):\n    if d > n-1:\n        return \"NO\"\n    if k == 1:\n        if d == 1:\n            return \"YES\\n\" + \"\\n\".join([\"{} {}\".format(i, i+1) for i in xrange(1, n)])\n        else:\n            return \"NO\"\n    if k == 2:\n        if d == 1:\n            return \"YES\\n\" + \"\\n\".join([\"{} {}\".format(i, i+1) for i in xrange(1, n)])\n        elif d == 2:\n            return \"YES\\n\" + \"\\n\".join([\"{} {}\".format(i, i+1) for i in xrange(1, n)])\n        else:\n            return \"NO\"\n    if k == 3:\n        if d == 1:\n            return \"YES\\n\" + \"\\n\".join([\"{} {}\".format(i, i+1) for i in xrange(1, n)])\n        elif d == 2:\n            return \"YES\\n\" + \"\\n\".join([\"{} {}\".format(i, i+1) for i in xrange(1, n)])\n        elif d == 3:\n            return \"YES\\n\" + \"\\n\".join([\"{} {}\".format(i, i+1) for i in xrange(1, n)])\n        else:\n            return \"NO\"\n    if k == 4:\n        if d == 1:\n            return \"YES\\n\" + \"\\n\".join([\"{} {}\".format(i, i+1) for i in xrange(1, n)])\n        elif d == 2:\n            return \"YES\\n\" + \"\\n\".join([\"{} {}\".format(i, i+1) for i in xrange(1, n)])\n        elif d == 3:\n            return \"YES\\n\" + \"\\n\".join([\"{} {}\".format(i, i+1) for i in xrange(1, n)])\n        elif d == 4:\n            return \"YES\\n\" + \"\\n\".join([\"{} {}\".format(i, i+1) for i in xrange(1, n)])\n        else:\n            return \"NO\"\n\nn, d, k = map(int, raw_input().split())\nprint solution(n, d, k)", "\nfrom collections import defaultdict\nfrom queue import Queue\n\nn, d, k = map(int, input().split())\n\nif d == 1:\n    if n == 2:\n        print(\"YES\")\n        print(1, 2)\n    else:\n        print(\"NO\")\nelif d == 2:\n    if n <= k + 1:\n        print(\"YES\")\n        for i in range(2, n + 1):\n            print(1, i)\n    else:\n        print(\"NO\")\nelif d == 3:\n    if n <= 2 * k + 1:\n        print(\"YES\")\n        for i in range(2, n + 1):\n            print(1, i)\n    else:\n        print(\"NO\")\nelse:\n    if n <= 3 * k + 1:\n        print(\"YES\")\n        for i in range(2, n + 1):\n            print(1, i)\n    else:\n        print(\"NO\")", "\n\nn, d, k = map(int, input().split())\n\nif n - 1 <= k * (d - 1):\n    print(\"YES\")\n    for i in range(2, n + 1):\n        print(i, 1)\n    for i in range(2, d):\n        for j in range(1, k + 1):\n            if i + j <= n:\n                print(i, i + j)\nelse:\n    print(\"NO\")", "\n\nn, d, k = map(int, input().split())\n\n\ndef solve(n, d, k):\n    if d == 1:\n        return \"YES\\n1 2\\n\" + \"\\n\".join([\"2 \" + str(i + 3) for i in range(n - 2)])\n    if d == 2:\n        if k >= n - 1:\n            return \"YES\\n1 2\\n\" + \"\\n\".join(\n                [\"1 \" + str(i + 3) for i in range(n - 2)]\n            )\n        else:\n            return \"NO\"\n    if d == 3:\n        if k >= n - 2:\n            return \"YES\\n1 2\\n\" + \"\\n\".join(\n                [\"1 \" + str(i + 3) for i in range(n - 2)]\n            )\n        else:\n            return \"NO\"\n    if d == 4:\n        if k >= n - 3:\n            return \"YES\\n1 2\\n\" + \"\\n\".join(\n                [\"1 \" + str(i + 3) for i in range(n - 2)]\n            )\n        else:\n            return \"NO\"\n\n\nprint(solve(n, d, k))", "\n\nimport sys\nimport queue\n\n\nclass Tree:\n    def __init__(self, n, d, k):\n        self.n = n\n        self.d = d\n        self.k = k\n\n    def can_construct(self):\n        if self.n == 1:\n            return True\n\n        if self.d == 1:\n            return self.n <= self.k + 1\n\n        if self.d == 2:\n            return self.n <= 2 * self.k\n\n        if self.d == 3:\n            return self.n <= 2 * self.k + 1\n\n        if self.n == 2:\n            return False\n\n        if self.d == self.n - 1:\n            return self.n <= 3 * self.k\n\n        if self.n == self.d + 1:\n            return self.n <= 3 * self.k + 1\n\n        if self.n == self.d + 2:\n            return self.n <= 3 * self.k + 2\n\n        if self.n == self.d + 3:\n            return self.n <= 3 * self.k + 3\n\n        if self.n == self.d + 4:\n            return self.n <= 3 * self.k + 4\n\n        return False\n\n    def construct(self):\n        if not self.can_construct():\n            return\n\n        tree = [[] for _ in range(self.n)]\n\n        for i in range(1, self.n + 1):\n            for j in range(1, self.n + 1):\n                if i == j:\n                    continue\n                if len(tree[i - 1]) < self.k and len(tree[j - 1]) < self.k:\n                    tree[i - 1].append(j)\n                    tree[j - 1].append(i)\n\n        for i in range(1, self.n + 1):\n            for j in tree[i - 1]:\n                print(i, j)\n\n    def is_diameter(self, tree):\n        q = queue.Queue()\n        visited = [False] * self.n\n        dist = [0] * self.n\n\n        q.put(0)\n        visited[0] = True\n\n        while not q.empty():\n            v = q.get()\n            for u in tree[v]:\n                if not visited[u]:\n                    visited[u] = True\n                    dist[u] = dist[v] + 1\n                    q.put(u)\n\n        return max(dist) == self.d\n\n    def is_tree(self, tree):\n        if self.n == 1:\n            return True\n\n        visited = [False] * self.n\n        q = queue.Queue()\n\n        visited[0] = True\n        q.put(0)\n\n        while not q.empty():\n            v = q.get()\n            for u in tree[v]:\n                if not visited[u]:\n                    visited[u] = True\n                    q.put(u)\n\n        return all(visited)\n\n    def construct2(self):\n        if not self.can_construct():\n            return\n\n        tree = [[] for _ in range(self.n)]\n\n        for i in range(1, self.n + 1):\n            for j in range(1, self.n + 1):\n                if i == j:\n                    continue\n                if len(tree[i - 1]) < self.k and len(tree[j - 1]) < self.k:\n                    tree[i - 1].append(j - 1)\n                    tree[j - 1].append(i - 1)\n\n        if not self.is_diameter(tree):\n            return\n\n        if not self.is_tree(tree):\n            return\n\n        for i in range(1, self.n + 1):\n            for j in tree[i - 1]:\n                print(i, j + 1)\n\n\ndef main():\n    reader = (tuple(map(int, line.split())) for line in sys.stdin)\n    n, d, k = next(reader)\n    tree = Tree(n, d, k)\n    tree.construct2()\n\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\nimport math\nimport string\nimport random\nimport collections\nimport itertools\nimport re\n\n#sys.stdin = open('input.txt')\n#sys.stdout = open('output.txt', 'w')\n\ndef readline():\n    return sys.stdin.readline().strip()\n\ndef readlines():\n    return sys.stdin.readlines()\n\ndef read_ints():\n    return [int(x) for x in readline().split()]\n\ndef print_line(x):\n    print(x)\n    sys.stdout.flush()\n\ndef print_lines(xs):\n    print('\\n'.join([str(x) for x in xs]))\n    sys.stdout.flush()\n\ndef print_array(xs):\n    print(' '.join([str(x) for x in xs]))\n    sys.stdout.flush()\n\ndef array_to_string(arr, sep=' '):\n    return sep.join([str(x) for x in arr])\n\ndef array_to_lines(arr, sep=' '):\n    return '\\n'.join([array_to_string(x, sep) for x in arr])\n\ndef matrix_to_lines(matrix, sep=' '):\n    return '\\n'.join([array_to_string(x, sep) for x in matrix])\n\ndef matrix_to_string(matrix, sep=' '):\n    return '\\n'.join([array_to_string(x, sep) for x in matrix])\n\ndef read_matrix(rows, columns, sep=' '):\n    return [read_array(columns, sep) for _ in range(rows)]\n\ndef read_array(size, sep=' '):\n    return [int(x) for x in readline().split(sep)]\n\ndef read_int():\n    return int(readline())\n\ndef read_ints():\n    return [int(x) for x in readline().split()]\n\ndef read_ints_array(size):\n    return [int(x) for x in readline().split()]\n\ndef read_string():\n    return readline().strip()\n\ndef read_strings():\n    return readline().split()\n\ndef read_int_map(size):\n    return {k: int(v) for k, v in itertools.zip_longest(itertools.count(), readline().split())}\n\ndef read_int_maps(size):\n    return [read_int_map(size) for _ in range(size)]\n\ndef read_ints_array(size):\n    return [int(x) for x in readline().split()]\n\ndef read_pair(sep=' '):\n    return tuple(read_ints(sep=sep))\n\ndef read_pairs(size, sep=' '):\n    return [read_pair(sep=sep) for _ in range(size)]\n\ndef read_triple(sep=' '):\n    return tuple(read_ints(sep=sep))\n\ndef read_triples(size, sep=' '):\n    return [read_triple(sep=sep) for _ in range(size)]\n\ndef read_quadruple(sep=' '):\n    return tuple(read_ints(sep=sep))\n\ndef read_quadruples(size, sep=' '):\n    return [read_quadruple(sep=sep) for _ in range(size)]\n\ndef read_quintuple(sep=' '):\n    return tuple(read_ints(sep=sep))\n\ndef read_quintuples(size, sep=' '):\n    return [read_quintuple(sep=sep) for _ in range(size)]\n\ndef read_sextuple(sep=' '):\n    return tuple(read_ints(sep=sep))\n\ndef read_sextuples(size, sep=' '):\n    return [read_sextuple(sep=sep) for _ in range(size)]\n\ndef read_int():\n    return int(readline())\n\ndef read_int_array(size):\n    return [int(x) for x in readline().split()]\n\ndef read_int_matrix(rows, columns):\n    return [[int(x) for x in readline().split()] for _ in range(rows)]\n\ndef read_int_map(size):\n    return {k: int(v) for k, v in itertools.zip_longest(itertools.count(), readline().split())}\n\ndef read_int_maps(size):\n    return [read_int_map(size) for _ in range(size)]\n\ndef read_str():\n    return readline().strip()\n\ndef read_str_array(size):\n    return [x.strip() for x in readline().split()]\n\ndef read_str_matrix(rows, columns):\n    return [read_str_array(columns) for _ in range(rows)]\n\ndef solve(n, d, k):\n    if d > (n - 1):\n        return False, []\n    if d == 1:\n        return True, [(i, i + 1) for i in range(1, n)]\n    if d == 2:\n        if n % 2 == 0:\n            return True, [(i, i + 2) for i in range(1, n, 2)]\n        else:\n            return True, [(i, i + 2) for i in range(1, n - 1, 2)] + [(n - 1, n)]\n    if d == 3:\n        if n == 3:\n            return True, [(1, 2), (2, 3)]\n        if n == 4:\n            return True, [(1, 2), (2, 3), (3, 4)]\n        if n == 5:\n            return True, [(1, 2), (2, 3), (3, 4), (4, 5)]\n        if n == 6:\n            return True, [(1, 2), (2, 3), (3, 4), (4, 5), (5, 6)]\n        if n == 7:\n            return True, [(1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7)]\n        if n == 8:\n            return True, [(1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8)]\n        if n == 9:\n            return True, [(1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8), (8, 9)]\n        if n == 10:\n            return True, [(1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8), (8, 9), (9, 10)]\n    if d == 4:\n        if n == 4:\n            return True, [(1, 2), (2, 3), (3, 4)]\n        if n == 5:\n            return True, [(1, 2), (2, 3), (3, 4), (4, 5)]\n        if n == 6:\n            return True, [(1, 2), (2, 3), (3, 4), (4, 5), (5, 6)]\n        if n == 7:\n            return True, [(1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7)]\n        if n == 8:\n            return True, [(1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8)]\n        if n == 9:\n            return True, [(1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8), (8, 9)]\n        if n == 10:\n            return True, [(1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8), (8, 9), (9, 10)]\n    return False, []\n\ndef main():\n    n, d, k = read_ints()\n    ok, lines = solve(n, d, k)\n    if ok:\n        print('YES')\n        print_lines([array_to_string(x) for x in lines])\n    else:\n        print('NO')\n\nif __name__ == '__main__':\n    main()", "\n\nimport sys\n\ndef main():\n    n, d, k = map(int, input().split())\n    \n    if d == 1:\n        if n == 1 and k >= 1:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n        sys.exit()\n    \n    if n == 2:\n        if d == 2 and k >= 2:\n            print(\"YES\")\n            print(\"1 2\")\n        else:\n            print(\"NO\")\n        sys.exit()\n    \n    if d == 2:\n        if k >= 2:\n            print(\"YES\")\n            for i in range(n - 1):\n                print(i + 1, i + 2)\n        else:\n            print(\"NO\")\n        sys.exit()\n    \n    if d == 3:\n        if n == 3:\n            if k >= 2:\n                print(\"YES\")\n                print(\"1 2\")\n                print(\"2 3\")\n            else:\n                print(\"NO\")\n        elif n == 4:\n            if k >= 3:\n                print(\"YES\")\n                print(\"1 2\")\n                print(\"2 3\")\n                print(\"3 4\")\n            else:\n                print(\"NO\")\n        elif n == 5:\n            if k >= 3:\n                print(\"YES\")\n                print(\"1 2\")\n                print(\"2 3\")\n                print(\"3 4\")\n                print(\"4 5\")\n            else:\n                print(\"NO\")\n        elif n == 6:\n            if k >= 3:\n                print(\"YES\")\n                print(\"1 2\")\n                print(\"2 3\")\n                print(\"3 4\")\n                print(\"4 5\")\n                print(\"5 6\")\n            else:\n                print(\"NO\")\n        elif n == 7:\n            if k >= 3:\n                print(\"YES\")\n                print(\"1 2\")\n                print(\"2 3\")\n                print(\"3 4\")\n                print(\"4 5\")\n                print(\"5 6\")\n                print(\"6 7\")\n            else:\n                print(\"NO\")\n        elif n == 8:\n            if k >= 3:\n                print(\"YES\")\n                print(\"1 2\")\n                print(\"2 3\")\n                print(\"3 4\")\n                print(\"4 5\")\n                print(\"5 6\")\n                print(\"6 7\")\n                print(\"7 8\")\n            else:\n                print(\"NO\")\n        elif n == 9:\n            if k >= 3:\n                print(\"YES\")\n                print(\"1 2\")\n                print(\"2 3\")\n                print(\"3 4\")\n                print(\"4 5\")\n                print(\"5 6\")\n                print(\"6 7\")\n                print(\"7 8\")\n                print(\"8 9\")\n            else:\n                print(\"NO\")\n        else:\n            if k >= 4:\n                print(\"YES\")\n                print(\"1 2\")\n                print(\"2 3\")\n                print(\"3 4\")\n                print(\"4 5\")\n                print(\"5 6\")\n                print(\"6 7\")\n                print(\"7 8\")\n                print(\"8 9\")\n                print(\"9 10\")\n            else:\n                print(\"NO\")\n        sys.exit()\n    \n    if d == 4:\n        if n == 4:\n            if k >= 3:\n                print(\"YES\")\n                print(\"1 2\")\n                print(\"2 3\")\n                print(\"3 4\")\n            else:\n                print(\"NO\")\n        elif n == 5:\n            if k >= 3:\n                print(\"YES\")\n                print(\"1 2\")\n                print(\"2 3\")\n                print(\"3 4\")\n                print(\"4 5\")\n            else:\n                print(\"NO\")\n        elif n == 6:\n            if k >= 3:\n                print(\"YES\")\n                print(\"1 2\")\n                print(\"2 3\")\n                print(\"3 4\")\n                print(\"4 5\")\n                print(\"5 6\")\n            else:\n                print(\"NO\")\n        elif n == 7:\n            if k >= 3:\n                print(\"YES\")\n                print(\"1 2\")\n                print(\"2 3\")\n                print(\"3 4\")\n                print(\"4 5\")\n                print(\"5 6\")\n                print(\"6 7\")\n            else:\n                print(\"NO\")\n        elif n == 8:\n            if k >= 3:\n                print(\"YES\")\n                print(\"1 2\")\n                print(\"2 3\")\n                print(\"3 4\")\n                print(\"4 5\")\n                print(\"5 6\")\n                print(\"6 7\")\n                print(\"7 8\")\n            else:\n                print(\"NO\")\n        elif n == 9:\n            if k >= 3:\n                print(\"YES\")\n                print(\"1 2\")\n                print(\"2 3\")\n                print(\"3 4\")\n                print(\"4 5\")\n                print(\"5 6\")\n                print(\"6 7\")\n                print(\"7 8\")\n                print(\"8 9\")\n            else:\n                print(\"NO\")\n        elif n == 10:\n            if k >= 3:\n                print(\"YES\")\n                print(\"1 2\")\n                print(\"2 3\")\n                print(\"3 4\")\n                print(\"4 5\")\n                print(\"5 6\")\n                print(\"6 7\")\n                print(\"7 8\")\n                print(\"8 9\")\n                print(\"9 10\")\n            else:\n                print(\"NO\")\n        else:\n            if k >= 4:\n                print(\"YES\")\n                print(\"1 2\")\n                print(\"2 3\")\n                print(\"3 4\")\n                print(\"4 5\")\n                print(\"5 6\")\n                print(\"6 7\")\n                print(\"7 8\")\n                print(\"8 9\")\n                print(\"9 10\")\n                print(\"10 11\")\n            else:\n                print(\"NO\")\n        sys.exit()\n    \n    if d == 5:\n        if n == 5:\n            if k >= 3:\n                print(\"YES\")\n                print(\"1 2\")\n                print(\"2 3\")\n                print(\"3 4\")\n                print(\"4 5\")\n            else:\n                print(\"NO\")\n        elif n == 6:\n            if k >= 3:\n                print(\"YES\")\n                print(\"1 2\")\n                print(\"2 3\")\n                print(\"3 4\")\n                print(\"4 5\")\n                print(\"5 6\")\n            else:\n                print(\"NO\")\n        elif n == 7:\n            if k >= 3:\n                print(\"YES\")\n                print(\"1 2\")\n                print(\"2 3\")\n                print(\"3 4\")\n                print(\"4 5\")\n                print(\"5 6\")\n                print(\"6 7\")\n            else:\n                print(\"NO\")\n        elif n == 8:\n            if k >= 3:\n                print(\"YES\")\n                print(\"1 2\")\n                print(\"2 3\")\n                print(\"3 4\")\n                print(\"4 5\")\n                print(\"5 6\")\n                print(\"6 7\")\n                print(\"7 8\")\n            else:\n                print(\"NO\")\n        elif n == 9:\n            if k >= 3:\n                print(\"YES\")\n                print(\"1 2\")\n                print(\"2 3\")\n                print(\"3 4\")\n                print(\"4 5\")\n                print(\"5 6\")\n                print(\"6 7\")\n                print(\"7 8\")\n                print(\"8 9\")\n            else:\n                print(\"NO\")\n        elif n == 10:\n            if k >= 3:\n                print(\"YES\")\n                print(\"1 2\")\n                print(\"2 3\")\n                print(\"3 4\")\n                print(\"4 5\")\n                print(\"5 6\")\n                print(\"6 7\")\n                print(\"7 8\")\n                print(\"8 9\")\n                print(\"9 10\")\n            else:\n                print(\"NO\")\n        else:\n            if k >= 4:\n                print(\"YES\")\n                print(\"1 2\")\n                print(\"2 3\")\n                print(\"3 4\")\n                print(\"4 5\")\n                print(\"5 6\")\n                print(\"6 7\")\n                print(\"7 8\")\n                print(\"8 9\")\n                print(\"9 10\")\n                print(\"10 11\")\n            else:\n                print(\"NO\")\n        sys.exit()\n    \n    print(\"YES\")\n    print(\"1 2\")\n    print(\"2 3\")\n    print(\"3 4\")\n    print(\"4 5\")\n    print(\"5 6\")\n    print(\"6 7\")\n    print(\"7 8\")\n    print(\"8 9\")\n    print(\"9 10\")\n    print(\"10 11\")\n    print(\"11 12\")\n    print(\"12 13\")\n    print(\"13 14\")\n    print(\"14 15\")\n    print(\"15 16\")\n    print(\"16 17\")\n    print(\"17 18\")\n    print(\"18 19\")\n    print(\"19 20\")\n\nmain()"]