["\n\n# cook your dish here\na,b,c = map(int, input().split())\nans = 1\nwhile a>=1 and b>=1 and c>=1:\n    ans = ans + 1\n    a -= 1\n    b -= 1\n    c -= 1\nprint(ans)", "\n\ndef parse_input():\n    \"\"\"\n    Parses input, returns a tuple of integers.\n    \"\"\"\n    return tuple(map(int, input().split()))\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    a, b, c = parse_input()\n    print(min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c) + min(a, b, c))\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    a, b, c = map(int, input().split())\n    print(min(a+b+c, (a+b)*2, (a+c)*2, (b+c)*2))\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\ndef main():\n    a, b, c = map(int,sys.stdin.readline().split())\n    print(min(a,b,c)+min(a+b+c,a+c,b+c))\n\nif __name__ == \"__main__\":\n    main()", "\n\nimport sys\n\ndef main():\n    a,b,c = map(int,sys.stdin.readline().split())\n    print(min(a,b,c)*7+min(a,b,c)-max(a,b,c))\n\nif __name__ == \"__main__\":\n    main()", "\n\nfrom sys import stdin\n\ndef main():\n    a, b, c = [int(x) for x in stdin.readline().split()]\n    print(min(a, b//2, c//3)*7)\n\nmain()", "\n\nimport sys\n\ndef gcd(a, b):\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    a, b, c = map(int, sys.stdin.readline().split())\n\n    # The number of days the cat can eat without additional food purchases\n    # is the number of days in the smallest period that contains all of the\n    # dishes.\n    num_days = lcm(a, lcm(b, c))\n\n    print(num_days)\n\nif __name__ == '__main__':\n    main()", "\n\na, b, c = map(int, input().split())\n\ndays = [0, 0, 0, 0, 0, 0, 0]\ndays[0] = a\ndays[1] = b\ndays[2] = c\n\nfor i in range(3, 7):\n    days[i] = min(days[i-3], days[i-2], days[i-1])\n\nprint(sum(days))"]