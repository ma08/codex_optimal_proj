["\n\ndef main():\n    n, r = map(int, input().split())\n    house = list(map(int, input().split()))\n\n    # First check if there are any heaters at all\n    if sum(house) == 0:\n        print(-1)\n        return\n\n    # Next check if we can just turn all the heaters on\n    if sum(house) + 2*r - 1 == n:\n        print(n)\n        return\n\n    # Now check if we can warm up the house\n    # If we can't, return -1\n    # If we can, return the minimum number of heaters we need to turn on\n    count = 0\n    for i in range(n):\n        if house[i] == 1:\n            count += 1\n            i += 2*r - 1\n    if count < n:\n        print(-1)\n        return\n    else:\n        # Now we know we can warm up the house\n        # We need to turn on heaters at the first and last positions\n        # Then we need to turn on a heater at each position that is not warmed up by the previous heater\n        # We know we can warm up the house, so we know all the positions in between will be warmed up\n        # The minimum number of heaters we need to turn on is the number of intervals between heaters + 1\n        # The +1 is for the first and last positions\n        count = 1\n        for i in range(n):\n            if house[i] == 1:\n                count += 1\n                i += 2*r - 1\n        print(count)\n        return\n\nif __name__ == '__main__':\n    main()", "\n\ndef main():\n    \"\"\"\n    main function\n    \"\"\"\n    n, r = map(int, input().split())\n    arr = list(map(int, input().split()))\n    heater = 0\n    heater_arr = []\n    for i in range(n):\n        if arr[i] == 1:\n            heater_arr.append(i+1)\n\n    if heater_arr == []:\n        print(-1)\n    else:\n        i = 0\n        while i < len(heater_arr):\n            if i == 0:\n                if heater_arr[i] - 1 > r:\n                    heater += 1\n                    i += 1\n                else:\n                    heater += 1\n                    i += 1\n            else:\n                if heater_arr[i] - heater_arr[i-1] > 2*r:\n                    heater += 1\n                    i += 1\n                else:\n                    i += 1\n        print(heater)\n\n\nmain()", "\n\ndef main():\n    # read input\n    n, r = map(int, input().split())\n    a = list(map(int, input().split()))\n\n    # find heaters and unheated positions\n    heaters = [i for i in range(n) if a[i]]\n    unheated = [i for i in range(n) if not a[i]]\n\n    # find the minimum number of heaters needed to warm up the whole house\n    ans = 0\n    for pos in unheated:\n        # find the closest heater to the left\n        left = 0\n        right = len(heaters) - 1\n        while left < right:\n            mid = (left + right) // 2\n            if heaters[mid] < pos:\n                left = mid + 1\n            else:\n                right = mid\n        if heaters[left] >= pos:\n            left -= 1\n\n        # find the closest heater to the right\n        left = 0\n        right = len(heaters) - 1\n        while left < right:\n            mid = (left + right) // 2\n            if heaters[mid] <= pos:\n                left = mid + 1\n            else:\n                right = mid\n\n        # if the closest heaters cannot warm up the position, add a new heater\n        if left >= len(heaters) or heaters[left] > pos + r - 1:\n            ans += 1\n            heaters.insert(left, pos)\n\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()", "\n\nn, r = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ndef heaters(n, r, a):\n    if sum(a) == 0:\n        return -1\n\n    count = 0\n    i = 0\n    while i < n:\n        if a[i] == 1:\n            i += 2*r - 1\n        else:\n            count += 1\n            i += 2*r - 1\n    return count\n\nprint(heaters(n, r, a))", "\n\ndef main():\n    n, r = map(int, input().split())\n    house = list(map(int, input().split()))\n    heaters = 0\n    warmed_up = []\n    for i in range(len(house)):\n        if house[i] == 1:\n            warmed_up.extend(range(i-r+1, i+r))\n    warmed_up = set(warmed_up)\n    if len(warmed_up) == n:\n        print(sum(house))\n    else:\n        print(-1)\n\n\n\nif __name__ == \"__main__\":\n    main()", "\n\ndef main():\n    n, r = map(int, input().split())\n    house = list(map(int, input().split()))\n    heaters = 0\n    for i in range(n):\n        if house[i] == 1:\n            heaters += 1\n            for j in range(i-r+1, i+r):\n                if j >= 0 and j < n:\n                    house[j] = 2\n    if 1 in house:\n        print(-1)\n    else:\n        print(heaters)\n\nif __name__ == \"__main__\":\n    main()", "\n\nn, r = map(int, input().split())\na = list(map(int, input().split()))\n\nans = 0\n\nfor i in range(n):\n    if a[i] == 0:\n        j = i - 1\n        while j >= 0 and i - j <= r - 1:\n            if a[j] == 1:\n                ans += 1\n                break\n            j -= 1\n        j = i + 1\n        while j < n and j - i <= r - 1:\n            if a[j] == 1:\n                ans += 1\n                break\n            j += 1\n        if j == n and j - i > r - 1:\n            print(-1)\n            exit()\n\nprint(ans)", "\n\ndef main():\n    n, r = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = 0\n    i = 0\n    while i < n:\n        if a[i] == 0:\n            j = i + 1\n            while j < n and a[j] == 0:\n                j += 1\n            if j == n:\n                ans = -1\n                break\n            ans += 1\n            i = j + r - 1\n        else:\n            i += r\n    print(ans)\n\nmain()"]