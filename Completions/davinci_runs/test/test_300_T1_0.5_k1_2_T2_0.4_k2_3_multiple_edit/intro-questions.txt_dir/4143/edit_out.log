2022-04-22 19:10:36.010675 num operations 2
2022-04-22 19:10:36.010697 size on input set 1
2022-04-22 19:10:36.010848 using api key derek
2022-04-22 19:10:43.335620 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\nA, B, C, D, E = [int(i) for i in input().split()]\n\ndef minute_needed(num_people):\n    return (num_people + A - 1) // A + (num_people + B - 1) // B + (num_people + C - 1) // C + (num_people + D - 1) // D + (num_people + E - 1) // E\n\nprint(minute_needed(N))\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\nA, B, C, D, E = [int(i) for i in input().split()]\n\ndef minutes_needed(num_people):\n    return (num_people + A - 1) // A + (num_people + B - 1) // B + (num_people + C - 1) // C + (num_people + D - 1) // D + (num_people + E - 1) // E - 5\n\nprint(minutes_needed(N))\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\nA, B, C, D, E = [int(i) for i in input().split()]\n\ndef minute_needed(num_people):\n    return (num_people + A - 1) // A + (num_people + B - 1) // B + (num_people + C - 1) // C + (num_people + D - 1) // D + (num_people + E - 1) // E\n\nprint(minute_needed(N))\n"
    }
  ],
  "created": 1650654636,
  "object": "edit"
}
2022-04-22 19:10:43.335889 fix spelling mistakes 3 ['\nN = int(input())\nA, B, C, D, E = [int(i) for i in input().split()]\n\ndef minute_needed(num_people):\n    return (num_people + A - 1) // A + (num_people + B - 1) // B + (num_people + C - 1) // C + (num_people + D - 1) // D + (num_people + E - 1) // E\n\nprint(minute_needed(N))\n', '\nN = int(input())\nA, B, C, D, E = [int(i) for i in input().split()]\n\ndef minutes_needed(num_people):\n    return (num_people + A - 1) // A + (num_people + B - 1) // B + (num_people + C - 1) // C + (num_people + D - 1) // D + (num_people + E - 1) // E - 5\n\nprint(minutes_needed(N))\n', '\nN = int(input())\nA, B, C, D, E = [int(i) for i in input().split()]\n\ndef minute_needed(num_people):\n    return (num_people + A - 1) // A + (num_people + B - 1) // B + (num_people + C - 1) // C + (num_people + D - 1) // D + (num_people + E - 1) // E\n\nprint(minute_needed(N))\n']
2022-04-22 19:10:43.335919 size on output set 2
2022-04-22 19:10:43.335926 size on input set 2
2022-04-22 19:10:43.336069 using api key kouti
2022-04-22 19:10:51.902564 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "N = int(input())\nA, B, C, D, E = [int(i) for i in input().split()] \n\ndef minutes_needed(num_people):\n    return (num_people + A - 1) // A + (num_people + B - 1) // B + (num_people + C - 1) // C + (num_people + D - 1) // D + (num_people + E - 1) // E - 5 \n\nprint(minutes_needed(N))\n"
    },
    {
      "index": 1,
      "text": "N = int(input())\nA, B, C, D, E = [int(i) for i in input().split()]\n\n\nprint(minutes_needed(N))\n"
    },
    {
      "index": 2,
      "text": "N = int(input())\nA, B, C, D, E = [int(i) for i in input().split()]\n\ndef minutes_needed(num_people):\n    return (num_people + A - 1) // A + (num_people + B - 1) // B + (num_people + C - 1) // C + (num_people + D - 1) // D + (num_people + E - 1) // E - 5\n\nprint(minutes_needed(N))\n"
    }
  ],
  "created": 1650654643,
  "object": "edit"
}
2022-04-22 19:10:51.902793 fix syntax errors 3 ['N = int(input())\nA, B, C, D, E = [int(i) for i in input().split()] \n\ndef minutes_needed(num_people):\n    return (num_people + A - 1) // A + (num_people + B - 1) // B + (num_people + C - 1) // C + (num_people + D - 1) // D + (num_people + E - 1) // E - 5 \n\nprint(minutes_needed(N))\n', 'N = int(input())\nA, B, C, D, E = [int(i) for i in input().split()]\n\n\nprint(minutes_needed(N))\n', 'N = int(input())\nA, B, C, D, E = [int(i) for i in input().split()]\n\ndef minutes_needed(num_people):\n    return (num_people + A - 1) // A + (num_people + B - 1) // B + (num_people + C - 1) // C + (num_people + D - 1) // D + (num_people + E - 1) // E - 5\n\nprint(minutes_needed(N))\n']
2022-04-22 19:10:51.902957 using api key kouti
2022-04-22 19:11:03.372759 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\ninput = sys.stdin.readline\n\n\ndef main():\n    N = int(input())\n    A, B, C, D, E = [int(i) for i in input().split()]\n\nprint(minute_needed(N))\n"
    },
    {
      "index": 1,
      "text": "N = int(input())\nA, B, C, D, E = [int(i) for i in input().split()]\n\ndef minute_needed(N):\n    return (N + A - 1) // A + (N + B - 1) // B + (N + C - 1) // C + (N + D - 1) // D + (N + E - 1) // E\n\nprint(minute_needed(N))\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\nA, B, C, D, E = [int(i) for i in input().split()]\n\ndef minute_needed(num_people):\n    return (num_people + A - 1) // A + (num_people + B - 1) // B + (num_people + C - 1) // C + (num_people + D - 1) // D + (num_people + E - 1) // E - 4\n\nprint(minute_needed(N))\n"
    }
  ],
  "created": 1650654651,
  "object": "edit"
}
2022-04-22 19:11:03.372994 fix syntax errors 3 ['import sys\ninput = sys.stdin.readline\n\n\ndef main():\n    N = int(input())\n    A, B, C, D, E = [int(i) for i in input().split()]\n\nprint(minute_needed(N))\n', 'N = int(input())\nA, B, C, D, E = [int(i) for i in input().split()]\n\ndef minute_needed(N):\n    return (N + A - 1) // A + (N + B - 1) // B + (N + C - 1) // C + (N + D - 1) // D + (N + E - 1) // E\n\nprint(minute_needed(N))\n', '\nN = int(input())\nA, B, C, D, E = [int(i) for i in input().split()]\n\ndef minute_needed(num_people):\n    return (num_people + A - 1) // A + (num_people + B - 1) // B + (num_people + C - 1) // C + (num_people + D - 1) // D + (num_people + E - 1) // E - 4\n\nprint(minute_needed(N))\n']
2022-04-22 19:11:03.373031 size on output set 6
2022-04-22 19:11:03.373046 num operations 2
2022-04-22 19:11:03.373054 size on input set 1
2022-04-22 19:11:03.373242 using api key sunu
2022-04-22 19:11:08.224443 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# My answer (wrong)\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n"
    },
    {
      "index": 1,
      "text": "\n\n# My answer (first commit)\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n"
    },
    {
      "index": 2,
      "text": "\n\n# My answer.\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n"
    }
  ],
  "created": 1650654663,
  "object": "edit"
}
2022-04-22 19:11:08.224827 fix spelling mistakes 3 ['\n\n# My answer (wrong)\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n', '\n\n# My answer (first commit)\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n', '\n\n# My answer.\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n']
2022-04-22 19:11:08.224881 size on output set 3
2022-04-22 19:11:08.224888 size on input set 3
2022-04-22 19:11:08.225031 using api key kouti
2022-04-22 19:11:13.765770 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# My answer (wrong)\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer(from https://beta.atcoder.jp/contests/abc087/submissions/2423336)\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n"
    },
    {
      "index": 1,
      "text": "\n# My answer (wrong)\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n"
    },
    {
      "index": 2,
      "text": "\n\n# My answer (wrong)\nN, A, B, C, D, E = map(int, input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n"
    }
  ],
  "created": 1650654668,
  "object": "edit"
}
2022-04-22 19:11:13.766040 fix syntax errors 3 ['\n# My answer (wrong)\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer(from https://beta.atcoder.jp/contests/abc087/submissions/2423336)\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n', '\n# My answer (wrong)\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n', '\n\n# My answer (wrong)\nN, A, B, C, D, E = map(int, input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n']
2022-04-22 19:11:13.766297 using api key sunu
2022-04-22 19:11:18.318226 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# My answer.\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n"
    },
    {
      "index": 1,
      "text": "\n# My answer.\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n"
    },
    {
      "index": 2,
      "text": "\n# My answer.\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n"
    }
  ],
  "created": 1650654673,
  "object": "edit"
}
2022-04-22 19:11:18.318520 fix syntax errors 3 ['\n# My answer.\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n', '\n# My answer.\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n', '\n# My answer.\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n']
2022-04-22 19:11:18.318722 using api key jaanu
2022-04-22 19:11:23.070366 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# My answer\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n"
    },
    {
      "index": 1,
      "text": "\n# My answer (first commit)\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n"
    },
    {
      "index": 2,
      "text": "\n# My answer\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n"
    }
  ],
  "created": 1650654678,
  "object": "edit"
}
2022-04-22 19:11:23.070717 fix syntax errors 3 ['\n\n# My answer\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n', '\n# My answer (first commit)\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n', '\n# My answer\nN, A, B, C, D, E = (int(x) for x in input().split())\n\nif N % A != 0:\n    train = N // A + 1\nelse:\n    train = N // A\n\nif (N - (A * train)) % B != 0:\n    bus = (N - (A * train)) // B + 1\nelse:\n    bus = (N - (A * train)) // B\n\nif (N - (A * train) - (B * bus)) % C != 0:\n    taxi = (N - (A * train) - (B * bus)) // C + 1\nelse:\n    taxi = (N - (A * train) - (B * bus)) // C\n\nif (N - (A * train) - (B * bus) - (C * taxi)) % D != 0:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D + 1\nelse:\n    airplane = (N - (A * train) - (B * bus) - (C * taxi)) // D\n\nif (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) % E != 0:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E + 1\nelse:\n    ship = (N - (A * train) - (B * bus) - (C * taxi) - (D * airplane)) // E\n\nprint(train + bus + taxi + airplane + ship)\n\n# Best answer\na, b, c, d, e, n = map(int, input().split())\n\nprint((n + a - 1) // a + (n + b - 1) // b + (n + c - 1) // c + (n + d - 1) // d + (n + e - 1) // e)\n']
2022-04-22 19:11:23.070768 size on output set 7
