["#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    sheep, wolves = map(int, sys.stdin.readline().split())\n    if sheep < wolves:\n        print('unsafe')\n    else:\n        print('safe')\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    sheep, wolves, chickens = map(int, sys.stdin.readline().split())\n    if sheep < wolves or chickens < wolves:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    sheeps, wolves = map(int, sys.stdin.readline().split())\n    if sheeps < wolves:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    sheep, wolves = map(int, sys.stdin.readline().split()) # split() splits the string into list of words\n    if sheep < wolves:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    sheep, wolf = map(int, sys.stdin.readline().split())\n    if sheep < wolf:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    sheep, wolves = map(int, sys.stdin.readline().split()) # read in the input\n\n    if sheep < wolves: # if the number of sheep is less than the number of wolves, print unsafe\n        print(\"unsafe\")\n    else: # otherwise, print safe\n        print(\"safe\")\n\nif __name__ == '__main__': # call the main function\n    main()\n", "import sys\n\ndef main():\n    sheep, wolves = map(int, sys.stdin.readline().strip().split())\n    if sheep <= wolves:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    sheep, wolves = map(int, sys.stdin.readline().split())\n\n    if sheep < wolves:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    sheeps, wolves = map(int, sys.stdin.readline().split()) \n\n    if sheeps < wolves:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    sheep, wolf = map(int, input().split())\n\n    if sheep < wolf:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    sheep, wolf = map(int, sys.stdin.readline().strip().split())\n    if sheep <= wolf:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    # sheep, wolves = map(int, sys.stdin.readline().strip().split())\n    # if sheep <= wolves:\n    #     print(\"unsafe\")\n    # else:\n    #     print(\"safe\")\n    if sys.stdin.readline().strip().split()[0] == '1':\n        print(\"true\")\n    else:\n        print(\"false\")\n\nif __name__ == '__main__':\n    main()\n", "\nprint(\"Hello World\")\n", "\nimport sys\n\ndef main():\n    print(\"Hello World\")\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    sheeps, wolves = map(int, sys.stdin.readline().split()) # read two integers\n\n    if sheeps < wolves:\n        print(\"unsafe\") # print unsafe if sheeps < wolves\n    else:\n        print(\"safe\") # print safe if sheeps >= wolves\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    sheep, wolves = map(int, sys.stdin.readline().split()) # read the first line\n\n    if sheep < wolves:\n        print(\"unsafe\") # print unsafe if there are more wolves than sheep\n    else:\n        print(\"safe\") # print safe if there are more sheep than wolves\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    sheep, wolf = map(int, sys.stdin.readline().split())\n\n    if sheep < wolf:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == '__main__':\n    main()\n"]