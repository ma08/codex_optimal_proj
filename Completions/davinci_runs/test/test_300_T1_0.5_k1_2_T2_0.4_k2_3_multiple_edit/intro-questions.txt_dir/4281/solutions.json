["n=int(input())\na=list(map(int,input().split()))\na.sort()\nprev=-2\nc=0\nfor i in a:\n    dif=i-prev\n    if dif > 1:\n        prev=i+1\n        c+=1\nac=0\nlc=-2\nfor i in a:\n    if lc < i-1:\n        lc=i-1\n        ac+=1\n    elif lc == i-1:\n        lc=i\n        ac+=1\n    elif lc == i:\n        lc=i+1\n        ac+=1\nprint(c,ac)\n", "n=int(input())\nl=list(map(int,input().split()))\nmx=[0]*(n+2)\nmn=[0]*(n+2)\nl.sort()\nfor i in l:\n\tif mx[i-1]==0:\n\t\tmx[i-1]=1\n\telif mx[i]==0:\n\t\tmx[i]=1\n\telse:\n\t\tmx[i+1]=1\n\tif mn[i]==mn[i-1] and mn[i-1]==mn[i+1] and mn[i+1]==0:\n\t\tmn[i+1]=1\nprint(sum(mn),sum(mx))\n\n", "n = int(input())\nls = list(map(int, input().split()))\n\nls.sort()\nminh = set()\nmaxh = set()\n\nfor e in ls:\n    if e-1 not in maxh:\n        maxh.add(e-1)\n    elif e not in maxh:\n        maxh.add(e)\n    else:\n        maxh.add(e+1)\n\n    if e-1 not in minh and e not in minh and e+1 not in minh:\n        minh.add(e+1)\n\nprint(len(minh), len(maxh))\n", "import sys\ninput = sys.stdin.readline\n\nn=int(input())\nA=list(map(int,input().split()))\nA.sort()\n\nB={A[0]-1}\nC={A[0]+1}\n\nfor i in range(1,n):\n    if A[i]-1 in B and A[i] in B:\n        B.add(A[i]+1)\n    elif A[i]-1 in B:\n        B.add(A[i])\n    else:\n        B.add(A[i]-1)\n\n    if A[i]-1 in C or A[i] in C:\n        continue\n    else:\n        C.add(A[i]+1)\n\nprint(len(C),len(B))\n        \n", "n = int(input())\nv = list(map(int, input().split()))\nvaz = [0 for x in range(n+10)]\nvaz1 = [0 for x in range(n+10)]\nfor x in v:\n    vaz[x] += 1\nans1 = 0\npz = 1\nwhile pz<=n:\n    if vaz[pz]==0:\n        pz +=1\n        continue\n    ans1 +=1\n    pz+=3\nfor i in range(1,n+1):\n    if vaz[i] == 0:\n        continue\n    a = vaz[i]\n    if vaz1[i-1]==0 and a>0:\n        a-=1\n        vaz1[i-1]=1\n    if vaz1[i]==0 and a>0:\n        a-=1\n        vaz1[i]=1\n    if vaz1[i+1]==0 and a>0:\n        a-=1\n        vaz1[i+1]=1\nans2 = 0\nfor i in range(0,n+2):\n    if vaz1[i]==1:\n        ans2+=1\nprint(str(ans1)+\" \"+str(ans2))\n", "import sys\nfrom operator import itemgetter\nfrom collections import deque\n\ndef input():\n    return sys.stdin.readline().strip()\n\ndef getmin(houses):\n    i = 0\n    ans = 0\n    while len(houses)>0:\n        x = houses.popleft()\n        while len(houses)>0 and houses[0]<=x+2:\n            houses.popleft()\n        ans+=1\n    return ans\n\ndef getmax(houses):\n    vis = set()\n    for x in houses:\n        if x-1 not in vis:\n            vis.add(x-1)\n        elif x not in vis:\n            vis.add(x)\n        else:\n            vis.add(x+1)\n    return len(vis)\n                \n\n\nn = int(input())\n\nhouses = list(map(int, input().split()))\nhouses.sort()\nprint(getmin(deque(houses)), getmax(houses))", "n=int(input())\nar=list(map(int,input().split()))\nused1=[0]*(n+3)\nused2=[0]*(n+3)\nar.sort()\nkol=0\nfor i in range(n):\n\tif used1[ar[i]-1]==0:\n\t\tif used1[ar[i]]==0:\n\t\t\tif used1[ar[i]+1]==0:\n\t\t\t\tkol+=1\n\t\t\t\tused1[ar[i]]=1\n\t\t\t\tused1[ar[i]+1]=1\n\t\t\t\tused1[ar[i]-1]=1\nprint(kol,end=' ')\nkol1=0\nfor i in ar:\n\tif used2[i-1]==0:\n\t\tkol1+=1\n\t\tused2[i-1]=1\n\telif used2[i]==0:\n\t\tkol1+=1\n\t\tused2[i]=1\n\telif used2[i+1]==0:\n\t\tkol1+=1\n\t\tused2[i+1]=1\nprint(kol1)\n\n\n", "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\n#print(l)\nll = l.copy()\nup = 1\nleft = l[0]\nfor i in range(n):\n\tif l[i] > left + 2:\n\t\tleft = l[i]\n\t\tup += 1\n#print(up)\n#print(ll)\nll[0] -= 1\n#print(ll)\nfor i in range(1,n-1):\n\tif ll[i-1] == ll[i]:\n\t\tif ll[i] != ll[i+1]:\n\t\t\tll[i] += 1\n\telif ll[i-1] == ll[i]-1:\n\t\tcontinue\n\telse:\n\t\tll[i] -= 1\n\t#print(ll)\nll[n-1] += 1\n#print(ll)\nd = {}\nfor i in ll:\n\td[i] = 0\nnajw = len(d)\nprint(up, najw)\n", "\nn = int(input())\n\nx = list(map(int,input().split()))\n\nx.sort()\n\n\ny = [] #to min\n\nfor i in range(n):\n    if i == 0 or x[i-1] != x[i]:\n        y.append(x[i])\n\nyend = [True] * len(y)\nansmin = len(y)\n\nfor i in range(len(y)):\n\n    if i == 0 or ( not yend[i] ):\n        continue\n\n    if y[i-1] + 1 == y[i] and yend[i-1]:\n        yend[i-1] = False\n        ansmin -= 1\n        yend[i] = False\n\n        if i+1 < len(y) and y[i+1] - 1 == y[i]:\n            yend[i+1] = False\n            ansmin -= 1\n\n    elif y[i-1] + 2 == y[i] and yend[i-1]:\n        yend[i-1] = False\n        yend[i] = False\n        ansmin -= 1\n \n#print (yend)\n\n\ndic = {}\n\nfor i in range(n):\n\n    if x[i] - 1 not in dic:\n        dic[x[i] - 1] = 1\n    elif x[i] not in dic:\n        dic[x[i]] = 1\n    else:\n        dic[x[i] + 1] = 1\n\nprint (ansmin , len(dic))", "from itertools import*\n_,x=open(0)\nx=sorted(map(int,x.split()))\ni,*y=sorted(set(x))\ns={i+1}\nfor i in y:\n  if not(i-1in s or i in s):\n    s.add(i+1)\nprint(len(s),end=' ')\ns=set()\nfor i,t in groupby(x):\n  t=len(list(t))\n  if not i-1in s and t:\n    s.add(i-1)\n    t-=1\n  if not i in s and t:\n    s.add(i)\n    t-=1\n  if not i+1in s and t:\n    s.add(i+1)\nprint(len(s))", "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int, minp().split()))\n\ndef solve():\n\tn = mint()\n\tx = list(mints())\n\tx.sort()\n\tr = 0\n\tw = [0]*(n+2)\n\tc = [0]*(n+2)\n\tfor i in x:\n\t\tc[i] += 1\n\t\tif w[i-1] == 0:\n\t\t\tw[i-1] += 1\n\t\t\tr += 1\n\t\telif w[i] == 0:\n\t\t\tw[i] += 1\n\t\t\tr += 1\n\t\telif w[i+1] == 0:\n\t\t\tw[i+1] += 1\n\t\t\tr += 1\n\n\trm = r\n\tr = 0\n\tw = [0]*(n+2)\n\tfor i in range(1,n+1):\n\t\tv = c[i]\n\t\tif v != 0:\n\t\t\tif w[i+1] > 0:\n\t\t\t\tpass\n\t\t\telif w[i] > 0:\n\t\t\t\tpass\n\t\t\telif w[i-1] > 0:\n\t\t\t\tpass\n\t\t\telse:\n\t\t\t\tw[i+1] += v\n\t\t\t\tr += 1\n\tprint(r,rm)\n\n#for i in range(mint()):\nsolve()\n", "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nimport heapq\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\n\n# M = mod = 998244353\ndef factors(n):return sorted(list(set(reduce(list.__add__,([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0)))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\n \ndef li():return [int(i) for i in input().rstrip('\\n').split(' ')]\ndef st():return input().rstrip('\\n')\ndef val():return int(input().rstrip('\\n'))\ndef li2():return [i for i in input().rstrip('\\n').split(' ')]\ndef li3():return [int(i) for i in input().rstrip('\\n')]\n\n\nn = val()\nl = li()\nl1 = l[:]\nl2 = l[:]\n\ni = 0\nl1 = sorted(list(set(l1)))\ndoit = tot1 = 0\ncn = Counter(l1)\nl = l1[:]\nwhile i < len(l1):\n    if cn[l[i] - 1] > 0:\n        cn[l[i]] -= 1\n        cn[l[i] - 1] += 1\n        l[i] -= 1\n        i += 1\n    else:\n        cn[l[i]] -= 1\n        cn[l[i] + 1] += 1\n        l[i] += 1\n        if i<len(l1) - 1 and l[i + 1] == l[i]:i += 2\n        else:i += 1\n# print(cn)\ntot1 = sum(1 for i in cn if cn[i])\n\n\n\n\n\n\n\n\n\n# print(l1)\n\n\n\ni = 0\n\ncnt = Counter(l2)\nl2 = sorted(l2)\n\nl = l2[:]\n\n\n\nfor i in range(n):\n    if cnt[l[i] - 1] == 0:\n        cnt[l[i] - 1] += 1\n        cnt[l[i]] -= 1\n        l[i] -= 1\n    elif cnt[l[i]] > 1:\n        cnt[l[i] + 1] += 1\n        cnt[l[i]] -= 1\n        l[i] += 1\n\n\ntot2 = sum(1 for i in cnt if cnt[i])\n\n\n\n\n\nprint(tot1,tot2)"]