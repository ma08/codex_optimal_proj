2022-04-22 21:11:04.615210 num operations 2
2022-04-22 21:11:04.615232 size on input set 1
2022-04-22 21:11:04.615407 using api key soukgp
2022-04-22 21:11:09.297690 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 1,
      "text": "\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 2,
      "text": "# ABC086C\n\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    }
  ],
  "created": 1650661864,
  "object": "edit"
}
2022-04-22 21:11:09.297959 fix spelling mistakes 3 ["\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "# ABC086C\n\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"]
2022-04-22 21:11:09.297993 size on output set 2
2022-04-22 21:11:09.298001 size on input set 2
2022-04-22 21:11:09.298152 using api key sunu
2022-04-22 21:11:17.544254 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "N, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 1,
      "text": "N, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\na = list(map(int, input().split()))\n\ndef bubbleSort(a):\n    for i in range(N):\n        for j in range(N-1, i, -1):\n            if a[j] < a[j-1]:\n                a[j], a[j-1] = a[j-1], a[j]\n                print(*a)\n\nbubbleSort(a)\n"
    }
  ],
  "created": 1650661869,
  "object": "edit"
}
2022-04-22 21:11:17.544537 fix syntax errors 3 ["N, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "N, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", '\nN = int(input())\na = list(map(int, input().split()))\n\ndef bubbleSort(a):\n    for i in range(N):\n        for j in range(N-1, i, -1):\n            if a[j] < a[j-1]:\n                a[j], a[j-1] = a[j-1], a[j]\n                print(*a)\n\nbubbleSort(a)\n']
2022-04-22 21:11:17.544808 using api key sunu
2022-04-22 21:11:31.439530 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# ABC086C - Traveling\n\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 1,
      "text": "# ABC085C\n# https://atcoder.jp/contests/abs/tasks/abc085_c\n\nN, Y = map(int, input().split())\n\nfor i in range(N + 1):\n    for j in range(N + 1):\n        if i + j > N:\n            break\n        k = N - i - j\n        if i * 10000 + j * 5000 + k * 1000 == Y:\n            print(i, j, k)\n            exit()\nprint('-1 -1 -1')\n"
    },
    {
      "index": 2,
      "text": "# ABC085C\n\nN, Y = map(int, input().split())\n\nfor i in range(N + 1):\n    for j in range(N + 1 - i):\n        if 10000 * i + 5000 * j + 1000 * (N - i - j) == Y:\n            print(i, j, N - i - j)\n            exit()\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    }
  ],
  "created": 1650661877,
  "object": "edit"
}
2022-04-22 21:11:31.439798 fix syntax errors 3 ["# ABC086C - Traveling\n\nN, T = map(int, input().split())\n\ncosts = []\ntimes = []\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "# ABC085C\n# https://atcoder.jp/contests/abs/tasks/abc085_c\n\nN, Y = map(int, input().split())\n\nfor i in range(N + 1):\n    for j in range(N + 1):\n        if i + j > N:\n            break\n        k = N - i - j\n        if i * 10000 + j * 5000 + k * 1000 == Y:\n            print(i, j, k)\n            exit()\nprint('-1 -1 -1')\n", "# ABC085C\n\nN, Y = map(int, input().split())\n\nfor i in range(N + 1):\n    for j in range(N + 1 - i):\n        if 10000 * i + 5000 * j + 1000 * (N - i - j) == Y:\n            print(i, j, N - i - j)\n            exit()\n\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = [costs[i] for i in range(len(costs)) if times[i] <= T]\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"]
2022-04-22 21:11:31.439834 size on output set 5
2022-04-22 21:11:31.439846 num operations 2
2022-04-22 21:11:31.439852 size on input set 1
2022-04-22 21:11:31.439994 using api key jaanu
2022-04-22 21:11:36.288458 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "#\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "# https://atcoder.jp/contests/abc085/tasks/abc085_a\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650661891,
  "object": "edit"
}
2022-04-22 21:11:36.288825 fix spelling mistakes 3 ['#\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n', '# https://atcoder.jp/contests/abc085/tasks/abc085_a\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-22 21:11:36.288864 size on output set 3
2022-04-22 21:11:36.288873 size on input set 3
2022-04-22 21:11:36.289008 using api key sunu
2022-04-22 21:11:41.721577 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# -*- coding: utf-8 -*-\n\nimport sys\n\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "# ABC 048 B - Between a and b ...\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650661896,
  "object": "edit"
}
2022-04-22 21:11:41.721829 fix syntax errors 3 ['# -*- coding: utf-8 -*-\n\nimport sys\n\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\n\nif __name__ == "__main__":\n    main()\n', '# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n', '# ABC 048 B - Between a and b ...\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-22 21:11:41.721994 using api key kouti
2022-04-22 21:11:49.278062 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# https://atcoder.jp/contests/abc085/tasks/abc085_a\n\nimport sys\n\ndef main():\n    n, t = map(int, input().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, input().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "# https://atcoder.jp/contests/abc085/tasks/abc085_a\n\nimport sys\n\ndef main():\n    s = input()\n    print(s[:3])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "# https://atcoder.jp/contests/abc085/tasks/abc085_a\n\nimport sys\n\ndef main():\n    n, t = map(int, input().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, input().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650661901,
  "object": "edit"
}
2022-04-22 21:11:49.278334 fix syntax errors 3 ['# https://atcoder.jp/contests/abc085/tasks/abc085_a\n\nimport sys\n\ndef main():\n    n, t = map(int, input().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, input().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n', '# https://atcoder.jp/contests/abc085/tasks/abc085_a\n\nimport sys\n\ndef main():\n    s = input()\n    print(s[:3])\n\nif __name__ == "__main__":\n    main()\n', '# https://atcoder.jp/contests/abc085/tasks/abc085_a\n\nimport sys\n\ndef main():\n    n, t = map(int, input().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, input().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-22 21:11:49.278498 using api key kouti
2022-04-22 21:11:53.999931 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print(\"TLE\")\n    else:\n        print(min_cost)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650661909,
  "object": "edit"
}
2022-04-22 21:11:54.000220 fix syntax errors 3 ['import sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n', 'import sys\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\nif __name__ == "__main__":\n    main()\n', '# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    n, t = map(int, sys.stdin.readline().split())\n    min_cost = t + 1\n    for _ in range(n):\n        cost, time = map(int, sys.stdin.readline().split())\n        if time <= t:\n            min_cost = min(min_cost, cost)\n    if min_cost > t:\n        print("TLE")\n    else:\n        print(min_cost)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-22 21:11:54.000412 size on output set 7
