["\n\ndef gcd(n):\n   for i in range(n,0,-1):\n       if n%i == 0:\n           return i\n\ndef main():\n    n = int(input())\n    t = input()\n    d = gcd(n)\n    print(t[d:], end=\" \")\n    print(t[:d][::-1], end=\" \")\n\nmain()\n", "\n\nn = int(input())\nt = input()\n\n# reverse the string.\nt = t[::-1]\n\nfor i in reversed(range(1, n)):\n    if n % i == 0:\n        # reverse the substring.\n        t = t[:i][::-1] + t[i:]\n\nprint(t)\n", "\ndef s(n):  # function to find the divisor\n    for i in range(n, 0, -1):  # loop to find the divisor\n        if n % i == 0:  # condition to check if the value is divisor\n            return i  # return the value\n\ndef main():\n    n = int(input())\n    t = input()\n    d = s(n)\n    print(t[d:], end=\"\")\n    print(t[:d][::-1], end=\"\")\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef gcd(a, b):\n   for i in range(a,b,-1):\n       if a%i == 0 and b%i == 0:\n           return i \n\ndef main():\n    n = int(input())\n    t = input()\n    d = gcd(n, len(t))\n    print(t[d:], end=\"\", sep=\"\")\n    print(t[:d][::-1], end=\"\", sep=\"\")\n\nmain()\n", "\n\ndef f(n):\n   for i in range(n,0,-1):\n       if n%i == 0:\n           return i\n\ndef main():\n    n = int(input())\n    t = input()\n    d = f(n)\n    print(t[d:], end='')\n    print(t[:d][::-1], end='')\n\nmain()\n", "\n\ndef f(n):\n    for i in range(n,0,-1):\n        if n%i == 0:\n            return i\n\ndef main():\n    n = int(input())\n    t = input()\n    d = f(n)\n    print(t[d:], end=\"\")\n    print(t[:d][::-1], end=\"\")\n\nmain()\n", "\n\ndef gcd(n):\n   for i in range(n,0,-1):\n       if n%i == 0:\n           return i\n\ndef main():\n    n = int(input())\n    t = input()\n    d = gcd(n)\n    print(t[d:])\n    print(t[:d][::-1])\n\nmain()\n", "\n\nn = int(input())\nt = input()\n\n# reverse the string.\nt = t[::-1]\n\nfor i in range(n, 0, -1):\n    if n % i == 0:\n        # reverse the substring.\n        t = t[:i][::-1] + t[i:]\n\nprint(t)\n", "\nn = int(input())\nt = input()\n\n# reverse the string.\nt = list(t[::-1])\n\nfor i in reversed(range(1, n + 1)):\n    if n % i == 0:\n        # reverse the substring.\n        t[:i] = list(t[:i][::-1])\n\nprint(\"\".join(t))\n", "\n\ndef s(n): #function to find the divisor\n   for i in range(n,0,-1): #loop to find the divisor\n       if n%i == 0: #condition to check if the value is divisor\n           return i #return the value\n\ndef main():\n    n = int(input()) #input the value\n    t = input() #input the string\n    d = s(n) #find the divisor\n    print(t[d:], end=\"\") #print the string\n    print(t[:d][::-1], end=\"\") #print the string\n\nmain()\n", "\ndef f(n):\n    for i in range(n, 0, -1):\n        if n % i == 0:\n            return i\n\ndef main():\n    n = int(input())\n    t = input()\n    d = f(n)\n    print(t[d:], end=\"\")\n    print(t[:d][::-1], end=\"\")\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef s(n):  # function to find the divisor\n   for i in range(n,0,-1):  # loop to find the divisor\n       if n % i == 0:  # condition to check if the value is divisor\n           return i  # return the value\n\ndef main():\n    n = int(input())\n    t = input()\n    d = s(n)\n    print(t[d:], end=\"\")\n    print(t[:d][::-1], end=\"\")\n\nmain()\n"]