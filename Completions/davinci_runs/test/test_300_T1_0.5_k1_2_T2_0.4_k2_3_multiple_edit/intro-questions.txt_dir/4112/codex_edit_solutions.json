["\nn, k, x = map(int, input().split())\npictures = list(map(int, input().split()))\n\n# print(n, k, x)\n# print(pictures)\n\n# dp[i][j] = max sum of pictures from range [i, j]\n# with j - i + 1 >= k\ndp = [[0 for _ in range(n)] for _ in range(n)]\n\nfor i in range(n):\n    dp[i][i] = pictures[i]\n\nfor width in range(1, n):\n    for i in range(n - width):\n        j = i + width\n        if j - i + 1 < k:\n            dp[i][j] = 0\n        else:\n            dp[i][j] = max(dp[i][j - 1], dp[i + 1][j], dp[i][j - 1] + pictures[j])\n\n# for row in dp:\n#     print(row)\n\nif x == n:\n    print(dp[0][n - 1])\nelif x > n:\n    print(-1)\nelse:\n    # dp[i][j] = max sum of pictures from range [i, j]\n    # with j - i + 1 >= k and j - i + 1 >= x\n    dp2 = [[0 for _ in range(n)] for _ in range(n)]\n\n    for i in range(n):\n        dp2[i][i] = pictures[i]\n\n    for width in range(1, n):\n        for i in range(n - width):\n            j = i + width\n            if j - i + 1 < k or j - i + 1 < x:\n                dp2[i][j] = 0\n            else:\n                dp2[i][j] = max(dp2[i][j - 1], dp2[i + 1][j], dp2[i][j - 1] + pictures[j])\n\n    # for row in dp2:\n    #     print(row)\n\n    print(dp2[0][n - 1])\n", "\nn, k, x = map(int, input().split())\npictures = list(map(int, input().split()))\n\n# dp[i][j] = max sum of pictures from range [i, j]\n# with j - i + 1 >= k\ndp = [[0 for _ in range(n)] for _ in range(n)]\n\nfor i in range(n):\n    dp[i][i] = pictures[i]\n\nfor width in range(1, n):\n    for i in range(n - width):\n        j = i + width\n        if j - i + 1 < k:\n            dp[i][j] = 0\n        else:\n            dp[i][j] = max(dp[i][j - 1], dp[i + 1][j], dp[i][j - 1] + pictures[j])\n\nif x == n:\n    print(dp[0][n - 1])\nelif x > n:\n    print(-1)\nelse:\n    # dp[i][j] = max sum of pictures from range [i, j]\n    # with j - i + 1 >= k and j - i + 1 >= x\n    dp2 = [[0 for _ in range(n)] for _ in range(n)]\n\n    for i in range(n):\n        dp2[i][i] = pictures[i]\n\n    for width in range(1, n):\n        for i in range(n - width):\n            j = i + width\n            if j - i + 1 < k or j - i + 1 < x:\n                dp2[i][j] = 0\n            else:\n                dp2[i][j] = max(dp2[i][j - 1], dp2[i + 1][j], dp2[i][j - 1] + pictures[j])\n\n    print(dp2[0][n - 1])\n", "\nn, k, x = map(int, input().split())\npictures = list(map(int, input().split()))\n# print(n, k, x)\n# print(pictures)\n# dp[i][j] = max sum of pictures from range [i, j]\n# with j - i + 1 >= k\ndp = [[0 for _ in range(n)] for _ in range(n)]\nfor i in range(n):\n    dp[i][i] = pictures[i]\nfor width in range(1, n):\n    for i in range(n - width):\n        j = i + width\n        if j - i + 1 < k:\n            dp[i][j] = 0\n        else:\n            dp[i][j] = max(dp[i][j - 1], dp[i + 1][j], dp[i][j - 1] + pictures[j])\n# for row in dp:\n#     print(row)\nif x == n:\n    print(dp[0][n - 1])\nelif x > n:\n    print(-1)\nelse:\n    # dp[i][j] = max sum of pictures from range [i, j]\n    # with j - i + 1 >= k and j - i + 1 >= x\n    dp2 = [[0 for _ in range(n)] for _ in range(n)]\n    for i in range(n):\n        dp2[i][i] = pictures[i]\n    for width in range(1, n):\n        for i in range(n - width):\n            j = i + width\n            if j - i + 1 < k or j - i + 1 < x:\n                dp2[i][j] = 0\n            else:\n                dp2[i][j] = max(dp2[i][j - 1], dp2[i + 1][j], dp2[i][j - 1] + pictures[j])\n    # for row in dp2:\n    #     print(row)\n    print(dp2[0][n - 1])\n", "\nn, k, x = map(int, input().split())\npictures = list(map(int, input().split()))\n\n# print(n, k, x)\n# print(pictures)\n\n# dp[i][j] = max sum of pictures in range [i, j]\n# with j - i >= k\ndp = [[0 for _ in range(n)] for _ in range(n)]\n\nfor i in range(n):\n    dp[i][i] = pictures[i]\n\nfor width in range(1, n):\n    for i in range(n - width):\n        j = i + width\n        if j - i + 1 < k:\n            dp[i][j] = 0\n        else:\n            dp[i][j] = max(dp[i][j - 1], dp[i + 1][j], dp[i][j - 1] + pictures[j])\n\n# for row in dp:\n#     print(row)\n\nif x == n:\n    print(dp[0][n - 1])\nelif x > n:\n    print(-1)\nelse:\n    # dp[i][j] = max sum of pictures in range [i, j]\n    # with j - i >= k and j - i >= x\n    dp2 = [[0 for _ in range(n)] for _ in range(n)]\n\n    for i in range(n):\n        dp2[i][i] = pictures[i]\n\n    for width in range(1, n):\n        for i in range(n - width):\n            j = i + width\n            if j - i + 1 < k or j - i + 1 < x:\n                dp2[i][j] = 0\n            else:\n                dp2[i][j] = max(dp2[i][j - 1], dp2[i + 1][j], dp2[i][j - 1] + pictures[j])\n\n    # for row in dp2:\n    #     print(row)\n\n    print(dp2[0][n - 1])\n", "\n\ndef main():\n    n, k, x = map(int, input().split())\n    A = list(map(int, input().split()))\n    if x < k:\n        print(-1)\n        return\n    if k == 2: print(max(A)); return;\n    if k == 3: print(max(A[0] + A[-1], max(A[1:n-1]))); return;\n    if k == 4: print(max(A[0] + A[1] + A[-2] + A[-1], max(A[2:n-2]))); return;\n    if k == 5: print(max(A[0] + A[1] + A[2] + A[-3] + A[-2] + A[-1], max(A[3:n-3]))); return;\n    print(max(A[0] + A[1] + A[2] + A[3] + A[-4] + A[-3] + A[-2] + A[-1], max(A[4:n-4]))); return;\n    return\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k, x = map(int, input().split())\n    A = list(map(int, input().split()))\n    if x < k:\n        print(-1)\n        return\n    if k == 2:\n        print(max(A))\n        return\n    if k == 3:\n        print(max(A[0] + A[-1], max(A[1:n-1])))\n        return\n    if k == 4:\n        print(max(A[0] + A[1] + A[-2] + A[-1], max(A[2:n-2])))\n        return\n    if k == 5:\n        print(max(A[0] + A[1] + A[2] + A[-3] + A[-2] + A[-1], max(A[3:n-3])))\n        return\n    print(max(A[0] + A[1] + A[2] + A[3] + A[-4] + A[-3] + A[-2] + A[-1], max(A[4:n-4])))\n    return\n    return\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k, x = map(int, input().split())\n    A = list(map(int, input().split()))\n    if x < k:\n        print(-1)\n        return\n    if k == 1:\n        print(sum(A))\n        return\n    if k == 2:\n        print(max(A))\n        return\n    if k == 3:\n        if n >= 3:\n            print(max(A[0] + A[-1], max(A[1:n-1])))\n        else:\n            print(-1)\n        return\n    if k == 4:\n        if n >= 4:\n            print(max(A[0] + A[1] + A[-2] + A[-1], max(A[2:n-2])))\n        else:\n            print(-1)\n        return\n    if k == 5:\n        if n >= 5:\n            print(max(A[0] + A[1] + A[2] + A[-3] + A[-2] + A[-1], max(A[3:n-3])))\n        else:\n            print(-1)\n        return\n    if n >= 6:\n        print(max(A[0] + A[1] + A[2] + A[3] + A[-4] + A[-3] + A[-2] + A[-1], max(A[4:n-4])))\n    else:\n        print(-1)\n    return\n\nif __name__ == '__main__':\n    main()\n", "\nn, k, x = map(int, input().split())\npictures = list(map(int, input().split()))\n\n# print(n, k, x)\n# print(pictures)\n\n# dp[i][j] = max sum of pictures in range [i, j]\n# with j - i >= k\ndp = [[0 for _ in range(n)] for _ in range(n)]\n\nfor i in range(n):\n    dp[i][i] = pictures[i]\n\nfor width in range(1, n):\n    for i in range(n - width):\n        j = i + width\n        if j - i + 1 < k:\n            dp[i][j] = 0\n        else:\n            dp[i][j] = max(dp[i][j - 1], dp[i + 1][j], dp[i][j - 1] + pictures[j])  # noqa: E501\n\n# for row in dp:\n#     print(row)\n\nif x == n:\n    print(dp[0][n - 1])\nelif x > n:\n    print(-1)\nelse:\n    # dp[i][j] = max sum of pictures in range [i, j]\n    # with j - i >= k and j - i >= x  # noqa: E501\n    dp2 = [[0 for _ in range(n)] for _ in range(n)]\n\n    for i in range(n):\n        dp2[i][i] = pictures[i]\n\n    for width in range(1, n):\n        for i in range(n - width):\n            j = i + width\n            if j - i + 1 < k or j - i + 1 < x:\n                dp2[i][j] = 0\n            else:\n                dp2[i][j] = max(dp2[i][j - 1], dp2[i + 1][j], dp2[i][j - 1] + pictures[j])  # noqa: E501\n\n    # for row in dp2:\n    #     print(row)\n\n    print(dp2[0][n - 1])\n", "\n\ndef main():\n    n, k, x = map(int, input().split())\n    A = list(map(int, input().split()))\n    if x < k:\n        print(-1)\n        return\n    if k == 1:\n        print(sum(A))\n        return\n    if k == 2:\n        print(max(A))\n        return\n    if k == 3 and n >= 3: #\n        print(max(A[0] + A[-1], max(A[1:n-1])))\n        return\n    if k == 4 and n >= 4:\n        print(max(A[0] + A[1] + A[-2] + A[-1], max(A[2:n-2])))\n        return\n    if k == 5:\n        print(max(A[0] + A[1] + A[2] + A[-3] + A[-2] + A[-1], max(A[3:n-3])))\n        return\n    print(max(A[0] + A[1] + A[2] + A[3] + A[-4] + A[-3] + A[-2] + A[-1], max(A[4:n-4])))\n    return\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k, x = map(int, input().split())\n    A = list(map(int, input().split()))\n    if x < k and n < k:\n        print(-1)\n        return\n    ans = 0\n    for i in range(k):\n        if i < n:\n            ans += A[i]\n        else:\n            ans += x\n    print(ans)\n    return\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k, x = map(int, input().split())\n    A = list(map(int, input().split()))\n    if x < k:\n        print(-1)\n        return\n    if k == 1 or n == 1:\n        print(sum(A))\n        return\n    if k == 2 or n == 2:\n        print(max(A))\n        return\n    if k == 3 and n == 3:\n        print(max(A[0] + A[-1], A[1]))\n        return\n        print(max(A[0] + A[1] + A[-2] + A[-1], A[2]))\n        return\n    if k == 5 and n == 5:\n        print(max(A[0] + A[1] + A[2] + A[-3] + A[-2] + A[-1], max(A[3:n-3])))\n        return\n    print(max(A[0] + A[1] + A[2] + A[3] + A[-4] + A[-3] + A[-2] + A[-1], max(A[4:n-4])))\n    return\n\nif __name__ == '__main__':\n    main()\n", "\nn, k, x = map(int, input().split())\npictures = list(map(int, input().split()))\n\n# print(n, k, x)\n# print(pictures)\n\n# dp[i][j] = max sum of pictures from range [i, j],\n# with j - i >= k\ndp = [[0 for _ in range(n)] for _ in range(n)]\n\nfor i in range(n):\n    dp[i][i] = pictures[i]\n\nfor width in range(1, n):\n    for i in range(n - width):\n        j = i + width\n        if j - i + 1 < k:\n            dp[i][j] = 0\n        else:\n            dp[i][j] = max(dp[i][j - 1], dp[i + 1][j], dp[i][j - 1] + pictures[j])\n\n# for row in dp:\n#     print(row)\n\nif x == n:\n    print(dp[0][n - 1])\nelif x > n:\n    print(-1)\nelse:\n    # dp[i][j] = max sum of pictures from range [i, j],\n    # with j - i >= k and j - i >= x\n    dp2 = [[0 for _ in range(n)] for _ in range(n)]\n\n    for i in range(n):\n        dp2[i][i] = pictures[i]\n\n    for width in range(1, n):\n        for i in range(n - width):\n            j = i + width\n            if j - i + 1 < k or j - i + 1 < x:\n                dp2[i][j] = 0\n            else:\n                dp2[i][j] = max(dp2[i][j - 1], dp2[i + 1][j], dp2[i][j - 1] + pictures[j])\n\n    # for row in dp2:\n    #     print(row)\n\n    print(dp2[0][n - 1])\n", "\n\ndef main():\n    n, k, x = map(int, input().split())\n    A = list(map(int, input().split()))\n    if x < k:\n        print(-1)\n        return\n    if k == 2: print(max(A)); return 0\n    if k == 3: print(max(A[0] + A[-1], max(A[1:n-1]))); return 0\n    if k == 4: print(max(A[0] + A[1] + A[-2] + A[-1], max(A[2:n-2]))); return 0\n    if k == 5: print(max(A[0] + A[1] + A[2] + A[-3] + A[-2] + A[-1], max(A[3:n-3]))); return 0\n    print(max(A[0] + A[1] + A[2] + A[3] + A[-4] + A[-3] + A[-2] + A[-1], max(A[4:n-4]))); return 0\n    return\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, k, x = map(int, input().split())  # \u5165\u529b\n    A = list(map(int, input().split()))  # \u5165\u529b\n    if x < k:  # k\u304cx\u3088\u308a\u5c0f\u3055\u3044\u3068\u304d\n        print(-1)\n        return\n    ans = 0  # \u521d\u671f\u5024\n    for i in range(k):  # k\u56de\u7e70\u308a\u8fd4\u3059\n        if i < n:  # i\u304cn\u3088\u308a\u5c0f\u3055\u3044\u3068\u304d\n            ans += A[i]  # A[i]\u3092\u8db3\u3059\n        else:  # \u305d\u308c\u4ee5\u5916\n            ans += x  # x\u3092\u8db3\u3059\n    print(ans)\n    return\n\nif __name__ == '__main__':\n    main()\n", "\nn, k, x = map(int, input().split())\npictures = list(map(int, input().split()))\n\n# print(n, k, x)\n# print(pictures)\n\n# dp[i][j] = max sum of pictures from range [i, j],\n# with j - i >= k\ndp = [[0 for _ in range(n)] for _ in range(n)]\n\nfor i in range(n):\n    dp[i][i] = pictures[i]\n\nfor width in range(1, n):\n    for i in range(n - width):\n        j = i + width\n        if j - i + 1 < k:\n            dp[i][j] = 0\n        else:\n            dp[i][j] = max(dp[i][j - 1], dp[i + 1][j], dp[i][j - 1] + pictures[j] - (x - 1) * pictures[j])\n\n# for row in dp:\n#     print(row)\n\nif x == n:\n    print(dp[0][n - 1])\nelif x > n:\n    print(-1)\nelse:\n    # dp[i][j] = max sum of pictures from range [i, j],\n    # with j - i >= k and j - i >= x\n    dp2 = [[0 for _ in range(n)] for _ in range(n)]\n\n    for i in range(n):\n        dp2[i][i] = pictures[i]\n\n    for width in range(1, n):\n        for i in range(n - width):\n            j = i + width\n            if j - i + 1 < k or j - i + 1 < x:\n                dp2[i][j] = 0\n            else:\n                dp2[i][j] = max(dp2[i][j - 1], dp2[i + 1][j], dp2[i][j - 1] + pictures[j] - (x - 1) * pictures[j])\n\n    # for row in dp2:\n    #     print(row)\n\n    print(dp2[0][n - 1])\n", "\n\ndef solve(n, k, x, pictures):\n    # dp[i][j] = max sum of pictures from range [i, j],\n    # with j - i >= k\n    dp = [[0 for _ in range(n)] for _ in range(n)]\n\n    for i in range(n):\n        dp[i][i] = pictures[i]\n\n    for width in range(1, n):\n        for i in range(n - width):\n            j = i + width\n            if j - i + 1 < k:\n                dp[i][j] = 0\n            else:\n                dp[i][j] = max(dp[i][j - 1], dp[i + 1][j], dp[i][j - 1] + pictures[j])\n\n    # for row in dp:\n    #     print(row)\n\n    if x == n:\n        return dp[0][n - 1]\n    elif x > n:\n        return -1\n    else:\n        # dp[i][j] = max sum of pictures from range [i, j],\n        # with j - i >= k and j - i >= x\n        dp2 = [[0 for _ in range(n)] for _ in range(n)]\n\n        for i in range(n):\n            dp2[i][i] = pictures[i]\n\n        for width in range(1, n):\n            for i in range(n - width):\n                j = i + width\n                if j - i + 1 < k or j - i + 1 < x:\n                    dp2[i][j] = 0\n                else:\n                    dp2[i][j] = max(dp2[i][j - 1], dp2[i + 1][j], dp2[i][j - 1] + pictures[j])\n\n        # for row in dp2:\n        #     print(row)\n\n        return dp2[0][n - 1]\n\n\n\nn, k, x = map(int, input().split())\npictures = list(map(int, input().split()))\nprint(solve(n, k, x, pictures))\n", "\n\ndef main():\n    n, k, x = map(int, input().split())\n    A = list(map(int, input().split()))\n    if k < x:\n        print(-1)\n        return\n    ans = 0\n    for i in range(k):\n        if i < n:\n            ans += A[i]\n        else:\n            ans += x\n    print(ans)\n    return\n\nif __name__ == '__main__':\n    main()\n"]