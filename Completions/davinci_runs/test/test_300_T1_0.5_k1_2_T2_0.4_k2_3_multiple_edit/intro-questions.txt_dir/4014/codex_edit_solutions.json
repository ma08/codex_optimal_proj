["\n\nclass Node:\n    def __init__(self, data):\n        self.data = data\n        self.next = None\n\n", "\ndef main():\n    n, m = map(int, input().split())\n    exams = []\n    for _ in range(m):\n        exams.append(tuple(map(int, input().split())))\n\n    days = [0] * n\n    for exam in exams:\n        s, f, c = exam\n        if c > f - s:\n            print(-1)\n            return\n        days[s] += 1\n        days[f] -= 1\n\n    for i in range(1, n):\n        days[i] += days[i - 1]\n        if days[i] > 1:\n            print(-1)\n    \n            return\n\n    days = [0] * n\n    for exam in exams:\n        s, f, c = exam\n        for i in range(s, f):\n            days[i] = c\n        c -= 1\n        for i in range(s - 1, -1, -1):\n            if days[i] == 0:\n                days[i] = c\n                c -= 1\n                if c == 0:\n                    break\n\n    for i in range(n - 1, -1, -1):\n        if days[i] == 0:\n            days[i] = m + 1\n        elif days[i] != m + 1:\n            days[i] -= 1\n    \n    print(' '.join(map(str, days)))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n, m = map(int, input().split())\n    exams = [[0, 0, 0]] * m\n    for i in range(m):\n        exams[i] = list(map(int, input().split()))\n\n    exams.sort(key=lambda x: x[1])\n\n    ans = [0] * n\n    for i in range(m):\n        for j in range(exams[i][0], exams[i][1]):\n            if ans[j] == 0:\n                ans[j] = i + 1\n\n    for i in range(n):\n        if ans[i] == 0:\n            ans[i] = m + 1\n\n    if ans.count(m + 1) < m:\n        print(-1)\n    else:\n        print(*ans)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n, m = map(int, input().split())\n    exams = [[0, 0]] * m\n    for i in range(m):\n        exams[i] = list(map(int, input().split()))\n\n    for i in range(len(exams)):\n        temp = exams[i]\n        j = i - 1\n        while j >= 0 and exams[j][1] > temp[1]:\n            exams[j + 1] = exams[j]\n            j -= 1\n        exams[j + 1] = temp\n\n    ans = [0] * n\n    for i in range(m):\n        for j in range(exams[i][0], exams[i][1]):\n            if ans[j] == 0:\n                ans[j] = i + 1\n\n    for i in range(n):\n        if ans[i] == 0:\n            ans[i] = m + 1\n\n    if ans.count(m + 1) < m:\n        print(-1)\n    else:\n        print(*ans)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n, m = map(int, input().split())\n    exams = []\n    for _ in range(m):\n        exams.append(tuple(map(int, input().split())))\n\n    # days = [0] * n\n    # for exam in exams:\n    #     s, f, c = exam\n    #     if c > f - s:\n    #         print(-1)\n    #         return\n    #     days[s] += 1\n    #     days[f] -= 1\n\n    # for i in range(1, n):\n    #     days[i] += days[i - 1]\n    #     if days[i] > 1:\n    #         print(-1)\n    #         return\n\n    days = [0] * n\n    for exam in exams:\n        s, f, c = exam\n        for i in range(s, f):\n            days[i] = c\n        c -= 1\n        for i in range(s - 1, -1, -1):\n            if days[i] == 0:\n                days[i] = c\n                c -= 1\n                if c == 0:\n                    break\n\n    for i in range(n - 1, -1, -1):\n        if days[i] == 0:\n            days[i] = m + 1\n        elif days[i] != m + 1:\n            days[i] -= 1\n    \n    print(' '.join(map(str, days)))\n\n\nif __name__ == \"__main__\":\n    main()\n", "import re\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    exams = []\n    for _ in range(m):\n        exams.append(tuple(map(int, input().split())))\n\n    days = [0] * n\n    for exam in exams:\n        start, end, c = exam\n        if c > end - start:\n            print(-1)\n            return\n        days[start] += 1\n        days[end] -= 1\n\n    for i in range(1, n):\n        days[i] += days[i - 1]\n        if days[i] > 1:\n            print(-1)\n            return\n\n    days = [0] * n\n    for exam in exams:\n        start, end, c = exam\n        for i in range(start, end):\n            days[i] = c\n        c -= 1\n        for i in range(start - 1, -1, -1):\n            if days[i] == 0:\n                days[i] = c\n                c -= 1\n                if c == 0:\n                    break\n\n    for i in range(n - 1, -1, -1):\n        if days[i] == 0:\n            days[i] = m + 1\n        elif days[i] != m + 1:\n            days[i] -= 1\n\n    print(' '.join(map(str, days)))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys, re\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians\nfrom itertools import accumulate, permutations, combinations, product\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect, bisect_left\nfrom fractions import gcd\nfrom heapq import heappush, heappop\nfrom functools import reduce\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(): return list(map(int, input().split()))\ndef ZIP(n): return zip(*(MAP() for _ in range(n)))\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n\ndef main():\n    N, K = MAP()\n    A = LIST()\n\n    d = defaultdict(int)\n    for a in A:\n        d[a] += 1\n\n    if len(d) <= K:\n        print(0)\n        return\n\n    ans = 0\n    for k, v in sorted(d.items(), key=itemgetter(1), reverse=True)[K:]:\n        ans += v\n\n    print(ans)\n\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nclass Node:\n    def __init__(self, data):\n        self.data = data\n        self.next = None\n\ndef main():\n    print(\"Hello World\")\n\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n, m = map(int, input().split())\n    exams = []\n    for _ in range(m):\n        exams.append(tuple(map(int, input().split())))\n\n    days = [0] * n\n    for exam in exams:\n        s, f, c = exam\n        if c > f - s:\n            print(-1)\n            return\n        days[s] += 1\n        days[f] -= 1\n\n    for i in range(1, n):\n        days[i] += days[i - 1]\n        if days[i] > 1:\n            print(-1)\n            return\n\n    days = [0] * n\n    for exam in exams:\n        s, f, c = exam\n        for i in range(s, f):\n            days[i] = c\n        c -= 1\n        for i in range(s - 1, -1, -1):\n            if days[i] == 0:\n                days[i] = c\n                c -= 1\n                if c == 0:\n                    break\n\n    for i in range(n - 1, -1, -1):\n        if days[i] == 0:\n            days[i] = m + 1\n        elif days[i] != m + 1:\n            days[i] -= 1\n    \n    print(' '.join(map(str, days)))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n, m = map(int, input().split())\n    exams = [[0, 0, 0] for i in range(m)]\n    for i in range(m):\n        exams[i] = list(map(int, input().split()))\n\n    for i in range(len(exams)):\n        temp = exams[i]\n        j = i - 1\n        while j >= 0 and exams[j][1] > temp[1]:\n            exams[j + 1] = exams[j]\n            j -= 1\n        exams[j + 1] = temp\n\n    ans = [0] * n\n    for i in range(m):\n        for j in range(exams[i][0], exams[i][1]):\n            if ans[j] == 0:\n                ans[j] = i + 1\n\n    for i in range(n):\n        if ans[i] == 0:\n            ans[i] = m + 1\n\n    if ans.count(m + 1) < m:\n        print(-1)\n    else:\n        print(*ans)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n, m = map(int, input().split())\n    exams = []\n    for _ in range(m):\n        exams.append(tuple(map(int, input().split())))\n\n    days = [0] * n\n    for exam in exams:\n        s, f, c = exam  # \u958b\u59cb\u65e5, \u7d42\u4e86\u65e5, \u53d7\u9a13\u65e5\u6570\n        if c > f - s:\n            print(-1)\n            return\n        days[s] += 1\n        days[f] -= 1\n\n    for i in range(1, n):\n        days[i] += days[i - 1]\n        if days[i] > 1:\n            print(-1)\n            return\n\n    days = [0] * n\n    for exam in exams:\n        s, f, c = exam\n        for i in range(s, f):\n            days[i] = c\n        c -= 1\n        for i in range(s - 1, -1, -1):\n            if days[i] == 0:\n                days[i] = c\n                c -= 1\n                if c == 0:\n                    break\n\n    for i in range(n - 1, -1, -1):\n        if days[i] == 0:\n            days[i] = m + 1\n        elif days[i] != m + 1:\n            days[i] -= 1\n    \n    print(' '.join(map(str, days)))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n, m = map(int, input().split())\n    exams = [[0, 0, 0]] * m\n    for i in range(m):\n        exams[i] = list(map(int, input().split()))\n\n    for i in range(len(exams)):\n        temp = exams[i]\n        j = i - 1\n        while j >= 0 and exams[j][1] > temp[1]:\n            exams[j + 1] = exams[j]\n            j -= 1\n        exams[j + 1] = temp\n\n    ans = [0] * n\n    for i in range(m):\n        for j in range(exams[i][0] - 1, exams[i][1]):\n            if ans[j] == 0:\n                ans[j] = i + 1\n\n    for i in range(n):\n        if ans[i] == 0:\n            ans[i] = m + 1\n\n    if ans.count(m + 1) < m:\n        print(-1)\n    else:\n        print(*ans)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nclass Node:\n    def __init__(self, data):\n        self.data = data\n        self.next = None\n", "\nimport sys\n\ndef main():\n    n, m = map(int, input().split())\n    exams = []\n    for _ in range(m):\n        exams.append(tuple(map(int, input().split())))\n\n    days = [0] * n\n    for exam in exams:\n        start, end, c = exam\n        if c > end - start:\n            print(-1)\n            return\n        days[start] += 1\n        days[end] -= 1\n\n    for i in range(1, n):\n        days[i] += days[i - 1]\n        if days[i] > 1:\n            print(-1)\n            return\n\n    days = [0] * n\n    for exam in exams:\n        start, end, c = exam\n        for i in range(start, end):\n            days[i] = c\n        c -= 1\n        for i in range(start - 1, -1, -1):\n            if days[i] == 0:\n                days[i] = c\n                c -= 1\n                if c == 0:\n                    break\n\n    for i in range(n - 1, -1, -1):\n        if days[i] == 0:\n            days[i] = m + 1\n        elif days[i] != m + 1:\n            days[i] -= 1\n    \n    print(' '.join(map(str, days)))\n\n\nif __name__ == \"__main__\":\n    main()\n"]