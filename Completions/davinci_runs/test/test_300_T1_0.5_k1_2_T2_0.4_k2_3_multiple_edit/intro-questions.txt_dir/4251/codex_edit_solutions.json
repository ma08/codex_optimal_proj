["\ndef main():\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solve(n, m, matrix))\n\ndef solve(n, m, matrix):\n    # First, find the minimum value in each row\n    min_vals = [min(row[i] for row in matrix) for i in range(m)] # list comprehension\n    # Now, the max k is the max difference between any two elements in min_vals\n    max_k = 0\n    for i in range(m - 1):\n        max_k = max(max_k, abs(min_vals[i] - min_vals[i + 1]))\n    return max_k\n\nif __name__ == \"__main__\":\n    main()\n", "from collections import defaultdict\nfrom itertools import combinations\nfrom typing import List, Tuple\n\n\ndef find_max_diff(nums: List[int], k: int) -> int:\n    nums.sort()\n    max_diff = 0\n    for i in range(len(nums)-1):\n        diff = nums[i+1] - nums[i]\n        if diff <= k:\n            max_diff = max(max_diff, diff)\n    return max_diff if max_diff > 0 else -1\n\n\ndef find_max_diff_2(nums: List[int], k: int) -> int:\n    nums.sort()\n    max_diff = 0\n    for i in range(len(nums)-1):\n        diff = nums[i+1] - nums[i]\n        if diff <= k:\n            max_diff = max(max_diff, diff)\n    return max_diff if max_diff > 0 else -1\n\n\ndef find_max_diff_3(nums: List[int], k: int) -> int:\n    nums.sort()\n    max_diff = 0\n    for i in range(len(nums)-1):\n        diff = nums[i+1] - nums[i]\n        if diff <= k:\n            max_diff = max(max_diff, diff)\n    return max_diff if max_diff > 0 else -1\n\n\ndef find_max_diff_4(nums: List[int], k: int) -> int:\n    nums.sort()\n    max_diff = 0\n    for i in range(len(nums)-1):\n        diff = nums[i+1] - nums[i]\n        if diff <= k:\n            max_diff = max(max_diff, diff)\n    return max_diff if max_diff > 0 else -1\n\n\ndef find_max_diff_5(nums: List[int], k: int) -> int:\n    nums.sort()\n    max_diff = 0\n    for i in range(len(nums)-1):\n        diff = nums[i+1] - nums[i]\n        if diff <= k:\n            max_diff = max(max_diff, diff)\n    return max_diff if max_diff > 0 else -1\n\n\ndef find_max_diff_6(nums: List[int], k: int) -> int:\n    nums.sort()\n    max_diff = 0\n    for i in range(len(nums)-1):\n        diff = nums[i+1] - nums[i]\n        if diff <= k:\n            max_diff = max(max_diff, diff)\n    return max_diff if max_diff > 0 else -1\n\n\ndef find_max_diff_7(nums: List[int], k: int) -> int:\n    nums.sort()\n    max_diff = 0\n    for i in range(len(nums)-1):\n        diff = nums[i+1] - nums[i]\n        if diff <= k:\n            max_diff = max(max_diff, diff)\n    return max_diff if max_diff > 0 else -1\n\n\ndef find_max_diff_8(nums: List[int], k: int) -> int:\n    nums.sort()\n    max_diff = 0\n    for i in range(len(nums)-1):\n        diff = nums[i+1] - nums[i]\n        if diff <= k:\n            max_diff = max(max_diff, diff)\n    return max_diff if max_diff > 0 else -1\n\n\ndef find_max_diff_9(nums: List[int], k: int) -> int:\n    nums.sort()\n    max_diff = 0\n    for i in range(len(nums)-1):\n        diff = nums[i+1] - nums[i]\n        if diff <= k:\n            max_diff = max(max_diff, diff)\n    return max_diff if max_diff > 0 else -1\n\n\ndef find_max_diff_10(nums: List[int], k: int) -> int:\n    nums.sort()\n    max_diff = 0\n    for i in range(len(nums)-1):\n        diff = nums[i+1] - nums[i]\n        if diff <= k:\n            max_diff = max(max_diff, diff)\n    return max_diff if max_diff > 0 else -1\n\n\ndef find_max_diff_11(nums: List[int], k: int) -> int:\n    nums.sort()\n    max_diff = 0\n    for i in range(len(nums)-1):\n        diff = nums[i+1] - nums[i]\n        if diff <= k:\n            max_diff = max(max_diff, diff)\n    return max_diff if max_diff > 0 else -1\n\n\ndef find_max_diff_12(nums: List[int], k: int) -> int:\n    nums.sort()\n    max_diff = 0\n    for i in range(len(nums)-1):\n        diff = nums[i+1] - nums[i]\n        if diff <= k:\n            max_diff = max(max_diff, diff)\n    return max_diff if max_diff > 0 else -1\n\n\ndef find_max_diff_13(nums: List[int], k: int) -> int:\n    nums.sort()\n    max_diff = 0\n    for i in range(len(nums)-1):\n        diff = nums[i+1] - nums[i]\n        if diff <= k:\n            max_diff = max(max_diff, diff)\n    return max_diff if max_diff > 0 else -1\n\n\ndef find_max_diff_14(nums: List[int], k: int) -> int:\n    nums.sort()\n    max_diff = 0\n    for i in range(len(nums)-1):\n        diff = nums[i+1] - nums[i]\n        if diff <= k:\n            max_diff = max(max_diff, diff)\n    return max_diff if max_diff > 0 else -1\n\n\ndef solution(matrix, n, m, k):\n    max_diff = 0\n    for i in range(n):\n        row = [matrix[i][j] for j in range(m)]\n        row.sort()\n        for j in range(m-1):\n            diff = row[j+1] - row[j]\n            if diff <= k:\n                max_diff = max(max_diff, diff)\n    return max_diff if max_diff > 0 else -1\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    k = int(input())\n    print(solution(matrix, n, m, k))\n", "\ndef solution(n, m, matrix):\n    pass\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solution(n, m, matrix))\n", "\ndef solution(matrix, n, m, k):\n    max_diff = 0\n    for i in range(n):\n        row = [matrix[i][j] for j in range(m)]\n        row.sort()\n        for j in range(m-1):\n            diff = row[j+1] - row[j]\n            if diff <= k:\n                max_diff = max(max_diff, diff)\n    return max_diff if max_diff > 0 else -1\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    k = int(input())\n    print(solution(matrix, n, m, k))\n", "\n\ndef solution(matrix, n, m):\n    max_diff = 0\n    for j in range(m):\n        column = [matrix[i][j] for i in range(n)]\n        column.sort()\n        for i in range(n-1):\n            diff = column[i+1] - column[i]\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solution(matrix, n, m))\n", "\ndef solution(matrix, n, m): \n    max_diff = 0\n    for j in range(m):\n        column = [matrix[i][j] for i in range(n)]\n        column.sort()\n        for i in range(n-1):\n            diff = column[i+1] - column[i]\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solution(matrix, n, m))\n", "\ndef main():\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solve(n, m, matrix))\n\ndef solve(n, m, matrix):\n    # First, find the minimum value in each row\n    min_vals = [min(row[i] for row in matrix) for i in range(m)]  # list comprehension\n    # Now, the max k is the max difference between any two elements in min_vals\n    max_k = 0\n    for i in range(m - 1):\n        max_k = max(max_k, abs(min_vals[i] - min_vals[i + 1]))\n    return max_k\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solve(n, m, matrix))\n\ndef solve(n, m, matrix):\n    # First, find the minimum value in each row\n    min_vals = [min(row[i] for row in matrix) for i in range(m)] \n    # Now, the max k is the max difference between any two elements in min_vals\n    max_k = 0\n    for i in range(m - 1):\n        max_k = max(max_k, abs(min_vals[i] - min_vals[i + 1]))\n    return max_k\n\nif __name__ == \"__main__\":\n    main()\n", "def solution(matrix, n, m):\n    max_diff = -1\n    for j in range(m):\n        column = [matrix[i][j] for i in range(n)]\n        column.sort()\n        for i in range(n-1):\n            diff = column[i+1] - column[i]\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    matrix = []\n    for _ in range(n):\n        matrix.append(list(map(int, input().split())))\n    print(solution(matrix, n, m))\n"]