["import sys\nimport os\n\nsys.stdin = open(os.path.dirname(__file__) + '/in.txt', 'r')\nsys.stdout = open(os.path.dirname(__file__) + '/out.txt', 'w')\n\nn = int(input().strip())\narr = [int(i) for i in input().strip().split()]\n\ndef find_max_subarray(arr):\n    max_ending_here = max_so_far = arr[0]\n    for i in range(1, len(arr)):\n        max_ending_here = max(arr[i], max_ending_here + arr[i])\n        max_so_far = max(max_so_far, max_ending_here)\n\n    return max_so_far\n\nprint(find_max_subarray(arr))\n", "\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    strings = []  # list of strings\n    for i in range(n):\n        strings.append(sys.stdin.readline().strip())\n\n    strings.sort(key=len, reverse=True)  # sort by length\n\n    ok = True  # check if all strings are substrings of previous strings\n    for i in range(n):\n        for j in range(i):  # check if strings[i] is substring of strings[j] (j < i)\n            if strings[i] not in strings[j]:  # if strings[i] is not substring of strings[j] (j < i)\n                ok = False\n                break\n        if not ok:\n            break\n\n    if ok:  # if all strings are substrings of previous strings\n        print(\"YES\")\n        for s in strings:\n            print(s)\n    else:  # if not\n        print(\"NO\")\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    strings = []\n    for i in range(n):\n        strings.append(sys.stdin.readline().strip())\n\n    strings.sort(key=len, reverse=True)\n\n    ok = True\n    for i in range(n):\n        for j in range(i):\n            if strings[i] in strings[j]:\n                ok = False\n                break\n        if not ok:\n            break\n\n    if ok:\n        print(\"YES\")\n        for s in strings:\n            print(s)\n    else:\n        print(\"NO\")\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    strings = []\n    for i in range(n):\n        strings.append(sys.stdin.readline().strip())\n\n    strings.sort(key=len, reverse=True)\n\n    for i in range(n - 1):\n        if strings[i] not in strings[i + 1]:\n            ok = False\n            break\n\n    if ok:\n        print(\"YES\")\n        for s in strings:\n            print(s)\n    else:\n        print(\"NO\")\n\n\nif __name__ == \"__main__\":\n    main()\n", "import sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    strings = []\n    for i in range(n):\n        strings.append(sys.stdin.readline().strip())\n\n    strings.sort(key=len, reverse=True)\n\n    ok = True\n    for i in range(n):\n        for j in range(i):\n            if strings[i] in strings[j]:\n                ok = False\n                break\n        if not ok:\n            break\n\n    if ok:\n        print(\"YES\")\n        for s in strings:\n            print(s)\n    else:\n        print(\"NO\")\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nn = int(input())\nstrings = [input() for i in range(n)]\nstrings.sort(key=lambda x: len(x))  # \u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u043e \u0434\u043b\u0438\u043d\u0435 \u0441\u0442\u0440\u043e\u043a\u0438\n\nis_good = True\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if strings[i] not in strings[j]:\n            is_good = False\n\nif is_good:\n    print('YES')\n    for s in strings:\n        print(s)\nelse:\n    print('NO')\n", "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    strings = []\n    for i in range(n):\n        strings.append(sys.stdin.readline().strip())\n    strings.sort(key=len, reverse=True)\n    ok = True\n    for i in range(n):\n        for j in range(i):\n            if strings[i] in strings[j]:\n                ok = False\n                break\n        if not ok:\n            break\n    if ok:\n        print(\"YES\")\n        for s in strings:\n            print(s)\n    else:\n        print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    strings = []  # array of strings\n    for _ in range(n):\n        strings.append(sys.stdin.readline().strip())\n\n    strings.sort(key=len, reverse=True)  # sort by length\n\n    ok = True  # check if all strings are substrings of previous\n    for i in range(1, n):\n        for j in range(i):  # check if strings[i] is substring of strings[j] for all j < i\n            if strings[i] not in strings[j]:  # if strings[i] is not substring of strings[j]\n                ok = False\n                break\n        if not ok:\n            break\n\n    if ok:  # if all strings are substrings of previous\n        print(\"YES\")\n        for s in strings:\n            print(s)\n    else:  # if not\n        print(\"NO\")\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    strings = []  # array of strings\n    for i in range(n):\n        strings.append(sys.stdin.readline().strip())\n\n    strings.sort(key=len, reverse=True)  # sort by length\n\n    ok = True  # check if all strings are substrings of previous\n    for i in range(n):\n        for j in range(i):  # check if strings[i] is substring of strings[j]\n            if strings[i] not in strings[j]:  # if strings[i] is not substring of strings[j]\n                ok = False\n                break\n        if not ok:\n            break\n\n    if ok:  # if all strings are substrings of previous\n        print(\"YES\")\n        for string in strings:\n            print(string)\n    else:  # if not\n        print(\"NO\")\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nn = int(input())\nstrings = [input() for _ in range(n)]\nstrings.sort(key=lambda x: len(x))\n\nis_good = True\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if strings[i] not in strings[j]:\n            is_good = False\n\nif is_good:\n    print('YES')\n    for s in strings:\n        print(s)\nelse:\n    print('NO')\n"]