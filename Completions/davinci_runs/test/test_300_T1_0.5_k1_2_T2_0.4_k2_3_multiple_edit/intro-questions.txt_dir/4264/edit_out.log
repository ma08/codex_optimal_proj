2022-04-22 20:59:11.819913 num operations 2
2022-04-22 20:59:11.819930 size on input set 1
2022-04-22 20:59:11.820110 using api key soukgp
2022-04-22 20:59:16.448131 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\n\nodd_count = 0\nfor i in range(1, N + 1):\n    if len(str(i)) % 2 == 1:\n        odd_count += 1\n\nprint(odd_count)\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\n\nodd_count = 0\nfor i in range(1, N + 1):\n    if len(str(i)) % 2 == 1:\n        odd_count += 1\n\nprint(odd_count)\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\n\nodd_count = 0\nfor i in range(1, N + 1):\n    if len(str(i)) % 2 == 1:\n        odd_count += 1\n\nprint(odd_count)\n"
    }
  ],
  "created": 1650661151,
  "object": "edit"
}
2022-04-22 20:59:16.448392 fix spelling mistakes 3 ['\nN = int(input())\n\nodd_count = 0\nfor i in range(1, N + 1):\n    if len(str(i)) % 2 == 1:\n        odd_count += 1\n\nprint(odd_count)\n', '\nN = int(input())\n\nodd_count = 0\nfor i in range(1, N + 1):\n    if len(str(i)) % 2 == 1:\n        odd_count += 1\n\nprint(odd_count)\n', '\nN = int(input())\n\nodd_count = 0\nfor i in range(1, N + 1):\n    if len(str(i)) % 2 == 1:\n        odd_count += 1\n\nprint(odd_count)\n']
2022-04-22 20:59:16.448425 size on output set 1
2022-04-22 20:59:16.448433 size on input set 1
2022-04-22 20:59:16.448584 using api key soukgp
2022-04-22 20:59:21.462843 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "N = int(input())\n\nodd_count = 0\nfor i in range(1, N + 1):\n    if len(str(i)) % 2 == 1:\n        odd_count += 1\n\nprint(odd_count)\n"
    },
    {
      "index": 1,
      "text": "# coding: utf-8\n# Your code here!\n\nN = int(input())\n\nodd_count = 0\nfor i in range(1, N + 1):\n    if len(str(i)) % 2 == 1:\n        odd_count += 1\n\nprint(odd_count)\n"
    },
    {
      "index": 2,
      "text": "N = int(input())\n\nodd_count = 0\nfor i in range(1, N + 1):\n    if len(str(i)) % 2 == 1:\n        odd_count += 1\n\nprint(odd_count)\n"
    }
  ],
  "created": 1650661156,
  "object": "edit"
}
2022-04-22 20:59:21.463068 fix syntax errors 3 ['N = int(input())\n\nodd_count = 0\nfor i in range(1, N + 1):\n    if len(str(i)) % 2 == 1:\n        odd_count += 1\n\nprint(odd_count)\n', '# coding: utf-8\n# Your code here!\n\nN = int(input())\n\nodd_count = 0\nfor i in range(1, N + 1):\n    if len(str(i)) % 2 == 1:\n        odd_count += 1\n\nprint(odd_count)\n', 'N = int(input())\n\nodd_count = 0\nfor i in range(1, N + 1):\n    if len(str(i)) % 2 == 1:\n        odd_count += 1\n\nprint(odd_count)\n']
2022-04-22 20:59:21.463094 size on output set 2
2022-04-22 20:59:21.463104 num operations 2
2022-04-22 20:59:21.463110 size on input set 1
2022-04-22 20:59:21.463249 using api key derek
2022-04-22 20:59:25.871069 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\n\ncount = 0\nfor i in range(1, N+1):\n    count += len(str(i)) % 2\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\n\ncount = 0\nfor i in range(1, N+1):\n    count += len(str(i)) % 2\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\n\nN = int(input())\n\ncount = 0\nfor i in range(1, N+1):\n    count += len(str(i)) % 2\n\n\n\n#\nprint(count)\n"
    }
  ],
  "created": 1650661161,
  "object": "edit"
}
2022-04-22 20:59:25.871317 fix spelling mistakes 3 ['\nN = int(input())\n\ncount = 0\nfor i in range(1, N+1):\n    count += len(str(i)) % 2\n\nprint(count)\n', '\nN = int(input())\n\ncount = 0\nfor i in range(1, N+1):\n    count += len(str(i)) % 2\n\nprint(count)\n', '\n\nN = int(input())\n\ncount = 0\nfor i in range(1, N+1):\n    count += len(str(i)) % 2\n\n\n\n#\nprint(count)\n']
2022-04-22 20:59:25.871366 size on output set 2
2022-04-22 20:59:25.871374 size on input set 2
2022-04-22 20:59:25.871522 using api key jaanu
2022-04-22 20:59:30.484350 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nN = int(input())\n\ncount = 0\nfor i in range(1, N+1):\n    count += len(str(i)) % 2\n\n\n#\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\nN = int(input())\n\ncount = 0\nfor i in range(1, N+1):\n    count += len(str(i)) % 2\n\n\n#\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\n\ncount = 0\nfor i in range(1, N+1):\n    count += len(str(i)) % 2\nprint(count)\n"
    }
  ],
  "created": 1650661165,
  "object": "edit"
}
2022-04-22 20:59:30.484582 fix syntax errors 3 ['\n\nN = int(input())\n\ncount = 0\nfor i in range(1, N+1):\n    count += len(str(i)) % 2\n\n\n#\nprint(count)\n', '\n\nN = int(input())\n\ncount = 0\nfor i in range(1, N+1):\n    count += len(str(i)) % 2\n\n\n#\nprint(count)\n', '\nN = int(input())\n\ncount = 0\nfor i in range(1, N+1):\n    count += len(str(i)) % 2\nprint(count)\n']
2022-04-22 20:59:30.484824 using api key jaanu
2022-04-22 20:59:35.502221 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\n\ncount = 0\nfor i in range(1, N+1):\n    count += len(str(i)) % 2\n\nprint(count)\n\n# print(len(str(N)))\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\n\ncount = 0\nfor i in range(1, N+1):\n    count += len(str(i)) % 2 == 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\n\ncount = 0\nfor i in range(1, N+1):\n    count += len(str(i)) % 2 == 1\n\nprint(count)\n"
    }
  ],
  "created": 1650661170,
  "object": "edit"
}
2022-04-22 20:59:35.502465 fix syntax errors 3 ['\nN = int(input())\n\ncount = 0\nfor i in range(1, N+1):\n    count += len(str(i)) % 2\n\nprint(count)\n\n# print(len(str(N)))\n', '\nN = int(input())\n\ncount = 0\nfor i in range(1, N+1):\n    count += len(str(i)) % 2 == 1\n\nprint(count)\n', '\nN = int(input())\n\ncount = 0\nfor i in range(1, N+1):\n    count += len(str(i)) % 2 == 1\n\nprint(count)\n']
2022-04-22 20:59:35.502490 size on output set 4
