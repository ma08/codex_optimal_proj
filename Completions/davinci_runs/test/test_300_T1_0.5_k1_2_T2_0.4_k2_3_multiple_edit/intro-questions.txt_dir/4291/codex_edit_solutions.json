["import sys\n\n# Split the input into string and queries\ndef split_input(input):\n    input_split = input.splitlines()\n    n_q = input_split[0].split()\n    n = int(n_q[0])\n    q = int(n_q[1])\n    string = input_split[1]\n    queries = []\n    for i in range(q):\n        queries.append(input_split[2 + i].split())\n    return n, q, string, queries\n\n# Given a string s and a substring sub, returns the number of times sub occurs in s\ndef count_substring(s, sub):\n    count = start = 0\n    while True:\n        start = s.find(sub, start) + 1\n        if start > 0:\n            count+=1\n        else:\n            return count\n\n# Given a string s and a substring sub, returns the number of times sub occurs in s as a substring\ndef count_substring_substring(s, sub):\n    count = 0\n    for i in range(len(s) - 2):\n        if sub in s[i:i+2]:\n            count+=1\n    return count\n\n# Counts the number of times AC occurs in the substring of string starting at index l_i and ending at index r_i\ndef count_ac(string, l, r):\n    substring = string[l-1:r]\n    return count_substring_substring(substring, 'AC')\n\n# Prints the number of times AC occurs in the substring of string starting at index l_i and ending at index r_i for each query\ndef solve(input):\n    n, q, string, queries = split_input(input)\n    for query in queries:\n        l = int(query[0])\n        r = int(query[1])\n        print(count_ac(string, l, r))\n\n# Read input from stdin\nif __name__ == '__main__':\n    input = sys.stdin.read()\n    solve(input)\n", "\nimport sys\n\n# Split the input into string and queries\ndef split_input(input):\n    input_split = input.splitlines()\n    n_q = input_split[0].split()\n    n = int(n_q[0])\n    q = int(n_q[1])\n    string = input_split[1]\n    queries = []\n    for i in range(q):\n        queries.append(input_split[2 + i].split())\n    return n, q, string, queries\n\n# Given a string s and a substring sub, returns the number of times sub occurs in s\ndef count_substring(s, sub):\n    count = start = 0\n    while True:\n        start = s.find(sub, start) + 1\n        if start > 0:\n            count+=1\n        else:\n            return count\n\n# Given a string s and a substring sub, returns the number of times sub occurs in s\n# as a substring\ndef count_substring_substring(s, sub):\n    count = 0\n    for i in range(len(s) - 1):\n        if sub in s[i:i + 2]:\n            count+=1\n    return count\n\n# Counts the number of times AC occurs in the substring of string starting at index l and ending at index r\ndef count_ac(string, l, r):\n    substring = string[l - 1:r]\n    return count_substring_substring(substring, 'AC')\n\n# Prints the number of times AC occurs in the substring of string starting at index l and ending at index r for each query\ndef solve(input):\n    n, q, string, queries = split_input(input)\n    for query in queries:\n        l = int(query[0])\n        r = int(query[1])\n        print(count_ac(string, l, r))\n\n# Read input from stdin\nif __name__ == '__main__':\n    input = sys.stdin.read()\n    solve(input)\n", "# https://atcoder.jp/contests/abc087/tasks/arc090_a\n\ndef main():\n    n, q = map(int, input().split())\n    s = list(input())\n    lr = [list(map(int, input().split())) for _ in range(q)]\n    ans = []\n    for i in range(q):\n        ans.append(s[lr[i][0]-1:lr[i][1]].count(\"AC\"))  # list\u306e\u30b9\u30e9\u30a4\u30b9\u306f\u3001[start:end]\n    for i in ans:\n        print(i)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# Split the input into string and queries\ndef split_input(input):\n    input_split = input.splitlines()\n    n_q = input_split[0].split()\n    n = int(n_q[0])\n    q = int(n_q[1])\n    string = input_split[1]\n    queries = []\n    for i in range(q):\n        queries.append(input_split[2 + i].split())\n    return n, q, string, queries\n\n# Given a string s and a substring sub, returns the number of times sub occurs in s\ndef count_substring(s, sub):\n    count = start = 0\n    while True:\n        start = s.find(sub, start) + 1\n        if start > 0:\n            count += 1\n        else:\n            return count\n\n# Given a string s and a substring sub, returns the number of times sub occurs in s\n# as a substring\ndef count_substring_substring(s, sub):\n    count = 0\n    for i in range(len(s) - 1):\n        if sub in s[i:i+2]:\n            count += 1\n    return count\n\n# Counts the number of times AC occurs in the substring of string starting at index l and ending at index r\ndef count_ac(string, l, r):\n    substring = string[l-1:r]\n    return count_substring_substring(substring, 'AC')\n\n# Prints the number of times AC occurs in the substring of string starting at index l and ending at index r for each query\ndef solve(input):\n    n, q, string, queries = split_input(input)\n    for query in queries:\n        l = int(query[0])\n        r = int(query[1])\n        print(count_ac(string, l, r))\n\n# Read input from stdin\nif __name__ == '__main__':\n    input = sys.stdin.read()\n    solve(input)\n", "# https://atcoder.jp/contests/abc087/tasks/arc090_a\n\ndef main():\n    n, q = map(int, input().split())\n    s = input()\n    lr = [list(map(int, input().split())) for _ in range(q)]\n    for i in range(q):  # \u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\u3067\u66f8\u304d\u76f4\u305b\u308b\n        print(s[lr[i][0]-1:lr[i][1]].count(\"AC\"))\n\n    # \u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\n    for i in [s[lr[i][0]-1:lr[i][1]].count(\"AC\") for i in range(q)]:\n        print(i)\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    n, q = map(int, input().split())\n    s = input()\n    lr = [list(map(int, input().split())) for _ in range(q)]\n    ans = []\n    for i in lr:\n        ans.append(s[i[0]-1:i[1]].count(\"AC\"))\n    for i in ans:\n        print(i)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    N, Q = map(int, input().split())\n    s = input()\n    LR = [list(map(int, input().split())) for _ in range(Q)]\n    ans = []\n    for i in range(Q):\n        ans.append(s[LR[i][0]-1:LR[i][1]].count(\"AC\"))\n    for i in ans:\n        print(i)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# Split the input into string and queries\ndef split_input(input):\n    input_split = input.splitlines()\n    n_q = input_split[0].split()\n    n = int(n_q[0])\n    q = int(n_q[1])\n    string = input_split[1]\n    queries = []\n    for i in range(q):\n        queries.append(input_split[2 + i].split())\n    return n, q, string, queries\n\n# Given a string s and a substring sub, returns the number of times sub occurs in s\ndef count_substring(s, sub):\n    count = start = 0\n    while True:\n        start = s.find(sub, start) + 1\n        if start > 0:\n            count+=1\n        else:\n            return count\n\n# Given a string s and a substring sub, returns the number of times sub occurs in s as a substring\ndef count_substring_substring(s, sub):\n    count = 0\n    for i in range(len(s) - 2):\n        if sub in s[i:i+2]:\n            count+=1\n    return count\n\n# Counts the number of times AC occurs in the substring of string starting at index l_i and ending at index r_i\ndef count_ac(string, l, r):\n    substring = string[l-1:r]\n    return count_substring_substring(substring, 'AC')\n\n# Prints the number of times AC occurs in the substring of string starting at index l_i and ending at index r_i for each query\ndef solve(input):\n    n, q, string, queries = split_input(input)\n    for query in queries:\n        l = int(query[0])\n        r = int(query[1])\n        print(count_ac(string, l, r))\n\n# Read input from stdin\nif __name__ == '__main__':\n    input = sys.stdin.read()\n    solve(input)\n", "import sys\n\n\n# Split the input into string and queries\ndef split_input(input):\n    input_split = input.splitlines()\n    n_q = input_split[0].split()\n    n = int(n_q[0])\n    q = int(n_q[1])\n    string = input_split[1]\n    queries = []\n    for i in range(q):\n        queries.append(input_split[2 + i].split())\n    return n, q, string, queries\n\n# Given a string s and a substring sub, returns the number of times sub occurs in s\ndef count_substring(s, sub):\n    count = start = 0\n    while True:\n        start = s.find(sub, start) + 1\n        if start > 0:\n            count+=1\n        else:\n            return count\n\n# Given a string s and a substring sub, returns the number of times sub occurs in s\n# as a substring\ndef count_substring_substring(s, sub):\n    count = 0\n    for i in range(len(s) - 1):\n        if sub in s[i:i+2]:\n            count+=1\n    return count\n\n# Counts the number of times AC occurs in the substring of string starting at index l and ending at index r\ndef count_ac(string, l, r):\n    substring = string[l-1:r]\n    return count_substring_substring(substring, 'AC')\n\n# Prints the number of times AC occurs in the substring of string starting at index l and ending at index r for each query\ndef solve(input):\n    n, q, string, queries = split_input(input)\n    for query in queries:\n        l = int(query[0])\n        r = int(query[1])\n        print(count_ac(string, l, r))\n\n# Read input from stdin\nif __name__ == '__main__':\n    input = sys.stdin.read()\n    solve(input)\n", "\n\n# Split the input into string and queries.\ndef split_input(input):\n    input_split = input.splitlines()\n    n_q = input_split[0].split()\n    n = int(n_q[0])\n    q = int(n_q[1])\n    string = input_split[1]\n    queries = []\n    for i in range(q):\n        queries.append(input_split[2 + i].split())\n    return n, q, string, queries\n\n# Given a string s and a substring sub, returns the number of times sub occurs in s.\ndef count_substring(s, sub):\n    count = start = 0\n    while True:\n        start = s.find(sub, start) + 1\n        if start > 0:\n            count += 1\n        else:\n            return count\n\n# Given a string s and a substring sub, returns the number of times sub occurs in s as a substring.\ndef count_substring_substring(s, sub):\n    count = 0\n    for i in range(len(s) - 1):\n        if sub in s[i:i+2]:\n            count += 1\n    return count\n\n# Counts the number of times AC occurs in the substring of S starting at index l_i and ending at index r_i.\ndef count_ac(string, l, r):\n    substring = string[l-1:r]\n    return count_substring_substring(substring, 'AC')\n\n# Prints the number of times AC occurs in the substring of S starting at index l_i and ending at index r_i for each query.\ndef solve(input):\n    n, q, string, queries = split_input(input)\n    for query in queries:\n        l = int(query[0])\n        r = int(query[1])\n        print(count_ac(string, l, r))\n\n# Read input from stdin.\nif __name__ == '__main__':\n    input = sys.stdin.read()\n    solve(input)\n", "\ndef main():\n    n, q = map(int, input().split())  # n:\u6587\u5b57\u6570, q:\u30af\u30a8\u30ea\u306e\u6570\n    s = input()\n    lr = [list(map(int, input().split())) for _ in range(q)]  # \u30af\u30a8\u30ea\u306e\u5de6\u7aef\u3068\u53f3\u7aef\n    ans = []\n    for i in range(q):\n        ans.append(s[lr[i][0]-1:lr[i][1]].count(\"AC\"))  # \u30af\u30a8\u30ea\u306e\u5de6\u7aef\u304b\u3089\u53f3\u7aef\u307e\u3067\u306e\u6587\u5b57\u5217\u306e\u4e2d\u306b\"AC\"\u304c\u3044\u304f\u3064\u3042\u308b\u304b\u3092\u30ab\u30a6\u30f3\u30c8\n    for i in ans:\n        print(i)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# Split the input into string and queries\ndef split_input(input):\n    input_split = input.splitlines()\n    n_q = input_split[0].split()\n    n = int(n_q[0])\n    q = int(n_q[1])\n    string = input_split[1]\n    queries = []\n    for i in range(q):\n        queries.append(input_split[2 + i].split())\n    return n, q, string, queries\n\n# Given a string s and a substring sub, returns the number of times sub occurs in s.\ndef count_substring(s, sub):\n    count = 0\n    start = 0\n    while True:\n        start = s.find(sub, start) + 1\n        if start > 0:\n            count+=1\n        else:\n            return count\n\n# Given a string s and a substring sub, returns the number of times sub occurs in s as a substring.\ndef count_substring_substring(s, sub):\n    count = 0\n    for i in range(len(s) - 1):\n        if sub in s[i:i+2]:\n            count+=1\n    return count\n\n# Counts the number of times AC occurs in the substring of S starting at index l_i and ending at index r_i.\ndef count_ac(string, l, r):\n    substring = string[l-1:r]\n    return count_substring_substring(substring, 'AC')\n\n# Prints the number of times AC occurs in the substring of S starting at index l_i and ending at index r_i for each query.\ndef solve(input):\n    n, q, string, queries = split_input(input)\n    for query in queries:\n        l = int(query[0])\n        r = int(query[1])\n        print(count_ac(string, l, r))\n\n# Read input from stdin.\nif __name__ == '__main__':\n    input = sys.stdin.read()\n    solve(input)\n", "\n\nimport sys\n\n\n    # Split the input into string and queries\ndef split_input(input):\n    input_split = input.splitlines()\n    n_q = input_split[0].split()\n    n = int(n_q[0])\n    q = int(n_q[1])\n    string = input_split[1]\n    queries = []\n    for i in range(q):\n        queries.append(input_split[2 + i].split())\n    return n, q, string, queries\n\n\ndef count_substring(s, sub):\n    # Given a string s and a substring sub, returns the number of times sub occurs in s.\n    count = start = 0\n    while True:\n        start = s.find(sub, start) + 1\n        if start > 0:\n            count+=1\n        else:\n            return count\n\n\ndef count_substring_substring(s, sub):\n    # Given a string s and a substring sub, returns the number of times sub occurs in s as a substring.\n    count = 0\n    for i in range(len(s) - 1):\n        if sub in s[i:i+2]:\n            count+=1\n    return count\n\n\ndef count_ac(string, l, r):\n    # Counts the number of times AC occurs in the substring of S starting at index l_i and ending at index r_i.\n    substring = string[l-1:r]\n    return count_substring_substring(substring, 'AC')\n\n\ndef solve(input):\n    # Prints the number of times AC occurs in the substring of S starting at index l_i and ending at index r_i for each query.\n    n, q, string, queries = split_input(input)\n    for query in queries:\n        l = int(query[0])\n        r = int(query[1])\n        print(count_ac(string, l, r))\n\n\nif __name__ == '__main__':\n    # Read input from stdin.\n    input = sys.stdin.read()\n    solve(input)\n", "\ndef main():\n    n, q = map(int, input().split())\n    s = input()\n    lr = [list(map(int, input().split())) for _ in range(q)]\n    for i, j in lr:\n        print(s[i - 1:j].count(\"AC\"))\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, q = map(int, input().split())\n    s = input()\n    lr = [list(map(int, input().split())) for _ in range(q)]\n    ans = []\n    for i in range(q):\n        ans.append(s[lr[i][0] - 1:lr[i][1]].count(\"AC\"))\n    for i in ans:\n        print(i)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\n# Split the input into string and queries\ndef split_input(input):\n    input_split = input.splitlines()\n    n_q = input_split[0].split()\n    n = int(n_q[0])\n    q = int(n_q[1])\n    string = input_split[1]\n    queries = []\n    for i in range(q):\n        queries.append(input_split[2 + i].split())\n    return n, q, string, queries\n\n# Given a string s and a substring sub, returns the number of times sub occurs in s\ndef count_substring(s, sub):\n    count = start = 0\n    while True:\n        start = s.find(sub, start) + 1\n        if start > 0:\n            count+=1\n        else:\n            return count\n\n# Given a string s and a substring sub, returns the number of times sub occurs in s as a substring\ndef count_substring_substring(s, sub):\n    count = 0\n    for i in range(len(s) - 1):\n        if sub in s[i:i+2]:\n            count+=1\n    return count\n\n# Counts the number of times AC occurs in the substring of string starting at index l_i and ending at index r_i\ndef count_ac(string, l, r):\n    substring = string[l-1:r]\n    return count_substring_substring(substring, 'AC')\n\n# Prints the number of times AC occurs in the substring of string starting at index l_i and ending at index r_i for each query\ndef solve(input):\n    n, q, string, queries = split_input(input)\n    for query in queries:\n        l = int(query[0])\n        r = int(query[1])\n        print(count_ac(string, l, r))\n\n# Read input from stdin\nif __name__ == '__main__':\n    input = sys.stdin.read()\n    solve(input)\n", "# https://atcoder.jp/contests/abc087/tasks/arc090_a\n\ndef main():\n    n, q = map(int, input().split())\n    s = list(input())\n    lr = [list(map(int, input().split())) for _ in range(q)]\n    ans = []\n    for i in range(q):\n        ans.append(s[lr[i][0]-1:lr[i][1]].count(\"AC\")) \n    for i in ans:\n        print(i)\n\nif __name__ == '__main__':\n    main()\n"]