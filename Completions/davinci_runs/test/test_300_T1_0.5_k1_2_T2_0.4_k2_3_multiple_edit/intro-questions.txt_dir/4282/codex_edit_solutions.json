["\nfrom collections import defaultdict, deque\n\ndef solve(n, a):\n    res = deque()\n    v = [0] * (n + 1)\n    q = deque()\n    q.append(1)\n    v[1] = 1\n    while q:\n        cur = q.popleft()\n        res.append(cur)\n        for i in range(2):\n            if not v[a[cur][i]]:\n                v[a[cur][i]] = 1\n                q.append(a[cur][i])\n    res.append(1)\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(list)\nfor i in range(n):\n    a[i + 1] = list(map(int, input().split()))\nprint(solve(n, a))\n", "\n\nfrom collections import defaultdict, deque\n\ndef solve(n, a):\n    res = deque()\n    v = [0] * (n)\n    q = deque()\n    q.append(0)\n    v[0] = 1\n    while q:\n        cur = q.popleft()\n        res.append(cur)\n        for i in range(2):\n            if not v[a[cur][i] - 1]:\n                v[a[cur][i] - 1] = 1\n                q.append(a[cur][i] - 1)\n    res.append(0)\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(list)\nfor i in range(n):\n    a[i + 1] = list(map(int, input().split()))\nprint(solve(n, a))\n", "\n#\n\ndef main():\n    n = int(input())\n    a = [[] for _ in range(n)]\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    for i in range(n):\n        a[i][0] = a[i][0] - 1\n        a[i][1] = a[i][1] - 1\n    for i in range(n):\n        if len(a[i]) == 2:\n            j = a[i][0]\n            if a[j][0] == i:\n                a[j][0] = a[j][1] - 1\n                a[j].pop()\n            else:\n                a[j][1] = a[j][0] - 1\n                a[j][0] = i - 1\n            if a[j][0] == j:\n                a[j].pop()\n            a[i].pop()\n    for i in range(n):\n        a[i] = a[i][0]\n    ans = [0] * n\n    for i in range(n):\n        ans[i] = i + 1\n    for i in range(n):\n        j = a[i]\n        ans[i], ans[j] = ans[j], ans[i]\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\nfrom collections import defaultdict\n\ndef solve(n, a):\n    d = defaultdict(list)\n    for i in range(1, n + 1):\n        d[a[i][0]].append(i) #adds the first number\n        d[a[i][1]].append(i) #adds the second number\n    start = 1\n    for i in range(1, n + 1):\n        if len(d[i]) == 1:\n            start = i\n            break\n    res = []\n    for i in range(n):\n        res.append(start)\n        start = a[start][0] if a[start][0] != res[-1] else a[start][1]\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(list)\nfor i in range(n):\n    a[i + 1] = list(map(int, input().split()))\nprint(solve(n, a))\n", "from collections import defaultdict\n\ndef solve(n, a):\n    d = defaultdict(set)\n    for i in range(1, n + 1):\n        d[a[i][0]].add(i)\n        d[a[i][1]].add(i)\n    start = 1\n    for i in range(1, n + 1):\n        if len(d[i]) == 1:\n            start = i\n            break\n    res = []\n    for i in range(n):\n        res.append(start)\n        start = a[start][0] if a[start][0] != res[-1] else a[start][1]\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(list)\nfor i in range(n):\n    a[i + 1] = list(map(int, input().split()))\nprint(solve(n, a))\n", "\n#\n\ndef main():\n    n = int(input())\n    a = [[] for i in range(n)]\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    for i in range(n):\n        a[i][0] -= 1\n        a[i][1] -= 1\n    for i in range(n):\n        if len(a[i]) == 2:\n            j = a[i][0]\n            if a[j][0] == i:\n                a[j][0] = a[j][1]\n                a[j].pop()\n            else:\n                a[j][1] = a[j][0]\n                a[j][0] = i\n            if a[j][0] == j:\n                a[j].pop()\n            a[i].pop()\n    for i in range(n):\n        a[i] = a[i][0]\n    ans = [0] * n\n    for i in range(n):\n        ans[i] = i + 1\n    for i in range(n):\n        j = a[i]\n        ans[i], ans[j] = ans[j], ans[i]\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n = int(input())\n    a = [[] for _ in range(n)]\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    for i in range(n):\n        a[i][0] = a[i][0] - 1\n        a[i][1] = a[i][1] - 1\n    for i in range(n):\n        if len(a[i]) == 2:\n            j = a[i][0]\n            if a[j][0] == i:\n                a[j][0] = a[j][1]\n                a[j].pop()\n            else:\n                a[j][1] = a[j][0]\n                a[j][0] = i\n            if a[j][0] == j:\n                a[j].pop()\n            a[i].pop()\n    for i in range(n):\n        a[i] = a[i][0]\n    ans = [0] * n\n    for i in range(n):\n        ans[i] = i + 1\n    for i in range(n):\n        j = a[i]\n        ans[i], ans[j] = ans[j], ans[i]\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n", "from collections import defaultdict\n\ndef solve(n, a):\n    d = defaultdict(list)\n    for i in range(1, n + 1):\n        d[a[i][0]].append(i)\n        d[a[i][1]].append(i)\n    start = 1\n    for i in range(1, n + 1):\n        if len(d[i]) == 1:\n            start = i\n            break\n    res = []\n    for i in range(n):\n        res.append(start)\n        start = a[start][0] if a[start][0] != res[-1] else a[start][1]\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(list)\nfor i in range(n):\n    a[i + 1] = list(map(int, input().split()))\nprint(solve(n, a))\n", "\ndef main():\n    n = int(input())\n    a = [[] for i in range(n)]\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    for i in range(n):\n        a[i][0] -= 1\n        a[i][1] -= 1\n    for i in range(n):\n        if len(a[i]) == 2:\n            j = a[i][0]\n            if a[j][0] == i:\n                a[j][0] = a[j][1]\n                a[j].pop()\n            else:\n                a[j][1] = a[j][0]\n                a[j][0] = i\n            if a[j][0] == j:\n                a[j].pop()\n            a[i].pop()\n    for i in range(n):\n        a[i] = a[i][0]\n    ans = [0] * n\n    for i in range(n):\n        ans[i] = i + 1\n    for i in range(n):\n        j = a[i]\n        ans[i], ans[j] = ans[j], ans[i]\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n", "from collections import defaultdict\n\ndef solve(n, a, b):\n    d = defaultdict(int)\n    for i in range(n):\n        d[a[i]] += 1\n        d[b[i]] += 1\n    for i in range(n):\n        if d[a[i]] == 1 or d[b[i]] == 1:\n            return i + 1\n    return -1\n\nn = int(input())\na = []\nb = []\nfor i in range(n):\n    a.append(int(input()))\nfor i in range(n):\n    b.append(int(input()))\nprint(solve(n, a, b))\n", "\nfrom collections import defaultdict\n\ndef solve(n, a):\n    d = defaultdict(list)\n    for i in range(1, n + 1):\n        d[a[i][0]].append(i)\n        d[a[i][1]].append(i)\n    start = 1\n    for i in range(1, n + 1):\n        if len(d[i]) == 1:\n            start = i\n            break\n    res = []\n    for i in range(n):\n        res.append(start)\n        start = a[start][0] if a[start][0] != res[-1] else a[start][1]\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(tuple)\nfor i in range(n):\n    a[i + 1] = tuple(map(int, input().split()))\nprint(solve(n, a))\n", "\n#\n\ndef main():\n    n = int(input())\n    a = [[] for _ in range(n)]\n    for i in range(n):\n        a[i] = list(map(int, input().split()))[1:]\n    for i in range(n):\n        for j in range(len(a[i])):\n            a[i][j] -= 1\n    for i in range(n):\n        for j in a[i]:\n            a[j].remove(i)\n    for i in range(n):\n        if len(a[i]) == 1:\n            a[i] = a[i][0]\n        else:\n            a[i] = -1\n    ans = [0] * n\n    for i in range(n):\n        ans[i] = i + 1\n    for i in range(n):\n        j = a[i]\n        ans[i], ans[j] = ans[j], ans[i]\n    print(*ans)\n\n\nif __name__ == '__main__':\n    main()\n", "# https://codeforces.com/problemset/problem/813/A\n\nfrom collections import defaultdict, deque\n\ndef solve(n, a):\n    res = deque()\n    v = [0] * (n + 1)\n    q = deque()\n    q.append(1)\n    v[1] = 1\n    while q:\n        cur = q.popleft()\n        res.append(cur)\n        for i in range(2):\n            if not v[a[cur][i]]:\n                v[a[cur][i]] = 1\n                q.append(a[cur][i])\n    res.append(1)\n    return ' '.join(map(str, res))\n\nn = int(input())\na = defaultdict(list)\nfor i in range(n):\n    a[i + 1] = list(map(int, input().split()))\nprint(solve(n, a))\n", "#this is a test file\n"]