2022-04-22 19:54:56.364672 num operations 2
2022-04-22 19:54:56.364694 size on input set 1
2022-04-22 19:54:56.364901 using api key kouti
2022-04-22 19:55:01.397501 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nd, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print((101**n))\n"
    },
    {
      "index": 1,
      "text": "\n\nd, n = map(int, input().split()) \n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n"
    },
    {
      "index": 2,
      "text": "\n\nd, n = map(int, input().split()) \n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n"
    }
  ],
  "created": 1650657296,
  "object": "edit"
}
2022-04-22 19:55:01.397773 fix spelling mistakes 3 ['\n\nd, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print((101**n))\n', '\n\nd, n = map(int, input().split()) \n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n', '\n\nd, n = map(int, input().split()) \n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n']
2022-04-22 19:55:01.397821 size on output set 2
2022-04-22 19:55:01.397834 size on input set 2
2022-04-22 19:55:01.398025 using api key derek
2022-04-22 19:55:06.142725 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nd, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n"
    },
    {
      "index": 1,
      "text": "\nd, n = map(int, input().split()) \n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n"
    },
    {
      "index": 2,
      "text": "\nd, n = map(int, input().split()) \n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n"
    }
  ],
  "created": 1650657301,
  "object": "edit"
}
2022-04-22 19:55:06.142954 fix syntax errors 3 ['\n\nd, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n', '\nd, n = map(int, input().split()) \n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n', '\nd, n = map(int, input().split()) \n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n']
2022-04-22 19:55:06.143111 using api key kouti
2022-04-22 19:55:11.317295 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nd, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print((101**n))\n"
    },
    {
      "index": 1,
      "text": "\n\nd, n = map(int, input().split())\n\nif d == 0:\n    print(100 ** n)\nelse:\n    print((101 ** n))\n"
    },
    {
      "index": 2,
      "text": "\n\nd, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n"
    }
  ],
  "created": 1650657306,
  "object": "edit"
}
2022-04-22 19:55:11.317525 fix syntax errors 3 ['\nd, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print((101**n))\n', '\n\nd, n = map(int, input().split())\n\nif d == 0:\n    print(100 ** n)\nelse:\n    print((101 ** n))\n', '\n\nd, n = map(int, input().split())\n\nif d == 0:\n    print(100**n)\nelse:\n    print(101**n)\n']
2022-04-22 19:55:11.317550 size on output set 4
2022-04-22 19:55:11.317563 num operations 2
2022-04-22 19:55:11.317569 size on input set 1
2022-04-22 19:55:11.317705 using api key soukgp
2022-04-22 19:55:16.884004 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n\n# fix spelling mistakes\n    print(10000 * N)\n"
    },
    {
      "index": 1,
      "text": "\n\nD, N = map(int, input().split()) \n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n    print(10000 * N)\n"
    },
    {
      "index": 2,
      "text": "\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n    print(10000 * N)\n"
    }
  ],
  "created": 1650657311,
  "object": "edit"
}
2022-04-22 19:55:16.884242 fix spelling mistakes 3 ['\n\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n\n# fix spelling mistakes\n    print(10000 * N)\n', '\n\nD, N = map(int, input().split()) \n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n    print(10000 * N)\n', '\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n    print(10000 * N)\n']
2022-04-22 19:55:16.884268 size on output set 3
2022-04-22 19:55:16.884276 size on input set 3
2022-04-22 19:55:16.884423 using api key derek
2022-04-22 19:55:21.971115 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "D, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n    print(10000 * N\n"
    },
    {
      "index": 1,
      "text": "\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 ** N)\nelse:\n    print(10000 ** N)\n"
    },
    {
      "index": 2,
      "text": "\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100**N)\nelse:\n    print(10000**N)\n"
    }
  ],
  "created": 1650657316,
  "object": "edit"
}
2022-04-22 19:55:21.971339 fix syntax errors 3 ['D, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n    print(10000 * N\n', '\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 ** N)\nelse:\n    print(10000 ** N)\n', '\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100**N)\nelse:\n    print(10000**N)\n']
2022-04-22 19:55:21.971523 using api key kouti
2022-04-22 19:55:26.823990 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nD, N = map(int, input().split()) \n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n    print(10000 * N)\n"
    },
    {
      "index": 1,
      "text": "\nD, N = map(int, input().split()) \n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n    print(10000 * N)\n"
    },
    {
      "index": 2,
      "text": "\n\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n    print(10000 * N)\n"
    }
  ],
  "created": 1650657322,
  "object": "edit"
}
2022-04-22 19:55:26.824235 fix syntax errors 3 ['\nD, N = map(int, input().split()) \n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n    print(10000 * N)\n', '\nD, N = map(int, input().split()) \n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n    print(10000 * N)\n', '\n\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n    print(10000 * N)\n']
2022-04-22 19:55:26.824415 using api key kouti
2022-04-22 19:55:31.988068 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100**N)\nelse:\n\n# fix spelling mistakes\n    print(10000**N)\n"
    },
    {
      "index": 1,
      "text": "\n\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n\n# fix spelling mistakes\nprint(10000 * N)\n"
    },
    {
      "index": 2,
      "text": "\n\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n# fix spelling mistakes\n    print(10000 * N)\n"
    }
  ],
  "created": 1650657326,
  "object": "edit"
}
2022-04-22 19:55:31.988277 fix syntax errors 3 ['\n\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100**N)\nelse:\n\n# fix spelling mistakes\n    print(10000**N)\n', '\n\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n\n# fix spelling mistakes\nprint(10000 * N)\n', '\n\nD, N = map(int, input().split())\n\nif D == 0:\n    print(N)\nelif D == 1:\n    print(100 * N)\nelse:\n# fix spelling mistakes\n    print(10000 * N)\n']
2022-04-22 19:55:31.988304 size on output set 8
