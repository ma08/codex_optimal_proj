["\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n\n    projects.sort(key=lambda x: x[1])\n\n    for i in range(n):\n        if projects[i][0] > r:\n            print(\"NO\")\n            return\n        r += projects[i][1]\n        if r < 0:\n            print(\"NO\")\n            sys.exit()\n\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, sys.stdin.readline().split())))\n\n    projects.sort(key=lambda x: x[1])\n\n    for i in range(n):\n        if projects[i][0] > r:\n            print(\"NO\")\n            sys.exit()\n        r += projects[i][1]\n        if r < 0 or r > 1000000000:\n            print(\"NO\")\n            sys.exit()\n\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, input().split())))\n\n    projects.sort(key=lambda x: x[1])\n\n    for i in range(n):\n        if projects[i][0] > r:\n            print(\"NO\")\n            sys.exit()\n        r += projects[i][1]\n        if r < 0: \n            print(\"NO\")\n            sys.exit()\n\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split()) # n = number of projects, r = initial rating\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, sys.stdin.readline().split()))) # list of projects\n\n    projects.sort(key=lambda x: x[1])\n\n    for i in range(n):\n        if projects[i][0] > r: # if rating of project is greater than current rating\n            print(\"NO\")\n            sys.exit()\n        r += projects[i][1] # add rating of project to current rating\n        if r < 0: # if current rating is negative\n            print(\"NO\")\n            sys.exit()\n\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    pass\n    print(\"Hello World\")\nif __name__ == \"__main__\":\n    main()\n\n#fix spelling mistakes\n", "\nimport sys\n\ndef main():\n    n, r = map(int, input().split())\n    tasks = []\n    for i in range(n):\n        tasks.append(list(map(int, input().split())))\n\n    tasks.sort(key=lambda x: x[1])\n\n    for i in range(n):\n        if tasks[i][0] > r:\n            print(\"NO\")\n            sys.exit()\n        r += tasks[i][1]\n\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, sys.stdin.readline().split())))\n\n    projects.sort(key=lambda x: x[1])\n\n    for i in range(n):\n        if projects[i][0] > r:\n            print(\"NO\")\n            sys.exit()\n        r += projects[i][1]\n\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n, r = map(int, input().split())\n    tasks = []\n    for i in range(n):\n        tasks.append(list(map(int, input().split())))\n\n    tasks.sort(key=lambda x: x[1])\n\n    for i in range(n):\n        if tasks[i][0] > r:\n            print(\"NO\")\n            sys.exit()\n        r += tasks[i][1]\n\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(input())\n    s = input()\n    t = input()\n\n    ans = []\n    for i in range(n):\n        ans.append(s[i])\n        ans.append(t[i])\n\n    print(\"\".join(ans))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    print(\"Hello World!\")\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    pass\nif __name__ == \"__main__\":\n\n\n#fix spelling mistakes\n    main()\n", "\n\n\ndef main():\n    print(\"Hello World\")\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n\n\n\n#fix spelling mistakes\n    main()\n", "import sys\n\ndef main():\n    n, r = map(int, input().split())\n    tasks = []\n    for i in range(n):\n        tasks.append(list(map(int, input().split())))\n\n    tasks.sort(key=lambda x: x[1])\n\n    for i in range(n):\n        if tasks[i][0] > r:\n            print(\"NO\")\n            sys.exit()\n        r += tasks[i][1]\n\n    print(\"YES\")\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    print(\"Hello World\")\n\nif __name__ == \"__main__\":\n    main()\n"]