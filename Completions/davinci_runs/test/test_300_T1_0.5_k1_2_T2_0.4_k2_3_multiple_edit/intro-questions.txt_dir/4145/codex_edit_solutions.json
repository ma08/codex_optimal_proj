["\nimport math\n\ndef main():\n\t# Read input\n\tx = int(input())\n\n\t# Calculate minimum prime number that is larger than x\n\tprime_num = x\n\twhile True:\n\t\tif is_prime(prime_num):\n\t\t\tbreak\n\t\telse:\n\t\t\tprime_num += 1\n\n\t# Output\n\tprint(prime_num)\n\ndef is_prime(n):\n\t\"\"\"\n\tCheck if n is prime.\n\t\"\"\"\n\tif n == 1:\n\t\treturn False\n\telse:\n\t\tfor i in range(2, math.floor(math.sqrt(n))+1):\n\t\t\tif n % i == 0:\n\t\t\t\treturn False\n\t\treturn True\n\nif __name__ == '__main__':\n\tmain()\n", "\nimport math\n\ndef is_prime(n):\n    if n == 2:\n        return True\n    if n % 2 == 0 or n <= 1:\n        return False\n\n    sqr = int(math.sqrt(n)) + 1\n\n    for divisor in range(3, sqr, 2):\n        if n % divisor == 0:\n            return False\n    return True\n\ndef main():\n    X = int(input())\n    while True:\n        if is_prime(X):\n            print(X)\n            break\n        X += 1\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport math\n\ndef main():\n\t# Read input\n\tx = int(input())\n\n\t# Calculate minimum prime number of x\n\tprime_num = x\n\twhile True:\n\t\tif is_prime(prime_num):\n\t\t\tbreak\n\t\telse:\n\t\t\tprime_num += 1\n\n\t# Output\n\tprint(prime_num)\n\ndef is_prime(n):\n\t\"\"\"\n\tCheck if n is prime.\n\t\"\"\"\n\tif n == 1:\n\t\treturn False\n\telse:\n\t\tfor i in range(2, math.floor(math.sqrt(n))+1):\n\t\t\tif n % i == 0:\n\t\t\t\treturn False\n\t\treturn True\n\nif __name__ == '__main__':\n\tmain()\n", "import math\n\ndef is_prime(n):\n    if n == 2:\n        return True\n    if n % 2 == 0 or n <= 1:\n        return False\n\n    sqr = int(math.sqrt(n)) + 1\n\n    for divisor in range(3, sqr, 2):\n        if n % divisor == 0:\n            return False\n    return True\n\ndef main():\n    X = int(input())\n    while True:\n        if is_prime(X):\n            print(X)\n            break\n        X += 1\n\nif __name__ == '__main__':\n    main()\n", "\n#!/usr/bin/env python3\nimport math\n\ndef is_prime(n):\n    if n == 2:\n        return True\n    if n % 2 == 0 or n <= 1:\n        return False\n\n    sqr = int(math.sqrt(n)) + 1\n\n    for divisor in range(3, sqr, 2):\n        if n % divisor == 0:\n            return False\n    return True\n\ndef main():\n    X = int(input())\n    while(True):\n        if is_prime(X):\n            print(X)\n            break\n        X += 1\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef main():\n    # Read input\n    x = int(input())\n\n    # Calculate minimum prime number that is larger than x\n    prime_num = x\n    while True:\n        if is_prime(prime_num):\n            break\n        else:\n            prime_num += 1\n\n    # Output\n    print(prime_num)\n\ndef is_prime(n):\n    \"\"\"\n    Check if n is prime.\n    \"\"\"\n    if n == 1:\n        return False\n    else:\n        for i in range(2, math.floor(math.sqrt(n))+1):\n            if n % i == 0:\n                return False\n        return True\n\nif __name__ == '__main__':\n    main()\n", "import math\ndef is_prime(n):\n    if n == 2:\n        return True\n    if n % 2 == 0 or n <= 1:\n        return False\n\n    sqr = int(math.sqrt(n)) + 1\n    for divisor in range(3, sqr, 2):\n        if n % divisor == 0:\n            return False\n    return True\n\ndef main():\n    X = int(input())\n    while True:\n        if is_prime(X):\n            print(X)\n            break\n        X += 1\n\nif __name__ == '__main__':\n    main()\n", "import math\n\ndef main():\n    # read input\n    x = int(input()) # input() is a string\n\n    # calculate minimum prime number\n    prime_num = x # prime_num is an integer\n    while True:\n        if is_prime(prime_num):\n            break\n        else:\n            prime_num += 1\n\n    # output\n    print(prime_num)\n\ndef is_prime(n):\n    \"\"\"\n    Check if n is prime.\n    \"\"\"\n    if n == 1:\n        return False\n    else:\n        for i in range(2, math.floor(math.sqrt(n))+1):\n            if n % i == 0:\n                return False\n        return True\n\nif __name__ == '__main__':\n    main()\n", "\n# Prime Generator\nimport math\n\ndef is_prime(n):\n    if n == 2:\n        return True\n    if n % 2 == 0 or n <= 1:\n        return False\n\n    sqr = int(math.sqrt(n)) + 1\n\n    for divisor in range(3, sqr, 2):\n        if n % divisor == 0:\n            return False\n    return True\n\ndef main():\n    X = int(input())\n    while(True):\n        if is_prime(X):\n            print(X)\n            break\n        X += 1\n\nif __name__ == '__main__':\n    main()\n", "import math\n\ndef is_prime(n):\n    if n == 2:\n        return True\n    if n % 2 == 0 or n <= 1:\n        return False\n\n    sqr = int(math.sqrt(n)) + 1\n\n    for divisor in range(3, sqr, 2):\n        if n % divisor == 0:\n            return False\n    return True\n\ndef main():\n    X = int(input())\n    while(True):\n        if is_prime(X):\n            print(X)\n            break\n        X += 1\n\nif __name__ == '__main__':\n    main()\n", "import math\n\ndef main():\n    # read input\n    x = int(input())  # read input\n\n    # calculate minimum prime number\n    prime_num = x\n    while True:\n        if is_prime(prime_num):\n            break\n        else:\n            prime_num += 1\n\n    # output\n    print(prime_num)  # output\n\ndef is_prime(n):\n    \"\"\"\n    Check if n is prime.\n    \"\"\"\n    if n == 1:\n        return False\n    else:\n        for i in range(2, math.floor(math.sqrt(n))+1):\n            if n % i == 0:\n                return False\n        return True\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    # read input\n    n = int(input())\n\n    # initialize\n    dp = [0] * (n+1)\n    dp[1] = 1\n    dp[2] = 2\n\n    # calculate\n    for i in range(3, n+1):\n        dp[i] = (dp[i-1] + dp[i-2]) % 10007\n\n    # output\n    print(dp[n])\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef main():\n    # Read input\n    x = int(input())\n\n    # Calculate minimum prime number of x\n    prime_num = x\n    while True:\n        if is_prime(prime_num):\n            break\n        else:\n            prime_num += 1\n\n    # Output\n    print(prime_num)\n\ndef is_prime(n):\n    \"\"\"\n    Check if n is prime.\n    \"\"\"\n    if n == 1:\n        return False\n    else:\n        for i in range(2, math.floor(math.sqrt(n))+1):\n            if n % i == 0:\n                return False\n        return True\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"]