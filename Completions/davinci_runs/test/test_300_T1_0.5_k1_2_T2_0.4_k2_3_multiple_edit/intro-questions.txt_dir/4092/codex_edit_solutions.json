["\nimport sys\n\ndef main():\n    n = sys.stdin.readline().rstrip()\n    n = int(n.strip())\n    a = sys.stdin.readline()\n    a = a.split(\" \")\n    for i in range(n):\n        a[i] = int(a[i].strip())\n    print(a)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = sys.stdin.readline().strip()\n    n = int(n)\n    a = sys.stdin.readline().strip()\n    a = a.split()\n    for i in range(n):\n        a[i] = int(a[i])\n    print(a)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    with open('file.txt', 'r') as f:\n        n = f.readline()\n        n = int(n)\n        a = f.readline()\n        a = a.split()\n        for i in range(n):\n            a[i] = int(a[i])\n        print(a)\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    with open('input.txt') as f:\n        n = f.readline()\n        n = int(n)\n        a = f.readline()\n        a = a.split()\n        for i in range(n):\n            a[i] = int(a[i])\n        s = [0] * (n + 1)\n        s[0] = 0\n        for i in range(1, n + 1):\n            s[i] = s[i - 1] + a[i - 1]\n        d = {}\n        for i in range(n + 1):\n            if s[i] in d:\n                d[s[i]].append(i)\n            else:\n                d[s[i]] = [i]\n        ans = 0\n        for i in d:\n            if len(d[i]) > 1:\n                ans += len(d[i]) - 1\n        with open('output.txt', 'w') as f:\n            f.write(str(ans))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = [0] + arr + [0]\n    prefix_sum_arr = [0] * (n + 1)\n\n    for i in range(1, n + 1):\n        prefix_sum_arr[i] = prefix_sum_arr[i-1] + arr[i]\n\n    prefix_sum_dict = {}\n    for i in range(n + 1):\n        if prefix_sum_arr[i] in prefix_sum_dict:\n            prefix_sum_dict[prefix_sum_arr[i]].append(i)\n        else:\n            prefix_sum_dict[prefix_sum_arr[i]] = [i]\n\n    ans = 0\n    for key in prefix_sum_dict:\n        if len(prefix_sum_dict[key]) == 1:\n            ans += 1\n        else:\n            ans += len(prefix_sum_dict[key]) - 1\n\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n", "def main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = [0] + arr\n    prefix_sum = [0] * (n + 1)\n\n    for i in range(1, n + 1):\n        prefix_sum[i] = prefix_sum[i-1] + arr[i]\n\n    prefix_sum_dict = {}\n    for i in range(n + 1):\n        if prefix_sum[i] in prefix_sum_dict:\n            prefix_sum_dict[prefix_sum[i]].append(i)\n        else:\n            prefix_sum_dict[prefix_sum[i]] = [i]\n\n    ans = 0\n    for key in prefix_sum_dict:\n        if len(prefix_sum_dict[key]) == 1:\n            ans += 1\n        else:\n            ans += len(prefix_sum_dict[key]) - 1\n\n    print(ans)\n\nif __name__==\"__main__\":\n    main()\n\n", "\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    prefix_sum = [0] * (n + 1)\n\n    for i in range(1, n + 1):\n        prefix_sum[i] = prefix_sum[i-1] + arr[i]\n\n    prefix_sum_dict = {}\n    for i in range(n + 1):\n        if prefix_sum[i] in prefix_sum_dict:\n            prefix_sum_dict[prefix_sum[i]].append(i)\n        else:\n            prefix_sum_dict[prefix_sum[i]] = [i]\n\n    ans = 0\n    for key in prefix_sum_dict:\n        if len(prefix_sum_dict[key]) == 1:\n            ans += 1\n        else:\n            ans += len(prefix_sum_dict[key]) - 1\n\n    print(ans)\n\nif __name__==\"__main__\":\n    main()\n", "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    if s % n != 0:\n        print(-1)\n        return\n    ans = 0; cnt = 0; s //= n\n    for i in range(n):\n        if a[i] != s:\n            cnt += 1\n        else:\n            ans += cnt\n            cnt = 0\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    with open('input.txt') as f:\n        n = int(f.readline())\n        a = [int(i) for i in f.readline().split()]\n        s = [0 for i in range(n + 1)]\n        s[0] = a[0]\n        for i in range(1, n):\n            s[i] = s[i - 1] + a[i]\n        ans = 0    \n        for i in range(n):\n            for j in range(i + 1, n):\n                if s[i] == s[j]:\n                    ans += 1\n        with open('output.txt', 'w') as f:\n            f.write(str(ans))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    arr = [0] + list(map(int, input().split()))\n    prefix_sum_arr = [0] * (n + 1)\n\n    for i in range(1, n + 1):\n        prefix_sum_arr[i] = prefix_sum_arr[i-1] + arr[i]\n\n    prefix_sum_dict = {}\n    for i in range(n + 1):\n        if prefix_sum_arr[i] in prefix_sum_dict:\n            prefix_sum_dict[prefix_sum_arr[i]].append(i)\n        else:\n            prefix_sum_dict[prefix_sum_arr[i]] = [i]\n\n    ans = 0\n    for key in prefix_sum_dict:\n        if len(prefix_sum_dict[key]) == 1:\n            ans += 1\n        else:\n            ans += len(prefix_sum_dict[key]) - 1\n\n    print(ans)\n\nif __name__==\"__main__\":\n    main()\n", "\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = [0] + arr\n    prefix_sum_arr = [0] * (n + 1)\n\n    for i in range(1, n + 1):\n        prefix_sum_arr[i] = prefix_sum_arr[i-1] + arr[i]\n\n    prefix_sum_dict = {}\n    for i in range(n + 1):\n        if prefix_sum_arr[i] in prefix_sum_dict:\n            prefix_sum_dict[prefix_sum_arr[i]].append(i)\n        else:\n            prefix_sum_dict[prefix_sum_arr[i]] = [i]\n\n    ans = 0\n    for key in prefix_sum_dict:\n        if len(prefix_sum_dict[key]) == 1:\n            ans += 1\n        else:\n            ans += len(prefix_sum_dict[key]) - 1\n\n    print(ans)\n\nif __name__==\"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    prefix_sum = [0] * (n + 1)\n\n    for i in range(1, n + 1):\n        prefix_sum[i] = prefix_sum[i-1] + arr[i]\n\n    prefix_sum_dict = {}\n    for i in range(n + 1):\n        if prefix_sum[i] in prefix_sum_dict:\n            prefix_sum_dict[prefix_sum[i]].append(i)\n        else:\n            prefix_sum_dict[prefix_sum[i]] = [i]\n\n    ans = 0\n    for key in prefix_sum_dict:\n        if len(prefix_sum_dict[key]) == 1 and key != 0:\n            ans += 1\n        else:\n            ans += len(prefix_sum_dict[key]) - 1\n\n    print(ans)\n\nif __name__==\"__main__\":\n    main()\n", "\nimport sys\n\ndef main():\n    with open('input.txt') as f:\n        pass\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    prefix_sum = [0] * n\n\n    for i in range(1, n):\n        prefix_sum[i] = prefix_sum[i-1] + arr[i]\n\n    prefix_sum_dict = {}\n    for i in range(n):\n        if prefix_sum[i] in prefix_sum_dict:\n            prefix_sum_dict[prefix_sum[i]].append(i)\n        else:\n            prefix_sum_dict[prefix_sum[i]] = [i]\n\n    ans = 0\n    for key in prefix_sum_dict:\n        if len(prefix_sum_dict[key]) == 1:\n            ans += 1\n        else:\n            ans += len(prefix_sum_dict[key]) - 1\n\n    print(ans)\n\nif __name__==\"__main__\":\n    main()\n", "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(a)\n\nif __name__ == '__main__':\n    main()\n", "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = [0] + arr\n    prefix_sum = [0] * (n + 1)\n\n    for i in range(1, n + 1):\n        prefix_sum[i] = prefix_sum[i-1] + arr[i]\n\n    prefix_sum_dict = {}\n    for i in range(n + 1):\n        if prefix_sum[i] in prefix_sum_dict:\n            prefix_sum_dict[prefix_sum[i]].append(i)\n        else:\n            prefix_sum_dict[prefix_sum[i]] = [i]\n\n    ans = 0\n    for key in prefix_sum_dict:\n        if len(prefix_sum_dict[key]) == 1:\n            ans += 1\n        else:\n            ans += len(prefix_sum_dict[key]) - 1\n\n    print(ans)\n\nif __name__==\"__main__\":\n    main()\n"]