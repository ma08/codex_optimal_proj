["\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    num_ingredient = int(input())\n    ingredient = list(map(int, input().split()))\n    ingredient.sort()\n\n    while len(ingredient) > 1:\n        ingredient[0] = (ingredient[0] + ingredient[1]) / 2\n\n        ingredient.pop(1)\n        ingredient.sort()\n\n    print(ingredient[0])\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    num = int(sys.stdin.readline())\n    v = list(map(int, sys.stdin.readline().split()))\n\n    for i in range(num-1):\n        v.sort()\n        x = v.pop(0)\n        y = v.pop(0)\n        v.append((x+y)/2)\n\n    print(v[0])\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\nimport heapq \n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, (x+y)/2)\n\nprint(v[0])\n", "\n\ndef main():\n    num_ingredients = int(input())\n    ingredients = list(map(int, input().split()))\n    ingredients.sort()\n\n    while len(ingredients) > 1:\n        ingredients[0] = (ingredients[0] + ingredients[1]) / 2\n        ingredients.pop(1)\n        ingredients.sort()\n\n    print(ingredients[0])\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num - 1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, (x + y) / 2)\n\nprint(v[0])\n", "#!/usr/bin/env python\n\nimport sys\n\nimport heapq # heapq.heapify(list), heapq.heappop(list), heapq.heappush(list, item)\n\ndef main():\n    num = int(sys.stdin.readline())\n    v = list(map(float, sys.stdin.readline().split()))\n    heapq.heapify(v)\n\n    for i in range(num-1):\n        x = heapq.heappop(v)\n        y = heapq.heappop(v)\n        heapq.heappush(v, (x+y)/2)\n\n    print(v[0])\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python\n\nimport sys\n\nimport heapq # heapq.heapify(list), heapq.heappop(list), heapq.heappush(list, item)\n\ndef main():\n    num = int(sys.stdin.readline())\n    v = list(map(int, sys.stdin.readline().split())) # map(function, list)\n    heapq.heapify(v)\n\n    for i in range(num-1):\n        x = heapq.heappop(v)\n        y = heapq.heappop(v)\n        heapq.heappush(v, (x+y)/2)\n\n    print('{:.1f}'.format(v[0]))\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    num_ingredient = int(input())\n    ingredient = list(map(int, input().split()))\n    ingredient.sort()\n\n    while len(ingredient) > 1:\n        ingredient[0] = (ingredient[0] + ingredient[1]) / 2\n        ingredient.pop(1)\n        ingredient.sort()\n\n    print(ingredient[0])\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    num_ingridients = int(input())\n    ingredients = list(map(int, input().split()))\n    ingredients.sort()\n\n    while len(ingredients) > 1:\n        ingredients[0] = (ingredients[0] + ingredients[1]) / 2\n        ingredients.pop(1)\n        ingredients.sort()\n\n    print(ingredients[0])\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python\n\nimport sys\n\nimport heapq # heapq.heapify(list), heapq.heappop(list), heapq.heappush(list, item)\n\ndef main():\n    num = int(sys.stdin.readline())\n    v = list(map(int, sys.stdin.readline().split()))\n    heapq.heapify(v)\n\n    for i in range(num-1):\n        x = heapq.heappop(v)\n        y = heapq.heappop(v)\n        heapq.heappush(v, (x+y)/2)\n\n    print(v[0]) # heapq.heappop(v)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\n\nif num == 1:\n    print(v[0])\n    exit()\n\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, (x+y)/2)\n\nprint(v[0])\n", "#!/usr/bin/env python3\n\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, int((x+y)/2))\n\nprint(v[0])\n", "\ndef main():\n    num_ingredients = int(input())\n    ingredients = list(map(int, input().split()))\n    ingredients.sort()\n\n    while len(ingredients) > 1:\n        ingredients[0] = (ingredients[0] + ingredients[1]) / 2\n        ingredients.pop(1)\n        ingredients.sort()\n\n    print(int(ingredients[0]))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport heapq\n\nnum = int(sys.stdin.readline())\nv = list(map(int, sys.stdin.readline().split()))\nheapq.heapify(v)\n\nfor i in range(num-1):\n    x = heapq.heappop(v)\n    y = heapq.heappop(v)\n    heapq.heappush(v, int((x+y)/2))\n\nprint(v[0])\n", "\n\ndef main():\n    #num_ingredient = int(input())\n    ingredient = list(map(int, input().split()))\n    ingredient.sort(reverse=True)\n\n    while len(ingredient) > 1:\n        ingredient[0] = (ingredient[0] + ingredient[1]) / 2\n        ingredient.pop(1)\n        ingredient.sort(reverse=True)\n\n    print(ingredient[0])\n\nif __name__ == '__main__':\n    main()\n"]