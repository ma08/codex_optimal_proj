["\nfrom collections import deque\nn, m = map(int, input().split())\ngraph = [[] for i in range(n)]\nfor i in range(m):\n    a, b = map(int, input().split())\n    graph[a].append(b)\n    graph[b].append(a)\n\nvisited = [False] * n\ndist = [float('inf')] * n\ndist[0] = 0\n\nq = deque([0])\nwhile q:\n    v = q.popleft()\n    for u in graph[v]:\n        if not visited[u]:\n            visited[u] = True\n            dist[u] = dist[v] + 1\n            q.append(u)\n\nprint(*dist)\n", "\nn = int(input())\nf = [int(x) for x in input().split()]\n\n# Find friends who don't know who to give gifts to,\n# and friends who don't know who gives them gifts.\nno_gift_to = []\nno_gift_from = []\nfor i in range(n):\n    if f[i] == 0:\n        no_gift_to.append(i)\n    else:\n        if f[f[i] - 1] == 0:\n            no_gift_from.append(f[i] - 1)\n\n# Give gifts to friends who don't know who gives them gifts\nfor i in range(len(no_gift_to)):\n    f[no_gift_from[i]] = no_gift_to[i] + 1\n\n# Give gifts to friends who don't know who to give gifts to\nfor i in range(len(no_gift_to)):\n    f[no_gift_to[i]] = no_gift_from[i] + 1\n\nprint(\" \".join(str(x) for x in f))\n", "#!/usr/bin/env python\n# coding: utf-8\n\nn = int(input())\nfriends = list(map(int, input().split()))\n\n# Find the first friend who has a gift\ni = 0\nwhile friends[i] != 0:\n    i += 1\n\n# Assign gifts to friends who don't have one\nj = 1\nwhile j <= n:\n    if friends[j - 1] == 0:\n        friends[j - 1] = i + 1\n        i += 1\n    j += 1\n\n# Print out the friends\nprint(*friends)\n", "\nprint(\"Hello World\")\n", "\nn = int(input())\nf = [int(x) for x in input().split()]\n\n# Find friends who don't know who to give gifts to and\n# friends who don't know who gives them gifts\nno_gift_to = []\nno_gift_from = []\nfor i in range(n):\n    if f[i] == 0:\n        no_gift_to.append(i)\n    else:\n        if f[f[i] - 1] == 0:\n            no_gift_from.append(f[i] - 1)\n\n# Give gifts to friends who don't know who to give gifts to\nfor i in range(len(no_gift_to)):\n    f[no_gift_from[i]] = no_gift_to[i] + 1\n\n# Give gifts to friends who don't know who gives them gifts\nfor i in range(len(no_gift_to)):\n    f[no_gift_to[i]] = no_gift_from[i] + 1\n\nprint(\" \".join(str(x) for x in f))\n", "\nn = int(input())\nf = [int(x) for x in input().split()]\n\n# Find friends who don't know who to give gifts to and friends who don't know who gives them gifts\nno_gift_to = []\nno_gift_from = []\nfor i in range(n):\n    if f[i] == 0:\n        no_gift_to.append(i)\n    else:\n        if f[f[i] - 1] == 0:\n            no_gift_from.append(f[i] - 1)\n\n# Give gifts to friends who don't know who gives them gifts\nfor i in range(len(no_gift_to)):\n    f[no_gift_from[i]] = no_gift_to[i] + 1\n\n# Give gifts to friends who don't know who to give gifts to\nfor i in range(len(no_gift_to)):\n    f[no_gift_to[i]] = no_gift_from[i] + 1\n\nprint(\" \".join(str(x) for x in f))\n", "n = int(input())\na = list(map(int, input().split()))\n\n# Find the first person who has a gift\ni = 1\nwhile a[i - 1] != 0:\n    i = i + 1\n\n# Assign gifts to people who don't have one\nj = i + 1\nwhile j <= n + 1:\n    if a[j - 1] == 0:\n        a[j - 1] = i\n        i = i + 1\n    j = j + 1\n\n# Print out the people\nprint(*a)\n", "\nn = int(input())\nf = [int(x) for x in input().split()]\n\n# Find friends who don't know who to give gifts to,\n# and friends who don't know who gives them gifts.\nno_gift_to = []\nno_gift_from = []\nfor i in range(n):\n    if f[i] == 0:\n        no_gift_to.append(i)\n    else:\n        if f[f[i] - 1] == 0:\n            no_gift_from.append(f[i] - 1)\n\n# Give gifts to friends who don't know who gives them gifts\nfor i in range(len(no_gift_to)):\n    f[no_gift_from[i]] = no_gift_to[i] + 1\n\n# Give gifts to friends who don't know who to give gifts to\nfor i in range(len(no_gift_to)):\n    f[no_gift_to[i]] = no_gift_from[i] + 1\n\nprint(\" \".join(str(x) for x in f)) \n", "n = int(input())\nfriends = list(map(int, input().split()))\n", "\n\nn = int(input())\nf = [int(x) for x in input().split()]\n\n# Find friends who don't know who to give gifts to\nno_gift_to = []\nfor i in range(n):\n    if f[i] == 0:\n        no_gift_to.append(i)\n\n# Give gifts to friends who don't know who to give gifts to\n    for j in range(n):\n        if f[j] == 0:\n            f[j] = no_gift_to[i] + 1\n            break\n\nprint(\" \".join(str(x) for x in f))\n", "#!/usr/bin/env python3\n\nn = int(input())\nf = [int(x) for x in input().split()]\n\n# Find friends who don't know who to give gifts to and friends who don't know who gives them gifts\nno_gift_to = []\nno_gift_from = []\nfor i in range(n):\n    if f[i] == 0:\n        no_gift_to.append(i)\n    else:\n        if f[f[i] - 1] == 0:\n            no_gift_from.append(f[i] - 1)\n\n# Give gifts to friends who don't know who gives them gifts\nfor i in range(len(no_gift_to)):\n    f[no_gift_from[i]] = no_gift_to[i] + 1\n\n# Give gifts to friends who don't know who to give gifts to\nfor i in range(len(no_gift_to)):\n    f[no_gift_to[i]] = no_gift_from[i] + 1\n\nprint(\" \".join(str(x) for x in f))\n", "\n\nn = int(input())  # number of friends\nfriends = list(map(int, input().split()))  # friends and their gifts\n\n# Find the first friend who has a gift\ni = 0\nwhile friends[i] != 0:\n    i += 1\n\n# Assign gifts to friends who don't have one\nj = 1\nwhile j <= n:\n    if friends[j - 1] == 0:\n        friends[j - 1] = i + 1\n        i += 1\n    j += 1\n\n# Print out the friends\nprint(*friends)\n"]