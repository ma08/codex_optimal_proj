2022-04-22 18:22:05.779939 num operations 2
2022-04-22 18:22:05.779962 size on input set 1
2022-04-22 18:22:05.780124 using api key sunu
2022-04-22 18:22:13.080227 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef median(numbers):\n    if len(numbers) % 2 == 0:\n        med = numbers[len(numbers)//2] + numbers[len(numbers)//2 - 1]\n    else:\n        med = numbers[len(numbers)//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1]) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef median(nums, n):\n    if len(nums) % 2 == 0:\n        med = nums[n//2] + nums[n//2 - 1]\n    else:\n        med = nums[n//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1], j+1-i) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\n# This is a comment\n\ndef median(nums):\n    if len(nums) % 2 == 0:\n        med = nums[len(nums)//2] + nums[len(nums)//2 - 1]\n    else:\n        med = nums[len(nums)//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1]) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650651725,
  "object": "edit"
}
2022-04-22 18:22:13.080507 fix spelling mistakes 3 ["\n\ndef median(numbers):\n    if len(numbers) % 2 == 0:\n        med = numbers[len(numbers)//2] + numbers[len(numbers)//2 - 1]\n    else:\n        med = numbers[len(numbers)//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1]) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef median(nums, n):\n    if len(nums) % 2 == 0:\n        med = nums[n//2] + nums[n//2 - 1]\n    else:\n        med = nums[n//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1], j+1-i) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# This is a comment\n\ndef median(nums):\n    if len(nums) % 2 == 0:\n        med = nums[len(nums)//2] + nums[len(nums)//2 - 1]\n    else:\n        med = nums[len(nums)//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1]) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-22 18:22:13.080545 size on output set 3
2022-04-22 18:22:13.080552 size on input set 3
2022-04-22 18:22:13.080686 using api key jaanu
2022-04-22 18:22:18.860375 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# This is a comment\n\ndef median(nums):\n    if len(nums) % 2 == 0:\n        med = (nums[len(nums)//2] + nums[len(nums)//2 - 1]) / 2\n    else:\n        med = nums[len(nums)//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1]) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef median(nums):\n    if len(nums) % 2 == 0:\n        med = (nums[len(nums)//2] + nums[len(nums)//2 - 1])/2\n    else:\n        med = nums[len(nums)//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1]) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n# This is a comment\n# This is a comment\n\ndef median(nums):\n    if len(nums) % 2 == 0:\n        med = nums[len(nums)//2] + nums[len(nums)//2 - 1]\n    else:\n        med = nums[len(nums)//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1]) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650651733,
  "object": "edit"
}
2022-04-22 18:22:18.860611 fix syntax errors 3 ["\n\n# This is a comment\n\ndef median(nums):\n    if len(nums) % 2 == 0:\n        med = (nums[len(nums)//2] + nums[len(nums)//2 - 1]) / 2\n    else:\n        med = nums[len(nums)//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1]) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n", "\ndef median(nums):\n    if len(nums) % 2 == 0:\n        med = (nums[len(nums)//2] + nums[len(nums)//2 - 1])/2\n    else:\n        med = nums[len(nums)//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1]) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n", "\n# This is a comment\n# This is a comment\n\ndef median(nums):\n    if len(nums) % 2 == 0:\n        med = nums[len(nums)//2] + nums[len(nums)//2 - 1]\n    else:\n        med = nums[len(nums)//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1]) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-22 18:22:18.860839 using api key jaanu
2022-04-22 18:22:26.168806 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef median(nums, n):\n    return (nums[n//2] + nums[n//2 - 1])/2 if n % 2 == 0 else nums[n//2]\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1], j+1-i) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef median(nums, n):\n    if len(nums) % 2 == 0:\n        med = nums[n // 2] + nums[n // 2 - 1]\n    else:\n        med = nums[n // 2]\n\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j + 1], j + 1 - i) == m:\n                c += 1\n    print(c)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef median(nums, n):\n    if len(nums) % 2 == 0:\n        med = (nums[n//2] + nums[n//2 - 1]) / 2\n    else:\n        med = nums[n//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1], j+1-i) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650651738,
  "object": "edit"
}
2022-04-22 18:22:26.169044 fix syntax errors 3 ["\n\ndef median(nums, n):\n    return (nums[n//2] + nums[n//2 - 1])/2 if n % 2 == 0 else nums[n//2]\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1], j+1-i) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n", "\ndef median(nums, n):\n    if len(nums) % 2 == 0:\n        med = nums[n // 2] + nums[n // 2 - 1]\n    else:\n        med = nums[n // 2]\n\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j + 1], j + 1 - i) == m:\n                c += 1\n    print(c)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef median(nums, n):\n    if len(nums) % 2 == 0:\n        med = (nums[n//2] + nums[n//2 - 1]) / 2\n    else:\n        med = nums[n//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1], j+1-i) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-22 18:22:26.169316 using api key sunu
2022-04-22 18:22:33.260299 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef median(numbers):\n    if len(numbers) % 2 == 0:\n        med = (numbers[len(numbers)//2] + numbers[len(numbers)//2 - 1])/2\n    else:\n        med = numbers[len(numbers)//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1]) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef median(numbers):\n    n = len(numbers)\n    if n % 2 == 0:\n        med = numbers[n//2] + numbers[n//2 - 1]\n    else:\n        med = numbers[n//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1]) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef median(numbers):\n    if len(numbers) % 2 != 0:\n        med = numbers[len(numbers)//2]\n    else:\n        med = numbers[len(numbers)//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1]) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650651746,
  "object": "edit"
}
2022-04-22 18:22:33.260594 fix syntax errors 3 ["\n\ndef median(numbers):\n    if len(numbers) % 2 == 0:\n        med = (numbers[len(numbers)//2] + numbers[len(numbers)//2 - 1])/2\n    else:\n        med = numbers[len(numbers)//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1]) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef median(numbers):\n    n = len(numbers)\n    if n % 2 == 0:\n        med = numbers[n//2] + numbers[n//2 - 1]\n    else:\n        med = numbers[n//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1]) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef median(numbers):\n    if len(numbers) % 2 != 0:\n        med = numbers[len(numbers)//2]\n    else:\n        med = numbers[len(numbers)//2]\n    return med\n\ndef main():\n    n, m = map(int, input().split())\n    seq = list(map(int, input().split()))\n    c = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(seq[i:j+1]) == m:\n                c += 1\n    print(c)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-22 18:22:33.260633 size on output set 9
2022-04-22 18:22:33.260646 num operations 2
2022-04-22 18:22:33.260652 size on input set 1
2022-04-22 18:22:33.260815 using api key soukgp
2022-04-22 18:22:40.280084 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    mid = (left + right) // 2\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    mid = (left + right) // 2 # \u4e8c\u5206\u63a2\u7d22\n    count = 0\n    while left <= right:\n        c = 0 # \u914d\u5217p\u306e\u4e2d\u306emid\u306e\u500b\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    mid = (left + right) // 2\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650651753,
  "object": "edit"
}
2022-04-22 18:22:40.280373 fix spelling mistakes 3 ['\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    mid = (left + right) // 2\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    mid = (left + right) // 2 # 二分探索\n    count = 0\n    while left <= right:\n        c = 0 # 配列pの中のmidの個数をカウントする\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    mid = (left + right) // 2\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == "__main__":\n    main()\n']
2022-04-22 18:22:40.280519 size on output set 2
2022-04-22 18:22:40.280531 size on input set 2
2022-04-22 18:22:40.280677 using api key kouti
2022-04-22 18:22:46.293355 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    mid = (left + right) // 2\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 0, n - 1\n    mid = (left + right) // 2\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650651760,
  "object": "edit"
}
2022-04-22 18:22:46.293594 fix syntax errors 3 ['import sys\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    mid = (left + right) // 2\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 0, n - 1\n    mid = (left + right) // 2\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == "__main__":\n    main()\n']
2022-04-22 18:22:46.293783 using api key sunu
2022-04-22 18:22:54.122320 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    mid = (left + right) // 2\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    mid = (left + right) // 2\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    mid = (left + right) // 2 # \u4e8c\u5206\u63a2\u7d22\n    count = 0\n    while left <= right:\n        c = 0 # \u914d\u5217p\u306e\u4e2d\u306emid\u306e\u500b\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\n        for i in p:\n            if i == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i, j in enumerate(p):\n                if j == mid:\n                    count += (i - p.index(j) + 1)\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650651766,
  "object": "edit"
}
2022-04-22 18:22:54.122657 fix syntax errors 3 ['\n\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    mid = (left + right) // 2\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    mid = (left + right) // 2\n    count = 0\n    while left <= right:\n        c = 0\n        for i in range(n):\n            if p[i] == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i in range(n):\n                if p[i] == mid:\n                    for j in range(n):\n                        if p[j] == mid:\n                            count += (i - j + 1)\n                            break\n                    break\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\nimport math\n\ndef main():\n    input = sys.stdin.readline\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    print(solve(n, m, p))\n\ndef solve(n, m, p):\n    left, right = 1, n\n    mid = (left + right) // 2 # 二分探索\n    count = 0\n    while left <= right:\n        c = 0 # 配列pの中のmidの個数をカウントする\n        for i in p:\n            if i == mid:\n                c += 1\n        if c == m:\n            count += 1\n            for i, j in enumerate(p):\n                if j == mid:\n                    count += (i - p.index(j) + 1)\n            break\n        elif c > m:\n            right = mid - 1\n        else:\n            left = mid + 1\n        mid = (left + right) // 2\n    return count\n\nif __name__ == "__main__":\n    main()\n']
2022-04-22 18:22:54.122725 size on output set 6
