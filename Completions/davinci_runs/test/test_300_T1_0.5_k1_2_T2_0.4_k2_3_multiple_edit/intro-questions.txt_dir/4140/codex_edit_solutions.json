["\n\nS = input()\n\n# black, white counts\nb_cnt = 0\nw_cnt = 0\n\n# count black and whites\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\nprint(min(b_cnt, w_cnt))\n", "\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be replaced\n# is the number of adjacent tiles with the same color.\n# so we just need to count the number of adjacent tiles with the same color.\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n", "\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\ncount = 0\nfor i in range(len(s) - 1):\n    if s[i] == s[i + 1]:\n        count += 1\n\nprint(count)\n", "\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted is\n# the number of adjacent tiles with the same color\n# so we just need to count the number of adjacent tiles with the same color\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n", "from sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be replaced\n# is the number of adjacent tiles with the same color.\n# so we just need to count the number of adjacent tiles with the same color.\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n", "\n\nfrom sys import stdin\ns = stdin.readline().strip()\n\n# the number of tiles to be replaced\n# is the number of adjacent tiles with the same color.\n# so we just need to count the number of adjacent tiles with the same color.\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\nprint(count)\n", "\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted\n# is the number of adjacent tiles with the same color\n# so we just need to count the number of adjacent tiles with the same color.\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n", "\n#-----main-----\n\nS = input()\n\n# black, white count.\nb_cnt = 0 \nw_cnt = 0 \n\n# count black and white.\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output.\nprint(min(b_cnt, w_cnt))\n", "\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted\n# is the number of adjacent tiles with the same color\n# so we just need to count the number of adjacent tiles with the same color\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n", "from sys import stdin\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted is\n# is the number of adjacent tiles with the same color\n# so we just need to count the number of adjacent tiles with the same color\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\nprint(count)\n", "\n#-----main-----\n\nS = input()\n\n# black, white count.\nb_cnt = 0\nw_cnt = 0\n\n# count black and white.\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output.\nprint(min(b_cnt, w_cnt))\n", "\n \nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted\n# is the number of adjacent tiles with the same color\n# so we just need to count the number of adjacent tiles with the same color.\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n", "\n# -----main-----\n\nS = input()\n\n# black, white count\nb_cnt = 0\nw_cnt = 0\n\n# count black and white\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\nprint(min(b_cnt, w_cnt))\n", "\n#-----main-----\n\nS = input()\n\n# black, white counts\nb_cnt = 0\nw_cnt = 0\n\n# count black and whites\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\nprint(min(b_cnt, w_cnt))\n"]