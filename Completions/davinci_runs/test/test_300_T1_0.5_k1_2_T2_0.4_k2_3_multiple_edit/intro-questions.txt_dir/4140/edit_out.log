2022-04-22 19:07:04.465986 num operations 2
2022-04-22 19:07:04.466004 size on input set 1
2022-04-22 19:07:04.466137 using api key jaanu
2022-04-22 19:07:10.294417 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be replaced\n# is the number of adjacent tiles with the same color.\n# so we just need to count the number of adjacent tiles with the same color.\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted\n# is the number of adjacent tiles with the same color\n# so we just need to count the number of adjacent tiles with the same color.\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted is\n# is the number of adjacent tiles with the same color\n# so we just need to count the number of adjacent tiles with the same color\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1650654424,
  "object": "edit"
}
2022-04-22 19:07:10.294707 fix spelling mistakes 3 ['\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be replaced\n# is the number of adjacent tiles with the same color.\n# so we just need to count the number of adjacent tiles with the same color.\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n', '\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted\n# is the number of adjacent tiles with the same color\n# so we just need to count the number of adjacent tiles with the same color.\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n', '\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted is\n# is the number of adjacent tiles with the same color\n# so we just need to count the number of adjacent tiles with the same color\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n']
2022-04-22 19:07:10.294742 size on output set 3
2022-04-22 19:07:10.294751 size on input set 3
2022-04-22 19:07:10.294886 using api key sunu
2022-04-22 19:07:15.154036 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\ns = stdin.readline().strip()\n\n# the number of tiles to be replaced\n# is the number of adjacent tiles with the same color.\n# so we just need to count the number of adjacent tiles with the same color.\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "from sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be replaced\n# is the number of adjacent tiles with the same color.\n# so we just need to count the number of adjacent tiles with the same color.\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be replaced\n# is the number of adjacent tiles with the same color.\n# so we just need to count the number of adjacent tiles with the same color.\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1650654430,
  "object": "edit"
}
2022-04-22 19:07:15.154283 fix syntax errors 3 ['\n\nfrom sys import stdin\ns = stdin.readline().strip()\n\n# the number of tiles to be replaced\n# is the number of adjacent tiles with the same color.\n# so we just need to count the number of adjacent tiles with the same color.\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\nprint(count)\n', 'from sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be replaced\n# is the number of adjacent tiles with the same color.\n# so we just need to count the number of adjacent tiles with the same color.\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n', '\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be replaced\n# is the number of adjacent tiles with the same color.\n# so we just need to count the number of adjacent tiles with the same color.\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n']
2022-04-22 19:07:15.154453 using api key jaanu
2022-04-22 19:07:20.140331 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n \nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted\n# is the number of adjacent tiles with the same color\n# so we just need to count the number of adjacent tiles with the same color.\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted\n# is the number of adjacent tiles with the same color\n# so we just need to count the number of adjacent tiles with the same color\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted\n# is the number of adjacent tiles with the same color\n# so we just need to count the number of adjacent tiles with the same color.\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1650654435,
  "object": "edit"
}
2022-04-22 19:07:20.140581 fix syntax errors 3 ['\n \nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted\n# is the number of adjacent tiles with the same color\n# so we just need to count the number of adjacent tiles with the same color.\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n', '\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted\n# is the number of adjacent tiles with the same color\n# so we just need to count the number of adjacent tiles with the same color\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n', '\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted\n# is the number of adjacent tiles with the same color\n# so we just need to count the number of adjacent tiles with the same color.\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n']
2022-04-22 19:07:20.140804 using api key jaanu
2022-04-22 19:07:26.989492 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\ncount = 0\nfor i in range(len(s) - 1):\n    if s[i] == s[i + 1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted is\n# the number of adjacent tiles with the same color\n# so we just need to count the number of adjacent tiles with the same color\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "from sys import stdin\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted is\n# is the number of adjacent tiles with the same color\n# so we just need to count the number of adjacent tiles with the same color\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\nprint(count)\n"
    }
  ],
  "created": 1650654440,
  "object": "edit"
}
2022-04-22 19:07:26.989844 fix syntax errors 3 ['\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\ncount = 0\nfor i in range(len(s) - 1):\n    if s[i] == s[i + 1]:\n        count += 1\n\nprint(count)\n', '\n\nfrom sys import stdin\n\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted is\n# the number of adjacent tiles with the same color\n# so we just need to count the number of adjacent tiles with the same color\n\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\n\nprint(count)\n', 'from sys import stdin\ns = stdin.readline().strip()\n\n# the number of tiles to be repainted is\n# is the number of adjacent tiles with the same color\n# so we just need to count the number of adjacent tiles with the same color\ncount = 0\nprev = s[0]\nfor i in range(1, len(s)):\n    if prev != s[i]:\n        prev = s[i]\n    else:\n        count += 1\nprint(count)\n']
2022-04-22 19:07:26.989882 size on output set 9
2022-04-22 19:07:26.989895 num operations 2
2022-04-22 19:07:26.989901 size on input set 1
2022-04-22 19:07:26.990042 using api key sunu
2022-04-22 19:07:33.008204 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# -----main-----\n\nS = input()\n\n# black, white count\nb_cnt = 0\nw_cnt = 0\n\n# count black and white\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\nprint(min(b_cnt, w_cnt))\n"
    },
    {
      "index": 1,
      "text": "\n\n#-----main-----\n\nS = input()\n\n# black, white count.\nb_cnt = 0 \nw_cnt = 0 \n\n# count black and white.\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output.\nprint(min(b_cnt, w_cnt))\n"
    },
    {
      "index": 2,
      "text": "\n\n#-----main-----\n\nS = input()\n\n# black, white counts\nb_cnt = 0\nw_cnt = 0\n\n# count black and whites\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\nprint(min(b_cnt, w_cnt))\n"
    }
  ],
  "created": 1650654447,
  "object": "edit"
}
2022-04-22 19:07:33.008436 fix spelling mistakes 3 ["\n\n# -----main-----\n\nS = input()\n\n# black, white count\nb_cnt = 0\nw_cnt = 0\n\n# count black and white\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\nprint(min(b_cnt, w_cnt))\n", "\n\n#-----main-----\n\nS = input()\n\n# black, white count.\nb_cnt = 0 \nw_cnt = 0 \n\n# count black and white.\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output.\nprint(min(b_cnt, w_cnt))\n", "\n\n#-----main-----\n\nS = input()\n\n# black, white counts\nb_cnt = 0\nw_cnt = 0\n\n# count black and whites\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\nprint(min(b_cnt, w_cnt))\n"]
2022-04-22 19:07:33.008493 size on output set 3
2022-04-22 19:07:33.008501 size on input set 3
2022-04-22 19:07:33.008640 using api key sunu
2022-04-22 19:07:38.345801 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#-----main-----\n\nS = input()\n\n# black, white counts\nb_cnt = 0\nw_cnt = 0\n\n# count black and whites\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\nprint(min(b_cnt, w_cnt))\n"
    },
    {
      "index": 1,
      "text": "\n#-----main-----\n\nS = input()\n\n# black, white counts\nb_cnt = 0\nw_cnt = 0\n\n# count black and whites\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\nprint(min(b_cnt, w_cnt))\n"
    },
    {
      "index": 2,
      "text": "\n\nS = input()\n\n# black, white counts\nb_cnt = 0\nw_cnt = 0\n\n# count black and whites\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\nprint(min(b_cnt, w_cnt))\n"
    }
  ],
  "created": 1650654453,
  "object": "edit"
}
2022-04-22 19:07:38.346037 fix syntax errors 3 ["\n#-----main-----\n\nS = input()\n\n# black, white counts\nb_cnt = 0\nw_cnt = 0\n\n# count black and whites\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\nprint(min(b_cnt, w_cnt))\n", "\n#-----main-----\n\nS = input()\n\n# black, white counts\nb_cnt = 0\nw_cnt = 0\n\n# count black and whites\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\nprint(min(b_cnt, w_cnt))\n", "\n\nS = input()\n\n# black, white counts\nb_cnt = 0\nw_cnt = 0\n\n# count black and whites\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\nprint(min(b_cnt, w_cnt))\n"]
2022-04-22 19:07:38.346205 using api key kouti
2022-04-22 19:07:42.921265 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# -----main-----\n\nS = input()\n\n# black, white count\nb_cnt = 0\nw_cnt = 0\n\n# count black and white\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\nprint(min(b_cnt, w_cnt))\n"
    },
    {
      "index": 1,
      "text": "\n# -----main-----\n\nS = input()\n\n# black, white count\nb_cnt = 0\nw_cnt = 0\n\n# count black and white\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\nprint(min(b_cnt, w_cnt))\n"
    },
    {
      "index": 2,
      "text": "\n# -----main-----\n\nS = input()\n\n# black, white count\nb_cnt = 0\nw_cnt = 0\n\n# count black and white\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\nprint(min(b_cnt, w_cnt))\n"
    }
  ],
  "created": 1650654458,
  "object": "edit"
}
2022-04-22 19:07:42.921496 fix syntax errors 3 ["\n# -----main-----\n\nS = input()\n\n# black, white count\nb_cnt = 0\nw_cnt = 0\n\n# count black and white\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\nprint(min(b_cnt, w_cnt))\n", "\n# -----main-----\n\nS = input()\n\n# black, white count\nb_cnt = 0\nw_cnt = 0\n\n# count black and white\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\nprint(min(b_cnt, w_cnt))\n", "\n# -----main-----\n\nS = input()\n\n# black, white count\nb_cnt = 0\nw_cnt = 0\n\n# count black and white\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output\nprint(min(b_cnt, w_cnt))\n"]
2022-04-22 19:07:42.921654 using api key sunu
2022-04-22 19:07:48.078494 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#-----main-----\n\nS = input()\n\n# black, white count.\nb_cnt = 0\nw_cnt = 0\n\n# count black and white.\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output.\nprint(min(b_cnt, w_cnt))\n"
    },
    {
      "index": 1,
      "text": "\n#-----main-----\n\nS = input()\n\n# black, white count.\nb_cnt = 0 \nw_cnt = 0 \n\n# count black and white.\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output.\nprint(min(b_cnt, w_cnt))\n"
    },
    {
      "index": 2,
      "text": "\n#-----main-----\n\nS = input()\n\n# black, white count.\nb_cnt = 0 \nw_cnt = 0 \n\n# count black and white.\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output.\nprint(min(b_cnt, w_cnt))\n"
    }
  ],
  "created": 1650654462,
  "object": "edit"
}
2022-04-22 19:07:48.078754 fix syntax errors 3 ["\n#-----main-----\n\nS = input()\n\n# black, white count.\nb_cnt = 0\nw_cnt = 0\n\n# count black and white.\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output.\nprint(min(b_cnt, w_cnt))\n", "\n#-----main-----\n\nS = input()\n\n# black, white count.\nb_cnt = 0 \nw_cnt = 0 \n\n# count black and white.\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output.\nprint(min(b_cnt, w_cnt))\n", "\n#-----main-----\n\nS = input()\n\n# black, white count.\nb_cnt = 0 \nw_cnt = 0 \n\n# count black and white.\nfor i in S:\n    if i == '0':\n        b_cnt += 1\n    else:\n        w_cnt += 1\n\n# output.\nprint(min(b_cnt, w_cnt))\n"]
2022-04-22 19:07:48.078785 size on output set 5
