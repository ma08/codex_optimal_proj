2022-04-22 20:02:15.567490 num operations 2
2022-04-22 20:02:15.567512 size on input set 1
2022-04-22 20:02:15.567685 using api key derek
2022-04-22 20:02:31.093340 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\np = list(map(int, input().split()))\n\n# \u4e0e\u3048\u3089\u308c\u305f\u914d\u5217\u3092\u30bd\u30fc\u30c8\u3057\u3066\u3001\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u9332\u3059\u308b\n# \u305d\u306e\u8a18\u9332\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\n\n# \u914d\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\nsorted_p = sorted(p)\n\n# \u6570\u5b57\u304c\u9055\u3046\u96a3\u308a\u5408\u3046\u6570\u5b57\u306e\u4f4d\u7f6e\u3092\u8a18\u9332\u3059\u308b\u305f\u3081\u306e\u914d\u5217\ndiff_index = []\n\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u9332\u3059\u308b\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# \u8a18\u9332\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\np = list(map(int, input().split()))\n\n# \u4e0e\u3048\u3089\u308c\u305f\u914d\u5217\u3092\u30bd\u30fc\u30c8\u3057\u3066\u3001\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u9332\u3059\u308b\n# \u305d\u306e\u8a18\u9332\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\n\n# \u914d\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\nsorted_p = sorted(p)\n\n# \u6570\u5b57\u304c\u9055\u3046\u96a3\u308a\u5408\u3046\u6570\u5b57\u306e\u4f4d\u7f6e\u3092\u8a18\u9332\u3059\u308b\u305f\u3081\u306e\u914d\u5217\ndiff_index = []\n\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u9332\u3059\u308b\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# \u8a18\u9332\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\np = list(map(int, input().split()))\n\n# \u4e0e\u3048\u3089\u308c\u305f\u914d\u5217\u3092\u30bd\u30fc\u30c8\u3057\u3066\u3001\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u9332\u3059\u308b\n# \u305d\u306e\u8a18\u61b6\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\n\n# \u914d\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\nsorted_p = sorted(p)\n\n# \u6570\u5b57\u304c\u9055\u3046\u96a3\u308a\u5408\u3046\u6570\u5b57\u306e\u4f4d\u7f6e\u3092\u8a18\u9332\u3059\u308b\u305f\u3081\u306e\u914d\u5217\ndiff_index = []\n\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u9332\u3059\u308b\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# \u8a18\u61b6\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n"
    }
  ],
  "created": 1650657735,
  "object": "edit"
}
2022-04-22 20:02:31.093623 fix spelling mistakes 3 ["\n\nn = int(input())\np = list(map(int, input().split()))\n\n# 与えられた配列をソートして、\n# 順番に比較して、隣り合う数字が違うなら、その数字が何番目にあるかを記録する\n# その記録した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\n\n# 配列をソートする\nsorted_p = sorted(p)\n\n# 数字が違う隣り合う数字の位置を記録するための配列\ndiff_index = []\n\n# 順番に比較して、隣り合う数字が違うなら、その数字が何番目にあるかを記録する\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# 記録した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n", "\n\nn = int(input())\np = list(map(int, input().split()))\n\n# 与えられた配列をソートして、\n# 順番に比較して、隣り合う数字が違うなら、その数字が何番目にあるかを記録する\n# その記録した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\n\n# 配列をソートする\nsorted_p = sorted(p)\n\n# 数字が違う隣り合う数字の位置を記録するための配列\ndiff_index = []\n\n# 順番に比較して、隣り合う数字が違うなら、その数字が何番目にあるかを記録する\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# 記録した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n", "\n\nn = int(input())\np = list(map(int, input().split()))\n\n# 与えられた配列をソートして、\n# 順番に比較して、隣り合う数字が違うなら、その数字が何番目にあるかを記録する\n# その記憶した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\n\n# 配列をソートする\nsorted_p = sorted(p)\n\n# 数字が違う隣り合う数字の位置を記録するための配列\ndiff_index = []\n\n# 順番に比較して、隣り合う数字が違うなら、その数字が何番目にあるかを記録する\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# 記憶した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n"]
2022-04-22 20:02:31.093748 size on output set 2
2022-04-22 20:02:31.093758 size on input set 2
2022-04-22 20:02:31.093912 using api key soukgp
2022-04-22 20:02:35.801589 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\np = list(map(int, input().split()))\n\n# \u4e0e\u3048\u3089\u308c\u305f\u914d\u5217\u3092\u30bd\u30fc\u30c8\u3057\u3066\u3001\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u9332\u3059\u308b\n# \u305d\u306e\u8a18\u61b6\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\n\n# \u914d\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\nsorted_p = sorted(p)\n\n# \u6570\u5b57\u304c\u9055\u3046\u96a3\u308a\u5408\u3046\u6570\u5b57\u306e\u4f4d\u7f6e\u3092\u8a18\u9332\u3059\u308b\u305f\u3081\u306e\u914d\u5217\ndiff_index = []\n\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u9332\u3059\u308b\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# \u8a18\u61b6\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\np = list(map(int, input().split()))\n\n# \u4e0e\u3048\u3089\u308c\u305f\u914d\u5217\u3092\u30bd\u30fc\u30c8\u3057\u3066\u3001\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u9332\u3059\u308b\n# \u305d\u306e\u8a18\u61b6\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\n\n# \u914d\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\nsorted_p = sorted(p)\n\n# \u6570\u5b57\u304c\u9055\u3046\u96a3\u308a\u5408\u3046\u6570\u5b57\u306e\u4f4d\u7f6e\u3092\u8a18\u9332\u3059\u308b\u305f\u3081\u306e\u914d\u5217\ndiff_index = []\n\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u9332\u3059\u308b\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# \u8a18\u61b6\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\np = list(map(int, input().split()))\n\n# \u4e0e\u3048\u3089\u308c\u305f\u914d\u5217\u3092\u30bd\u30fc\u30c8\u3057\u3066\u3001\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u9332\u3059\u308b\n# \u305d\u306e\u8a18\u61b6\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\n\n# \u914d\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\nsorted_p = sorted(p)\n\n# \u6570\u5b57\u304c\u9055\u3046\u96a3\u308a\u5408\u3046\u6570\u5b57\u306e\u4f4d\u7f6e\u3092\u8a18\u9332\u3059\u308b\u305f\u3081\u306e\u914d\u5217\ndiff_index = []\n\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u9332\u3059\u308b\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# \u8a18\u61b6\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n"
    }
  ],
  "created": 1650657751,
  "object": "edit"
}
2022-04-22 20:02:35.801961 fix syntax errors 3 ["\nn = int(input())\np = list(map(int, input().split()))\n\n# 与えられた配列をソートして、\n# 順番に比較して、隣り合う数字が違うなら、その数字が何番目にあるかを記録する\n# その記憶した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\n\n# 配列をソートする\nsorted_p = sorted(p)\n\n# 数字が違う隣り合う数字の位置を記録するための配列\ndiff_index = []\n\n# 順番に比較して、隣り合う数字が違うなら、その数字が何番目にあるかを記録する\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# 記憶した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n", "\nn = int(input())\np = list(map(int, input().split()))\n\n# 与えられた配列をソートして、\n# 順番に比較して、隣り合う数字が違うなら、その数字が何番目にあるかを記録する\n# その記憶した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\n\n# 配列をソートする\nsorted_p = sorted(p)\n\n# 数字が違う隣り合う数字の位置を記録するための配列\ndiff_index = []\n\n# 順番に比較して、隣り合う数字が違うなら、その数字が何番目にあるかを記録する\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# 記憶した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n", "\nn = int(input())\np = list(map(int, input().split()))\n\n# 与えられた配列をソートして、\n# 順番に比較して、隣り合う数字が違うなら、その数字が何番目にあるかを記録する\n# その記憶した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\n\n# 配列をソートする\nsorted_p = sorted(p)\n\n# 数字が違う隣り合う数字の位置を記録するための配列\ndiff_index = []\n\n# 順番に比較して、隣り合う数字が違うなら、その数字が何番目にあるかを記録する\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# 記憶した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n"]
2022-04-22 20:02:35.802152 using api key jaanu
2022-04-22 20:02:49.603488 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\np = list(map(int, input().split()))\n\n# \u4e0e\u3048\u3089\u308c\u305f\u914d\u5217\u3092\u30bd\u30fc\u30c8\u3057\u3066\u3001\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u9332\u3057\u305f\u914d\u5217\u3092\u4f5c\u308b\n# \u305d\u306e\u8a18\u9332\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\n\n# \u914d\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\nsorted_p = sorted(p)\n\n# \u6570\u5b57\u304c\u9055\u3046\u96a3\u308a\u5408\u3046\u6570\u5b57\u306e\u4f4d\u7f6e\u3092\u8a18\u9332\u3059\u308b\u305f\u3081\u306e\u914d\u5217\ndiff_index = []\n\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u9332\u3059\u308b\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# \u8a18\u9332\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\np = list(map(int, input().split()))\n\n# \u4e0e\u3048\u3089\u308c\u305f\u914d\u5217\u3092\u30bd\u30fc\u30c8\u3057\u3066\u3001\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u9332\u3059\u308b\n# \u305d\u306e\u8a18\u9332\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\n\n# \u914d\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\nsorted_p = sorted(p)\n\n# \u6570\u5b57\u304c\u9055\u3046\u96a3\u308a\u5408\u3046\u6570\u5b57\u306e\u4f4d\u7f6e\u3092\u8a18\u9332\u3059\u308b\u305f\u3081\u306e\u914d\u5217\ndiff_index = []\n\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u9332\u3059\u308b\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# \u8a18\u9332\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\np = list(map(int, input().split()))\n\n# \u914d\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\nsorted_p = sorted(p)\n\n# \u6570\u5b57\u304c\u9055\u3046\u96a3\u308a\u5408\u3046\u6570\u5b57\u306e\u4f4d\u7f6e\u3092\u8a18\u9332\u3059\u308b\u305f\u3081\u306e\u30ea\u30b9\u30c8\ndiff_index = []\n\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u30ea\u30b9\u30c8\u306b\u8a18\u9332\u3059\u308b\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# \u30ea\u30b9\u30c8\u306b\u8a18\u9332\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n"
    }
  ],
  "created": 1650657755,
  "object": "edit"
}
2022-04-22 20:02:49.603726 fix syntax errors 3 ["\n\nn = int(input())\np = list(map(int, input().split()))\n\n# 与えられた配列をソートして、\n# 順番に比較して、隣り合う数字が違うなら、その数字が何番目にあるかを記録した配列を作る\n# その記録した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\n\n# 配列をソートする\nsorted_p = sorted(p)\n\n# 数字が違う隣り合う数字の位置を記録するための配列\ndiff_index = []\n\n# 順番に比較して、隣り合う数字が違うなら、その数字が何番目にあるかを記録する\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# 記録した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n", "\nn = int(input())\np = list(map(int, input().split()))\n\n# 与えられた配列をソートして、\n# 順番に比較して、隣り合う数字が違うなら、その数字が何番目にあるかを記録する\n# その記録した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\n\n# 配列をソートする\nsorted_p = sorted(p)\n\n# 数字が違う隣り合う数字の位置を記録するための配列\ndiff_index = []\n\n# 順番に比較して、隣り合う数字が違うなら、その数字が何番目にあるかを記録する\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# 記録した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n", "\n\nn = int(input())\np = list(map(int, input().split()))\n\n# 配列をソートする\nsorted_p = sorted(p)\n\n# 数字が違う隣り合う数字の位置を記録するためのリスト\ndiff_index = []\n\n# 順番に比較して、隣り合う数字が違うなら、その数字が何番目にあるかをリストに記録する\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# リストに記録した数字が2つ以上あるなら、NOを出力する\n# そうでなければ、YESを出力する\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')\n"]
2022-04-22 20:02:49.603849 size on output set 4
2022-04-22 20:02:49.603862 num operations 2
2022-04-22 20:02:49.603868 size on input set 1
2022-04-22 20:02:49.604023 using api key soukgp
2022-04-22 20:02:55.438378 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nN = int(input())\nsequence = list(map(int, input().split()))\n\nif(sequence == sorted(sequence)):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"
    },
    {
      "index": 1,
      "text": "\nprint(\"Hello, World!\")\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\nsequence = list(map(int, input().split()))\n\nif(sequence == sorted(sequence)):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"
    }
  ],
  "created": 1650657769,
  "object": "edit"
}
2022-04-22 20:02:55.438595 fix spelling mistakes 3 ['\nN = int(input())\nsequence = list(map(int, input().split()))\n\nif(sequence == sorted(sequence)):\n    print("YES")\nelse:\n    print("NO")\n', '\nprint("Hello, World!")\n', '\nN = int(input())\nsequence = list(map(int, input().split()))\n\nif(sequence == sorted(sequence)):\n    print("YES")\nelse:\n    print("NO")\n']
2022-04-22 20:02:55.438620 size on output set 2
2022-04-22 20:02:55.438628 size on input set 2
2022-04-22 20:02:55.438764 using api key soukgp
2022-04-22 20:03:00.211211 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nprint(\"Hello, World!\");\n"
    },
    {
      "index": 1,
      "text": "print(\"Hello, World!\")\n"
    },
    {
      "index": 2,
      "text": "print(\"Hello, World!\")\n"
    }
  ],
  "created": 1650657775,
  "object": "edit"
}
2022-04-22 20:03:00.211459 fix syntax errors 3 ['\nprint("Hello, World!");\n', 'print("Hello, World!")\n', 'print("Hello, World!")\n']
2022-04-22 20:03:00.211613 using api key sunu
2022-04-22 20:03:05.234709 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "N = int(input())\nsequence = list(map(int, input().split()))\n\nif sequence == sorted(sequence):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"
    },
    {
      "index": 1,
      "text": "N = int(input())\nsequence = list(map(int, input().split()))\n\nif sequence == sorted(sequence):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\nsequence = list(map(int, input().split()))\n\nif (sequence == sorted(sequence)):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n"
    }
  ],
  "created": 1650657780,
  "object": "edit"
}
2022-04-22 20:03:05.234929 fix syntax errors 3 ['N = int(input())\nsequence = list(map(int, input().split()))\n\nif sequence == sorted(sequence):\n    print("YES")\nelse:\n    print("NO")\n', 'N = int(input())\nsequence = list(map(int, input().split()))\n\nif sequence == sorted(sequence):\n    print("YES")\nelse:\n    print("NO")\n', '\nN = int(input())\nsequence = list(map(int, input().split()))\n\nif (sequence == sorted(sequence)):\n    print("YES")\nelse:\n    print("NO")\n']
2022-04-22 20:03:05.234956 size on output set 4
