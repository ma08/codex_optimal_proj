2022-04-09 19:08:04.707943 """
We have a sequence p = {p_1,\ p_2,\ ...,\ p_N} which is a permutation of {1,\ 2,\ ...,\ N}.
You can perform the following operation at most once: choose integers i and j (1 \leq i < j \leq N), and swap p_i and p_j. Note that you can also choose not to perform it.
Print YES if you can sort p in ascending order in this way, and NO otherwise.

-----Constraints-----
 - All values in input are integers.
 - 2 \leq N \leq 50
 - p is a permutation of {1,\ 2,\ ...,\ N}.

-----Input-----
Input is given from Standard Input in the following format:
N
p_1 p_2 ... p_N

-----Output-----
Print YES if you can sort p in ascending order in the way stated in the problem statement, and NO otherwise.

-----Sample Input-----
5
5 2 3 4 1

-----Sample Output-----
YES

You can sort p in ascending order by swapping p_1 and p_5.
"""
2022-04-09 19:08:04.707969 --------------------------
2022-04-09 19:08:26.178075 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn = int(input())\np = list(map(int, input().split()))\n\n# \u4e0e\u3048\u3089\u308c\u305f\u914d\u5217\u3092\u30bd\u30fc\u30c8\u3057\u3066\u3001\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u61b6\u3059\u308b\n# \u305d\u306e\u8a18\u61b6\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\n\n# \u914d\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\nsorted_p = sorted(p)\n\n# \u6570\u5b57\u304c\u9055\u3046\u96a3\u308a\u5408\u3046\u6570\u5b57\u306e\u4f4d\u7f6e\u3092\u8a18\u61b6\u3059\u308b\u305f\u3081\u306e\u914d\u5217\ndiff_index = []\n\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u61b6\u3059\u308b\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# \u8a18\u61b6\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nN = int(input())\nsequence = list(map(int, input().split()))\n\nif(sequence == sorted(sequence)):\n    print(\"YES\")\nelse:\n    print(\"NO\")"
    }
  ],
  "created": 1649545684,
  "id": "cmpl-4vETUrfZeKLJK6fyrK6Ps16OMjYqo",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 19:08:26.178256 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn = int(input())\np = list(map(int, input().split()))\n\n# \u4e0e\u3048\u3089\u308c\u305f\u914d\u5217\u3092\u30bd\u30fc\u30c8\u3057\u3066\u3001\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u61b6\u3059\u308b\n# \u305d\u306e\u8a18\u61b6\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\n\n# \u914d\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b\nsorted_p = sorted(p)\n\n# \u6570\u5b57\u304c\u9055\u3046\u96a3\u308a\u5408\u3046\u6570\u5b57\u306e\u4f4d\u7f6e\u3092\u8a18\u61b6\u3059\u308b\u305f\u3081\u306e\u914d\u5217\ndiff_index = []\n\n# \u9806\u756a\u306b\u6bd4\u8f03\u3057\u3066\u3001\u96a3\u308a\u5408\u3046\u6570\u5b57\u304c\u9055\u3046\u306a\u3089\u3001\u305d\u306e\u6570\u5b57\u304c\u4f55\u756a\u76ee\u306b\u3042\u308b\u304b\u3092\u8a18\u61b6\u3059\u308b\nfor i in range(n):\n    if p[i] != sorted_p[i]:\n        diff_index.append(i)\n\n# \u8a18\u61b6\u3057\u305f\u6570\u5b57\u304c2\u3064\u4ee5\u4e0a\u3042\u308b\u306a\u3089\u3001NO\u3092\u51fa\u529b\u3059\u308b\n# \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001YES\u3092\u51fa\u529b\u3059\u308b\nif len(diff_index) > 2:\n    print('NO')\nelse:\n    print('YES')"
}
2022-04-09 19:08:26.178304 REASON stop
2022-04-09 19:08:26.179453 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nN = int(input())\nsequence = list(map(int, input().split()))\n\nif(sequence == sorted(sequence)):\n    print(\"YES\")\nelse:\n    print(\"NO\")"
}
2022-04-09 19:08:26.179534 REASON stop
