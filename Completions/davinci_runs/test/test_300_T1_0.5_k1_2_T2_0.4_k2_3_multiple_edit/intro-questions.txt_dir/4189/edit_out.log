2022-04-22 19:50:13.708156 num operations 2
2022-04-22 19:50:13.708176 size on input set 1
2022-04-22 19:50:13.708325 using api key soukgp
2022-04-22 19:50:21.159049 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"soft\"] if cheeses[\"soft\"] < cheeses[\"hard\"] else cheeses[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"soft\"] if cheeses[\"soft\"] <= cheeses[\"hard\"] else cheeses[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n = int(input())\n    cheese = {}\n    for i in range(n):\n        cheese_type = input().split()\n        if cheese_type[1] not in cheese:\n            cheese[cheese_type[1]] = 0\n        cheese[cheese_type[1]] += 1\n    print(cheese[\"soft\"] if cheese[\"soft\"] < cheese[\"hard\"] else cheese[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650657013,
  "object": "edit"
}
2022-04-22 19:50:21.159333 fix spelling mistakes 3 ['\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses["soft"] if cheeses["soft"] < cheeses["hard"] else cheeses["hard"])\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses["soft"] if cheeses["soft"] <= cheeses["hard"] else cheeses["hard"])\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    cheese = {}\n    for i in range(n):\n        cheese_type = input().split()\n        if cheese_type[1] not in cheese:\n            cheese[cheese_type[1]] = 0\n        cheese[cheese_type[1]] += 1\n    print(cheese["soft"] if cheese["soft"] < cheese["hard"] else cheese["hard"])\n\nif __name__ == "__main__":\n    main()\n']
2022-04-22 19:50:21.159369 size on output set 3
2022-04-22 19:50:21.159376 size on input set 3
2022-04-22 19:50:21.159531 using api key kouti
2022-04-22 19:50:26.604610 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"soft\"] if \"soft\" in cheeses and cheeses[\"soft\"] <= cheeses[\"hard\"] else cheeses[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"soft\"] if cheeses[\"soft\"] <= cheeses[\"hard\"] else cheeses[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"soft\"] if cheeses.get(\"soft\", 0) <= cheeses.get(\"hard\", 0) else cheeses.get(\"hard\", 0))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650657021,
  "object": "edit"
}
2022-04-22 19:50:26.604891 fix syntax errors 3 ['\n\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses["soft"] if "soft" in cheeses and cheeses["soft"] <= cheeses["hard"] else cheeses["hard"])\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses["soft"] if cheeses["soft"] <= cheeses["hard"] else cheeses["hard"])\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses["soft"] if cheeses.get("soft", 0) <= cheeses.get("hard", 0) else cheeses.get("hard", 0))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-22 19:50:26.605065 using api key soukgp
2022-04-22 19:50:32.309192 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"S\"] if cheeses[\"S\"] < cheeses[\"H\"] else cheeses[\"H\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"soft\"] if \"soft\" in cheeses and cheeses[\"soft\"] < cheeses[\"hard\"] else cheeses[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"soft\"] if cheeses[\"soft\"] <= cheeses[\"hard\"] else cheeses[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650657026,
  "object": "edit"
}
2022-04-22 19:50:32.309470 fix syntax errors 3 ['\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses["S"] if cheeses["S"] < cheeses["H"] else cheeses["H"])\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses["soft"] if "soft" in cheeses and cheeses["soft"] < cheeses["hard"] else cheeses["hard"])\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses["soft"] if cheeses["soft"] <= cheeses["hard"] else cheeses["hard"])\n\nif __name__ == "__main__":\n    main()\n']
2022-04-22 19:50:32.309658 using api key soukgp
2022-04-22 19:50:37.748320 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    cheese = {}\n    for i in range(n):\n        cheese_type = input().split()\n        if cheese_type[1] not in cheese:\n            cheese[cheese_type[1]] = 0\n        cheese[cheese_type[1]] += 1\n    print(cheese[\"soft\"] if cheese[\"soft\"] < cheese[\"hard\"] else cheese[\"hard\"]) \n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    cheese = {}\n    for i in range(n):\n        cheese_type = input().split()\n        if cheese_type[1] not in cheese:\n            cheese[cheese_type[1]] = 0\n        cheese[cheese_type[1]] += 1\n    print(cheese[\"soft\"] if \"soft\" in cheese and cheese[\"soft\"] < cheese[\"hard\"] else cheese[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n = int(input())\n    cheese = {}\n    for i in range(n):\n        cheese_type = input().split()\n        if cheese_type[1] not in cheese:\n            cheese[cheese_type[1]] = 0\n        cheese[cheese_type[1]] += 1\n    print(cheese[\"soft\"] if cheese[\"soft\"] < cheese[\"hard\"] else cheese[\"hard\"]) \n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650657032,
  "object": "edit"
}
2022-04-22 19:50:37.748773 fix syntax errors 3 ['\ndef main():\n    n = int(input())\n    cheese = {}\n    for i in range(n):\n        cheese_type = input().split()\n        if cheese_type[1] not in cheese:\n            cheese[cheese_type[1]] = 0\n        cheese[cheese_type[1]] += 1\n    print(cheese["soft"] if cheese["soft"] < cheese["hard"] else cheese["hard"]) \n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    cheese = {}\n    for i in range(n):\n        cheese_type = input().split()\n        if cheese_type[1] not in cheese:\n            cheese[cheese_type[1]] = 0\n        cheese[cheese_type[1]] += 1\n    print(cheese["soft"] if "soft" in cheese and cheese["soft"] < cheese["hard"] else cheese["hard"])\n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    n = int(input())\n    cheese = {}\n    for i in range(n):\n        cheese_type = input().split()\n        if cheese_type[1] not in cheese:\n            cheese[cheese_type[1]] = 0\n        cheese[cheese_type[1]] += 1\n    print(cheese["soft"] if cheese["soft"] < cheese["hard"] else cheese["hard"]) \n\nif __name__ == "__main__":\n    main()\n']
2022-04-22 19:50:37.748814 size on output set 7
2022-04-22 19:50:37.748828 num operations 2
2022-04-22 19:50:37.748834 size on input set 1
2022-04-22 19:50:37.749005 using api key kouti
2022-04-22 19:50:47.509753 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# from collections import Counter\n# n = int(input())\n# c = Counter([input().split()[1] for _ in range(n)])\n# print(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, text = input().split()\n#     if text == 'soft':\n#         soft += 1\n#     elif text == 'hard':\n#         hard += 1\n# print(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, text = input().split()\n    if text == 'soft':\n        soft += 1\n    elif text == 'hard':\n        hard += 1\nprint(soft*hard)\n"
    },
    {
      "index": 1,
      "text": "\n\n# from collections import Counter\n# n = int(input())\n# c = Counter([input().split()[1] for _ in range(n)])\n# print(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, kind = input().split()\n#     if kind == 'soft':\n#         soft += 1\n#     elif kind == 'hard':\n#         hard += 1\n# print(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, kind = input().split()\n    if kind == 'soft':\n        soft += 1\n    elif kind == 'hard':\n        hard += 1\nprint(soft*hard)\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n"
    }
  ],
  "created": 1650657037,
  "object": "edit"
}
2022-04-22 19:50:47.509994 fix spelling mistakes 3 ["\n\n# from collections import Counter\n# n = int(input())\n# c = Counter([input().split()[1] for _ in range(n)])\n# print(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, text = input().split()\n#     if text == 'soft':\n#         soft += 1\n#     elif text == 'hard':\n#         hard += 1\n# print(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, text = input().split()\n    if text == 'soft':\n        soft += 1\n    elif text == 'hard':\n        hard += 1\nprint(soft*hard)\n", "\n\n# from collections import Counter\n# n = int(input())\n# c = Counter([input().split()[1] for _ in range(n)])\n# print(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, kind = input().split()\n#     if kind == 'soft':\n#         soft += 1\n#     elif kind == 'hard':\n#         hard += 1\n# print(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, kind = input().split()\n    if kind == 'soft':\n        soft += 1\n    elif kind == 'hard':\n        hard += 1\nprint(soft*hard)\n", "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n# print(soft*hard)\n"]
2022-04-22 19:50:47.510034 size on output set 3
2022-04-22 19:50:47.510042 size on input set 3
2022-04-22 19:50:47.510181 using api key kouti
2022-04-22 19:50:56.645382 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport collections\n# from collections import Counter\n# n = int(input())\n# c = Counter([input().split()[1] for _ in range(n)])\n# print(c['soft']*c['hard'])\n\nn = int(input())\nc = collections.Counter()\nfor _ in range(n):\n    name, kind = input().split()\n    c[kind] += 1\nprint(c['soft']*c['hard'])\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, kind = input().split()\n#     if kind == 'soft':\n#         soft += 1\n#     elif kind == 'hard':\n#         hard += 1\n# print(soft*hard)\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, kind = input().split()\n#     if kind == 'soft':\n#         soft += 1\n#     elif kind == 'hard':\n#         hard += 1\n# print(soft*hard)\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, kind = input().split()\n    if kind == 'soft':\n        soft += 1\n    elif kind == 'hard':\n        hard += 1\nprint(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, kind = input().split()\n    if kind == 'soft':\n        soft += 1\n    elif kind == 'hard':\n        hard += 1\nprint(soft*hard)\n"
    }
  ],
  "created": 1650657047,
  "object": "edit"
}
2022-04-22 19:50:56.645640 fix syntax errors 3 ["\nimport collections\n# from collections import Counter\n# n = int(input())\n# c = Counter([input().split()[1] for _ in range(n)])\n# print(c['soft']*c['hard'])\n\nn = int(input())\nc = collections.Counter()\nfor _ in range(n):\n    name, kind = input().split()\n    c[kind] += 1\nprint(c['soft']*c['hard'])\n", "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, kind = input().split()\n#     if kind == 'soft':\n#         soft += 1\n#     elif kind == 'hard':\n#         hard += 1\n# print(soft*hard)\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, kind = input().split()\n#     if kind == 'soft':\n#         soft += 1\n#     elif kind == 'hard':\n#         hard += 1\n# print(soft*hard)\n", "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, kind = input().split()\n    if kind == 'soft':\n        soft += 1\n    elif kind == 'hard':\n        hard += 1\nprint(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, kind = input().split()\n    if kind == 'soft':\n        soft += 1\n    elif kind == 'hard':\n        hard += 1\nprint(soft*hard)\n"]
2022-04-22 19:50:56.645937 using api key sunu
2022-04-22 19:51:06.093126 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# from collections import Counter\n# n = int(input())\n# c = Counter([input().split()[1] for _ in range(n)])\n# print(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, text = input().split()\n#     if text == 'soft':\n#         soft += 1\n#     elif text == 'hard':\n#         hard += 1\n# print(soft * hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, text = input().split()\n    if text == 'soft':\n        soft += 1\n    elif text == 'hard':\n        hard += 1\nprint(soft * hard)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\n"
    },
    {
      "index": 2,
      "text": "\n\n# from collections import Counter\n# n = int(input())\n# c = Counter([input().split()[1] for _ in range(n)])\n# print(c['soft']*c['hard'])\n\nn = int(input())\nsoft = hard = 0\nfor _ in range(n):\n    name, text = input().split()\n    if text == 'soft':\n        soft += 1\n    elif text == 'hard':\n        hard += 1\nprint(soft*hard)\n"
    }
  ],
  "created": 1650657056,
  "object": "edit"
}
2022-04-22 19:51:06.093376 fix syntax errors 3 ["\n\n# from collections import Counter\n# n = int(input())\n# c = Counter([input().split()[1] for _ in range(n)])\n# print(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, text = input().split()\n#     if text == 'soft':\n#         soft += 1\n#     elif text == 'hard':\n#         hard += 1\n# print(soft * hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, text = input().split()\n    if text == 'soft':\n        soft += 1\n    elif text == 'hard':\n        hard += 1\nprint(soft * hard)\n", "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\n", "\n\n# from collections import Counter\n# n = int(input())\n# c = Counter([input().split()[1] for _ in range(n)])\n# print(c['soft']*c['hard'])\n\nn = int(input())\nsoft = hard = 0\nfor _ in range(n):\n    name, text = input().split()\n    if text == 'soft':\n        soft += 1\n    elif text == 'hard':\n        hard += 1\nprint(soft*hard)\n"]
2022-04-22 19:51:06.093592 using api key sunu
2022-04-22 19:51:13.744372 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     if type == 'hard':\n#         hard += 1\n# print(soft*hard)\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     if type == 'hard':\n#         hard += 1\n# print(soft*hard)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n"
    }
  ],
  "created": 1650657066,
  "object": "edit"
}
2022-04-22 19:51:13.744594 fix syntax errors 3 ["\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     if type == 'hard':\n#         hard += 1\n# print(soft*hard)\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     if type == 'hard':\n#         hard += 1\n# print(soft*hard)\n", "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n", "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n"]
2022-04-22 19:51:13.744627 size on output set 9
