["\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"S\"] if cheeses[\"S\"] < cheeses[\"H\"] else cheeses[\"H\"])\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# from collections import Counter\n# n = int(input())\n# c = Counter([input().split()[1] for _ in range(n)])\n# print(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, text = input().split()\n#     if text == 'soft':\n#         soft += 1\n#     elif text == 'hard':\n#         hard += 1\n# print(soft * hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, text = input().split()\n    if text == 'soft':\n        soft += 1\n    elif text == 'hard':\n        hard += 1\nprint(soft * hard)\n", "\ndef main():\n    n = int(input())\n    cheese = {}\n    for i in range(n):\n        cheese_type = input().split()\n        if cheese_type[1] not in cheese:\n            cheese[cheese_type[1]] = 0\n        cheese[cheese_type[1]] += 1\n    print(cheese[\"soft\"] if \"soft\" in cheese and cheese[\"soft\"] < cheese[\"hard\"] else cheese[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"soft\"] if \"soft\" in cheeses and cheeses[\"soft\"] < cheeses[\"hard\"] else cheeses[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"soft\"] if cheeses[\"soft\"] <= cheeses[\"hard\"] else cheeses[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n", "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\n", "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     if type == 'hard':\n#         hard += 1\n# print(soft*hard)\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     if type == 'hard':\n#         hard += 1\n# print(soft*hard)\n", "\nimport collections\n# from collections import Counter\n# n = int(input())\n# c = Counter([input().split()[1] for _ in range(n)])\n# print(c['soft']*c['hard'])\n\nn = int(input())\nc = collections.Counter()\nfor _ in range(n):\n    name, kind = input().split()\n    c[kind] += 1\nprint(c['soft']*c['hard'])\n", "\n\n# from collections import Counter\n# n = int(input())\n# c = Counter([input().split()[1] for _ in range(n)])\n# print(c['soft']*c['hard'])\n\nn = int(input())\nsoft = hard = 0\nfor _ in range(n):\n    name, text = input().split()\n    if text == 'soft':\n        soft += 1\n    elif text == 'hard':\n        hard += 1\nprint(soft*hard)\n", "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, kind = input().split()\n#     if kind == 'soft':\n#         soft += 1\n#     elif kind == 'hard':\n#         hard += 1\n# print(soft*hard)\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, kind = input().split()\n#     if kind == 'soft':\n#         soft += 1\n#     elif kind == 'hard':\n#         hard += 1\n# print(soft*hard)\n", "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\n# n = int(input())\n# soft, hard = 0, 0\n# for _ in range(n):\n#     name, type = input().split()\n#     if type == 'soft':\n#         soft += 1\n#     elif type == 'hard':\n#         hard += 1\n", "\n\nfrom collections import Counter\nn = int(input())\nc = Counter([input().split()[1] for _ in range(n)])\nprint(c['soft']*c['hard'])\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, kind = input().split()\n    if kind == 'soft':\n        soft += 1\n    elif kind == 'hard':\n        hard += 1\nprint(soft*hard)\n\nn = int(input())\nsoft, hard = 0, 0\nfor _ in range(n):\n    name, kind = input().split()\n    if kind == 'soft':\n        soft += 1\n    elif kind == 'hard':\n        hard += 1\nprint(soft*hard)\n", "\ndef main():\n    n = int(input())\n    cheese = {}\n    for i in range(n):\n        cheese_type = input().split()\n        if cheese_type[1] not in cheese:\n            cheese[cheese_type[1]] = 0\n        cheese[cheese_type[1]] += 1\n    print(cheese[\"soft\"] if cheese[\"soft\"] < cheese[\"hard\"] else cheese[\"hard\"]) \n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"soft\"] if cheeses.get(\"soft\", 0) <= cheeses.get(\"hard\", 0) else cheeses.get(\"hard\", 0))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    cheeses = {}\n    for i in range(n):\n        cheese = input().split()\n        if cheese[1] not in cheeses:\n            cheeses[cheese[1]] = 0\n        cheeses[cheese[1]] += 1\n    print(cheeses[\"soft\"] if \"soft\" in cheeses and cheeses[\"soft\"] <= cheeses[\"hard\"] else cheeses[\"hard\"])\n\nif __name__ == \"__main__\":\n    main()\n"]