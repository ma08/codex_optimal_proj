["\n \nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1, end=' ')\n", "\n\nn, k = map(int, input().split())\n\ndef dfs(v, p, d):\n    global k\n    s = 0\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v, d)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1, 0)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1, end = ' ')\n", "#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [[0, 0] for i in range(n - 1)]\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))[:2]\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n", "\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1, end=' ')\n", "#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    # TODO: Implement solution\n    print()\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 0\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\n\nfor i in range(n - 1):\n    print(i % k + 1, end = ' ')\n", "\n# TODO: Implement solution\n\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = []\n    for i in range(n - 1):\n        edges.append(list(map(int, sys.stdin.readline().split())))\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 0\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v) + 1\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1, 0)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1, end = ' ')\n", "\n\nn, k = map(int, input().split())\n\ndef dfs(v, p):\n    global k\n    s = 1\n    for u in g[v]:\n        if u == p:\n            continue\n        s += dfs(u, v)\n    if s > k:\n        k -= 1\n        return 0\n    return s\n\ng = [[] for i in range(n)]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    g[a].append(b)\n    g[b].append(a)\n\ndfs(0, -1)\nprint(k)\nfor i in range(n - 1):\n    print(i % k + 1, end = ' ')\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n#------------------------------------------------------------------------------#\n#  file: file.py                                                               #\n#  brief:                                                                      #\n#                                                                              #\n#  author: Oleg Burdaev                                                        #\n#  date:   26 Mar 2020                                                         #\n#------------------------------------------------------------------------------#\n\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1)\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))[:2]\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution.\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n", "\n# TODO: Implement solution\n\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split()) # n, k = input().split()\n\n    edges = [0] * (n - 1)\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split())) # edges[i] = input().split()\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n", "# ------------------------------------------------------------------------------\n\nimport sys\n\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1)\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution\n    pass\n\n# ------------------------------------------------------------------------------\n\nif __name__ == \"__main__\":\n    main()\n", "#\n# n, k = map(int, input().split())\n#\n# def dfs(v, p):\n#     global k\n#     s = 1\n#     for u in g[v]:\n#         if u == p:\n#             continue\n#         s += dfs(u, v)\n#     if s > k:\n#         k -= 1\n#         return 0\n#     return s\n#\n# g = [[] for i in range(n)]\n# for i in range(n - 1):\n#     a, b = map(int, input().split())\n#     a -= 1\n#     b -= 1\n#     g[a].append(b)\n#     g[b].append(a)\n#\n# dfs(0, -1)\n# print(k)\n# for i in range(n - 1):\n#     print(i % k + 1, end = ' ')\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n#------------------------------------------------------------------------------#\n#  file: file.py                                                               #\n#  brief:                                                                      #\n#                                                                              #\n#  author: Oleg Burdaev                                                        #\n#  date:   26 Mar 2020                                                         #\n#------------------------------------------------------------------------------#\n\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [0] * (n - 1) # TODO: This is not a good way to do it.\n    for i in range(n - 1): # TODO: This is not a good way to do it.\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution.\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n", "\n# TODO: Implement solution\n\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = [[] for _ in range(n - 1)]\n    for i in range(n - 1):\n        edges[i] = list(map(int, sys.stdin.readline().split()))\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n#------------------------------------------------------------------------------#\n#  file: file.py                                                               #\n#  brief:                                                                      #\n#                                                                              #\n#  author: Oleg Burdaev                                                        #\n#  date:   26 Mar 2020                                                         #\n#------------------------------------------------------------------------------#\n\n#------------------------------------------------------------------------------#\n\nimport sys\n\ndef main():\n    n, k = map(int, sys.stdin.readline().split())\n\n    edges = []\n    for _ in range(n - 1):\n        edges.append(list(map(int, sys.stdin.readline().split())))\n\n    print(solve(n, k, edges))\n\ndef solve(n, k, edges):\n    # TODO: Implement solution.\n    pass\n\n#------------------------------------------------------------------------------#\n\nif __name__ == \"__main__\":\n    main()\n"]