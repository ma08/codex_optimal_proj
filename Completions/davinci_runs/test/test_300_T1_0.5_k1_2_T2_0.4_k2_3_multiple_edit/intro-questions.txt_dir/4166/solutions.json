["N, M = map(int, input().split())\nSC = [list(map(int, input().split())) for _ in range(M)]\nfor n in range(10**N):\n    n = str(n)\n    if len(n) != N:\n        continue\n    if all([n[SC[i][0]-1] == str(SC[i][1]) for i in range(M)]):\n        print(n)\n        return\n\nprint(-1)", "'''\nCreated on 2020/09/10\n\n@author: harurun\n'''\ndef main():\n  import sys\n  pin=sys.stdin.readline\n  pout=sys.stdout.write\n  perr=sys.stderr.write\n  \n  N,M=map(int,pin().split())\n  if N==3:\n    ans=[1,0,0]\n    for _ in [0]*M:\n      s,c=map(int,pin().split())\n      if s==1 and c==0:\n        print(-1)\n        return \n      if s!=1 and ans[s-1]!=0 and ans[s-1]!=c:\n        print(-1)\n        return \n      ans[s-1]=c\n    a=\"\"\n    for i in ans:\n      a+=str(i) \n    print(a)\n    return \n  elif N==2:\n    ans=[1,0]\n    for _ in [0]*M:\n      s,c=map(int,pin().split())\n      if s==1 and c==0:\n        print(-1)\n        return \n      if s!=1 and ans[s-1]!=0 and ans[s-1]!=c:\n        print(-1)\n        return \n      ans[s-1]=c\n    a=\"\"\n    for i in ans:\n      a+=str(i)\n    print(a)\n    return\n  else:\n    if M==0:\n      print(0)\n      return\n    s,c=map(int,pin().split())\n    ans=c \n    \n    for j in range(M-1):\n      s,c=map(int,pin().split())\n      if c!=ans:\n        print(-1)\n        return \n    print(ans)\n    return \n  \nmain()", "n,m = map(int, input().split())\nl = [[] for _ in range(n)]\nans = \"\"\nfor i in range(m):\n  s,c = map(int, input().split())\n  l[s-1].append(c)\nif len(l) > 1 and 0 in l[0]:\n  print(-1)\nelif n == 1 and m == 0:\n  print(0)\nelse:\n  for j in l:\n    if len(set(j)) > 1:\n      print(-1)\n      break\n    elif len(j) == 0:\n      if ans == \"\":\n        ans += \"1\"\n      else:\n        ans += \"0\"\n    else:\n      ans += str(j[0])\n  else:\n    print(ans)", "def main():\n    N, M = list(map(int, input().split()))\n\n    digits = [-1] * N\n    for _ in range(M):\n        s, c = list(map(int, input().split()))\n        s -= 1\n        if ~digits[s] and digits[s] != c:\n            print((-1))\n            return\n        digits[s] = c\n\n    if N == 1:\n        print((max(0, digits[0])))\n        return\n\n    if digits[0] == 0:\n        print((-1))\n        return\n\n    if digits[0] == -1:\n        digits[0] = 1\n\n    ans = ''.join(map(str, (d if ~d else 0 for d in digits)))\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N,M = list(map(int,input().split()))\none = []\ntwo = []\nthree = []\nfor i in range(M):\n  s,c = list(map(int,input().split()))\n  if s == 1:\n    one.append(c)\n  elif s == 2:\n    two.append(c)\n  elif s == 3:\n    three.append(c)\n\none = list(set(one))\ntwo = list(set(two))\nthree = list(set(three))\n\nif len(one)>=2 or len(two)>=2 or len(three)>=2:\n  print((-1))\nelif N==3:\n  if len(one)==0:\n    one.append(1)\n  else:\n    one.append(0)\n  if one[0]==0:\n    print((-1))\n  else:\n    two.append(0)\n    three.append(0)\n    print((one[0]*100+two[0]*10+three[0]))  \nelif N==2:\n  if len(one)==0:\n    one.append(1)\n  else:\n    one.append(0)\n  if one[0]==0:\n    print((-1))\n  else:\n    two.append(0)\n    print((one[0]*10+two[0]))\nelif N==1:\n  if len(one)!=0:\n    print((one[0]))\n  else:\n    print((0))\n", "from sys import stdin\nnii=lambda:map(int,stdin.readline().split())\nlnii=lambda:list(map(int,stdin.readline().split()))\n\nn,m=nii()\nl=[lnii() for i in range(m)]\n\nfor i in range(1000):\n  num=str(i)\n  judge=True\n  for j in range(m):\n    s,c=l[j]\n    s-=1\n    c=str(c)\n    if s>=len(num) or num[s]!=c:\n      judge=False\n\n  if judge and len(num)==n:\n    print(i)\n    return\n\nprint(-1)", "\ndef main():\n    n, m = map(int, input().split(\" \"))\n    s = [0] * m\n    c = [0] * m\n    for i in range(m):\n        s[i], c[i] = map(int, input().split(\" \"))\n    ans = [-1] * n\n    for i in range(m):\n        if ans[s[i]-1] != -1 and ans[s[i]-1] != c[i]:\n            print(-1)\n            return\n        ans[s[i]-1] = c[i]\n    if ans[0] == 0:\n        if n == 1:\n            print(0)\n            return\n        print(-1)\n        return\n    for i in range(n):\n        if ans[i] == -1:\n            if i == 0:\n                if n == 1:\n                    print(0)\n                    return\n                print(1, end=\"\")\n            else:\n                print(0, end = \"\")\n        else:\n            print(ans[i], end =\"\")\n    print()\n    \n\ndef __starting_point():\n    main()\n__starting_point()", "N, M = map(int, input().split(' '))\nif M == 0:\n    if N == 1:\n        print(0)\n    else:\n        print('1', '0' * (N - 1), sep='')\nelse:\n    rst = [''] * N\n    is_end = False\n    for i in range(M):\n        s, c = input().split(' ')\n        idx = int(s) - 1\n        if idx == 0 and N != 1 and c == '0':\n            print(-1)\n            is_end = True\n            break\n        if rst[idx] == '':\n            rst[idx] = c\n        elif rst[idx] != c:\n            print(-1)\n            is_end = True\n            break\n    if not is_end:\n        for i, j in enumerate(rst):\n            if i == 0 and j == '':\n                print('1', end='')\n            elif j == '':\n                print('0', end='')\n            else:\n                print(j, end='')", "n, m = list(map(int, input().split()))\ns_li = []\nc_li = []\nfor _ in range(m):\n    s_in, c_in = list(map(int, input().split()))\n    s_li.append(s_in - 1)\n    c_li.append(c_in)\n\nif n == 1:\n    ans = [\"0\"]\nelse:\n    ans = list(str(10**(n-1)))\n\ncheck = [0] * n\n\nfor s, c in zip(s_li, c_li):\n    if check[s] == 0:\n        ans[s] = str(c)\n        check[s] = 1\n    else:\n        if ans[s] == str(c):\n            continue\n        print((-1))\n        return\n\nif n > 1 and ans[0] == \"0\":\n    print((-1))\nelse:\n    print((\"\".join(ans)))\n", "N, M = [int(n) for n in input().split()]\ndp = [-1] * N\nans = 0\nfor _ in range(M):\n    s, c = [int(n) for n in input().split()]\n    if dp[s-1] == -1:\n        dp[s-1] = c\n    elif dp[s-1] != c:\n        ans = -1\n\nif ans == -1 or (dp[0]==0 and N!=1): \n    print(-1)\nelse:\n    ans = ''.join([str(n) if n != -1 else '0' for n in dp])\n    if ans[0] == '0' and N>1:\n        print('1'+ ans[1:])\n    else:\n        print(ans)", "N,M=map(int,input().split())\n\narr = [-1] * N\nS = []\nC = []\nfor _ in range(M):\n  s,c = map(int,input().split())\n  S.append(s-1)\n  C.append(c)\n\ndef replace(arr, f, t):\n  for i in range(len(arr)):\n    if arr[i] == f:\n      arr[i] = t\n  return arr\n    \nok = True\nfor s, c in zip(S,C):\n  if not (arr[s] == -1 or arr[s] == c):\n    ok = False\n    break\n  arr[s] = c\nif 1 < N and arr[0] == 0:\n  ok = False\nif ok:\n  if 1 < N and arr[0] == -1:\n    arr[0] = 1\n  arr = replace(arr, -1, 0) \n  print(*arr, sep=\"\")\nelse:\n  print(-1)", "n, m = map(int, input().split())\nSC = [list(map(int, input().split())) for _ in range(m)]\n\nfor x in range(1000):\n    keta = 1\n    nx = x//10\n    d = [x%10]\n\n    while nx:\n        keta += 1\n        d.append(nx%10)\n        nx //= 10\n\n    if keta != n: continue\n\n    flg = True\n    d.reverse()\n    for s, c in SC:\n        if d[s-1] != c:\n            flg = False\n    if flg:\n        print(x)\n        return\n\nprint(-1)", "N, M = list(map(int, input().split()))\nst = 1 * 10 ** (N-1)\nen = st * 10\nSC = []\nfor i in range(M):\n    sc = list(map(int,input().split()))\n    SC.append(sc)\nif N == 1:\n    for i in range(0, 10):\n        t = str(i)\n        judge = True\n        for j in range(M):\n            if t[SC[j][0] - 1] != str(SC[j][1]):\n                judge = False\n        if judge:\n            print(i)\n            return\n    print(\"-1\")\n    return\n    \nfor i in range(st,en):\n    t = str(i)\n    judge = True\n    for j in range(M):\n        if t[SC[j][0]-1] != str(SC[j][1]):\n            judge = False\n    if judge:\n        print(i)\n        return\nprint(\"-1\")\n", "n, m = map(int, input().split())\n\nnum = [''] * n\n\nflag = 0\nfor i in range(m):\n    s, c = map(int, input().split())\n    if num[s - 1] == '' or num[s - 1] == c:\n        num[s - 1] = c\n    else:\n        print(-1)\n        break\nelse:\n    if num[0] == '':\n        if n > 1:\n            num[0] = 1\n        else:\n            num[0] = 0\n    for i in range(1, n):\n        if num[i] == '':\n            num[i] = 0\n    if n > 1 and num[0] == 0:\n        print(-1)\n    else:\n        print(''.join(map(str, num)))", "def f():\n  n, m = map(int, input().split())\n  num = [set() for i in range(n)]\n  for i in range(m):\n    s, c = map(int, input().split())\n    num[s-1].add(c)\n  s = []\n  for i in num:\n    if len(i) > 1:\n      print(-1)\n      return\n    if len(i) == 1:\n      for x in i:\n        s.append(x)\n        break\n    else:\n      s.append(0)\n  if s[0] == 0 and n != 1:\n    if len(num[0]) > 0:\n      print(-1)\n      return\n    else:\n      s[0] = 1\n  print(''.join(str(x) for x in s))\nf()", "N,M=map(int,input().split())\ns=[0]*M\nc=[0]*M\nd=dict()\nfor i in range(M):\n    s[i],c[i] = map(int,input().split())\n    if s[i] in d:\n        if d[s[i]]!=c[i]:\n            ans=-1\n            break\n    else:\n        d[s[i]]=c[i]\nelse:\n    ans=\"\"\n    for i in range(1,N+1):\n        if i in d:\n            ans += str(d[i])\n        else:\n            if i>=2 and ans!=\"\" and ans[0]==\"0\":\n                ans=-1\n                break\n            elif N>=2 and i==1:\n                ans +=str(1)\n            else:\n                ans +=str(0)\n            \nprint(ans)", "N, M = map(int, input().split())\n\nif N == 1:\n    lst = [str(i) for i in range(10)]\n\nelif N == 2:\n    lst = [str(i) for i in range(10, 100)]\n\nelse:\n    lst = [str(i) for i in range(100, 1000)]\n\nfor j in range(M):\n    s, c = map(int, input().split())\n    lst = [i for i in lst if i[s-1] == str(c)]\n\nif len(lst) == 0:\n    print(-1)\n\nelse:\n    print(lst[0])", "N,M=map(int,input().split())\ns=[0]*(M+1)\nc=[0]*(M+1)\nfor i in range(1,M+1):\n    s[i],c[i] = map(int,input().split())\n\nans = [\"*\"]*N\nflag=0\n\nfor i in range(1,M+1):\n    if ans[s[i]-1] == \"*\" or ans[s[i]-1] == c[i]:\n        ans[s[i]-1]=c[i]\n    else:\n        flag=1\n\n\nif ans[0]==\"*\" and len(ans)>=2:\n    ans[0]=1\nans=list(map(lambda x: 0 if x ==\"*\" else x,ans))\n# print(ans)\nif flag == 1 or all(x == 0 for x in ans) or ans[0] == 0:\n    if len(ans) == 1 and ans[0] == 0:\n        print(ans[0])\n    else:\n        print(-1)\nelse:\n    ans = \"\".join(map(str,ans))\n    print(ans)", "#!/usr/bin/env python3\nimport sys\nimport math\nimport decimal\nimport itertools\nfrom itertools import product\nfrom functools import reduce\ndef input():\n    return sys.stdin.readline()[:-1]\ndef sort_zip(a:list, b:list):\n    z = list(zip(a, b))\n    z = sorted(z)\n    a, b = list(zip(*z))\n    a = list(a)\n    b = list(b)\n    return a, b\n\ndef main():\n    N, M = list(map(int, input().split()))\n    s = [0] * M\n    c = [0] * M\n    for i in range(M):\n        s[i], c[i] = list(map(int, input().split()))\n\n    if M == 0:\n        if N == 1:\n            print((0))\n            return\n        elif N == 2:\n            print((10))\n            return\n        elif N == 3:\n            print((100))\n            return\n\n    for i in range(M):\n        if s[i] == 1 and c[i] == 0 and N > 1:\n            print((-1))\n            return\n\n    s, c = sort_zip(s, c)\n\n    for i in range(M - 1):\n        if s[i] == s[i + 1]:\n            if c[i] != c[i + 1]:\n                print((-1))\n                return\n\n    for i in range(1, N + 1):\n        if i not in s:\n            s.append(i)\n            if i == 1:\n                c.append(1)\n            else:\n                c.append(0)\n\n    s, c = sort_zip(s, c)\n\n    k = 1\n    ans = ''\n    for i in range(len(s)):\n        if s[i] == k:\n            ans += str(c[i])\n            k += 1\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, m = map(int, input().split())\nN = [0]*n\nt = [0]*n\nif n>1:\n    N[0]=1\nf = 0\nfor i in range(m):\n    s, c = map(int, input().split())\n    if t[s-1]!=0 and N[s-1]!=c:\n        f = 1\n    t[s-1] = 1\n    N[s-1] = c\n\nif n!=1 and N[0]==0:\n    print(-1)\n\nelif f==1:\n    print(-1)\n\nelse:\n    for i in range(n):\n        print(N[i],end=\"\")", "n, m = map(int, input().split())\n\nans = [0]*(n)\n\nfor i in range(m):\n    a = list(map(int, input().split()))\n    if n>=2:\n        if a[0] == 1:\n            if a[1] == 0:\n                print(\"-1\")\n                return\n\n    a[0] -= 1\n    if ans[a[0]] == 0 or ans[a[0]] == a[1]:\n        ans[a[0]] = a[1]\n    else:\n        print(\"-1\")\n        return\n\nif n>=2:\n    for i in range(n):\n        if ans[0] == 0:\n            ans[0] = 1\n            print(ans[i],end=\"\")\n\n        else:\n            print(ans[i],end=\"\")\nelse:\n    print(ans[0])\n", "n,m = map(int,input().split())\n\nl = [-1]*(n+1)\n\nfor _ in range(m):\n  s,c = map(int,input().split())\n  if l[s] == -1:\n    l[s] = c\n  else:\n    if l[s] != c:\n      print(-1)\n      return\n\nif n != 1 and l[1] == 0:\n  print(-1)\n  return\nif l[1] == -1:\n  l[1] = 1\nfor i in range(2,n+1):\n  if l[i] == -1:\n    l[i] = 0\nls = list(map(str,l))\nif n == 1 and m == 0:\n  print(0)\n  return\nprint(int(''.join(ls[1:])))", "#from statistics import median\n#import collections\n#aa = collections.Counter(a) # list to list || .most_common(2)\u3067\u6700\u5927\u306e2\u500b\u3068\u308a\u3060\u305b\u308b\u304a a[0][0]\nfrom math import gcd\nfrom itertools import combinations,permutations,accumulate, product # (string,3) 3\u56de\n#from collections import deque\nfrom collections import deque,defaultdict,Counter\nimport decimal\nimport re\nimport math\nimport bisect\nimport heapq\n#\n#\n#\n# python\u3067\u7121\u7406\u306a\u3068\u304d\u306f\u3001pypy\u3067\u3084\u308b\u3068\u6b63\u89e3\u3059\u308b\u304b\u3082\uff01\uff01\n#\n#\n# my_round_int = lambda x:np.round((x*2 + 1)//2)\n# \u56db\u6368\u4e94\u5165g\n#\n# \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u7cfb\n# int min_y = max(0, i - 2), max_y = min(h - 1, i + 2);\n# int min_x = max(0, j - 2), max_x = min(w - 1, j + 2);\n#\n#\nimport sys\nsys.setrecursionlimit(10000000)\n# mod = 10**9 + 7\n#mod = 9982443453\nmod = 998244353\nINF = float('inf')\nfrom sys import stdin\nreadline = stdin.readline\ndef readInts():\n  return list(map(int,readline().split()))\ndef readTuples():\n    return tuple(map(int,readline().split()))\ndef I():\n    return int(readline())\nn,m = readInts()\nif n == 1:\n    lis = ['0']\nelse:\n    lis = ['1'] + ['0'] * (n-1)\ndic = defaultdict(int)\nfor _ in range(m):\n    s,c = readInts()\n    if s == 1 and c == 0 and n != 1:\n        print((-1))\n        return\n    \n    if dic[s] == 0:\n        dic[s] = c\n        lis[s-1] = str(c)\n    else:\n        if dic[s] != c:\n            print((-1))\n            return\n\nprint((''.join(lis)))\n", "n, m = map(int, input().split())\n\ns, c = [], []\nfor _ in range(m):\n  s_, c_ = map(int, input().split())\n  s.append(s_)\n  c.append(c_)\n\nfor i in range(10**n):\n  ans = str(i)\n  if len(ans) == n and all([ans[s[j]-1] == str(c[j]) for j in range(m)]):\n    print(ans)\n    return\n\nprint(-1)", "N, M = list(map(int, input().split()))\nst = 1 * 10 ** (N-1)\nen = st * 10\nif N == 1:\n    st = 0\nSC = []\nfor i in range(M):\n    sc = list(map(int,input().split()))\n    SC.append(sc)\n    \nfor i in range(st,en):\n    t = str(i)\n    judge = True\n    for j in range(M):\n        if t[SC[j][0]-1] != str(SC[j][1]):\n            judge = False\n    if judge:\n        print(i)\n        return\nprint(\"-1\")\n", "#\n# abc157 c\n#\nimport sys\nfrom io import StringIO\nimport unittest\n\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        self.assertEqual(out, output)\n\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"3 3\n1 7\n3 2\n1 7\"\"\"\n        output = \"\"\"702\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_2(self):\n        input = \"\"\"3 2\n2 1\n2 3\"\"\"\n        output = \"\"\"-1\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_3(self):\n        input = \"\"\"3 1\n1 0\"\"\"\n        output = \"\"\"-1\"\"\"\n        self.assertIO(input, output)\n\n\ndef resolve():\n    N, M = list(map(int, input().split()))\n    SC = [list(map(int, input().split())) for _ in range(M)]\n    SC = set(map(tuple, SC))\n    SC = list(set(SC))\n    SC.sort()\n\n    ans = -1\n    for i in range(10**N):\n        si = str(i)\n        if len(si) != N:\n            continue\n        for sc in SC:\n            s, c = sc\n            if si[s-1] != str(c):\n                break\n        else:\n            ans = i\n            break\n\n    print(ans)\n\n\ndef __starting_point():\n    # unittest.main()\n    resolve()\n\n__starting_point()", "import math\nimport decimal\ndef i_input(): return int(input())\n\n\ndef i_map(): return list(map(int, input().split()))\n\n\ndef i_list(): return list(map(int, input().split()))\n\n\ndef i_row(N): return [int(input()) for _ in range(N)]\n\n\ndef i_row_list(N): return [list(map(int, input().split())) for _ in range(N)]\n\nn,m= i_map()\nsc=i_row_list(m)\nsc.sort()\nnum=[-1]*n\nans=-2\nfor s,c in sc:\n    if num[s-1]==-1:\n        num[s-1]=c\n    elif num[s-1]!=-1 and num[s-1]!=c:\n        ans=-1\n        break\nif ans!=-1:\n    if n==1:\n        if num[0]==-1:\n            ans=0\n        else:\n            ans=num[0]\n    else:\n        if num[0]==-1:\n            num[0]=1\n        ans=0\n        for i in range(n):\n            if num[0]==0:\n                ans=-1\n                break\n            if num[i]==-1:\n                num[i]=0\n            ans+=num[i]*(10**(n-1-i))\nprint(ans)\n", "N, M = map(int, input().split())\nA = [\"x\"]*N\nfor i in range(M):\n  s, c = map(int, input().split())\n  if A[s-1] == \"x\":\n    A[s-1] = c\n  elif A[s-1] != c:\n    print(-1)\n    return\n\n\nif A[0]==0 and N>1:\n  print(-1)\n  return\nelif N==1 and (A[0]==\"x\" or A[0] == 0):\n  print(0)\n  return\nelif A[0]==\"x\" or A[0] == 0:\n  A[0]=1\n\nfor i in range(1,N):\n  if A[i]==\"x\":\n    A[i]=0\n\nans = 0\nif A[0]>0:\n  for i in range(N):\n    ans += A[i]*10**(N-i-1)\nelse:\n  ans = -1\n  \nprint(ans)", "N, M=map(int,input().split())\ns=list()\nc=list()\na=0\nfor i in range(0,M):\n    s.append(0)\n    c.append(0)\nfor i in range(0,M):\n    s[i], c[i]=map(int,input().split())\nfor i in range(0,M):\n    for j in range(0,M):\n        if s[i]==s[j] and c[i]!=c[j]:\n            print(\"-1\")\n            break\n    else:\n        continue\n    break\nelse:\n    if N==1:\n        b=[0]\n        for i in range(0,M):\n            b[s[i]-1]=c[i]\n        print(b[0])\n    else:\n        b=[1]\n        for i in range(0,N-1):\n            b.append(0)\n        for i in range(0,M):\n            if s[i]==1 and c[i]==0:\n                print(\"-1\")\n                break\n        else:\n            for i in range(0,M):\n                b[s[i]-1]=c[i]\n            for i in range(0,N):\n                print(b[i],end='')", "n, m = map(int, input().split())\nconditions = [tuple(map(int, input().split())) for j in range(m)]\nexist = False\nfor i in range(1000):\n    if len(str(i)) == n and all(str(i)[s - 1] == str(c) for s, c in conditions):\n        ans = i\n        exist = True\n        break\nprint(ans if exist else -1)", "N,M=map(int,input().split())\nX=['*','*','*']\nfor i in range(M):\n  s,c=map(str,input().split())\n  for j in range(M):\n    if s=='1' and X[0]=='*':X[0]=c;continue\n    elif s=='1' and c!=X[0]:print(-1);return\n    if s=='2' and X[1]=='*':X[1]=c;continue\n    elif s=='2' and c!=X[1]:print(-1);return\n    if s=='3' and X[2]=='*':X[2]=c;continue\n    elif s=='3' and c!=X[2]:print(-1);return\nif N==1 and X[0]=='*':print('0');return\nif N==1:print(X[0]);return\nif X[0]=='0':print(-1);return\n#N==3 and (X[0]=\n             \n\nif X[0]=='*':X[0]='1'\nif X[1]=='*':X[1]='0'\nif N==2:print(int(X[0])*10+int(X[1]));return\n\nif X[2]=='*':X[2]='0'\n#else:print(int(X[0])*10+int(X[1]))\n\n\n  \nprint(int(X[0])*10**2+int(X[1])*10+int(X[2]))", "#n\u306f\u6841\u6570\u3000 (1,0)\u304c\u542b\u307e\u308c\u3066\u308b\u6642\u3068\u3001(2,4),(2,7)\u307f\u305f\u3044\u306a\u5165\u529b\u306e\u6642\u306f\u3060\u3081\nn,m = list(map(int,input().split()))\ns = [0]*m\nc = [0]*m\nd = dict()\nans = 0\n\nfor x in range(m):\n    s[x],c[x] = list(map(int,input().split()))\n    if s[x] not in d:\n        d[s[x]] = c[x]\n    elif d[s[x]] != c[x]:\n        ans = -1\n        break\n\nelse:\n    ans = \"\"\n    for x in range(1,n+1):\n        if x in d :\n            if x != 1:\n                ans += str(d[x])\n            elif x == 1 and d[x] != 0:\n                ans += str(d[x])\n            elif n == 1 and d[x] == 0:\n                ans += \"0\"\n            else:\n                ans = -1\n                break\n        else:\n            if m != 0:\n                if x == 1:\n                    ans += str(1)\n                else:\n                    ans += str(0)\n            else:\n                if n == 1:\n                    ans = str(0)\n                else:\n                    ans = \"1\" + (\"0\"*(n-1))\n\nprint(ans)\n", "N,M = map(int,input().split())\nS = []\nC = []\na = 10**(N-1)\nb = 10**N\nif(N == 1):\n    a = 0\nfor i in range(M):\n    s,c = map(int,input().split())\n    S.append(s)\n    C.append(c)\nfor i in range(a,b):\n    count = 0\n    num = str(i)\n    for j in range(M):\n        if(num[S[j]-1] == str(C[j])):\n            count += 1\n    if(count == M):\n        print(i)\n        return\nprint(-1)", "#!/usr/bin/env python3\nimport sys\nimport math\nimport decimal\nimport itertools\nfrom itertools import product\nfrom functools import reduce\ndef input():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n    N, M = list(map(int, input().split()))\n    s = [0] * M\n    c = [0] * M\n    for i in range(M):\n        s[i], c[i] = list(map(int, input().split()))\n\n    if M == 0:\n        if N == 1:\n            print((0))\n            return\n        elif N == 2:\n            print((10))\n            return\n        elif N == 3:\n            print((100))\n            return\n\n    for i in range(M):\n        if s[i] == 1 and c[i] == 0 and N > 1:\n            print((-1))\n            return\n\n    z = list(zip(s, c))\n    z = sorted(z)\n    s, c = list(zip(*z))\n    s = list(s)\n    c = list(c)\n\n    for i in range(M - 1):\n        if s[i] == s[i + 1]:\n            if c[i] != c[i + 1]:\n                print((-1))\n                return\n\n    for i in range(1, N + 1):\n        if i not in s:\n            s.append(i)\n            if i == 1:\n                c.append(1)\n            else:\n                c.append(0)\n\n    z = list(zip(s, c))\n    z = sorted(z)\n    s, c = list(zip(*z))\n    s = list(s)\n    c = list(c)\n\n    k = 1\n    ans = ''\n    for i in range(len(s)):\n        if s[i] == k:\n            ans += str(c[i])\n            k += 1\n    print(ans)\n\n\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, m = list(map(int, input().split()))\nng = [tuple(map(int, input().split())) for _ in range(m)]\n\nfor i in range(1000):\n    i = str(i)\n    if len(i) != n:\n        continue\n    for g in ng:\n        if i[g[0] - 1] != str(g[1]):\n            break\n    else:\n        print(i)\n        break\nelse:\n    print((-1))\n", "n,m=map(int,input().split())\nq=[list(map(int,input().split())) for _ in range(m)]\nfor i in range(10**n):\n    i=str(i)\n    if len(i)!=n:\n        continue\n    f=1\n    for j in q:\n        if i[j[0]-1]!=str(j[1]):\n            f=0\n            break\n    if f:\n        print(i)\n        return\nprint(\"-1\")", "N, M = map(int, input().split(' '))\nif M == 0:\n    if N == 1:\n        print(0)\n    else:\n        print('1', '0' * (N - 1), sep='')\nelse:\n    is_end = False\n    rst = [''] * N\n    for i in range(M):\n        s, c = input().split(' ')\n        idx = int(s) - 1\n        if idx == 0 and N != 1 and c == '0':\n            print(-1)\n            is_end = True\n            break\n        elif rst[idx] == '':\n            rst[idx] = c\n        elif rst[idx] != c:\n            print(-1)\n            is_end = True\n            break\n    if not is_end:\n        for i, j in enumerate(rst):\n            if i == 0 and j == '':\n                print('1', end='')\n            elif j == '':\n                print('0', end='')\n            else:\n                print(j, end='')", "N, M = map(int, input().split(' '))\nif M == 0:\n    if N == 1:\n        print(0)\n    else:\n        print('1', '0' * (N - 1), sep='')\nelse:\n    rst = [''] * N\n    is_end = False\n    for i in range(M):\n        s, c = input().split(' ')\n        idx = int(s) - 1\n        if idx == 0 and N != 1 and c == '0':\n            print(-1)\n            is_end = True\n            break\n        elif rst[idx] == '':\n            rst[idx] = c\n        elif rst[idx] != c:\n            print(-1)\n            is_end = True\n            break\n    if not is_end:\n        for i, j in enumerate(rst):\n            if i == 0 and rst[i] == '':\n                print('1', end='')\n            elif rst[i] == '':\n                print('0', end='')\n            else:\n                print(j, end='')", "n,m=map(int,input().split())\n\nans=[\"#\"]*n\nfor _ in range(m):\n    s,c=map(int,input().split())\n    # \u540c\u3058\u6841\u306b\u8907\u6570\u306e\u6307\u793a\u304c\u98db\u3093\u3067\u304d\u305f\u3089\u72e9\u731f\n    if not ans[s-1] in[\"#\",c]:\n        print(-1)\n        return\n    ans[s-1]=c\n\n#\u3000n\u304c\u4e00\u6841\u306e\u6642\u306e\u5bfe\u5fdc\nif len(ans)==1:\n    print(0 if ans[0]==\"#\" else ans[0])\n    return\n#\u982d\u306e\u6570\u5b57\u306b\u3064\u3044\u3066\nif ans[0]==0:\n    print(-1)\n    return\n\nif ans[0]==\"#\":\n    ans[0]=1\n\nfor num in ans:\n    print(num if num!=\"#\" else 0,end=\"\")\n", "n, m = map(int, input().split())\na = ['*']*n\n\n\nfor i in range(m):\n\n  s, c = map(int, input().split())\n  if a[s-1] == '*':\n    a[s-1] = c\n  else:\n    if a[s-1] == c:\n      continue\n    else:\n      print(-1)\n      return\n  \nif n >1 and a[0] == 0:\n  print(-1)\n  return\nelif n >1 and a[0]=='*':\n  a[0] = 1\n\n  \nb = [str(x) for x in a]\nans= ''.join(b)\nprint(ans.replace('*', '0'))", "N, M = map(int, input().split(' '))\nif M == 0:\n    if N == 1:\n        print(0)\n    else:\n        print('1', '0' * (N - 1), sep='')\nelse:\n    is_end = False\n    rst = [''] * N\n    for i in range(M):\n        s, c = input().split(' ')\n        idx = int(s) - 1\n        if idx == 0 and N != 1 and c == '0':\n            print(-1)\n            is_end = True\n            break\n        elif rst[idx] == '':\n            rst[idx] = c\n        elif rst[idx] != c:\n            print(-1)\n            is_end = True\n            break\n    if not is_end:\n        for i, j in enumerate(rst):\n            if i == 0 and j == '':\n                print('1', end='')\n            elif j == '':\n                print('0', end='')\n            else:\n                print(j, end='')", "import sys\nn,m=list(map(int,input().split()))\nl=['-']*n\nfor i in range(m):\n    s,c=list(map(int,input().split()))\n    c=str(c)   \n    if l[s-1]!=c and l[s-1]!='-':\n        print('-1')\n        return\n    else:\n        l[s-1]=c\n\nif n==1 and l[0]=='0':\n    print('0')\n    return\nif n==1 and l[0]=='-':\n    print('0')\n    return\nif l[0]=='0':\n    print('-1')\n    return\n      \nif l[0]=='-':\n    l[0]='1'\n\nfor j in range(n):\n    if l[j]=='-':\n        l[j]='0'\n\nprint((''.join(l)))\n", "N, M = list(map(int, input().split()))\ns, c = [None] * M, [None] * M\nfor i in range(M):\n    s[i], c[i] = list(map(int, input().split()))\n\n\n\nans = 0\nl = [None] * N\nfor i in range(M):\n    if l[s[i] - 1] == None:\n        l[s[i] - 1] = c[i]\n\nif N == 1 and l[0] == None:\n    l[0] = 0\nelif N > 1 and l[0] == None:\n    l[0] = 1\nfor i in range(1, N):\n    if l[i] == None:\n        l[i] = 0\n\nif N > 1 and l[0] == 0:\n    ans = -1\nelse:\n    for i in range(M):\n        for j in range(i + 1, M):\n            if s[i] == s[j] and c[i] != c[j]:\n                ans = -1\n                break\n    if ans != -1:   \n        l = list(map(str, l))\n        ans = \"\".join(l)\nprint(ans)", "n, m = list(map(int, input().split()))\nans = [-1 for _ in range(n)]\nfor _ in range(m):\n    s, c = list(map(int, input().split()))\n    s -= 1\n    if s > n - 1:\n        print((-1))\n        break\n    if ans[s] == -1:\n        ans[s] = c\n    elif ans[s] != c:\n        print((-1))\n        break\nelse:\n    A = 0\n    for i, a in enumerate(ans[::-1]):\n        if a != -1:\n            A += 10 ** i * a\n        elif i == n - 1 and n != 1:\n            A += 10 ** i\n    if len(str(A)) != n:\n        print((-1))\n    else:\n        print(A)\n", "n, m = map(int, input().split())\nsc = [tuple(map(int, input().split())) for j in range(m)]\nfor i in range(1000):\n    if len(str(i)) == n and all(str(i)[s - 1] == str(c) for s, c in sc):\n        print(i)\n        break\nelse:\n    print(-1)", "n, m = map(int, input().split())\nans = [-1] * n\nexist = True\nfor i in range(m):\n    s, c = map(int, input().split())\n    if (n != 1 and (s, c) == (1, 0)) or (ans[s - 1] != -1 and ans[s - 1] != c):\n        exist = False\n        break\n    else:\n        ans[s - 1] = c\n\nif exist:\n    for i in range(n):\n        if n != 1 and i == 0:\n            if ans[i] == -1:\n                ans[i] = 1\n        else:\n            if ans[i] == -1:\n                ans[i] = 0\n    print(*ans, sep='')\nelse:\n    print(-1)", "n,m=map(int,input().split())\nsc=[list(map(int,input().split())) for i in range(m)]\nans=[-1]*(n)\nflag=True\n\nfor i in sc:\n  if ans[i[0]-1]==-1:\n    ans[i[0]-1]=i[1]\n  elif ans[i[0]-1]!=-1 and ans[i[0]-1]!=i[1]:\n    flag=False\n    break\nfor i in range(n):\n  if i==0 and ans[i]==-1:\n    if n==1:\n      ans[i]=0\n    else:\n      ans[i]=1\n  elif ans[i]==-1:\n    ans[i]=0\nif flag and (ans[0]!=0 or n==1):\n  print(\"\".join(map(str,ans)))\nelse:\n  print(-1)", "n,m=list(map(int,input().split()))\no=[list(map(int,input().split()))for i in range(m)]\nfor i in range(10**n):\n    if len(str(i))==n and all(str(i)[j-1]==str(k) for j,k in o):\n        print(i)\n        break\nelse:print((-1))\n", "N, M = map(int, input().split())\nSC = [list(map(int, input().split())) for _ in range(M)]\n\nif N == 1:\n  start = 0\nelse:\n  start = 10**(N-1)\nfor i in range(start, 10**N):\n  str_i = str(i)\n  for s, c in SC:\n    if str_i[s-1] != str(c):\n      break\n  else:\n    print(i)\n    break\nelse:\n  print(-1)", "N,M=map(int,input().split())\nX=['*','*','*']\nfor i in range(M):\n  s,c=map(str,input().split())\n  for j in range(M):\n    if s=='1' and X[0]=='*':X[0]=c;continue\n    elif s=='1' and c!=X[0]:print(-1);return\n    if s=='2' and X[1]=='*':X[1]=c;continue\n    elif s=='2' and c!=X[1]:print(-1);return\n    if s=='3' and X[2]=='*':X[2]=c;continue\n    elif s=='3' and c!=X[2]:print(-1);return\nif N==1 and X[0]=='*':print('0');return\nif N==1:print(X[0]);return\nif X[0]=='0':print(-1);return\nif X[0]=='*':X[0]='1'\nif X[1]=='*':X[1]='0'\nif N==2:print(int(X[0])*10+int(X[1]));return\nif X[2]=='*':X[2]='0'\nprint(int(X[0])*10**2+int(X[1])*10+int(X[2]))", "\nn, m = list(map(int, input().split()))\nl = [0] * n\nflg = [0] * n\n\nfor i in range(m):\n    a, b = list(map(int, input().split()))\n    a -= 1\n    if flg[a] == 0 or (flg[a] == 1 and l[a] == b):\n        l[a] = b\n        flg[a] = 1\n    else:\n        print(\"-1\")\n        return\n\nif n == 1 and flg[0] == 0:\n    print((0))\n    return\nelif n > 1 and flg[0] == 0 and l[0] == 0:\n    l[0] = 1\nelif n > 1 and l[0] == 0:\n    print(\"-1\")\n    return\n\nans = \"\".join(list(map(str, l)))\nprint(ans)\n\n", "N,M = map(int,input().split())\nsc = [list(map(int,input().split())) for _ in range(M)]\nstart = 10**(N-1) if N>1 else 0\n\nfor i in range(start,1000):\n    count = 0\n    for s,c in sc:\n        if len(str(i)) >= s:\n            if int(str(i)[s-1]) == c:\n                count += 1\n            else:\n                break\n    if count == M:\n        print(i)\n        return\n\nprint(-1)", "def main():\n    n,m = list(map(int, input().split()))\n    ans = [0 for _ in range(n)]\n    for _ in range(m):\n        s, c = list(map(int, input().split()))\n        if n>1 and s==1 and c ==0:\n            return -1\n        if s-1 > n:\n            return -1\n        if ans[s-1] == 0 or ans[s-1] == c:\n            ans[s-1] = c\n        else:\n            return -1\n    # if n == 1 and ans[0]==0:\n    #     continue\n    if n>1 and ans[0]==0:\n        ans[0]=1\n\n    ans = int(\"\".join(map(str,ans)))\n    if len(str(ans)) < n:\n        return -1\n    return ans\n\ndef __starting_point():\n    print((main()))\n\n\n__starting_point()", "N, M = map(int, input().split())\nx = [-9]+[-10]*(N-1)\nfor _ in range(M):\n    s, c = map(int, input().split())\n    if x[s-1] >= 0 and x[s-1]-c:\n        print(-1)\n        break\n    x[s-1] = c\nelse:\n    if x[0] == -9 and N == 1: print(0)\n    elif x[0]: print(sum(x[-i-1]%10*10**i for i in range(N)))\n    elif N<2: print(0)\n    else: print(-1)", "import os, sys, re, math\n\n(N, M) = [int(n) for n in input().split()]\n\nA = []\nfor i in range(N):\n    A.append([i for i in range(10)])\n\nanswer = ''\nfor i in range(M):\n    (s, c) = [int(n) for n in input().split()]\n    if c in A[s - 1]:\n        A[s - 1] = [c]\n    else:\n        answer = '-1'\n\nif N > 1 and 0 in A[0]:\n    A[0].remove(0)\n    if not A[0]:\n        answer = '-1'\n\nif not answer:\n    for i in range(N):\n        answer += '%d' % min(A[i])\n\nprint(answer)\n", "n,m=map(int,input().split())\ndata=[-1]*n\nfor i in range(m):\n  s,c=map(int,input().split())\n  if (s==1 and c==0) and n>=2:\n    print(-1)\n    return\n  if data[s-1]==-1 or data[s-1]==c:\n    data[s-1]=c\n  elif data[s-1]!=-1 and data[s-1]!=c:\n    print(-1)\n    return\n  \nif data[0]==-1 and n!=1:\n  data[0]=1\nelif data[0]==-1 and n==1:\n  data[0]=0\nfor i in range(1,n):\n  if data[i]==-1:\n    data[i]=0\nprint(*data,sep='')", "\ndef i_input(): return int(input())\ndef i_map(): return list(map(int, input().split()))\ndef i_list(): return list(map(int, input().split()))\ndef i_row(N): return [int(input()) for _ in range(N)]\ndef i_row_list(N): return [list(map(int,input().split())) for _ in range(N)]\n\nn,m=i_map()\nsc=i_row_list(m)\nsc.sort()\n\nnumber=[-1]*n\nch_s=-1\nch_c=-1\nans=-1\nfor s, c in sc:\n    if ch_s==s:\n        if ch_c!=c:\n            number[0]=-2\n            break\n    else:\n        number[s-1]=c\n        ch_s=s\n        ch_c=c\nif number[0]!=0:\n    ans=0\n    if number[0]==-1:\n        number[0]=1\n    for i in range(len(number)):\n        if number[i]==-2:\n            ans=-1\n            break\n        if number[i]==-1:\n            number[i]=0\n        ans+=number[i]*(10**(len(number)-i-1))\nif m==0:\n    if n==1:\n        ans=0\n    else:\n        ans=10**(n-1)\nif n==1 and number[0]==0:\n    ans=0\nprint(ans)\n\n", "n,m=map(int,input().split())\nSC=[list(map(int,input().split())) for _ in range(m)]\n\nfor i in range(10**n):\n    if len(str(i))==n and all(str(i)[s-1]==str(c) for s,c in SC):\n        print(i)\n        break\nelse:\n    print(-1)", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Mon Sep  7 17:36:58 2020\n\n@author: liang\n\"\"\"\n\"\"\"\n\u5168\u63a2\u7d22\n\"\"\"\nN, M = map(int, input().split())\n\ntest = list()\nfor _ in range(M):\n    s,c =  map(int,input().split()) \n    test.append((s,c))\n\n#print(test)\ntmp = [0]*3\nfor i in range(10**N):\n    tmp[0] = i//100\n    tmp[1] = i//10%10\n    tmp[2] = i%10\n    #print(tmp)\n    for tup in test:\n        s, c = tup[0], tup[1]\n        if tmp[(3-N)+s-1] != c:\n            break\n    else:\n        #\u6700\u4e0a\u4f4d\u306e\u6841\u304c0\u3067\u306a\u3044\u304b\n        if tmp[-N] == 0 and N != 1:\n            continue\n        print(i)\n        break\nelse:\n    print(-1)", "def main():\n    n, m = list(map(int, input().split()))\n    ans = [\"x\" for _ in range(n)]\n    if n == 1 and m == 0:\n        print((0))\n        return\n\n    for _ in range(m):\n        s, c = list(map(int, input().split()))\n        if (s == 1 and c == 0 and n != 1) or s > n:\n            print((-1))\n            return\n\n        if ans[s-1] != \"x\" and ans[s-1] != str(c):\n            print((-1))\n            return\n\n        ans[s-1] = str(c)\n\n    if ans[0] == \"x\":\n        ans[0] = \"1\"\n    print((\"\".join(ans).replace(\"x\", \"0\")))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N, M = map(int, input().split(' '))\nif M == 0:\n    if N == 1:\n        print(0)\n    else:\n        print('1', '0' * (N - 1), sep='')\nelse:\n    is_end = False\n    rst = [''] * N\n    for i in range(M):\n        s, c = input().split(' ')\n        idx = int(s) - 1\n        if idx == 0 and N != 1 and c == '0':\n            print(-1)\n            is_end = True\n            break\n        if rst[idx] == '':\n            rst[idx] = c\n        if rst[idx] != c:\n            print(-1)\n            is_end = True\n            break\n    if not is_end:\n        for i, j in enumerate(rst):\n            if i == 0 and j == '':\n                print('1', end='')\n            elif j == '':\n                print('0', end='')\n            else:\n                print(j, end='')", "n,m=map(int,input().split())\n\nd={}\nind=[0]*n\n\nfor i in range(n):\n    d[i+1]='*'\n\nfor j in range(m):\n    s,c=map(int,input().split())\n\n    if ind[s-1]==0:\n        d[s]=c\n        ind[s-1]=1\n    else:\n        if d[s]!=c:\n            print(-1)\n            return\n\n\nans=''\n\nif n>=2:\n    if d[1]==0:\n        print(-1)\n        return\n\nfor k in range(n):\n    if k==0:\n        if n>=2:\n            if d[k+1]=='*':\n                ans+='1'\n            else:\n                ans+=str(d[k+1])\n        else:\n            if d[k+1]=='*':\n                ans+='0'\n            else:\n                ans+=str(d[k+1])\n    else:\n        if d[k+1]=='*':\n            ans+='0'\n        else:\n            ans+=str(d[k+1])\n\nprint(ans)", "n,m = map(int,input().split())\nans = [\"num\"]*n\nfor i in range(m):\n    s,c = map(int,input().split())\n    if ans[s-1] == \"num\" or ans[s-1] == c:\n        ans[s-1] = c\n    else:\n        print(\"-1\")\n        return\n\nif ans[0] == 0 and n >= 2:\n    print(\"-1\")\n    return\nelif ans[0] == 0 and n == 1:\n    print(\"0\")\n    return\nelif ans[0] == \"num\" and n == 1:\n    print(\"0\")\n    return\nelif ans[0] == \"num\":\n    ans[0] = 1\n\nfor j in range(n):\n    if ans[j] == \"num\":\n        ans[j] = 0\n\n[print(ans[k],end =\"\") for k in range(n)]", "import sys\n\ninput = sys.stdin.readline\n\ndef main():\n    ans = 0\n    N, M = map(int, input().split())\n    i = [''] * N\n    for _ in range(M):\n        s, c = input().split()\n        if i[int(s)-1] != '' and i[int(s)-1] != c:\n            ans = -1\n            break\n        else:\n            i[int(s)-1] = c\n    if i[0] == '0' and N != 1:\n        ans = -1\n    else:\n        for j in range(N):\n            if i[j] == '' and j != 0:\n                i[j] = '0'\n        if i[0] == '' and N != 1:\n            i[0] = '1'\n        elif i[0] == '' and N == 1:\n            i[0] = '0'\n    if ans != -1:\n        ans = int(''.join(i))\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()", "n, m = map(int, input().split())\nsc = [list(map(int, input().split())) for _ in range(m)]\n\nfor num in range(10**n):\n  if len(str(num)) == n and all(str(num)[s-1] == str(c) for s, c in sc):\n    print(num)\n    return\nprint(-1)", "N,M=map(int,input().split())\nS=[]\nC=[]\nans=[]\nfor i in range(M):\n    s,c=map(int,input().split())\n    S.append(s)\n    C.append(c)\n    \nfor i in range(10 ** (N + 1)):\n    Str = str(i)\n    if len(Str) == N and all([Str[S[j] - 1] == str(C[j]) for j in range(M)]):\n        ans.append(i)\n\nif ans ==[]:\n    print(-1)\nelse:\n    print(min(ans))", "from random import randint\n\ndef getrand():\n    n = randint(1,3)\n    m = randint(0,5)\n    s = []\n    for i in range(m):\n        s.append([randint(1,n),randint(0,9)])\n    s.sort()\n    print([n,m])\n    print(s)\n    return n,m,s\n\ndef getval():\n    n,m = list(map(int,input().split()))\n    s = [list(map(int,input().split())) for i in range(m)]\n    return n,m,s\n\ndef getrand():\n    n = randint(1,3)\n    m = randint(0,5)\n    s = []\n    for i in range(m):\n        s.append([randint(1,n),randint(0,9)])\n    s.sort()\n    print([n,m])\n    print(s)\n    return n,m,s\n\ndef getval():\n    n,m = list(map(int,input().split()))\n    s = [list(map(int,input().split())) for i in range(m)]\n    return n,m,s\n\ndef main(n,m,s):\n    #Initiate\n    temp = [-1 for i in range(n)]\n    ans = \"\"\n    flag = True\n    #Exceptions: contains dup or ([1,0] and n>1)\n    if [1,0] in s and n>1:\n        flag = False\n    for i in s:\n        if not temp[i[0]-1] in [-1,i[1]]:\n            flag = False\n            break\n        temp[i[0]-1] = i[1]\n    if flag:\n        if n==1:\n            if m==0:\n                ans = \"0\"\n            else:\n                ans = str(temp[0])\n        else:\n            if temp[0]==-1:\n                temp[0] = 1\n            for i in range(0,n):\n                if temp[i]==-1:\n                    temp[i] = 0\n            for i in temp:\n                ans += str(i)\n    else:\n        ans = \"-1\"\n    print(ans)\n        \n\ndef __starting_point():\n    #n,m,s = getrand()\n    n,m,s = getval()\n    main(n,m,s)\n    #for i in range(10):\n      #n,m,s = getrand()\n      #main(n,m,s)\n\n__starting_point()", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Mon Sep  7 17:11:27 2020\n\n@author: liang\n\"\"\"\n\nN, M = map(int, input().split())\n\nans = [-1]*N\nres = 0\nfor i in range(M):\n    s, c = map(int, input().split())\n    if s == 1 and c == 0 and N != 1:\n        print(-1)\n        break\n    if ans[s-1] == -1 or ans[s-1] == c:\n        ans[s-1] = c\n    else:\n        print(-1)\n        break\nelse:\n    if ans[0] == -1:\n        ans[0] = 1\n    if M == 0 and N == 1:\n        ans[0] = 0\n    ans = [0 if a == -1 else a for a in ans]\n    #print(ans)\n    for i in range(N):\n        res += ans[-(i+1)]*10**i\n    print(res)", "import sys\n\nn, m = list(map(int, input().split()))\n\nconds = []\nfor _ in range(m):\n  conds.append((input().split()))\n\nfor x in range(10 ** 3):\n  xs = str(x)\n  if len(xs) < n:\n    continue\n\n  found = True\n  for cond in conds:\n    s = int(cond[0]) - 1\n    c = cond[1]\n    if s >= len(xs):\n      found = False\n      break\n\n    if xs[s] != c:\n      found = False\n      break\n\n  if found:\n    print(x)\n    return\n\nprint('-1')\n", "# -*- coding: utf-8 -*-\n\nN,M = list(map(int, input().split()))\ns_list = []\nc_list = []\nfor i in range(M):\n    s,c = list(map(int, input().split()))\n    s_list.append(s)\n    c_list.append(str(c))\n\nif N==1:\n    start = 0\n    end = 10\nelse:\n    start = int(\"1\"+(\"0\" * (N-1)))\n    end = int(\"9\"*N) + 1\n\nif M==0:\n    print(start)\n    return\n\nfor val in range(start, end):\n    val_str = list(str(val))\n    cnt = 0\n    for i in range(M):\n        digit = s_list[i]-1\n        if val_str[digit] == c_list[i]:\n            cnt += 1\n        else:\n            break\n\n        if cnt==M:\n            print(val)\n            return\n\nprint((-1)) \n", "def main():\n    N,M = map(int,input().split())\n    scs = [list(map(int,input().split())) for _ in range(M)]\n    \n    scs.sort()\n    if M == 0:\n        if N==1:\n            print(0)\n        else:\n            print(10**(N-1))\n        return\n    if scs[0][0] == 1: \n        if scs[0][1] == 0 and N!= 1:\n            print(-1)\n            return\n    else:\n        scs.append([1,1])\n\n    for i in reversed(range(M-1)):\n        if scs[i][0] == scs[i+1][0]:\n            if scs[i][1] != scs[i+1][1]:\n                print(-1)\n                return\n            else:\n                scs.pop(i + 1)\n\n    ans = 0\n    for sc in scs:\n        ans += sc[1]*10**(N-sc[0])\n    print(ans)\n        \n\n\nmain()", "n, m = map(int, input().split())\nsc = [tuple(map(int, input().split())) for j in range(m)]\nfor i in range(0 if n == 1 else 10**(n - 1), 10**n):\n    if all(str(i)[s - 1] == str(c) for s, c in sc):\n        print(i)\n        break\nelse:\n    print(-1)", "def N():\n    return int(input())\ndef L():\n    return list(map(int,input().split()))\ndef NL(n):\n    return [list(map(int,input().split())) for i in range(n)]\nmod = pow(10,9)+7\n\n#import numpy as np\nimport sys\nimport math\nimport collections\n\nn,m = L()\nsc = NL(m)\nnum = [0]*n\nif n == 1:\n    num[0] = 0\nelse:\n    num[0] = 1\nflag = [True]*n\nfor s,c in sc:\n    if s == 1:\n        if c == 0 and n != 1:\n            print(-1)\n            return\n        if flag[0] :\n            num[0] = c\n            flag[0] = False\n        elif num[0] != c:\n            print(-1)\n            return\n    else:\n        if flag[s-1]:\n            num[s-1] = c\n            flag[s-1] = False\n        elif (num[s-1] != c):\n            print(-1)\n            return\n\nfor i in range(n):\n    print(num[i],end=\"\")\nprint()", "N, M = list(map(int, input().split()))\nsc_list = [list(map(int, input().split())) for i in range(M)]\n\norder_list = [0]*N\nans = 0\n\nfor i in range(M):\n    if sc_list[i][0] == 1 and sc_list[i][1] == 0 and N > 1:\n        ans = -1\n        break\n    for j in range(i + 1 ,M):\n        if sc_list[i][0] == sc_list[j][0] and sc_list[i][1] != sc_list[j][1]:\n            ans = -1\n            break\n\nif ans == 0:\n    if N > 1:\n        order_list[0] = 1\n    for i, j in sc_list:\n        order_list[i - 1] = j\n    for i in range(N):\n        ans += order_list[i] * (10 ** (N - i - 1))\n\nprint(ans)", "n, m = map(int, input().split())\nsl = list(list(map(int, input().split())) for _ in range(m))\n\nif n == 1:\n    st, en = 10**(n-1)-1, 10**n\nelse:\n    st, en = 10**(n-1), 10**n\n\nflg = True\ncnt = 0\nfor i in range(st, en):\n    for s in sl:\n        flg = True\n        if str(i)[s[0]-1] == str(s[1]):\n            continue\n        else:\n            flg = False\n            break\n    if flg:\n        print(i)\n        return\nelse:\n    print(-1)", "def main():\n    n, m = map(int, input().split())\n    qry = [list(map(int, input().split())) for _ in range(m)]\n    ans = -1\n    for v in range(0, 1000):\n        s = str(v)\n        if len(s) != n:\n            continue\n        f = True\n        for p, x in qry:\n            if s[p-1] != str(x):\n                f = False\n                break\n        if f:\n            ans = v\n            break\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()", "# coding: utf-8\n\n\ndef main():\n    N, M = list(map(int, input().split()))\n    A = [-1] * N\n    tmp = ''\n    flg = True\n    for i in range(M):\n        s, c = list(map(int, input().split()))\n        if A[s - 1] == -1:\n            A[s - 1] = c\n        elif A[s - 1] != c:\n            flg = False\n\n    for i in range(N):\n        if i == 0 and N > 1:\n            if A[i] == -1:\n                tmp += '1'\n            elif A[i] == 0:\n                flg = False\n                break\n            else:\n                tmp += str(A[i])\n        else:\n            if A[i] == -1:\n                tmp += '0'\n            else:\n                tmp += str(A[i])\n\n    print((int(tmp) if flg else -1))\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def resolve():\n\tn,m = map(int,input().split())\n\tsc = [tuple(map(int,input().split())) for _ in range(m)]\n\tfor i in range((10**(n-1) if n!=1 else 0),10**n):\n\t\tc = 1\n\t\tfor j in sc:\n\t\t\tif str(i)[j[0]-1] != str(j[1]):\n\t\t\t\tc = 0\n\t\t\t\tbreak\n\t\tif c: break\n\tprint(i if c else -1)\n    \nresolve()", "N, M = map(int, input().split(' '))\nrst = [''] * N\nis_end = False\nif M == 0:\n    if N == 1:\n        print(0)\n    else:\n        print('1', '0' * (N - 1), sep='')\nelse:\n    for i in range(M):\n        s, c = input().split(' ')\n        if (int(s) - 1) == 0 and N != 1 and c == '0':\n            print(-1)\n            is_end = True\n            break\n        elif rst[int(s) - 1] == '':\n            rst[int(s) - 1] = c\n        elif rst[int(s) - 1] != c:\n            print(-1)\n            is_end = True\n            break\n    if not is_end:\n        for i, j in enumerate(rst):\n            if i == 0 and j == '':\n                print(1, end='')\n            else:\n                if j == '':\n                    print(0, end='')\n                print(j, end='')", "n,m=map(int,input().split())\narr=[list(map(int,input().split())) for _ in range(m)]\nif n==1:\n  for i in range(10):\n    tmp=str(i)\n    flag=True\n    for j in range(m):\n      if tmp[arr[j][0]-1]!=str(arr[j][1]):\n        flag=False\n    if flag==True:\n      print(i)\n      break\n  else:\n    print(-1)\nelse:\n  for i in range(10**(n-1),10**n):\n    tmp=str(i)\n    flag=True\n    for j in range(m):\n      if tmp[arr[j][0]-1]!=str(arr[j][1]):\n        flag=False\n    if flag==True:\n      print(i)\n      break\n  else:\n    print(-1)", "N, M = list(map(int, input().split()))\nS, C = [], []\nfor _ in range(M):\n    s, c = list(map(int, input().split()))\n    S.append(s - 1)\n    C.append(c)\n\nif M != 0 and N != 1 and S[0] == 0 and C[0] == 0:\n    print((-1))\n    return\n\nd = {}\nfor s, c in zip(S, C):\n    if c != d.setdefault(s, c):\n        print('-1')\n        return\n\nans = \"\"\nfor i in range(N):\n    if i in d:\n        ans += str(d[i])\n    else:\n        ans += \"0\"\n\nif ans[0] == \"0\" and N != 1:\n    ans = '1' + ans[1:]\nprint(ans)\n", "# n,m = map(int, input().split())\n# sc = [map(int, input().split()) for _ in range(m)]\n# s, c = [list(i) for i in zip(*sc)]\n#\n#\n#\n# for i in range(10**n):\n#     ans = str(i)\n#     if len(i) == n and all([i[s[j]-1] == str(c[j]) for j in range(m)]):\n#         print(ans)\n#         return\n#\n#\n# print(-1)\n\nn, m = list(map(int, input().split()))\n\ns, c = [], []\nfor _ in range(m):\n    s_, c_ = list(map(int, input().split()))\n    s.append(s_)\n    c.append(c_)\n\nfor i in range(10 ** n):\n    ans = str(i)\n    if len(ans) == n and all([ans[s[j] - 1] == str(c[j]) for j in range(m)]):\n        print(ans)\n        return\n\nprint((-1))\n", "import sys\nimport math\nfrom collections import defaultdict, deque, Counter\nfrom copy import deepcopy\nfrom bisect import bisect, bisect_right, bisect_left\nfrom heapq import heapify, heappop, heappush\n    \ninput = sys.stdin.readline\ndef RD(): return input().rstrip()\ndef F(): return float(input().rstrip())\ndef I(): return int(input().rstrip())\ndef MI(): return map(int, input().split())\ndef MF(): return map(float,input().split())\ndef LI(): return list(map(int, input().split()))\ndef TI(): return tuple(map(int, input().split()))\ndef LF(): return list(map(float,input().split()))\ndef Init(H, W, num): return [[num for i in range(W)] for j in range(H)]\n    \n    \ndef main():\n    N, M = MI()\n    L = [\"-1\"]*N\n    for i in range(M):\n        s, c = MI()\n        s-=1\n        c = str(c)\n        if L[s] == \"-1\":\n            L[s] = c\n        else:\n            if L[s] != c:\n                print(-1)\n                return\n\n    if L[0] == \"0\" and N >= 2:\n        print(-1)\n        return\n    elif (L[0] == \"0\" or L[0] == \"-1\") and N == 1:\n        print(0)\n        return\n    elif L[0] == \"-1\":\n        L[0] = \"1\"\n\n    L = [\"0\" if L[i] == \"-1\" else L[i] for i in range(N)]\n    print(\"\".join(L))\n\n    \ndef __starting_point():\n    main()\n__starting_point()", "n, m = map(int, input().split())\n \ns, c = [], []\nfor _ in range(m):\n  s_, c_ = map(int, input().split())\n  s.append(s_)\n  c.append(c_)\n \nfor i in range(10**n):\n  ans = str(i)\n  if len(ans) == n and all([ans[s[j]-1] == str(c[j]) for j in range(m)]):\n    print(ans)\n    return\n \nprint(-1)", "# coding=utf-8\n\n#lib\n#import copy\n#import collections\nimport sys\n\ndef generate_2d_array(Row, Column, IV):\n    array = [[IV] * Row for i in range(Column)]\n    return array\n\n'''\ndef search_in_2d_array(array, Row, Column, V):\n    cnt = 0\n    for i in range(Column):\n        for j in range(Row):\n            if array[i][j] == V:\n                cnt += 1\n    return cnt\n'''\ndef input_2d_array(Row, Column):\n    array = generate_2d_array(Row, Column, 0)\n\n    for i in range(Column):\n        temp = list(map(int, input().split()))\n        for j in range(Row):\n            array[i][j] = temp[j]\n\n    return array\n\ndef __starting_point():\n    N, M = map(int, input().split())\n\n    sc = input_2d_array(2, M)\n    #print(sc)\n\n    if M == 0 and N != 1:\n        print(10**(N-1))\n        return\n\n    '''if N == 1:\n        flag = True\n        for i in reversed(range(10)):\n            for j in range(M):\n                if i == sc[j][1] and flag:\n                    flag = True\n                else:\n                    flag =False\n\n            if flag == True and M != 0:\n                print(sc[0][1])\n                return\n            else:\n                print(-1)\n                return\n\n        print(0)\n        return'''\n\n    if N == 1:\n        if M > 1:\n            print(-1)\n            return\n        for i in range(10):\n            for j in range(M):\n                if i == sc[j][1]:\n                    print(i)\n                    return\n        print(0)\n        return\n\n    ans = -1\n    flag = True\n    for i in reversed(range(10**(N-1), 10**N)):\n        for j in range(M):\n            temp = str(i)\n            #print('i=',i,'temp=',temp[sc[j][0]-1],'sc=',sc[j][1])\n            if str(sc[j][1]) == temp[sc[j][0]-1] and flag:\n                flag = True\n            else:\n                flag = False\n\n        if flag:\n            ans = int(temp)\n\n        flag =True\n\n    print(ans)\n__starting_point()", "import sys\n\n\ndef LI():\n    return list(map(int, input().split()))\n\n\nN, M = LI()\nans = [-1]*N\nfor _ in range(M):\n    a, b = LI()\n    if ans[a-1] == b or ans[a-1] == -1:\n        ans[a-1] = b\n    else:\n        print((-1))\n        return\nif ans[0] == -1:\n    if N==1:\n        print((0))\n        return\n    ans[0] = 1\nif ans[0] == 0:\n    if N == 1:\n        print((0))\n    else:\n        print((-1))\n    return\nS = \"\"\nfor i in range(N):\n    if ans[i] == -1:\n        ans[i] = 0\n    S += str(ans[i])\nprint(S)\n", "N, M = list(map(int, input().split()))\nSC = [list(map(int, input().split())) for _ in range(M)]\n\ncondition = [False] * N\nans = '-1'\ninvalid = False\n\nfor s, c in SC:\n\tdig = s - 1\n\tif str(condition[dig]) == 'False':\n\t\tcondition[dig] = c\n\telif condition[dig] != c:\n\t\tinvalid = True\n\n# print(invalid)\n\nif str(condition[0]) == '0':\n\tif M > 1:\n\t\tinvalid = True\n\nfor i in range(N):\n\tif str(condition[i]) == 'False':\n\t\tif i == 0:\n\t\t\tcondition[i] = 1\n\t\telse:\n\t\t\tcondition[i] = 0\n# print(condition)\n\nif condition[0] != 0 and not invalid:\n\tans = ''\n\tfor num in condition:\n\t\tans += str(num)\nelif condition[0] == 0 and not invalid and N == 1:\n\tans = ''\n\tfor num in condition:\n\t\tans += str(num)\n\nif M == 0:\n\tif N == 1:\n\t\tans = '0'\n\telse:\n\t\tans = '1'\n\t\tfor i in range(N - 1):\n\t\t\tans += '0'\n\nprint(ans)\n\n\n", "n, m = list(map(int, input().split()))\n\nans = [-1] * n\nfor i in range(m):\n    s, c = list(map(int, input().split()))\n    s -= 1\n    if ans[s] != -1 and ans[s] != c:\n        print((-1))\n        return\n    ans[s] = c\n\nif n > 1 and ans[0] == 0:\n    print((-1))\n    return\n\nif ans[0] == -1:\n    if n == 1:\n        ans[0] = 0\n    else:\n        ans[0] = 1\nfor i in range(1, n):\n    if ans[i] == -1:\n        ans[i] = 0\nprint((''.join(map(str, ans))))\n", "LI = lambda: list(map(int, input().split()))\n\nN, M = LI()\nS, C = [None] * M, [None] * M\nfor i in range(M):\n    S[i], C[i] = LI()\n\n\ndef main():\n    l = [None] * N\n    for s, c in zip(S, C):\n        if l[s - 1] is None:\n            l[s - 1] = c\n        elif l[s - 1] != c:\n            print((-1))\n            return\n    \n    if N > 1 and l[0] == 0:\n        print((-1))\n        return\n    if l[0] is None:\n        l[0] = 0 if N == 1 else 1\n    for i in range(1, N):\n        if l[i] is None:\n            l[i] = 0\n    \n    ans = \"\".join(list(map(str, l)))\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N,M = map(int,input().split())\na = [-1]*N\nans = 0\nfor i in range(M):\n    s,c = map(int,input().split())\n    if a[s-1] == -1:\n        a[s-1] = c\n    elif a[s-1] != c:\n        ans = -1\n        break\nif a[0] == 0 and N>1:\n    ans = -1\nif ans != -1:\n    if a[0] == -1 and N>1:\n        a[0] = 1\n    if a[0] == -1 and N == 1:\n        a[0] = 0\n    for i in range(N):\n        if a[i] == -1:\n            a[i] = 0\n        a[i] = str(a[i])\n    ans = \"\".join(a)\nprint(ans)", "n, m = map(int, input().split())\nsc = [tuple(map(int, input().split())) for j in range(m)]\nfor i in range(10**n):\n    if len(str(i)) == n and all(str(i)[s - 1] == str(c) for s, c in sc):\n        print(i)\n        break\nelse:\n    print(-1)", "# ABC 133 C\n[N, M] = [int(i) for i in input().split()]\ndic = {}\nt = 0\nfor i in range(M):\n    [s, c] = [int(i) for i in input().split()]\n    if s in dic:\n        if dic[s] != c:\n            t += 1\n            break\n    else:\n        dic[s] = c\n\n\nfor i in range(1, N+1):\n    if i not in dic:\n        if i == 1:\n            if N == 1:\n                dic[1] = 0\n            else:\n                dic[1] = 1\n        else:\n            dic[i] = 0\n\nif t == 0:\n    if N == 1:\n        print(dic[1])\n    else:\n        if dic[1] == 0:\n            t += 1\n        else:\n            ans = 0\n            for i in range(1, N+1):\n                ans += dic[i]*10**(N-i)\n            print(ans)\n\nif t != 0:\n    print('-1')", "n,m = map(int,input().split())\ns = []\nc = []\nans = [0] * n\nif n > 1:\n  ans[0] = 1\ncheck = [10] * n\nf = False\nfor _ in range(m):\n  a,b = map(int,input().split())\n  s.append(a)\n  c.append(b)\nfor i in range(m):\n  if n > 1 and s[i] == 1 and c[i] == 0:\n    f = True\n    break\n  if check[s[i]-1] != c[i] and check[s[i]-1] != 10:\n    f = True\n    break\n  ans[s[i]-1] = c[i]\n  check[s[i]-1] = c[i]\nif f:\n  print(\"-1\")\nelse:\n  print(\"\".join([str(a) for a in ans]))", "n, m = map(int, input().split())\nsc = [list(map(int, input().split())) for _ in range(m)]\nstart = 10**(n-1) if n>1 else 0\nfor i in range(start, 1000):\n    count = 0\n    for s, c in sc:\n        if len(str(i))>=s:\n            if int(str(i)[s-1])==c:\n                count += 1\n            else:\n                break\n    if count == m:\n        print(i)\n        return\nprint(-1)", "n,m = map(int, input().split())\nsc = [list(map(int, input().split())) for _ in range(m)]\n\nif n == 1: ans = [\"0\"]\nelse: ans = list(str(10**(n-1)))\ncheck = [0] * n\nfor s,c in sc:\n    s -= 1\n    if check[s] == 0:\n        ans[s] = str(c)\n        check[s] = 1\n    else:\n        if ans[s] == str(c): continue\n        print(-1)\n        return\nif n > 1 and ans[0] == \"0\": print(-1)\nelse:print(\"\".join(ans))", "n,m=map(int,input().split())\nSC = [list(map(int,input().split())) for i in range(m)]\nif n==1:\n  for i in range(10):\n    for sc in SC:\n      if str(i)[sc[0]-1] != str(sc[1]):\n        break\n    else:\n      print(i)\n      return\n  else:\n    print(-1)\nelse:\n  for i in range(10**(n-1),10**(n)):\n    for sc in SC:\n      if str(i)[sc[0]-1] != str(sc[1]):\n        break\n    else:\n      print(i)\n      return\n  else:\n    print(-1)", "N,M=map(int,input().split())\nString=[str(0) for _ in range(N)] #index\u306f0\u304b\u3089\u306b\u6ce8\u610f\nflag=1\nfor _ in range(M):\n    s,c=map(int,input().split())\n    if c!=String[s-1] and String[s-1]!=str(0):\n        flag=0\n    String[s-1]=c\nif String[0]==0:\n    if N!=1:\n        flag=0\nelif String[0]=='0':\n    if N!=1:\n        String[0]=1\nString=list(map(str,String))\nif flag:\n    print(int(''.join(String)))\nelse:\n    print(-1)", "N,M = list(map(int,input().split()))\na = [-1]*N\nans = 0\nfor i in range(M):\n    s,c = list(map(int,input().split()))\n    if a[s-1] == -1:\n        a[s-1] = c\n    elif a[s-1] != c:\n        ans = -1\n        break\nif a[0] == 0 and N>1:\n    ans = -1\nif ans != -1:\n    if a[0] == -1 and N>1:\n        a[0] = 1\n    if a[0] == -1 and N == 1:\n        a[0] = 0\n    for i in range(N):\n        if a[i] == -1:\n            a[i] = 0\n        a[i] = str(a[i])\n    ans = \"\".join(a)\nprint(ans)\n", "N,M=map(int, input().split())\nA=[list(map(int, input().split()))  for _ in range(M)]\nA = sorted(A, reverse=False, key=lambda x: x[0])\n\nif M==0:\n    if N==3:\n        print(100)\n        return\n    elif N==2:\n        print(10)\n        return        \n    elif N==1:\n        print(0)\n        return\n\nif N!=1 and A[0][0]==1 and A[0][1]==0:\n    print(-1)\n    return\ni=1\nj=len(A)\nwhile i<j:\n    if A[i][0]==A[i-1][0] and A[i][1]==A[i-1][1]:\n        A.pop(i)\n        j-=1\n        continue\n    elif A[i][0]==A[i-1][0] and A[i][1]!=A[i-1][1]:\n        print(-1)\n        return\n    i+=1\nans=[None]*N\n\nfor i,j in A:\n    ans[i-1]=j\n\nfor i in range(len(ans)):\n    if ans[i]==None:\n        if i==0:\n            ans[i]=1\n        else:\n            ans[i]=0\n\nprint(''.join(map(str,ans)))", "import sys\n\nn, m = map(int, input().split())\nsc = [list(map(int, input().split())) for _ in range(m)]\nsc = [(s - 1, c) for s, c in sc]\n\nans = [\"x\"] * n\n\nfor s, c in sc:\n    if n > 1 and s == 0 and c == 0:\n        print(-1)\n        return\n    elif ans[s] != \"x\" and ans[s] != c:\n        print(-1)\n        return\n    else:\n        ans[s] = c\n\nif n > 1 and ans[0] == \"x\":\n    ans[0] = 1\n\nfor i in range(n):\n    if ans[i] == \"x\":\n        ans[i] = 0\n\nans = [str(x) for x in ans]\n\nprint(\"\".join(ans))"]