2022-04-22 19:48:32.398844 num operations 2
2022-04-22 19:48:32.398862 size on input set 1
2022-04-22 19:48:32.398996 using api key sunu
2022-04-22 19:48:46.475550 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:  # \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u043c \u043f\u043e \u0432\u0441\u0435\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c \u043c\u0430\u0441\u0441\u0438\u0432\u0430\n    if i == 0:  # \u0435\u0441\u043b\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0440\u0430\u0432\u0435\u043d 0\n        max_rest = max(max_rest, rest)\n        rest = 0  # \u043e\u0431\u043d\u0443\u043b\u044f\u0435\u043c \u0441\u0447\u0435\u0442\u0447\u0438\u043a \u043f\u043e\u0434\u0440\u044f\u0434 \u0438\u0434\u0443\u0449\u0438\u0445 \u0435\u0434\u0438\u043d\u0438\u0446\n    else:  # \u0435\u0441\u043b\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043d\u0435 \u0440\u0430\u0432\u0435\u043d 0\n        rest += 1  # \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u043c \u0441\u0447\u0435\u0442\u0447\u0438\u043a \u043f\u043e\u0434\u0440\u044f\u0434 \u0438\u0434\u0443\u0449\u0438\u0445 \u0435\u0434\u0438\u043d\u0438\u0446\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n"
    }
  ],
  "created": 1650656912,
  "object": "edit"
}
2022-04-22 19:48:46.475829 fix spelling mistakes 3 ['\nn = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n', '\n\nn = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:  # проходим по всем элементам массива\n    if i == 0:  # если элемент равен 0\n        max_rest = max(max_rest, rest)\n        rest = 0  # обнуляем счетчик подряд идущих единиц\n    else:  # если элемент не равен 0\n        rest += 1  # увеличиваем счетчик подряд идущих единиц\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n', '\nn = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n']
2022-04-22 19:48:46.475885 size on output set 2
2022-04-22 19:48:46.475894 size on input set 2
2022-04-22 19:48:46.476038 using api key derek
2022-04-22 19:48:52.901918 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "print(1)\n"
    },
    {
      "index": 1,
      "text": "n = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n"
    },
    {
      "index": 2,
      "text": "n = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n"
    }
  ],
  "created": 1650656926,
  "object": "edit"
}
2022-04-22 19:48:52.902151 fix syntax errors 3 ['print(1)\n', 'n = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n', 'n = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n']
2022-04-22 19:48:52.902386 using api key jaanu
2022-04-22 19:49:03.368771 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:  # \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u043c \u043f\u043e \u0432\u0441\u0435\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c \u043c\u0430\u0441\u0441\u0438\u0432\u0430\n    if i == 0:  # \u0435\u0441\u043b\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0440\u0430\u0432\u0435\u043d 0\n        max_rest = max(max_rest, rest)\n        rest = 0  # \u043e\u0431\u043d\u0443\u043b\u044f\u0435\u043c \u0441\u0447\u0435\u0442\u0447\u0438\u043a \u043f\u043e\u0434\u0440\u044f\u0434 \u0438\u0434\u0443\u0449\u0438\u0445 \u0435\u0434\u0438\u043d\u0438\u0446\n    else:  # \u0435\u0441\u043b\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043d\u0435 \u0440\u0430\u0432\u0435\u043d 0\n        rest += 1  # \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u043c \u0441\u0447\u0435\u0442\u0447\u0438\u043a \u043f\u043e\u0434\u0440\u044f\u0434 \u0438\u0434\u0443\u0449\u0438\u0445 \u0435\u0434\u0438\u043d\u0438\u0446\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n"
    }
  ],
  "created": 1650656932,
  "object": "edit"
}
2022-04-22 19:49:03.369039 fix syntax errors 3 ['\nn = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n', '\nn = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:  # проходим по всем элементам массива\n    if i == 0:  # если элемент равен 0\n        max_rest = max(max_rest, rest)\n        rest = 0  # обнуляем счетчик подряд идущих единиц\n    else:  # если элемент не равен 0\n        rest += 1  # увеличиваем счетчик подряд идущих единиц\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n', '\n\nn = int(input())\na = list(map(int, input().split()))\n\nmax_rest = 0\nrest = 0\n\nfor i in a:\n    if i == 0:\n        max_rest = max(max_rest, rest)\n        rest = 0\n    else:\n        rest += 1\n\nmax_rest = max(max_rest, rest)\nprint(max_rest)\n']
2022-04-22 19:49:03.369088 size on output set 5
2022-04-22 19:49:03.369106 num operations 2
2022-04-22 19:49:03.369114 size on input set 1
2022-04-22 19:49:03.369335 using api key jaanu
2022-04-22 19:49:14.082055 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_len = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_len = max(max_len, length)\n        length = 0\nmax_len = max(max_len, length)\n\n# Add the rest of the 1s\nmax_len += sum(a[:i])\n\nprint(max_length)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n"
    }
  ],
  "created": 1650656943,
  "object": "edit"
}
2022-04-22 19:49:14.082391 fix spelling mistakes 3 ['\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n', '\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_len = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_len = max(max_len, length)\n        length = 0\nmax_len = max(max_len, length)\n\n# Add the rest of the 1s\nmax_len += sum(a[:i])\n\nprint(max_length)\n', '\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n']
2022-04-22 19:49:14.082446 size on output set 2
2022-04-22 19:49:14.082454 size on input set 2
2022-04-22 19:49:14.082622 using api key jaanu
2022-04-22 19:49:23.915439 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the maximum length of 1s\nmax_length = 0\nlength = 0\nfor i in range(n):\n    if a[i] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Print the result\nprint(max_length)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0 index\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s following the first 0\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s to the maximum length\nmax_length += sum(a[:i])\n\nprint(max_length)\n"
    }
  ],
  "created": 1650656954,
  "object": "edit"
}
2022-04-22 19:49:23.915663 fix syntax errors 3 ['\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the maximum length of 1s\nmax_length = 0\nlength = 0\nfor i in range(n):\n    if a[i] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Print the result\nprint(max_length)\n', '\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n', '\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0 index\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s following the first 0\nmax_length = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_length = max(max_length, length)\n        length = 0\nmax_length = max(max_length, length)\n\n# Add the rest of the 1s to the maximum length\nmax_length += sum(a[:i])\n\nprint(max_length)\n']
2022-04-22 19:49:23.915833 using api key soukgp
2022-04-22 19:49:29.306754 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_len = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_len = max(max_len, length)\n        length = 0\nmax_len = max(max_len, length)\n\n# Add the rest of the 1s\nmax_len += sum(a[:i])\n\nprint(max_len)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_len = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_len = max(max_len, length)\n        length = 0\nmax_length = max(max_len, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_len = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_len = max(max_len, length)\n        length = 0\nmax_len = max(max_len, length)\n\n# Add the rest of the 1s\nmax_len += sum(a[:i])\n\nprint(max_len)\n"
    }
  ],
  "created": 1650656963,
  "object": "edit"
}
2022-04-22 19:49:29.306982 fix syntax errors 3 ['\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_len = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_len = max(max_len, length)\n        length = 0\nmax_len = max(max_len, length)\n\n# Add the rest of the 1s\nmax_len += sum(a[:i])\n\nprint(max_len)\n', '\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_len = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_len = max(max_len, length)\n        length = 0\nmax_length = max(max_len, length)\n\n# Add the rest of the 1s\nmax_length += sum(a[:i])\n\nprint(max_length)\n', '\n\nn = int(input())\na = list(map(int, input().split()))\n\n# Find the first 0\ni = 0\nwhile a[i] == 1:\n    i += 1\n\n# Find the maximum length of 1s\nmax_len = 0\nlength = 0\nfor j in range(i, n):\n    if a[j] == 1:\n        length += 1\n    else:\n        max_len = max(max_len, length)\n        length = 0\nmax_len = max(max_len, length)\n\n# Add the rest of the 1s\nmax_len += sum(a[:i])\n\nprint(max_len)\n']
2022-04-22 19:49:29.307017 size on output set 5
