2022-04-22 17:34:48.622960 num operations 2
2022-04-22 17:34:48.622979 size on input set 1
2022-04-22 17:34:48.623148 using api key sunu
2022-04-22 17:34:53.321234 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n#\nimport math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n"
    },
    {
      "index": 2,
      "text": "import math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n"
    }
  ],
  "created": 1650648888,
  "object": "edit"
}
2022-04-22 17:34:53.321541 fix spelling mistakes 3 ['\n#\nimport math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n', '\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n', 'import math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n']
2022-04-22 17:34:53.321573 size on output set 3
2022-04-22 17:34:53.321583 size on input set 3
2022-04-22 17:34:53.321739 using api key soukgp
2022-04-22 17:35:01.448812 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "n = int(input())\nnumbers = list(map(int, input().split()))\n\nfor i in range(n):\n    for j in range(i, n):\n        if numbers[i] > numbers[j]:\n            numbers[i], numbers[j] = numbers[j], numbers[i]\n\nprint(' '.join(map(str, numbers)))\n"
    },
    {
      "index": 1,
      "text": "n = int(input())\nmoves = 0\n\nif n == 0:\n    print(0)\n    exit()\n\nif n == 1:\n    print(0)\n    exit()\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n"
    },
    {
      "index": 2,
      "text": "n = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nfor i in range(n):\n    print(a[i])\n"
    }
  ],
  "created": 1650648893,
  "object": "edit"
}
2022-04-22 17:35:01.449125 fix syntax errors 3 ["n = int(input())\nnumbers = list(map(int, input().split()))\n\nfor i in range(n):\n    for j in range(i, n):\n        if numbers[i] > numbers[j]:\n            numbers[i], numbers[j] = numbers[j], numbers[i]\n\nprint(' '.join(map(str, numbers)))\n", 'n = int(input())\nmoves = 0\n\nif n == 0:\n    print(0)\n    exit()\n\nif n == 1:\n    print(0)\n    exit()\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n', 'n = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nfor i in range(n):\n    print(a[i])\n']
2022-04-22 17:35:01.449385 using api key soukgp
2022-04-22 17:35:06.416853 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit(0)\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\nprint(moves)\n"
    }
  ],
  "created": 1650648901,
  "object": "edit"
}
2022-04-22 17:35:06.417077 fix syntax errors 3 ['\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit(0)\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n', '\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n', '\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\nprint(moves)\n']
2022-04-22 17:35:06.417240 using api key kouti
2022-04-22 17:35:11.049603 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#import math\nimport math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n"
    },
    {
      "index": 2,
      "text": "import math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n"
    }
  ],
  "created": 1650648906,
  "object": "edit"
}
2022-04-22 17:35:11.049816 fix syntax errors 3 ['\n#import math\nimport math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n', '\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n', 'import math\n\nn = int(input())\n\nif n == 1:\n    print(0)\n    exit()\n\nmoves = 0\n\nwhile n > 1:\n    moves += 1\n    if n % 2 == 0:\n        n = n // 2\n    else:\n        n += 1\n\nprint(moves)\n']
2022-04-22 17:35:11.049844 size on output set 8
2022-04-22 17:35:11.049858 num operations 2
2022-04-22 17:35:11.049864 size on input set 1
2022-04-22 17:35:11.050028 using api key derek
2022-04-22 17:35:15.503711 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "def min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650648911,
  "object": "edit"
}
2022-04-22 17:35:15.503951 fix spelling mistakes 3 ["\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n", "def min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-22 17:35:15.504085 size on output set 2
2022-04-22 17:35:15.504094 size on input set 2
2022-04-22 17:35:15.504250 using api key jaanu
2022-04-22 17:35:22.613651 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "def min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    pass\n\n\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "def min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650648915,
  "object": "edit"
}
2022-04-22 17:35:22.613884 fix syntax errors 3 ["def min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    pass\n\n\n\n\nif __name__ == '__main__':\n    main()\n", "def min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-22 17:35:22.614045 using api key jaanu
2022-04-22 17:35:31.753150 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "def min_moves(n):\n    x, y = 0, 0\n    moves = 0\n    while True:\n        moves += 1\n        if n == (x + 1) * (y + 1):\n            return moves\n        elif n < (x + 1) * (y + 1):\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "def min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\ndef min_moves_2(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "def main():\n    # n = int(input())\n    # print(min_moves(n))\n    pass\n\n\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while n != x * y:\n        moves += 1\n        if n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n    return moves\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650648922,
  "object": "edit"
}
2022-04-22 17:35:31.753408 fix syntax errors 3 ["def min_moves(n):\n    x, y = 0, 0\n    moves = 0\n    while True:\n        moves += 1\n        if n == (x + 1) * (y + 1):\n            return moves\n        elif n < (x + 1) * (y + 1):\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n", "def min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\ndef min_moves_2(n):\n    x, y = 1, 1\n    moves = 0\n    while True:\n        moves += 1\n        if n == x * y:\n            return moves\n        elif n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n\n\n\n\ndef main():\n    n = int(input())\n    print(min_moves(n))\n\n\nif __name__ == '__main__':\n    main()\n", "def main():\n    # n = int(input())\n    # print(min_moves(n))\n    pass\n\n\ndef min_moves(n):\n    x, y = 1, 1\n    moves = 0\n    while n != x * y:\n        moves += 1\n        if n < x * y:\n            y -= 1\n            x += 1\n        else:\n            x += 1\n    return moves\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-22 17:35:31.753444 size on output set 5
