2022-04-22 17:36:11.756232 num operations 2
2022-04-22 17:36:11.756250 size on input set 1
2022-04-22 17:36:11.756409 using api key soukgp
2022-04-22 17:36:24.208159 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sum = [0]\n    for i in a:\n        sum.append(sum[-1] + i)\n    sum.append(sum[-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sum[j] - sum[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0] # \u043c\u0430\u0441\u0441\u0438\u0432 \u0441\u0443\u043c\u043c \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u043e\u0432\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = [] # \u043c\u0430\u0441\u0441\u0438\u0432 \u0431\u043b\u043e\u043a\u043e\u0432\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2]) # \u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u043f\u043e \u0441\u0443\u043c\u043c\u0435\n    blocks.sort(key=lambda x: x[1]) # \u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u043f\u043e \u043f\u0440\u0430\u0432\u043e\u0439 \u0433\u0440\u0430\u043d\u0438\u0446\u0435\n    res = [] # \u043c\u0430\u0441\u0441\u0438\u0432 \u043e\u0442\u0432\u0435\u0442\u0430\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j]) # \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0431\u043b\u043e\u043a \u0432 \u043e\u0442\u0432\u0435\u0442\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k) # \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u0432\u0441\u0435 \u0431\u043b\u043e\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0435\u0440\u0435\u0441\u0435\u043a\u0430\u044e\u0442\u0441\u044f \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n"
    }
  ],
  "created": 1650648971,
  "object": "edit"
}
2022-04-22 17:36:24.208449 fix spelling mistakes 3 ['\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n', '\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sum = [0]\n    for i in a:\n        sum.append(sum[-1] + i)\n    sum.append(sum[-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sum[j] - sum[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n', '\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0] # массив сумм префиксов\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = [] # массив блоков\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2]) # сортируем по сумме\n    blocks.sort(key=lambda x: x[1]) # сортируем по правой границе\n    res = [] # массив ответа\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j]) # добавляем блок в ответ\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k) # удаляем все блоки, которые пересекаются с текущим\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n']
2022-04-22 17:36:24.208525 size on output set 3
2022-04-22 17:36:24.208533 size on input set 3
2022-04-22 17:36:24.208684 using api key kouti
2022-04-22 17:36:29.813144 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sum = [0]\n    for i in a:\n        sum.append(sum[-1] + i)\n    sum.append(sum[-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sum[j] - sum[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sum = [0]\n    for i in a:\n        sum.append(sum[-1] + i)\n    sum.append(sum[-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            blocks.append([i, j, sum[j] - sum[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sum = [0]\n    for i in a:\n        sum.append(sum[-1] + i)\n    sum.append(sum[-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sum[j] - sum[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1], end=' ')\n    print()\n\nmain()\n"
    }
  ],
  "created": 1650648984,
  "object": "edit"
}
2022-04-22 17:36:29.813566 fix syntax errors 3 ['\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sum = [0]\n    for i in a:\n        sum.append(sum[-1] + i)\n    sum.append(sum[-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sum[j] - sum[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n', '\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sum = [0]\n    for i in a:\n        sum.append(sum[-1] + i)\n    sum.append(sum[-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            blocks.append([i, j, sum[j] - sum[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n', "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sum = [0]\n    for i in a:\n        sum.append(sum[-1] + i)\n    sum.append(sum[-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sum[j] - sum[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1], end=' ')\n    print()\n\nmain()\n"]
2022-04-22 17:36:29.813752 using api key soukgp
2022-04-22 17:36:46.715323 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]  # \u043c\u0430\u0441\u0441\u0438\u0432 \u0441\u0443\u043c\u043c \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u043e\u0432\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []  # \u043c\u0430\u0441\u0441\u0438\u0432 \u0431\u043b\u043e\u043a\u043e\u0432\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])  # \u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u043f\u043e \u0441\u0443\u043c\u043c\u0435\n    blocks.sort(key=lambda x: x[1])  # \u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u043f\u043e \u043f\u0440\u0430\u0432\u043e\u0439 \u0433\u0440\u0430\u043d\u0438\u0446\u0435\n    res = []  # \u043c\u0430\u0441\u0441\u0438\u0432 \u043e\u0442\u0432\u0435\u0442\u0430\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])  # \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0431\u043b\u043e\u043a \u0432 \u043e\u0442\u0432\u0435\u0442\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)  # \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u0432\u0441\u0435 \u0431\u043b\u043e\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0435\u0440\u0435\u0441\u0435\u043a\u0430\u044e\u0442\u0441\u044f \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]  # \u043c\u0430\u0441\u0441\u0438\u0432 \u0441\u0443\u043c\u043c \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u043e\u0432\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []  # \u043c\u0430\u0441\u0441\u0438\u0432 \u0431\u043b\u043e\u043a\u043e\u0432\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])  # \u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u043f\u043e \u0441\u0443\u043c\u043c\u0435\n    blocks.sort(key=lambda x: x[1])  # \u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u043f\u043e \u043f\u0440\u0430\u0432\u043e\u0439 \u0433\u0440\u0430\u043d\u0438\u0446\u0435\n    res = []  # \u043c\u0430\u0441\u0441\u0438\u0432 \u043e\u0442\u0432\u0435\u0442\u0430\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])  # \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0431\u043b\u043e\u043a \u0432 \u043e\u0442\u0432\u0435\u0442\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)  # \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u0432\u0441\u0435 \u0431\u043b\u043e\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0435\u0440\u0435\u0441\u0435\u043a\u0430\u044e\u0442\u0441\u044f \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]  # \u043c\u0430\u0441\u0441\u0438\u0432 \u0441\u0443\u043c\u043c \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u043e\u0432\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []  # \u043c\u0430\u0441\u0441\u0438\u0432 \u0431\u043b\u043e\u043a\u043e\u0432\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])  # \u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u043f\u043e \u0441\u0443\u043c\u043c\u0435\n    blocks.sort(key=lambda x: x[1])  # \u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u043f\u043e \u043f\u0440\u0430\u0432\u043e\u0439 \u0433\u0440\u0430\u043d\u0438\u0446\u0435\n    res = []  # \u043c\u0430\u0441\u0441\u0438\u0432 \u043e\u0442\u0432\u0435\u0442\u0430\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])  # \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0431\u043b\u043e\u043a \u0432 \u043e\u0442\u0432\u0435\u0442\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)  # \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u0432\u0441\u0435 \u0431\u043b\u043e\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0435\u0440\u0435\u0441\u0435\u043a\u0430\u044e\u0442\u0441\u044f \u0441 \u0442\u0435\u043a\u0443\u0449\u0438\u043c\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n"
    }
  ],
  "created": 1650648989,
  "object": "edit"
}
2022-04-22 17:36:46.715596 fix syntax errors 3 ['\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]  # массив сумм префиксов\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []  # массив блоков\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])  # сортируем по сумме\n    blocks.sort(key=lambda x: x[1])  # сортируем по правой границе\n    res = []  # массив ответа\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])  # добавляем блок в ответ\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)  # удаляем все блоки, которые пересекаются с текущим\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\n\nmain()\n', '\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]  # массив сумм префиксов\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []  # массив блоков\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])  # сортируем по сумме\n    blocks.sort(key=lambda x: x[1])  # сортируем по правой границе\n    res = []  # массив ответа\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])  # добавляем блок в ответ\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)  # удаляем все блоки, которые пересекаются с текущим\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n', '\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]  # массив сумм префиксов\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []  # массив блоков\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])  # сортируем по сумме\n    blocks.sort(key=lambda x: x[1])  # сортируем по правой границе\n    res = []  # массив ответа\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])  # добавляем блок в ответ\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)  # удаляем все блоки, которые пересекаются с текущим\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n']
2022-04-22 17:36:46.715928 using api key soukgp
2022-04-22 17:36:57.750193 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "def main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]\n    for i in a:\n        sums.append(sums[-1] + i)\n    blocks = []\n    for i in range(n+1):\n        for j in range(i+1, n+2):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: (x[2], x[1]))\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0] + list(accumulate(a)) + [sums[-1]]\n    blocks = []\n    for i in range(n+1):\n        for j in range(i+1, n+2):\n            blocks.append((i, j, sums[j] - sums[i]))\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = set()\n    for i, j, _ in blocks:\n        res.add((i, j))\n        for k in range(n+1):\n            if k < j:\n                res.add((i, k))\n    print(len(list(res)))\n    for i, j in res:\n        print(i + 1, j)\n\nmain()\n"
    }
  ],
  "created": 1650649006,
  "object": "edit"
}
2022-04-22 17:36:57.750482 fix syntax errors 3 ['def main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]\n    for i in a:\n        sums.append(sums[-1] + i)\n    sums.append(sums[-1])\n    blocks = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n', '\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0]\n    for i in a:\n        sums.append(sums[-1] + i)\n    blocks = []\n    for i in range(n+1):\n        for j in range(i+1, n+2):\n            blocks.append([i, j, sums[j] - sums[i]])\n    blocks.sort(key=lambda x: (x[2], x[1]))\n    res = []\n    while len(blocks) > 0:\n        i = blocks[0][0]\n        j = blocks[0][1]\n        blocks.pop(0)\n        res.append([i, j])\n        for k in range(len(blocks)):\n            if blocks[k][0] < j:\n                blocks.pop(k)\n                k -= 1\n    print(len(res))\n    for i in res:\n        print(i[0] + 1, i[1])\n\nmain()\n', '\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    sums = [0] + list(accumulate(a)) + [sums[-1]]\n    blocks = []\n    for i in range(n+1):\n        for j in range(i+1, n+2):\n            blocks.append((i, j, sums[j] - sums[i]))\n    blocks.sort(key=lambda x: x[2])\n    blocks.sort(key=lambda x: x[1])\n    res = set()\n    for i, j, _ in blocks:\n        res.add((i, j))\n        for k in range(n+1):\n            if k < j:\n                res.add((i, k))\n    print(len(list(res)))\n    for i, j in res:\n        print(i + 1, j)\n\nmain()\n']
2022-04-22 17:36:57.750527 size on output set 8
2022-04-22 17:36:57.750542 num operations 2
2022-04-22 17:36:57.750549 size on input set 1
2022-04-22 17:36:57.750693 using api key sunu
2022-04-22 17:37:09.564624 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef find_blocks(a):\n    n = len(a)\n    d = {}\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j+1])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j+1])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\ndef main():\n    n = int(input(\"Enter the number of elements: \"))\n    a = [int(s) for s in input(\"Enter the elements: \").split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef find_blocks(a): \n    n = len(a)\n    d = {}\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j+1])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j+1])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef find_blocks(a, b):\n    n = len(a)\n    d = {0: [(0, 0)]}\n    for i in range(n):\n        for j in range(i+1, n+1):\n            s = sum(a[i:j])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            s = sum(a[i:j])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650649017,
  "object": "edit"
}
2022-04-22 17:37:09.564922 fix spelling mistakes 3 ['\n\ndef find_blocks(a):\n    n = len(a)\n    d = {}\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j+1])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j+1])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\ndef main():\n    n = int(input("Enter the number of elements: "))\n    a = [int(s) for s in input("Enter the elements: ").split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef find_blocks(a): \n    n = len(a)\n    d = {}\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j+1])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j+1])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef find_blocks(a, b):\n    n = len(a)\n    d = {0: [(0, 0)]}\n    for i in range(n):\n        for j in range(i+1, n+1):\n            s = sum(a[i:j])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            s = sum(a[i:j])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-22 17:37:09.565058 size on output set 3
2022-04-22 17:37:09.565067 size on input set 3
2022-04-22 17:37:09.565208 using api key kouti
2022-04-22 17:37:16.525512 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef find_blocks(a):\n    n = len(a)\n    d = {0: [(0, 0)]}\n    for i in range(n):\n        for j in range(i+1, n+1):\n            s = sum(a[i:j])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            s = sum(a[i:j])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef find_blocks(a):\n    n = len(a)\n    d = {0: [(0, 0)]}\n    for i in range(n):\n        for j in range(i+1, n+1):\n            s = sum(a[i:j])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            s = sum(a[i:j])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef find_blocks(a):\n    n = len(a)\n    d = {0: [(0, 0)]}\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            s = sum(a[i:j])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            s = sum(a[i:j])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l + 1, r + 1)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650649029,
  "object": "edit"
}
2022-04-22 17:37:16.525761 fix syntax errors 3 ['\n\ndef find_blocks(a):\n    n = len(a)\n    d = {0: [(0, 0)]}\n    for i in range(n):\n        for j in range(i+1, n+1):\n            s = sum(a[i:j])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            s = sum(a[i:j])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef find_blocks(a):\n    n = len(a)\n    d = {0: [(0, 0)]}\n    for i in range(n):\n        for j in range(i+1, n+1):\n            s = sum(a[i:j])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i+1, n+1):\n            s = sum(a[i:j])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef find_blocks(a):\n    n = len(a)\n    d = {0: [(0, 0)]}\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            s = sum(a[i:j])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            s = sum(a[i:j])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l + 1, r + 1)\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-22 17:37:16.525995 using api key jaanu
2022-04-22 17:37:24.192343 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef find_blocks(a):\n    n = len(a)\n    d = {}\n    for i in range(n):\n        for j in range(i, n+1):\n            s = sum(a[i:j])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i, n+1):\n            s = sum(a[i:j])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l, r)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef find_blocks(a):\n    n = len(a)\n    d = {}\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j+1])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j+1])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef find_blocks(a):\n    n = len(a)\n    d = {}\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j+1])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j+1])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650649036,
  "object": "edit"
}
2022-04-22 17:37:24.192573 fix syntax errors 3 ['\n\ndef find_blocks(a):\n    n = len(a)\n    d = {}\n    for i in range(n):\n        for j in range(i, n+1):\n            s = sum(a[i:j])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i, n+1):\n            s = sum(a[i:j])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l, r)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef find_blocks(a):\n    n = len(a)\n    d = {}\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j+1])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j+1])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef find_blocks(a):\n    n = len(a)\n    d = {}\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j+1])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j+1])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\ndef main():\n    n = int(input())\n    a = [int(s) for s in input().split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-22 17:37:24.192905 using api key derek
2022-04-22 17:37:40.535639 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef find_blocks(a):\n    n = len(a)\n    d = {}\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j + 1])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j + 1])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\n\ndef main():\n    n = int(input(\"Enter the number of elements: \"))\n    a = [int(s) for s in input(\"Enter the elements: \").split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef find_blocks(a, s):\n    n = len(a) \n    d = {} \n    for i in range(n): \n        for j in range(i, n): \n            sum_ = sum(a[i:j+1]) \n            if sum_ not in d: \n                d[sum_] = [(i, j)] \n            else: \n                d[sum_].append((i, j)) \n    res = [] \n    for i in range(n): \n        for j in range(i, n): \n            sum_ = sum(a[i:j+1]) \n            if sum_ in d: \n                for l, r in d[sum_]: \n                    if l > j or r < i: \n                        if sum_ == s: \n                            res.append((i, j)) \n    return res \n\ndef main():\n    n = int(input(\"Enter the number of elements: \")) \n    a = [int(s) for s in input(\"Enter the elements: \").split()] \n    s = int(input(\"Enter the sum: \")) \n    res = find_blocks(a, s) \n    print(len(res)) \n    for l, r in res: \n        print(l+1, r+1) \n\nif __name__ == \"__main__\": \n    main() \n"
    },
    {
      "index": 2,
      "text": "\n\ndef find_blocks(a, n):\n    s = sum(a)\n    if s % n != 0:\n        return -1\n    s //= n\n    l = 0\n    r = 0\n    cur = 0\n    res = 0\n    while r < n:\n        if cur < s:\n            cur += a[r]\n            r += 1\n        else:\n            cur -= a[l]\n            l += 1\n        if cur == s:\n            res += 1\n    return res\n\ndef main():\n    n = int(input(\"Enter the number of elements: \"))\n    a = [int(s) for s in input(\"Enter the elements: \").split()]\n    print(find_blocks(a, n))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650649044,
  "object": "edit"
}
2022-04-22 17:37:40.535883 fix syntax errors 3 ['\ndef find_blocks(a):\n    n = len(a)\n    d = {}\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j + 1])\n            if s not in d:\n                d[s] = [(i, j)]\n            else:\n                d[s].append((i, j))\n    res = []\n    for i in range(n):\n        for j in range(i, n):\n            s = sum(a[i:j + 1])\n            if s in d:\n                for l, r in d[s]:\n                    if l > j or r < i:\n                        res.append((i, j))\n    return res\n\n\ndef main():\n    n = int(input("Enter the number of elements: "))\n    a = [int(s) for s in input("Enter the elements: ").split()]\n    res = find_blocks(a)\n    print(len(res))\n    for l, r in res:\n        print(l+1, r+1)\n\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef find_blocks(a, s):\n    n = len(a) \n    d = {} \n    for i in range(n): \n        for j in range(i, n): \n            sum_ = sum(a[i:j+1]) \n            if sum_ not in d: \n                d[sum_] = [(i, j)] \n            else: \n                d[sum_].append((i, j)) \n    res = [] \n    for i in range(n): \n        for j in range(i, n): \n            sum_ = sum(a[i:j+1]) \n            if sum_ in d: \n                for l, r in d[sum_]: \n                    if l > j or r < i: \n                        if sum_ == s: \n                            res.append((i, j)) \n    return res \n\ndef main():\n    n = int(input("Enter the number of elements: ")) \n    a = [int(s) for s in input("Enter the elements: ").split()] \n    s = int(input("Enter the sum: ")) \n    res = find_blocks(a, s) \n    print(len(res)) \n    for l, r in res: \n        print(l+1, r+1) \n\nif __name__ == "__main__": \n    main() \n', '\n\ndef find_blocks(a, n):\n    s = sum(a)\n    if s % n != 0:\n        return -1\n    s //= n\n    l = 0\n    r = 0\n    cur = 0\n    res = 0\n    while r < n:\n        if cur < s:\n            cur += a[r]\n            r += 1\n        else:\n            cur -= a[l]\n            l += 1\n        if cur == s:\n            res += 1\n    return res\n\ndef main():\n    n = int(input("Enter the number of elements: "))\n    a = [int(s) for s in input("Enter the elements: ").split()]\n    print(find_blocks(a, n))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-22 17:37:40.535932 size on output set 7
