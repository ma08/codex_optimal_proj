2022-04-22 16:59:49.811321 num operations 2
2022-04-22 16:59:49.811342 size on input set 1
2022-04-22 16:59:49.811521 using api key derek
2022-04-22 16:59:57.989354 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(a, b):\n    if a == b:\n        return 0\n    if a > b:\n        return -1\n    if b % a != 0:\n        return -1\n    return solve(a * 2, b) + 1 if b % (a * 2) == 0 else solve(a * 3, b) + 1\n\n\nif __name__ == '__main__':\n    a, b = get_input()\n    print(solve(a, b))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(n, m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if m % n != 0 or m == 0:\n        return -1\n    return solve(n * 2, m) + 1 if m % (n * 2) == 0 else solve(n * 3, m) + 1\n\n\nif __name__ == '__main__':\n    n, m = get_input()\n    print(solve(n, m))\n"
    },
    {
      "index": 2,
      "text": "\n\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(n):\n    if n % 2 == 0:\n        return solve(n // 2)\n    if n % 3 == 0:\n        return solve(n // 3)\n    if n % 5 == 0:\n        return solve(n // 5)\n    return n == 1\n\n\nif __name__ == '__main__':\n    n = get_input()[0]\n    print('YES' if solve(n) else 'NO')\n"
    }
  ],
  "created": 1650646789,
  "object": "edit"
}
2022-04-22 16:59:57.989641 fix spelling mistakes 3 ["\n\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(a, b):\n    if a == b:\n        return 0\n    if a > b:\n        return -1\n    if b % a != 0:\n        return -1\n    return solve(a * 2, b) + 1 if b % (a * 2) == 0 else solve(a * 3, b) + 1\n\n\nif __name__ == '__main__':\n    a, b = get_input()\n    print(solve(a, b))\n", "\n\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(n, m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if m % n != 0 or m == 0:\n        return -1\n    return solve(n * 2, m) + 1 if m % (n * 2) == 0 else solve(n * 3, m) + 1\n\n\nif __name__ == '__main__':\n    n, m = get_input()\n    print(solve(n, m))\n", "\n\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(n):\n    if n % 2 == 0:\n        return solve(n // 2)\n    if n % 3 == 0:\n        return solve(n // 3)\n    if n % 5 == 0:\n        return solve(n // 5)\n    return n == 1\n\n\nif __name__ == '__main__':\n    n = get_input()[0]\n    print('YES' if solve(n) else 'NO')\n"]
2022-04-22 16:59:57.989675 size on output set 3
2022-04-22 16:59:57.989682 size on input set 3
2022-04-22 16:59:57.989817 using api key kouti
2022-04-22 17:00:03.004764 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(n, m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if m % n != 0 or m == 0:\n        return -1\n    return solve(n * 2, m) + 1 if m % (n * 2) == 0 else solve(n * 3, m) + 1\n\n\nif __name__ == '__main__':\n    n, m = get_input()\n    print(solve(n, m))\n"
    },
    {
      "index": 1,
      "text": "\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(n, m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if m % n != 0 or m == 0:\n        return -1\n    return solve(n * 2, m) + 1 if m % (n * 2) == 0 else solve(n * 3, m) + 1\n\n\nif __name__ == '__main__':\n    n, m = get_input()\n    print(solve(n, m))\n"
    },
    {
      "index": 2,
      "text": "\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(n, m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if m % n != 0 or m == 0 or m == n:\n        return -1\n    return solve(n * 2, m) + 1 if m % (n * 2) == 0 else solve(n * 3, m) + 1\n\n\nif __name__ == '__main__':\n    n, m = get_input()\n    print(solve(n, m))\n"
    }
  ],
  "created": 1650646798,
  "object": "edit"
}
2022-04-22 17:00:03.004996 fix syntax errors 3 ["\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(n, m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if m % n != 0 or m == 0:\n        return -1\n    return solve(n * 2, m) + 1 if m % (n * 2) == 0 else solve(n * 3, m) + 1\n\n\nif __name__ == '__main__':\n    n, m = get_input()\n    print(solve(n, m))\n", "\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(n, m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if m % n != 0 or m == 0:\n        return -1\n    return solve(n * 2, m) + 1 if m % (n * 2) == 0 else solve(n * 3, m) + 1\n\n\nif __name__ == '__main__':\n    n, m = get_input()\n    print(solve(n, m))\n", "\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(n, m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if m % n != 0 or m == 0 or m == n:\n        return -1\n    return solve(n * 2, m) + 1 if m % (n * 2) == 0 else solve(n * 3, m) + 1\n\n\nif __name__ == '__main__':\n    n, m = get_input()\n    print(solve(n, m))\n"]
2022-04-22 17:00:03.005219 using api key soukgp
2022-04-22 17:00:08.175732 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(n):\n    if n % 2 == 0:\n        return solve(n // 2)\n    if n % 3 == 0:\n        return solve(n // 3)\n    if n % 5 == 0:\n        return solve(n // 5)\n    return n == 1\n\n\nif __name__ == '__main__':\n    n = get_input()[0]\n    print('YES' if solve(n) else 'NO')\n"
    },
    {
      "index": 1,
      "text": "\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(n):\n    if n % 2 == 0:\n        return solve(n // 2)\n    if n % 3 == 0:\n        return solve(n // 3)\n    if n % 5 == 0:\n        return solve(n // 5)\n    return n == 1\n\n\nif __name__ == '__main__':\n    n = get_input()[0]\n    print('YES' if solve(n) else 'NO')\n"
    },
    {
      "index": 2,
      "text": "\n\ndef get_input():\n    return int(input())\n\n\ndef solve(n):\n    if n % 2 == 0:\n        return solve(n // 2)\n    if n % 3 == 0:\n        return solve(n // 3)\n    if n % 5 == 0:\n        return solve(n // 5)\n    return n == 1\n\n\nif __name__ == '__main__':\n    n = get_input()\n    print('YES' if solve(n) else 'NO')\n"
    }
  ],
  "created": 1650646803,
  "object": "edit"
}
2022-04-22 17:00:08.175970 fix syntax errors 3 ["\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(n):\n    if n % 2 == 0:\n        return solve(n // 2)\n    if n % 3 == 0:\n        return solve(n // 3)\n    if n % 5 == 0:\n        return solve(n // 5)\n    return n == 1\n\n\nif __name__ == '__main__':\n    n = get_input()[0]\n    print('YES' if solve(n) else 'NO')\n", "\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(n):\n    if n % 2 == 0:\n        return solve(n // 2)\n    if n % 3 == 0:\n        return solve(n // 3)\n    if n % 5 == 0:\n        return solve(n // 5)\n    return n == 1\n\n\nif __name__ == '__main__':\n    n = get_input()[0]\n    print('YES' if solve(n) else 'NO')\n", "\n\ndef get_input():\n    return int(input())\n\n\ndef solve(n):\n    if n % 2 == 0:\n        return solve(n // 2)\n    if n % 3 == 0:\n        return solve(n // 3)\n    if n % 5 == 0:\n        return solve(n // 5)\n    return n == 1\n\n\nif __name__ == '__main__':\n    n = get_input()\n    print('YES' if solve(n) else 'NO')\n"]
2022-04-22 17:00:08.176148 using api key soukgp
2022-04-22 17:00:12.574272 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(a, b):\n    if a == b:\n        return 0\n    if a > b:\n        return -1\n    if b % a != 0:\n        return -1\n    return solve(a * 2, b) + 1 if b % (a * 2) == 0 else solve(a * 3, b) + 1\n\n\nif __name__ == '__main__':\n    a, b = get_input()\n    print(solve(a, b))\n"
    },
    {
      "index": 1,
      "text": "\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(a, b):\n    if a == b:\n        return 0\n    if a > b:\n        return -1\n    if b % a != 0:\n        return -1\n    return solve(a * 2, b) + 1 if b % (a * 2) == 0 else solve(a * 3, b) + 1\n\n\nif __name__ == '__main__':\n    a, b = get_input()\n    print(solve(a, b))\n"
    },
    {
      "index": 2,
      "text": "\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(a, b):\n    if a == b:\n        return 0\n    if a > b:\n        return -1\n    if b % a != 0:\n        return -1\n    return solve(a * 2, b) + 1 if b % (a * 2) == 0 else solve(a * 3, b) + 1\n\n\nif __name__ == '__main__':\n    a, b = get_input()\n    print(solve(a, b))\n"
    }
  ],
  "created": 1650646808,
  "object": "edit"
}
2022-04-22 17:00:12.574622 fix syntax errors 3 ["\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(a, b):\n    if a == b:\n        return 0\n    if a > b:\n        return -1\n    if b % a != 0:\n        return -1\n    return solve(a * 2, b) + 1 if b % (a * 2) == 0 else solve(a * 3, b) + 1\n\n\nif __name__ == '__main__':\n    a, b = get_input()\n    print(solve(a, b))\n", "\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(a, b):\n    if a == b:\n        return 0\n    if a > b:\n        return -1\n    if b % a != 0:\n        return -1\n    return solve(a * 2, b) + 1 if b % (a * 2) == 0 else solve(a * 3, b) + 1\n\n\nif __name__ == '__main__':\n    a, b = get_input()\n    print(solve(a, b))\n", "\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(a, b):\n    if a == b:\n        return 0\n    if a > b:\n        return -1\n    if b % a != 0:\n        return -1\n    return solve(a * 2, b) + 1 if b % (a * 2) == 0 else solve(a * 3, b) + 1\n\n\nif __name__ == '__main__':\n    a, b = get_input()\n    print(solve(a, b))\n"]
2022-04-22 17:00:12.574658 size on output set 5
2022-04-22 17:00:12.574670 num operations 2
2022-04-22 17:00:12.574676 size on input set 1
2022-04-22 17:00:12.574821 using api key jaanu
2022-04-22 17:00:19.251944 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#-----Solution-----\n\n#This is a greedy algorithm\n#The idea is to greedily multiply by 3 until the number is greater than m\n#Then, multiply by 2 as many times as possible, until the number is greater than m\n#If the number is not m, then the answer is -1\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n"
    },
    {
      "index": 1,
      "text": "\n\n#-----Solution-----\n\n#This is a greedy algorithm.\n#The idea is to greedily multiply by 3 until the number is greater than m.\n#Then, multiply by 2 as many times as possible until the number is greater than m.\n#If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n"
    },
    {
      "index": 2,
      "text": "\n\n#-----Solution-----\n\n#This is a greedy algorithm.\n#The idea is to greedily multiply by 3 until the number is greater than m.\n#Then, multiply by 2 as many times as possible, until the number is greater than m.\n#If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1: #If m is even and n is odd, then it is impossible to get m from n.\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n"
    }
  ],
  "created": 1650646812,
  "object": "edit"
}
2022-04-22 17:00:19.252174 fix spelling mistakes 3 ['\n\n#-----Solution-----\n\n#This is a greedy algorithm\n#The idea is to greedily multiply by 3 until the number is greater than m\n#Then, multiply by 2 as many times as possible, until the number is greater than m\n#If the number is not m, then the answer is -1\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n', '\n\n#-----Solution-----\n\n#This is a greedy algorithm.\n#The idea is to greedily multiply by 3 until the number is greater than m.\n#Then, multiply by 2 as many times as possible until the number is greater than m.\n#If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n', '\n\n#-----Solution-----\n\n#This is a greedy algorithm.\n#The idea is to greedily multiply by 3 until the number is greater than m.\n#Then, multiply by 2 as many times as possible, until the number is greater than m.\n#If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1: #If m is even and n is odd, then it is impossible to get m from n.\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n']
2022-04-22 17:00:19.252215 size on output set 3
2022-04-22 17:00:19.252222 size on input set 3
2022-04-22 17:00:19.252388 using api key soukgp
2022-04-22 17:00:24.073671 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#-----Solution-----\n\n#This is a greedy algorithm.\n#The idea is to greedily multiply by 3 until the number is greater than m.\n#Then, multiply by 2 as many times as possible, until the number is greater than m.\n#If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1: #If m is even and n is odd, then it is impossible to get m from n.\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n"
    },
    {
      "index": 1,
      "text": "\n#!/bin/python3\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n#-----Solution-----\n\n#This is a greedy algorithm.\n#The idea is to greedily multiply by 3 until the number is greater than m.\n#Then, multiply by 2 as many times as possible, until the number is greater than m.\n#If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1: #If m is even and n is odd, then it is impossible to get m from n.\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n"
    },
    {
      "index": 2,
      "text": "\n#-----Solution-----\n\n#This is a greedy algorithm.\n#The idea is to greedily multiply by 3 until the number is greater than m.\n#Then, multiply by 2 as many times as possible, until the number is greater than m.\n#If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1: #If m is even and n is odd, then it is impossible to get m from n.\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n"
    }
  ],
  "created": 1650646819,
  "object": "edit"
}
2022-04-22 17:00:24.073926 fix syntax errors 3 ['\n#-----Solution-----\n\n#This is a greedy algorithm.\n#The idea is to greedily multiply by 3 until the number is greater than m.\n#Then, multiply by 2 as many times as possible, until the number is greater than m.\n#If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1: #If m is even and n is odd, then it is impossible to get m from n.\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n', '\n#!/bin/python3\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n#-----Solution-----\n\n#This is a greedy algorithm.\n#The idea is to greedily multiply by 3 until the number is greater than m.\n#Then, multiply by 2 as many times as possible, until the number is greater than m.\n#If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1: #If m is even and n is odd, then it is impossible to get m from n.\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n', '\n#-----Solution-----\n\n#This is a greedy algorithm.\n#The idea is to greedily multiply by 3 until the number is greater than m.\n#Then, multiply by 2 as many times as possible, until the number is greater than m.\n#If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1: #If m is even and n is odd, then it is impossible to get m from n.\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n']
2022-04-22 17:00:24.074186 using api key jaanu
2022-04-22 17:00:30.566110 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#-----Solution-----\n\n# This is a greedy algorithm\n# The idea is to greedily multiply by 3 until the number is greater than m\n# Then, multiply by 2 as many times as possible, until the number is greater than m\n# If the number is not m, then the answer is -1\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n"
    },
    {
      "index": 1,
      "text": "\n#-----Solution-----\n\n#This is a greedy algorithm\n#The idea is to greedily multiply by 3 until the number is greater than m\n#Then, multiply by 2 as many times as possible, until the number is greater than m\n#If the number is not m, then the answer is -1\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n"
    },
    {
      "index": 2,
      "text": "\n#-----Solution-----\n\n#This is a greedy algorithm\n#The idea is to greedily multiply by 3 until the number is greater than m\n#Then, multiply by 2 as many times as possible, until the number is greater than m\n#If the number is not m, then the answer is -1\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n"
    }
  ],
  "created": 1650646824,
  "object": "edit"
}
2022-04-22 17:00:30.566398 fix syntax errors 3 ['\n#-----Solution-----\n\n# This is a greedy algorithm\n# The idea is to greedily multiply by 3 until the number is greater than m\n# Then, multiply by 2 as many times as possible, until the number is greater than m\n# If the number is not m, then the answer is -1\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n', '\n#-----Solution-----\n\n#This is a greedy algorithm\n#The idea is to greedily multiply by 3 until the number is greater than m\n#Then, multiply by 2 as many times as possible, until the number is greater than m\n#If the number is not m, then the answer is -1\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n', '\n#-----Solution-----\n\n#This is a greedy algorithm\n#The idea is to greedily multiply by 3 until the number is greater than m\n#Then, multiply by 2 as many times as possible, until the number is greater than m\n#If the number is not m, then the answer is -1\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n']
2022-04-22 17:00:30.566569 using api key sunu
2022-04-22 17:00:35.138696 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#!/bin/python3\n#-----Solution-----\n\n#This is a greedy algorithm.\n#The idea is to greedily multiply by 3 until the number is greater than m.\n#Then, multiply by 2 as many times as possible until the number is greater than m.\n#If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n"
    },
    {
      "index": 1,
      "text": "\n#-----Solution-----\n\n#This is a greedy algorithm.\n#The idea is to greedily multiply by 3 until the number is greater than m.\n#Then, multiply by 2 as many times as possible until the number is greater than m.\n#If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n"
    },
    {
      "index": 2,
      "text": "\n#-----Solution-----\n\n#This is a greedy algorithm.\n#The idea is to greedily multiply by 3 until the number is greater than m.\n#Then, multiply by 2 as many times as possible until the number is greater than m.\n#If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n"
    }
  ],
  "created": 1650646830,
  "object": "edit"
}
2022-04-22 17:00:35.138948 fix syntax errors 3 ['\n#!/bin/python3\n#-----Solution-----\n\n#This is a greedy algorithm.\n#The idea is to greedily multiply by 3 until the number is greater than m.\n#Then, multiply by 2 as many times as possible until the number is greater than m.\n#If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n', '\n#-----Solution-----\n\n#This is a greedy algorithm.\n#The idea is to greedily multiply by 3 until the number is greater than m.\n#Then, multiply by 2 as many times as possible until the number is greater than m.\n#If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n', '\n#-----Solution-----\n\n#This is a greedy algorithm.\n#The idea is to greedily multiply by 3 until the number is greater than m.\n#Then, multiply by 2 as many times as possible until the number is greater than m.\n#If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n']
2022-04-22 17:00:35.138989 size on output set 6
