["# -*- coding: utf-8 -*-\n\nimport sys\nimport math\n\n# \u5165\u529b\na, b, h, m = [int(i) for i in sys.stdin.readline().split()]\n\n# \u89d2\u5ea6\u3092\u8a08\u7b97\nh_angle = h * 30 + m * 0.5\nm_angle = m * 6\n\n# 2\u3064\u306e\u6642\u8a08\u306e\u91dd\u306e\u89d2\u5ea6\u306e\u5dee\u3092\u8a08\u7b97\nangle = math.fabs(h_angle - m_angle)\n\n# \u89d2\u5ea6\u304c180\u5ea6\u3088\u308a\u5927\u304d\u3044\u5834\u5408\nif angle > 180:\n    angle = 360 - angle\n# \u51fa\u529b\n\nprint(math.sqrt(a ** 2 + b ** 2 - 2 * a * b * math.cos(angle * math.pi / 180)))\n", "\n\n# Setup\nA, B, H, M = map(int, input().split())\n\n# Solve\ntheta_h = H * 360 / 12.0\ntheta_m = M * 360 / 60.0\ntheta_hm = theta_h - theta_m\n\nif theta_hm < 0:\n    theta_hm = 360 + theta_hm\n\ntheta_hm = theta_hm * math.pi / 180\n\nc = A * A + B * B - 2 * A * B * math.cos(theta_hm)\nc = math.sqrt(c)\n\n# Output\nprint(c)\n", "import math\n\n# Set up \nA, B, H, M = map(int, input().split())\n\n# Solve\ntheta_h = H * 360 / 12\ntheta_m = M * 360 / 60\ntheta_hm = theta_h - theta_m # theta_hm is the angle between the hour hand and the minute hand\n\nif theta_hm < 0:\n    theta_hm = 360 + theta_hm # theta_hm should be positive\n\ntheta_hm = theta_hm * math.pi / 180\n\nc = A * A + B * B - 2 * A * B * math.cos(theta_hm)\nc = math.sqrt(c)\n\n# Output\nprint(c)\n", "import math\n\n# Setup\nA, B, H, M = map(int, input().split())\n\n# Solve\ntheta_h = H * 360 / 12\ntheta_m = M * 360 / 60\ntheta_hm = abs(theta_h - theta_m)\n\nif theta_hm > 180:\n    theta_hm = 360 - theta_hm\n\ntheta_hm = theta_hm * math.pi / 180\n\nc = A * A + B * B - 2 * A * B * math.cos(theta_hm)\nc = math.sqrt(c)\n\n# Output\nprint(c)\n", "import sys\nimport math\n\na, b, h, m = [int(i) for i in sys.stdin.readline().split()]\n\nh_angle = h * 30 + m * 0.5  # \u6642\u91dd\u306e\u89d2\u5ea6\nm_angle = m * 6  # \u5206\u91dd\u306e\u89d2\u5ea6\n\nangle = math.fabs(h_angle - m_angle)  # \u6642\u91dd\u3068\u5206\u91dd\u306e\u89d2\u5ea6\u306e\u5dee\n\nif angle > 180:\n    angle = 360 - angle\n\nprint(math.sqrt(a ** 2 + b ** 2 - 2 * a * b * math.cos(angle * math.pi / 180)))\n", "import math\n\n# Set up \nA, B, H, M = map(int, input().split())\n\n# Solve\ntheta_h = H * 360 / 12\ntheta_m = M * 360 / 60\ntheta_hm = theta_h - theta_m\n\nif theta_hm < 0:\n    theta_hm = 360 + theta_hm\n\ntheta_hm = theta_hm * math.pi / 180\n\nc = A * A + B * B - 2 * A * B * math.cos(theta_hm)\nc = math.sqrt(c)\n\n# Output\nprint(c)\n", "\n\nimport sys\nimport math\n\na, b, h, m = [int(i) for i in sys.stdin.readline().split()]\n\nh_angle = h * 30 + m * 0.5  # \u6642\u91dd\u306e\u89d2\u5ea6\nm_angle = m * 6  # \u5206\u91dd\u306e\u89d2\u5ea6\nangle = math.fabs(h_angle - m_angle)  # \u6642\u91dd\u3068\u5206\u91dd\u306e\u89d2\u5ea6\u306e\u5dee\n\nif angle > 180:\n    angle = 360 - angle  # \u5dee\u304c180\u5ea6\u3092\u8d85\u3048\u308b\u5834\u5408\u3001360\u5ea6\u304b\u3089\u5dee\u3092\u5f15\u304f\n\nprint(math.sqrt(a ** 2 + b ** 2 - 2 * a * b * math.cos(angle * math.pi / 180)))\n", "import math\n\n# Set up \nA, B, H, M = map(int, input().split())\n\n# Solve\ntheta_h = H * 360 / 12\ntheta_m = M * 360 / 60\ntheta_hm = abs(theta_h - theta_m)\n\n# if theta_hm < 0:\n#     theta_hm = 360 + theta_hm\n\ntheta_hm = theta_hm * math.pi / 180\n\nc = A * A + B * B - 2 * A * B * math.cos(theta_hm)\nc = math.sqrt(c)\n\n# Output\nprint(c)\n", "\nimport sys\nimport math\n\na, b, h, m = [int(i) for i in sys.stdin.readline().split()]\n\nh_angle = h * 30 + m * 0.5\nm_angle = m * 6\n\nangle = math.fabs(h_angle - m_angle)\n\nif angle > 180:\n    angle = 360 - angle\n\nprint(math.sqrt(a ** 2 + b ** 2 - 2 * a * b * math.cos(angle * math.pi / 180)))\n", "\nimport sys\nimport math\na, b, c = [int(i) for i in sys.stdin.readline().split()]\nprint(a * b // 2)\n", "\n\nimport math\n\nA, B, H, M = map(int, input().split())\n\ntheta_h = H * 360 / 12\ntheta_m = M * 360 / 60\ntheta_hm = theta_h - theta_m\n\nif theta_hm < 0:\n    theta_hm = 360 + theta_hm\n\ntheta_hm = theta_hm * math.pi / 180\n\nc = A * A + B * B - 2 * A * B * math.cos(theta_hm)\nc = math.sqrt(c)\n\nprint(c)\n", "\nimport sys\nimport math\n\na, b, h, m = map(int, input().split())\n\nh_angle = h * 30 + m * 0.5 if h < 12 else (h - 12) * 30 + m * 0.5\nm_angle = m * 6\nangle = math.fabs(h_angle - m_angle)\n\nif angle > 180:\n    angle = 360 - angle\n\nprint(math.sqrt(a ** 2 + b ** 2 - 2 * a * b * math.cos(angle * math.pi / 180)))\n", "\nimport sys\nimport math\n\na, b, h, m = [int(i) for i in sys.stdin.readline().split()]\n\nh_angle = h * 30 + m * 0.5\nm_angle = m * 6\nangle = math.fabs(h_angle - m_angle)\n\nif angle > 180:\n    angle = 360 - angle\n\nprint(math.sqrt(a ** 2 + b ** 2 - 2 * a * b * math.cos(angle * math.pi / 180)))\n", "import sys\nimport math\n\na, b, h, m = [int(i) for i in sys.stdin.readline().split()]\n\nh_angle = h * 30 + m * 0.5\nm_angle = m * 6\n\nangle = math.fabs(h_angle - m_angle)\n\nif angle > 180:\n    angle = 360 - angle\n\nprint(math.sqrt(a ** 2 + b ** 2 - 2 * a * b * math.cos(angle * math.pi / 180)))\n", "import sys\nimport math\n\na, b, h, m = [int(i) for i in sys.stdin.readline().split()]\n\nh_angle = h * 30 + m * 0.5  # \u4e00\u91dd\u4e00\u91dd\u8f49\u904e\u7684\u89d2\u5ea6\nm_angle = m * 6  # \u4e00\u5206\u9418\u4e00\u5206\u9418\u8f49\u904e\u7684\u89d2\u5ea6\n\nangle = math.fabs(h_angle - m_angle)  # \u5169\u500b\u6307\u91dd\u4e4b\u9593\u7684\u593e\u89d2\n\nif angle > 180:\n    angle = 360 - angle\n\nprint(math.sqrt(a ** 2 + b ** 2 - 2 * a * b * math.cos(angle * math.pi / 180)))\n"]