["\nimport unittest\n\nimport math\n\ndef main(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 4), 2)\n        self.assertEqual(main(8, 9), -1)\n\n\nif __name__ == '__main__':\n    unittest.main()\n", "import math\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n", "\n\nimport math  # import the math module\n\na, b = map(int, input().split())  # a, b = map(int, input().split())\n\nfor i in range(1, a+1):  # for i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:  # if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)  # print(i)\n        exit()  # exit()\nprint(-1)  # print(-1)\n", "\nimport math\n\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n", "\n\nfrom unittest import TestCase, main\nimport math\n\ndef main(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\nclass TestMain(TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 2), 1)\n        self.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport unittest\n\n\ndef main(a, b):\n    if b % a == 0:\n        return b // a\n    return -1\n\n\nclass Test(unittest.TestCase):\n    def test(self):\n        self.assertEqual(main(2, 4), 2)\n        self.assertEqual(main(8, 9), -1)\n\n\nif __name__ == '__main__':\n    unittest.main()\n", "import math\na, b = map(int, input().split())\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n", "import math\n\na, b = map(float, input().split())\n\nfor i in range(1, math.floor(a)+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:  # \u5c0f\u6570\u70b9\u4ee5\u4e0b\u3092\u5207\u308a\u6368\u3066\u308b\n        print(i)\n        exit()\nprint(-1)\n", "\n\nimport unittest\n\n\ndef solution(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(solution(2, 2), 1)\n        self.assertEqual(solution(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n", "\n\nimport math # import the math module\n\na, b = map(int, input().split()) # a, b = map(int, input().split()) # a, b = map(int, input().split())\n\nfor i in range(1, a+1): # for i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b: # if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i) # print(i)\n        exit() # exit()\nprint(-1) # print(-1)\n", "import math\n\na, b = map(int, input().split())\n\nfor i in range(1, a + 1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n", "\n\nimport unittest\n\n\ndef main(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 2), 1)\n        self.assertEqual(main(8, 9), -1)\n\n\nif __name__ == '__main__':\n    unittest.main()\n", "\n\nimport unittest\nimport math\n\ndef main(A, B):\n    return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 4), 2)\n        self.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n", "import math\n\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n"]