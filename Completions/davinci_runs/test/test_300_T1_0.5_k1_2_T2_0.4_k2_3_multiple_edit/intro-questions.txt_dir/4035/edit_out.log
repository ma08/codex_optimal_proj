2022-04-22 17:21:19.453056 num operations 2
2022-04-22 17:21:19.453075 size on input set 1
2022-04-22 17:21:19.453242 using api key sunu
2022-04-22 17:21:27.920300 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport math # import the math module\n\na, b = map(int, input().split()) # a, b = map(int, input().split())\n\nfor i in range(1, a+1): # for i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b: # if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i) # print(i)\n        exit() # exit()\nprint(-1) # print(-1)\n"
    },
    {
      "index": 1,
      "text": "\nimport math\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n"
    },
    {
      "index": 2,
      "text": "\nimport math\n\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n"
    }
  ],
  "created": 1650648079,
  "object": "edit"
}
2022-04-22 17:21:27.920599 fix spelling mistakes 3 ['\n\nimport math # import the math module\n\na, b = map(int, input().split()) # a, b = map(int, input().split())\n\nfor i in range(1, a+1): # for i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b: # if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i) # print(i)\n        exit() # exit()\nprint(-1) # print(-1)\n', '\nimport math\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n', '\nimport math\n\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n']
2022-04-22 17:21:27.920637 size on output set 3
2022-04-22 17:21:27.920644 size on input set 3
2022-04-22 17:21:27.920829 using api key kouti
2022-04-22 17:21:32.488286 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport math\n\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n"
    },
    {
      "index": 1,
      "text": "import math\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n"
    },
    {
      "index": 2,
      "text": "import math\na, b = map(int, input().split())\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n"
    }
  ],
  "created": 1650648087,
  "object": "edit"
}
2022-04-22 17:21:32.488549 fix syntax errors 3 ['\nimport math\n\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n', 'import math\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n', 'import math\na, b = map(int, input().split())\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n']
2022-04-22 17:21:32.488781 using api key soukgp
2022-04-22 17:21:44.749125 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport math # import the math module\n\na, b = map(int, input().split()) # a, b = map(int, input().split()) # a, b = map(int, input().split())\n\nfor i in range(1, a+1): # for i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b: # if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i) # print(i)\n        exit() # exit()\nprint(-1) # print(-1)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport math  # import the math module\n\na, b = map(int, input().split())  # a, b = map(int, input().split())\n\nfor i in range(1, a+1):  # for i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:  # if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)  # print(i)\n        exit()  # exit()\nprint(-1)  # print(-1)\n"
    },
    {
      "index": 2,
      "text": "\n\nimport math  # import the math module\n\na, b = map(int, input().split())  # a, b = map(int, input().split())\n\nfor i in range(1, a+1):  # for i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:  # if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)  # print(i)\n        exit()  # exit()\nprint(-1)  # print(-1)\n"
    }
  ],
  "created": 1650648092,
  "object": "edit"
}
2022-04-22 17:21:44.749416 fix syntax errors 3 ['\n\nimport math # import the math module\n\na, b = map(int, input().split()) # a, b = map(int, input().split()) # a, b = map(int, input().split())\n\nfor i in range(1, a+1): # for i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b: # if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i) # print(i)\n        exit() # exit()\nprint(-1) # print(-1)\n', '\n\nimport math  # import the math module\n\na, b = map(int, input().split())  # a, b = map(int, input().split())\n\nfor i in range(1, a+1):  # for i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:  # if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)  # print(i)\n        exit()  # exit()\nprint(-1)  # print(-1)\n', '\n\nimport math  # import the math module\n\na, b = map(int, input().split())  # a, b = map(int, input().split())\n\nfor i in range(1, a+1):  # for i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:  # if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)  # print(i)\n        exit()  # exit()\nprint(-1)  # print(-1)\n']
2022-04-22 17:21:44.749588 using api key jaanu
2022-04-22 17:21:51.429216 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import math\n\na, b = map(int, input().split())\n\nfor i in range(1, a + 1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n"
    },
    {
      "index": 1,
      "text": "import math\n\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n"
    },
    {
      "index": 2,
      "text": "import math\n\na, b = map(float, input().split())\n\nfor i in range(1, math.floor(a)+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:  # \u5c0f\u6570\u70b9\u4ee5\u4e0b\u3092\u5207\u308a\u6368\u3066\u308b\n        print(i)\n        exit()\nprint(-1)\n"
    }
  ],
  "created": 1650648104,
  "object": "edit"
}
2022-04-22 17:21:51.429462 fix syntax errors 3 ['import math\n\na, b = map(int, input().split())\n\nfor i in range(1, a + 1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n', 'import math\n\na, b = map(int, input().split())\n\nfor i in range(1, a+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:\n        print(i)\n        exit()\nprint(-1)\n', 'import math\n\na, b = map(float, input().split())\n\nfor i in range(1, math.floor(a)+1):\n    if math.floor(i * 0.08) == a and math.floor(i * 0.1) == b:  # 小数点以下を切り捨てる\n        print(i)\n        exit()\nprint(-1)\n']
2022-04-22 17:21:51.429532 size on output set 8
2022-04-22 17:21:51.429546 num operations 2
2022-04-22 17:21:51.429552 size on input set 1
2022-04-22 17:21:51.429699 using api key sunu
2022-04-22 17:21:56.427251 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport unittest\nimport math\n\ndef main(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 2), 1)\n        self.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport unittest\nimport math\n\ndef main(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 2), 1)\n        self.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport unittest\nimport math\n\ndef main(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 4), 2)\n        self.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n"
    }
  ],
  "created": 1650648111,
  "object": "edit"
}
2022-04-22 17:21:56.427598 fix spelling mistakes 3 ["\n\nimport unittest\nimport math\n\ndef main(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 2), 1)\n        self.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n", "\n\nimport unittest\nimport math\n\ndef main(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 2), 1)\n        self.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n", "\n\nimport unittest\nimport math\n\ndef main(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 4), 2)\n        self.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n"]
2022-04-22 17:21:56.427631 size on output set 2
2022-04-22 17:21:56.427639 size on input set 2
2022-04-22 17:21:56.427780 using api key derek
2022-04-22 17:22:04.147899 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport unittest\n\n\ndef main(a, b):\n    if b % a == 0:\n        return b // a\n    return -1\n\n\nclass Test(unittest.TestCase):\n    def test(self):\n        self.assertEqual(main(2, 4), 2)\n        self.assertEqual(main(8, 9), -1)\n\n\nif __name__ == '__main__':\n    unittest.main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport unittest\nimport math\n\ndef main(A, B):\n    return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 4), 2)\n        self.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n"
    },
    {
      "index": 2,
      "text": "\nimport unittest\n\nimport math\n\ndef main(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 4), 2)\n        self.assertEqual(main(8, 9), -1)\n\n\nif __name__ == '__main__':\n    unittest.main()\n"
    }
  ],
  "created": 1650648116,
  "object": "edit"
}
2022-04-22 17:22:04.148159 fix syntax errors 3 ["\n\nimport unittest\n\n\ndef main(a, b):\n    if b % a == 0:\n        return b // a\n    return -1\n\n\nclass Test(unittest.TestCase):\n    def test(self):\n        self.assertEqual(main(2, 4), 2)\n        self.assertEqual(main(8, 9), -1)\n\n\nif __name__ == '__main__':\n    unittest.main()\n", "\n\nimport unittest\nimport math\n\ndef main(A, B):\n    return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 4), 2)\n        self.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n", "\nimport unittest\n\nimport math\n\ndef main(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 4), 2)\n        self.assertEqual(main(8, 9), -1)\n\n\nif __name__ == '__main__':\n    unittest.main()\n"]
2022-04-22 17:22:04.148353 using api key sunu
2022-04-22 17:22:10.477191 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport unittest\n\n\ndef main(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 2), 1)\n        self.assertEqual(main(8, 9), -1)\n\n\nif __name__ == '__main__':\n    unittest.main()\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom unittest import TestCase, main\nimport math\n\ndef main(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\nclass TestMain(TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 2), 1)\n        self.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport unittest\n\n\ndef solution(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(solution(2, 2), 1)\n        self.assertEqual(solution(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n"
    }
  ],
  "created": 1650648124,
  "object": "edit"
}
2022-04-22 17:22:10.477494 fix syntax errors 3 ["\n\nimport unittest\n\n\ndef main(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 2), 1)\n        self.assertEqual(main(8, 9), -1)\n\n\nif __name__ == '__main__':\n    unittest.main()\n", "\n\nfrom unittest import TestCase, main\nimport math\n\ndef main(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\nclass TestMain(TestCase):\n    def test_main(self):\n        self.assertEqual(main(2, 2), 1)\n        self.assertEqual(main(8, 9), -1)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport unittest\n\n\ndef solution(A, B):\n    if B % A == 0:\n        return B // A\n    else:\n        return -1\n\nclass TestMain(unittest.TestCase):\n    def test_main(self):\n        self.assertEqual(solution(2, 2), 1)\n        self.assertEqual(solution(8, 9), -1)\n\nif __name__ == '__main__':\n    unittest.main()\n"]
2022-04-22 17:22:10.477532 size on output set 6
