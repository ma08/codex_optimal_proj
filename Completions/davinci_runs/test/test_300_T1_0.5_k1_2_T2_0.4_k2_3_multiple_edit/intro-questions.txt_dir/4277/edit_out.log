2022-04-22 21:11:54.394061 num operations 2
2022-04-22 21:11:54.394077 size on input set 1
2022-04-22 21:11:54.394243 using api key sunu
2022-04-22 21:11:59.838987 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "# https://atcoder.jp/contests/abc086/tasks/abc086_a\n\nimport sys\n\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n"
    },
    {
      "index": 1,
      "text": "\n# \ud30c\uc774\uc36c\uc740 \uc774\ub807\uac8c \uc785\ub825\uc744 \ubc1b\ub294\ub2e4.\nimport sys\n\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n"
    },
    {
      "index": 2,
      "text": "# https://atcoder.jp/contests/abc084/tasks/abc084_a\n\nimport sys\n\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n"
    }
  ],
  "created": 1650661914,
  "object": "edit"
}
2022-04-22 21:11:59.839265 fix spelling mistakes 3 ['# https://atcoder.jp/contests/abc086/tasks/abc086_a\n\nimport sys\n\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n', '\n# 파이썬은 이렇게 입력을 받는다.\nimport sys\n\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n', '# https://atcoder.jp/contests/abc084/tasks/abc084_a\n\nimport sys\n\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n']
2022-04-22 21:11:59.839302 size on output set 3
2022-04-22 21:11:59.839310 size on input set 3
2022-04-22 21:11:59.839462 using api key jaanu
2022-04-22 21:12:09.148508 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# \ud30c\uc774\uc36c\uc740 \uc774\ub807\uac8c \uc785\ub825\uc744 \ubc1b\ub294\ub2e4.\nimport sys\n\nN = int(sys.stdin.readline().rstrip())\nA = list(map(int, sys.stdin.readline().rstrip().split()))\nB = list(map(int, sys.stdin.readline().rstrip().split()))\n\n\nC = [0] * N\nfor i in range(N):\n    C[i] = A[i] - B[i]\n\n\nC.sort()\n\ncount = 0\nfor i in range(N):\n    if C[i] > 0:\n        count += C[i]\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "# \ud30c\uc774\uc36c\uc740 \uc774\ub807\uac8c \uc785\ub825\uc744 \ubc1b\ub294\ub2e4.\nimport sys\n\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n"
    },
    {
      "index": 2,
      "text": "\n# \ud30c\uc774\uc36c\uc740 \uc774\ub807\uac8c \uc785\ub825\uc744 \ubc1b\ub294\ub2e4.\nimport sys\n\nN, A, B = map(int, sys.stdin.readline().rstrip().split()) # \uc785\ub825\uc744 \ubc1b\ub294\ub2e4.\n\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n"
    }
  ],
  "created": 1650661919,
  "object": "edit"
}
2022-04-22 21:12:09.148765 fix syntax errors 3 ['# 파이썬은 이렇게 입력을 받는다.\nimport sys\n\nN = int(sys.stdin.readline().rstrip())\nA = list(map(int, sys.stdin.readline().rstrip().split()))\nB = list(map(int, sys.stdin.readline().rstrip().split()))\n\n\nC = [0] * N\nfor i in range(N):\n    C[i] = A[i] - B[i]\n\n\nC.sort()\n\ncount = 0\nfor i in range(N):\n    if C[i] > 0:\n        count += C[i]\n\nprint(count)\n', '# 파이썬은 이렇게 입력을 받는다.\nimport sys\n\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n', '\n# 파이썬은 이렇게 입력을 받는다.\nimport sys\n\nN, A, B = map(int, sys.stdin.readline().rstrip().split()) # 입력을 받는다.\n\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n']
2022-04-22 21:12:09.148959 using api key kouti
2022-04-22 21:12:16.143969 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# https://atcoder.jp/contests/abc086/tasks/abc086_a\n\nimport sys\n\nN = int(sys.stdin.readline().rstrip())\n\n\ndef is_odd(N):\n    return N % 2 == 1\n\n\n\nprint(is_odd(N))\n"
    },
    {
      "index": 1,
      "text": "# https://atcoder.jp/contests/abc086/tasks/abc086_a\n\nimport sys\n\na, b = map(int, sys.stdin.readline().rstrip().split())\n\n\nif a * b % 2 == 0:\n    print(\"Even\")\nelse:\n    print(\"Odd\")\n\n"
    },
    {
      "index": 2,
      "text": "# https://atcoder.jp/contests/abc086/tasks/abc086_a\n\nimport sys\n\nN = int(sys.stdin.readline().rstrip())\n\n\ndef f(N):\n    return N * N\n\n\nprint(f(N))\n"
    }
  ],
  "created": 1650661929,
  "object": "edit"
}
2022-04-22 21:12:16.144191 fix syntax errors 3 ['# https://atcoder.jp/contests/abc086/tasks/abc086_a\n\nimport sys\n\nN = int(sys.stdin.readline().rstrip())\n\n\ndef is_odd(N):\n    return N % 2 == 1\n\n\n\nprint(is_odd(N))\n', '# https://atcoder.jp/contests/abc086/tasks/abc086_a\n\nimport sys\n\na, b = map(int, sys.stdin.readline().rstrip().split())\n\n\nif a * b % 2 == 0:\n    print("Even")\nelse:\n    print("Odd")\n\n', '# https://atcoder.jp/contests/abc086/tasks/abc086_a\n\nimport sys\n\nN = int(sys.stdin.readline().rstrip())\n\n\ndef f(N):\n    return N * N\n\n\nprint(f(N))\n']
2022-04-22 21:12:16.144352 using api key sunu
2022-04-22 21:12:26.862284 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# https://atcoder.jp/contests/abc084/tasks/abc084_a\n\nimport sys\n\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(n, a, b):\n    return min(n * a, b)\n\n\nprint(min_expense(N, A, B))\n"
    },
    {
      "index": 1,
      "text": "# https://atcoder.jp/contests/abc086/tasks/abc086_a\n\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n"
    },
    {
      "index": 2,
      "text": "# https://atcoder.jp/contests/abc085/tasks/abc085_b\n\nimport sys\n\nN = int(sys.stdin.readline().rstrip())\nd = [int(sys.stdin.readline().rstrip()) for _ in range(N)]\n\n\ndef count_distinct(d):\n    return len(set(d))\n\n\nprint(count_distinct(d))\n"
    }
  ],
  "created": 1650661936,
  "object": "edit"
}
2022-04-22 21:12:26.862514 fix syntax errors 3 ['# https://atcoder.jp/contests/abc084/tasks/abc084_a\n\nimport sys\n\nN, A, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(n, a, b):\n    return min(n * a, b)\n\n\nprint(min_expense(N, A, B))\n', '# https://atcoder.jp/contests/abc086/tasks/abc086_a\n\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\n\n\ndef min_expense(N, A, B):\n    if N * A <= B:\n        return N * A\n    else:\n        return B\n\n\nprint(min_expense(N, A, B))\n', '# https://atcoder.jp/contests/abc085/tasks/abc085_b\n\nimport sys\n\nN = int(sys.stdin.readline().rstrip())\nd = [int(sys.stdin.readline().rstrip()) for _ in range(N)]\n\n\ndef count_distinct(d):\n    return len(set(d))\n\n\nprint(count_distinct(d))\n']
2022-04-22 21:12:26.862544 size on output set 9
2022-04-22 21:12:26.862557 num operations 2
2022-04-22 21:12:26.862562 size on input set 1
2022-04-22 21:12:26.862699 using api key derek
2022-04-22 21:12:31.339000 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n"
    }
  ],
  "created": 1650661946,
  "object": "edit"
}
2022-04-22 21:12:31.339329 fix spelling mistakes 3 ['\nimport sys\n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n', '\nimport sys\n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n', '\nimport sys\n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b))\n']
2022-04-22 21:12:31.339353 size on output set 1
2022-04-22 21:12:31.339360 size on input set 1
2022-04-22 21:12:31.339524 using api key sunu
2022-04-22 21:12:36.769089 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b)) \n"
    },
    {
      "index": 1,
      "text": "import sys\nn, a, b = map(int, sys.stdin.readline().split())\nprint(min(n*a, b))\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\nn = int(sys.stdin.readline())\n\nprint(n**3)\n"
    }
  ],
  "created": 1650661951,
  "object": "edit"
}
2022-04-22 21:12:36.769316 fix syntax errors 3 ['\nimport sys\n\nn, a, b = map(int, sys.stdin.readline().split())\n\nprint(min(n*a, b)) \n', 'import sys\nn, a, b = map(int, sys.stdin.readline().split())\nprint(min(n*a, b))\n', '\nimport sys\n\nn = int(sys.stdin.readline())\n\nprint(n**3)\n']
2022-04-22 21:12:36.769338 size on output set 3
