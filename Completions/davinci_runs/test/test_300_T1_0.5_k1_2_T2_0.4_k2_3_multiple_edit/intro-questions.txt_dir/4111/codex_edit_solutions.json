["\n\nn = int(input())  # number of elements in list\na = list(map(int, input().split()))  # list of elements in list\n\nodds = 0  # sum of odd elements\nevens = 0  # sum of even elements\ncount = 0  # number of equal sums\n\nfor i in range(n):  # sum of odd and even elements in list\n    if i % 2 == 0:  # if i is even\n        evens += a[i]  # add element to evens\n    else:\n        odds += a[i]  # add element to odds\n\nfor i in range(n):  # subtracting one element from list\n    if i % 2 == 0:  # if i is even\n        evens -= a[i]  # subtract element from evens\n    else:\n        odds -= a[i]  # subtract element from odds\n    if odds == evens:  # if sums are equal\n        count += 1  # add 1 to count\n    if i % 2 == 0:  # if i is even\n        evens += a[i]  # add element to evens\n    else:\n        odds += a[i]  # add element to odds\n\nprint(count)\n", "\n\nn = int(input())  # number of elements\na = list(map(int, input().split()))  # list of elements\n\nodds = 0  # sum of odd elements\nevens = 0  # sum of even elements\ncount = 0  # number of equal sums\n\nfor i in range(n):  # summing odd and even elements\n    if i % 2 == 0:  # if i is even\n        evens += a[i]  # add element to evens\n    else:\n        odds += a[i]  # add element to odds\n\nfor i in range(n):  # subtracting one element\n    if i % 2 == 0:  # if i is even\n        evens -= a[i]  # subtract element from evens\n    else:\n        odds -= a[i]  # subtract element from odds\n    if odds == evens:  # if sums are equal\n        count += 1  # add 1 to count\n    if i % 2 == 0:  # if i is even\n        evens += a[i]  # add element to evens\n    else:\n        odds += a[i]  # add element to odds\n\nprint(count)\n", "\n\nn = int(input())\na = list(map(int,input().split()))\n\n# def find_good_candies(n, a): # O(n^2)\n#     sum_odd, sum_even = 0, 0\n#     for i in range(1,n):\n#         if i%2 == 0:\n#             sum_even += a[i]\n#         else:\n#             sum_odd += a[i]\n#     if sum_odd == sum_even:\n#         return 1\n#     else:\n#     return 0\n\n# ans = 0 # O(n)\n# for i in range(n): # O(n)\n#     ans += find_good_candies(n, a[:i] + a[i+1:]) # O(n^2)\n\n# print(ans) # O(n^3)\n\nodd, even = 0, 0 # O(n)\nfor i in range(n): # O(n)\n    if i%2 == 0:\n        odd += a[i]\n    else:\n        even += a[i]\n\nans = 0\nfor i in range(n): # O(n)\n    if i%2 == 0:\n        if odd - a[i] == even:\n            ans += 1\n    else:\n        if odd == even - a[i]:\n            ans += 1\n\nprint(ans)\n", "\n\nn = int(input())\na = list(map(int,input().split()))\n\ndef find_good_candies(n, a): # TLE\n    sum_odd, sum_even = 0, 0\n    for i in range(1,n):\n        if i%2 == 0:\n            sum_even += a[i]\n        else:\n            sum_odd += a[i]\n    if sum_odd == sum_even:\n        return 1\n    else:\n        return 0\n\nans = 0\nfor i in range(n):\n    ans += find_good_candies(n, a[:i] + a[i+1:])\n\nprint(ans)\n\nodd, even = 0, 0\nfor i in range(n):\n    if i%2 == 0:\n        odd += a[i]\n    else:\n        even += a[i]\n\nans = 0\nfor i in range(n):\n    if i%2 == 0:\n        if odd - a[i] == even:\n            ans += 1\n    else:\n        if odd == even - a[i]:\n            ans += 1\n\nprint(ans)\n", "n = int(input())\na = list(map(int, input().split()))\n\nodds = 0\nevens = 0\ncount = 0\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nfor i in range(n):\n    if i % 2 == 0:\n        evens -= a[i]\n    else:\n        odds -= a[i]\n    if odds == evens:\n        count += 1\n    if i % 2 == 0:\n        evens += a[i]\n    else:\n        odds += a[i]\n\nprint(count)\n", "\n\nn = int(input())\na = list(map(int,input().split()))\nodd, even = 0, 0\nfor i in range(n):\n    if i%2 == 0:\n        odd += a[i]\n    else:\n        even += a[i]\nans = 0\nfor i in range(n):\n    if i%2 == 0:\n        if odd - a[i] == even:\n            ans += 1\n    else:\n        if odd == even - a[i]:\n            ans += 1\n\nprint(ans)\n", "\nn = int(input())\na = list(map(int,input().split()))\n\nodd, even = 0, 0\nfor i in range(n):\n    if i%2 == 0:\n        odd += a[i]\n    else:\n        even += a[i]\n\nans = 0\nfor i in range(n):\n    if i%2 == 0:\n        if odd - a[i] == even:\n            ans += 1\n    else:\n        if odd == even - a[i]:\n            ans += 1\n\nprint(ans)\n", "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# def find_good_candies(n, a): # TLE\n#     sum_odd, sum_even = 0, 0\n#     for i in range(1,n):\n#         if i%2 == 0:\n#             sum_even += a[i]\n#         else:\n#             sum_odd += a[i]\n#     if sum_odd == sum_even:\n#         return 1\n#     else:\n#         return 0\n\n# ans = 0\n# for i in range(n):\n#     ans += find_good_candies(n, a[:i] + a[i+1:])\n\n# print(ans)\n\nodd, even = 0, 0\nfor i in range(n):\n    if i%2 == 0:\n        odd += a[i]\n    else:\n        even += a[i]\n\nans = 0\nfor i in range(n):\n    if i%2 == 0:\n        if odd - a[i] == even:\n            ans += 1\n    else:\n        if odd == even - a[i]:\n            ans += 1\n\nprint(ans)\n", "\nn = int(input())  # \u5165\u529b\na = list(map(int, input().split()))  # \u5165\u529b\n\nodds = 0  # \u5947\u6570\u756a\u76ee\u306e\u5408\u8a08\nevens = 0  # \u5076\u6570\u756a\u76ee\u306e\u5408\u8a08\ncount = 0  # \u7b54\u3048\n\nfor i in range(n):  # \u5947\u6570\u756a\u76ee\u306e\u5408\u8a08\u3068\u5076\u6570\u756a\u76ee\u306e\u5408\u8a08\u3092\u8a08\u7b97\n    if i % 2 == 0:  # \u5076\u6570\u756a\u76ee\n        evens += a[i]  # \u5076\u6570\u756a\u76ee\u306e\u5408\u8a08\u306b\u8db3\u3059\n    else:\n        odds += a[i]  # \u5947\u6570\u756a\u76ee\u306e\u5408\u8a08\u306b\u8db3\u3059\n\nfor i in range(n):  # \u5947\u6570\u756a\u76ee\u306e\u5408\u8a08\u3068\u5076\u6570\u756a\u76ee\u306e\u5408\u8a08\u304c\u7b49\u3057\u3044\u3082\u306e\u3092\u6570\u3048\u308b\n    if i % 2 == 0:  # \u5076\u6570\u756a\u76ee\n        evens -= a[i]  # \u5076\u6570\u756a\u76ee\u306e\u5408\u8a08\u304b\u3089\u5f15\u304f\n    else:\n        odds -= a[i]  # \u5947\u6570\u756a\u76ee\u306e\u5408\u8a08\u304b\u3089\u5f15\u304f\n    if odds == evens:  # \u5947\u6570\u756a\u76ee\u306e\u5408\u8a08\u3068\u5076\u6570\u756a\u76ee\u306e\u5408\u8a08\u304c\u7b49\u3057\u3044\u3068\u304d\n        count += 1  # \u7b54\u3048\u306b1\u8db3\u3059\n    if i % 2 == 0:  # \u5076\u6570\u756a\u76ee\n        evens += a[i]  # \u5076\u6570\u756a\u76ee\u306e\u5408\u8a08\u306b\u8db3\u3059\n    else:\n        odds += a[i]  # \u5947\u6570\u756a\u76ee\u306e\u5408\u8a08\u306b\u8db3\u3059\n\nprint(count)  # \u7b54\u3048\u3092\u51fa\u529b\n", "n = int(input())\ns = input()\nans = 0\n\nfor i in range(1, n):\n    if s[i-1] != s[i]:\n        ans += 1\nprint(ans)\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sun Dec  8 00:01:10 2019\n\n\n@author: hanpeng\n\"\"\"\n\n# def find_good_candies(n, a): # O(n^2)\n#     sum_odd, sum_even = 0, 0\n#     for i in range(1,n):\n#         if i%2 == 0:\n#             sum_even += a[i]\n#         else:\n#             sum_odd += a[i]\n#     if sum_odd == sum_even:\n#         return 1\n#     else:\n#         return 0\n\n# ans = 0\n# for i in range(n):\n#     ans += find_good_candies(n, a[:i] + a[i+1:])\n\n# print(ans)\n\nodd, even = 0, 0 # O(n)\nfor i in range(n):\n    if i%2 == 0:\n        odd += a[i]\n    else:\n        even += a[i]\n\nans = 0\nfor i in range(n):\n    if i%2 == 0:\n        if odd - a[i] == even:\n            ans += 1\n    else:\n        if odd == even - a[i]:\n            ans += 1\n\nprint(ans)\n", "\n\nn = int(input())  # number of elements in list\na = list(map(int, input().split()))  # list of elements in list\n\nodds = 0  # sum of odd elements in list\nevens = 0  # sum of even elements in list\ncount = 0  # number of equal sums of odds and evens\n\nfor i in range(n):  # sum of odd and even elements in list\n    if i % 2 == 0:  # if i is even\n        evens += a[i]  # add element to evens in list\n    else:\n        odds += a[i]  # add element to odds\n\nfor i in range(n):  # subtracting one element in list\n    if i % 2 == 0:  # if i is even\n        evens -= a[i]  # subtract element from evens in list\n    else:\n        odds -= a[i]  # subtract element from odds in list\n    if odds == evens:  # if sums of odds and evens in list are equal\n        count += 1  # add 1 to count\n    if i % 2 == 0:  # if i is even\n        evens += a[i]  # add element to evens in list\n    else:\n        odds += a[i]  # add element to odds in list\n\nprint(count)\n", "\nn = int(input())\na = list(map(int, input().split()))\n\n# def find_good_candies(n, a): # TLE\n#     sum_odd, sum_even = 0, 0\n#     for i in range(1, n):\n#         if i % 2 == 0:\n#             sum_even += a[i]\n#         else:\n#             sum_odd += a[i]\n#     if sum_odd == sum_even:\n#         return 1\n#     else:\n#         return 0\n\n# ans = 0\n# for i in range(n):\n#     ans += find_good_candies(n, a[:i] + a[i+1:])\n\n# print(ans)\n\nodd, even = 0, 0\nfor i in range(n):\n    if i % 2 == 0:\n        odd += a[i]\n    else:\n        even += a[i]\n\nans = 0\nfor i in range(n):\n    if i % 2 == 0:\n        if odd - a[i] == even:\n            ans += 1\n    else:\n        if odd == even - a[i]:\n            ans += 1\n\nprint(ans)\n", "\n\nn = int(input())\na = list(map(int, input().split()))\n\n# def find_good_candies(n, a): # O(n^2)\n#     sum_odd, sum_even = 0, 0\n#     for i in range(1,n):\n#         if i%2 == 0:\n#             sum_even += a[i]\n#         else:\n#             sum_odd += a[i]\n#     if sum_odd == sum_even:\n#         return 1\n#     else:\n#         return 0\n\n# ans = 0\n# for i in range(n):\n#     ans += find_good_candies(n, a[:i] + a[i+1:])\n\n# print(ans)\n\nodd, even = 0, 0  # O(n)\nfor i in range(n):\n    if i % 2 == 0:\n        odd += a[i]\n    else:\n        even += a[i]\n\nans = 0\nfor i in range(n):\n    if i % 2 == 0:\n        if odd - a[i] == even:\n            ans += 1\n    else:\n        if odd == even - a[i]:\n            ans += 1\n\nprint(ans)\n"]