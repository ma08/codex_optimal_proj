["n = int(input())\n\nans = 0\nfor a in range(1, n + 1):\n    for b in range(1, n + 1):\n        c = n - a * b\n        if c > 0:\n            ans += 1\n\nprint(ans)\n", "\nN = int(input())\n\ncount = 0\nfor a in range(1, N+1):\n    for b in range(1, N+1):\n        c = N - a * b\n        if c > 0:\n            count += 1\n\nprint(count)\n", "import sys, re, os\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians\nfrom itertools import permutations, combinations, product, accumulate\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom fractions import gcd\n \ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef S_MAP(): return map(str, input().split())\ndef LIST(): return list(map(int, input().split()))\ndef S_LIST(): return list(map(str, input().split()))\n\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n", "import sys\ninput = sys.stdin.readline\n\n\nn = int(input())\np = list(map(int, input().split()))\nq = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    if p[i] == q[i]:\n        ans += 1\n\nprint(ans)\n", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\nN = int(input())\ncount = 0\nfor a in range(1, N+1):\n    for b in range(1, N+1):\n        c = N - a*b\n        if c > 0:\n            count += 1\nprint(count)\n", "N = int(input()) \ncount = 0 \nfor a in range(1, N+1): \n    for b in range(1, N+1): \n        c = N - a*b \n        if c > 0: \n            count += 1 \nprint(count) \n", "N = int(input()) \n \ncount = 0 \nfor a in range(1, N+1): \n    for b in range(1, N+1): \n        c = N - a*b \n        if c > 0: \n            count += 1 \n \nprint(count) \n", "n = int(input())\n\nans = 0\nfor a in range(1, n + 1):\n    for b in range(1, n + 1):\n        c = n - a * b \n        if c > 0: \n            ans += 1\n\nprint(ans)\n", "\nn, k = map(int, input().split())\n\nprint(k * (k - 1) ** (n - 1))\n", "\nN = int(input())\ncount = 0\nfor a in range(1, N+1):\n    for b in range(1, N+1):\n        c = N - a * b\n        if c > 0:\n            count += 1\n\nprint(count)\n", "# coding: utf-8\n\n# \u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30011\u304b\u3089N\u307e\u3067\u306e\u6574\u6570\u3092\u4f7f\u3063\u3066\u3001N = a*b + c\u3068\u306a\u308b\u6574\u6570\u306e\u7d44\u3092\u6570\u3048\u4e0a\u3052\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n#\n# N = a*b + c\n#\n# \u305f\u3060\u3057\u3001a, b, c\u306f\u305d\u308c\u305e\u308c1\u4ee5\u4e0a\u306e\u6574\u6570\u3067\u3042\u308a\u3001a <= b\u3067\u3042\u308b\u3068\u3057\u307e\u3059\u3002\n#\n# \u307e\u305f\u3001\u5165\u529b\u306f\u3059\u3079\u3066\u6574\u6570\u3068\u3057\u30011 <= N <= 1000\u3068\u3057\u307e\u3059\u3002\n#\n# Input\n# N\n#\n# Output\n# N = a*b + c\u3068\u306a\u308b\u6574\u6570\u306e\u7d44\u306e\u6570\n\nN = int(input())\n\ncount = 0\nfor a in range(1, N+1):\n    for b in range(1, N+1):\n        c = N - a * b\n        if c > 0:\n            count += 1\n\nprint(count)\n", "import sys\ninput = sys.stdin.readline\n\n\nn = int(input())  # \u554f\u984c\u306e\u6570\np = list(map(int, input().split()))  # \u554f\u984c\u306e\u96e3\u6613\u5ea6\nq = list(map(int, input().split()))  # \u6b63\u89e3\u3057\u305f\u554f\u984c\u306e\u96e3\u6613\u5ea6\n\nans = 0  # \u6b63\u89e3\u6570\nfor i in range(n):\n    if p[i] == q[i]:  # \u554f\u984c\u306e\u96e3\u6613\u5ea6\u3068\u6b63\u89e3\u3057\u305f\u554f\u984c\u306e\u96e3\u6613\u5ea6\u304c\u4e00\u81f4\u3057\u3066\u3044\u308c\u3070\n        ans += 1\n\nprint(ans)\n", "# coding: utf-8\n\nN = int(input())\n\ncount = 0\nfor a in range(1, N+1):\n    for b in range(1, N+1):\n        c = N - a*b \n        if c > 0:\n            count += 1\n\nprint(count)\n", "\n\nN = int(input())\n\ncount = 0\nfor a in range(1, N+1):\n    for b in range(1, N+1):\n        c = N - a*b\n        if c > 0:\n            count += 1\n\nprint(count)\n"]