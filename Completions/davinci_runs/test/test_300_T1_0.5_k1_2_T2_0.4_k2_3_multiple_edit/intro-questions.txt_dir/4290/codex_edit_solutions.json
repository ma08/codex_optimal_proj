["\nN, M = map(int, input().split())\n\nprint(N * (M + 1))\n", "\n\ndef sum_even_numbers(n, m):\n    return n*m\n\nn, m = [int(x) for x in input().split()]\nprint(sum_even_numbers(n, m))\n", "\n\ndef sum_even_ways(M, N):\n    return N * M\n\n\nN, M = [int(x) for x in input().split()]\nprint(sum_even_ways(N, M))\n", "\n\ndef sum_even_ways(N, M):\n    return N * M\n\n\nN, M = [int(x) for x in input().split(\" \")]\nprint(sum_even_ways(N, M))\n", "\n\ndef sum_even_ways(N, M):\n    return N * M\n\n\n\nN, M = [int(x) for x in input().split()]\nprint(sum_even_ways(N, M))\n", "N, M = map(int, input().split())\n\nprint(N * M)\n", "\n\ndef sum_even_ways(M, N):\n    return N*M - (N*M)%2\n\nN, M = [int(x) for x in input().split()]\nprint(sum_even_ways(N, M))\n", "\n\ndef sum_even_ways(N, M): \n    return N*M \n\nN, M = [int(x) for x in input().split()]\nprint(sum_even_ways(N, M))\n", "\nN, M = map(int, input().split())\nprint(N * (M + 1))\n", "\n\ndef sum_even_numbers(n, m):\n    return n * m\n\nn, m = [int(x) for x in input().split()]\nprint(sum_even_numbers(n, m))\n", "\n\ndef sum_even_numbers(N, M):\n    return N * M\n\nN, M = [int(x) for x in input().split()]\nprint(sum_even_numbers(N, M))\n", "\n\ndef sum_even_ways(N, M):\n    return N * M\n\n\nN, M = map(int, input().split())\nprint(sum_even_ways(N, M))\n"]