2022-04-22 18:08:31.311446 num operations 2
2022-04-22 18:08:31.311465 size on input set 1
2022-04-22 18:08:31.311603 using api key derek
2022-04-22 18:08:44.483084 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left = [0] * n\n    right = [0] * n\n\n    left[0] = 1\n    right[n-1] = 1\n\n    for i in range(1, n):\n        left[i] = left[i-1]\n        if a[i] > a[i-1]:\n            left[i] += 1\n\n    for i in range(n-2, -1, -1): # from n-2 to 0, step = -1\n        right[i] = right[i+1]\n        if a[i] < a[i+1]:\n            right[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left[i] + right[i] > max_len:\n            max_len = left[i] + right[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1): # from max_len_idx to 0, step = -1\n        if left[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left_len = [0] * n\n    right_len = [0] * n\n\n    left_len[0] = 1\n    right_len[n-1] = 1\n\n    for i in range(1, n):\n        left_len[i] = left_len[i-1]\n        if a[i] > a[i-1]:\n            left_len[i] += 1\n\n    for i in range(n-2, -1, -1):\n        right_len[i] = right_len[i+1]\n        if a[i] < a[i+1]:\n            right_len[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left_len[i] + right_len[i] > max_len:\n            max_len = left_len[i] + right_len[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left_len[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right_len[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left_len = [0] * n\n    right_len = [0] * n\n\n    left_len[0] = 1\n    right_len[n-1] = 1\n\n    for i in range(1, n):\n        left_len[i] = left_len[i-1]\n        if a[i] > a[i-1]:\n            left_len[i] += 1\n\n    for i in range(n-2, -1, -1):\n        right[i] = right[i+1]\n        if a[i] < a[i+1]:\n            right[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left[i] + right[i] > max_len:\n            max_len = left[i] + right[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650650911,
  "object": "edit"
}
2022-04-22 18:08:44.483368 fix spelling mistakes 3 ["\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left = [0] * n\n    right = [0] * n\n\n    left[0] = 1\n    right[n-1] = 1\n\n    for i in range(1, n):\n        left[i] = left[i-1]\n        if a[i] > a[i-1]:\n            left[i] += 1\n\n    for i in range(n-2, -1, -1): # from n-2 to 0, step = -1\n        right[i] = right[i+1]\n        if a[i] < a[i+1]:\n            right[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left[i] + right[i] > max_len:\n            max_len = left[i] + right[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1): # from max_len_idx to 0, step = -1\n        if left[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left_len = [0] * n\n    right_len = [0] * n\n\n    left_len[0] = 1\n    right_len[n-1] = 1\n\n    for i in range(1, n):\n        left_len[i] = left_len[i-1]\n        if a[i] > a[i-1]:\n            left_len[i] += 1\n\n    for i in range(n-2, -1, -1):\n        right_len[i] = right_len[i+1]\n        if a[i] < a[i+1]:\n            right_len[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left_len[i] + right_len[i] > max_len:\n            max_len = left_len[i] + right_len[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left_len[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right_len[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left_len = [0] * n\n    right_len = [0] * n\n\n    left_len[0] = 1\n    right_len[n-1] = 1\n\n    for i in range(1, n):\n        left_len[i] = left_len[i-1]\n        if a[i] > a[i-1]:\n            left_len[i] += 1\n\n    for i in range(n-2, -1, -1):\n        right[i] = right[i+1]\n        if a[i] < a[i+1]:\n            right[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left[i] + right[i] > max_len:\n            max_len = left[i] + right[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-22 18:08:44.483419 size on output set 3
2022-04-22 18:08:44.483426 size on input set 3
2022-04-22 18:08:44.483591 using api key derek
2022-04-22 18:08:53.267294 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left_len = [0] * n\n    right_len = [0] * n\n\n    left_len[0] = 1  # left_len[i] = length of longest decreasing sequence ending at i\n    right_len[n-1] = 1  # right_len[i] = length of longest decreasing sequence starting at i\n\n    for i in range(1, n):\n        left_len[i] = left_len[i-1]\n        if a[i] > a[i-1]:\n            left_len[i] += 1\n\n    for i in range(n-2, -1, -1):\n        right_len[i] = right_len[i+1]\n        if a[i] < a[i+1]:\n            right_len[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left_len[i] + right_len[i] > max_len:\n            max_len = left_len[i] + right_len[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left_len[i] == 1:\n            break\n        seq.append('R')\n\n    for i in range(max_len_idx, n):\n        if right_len[i] == 1:\n            break\n        seq.append('L')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = [int(x) for x in sys.stdin.readline().split()]\n    assert len(a) == n, \"len(a) != n\"\n\n    left_len = [0] * n\n    right_len = [0] * n\n\n    left_len[0] = 1\n    right_len[n-1] = 1\n\n    for i in range(1, n):\n        left_len[i] = left_len[i-1]\n        if a[i] > a[i-1]:\n            left_len[i] += 1\n\n    for i in range(n-2, -1, -1):\n        right_len[i] = right_len[i+1]\n        if a[i] < a[i+1]:\n            right_len[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left_len[i] + right_len[i] > max_len:\n            max_len = left_len[i] + right_len[i]\n            max_len_idx = i\n\n    sys.stdout.write(str(max_len) + '\\n')\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left_len[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right_len[i] == 1:\n            break\n        seq.append('R')\n\n    sys.stdout.write(''.join(seq) + '\\n')\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert(len(a) == n)\n\n    left_len = [0] * n\n    right_len = [0] * n\n\n    left_len[0] = 1\n    right_len[n-1] = 1\n\n    for i in range(1, n):\n        left_len[i] = left_len[i-1]\n        if a[i] > a[i-1]:\n            left_len[i] += 1\n\n    for i in range(n-2, -1, -1):\n        right_len[i] = right_len[i+1]\n        if a[i] < a[i+1]:\n            right_len[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left_len[i] + right_len[i] > max_len:\n            max_len = left_len[i] + right_len[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left_len[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right_len[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650650924,
  "object": "edit"
}
2022-04-22 18:08:53.267720 fix syntax errors 3 ["import sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left_len = [0] * n\n    right_len = [0] * n\n\n    left_len[0] = 1  # left_len[i] = length of longest decreasing sequence ending at i\n    right_len[n-1] = 1  # right_len[i] = length of longest decreasing sequence starting at i\n\n    for i in range(1, n):\n        left_len[i] = left_len[i-1]\n        if a[i] > a[i-1]:\n            left_len[i] += 1\n\n    for i in range(n-2, -1, -1):\n        right_len[i] = right_len[i+1]\n        if a[i] < a[i+1]:\n            right_len[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left_len[i] + right_len[i] > max_len:\n            max_len = left_len[i] + right_len[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left_len[i] == 1:\n            break\n        seq.append('R')\n\n    for i in range(max_len_idx, n):\n        if right_len[i] == 1:\n            break\n        seq.append('L')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n", 'import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = [int(x) for x in sys.stdin.readline().split()]\n    assert len(a) == n, "len(a) != n"\n\n    left_len = [0] * n\n    right_len = [0] * n\n\n    left_len[0] = 1\n    right_len[n-1] = 1\n\n    for i in range(1, n):\n        left_len[i] = left_len[i-1]\n        if a[i] > a[i-1]:\n            left_len[i] += 1\n\n    for i in range(n-2, -1, -1):\n        right_len[i] = right_len[i+1]\n        if a[i] < a[i+1]:\n            right_len[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left_len[i] + right_len[i] > max_len:\n            max_len = left_len[i] + right_len[i]\n            max_len_idx = i\n\n    sys.stdout.write(str(max_len) + \'\\n\')\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left_len[i] == 1:\n            break\n        seq.append(\'L\')\n\n    for i in range(max_len_idx, n):\n        if right_len[i] == 1:\n            break\n        seq.append(\'R\')\n\n    sys.stdout.write(\'\'.join(seq) + \'\\n\')\n\nif __name__ == \'__main__\':\n    main()\n', "\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert(len(a) == n)\n\n    left_len = [0] * n\n    right_len = [0] * n\n\n    left_len[0] = 1\n    right_len[n-1] = 1\n\n    for i in range(1, n):\n        left_len[i] = left_len[i-1]\n        if a[i] > a[i-1]:\n            left_len[i] += 1\n\n    for i in range(n-2, -1, -1):\n        right_len[i] = right_len[i+1]\n        if a[i] < a[i+1]:\n            right_len[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left_len[i] + right_len[i] > max_len:\n            max_len = left_len[i] + right_len[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left_len[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right_len[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-22 18:08:53.267927 using api key kouti
2022-04-22 18:09:02.332763 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left_len = [0] * n\n    right_len = [0] * n\n\n    left_len[0] = 1\n    right_len[n-1] = 1\n\n    for i in range(1, n):\n        left_len[i] = left_len[i-1]\n        if a[i] > a[i-1]:\n            left_len[i] += 1\n\n    for i in range(n-2, -1, -1):\n        right_len[i] = right_len[i+1]\n        if a[i] < a[i+1]:\n            right_len[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left_len[i] + right_len[i] > max_len:\n            max_len = left_len[i] + right_len[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left_len[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right_len[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left_len = [0] * n\n    right_len = [0] * n\n\n    left_len[0] = 1\n    right_len[n-1] = 1\n\n    for i in range(1, n):\n        left_len[i] = left_len[i-1]\n        if a[i] > a[i-1]:\n            left_len[i] += 1\n\n    for i in range(n-2, -1, -1):\n        right_len[i] = right_len[i+1]\n        if a[i] < a[i+1]:\n            right_len[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left_len[i] + right_len[i] > max_len:\n            max_len = left_len[i] + right_len[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left_len[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right_len[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left_len = [0] * n\n    right_len = [0] * n\n\n    left_len[0] = 1\n    right_len[n-1] = 1\n\n    for i in range(1, n):\n        left_len[i] = left_len[i-1]\n        if a[i] > a[i-1]:\n            left_len[i] += 1\n\n    for i in range(n-2, -1, -1):\n        right_len[i] = right_len[i+1]\n        if a[i] < a[i+1]:\n            right_len[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left_len[i] + right_len[i] > max_len:\n            max_len = left_len[i] + right_len[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left_len[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right_len[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650650933,
  "object": "edit"
}
2022-04-22 18:09:02.333010 fix syntax errors 3 ["\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left_len = [0] * n\n    right_len = [0] * n\n\n    left_len[0] = 1\n    right_len[n-1] = 1\n\n    for i in range(1, n):\n        left_len[i] = left_len[i-1]\n        if a[i] > a[i-1]:\n            left_len[i] += 1\n\n    for i in range(n-2, -1, -1):\n        right_len[i] = right_len[i+1]\n        if a[i] < a[i+1]:\n            right_len[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left_len[i] + right_len[i] > max_len:\n            max_len = left_len[i] + right_len[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left_len[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right_len[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left_len = [0] * n\n    right_len = [0] * n\n\n    left_len[0] = 1\n    right_len[n-1] = 1\n\n    for i in range(1, n):\n        left_len[i] = left_len[i-1]\n        if a[i] > a[i-1]:\n            left_len[i] += 1\n\n    for i in range(n-2, -1, -1):\n        right_len[i] = right_len[i+1]\n        if a[i] < a[i+1]:\n            right_len[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left_len[i] + right_len[i] > max_len:\n            max_len = left_len[i] + right_len[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left_len[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right_len[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left_len = [0] * n\n    right_len = [0] * n\n\n    left_len[0] = 1\n    right_len[n-1] = 1\n\n    for i in range(1, n):\n        left_len[i] = left_len[i-1]\n        if a[i] > a[i-1]:\n            left_len[i] += 1\n\n    for i in range(n-2, -1, -1):\n        right_len[i] = right_len[i+1]\n        if a[i] < a[i+1]:\n            right_len[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left_len[i] + right_len[i] > max_len:\n            max_len = left_len[i] + right_len[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left_len[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right_len[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-22 18:09:02.333340 using api key soukgp
2022-04-22 18:09:08.809658 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left = [0] * n\n    right = [0] * n\n\n    left[0] = 1\n    right[n-1] = 1\n\n    for i in range(1, n):\n        left[i] = left[i-1]\n        if a[i] > a[i-1]:\n            left[i] += 1\n\n    for i in range(n-2, -1, -1): # from n-2 to 0, step = -1\n        right[i] = right[i+1]\n        if a[i] < a[i+1]:\n            right[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left[i] + right[i] > max_len:\n            max_len = left[i] + right[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1): \n        if left[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left = [0] * n\n    right = [0] * n\n\n    left[0] = 1\n    right[n-1] = 1\n\n    for i in range(1, n):\n        left[i] = left[i-1]\n        if a[i] > a[i-1]:\n            left[i] += 1\n\n    for i in range(n-2, -1, -1): # from n-2 to 0, step = -1\n        right[i] = right[i+1]\n        if a[i] < a[i+1]:\n            right[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left[i] + right[i] > max_len:\n            max_len = left[i] + right[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n): # from max_len_idx to n, step = 1\n        if right[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left = [0] * n\n    right = [0] * n\n\n    left[0] = 1\n    right[n-1] = 1\n\n    for i in range(1, n):\n        left[i] = left[i-1]\n        if a[i] > a[i-1]:\n            left[i] += 1\n\n    for i in range(n-2, -1, -1): \n        right[i] = right[i+1]\n        if a[i] < a[i+1]:\n            right[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left[i] + right[i] > max_len:\n            max_len = left[i] + right[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1): \n        if left[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650650942,
  "object": "edit"
}
2022-04-22 18:09:08.809923 fix syntax errors 3 ["\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left = [0] * n\n    right = [0] * n\n\n    left[0] = 1\n    right[n-1] = 1\n\n    for i in range(1, n):\n        left[i] = left[i-1]\n        if a[i] > a[i-1]:\n            left[i] += 1\n\n    for i in range(n-2, -1, -1): # from n-2 to 0, step = -1\n        right[i] = right[i+1]\n        if a[i] < a[i+1]:\n            right[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left[i] + right[i] > max_len:\n            max_len = left[i] + right[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1): \n        if left[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left = [0] * n\n    right = [0] * n\n\n    left[0] = 1\n    right[n-1] = 1\n\n    for i in range(1, n):\n        left[i] = left[i-1]\n        if a[i] > a[i-1]:\n            left[i] += 1\n\n    for i in range(n-2, -1, -1): # from n-2 to 0, step = -1\n        right[i] = right[i+1]\n        if a[i] < a[i+1]:\n            right[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left[i] + right[i] > max_len:\n            max_len = left[i] + right[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1):\n        if left[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n): # from max_len_idx to n, step = 1\n        if right[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n\n    left = [0] * n\n    right = [0] * n\n\n    left[0] = 1\n    right[n-1] = 1\n\n    for i in range(1, n):\n        left[i] = left[i-1]\n        if a[i] > a[i-1]:\n            left[i] += 1\n\n    for i in range(n-2, -1, -1): \n        right[i] = right[i+1]\n        if a[i] < a[i+1]:\n            right[i] += 1\n\n    max_len = 0\n    max_len_idx = -1\n    for i in range(n):\n        if left[i] + right[i] > max_len:\n            max_len = left[i] + right[i]\n            max_len_idx = i\n\n    print(max_len)\n    seq = []\n    for i in range(max_len_idx, -1, -1): \n        if left[i] == 1:\n            break\n        seq.append('L')\n\n    for i in range(max_len_idx, n):\n        if right[i] == 1:\n            break\n        seq.append('R')\n\n    print(''.join(seq))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-22 18:09:08.809975 size on output set 7
2022-04-22 18:09:08.809989 num operations 2
2022-04-22 18:09:08.809995 size on input set 1
2022-04-22 18:09:08.810135 using api key sunu
2022-04-22 18:09:13.994130 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# SOLUTION \n\ndef problem_C2():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C2()\n"
    },
    {
      "index": 1,
      "text": "\n\n# Solution\n\ndef problem_C2():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C2()\n"
    },
    {
      "index": 2,
      "text": "\n\n# SOLUTION\n\ndef problem_C():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C()\n"
    }
  ],
  "created": 1650650948,
  "object": "edit"
}
2022-04-22 18:09:13.994496 fix spelling mistakes 3 ["\n\n# SOLUTION \n\ndef problem_C2():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C2()\n", "\n\n# Solution\n\ndef problem_C2():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C2()\n", "\n\n# SOLUTION\n\ndef problem_C():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C()\n"]
2022-04-22 18:09:13.994551 size on output set 3
2022-04-22 18:09:13.994558 size on input set 3
2022-04-22 18:09:13.994711 using api key sunu
2022-04-22 18:09:25.126515 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef problem_C():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C()\n"
    },
    {
      "index": 1,
      "text": "\n\n# SOLUTION \n\ndef problem_C():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C()\n"
    },
    {
      "index": 2,
      "text": "\n\n# SOLUTION 1\n\ndef problem_C():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\n\n# SOLUTION 2\n\ndef problem_C():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C()\nproblem_C()\n"
    }
  ],
  "created": 1650650954,
  "object": "edit"
}
2022-04-22 18:09:25.126777 fix syntax errors 3 ["\n\ndef problem_C():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C()\n", "\n\n# SOLUTION \n\ndef problem_C():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C()\n", "\n\n# SOLUTION 1\n\ndef problem_C():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\n\n# SOLUTION 2\n\ndef problem_C():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C()\nproblem_C()\n"]
2022-04-22 18:09:25.127052 using api key derek
2022-04-22 18:09:30.424063 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# SOLUTION\n\n\n\ndef problem_C2():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C2()\n"
    },
    {
      "index": 1,
      "text": "\n\n# SOLUTION\n\ndef problem_C():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C()\n"
    },
    {
      "index": 2,
      "text": "\n\n# SOLUTION\n\ndef problem_C():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C()\n"
    }
  ],
  "created": 1650650965,
  "object": "edit"
}
2022-04-22 18:09:30.424350 fix syntax errors 3 ["# SOLUTION\n\n\n\ndef problem_C2():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C2()\n", "\n\n# SOLUTION\n\ndef problem_C():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C()\n", "\n\n# SOLUTION\n\ndef problem_C():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C()\n"]
2022-04-22 18:09:30.424606 using api key sunu
2022-04-22 18:09:39.125035 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# Solution\n\ndef problem_C2():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C2()\n"
    },
    {
      "index": 1,
      "text": "\n# Solution\n\ndef problem_C2():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\nproblem_C2()\n"
    },
    {
      "index": 2,
      "text": "\n# Solution\n\ndef problem_C2():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1  # 0\u3092\u542b\u3081\u308b\n    d[-1] = 1  # m\u3092\u542b\u3081\u308b\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []  # \u7b54\u3048\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0  # \u73fe\u5728\u306e\u4f4d\u7f6e\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')  # \u53f3\u306b\u9032\u3080\n            now = a[i]\n        else:\n            x = f(p[now] - i)  # \u6b21\u306e\u4f4d\u7f6e\n            if x > now:\n                ans.append('R')  # \u53f3\u306b\u9032\u3080\n                now = x\n            else:\n                ans.append('L')  # \u5de6\u306b\u9032\u3080\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C2()\n"
    }
  ],
  "created": 1650650970,
  "object": "edit"
}
2022-04-22 18:09:39.125400 fix syntax errors 3 ["\n# Solution\n\ndef problem_C2():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C2()\n", "\n# Solution\n\ndef problem_C2():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1\n    d[-1] = 1\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')\n            now = a[i]\n        else:\n            x = f(p[now] - i)\n            if x > now:\n                ans.append('R')\n                now = x\n            else:\n                ans.append('L')\n    print(len(ans))\n    print(''.join(ans))\n\nproblem_C2()\n", "\n# Solution\n\ndef problem_C2():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    d = [0] * (m + 1)\n    for i in a:\n        d[i] += 1\n    d[0] = 1  # 0を含める\n    d[-1] = 1  # mを含める\n    p = [0] * (m + 1)\n    for i in range(1, m + 1):\n        p[i] = p[i - 1] + d[i]\n    ans = []  # 答え\n\n    def f(x):\n        if x == 0:\n            return 0\n        if x == p[m]:\n            return m\n        l, r = 0, m\n        while l < r:\n            mid = (l + r) // 2\n            if p[mid] < x:\n                l = mid + 1\n            else:\n                r = mid\n        return l\n\n    now = 0  # 現在の位置\n    for i in range(n):\n        if a[i] > now:\n            ans.append('R')  # 右に進む\n            now = a[i]\n        else:\n            x = f(p[now] - i)  # 次の位置\n            if x > now:\n                ans.append('R')  # 右に進む\n                now = x\n            else:\n                ans.append('L')  # 左に進む\n    print(len(ans))\n    print(''.join(ans))\n\n\nproblem_C2()\n"]
2022-04-22 18:09:39.125478 size on output set 8
