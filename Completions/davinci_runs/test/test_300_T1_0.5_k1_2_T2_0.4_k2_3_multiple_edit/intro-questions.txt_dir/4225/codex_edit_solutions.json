["\nfrom operator import itemgetter\n\ndef get_max_possible_sum(cards, K):\n  cards.sort(key=itemgetter(1), reverse=True)\n  return sum(card[1] for card in cards[:K])\n\nA, B, C, K = map(int, input().split())\ncards = [('A', A), ('B', B), ('C', C)]\nprint(get_max_possible_sum(cards, K)\n", "# coding: utf-8\n\nfrom operator import itemgetter\n\ndef get_max_possible_sum(cards):\n    cards.sort(key=itemgetter(1), reverse=True)\n    return sum(card[1] for card in cards[:K]) # cards[:K]\u306fcards\u306e\u3046\u3061\u3001K\u500b\u306e\u8981\u7d20\u3092\u53d6\u308a\u51fa\u3057\u305f\u30ea\u30b9\u30c8\n\nA, B, C, K = map(int, input().split())\ncards = [('A', A), ('B', B), ('C', C)]\nprint(get_max_possible_sum(cards))\n", "\n# A, B, C, K = map(int, input().split())  # \u6a19\u6e96\u5165\u529b\nA, B, C, K = 2, 1, 1, 3  # \u5165\u529b\u4f8b\n\nif K <= A:\n    print(K)\nelif K <= A+B:\n    print(A)\nelse:\n    print(A - (K - A - B))\n", "\nfrom operator import itemgetter\n\ndef get_max_possible_sum(cards, K):\n    # sort by second item\n    cards.sort(key=itemgetter(1), reverse=True)\n    # sum of first K items\n    return sum(card[1] for card in cards[:K])\n\nA, B, C, K = map(int, input().split())\ncards = [('A', A), ('B', B), ('C', C)]\nprint(get_max_possible_sum(cards, K))\n", "\nfrom operator import itemgetter\n\ndef get_max_possible_sum(cards, K):\n    cards.sort(key=itemgetter(1), reverse=True)\n    return sum(card[1] for card in cards[:K])\n\nA, B, C, K = map(int, input().split())\ncards = [('A', A), ('B', B), ('C', C)]\nprint(get_max_possible_sum(cards, K))\n", "# coding: utf-8\n\nfrom operator import itemgetter\n\ndef get_max_possible_sum(cards):\n    cards.sort(key=itemgetter(1), reverse=True)\n    return sum(card[1] for card in cards[:k])\n\na, b, c, k = map(int, input().split())\ncards = [('A', A), ('B', B), ('C', C)]\nprint(get_max_possible_sum(cards))\n", "\n\nA, B, C, K = map(int, input().split())\n\nif K <= A:\n    print(K)\nelif K <= A+B:\n    print(A)\nelse:\n    print(A - (K - A - B))\n", "# A, B, C, K = map(int, input().split())  # \u6a19\u6e96\u5165\u529b\nA, B, C, K = 2, 1, 1, 3  # \u5165\u529b\u4f8b\n\n\n\nif K <= A:\n    print(K)\nelif K <= A+B:\n    print(A)\nelse:\n    print(A - (K - A - B))\n", "from operator import itemgetter\n\n\n\ndef get_max_possible_sum(cards, K):\n    cards.sort(key=itemgetter(1), reverse=True)\n\n    return sum(card[1] for card in cards[:K])\n\nA, B, C, K = map(int, input().split())\ncards = [('A', A), ('B', B), ('C', C)]\nprint(get_max_possible_sum(cards, K))\n", "\n\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\nA.sort()\nA.reverse()\n\nprint(A)\n", "\n\nfrom operator import itemgetter\n\ndef get_max_possible_sum(cards, K):\n    cards.sort(key=itemgetter(1), reverse=True) # sort by second item\n    return sum(card[1] for card in cards[:K]) # sum of first K items\n\nA, B, C, K = map(int, input().split())\ncards = [('A', A), ('B', B), ('C', C)]\nprint(get_max_possible_sum(cards, K))\n", "\n\nfrom operator import itemgetter\n\ndef get_max_possible_sum(cards):\n    cards.sort(key=itemgetter(1), reverse=True) # sort by second item\n    return sum(card[1] for card in cards[:K]) # sum of first K items \n\nA, B, C, K = map(int, input().split())\ncards = [('A', A), ('B', B), ('C', C)]\nprint(get_max_possible_sum(cards, K))\n", "\n\nA, B, K = map(int, input().split())\n# A, B, K = 2, 1, 3\n\nif K <= A:\n    print(K)\nelif K <= A+B:\n    print(A)\nelse:\n    print(A - (K - A - B))\n", "\n# A, B, K = map(int, input().split())\nA, B, K = 2, 1, 3\n\nif K <= A:\n    print(K)\nelif K <= A+B:\n    print(A)\nelse:\n    print(A - (K - A - B))\n", "# coding: utf-8\n\nfrom operator import itemgetter\n\ndef get_max_possible_sum(cards):\n    cards.sort(key=itemgetter(1), reverse=True) # sort by value\n    return sum(card[1] for card in cards[:K])\n\nA, B, C, K = map(int, input().split())\ncards = [('A', A), ('B', B), ('C', C)]\nprint(get_max_possible_sum(cards))\n", "\nA, B, C, K = map(int, input().split())\n\nif K <= A:\n    print(K)\nelif K <= A+B:\n    print(A)\nelse:\n    print(A - (K - A - B))  # \u3053\u306e\u8a08\u7b97\u304c\u82e6\u624b\n"]