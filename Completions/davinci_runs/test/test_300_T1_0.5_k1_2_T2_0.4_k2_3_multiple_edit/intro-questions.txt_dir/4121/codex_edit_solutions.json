["def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    mx = max(a)\n    mn = min(a)\n    if mx == mn:\n        print('YES')\n        return\n    if mx - mn > 1:\n        print('NO')\n        return\n    if a.count(mx) > 1 and a.count(mn) > 1:\n        print('NO')\n        return\n    print('YES')\n\n\nif __name__ == \"__main__\":\n    main()\n", "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(a)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n = int(input())  # \u6574\u6570\u306e\u5165\u529b\n    a = list(map(int, input().split()))  # \u6574\u6570\u30ea\u30b9\u30c8\u306e\u5165\u529b\n    print(a)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    max_ = max(a)\n    min_ = min(a)\n    if max_ == min_:\n        print('YES')\n        return\n    if max_ - min_ > 1:\n        print('NO')\n        return\n    if a.count(max_) > 1 and a.count(min_) > 1:\n        print('NO')\n        return\n    print('YES')\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n\ndef solver(n, a, b):\n    \"\"\"\n    >>> solver(5, [2, 1, 1, 2, 5], [1, 2, 3, 4, 5])\n    'YES'\n    >>> solver(3, [4, 5, 3], [1, 2, 3])\n    'YES'\n    >>> solver(2, [10, 10], [1, 2])\n    'YES'\n    >>> solver(3, [1, 2, 3], [1, 2, 3])\n    'NO'\n    \"\"\"\n    if len(set(a)) == 1 or len(set(b)) == 1:\n        return 'YES'\n    if a.count(max(set(a))) == 1 or b.count(max(set(b))) == 1:\n        return 'YES'\n    else:\n        return 'NO'\n    if len(set(a)) > 2 or len(set(b)) > 2:\n        return 'NO'\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(solver(n, a, b))\n", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    max_num = max(a)\n    min_num = min(a)\n    if max_num == min_num:\n        print('YES')\n        return\n    if max_num - min_num > 1:\n        print('NO')\n        return\n    if a.count(max_num) > 1 and a.count(min_num) > 1:\n        print('NO')\n        return\n    print('YES')\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef solver(n, a, k):\n    \"\"\"\n    >>> solver(5, [2, 1, 1, 2, 5], 3)\n    'YES'\n    >>> solver(3, [4, 5, 3], 2)\n    'YES'\n    >>> solver(2, [10, 10], 1)\n    'YES'\n    >>> solver(3, [1, 2, 3], 2)\n    'NO'\n    \"\"\"\n    if len(set(a)) == 1 or len(set(a)) == k:\n        return 'YES'\n    if len(set(a)) == k + 1:\n        return 'NO'\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = int(input())\n    print(solver(n, a, k))\n", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    mx = max(a)\n    mn = min(a)\n    if mx == mn or mx - mn > 1 or a.count(mx) > 1 or a.count(mn) > 1:\n        print('NO')\n    else:\n        print('YES')\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n\ndef solver(n, a, b):\n    \"\"\"\n    >>> solver(5, [2, 1, 1, 2, 5], [1, 2, 3, 4, 5])\n    'YES'\n    >>> solver(3, [4, 5, 3], [1, 2, 3])\n    'YES'\n    >>> solver(2, [10, 10], [1, 2])\n    'YES'\n    >>> solver(3, [1, 2, 3], [1, 2, 3])\n    'NO'\n    \"\"\"\n    if len(set(a)) == 1 or len(set(b)) == 1 or len(set(a)) == 2 or len(set(b)) == 2:\n        return 'YES'\n        if a.count(max(set(a))) == 1 or b.count(max(set(b))) == 1:\n            return 'YES'\n        else:\n            return 'NO'\n    if len(set(a)) > 2 or len(set(b)) > 2:\n        return 'NO'\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(solver(n, a, b))\n", "\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    max_ = max(a)\n    min_ = min(a)\n    if max_ == min_:\n        print('YES')\n        return\n    if max_ - min_ > 1:\n        print('NO')\n        return\n    if a.count(max_) > 1 and a.count(min_) > 1:\n        print('NO')\n        return\n    print('YES')\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = input()\n    b = input()\n    c = input()\n    d = input()\n    print(a)\n    print(b)\n    print(c)\n    print(d)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nimport sys\n\n\ndef input():\n    return sys.stdin.readline()[:-1]\n\n\ndef solver(n, a, b):\n    \"\"\"\n    >>> solver(5, [2, 1, 1, 2, 5], [1, 2, 3, 4, 5])\n    'YES'\n    >>> solver(3, [4, 5, 3], [1, 2, 3])\n    'YES'\n    >>> solver(2, [10, 10], [1, 2])\n    'YES'\n    >>> solver(3, [1, 2, 3], [1, 2, 3])\n    'NO'\n    \"\"\"\n    if len(set(a)) == 1 or len(set(b)) == 1:\n        return 'YES'\n    if a.count(max(set(a))) == 1 or b.count(max(set(b))) == 1:\n        return 'YES'\n    else:\n        return 'NO'\n    if len(set(a)) > 2 or len(set(b)) > 2:\n        return 'NO'\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    print(solver(n, a, b))\n", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    mx = max(a)  # mx = 4\n    mn = min(a)  # mn = 1\n    if mx == mn:  # 4 == 1\n        print('YES')\n        return\n    if mx - mn > 1:  # 4 - 1 > 1\n        print('NO')\n        return\n    if a.count(mx) > 1 or a.count(mn) > 1:\n        print('NO')\n        return\n    print('YES')\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef solver(n, a):\n    \"\"\"\n    >>> solver(5, [2, 1, 1, 2, 5])\n    'YES'\n    >>> solver(3, [4, 5, 3])\n    'YES'\n    >>> solver(2, [10, 10])\n    'YES'\n    >>> solver(3, [1, 2, 3])\n    'NO'\n    \"\"\"\n    if len(set(a)) == 1:  # if all elements are equal\n        return 'YES'\n    if len(set(a)) == 2:\n        if a.count(max(set(a))) == 1:\n            return 'YES'\n        else:\n            return 'NO'\n    if len(set(a)) > 2:\n        return 'NO'\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solver(n, a))\n"]