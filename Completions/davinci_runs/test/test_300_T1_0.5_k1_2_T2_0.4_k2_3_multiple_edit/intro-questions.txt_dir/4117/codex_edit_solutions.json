["import sys\nfrom itertools import combinations\nsys.setrecursionlimit(10 ** 7)\n\n\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\nMOD = 10 ** 9 + 7\n", "\nN = int(input())\n\nL = []\nfor i in range(N):\n    L.append(list(map(int, input().split())))\n\nprint(L)\n", "import sys\nfrom itertools import combinations\nsys.setrecursionlimit(10 ** 7)\n\n\n\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\nMOD = 10 ** 9 + 7\n", "\n\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n# \u7d44\u307f\u5408\u308f\u305b\u3092\u6c42\u3081\u308b\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n", "from itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n", "from itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n", "from itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2] and i[0] + i[2] > i[1] and i[1] + i[2] > i[0]:\n        count += 1\n\nprint(count)\n", "import sys\nfrom itertools import combinations\nsys.setrecursionlimit(10 ** 7)\n\n\n\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\ncount = 0\nMOD = 10 ** 9 + 7\n\nprint(count)\n", "\n\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"]