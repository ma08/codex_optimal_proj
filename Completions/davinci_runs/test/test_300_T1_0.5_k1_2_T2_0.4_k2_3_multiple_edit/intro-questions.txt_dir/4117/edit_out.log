2022-04-22 18:44:43.832641 num operations 2
2022-04-22 18:44:43.832658 size on input set 1
2022-04-22 18:44:43.832856 using api key sunu
2022-04-22 18:45:01.888762 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "import sys\nfrom itertools import combinations\nsys.setrecursionlimit(10 ** 7)\n\n\n\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\nMOD = 10 ** 9 + 7\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n# \u7d44\u307f\u5408\u308f\u305b\u3092\u6c42\u3081\u308b\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1650653084,
  "object": "edit"
}
2022-04-22 18:45:01.889077 fix spelling mistakes 3 ['\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n', 'import sys\nfrom itertools import combinations\nsys.setrecursionlimit(10 ** 7)\n\n\n\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\nMOD = 10 ** 9 + 7\n\nprint(count)\n', '\n\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n# 組み合わせを求める\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n']
2022-04-22 18:45:01.889132 size on output set 3
2022-04-22 18:45:01.889143 size on input set 3
2022-04-22 18:45:01.889345 using api key derek
2022-04-22 18:45:07.096450 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n# \u7d44\u307f\u5408\u308f\u305b\u3092\u6c42\u3081\u308b\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\n\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n# \u7d44\u307f\u5408\u308f\u305b\u3092\u6c42\u3081\u308b\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1650653101,
  "object": "edit"
}
2022-04-22 18:45:07.096732 fix syntax errors 3 ['\n\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n# 組み合わせを求める\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n', '\n\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n', '\n\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n# 組み合わせを求める\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n']
2022-04-22 18:45:07.096923 using api key kouti
2022-04-22 18:45:11.796284 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\nfrom itertools import combinations\nsys.setrecursionlimit(10 ** 7)\n\n\n\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\nMOD = 10 ** 9 + 7\n"
    },
    {
      "index": 1,
      "text": "import sys\nfrom itertools import combinations\nsys.setrecursionlimit(10 ** 7)\n\n\n\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\ncount = 0\nMOD = 10 ** 9 + 7\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "import sys\nfrom itertools import combinations\nsys.setrecursionlimit(10 ** 7)\n\n\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\nMOD = 10 ** 9 + 7\n"
    }
  ],
  "created": 1650653107,
  "object": "edit"
}
2022-04-22 18:45:11.796559 fix syntax errors 3 ['import sys\nfrom itertools import combinations\nsys.setrecursionlimit(10 ** 7)\n\n\n\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\nMOD = 10 ** 9 + 7\n', 'import sys\nfrom itertools import combinations\nsys.setrecursionlimit(10 ** 7)\n\n\n\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\ncount = 0\nMOD = 10 ** 9 + 7\n\nprint(count)\n', 'import sys\nfrom itertools import combinations\nsys.setrecursionlimit(10 ** 7)\n\n\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\nN, M = map(int, input().split())\nA = list(map(int, input().split()))\n\nMOD = 10 ** 9 + 7\n']
2022-04-22 18:45:11.796781 using api key derek
2022-04-22 18:45:19.408112 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "from itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\n\nL = []\nfor i in range(N):\n    L.append(list(map(int, input().split())))\n\nprint(L)\n"
    }
  ],
  "created": 1650653111,
  "object": "edit"
}
2022-04-22 18:45:19.408358 fix syntax errors 3 ['from itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n', 'from itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n', '\nN = int(input())\n\nL = []\nfor i in range(N):\n    L.append(list(map(int, input().split())))\n\nprint(L)\n']
2022-04-22 18:45:19.408499 size on output set 7
2022-04-22 18:45:19.408516 num operations 2
2022-04-22 18:45:19.408522 size on input set 1
2022-04-22 18:45:19.408665 using api key sunu
2022-04-22 18:45:23.851125 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1650653119,
  "object": "edit"
}
2022-04-22 18:45:23.851344 fix spelling mistakes 3 ['\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n', '\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n', '\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n']
2022-04-22 18:45:23.851372 size on output set 1
2022-04-22 18:45:23.851380 size on input set 1
2022-04-22 18:45:23.851550 using api key derek
2022-04-22 18:45:29.612124 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "from itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "from itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2] and i[0] + i[2] > i[1] and i[1] + i[2] > i[0]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "from itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1650653123,
  "object": "edit"
}
2022-04-22 18:45:29.612375 fix syntax errors 3 ['from itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n', 'from itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2] and i[0] + i[2] > i[1] and i[1] + i[2] > i[0]:\n        count += 1\n\nprint(count)\n', 'from itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n']
2022-04-22 18:45:29.612403 size on output set 2
