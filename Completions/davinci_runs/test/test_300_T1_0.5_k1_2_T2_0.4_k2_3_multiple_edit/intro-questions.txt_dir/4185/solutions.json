["import sys\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\narr = [[] for i in range(m)]\n\nfor _ in range(n):\n    l = list(map(int, input().split()))\n    for i in range(m):\n        arr[i].append(l[i])\n\nout = 0\nfor i in range(m):\n    l = arr[i]\n    \n    best = list(range(0, -n, -1))\n    for j in range(n):\n        v = l[j] - i - 1\n        \n        if v % m == 0:\n            correct = v // m\n            if 0 <= correct < n:\n                best[j - correct] += 1\n    out += (n - max(best))\n\nprint(out)\n", "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int, minp().split()))\n\ndef solve():\n\tn, m = mints()\n\ta = [None] * n\n\tfor i in range(n):\n\t\ta[i] = list(mints())\n\tr = 0\n\tfor j in range(m):\n\t\tc = [0]*n\n\t\tfor i in range(n):\n\t\t\tx = (a[i][j]-1)\n\t\t\t#print(x, end='')\n\t\t\tif x % m == j and x < n*m:\n\t\t\t\tt = (x-j) // m\n\t\t\t\t#print('',t,i,end='')\n\t\t\t\tif i-t >= 0:\n\t\t\t\t\tc[i-t] += 1\n\t\t\t\telse:\n\t\t\t\t\tc[i-t+n] += 1\n\t\t\t#print(end='|')\n\t\t#print()\n\t\tmi = int(1e9)\n\t\t#print(c)\n\t\tfor i in range(n):\n\t\t\tmi = min(mi, i+n-c[i])\n\t\tr += mi\n\tprint(r)\n\nsolve()\n\n", "import sys\ninput = sys.stdin.readline\n\nn,m=list(map(int,input().split()))\n\nCR=[list(map(int,input().split())) for i in range(n)]\nfor i in range(n):\n    for j in range(m):\n        CR[i][j]-=1\n        \nMAX=n*m\nANS=0\n\nfor i in range(m):\n    SCORE=[0]*n\n\n    for j in range(n):\n        if CR[j][i]%m==i%m and 0<=CR[j][i]<MAX:\n            x=(CR[j][i]-i%m)//m\n            SCORE[(j-x)%n]+=1\n\n        #print(SCORE)\n\n    #print(SCORE)\n\n    ANS+=min([n+j-SCORE[j] for j in range(n)])\n\nprint(ANS)\n", "n, m = (int(i) for i in input().split())\na = [[int(i) for i in input().split()] for _ in range(n)]\nres = 0\nfor j in range(m):\n\tb = [0] * n\n\tfor i in range(n):\n\t\tif a[i][j] <= n*m and (a[i][j]-j-1)%m == 0:\n\t\t\tpos = (a[i][j]-j-1)//m\n\t\t\tshift = i-pos if i>=pos else i-pos+n\n\t\t\tb[shift] += 1\n\tres += min(i+n-b[i] for i in range(n))\nprint(res)\n", "\"\"\"\nNTC here\n\"\"\"\nimport sys\ninp= sys.stdin.readline\ninput = lambda : inp().strip()\nflush= sys.stdout.flush\n# import threading\n# sys.setrecursionlimit(10**6)\n# threading.stack_size(2**25)\n\ndef iin(): return int(input())\ndef lin(): return list(map(int, input().split()))\n\n# range = xrange\n# input = raw_input\n\ndef main():\n    n, m = lin()\n    a= [lin() for i in range(n)]\n    a = [[a[j][i] for j in range(n)] for i in range(m)]\n    ans = 0\n    #print(*a, sep='\\n')\n    for i in range(m):\n        dc = {}\n        for j in range(n):\n            x = a[i][j]-i-1\n            if x>=0 and (x)%m==0 and x//m<n:\n                #print(a[i][j], x, x//m, (j-x//m), (j-x//m)%n)\n                try:\n                    dc[(j-x//m)%n]+=1\n                except:\n                    dc[(j-x//m)%n]=1\n        ch1, ch2 = 0, -1\n        ch3 = n\n        for i in dc:\n            ch3 = min(ch3, i+n-dc[i])\n        #print(dc, ch1)\n        ans += min(n, ch3)\n    print(ans)\n\n\n\n\n\n            \n        \n\n        \nmain()\n# threading.Thread(target=main).start()\n"]