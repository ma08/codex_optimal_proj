2022-04-22 21:27:02.816547 num operations 2
2022-04-22 21:27:02.816573 size on input set 1
2022-04-22 21:27:02.816788 using api key kouti
2022-04-22 21:27:09.029719 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nS = input()\n\nprint(S[0] + str(len(S[1:-1])) + S[-1])\n"
    },
    {
      "index": 1,
      "text": "\n\nP, Q, R = map(int, input().split()) #input\n\nprint(min(P+Q, Q+R, R+P)) #output\n"
    },
    {
      "index": 2,
      "text": "\nP, Q, R = map(int, input().split())\n\nprint(min(P+Q, Q+R, R+P))\n"
    }
  ],
  "created": 1650662822,
  "object": "edit"
}
2022-04-22 21:27:09.029995 fix spelling mistakes 3 ['\n\nS = input()\n\nprint(S[0] + str(len(S[1:-1])) + S[-1])\n', '\n\nP, Q, R = map(int, input().split()) #input\n\nprint(min(P+Q, Q+R, R+P)) #output\n', '\nP, Q, R = map(int, input().split())\n\nprint(min(P+Q, Q+R, R+P))\n']
2022-04-22 21:27:09.030023 size on output set 3
2022-04-22 21:27:09.030031 size on input set 3
2022-04-22 21:27:09.030188 using api key kouti
2022-04-22 21:27:14.786949 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nP, Q, R = map(int, input().split())  #input\n\nprint(min(P+Q, Q+R, R+P))  #output\n"
    },
    {
      "index": 1,
      "text": "\n\nP, Q, R = map(int, input().split())\n\nprint(min(P+Q, Q+R, R+P))\n"
    },
    {
      "index": 2,
      "text": "\n\nP, Q, R = map(int, input().split()) #input\n\nprint(min(P+Q, Q+R, R+P))  #output\n"
    }
  ],
  "created": 1650662829,
  "object": "edit"
}
2022-04-22 21:27:14.787203 fix syntax errors 3 ['\n\nP, Q, R = map(int, input().split())  #input\n\nprint(min(P+Q, Q+R, R+P))  #output\n', '\n\nP, Q, R = map(int, input().split())\n\nprint(min(P+Q, Q+R, R+P))\n', '\n\nP, Q, R = map(int, input().split()) #input\n\nprint(min(P+Q, Q+R, R+P))  #output\n']
2022-04-22 21:27:14.787402 using api key derek
2022-04-22 21:27:20.214773 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "P, Q, R = map(int, input().split())\n\nprint(min(P+Q, Q+R, R+P))\n"
    },
    {
      "index": 1,
      "text": "\nA, B, C = map(int, input().split())\n\nprint(min(A+B, B+C, C+A))\n"
    },
    {
      "index": 2,
      "text": "P, Q, R = map(int, input().split())\n\nprint(min(P+Q, Q+R, R+P))\n"
    }
  ],
  "created": 1650662834,
  "object": "edit"
}
2022-04-22 21:27:20.214982 fix syntax errors 3 ['P, Q, R = map(int, input().split())\n\nprint(min(P+Q, Q+R, R+P))\n', '\nA, B, C = map(int, input().split())\n\nprint(min(A+B, B+C, C+A))\n', 'P, Q, R = map(int, input().split())\n\nprint(min(P+Q, Q+R, R+P))\n']
2022-04-22 21:27:20.215153 using api key soukgp
2022-04-22 21:27:25.658396 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nS = input()\n\nprint(S[0] + str(len(S) - 2) + S[-1])\n"
    },
    {
      "index": 1,
      "text": "\n\nS = input()\n\nprint(S[0] + str(len(S[1:-1])) + S[-1]) \n"
    },
    {
      "index": 2,
      "text": "\n\nS = input()\n\nprint(S[0] + str(len(S) - 2) + S[-1])\n"
    }
  ],
  "created": 1650662840,
  "object": "edit"
}
2022-04-22 21:27:25.658605 fix syntax errors 3 ['\n\nS = input()\n\nprint(S[0] + str(len(S) - 2) + S[-1])\n', '\n\nS = input()\n\nprint(S[0] + str(len(S[1:-1])) + S[-1]) \n', '\n\nS = input()\n\nprint(S[0] + str(len(S) - 2) + S[-1])\n']
2022-04-22 21:27:25.658627 size on output set 7
2022-04-22 21:27:25.658640 num operations 2
2022-04-22 21:27:25.658646 size on input set 1
2022-04-22 21:27:25.658787 using api key jaanu
2022-04-22 21:27:30.705087 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P)) \n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650662845,
  "object": "edit"
}
2022-04-22 21:27:30.705300 fix spelling mistakes 3 ['\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P))\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P)) \n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-22 21:27:30.705326 size on output set 3
2022-04-22 21:27:30.705334 size on input set 3
2022-04-22 21:27:30.705481 using api key jaanu
2022-04-22 21:27:35.911004 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P)) \n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P + Q, Q + R, R + P))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    P, Q, R = map(int, input().split()) \n    print(min(P+Q, Q+R, R+P))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650662850,
  "object": "edit"
}
2022-04-22 21:27:35.911219 fix syntax errors 3 ['\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P)) \n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P + Q, Q + R, R + P))\n\nif __name__ == "__main__":\n    main()\n', '\n\ndef main():\n    P, Q, R = map(int, input().split()) \n    print(min(P+Q, Q+R, R+P))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-22 21:27:35.911395 using api key soukgp
2022-04-22 21:27:40.842534 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P)) \n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650662855,
  "object": "edit"
}
2022-04-22 21:27:40.842746 fix syntax errors 3 ['\n\nimport sys\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P))\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P)) \n\nif __name__ == "__main__":\n    main()\n']
2022-04-22 21:27:40.842903 using api key jaanu
2022-04-22 21:27:46.049788 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P)) \n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P)) \n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650662860,
  "object": "edit"
}
2022-04-22 21:27:46.050009 fix syntax errors 3 ['\nimport sys\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P)) \n\nif __name__ == "__main__":\n    main()\n', '\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P))\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    P, Q, R = map(int, input().split())\n    print(min(P+Q, Q+R, R+P)) \n\nif __name__ == "__main__":\n    main()\n']
2022-04-22 21:27:46.050157 size on output set 6
