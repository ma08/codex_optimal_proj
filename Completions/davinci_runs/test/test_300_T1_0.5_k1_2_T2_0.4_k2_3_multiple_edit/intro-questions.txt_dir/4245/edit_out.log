2022-04-22 20:42:07.954826 num operations 2
2022-04-22 20:42:07.954845 size on input set 1
2022-04-22 20:42:07.955007 using api key sunu
2022-04-22 20:42:15.239985 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split()) # \uacf5\ubc31\uc73c\ub85c \uad6c\ubd84\ub41c \uc815\uc218\ub4e4\uc744 \uc785\ub825\ubc1b\uc74c\nprint(B // A + (B % A != 0)) # B\ub97c A\ub85c \ub098\ub208 \ubaab\uacfc \ub098\uba38\uc9c0\uac00 0\uc774 \uc544\ub2c8\uba74 1\uc744 \ub354\ud55c \uac12\uc744 \ucd9c\ub825\n"
    }
  ],
  "created": 1650660128,
  "object": "edit"
}
2022-04-22 20:42:15.240249 fix spelling mistakes 3 ['import sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n', '\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n', '\n\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split()) # 공백으로 구분된 정수들을 입력받음\nprint(B // A + (B % A != 0)) # B를 A로 나눈 몫과 나머지가 0이 아니면 1을 더한 값을 출력\n']
2022-04-22 20:42:15.240292 size on output set 3
2022-04-22 20:42:15.240302 size on input set 3
2022-04-22 20:42:15.240491 using api key derek
2022-04-22 20:42:23.757438 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "A, B = map(int, input().split())\nprint(B // A + (B % A > 0))\n"
    },
    {
      "index": 1,
      "text": "from collections import deque\n\nn, m = map(int, input().split())\n\ngraph = [[] for _ in range(n + 1)]\n\nfor _ in range(m):\n    a, b = map(int, input().split())\n    graph[a].append(b)\n    graph[b].append(a)\n\nvisited = [False] * (n + 1)\n\nd = deque()\nd.append(1)\nvisited[1] = True\n\nwhile d:\n    v = d.popleft()\n    for i in graph[v]:\n        if not visited[i]:\n            d.append(i)\n            visited[i] = True\n\nprint(visited.count(True) - 1)\n"
    },
    {
      "index": 2,
      "text": "import sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint((B - 1) // A + 1)\n"
    }
  ],
  "created": 1650660135,
  "object": "edit"
}
2022-04-22 20:42:23.757697 fix syntax errors 3 ['A, B = map(int, input().split())\nprint(B // A + (B % A > 0))\n', 'from collections import deque\n\nn, m = map(int, input().split())\n\ngraph = [[] for _ in range(n + 1)]\n\nfor _ in range(m):\n    a, b = map(int, input().split())\n    graph[a].append(b)\n    graph[b].append(a)\n\nvisited = [False] * (n + 1)\n\nd = deque()\nd.append(1)\nvisited[1] = True\n\nwhile d:\n    v = d.popleft()\n    for i in graph[v]:\n        if not visited[i]:\n            d.append(i)\n            visited[i] = True\n\nprint(visited.count(True) - 1)\n', 'import sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint((B - 1) // A + 1)\n']
2022-04-22 20:42:23.757876 using api key jaanu
2022-04-22 20:42:28.927213 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n"
    },
    {
      "index": 1,
      "text": "import sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0)) \n"
    },
    {
      "index": 2,
      "text": "import sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0)) \n"
    }
  ],
  "created": 1650660143,
  "object": "edit"
}
2022-04-22 20:42:28.927454 fix syntax errors 3 ['import sys\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n', 'import sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0)) \n', 'import sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0)) \n']
2022-04-22 20:42:28.927615 using api key jaanu
2022-04-22 20:42:36.619143 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n"
    },
    {
      "index": 2,
      "text": "import sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split()) # \uacf5\ubc31\uc73c\ub85c \uad6c\ubd84\ub41c \uc815\uc218\ub4e4\uc744 \uc785\ub825\ubc1b\uc74c\nprint(B // A + (B % A != 0)) # B\ub97c A\ub85c \ub098\ub208 \ubaab\uacfc \ub098\uba38\uc9c0\uac00 0\uc774 \uc544\ub2c8\uba74 1\uc744 \ub354\ud55c \uac12\uc744 \ucd9c\ub825\n"
    }
  ],
  "created": 1650660148,
  "object": "edit"
}
2022-04-22 20:42:36.619364 fix syntax errors 3 ['\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n', '\n\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n', 'import sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split()) # 공백으로 구분된 정수들을 입력받음\nprint(B // A + (B % A != 0)) # B를 A로 나눈 몫과 나머지가 0이 아니면 1을 더한 값을 출력\n']
2022-04-22 20:42:36.619395 size on output set 8
2022-04-22 20:42:36.619409 num operations 2
2022-04-22 20:42:36.619415 size on input set 1
2022-04-22 20:42:36.619566 using api key jaanu
2022-04-22 20:42:42.310462 fix spelling mistakes {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport math\n\ndef minPowerStrip(A, B):\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrip(A, B))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport math\n\ndef minPowerStrips(A, B):   # A is the power of one strip, B is the total power needed\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport math\n\ndef minPowerStrip(A, B):\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrip(A, B))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650660156,
  "object": "edit"
}
2022-04-22 20:42:42.310697 fix spelling mistakes 3 ["\n\nimport math\n\ndef minPowerStrip(A, B):\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrip(A, B))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport math\n\ndef minPowerStrips(A, B):   # A is the power of one strip, B is the total power needed\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport math\n\ndef minPowerStrip(A, B):\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrip(A, B))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-22 20:42:42.310727 size on output set 2
2022-04-22 20:42:42.310734 size on input set 2
2022-04-22 20:42:42.310885 using api key soukgp
2022-04-22 20:42:46.765508 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport math\n\ndef minPowerStrips(A, B):   # A is the power of one strip, B is the total power needed\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport math\n\ndef minPowerStrips(A, B):   # A is the power of one strip, B is the total power needed\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport math\n\ndef minPowerStrips(A, B):   # A is the power of one strip, B is the total power needed\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650660162,
  "object": "edit"
}
2022-04-22 20:42:46.765837 fix syntax errors 3 ["\nimport math\n\ndef minPowerStrips(A, B):   # A is the power of one strip, B is the total power needed\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef minPowerStrips(A, B):   # A is the power of one strip, B is the total power needed\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef minPowerStrips(A, B):   # A is the power of one strip, B is the total power needed\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-22 20:42:46.766000 using api key sunu
2022-04-22 20:42:51.829880 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport math\n\ndef minPowerStrip(A, B):\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrip(A, B))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport math\n\ndef minPowerStrip(A, B):\n    return math.ceil(B / A) \n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrip(A, B))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport math\n\ndef minPowerStrip(A, B):\n    return math.ceil(B/A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrip(A, B))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650660166,
  "object": "edit"
}
2022-04-22 20:42:51.830110 fix syntax errors 3 ["\nimport math\n\ndef minPowerStrip(A, B):\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrip(A, B))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport math\n\ndef minPowerStrip(A, B):\n    return math.ceil(B / A) \n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrip(A, B))\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef minPowerStrip(A, B):\n    return math.ceil(B/A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrip(A, B))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-22 20:42:51.830138 size on output set 4
