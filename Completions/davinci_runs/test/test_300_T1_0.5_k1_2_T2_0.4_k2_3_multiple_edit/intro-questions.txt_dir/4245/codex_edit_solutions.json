["A, B = map(int, input().split())\nprint(B // A + (B % A > 0))\n", "import sys\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n", "\nimport math\n\ndef minPowerStrips(A, B):   # A is the power of one strip, B is the total power needed\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrips(A, B))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint((B - 1) // A + 1)\n", "from collections import deque\n\nn, m = map(int, input().split())\n\ngraph = [[] for _ in range(n + 1)]\n\nfor _ in range(m):\n    a, b = map(int, input().split())\n    graph[a].append(b)\n    graph[b].append(a)\n\nvisited = [False] * (n + 1)\n\nd = deque()\nd.append(1)\nvisited[1] = True\n\nwhile d:\n    v = d.popleft()\n    for i in graph[v]:\n        if not visited[i]:\n            d.append(i)\n            visited[i] = True\n\nprint(visited.count(True) - 1)\n", "\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n", "\nimport math\n\ndef minPowerStrip(A, B):\n    return math.ceil(B/A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrip(A, B))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0)) \n", "\nimport math\n\ndef minPowerStrip(A, B):\n    return math.ceil(B / A)\n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrip(A, B))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split())\nprint(B // A + (B % A != 0))\n", "\n\nimport math\n\ndef minPowerStrip(A, B):\n    return math.ceil(B / A) \n\ndef main():\n    line = input().split()\n    A = int(line[0])\n    B = int(line[1])\n    print(minPowerStrip(A, B))\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\nA, B = map(int, sys.stdin.readline().rstrip().split()) # \uacf5\ubc31\uc73c\ub85c \uad6c\ubd84\ub41c \uc815\uc218\ub4e4\uc744 \uc785\ub825\ubc1b\uc74c\nprint(B // A + (B % A != 0)) # B\ub97c A\ub85c \ub098\ub208 \ubaab\uacfc \ub098\uba38\uc9c0\uac00 0\uc774 \uc544\ub2c8\uba74 1\uc744 \ub354\ud55c \uac12\uc744 \ucd9c\ub825\n"]