2022-04-18 05:03:12.955305 num operations 1
2022-04-18 05:03:12.955323 size on input set 1
2022-04-18 05:03:17.278985 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef get_sum_of_digits(n):\n    s = 0\n    while n > 0:\n        s += n % 10\n        n = n // 10\n    return s\n\n\ndef get_sum_of_digits_of_powers(n, x):\n    p = 1\n    s = 0\n    while p <= n:\n        s += get_sum_of_digits(p)\n        p *= x\n\n    return s\n\ndef main():\n    n = int(input())\n    print(get_sum_of_digits_of_powers(n, 2))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef get_sum_of_digits(n):\n    s = 0\n    while n > 0:\n        s += n % 10\n        n //= 10\n    return s\n\ndef get_sum_of_digits_of_powers(n):\n    p = 1\n    s = 0\n    while p <= n:\n        s += get_sum_of_digits(p)\n        p **= 2\n    return s\n\ndef main():\n    n = int(input())\n    print(get_sum_of_digits_of_powers(n))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef get_sum_of_digits(n):\n    s = 0\n    while n > 0:\n        s += n % 10\n        n = n / 10\n\n    return s\n\ndef get_sum_of_digits_of_powers(n):\n    p = 1\n    s = 0\n    while p <= n:\n        s += get_sum_of_digits(p)\n        p = p * 2\n\n    return s\n\ndef main():\n    n = int(input())\n    print(get_sum_of_digits_of_powers(n))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650258193,
  "object": "edit"
}
2022-04-18 05:03:17.279295 fix syntax errors 3 ["\ndef get_sum_of_digits(n):\n    s = 0\n    while n > 0:\n        s += n % 10\n        n = n // 10\n    return s\n\n\ndef get_sum_of_digits_of_powers(n, x):\n    p = 1\n    s = 0\n    while p <= n:\n        s += get_sum_of_digits(p)\n        p *= x\n\n    return s\n\ndef main():\n    n = int(input())\n    print(get_sum_of_digits_of_powers(n, 2))\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef get_sum_of_digits(n):\n    s = 0\n    while n > 0:\n        s += n % 10\n        n //= 10\n    return s\n\ndef get_sum_of_digits_of_powers(n):\n    p = 1\n    s = 0\n    while p <= n:\n        s += get_sum_of_digits(p)\n        p **= 2\n    return s\n\ndef main():\n    n = int(input())\n    print(get_sum_of_digits_of_powers(n))\n\nif __name__ == '__main__':\n    main()\n", "\ndef get_sum_of_digits(n):\n    s = 0\n    while n > 0:\n        s += n % 10\n        n = n / 10\n\n    return s\n\ndef get_sum_of_digits_of_powers(n):\n    p = 1\n    s = 0\n    while p <= n:\n        s += get_sum_of_digits(p)\n        p = p * 2\n\n    return s\n\ndef main():\n    n = int(input())\n    print(get_sum_of_digits_of_powers(n))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-18 05:03:17.279345 size on output set 3
2022-04-18 05:03:17.279396 num operations 1
2022-04-18 05:03:17.279409 size on input set 1
2022-04-18 05:03:25.958151 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef solution(n):\n    # Your code here\n    nums = list(str(n))\n    while len(nums) > 1:\n        next_sum = 0\n        for i in nums:\n            next_sum += int(i) ** 2\n        nums = list(str(next_sum))\n    return nums[0]\n"
    },
    {
      "index": 1,
      "text": "\n\n# Version 1:\n\ndef solution(n):\n    # Your code here\n    nums = list(str(n))\n    while len(nums) > 1:\n        next_sum = 0\n        for i in nums:\n            next_sum += int(i) ** 2\n        nums = list(str(next_sum))\n    return nums[0]\n\n# Version 2:\n\ndef solution(n):\n    # Your code here\n    nums = list(str(n))\n    while len(nums) > 1:\n        next_sum = 0\n        for i in nums:\n            next_sum += int(i) ** 2\n        nums = list(str(next_sum))\n    return nums[0]\n"
    },
    {
      "index": 2,
      "text": "\n# Version 1\n# def solution(n):\n#     # Your code here\n#     nums = list(str(n))\n#     while len(nums) > 1:\n#         next_sum = 0\n#         for i in nums:\n#             next_sum += int(i) ** 2\n#         nums = list(str(next_sum))\n#     return nums[0]\n#\n# # Version 2\n#\n# def solution(n):\n#     # Your code here\n#     nums = list(str(n))\n#     while len(nums) > 1:\n#         next_sum = 0\n#         for i in nums:\n#             next_sum += int(i) ** 2\n#         nums = list(str(next_sum))\n#     return nums[0]\n"
    }
  ],
  "created": 1650258197,
  "object": "edit"
}
2022-04-18 05:03:25.958415 fix syntax errors 3 ['\n\ndef solution(n):\n    # Your code here\n    nums = list(str(n))\n    while len(nums) > 1:\n        next_sum = 0\n        for i in nums:\n            next_sum += int(i) ** 2\n        nums = list(str(next_sum))\n    return nums[0]\n', '\n\n# Version 1:\n\ndef solution(n):\n    # Your code here\n    nums = list(str(n))\n    while len(nums) > 1:\n        next_sum = 0\n        for i in nums:\n            next_sum += int(i) ** 2\n        nums = list(str(next_sum))\n    return nums[0]\n\n# Version 2:\n\ndef solution(n):\n    # Your code here\n    nums = list(str(n))\n    while len(nums) > 1:\n        next_sum = 0\n        for i in nums:\n            next_sum += int(i) ** 2\n        nums = list(str(next_sum))\n    return nums[0]\n', '\n# Version 1\n# def solution(n):\n#     # Your code here\n#     nums = list(str(n))\n#     while len(nums) > 1:\n#         next_sum = 0\n#         for i in nums:\n#             next_sum += int(i) ** 2\n#         nums = list(str(next_sum))\n#     return nums[0]\n#\n# # Version 2\n#\n# def solution(n):\n#     # Your code here\n#     nums = list(str(n))\n#     while len(nums) > 1:\n#         next_sum = 0\n#         for i in nums:\n#             next_sum += int(i) ** 2\n#         nums = list(str(next_sum))\n#     return nums[0]\n']
2022-04-18 05:03:25.958463 size on output set 3
2022-04-18 05:03:25.958483 num operations 1
2022-04-18 05:03:25.958494 size on input set 1
2022-04-18 05:03:29.859820 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef chess_knight(n):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    elif n == 3:\n        return 3\n    else:\n        if n % 2 == 0:\n            return chess_knight(n//2) + 1\n        else:\n            return chess_knight(((n+1)//2)) + 1\n\n\nif __name__ == '__main__':\n    print(chess_knight(int(input())))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef chess_knight(n):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    elif n == 3:\n        return 3\n    elif n % 2 == 0:\n        return chess_knight(n//2) + 1\n    else:\n        return chess_knight(((n+1)//2)) + 1\n\n\nif __name__ == '__main__':\n    print(chess_knight(int(input())))\n"
    },
    {
      "index": 2,
      "text": "\n\ndef chess_knight(n):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    elif n == 3:\n        return 3\n    elif n % 2 == 0:\n        return chess_knight(n//2) + 1\n    elif n % 2 != 0:\n        return chess_knight((n+1)//2) + 1\n\n\nif __name__ == '__main__':\n    print(chess_knight(int(input())))\n"
    }
  ],
  "created": 1650258205,
  "object": "edit"
}
2022-04-18 05:03:29.860075 fix syntax errors 3 ["\n\ndef chess_knight(n):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    elif n == 3:\n        return 3\n    else:\n        if n % 2 == 0:\n            return chess_knight(n//2) + 1\n        else:\n            return chess_knight(((n+1)//2)) + 1\n\n\nif __name__ == '__main__':\n    print(chess_knight(int(input())))\n", "\n\ndef chess_knight(n):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    elif n == 3:\n        return 3\n    elif n % 2 == 0:\n        return chess_knight(n//2) + 1\n    else:\n        return chess_knight(((n+1)//2)) + 1\n\n\nif __name__ == '__main__':\n    print(chess_knight(int(input())))\n", "\n\ndef chess_knight(n):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    elif n == 3:\n        return 3\n    elif n % 2 == 0:\n        return chess_knight(n//2) + 1\n    elif n % 2 != 0:\n        return chess_knight((n+1)//2) + 1\n\n\nif __name__ == '__main__':\n    print(chess_knight(int(input())))\n"]
2022-04-18 05:03:29.860122 size on output set 3
