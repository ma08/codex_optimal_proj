2022-04-18 04:57:08.115228 num operations 1
2022-04-18 04:57:08.115248 size on input set 1
2022-04-18 04:57:10.285025 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python\n\nn = int(input())\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\n\nif a[0] > b[1]:\n    a[0] -= b[1]\n    b[1] = 0\nelse:\n    b[1] -= a[0]\n    a[0] = 0\nif a[2] > b[0]:\n    a[2] -= b[0]\n    b[0] = 0\nelse:\n    b[0] -= a[2]\n    a[2] = 0\nif a[1] > b[2]:\n    a[1] -= b[2]\n    b[2] = 0\nelse:\n    b[2] -= a[1]\n    a[1] = 0\n\nprint(min(a), max(a))\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\n\nif a[0] > b[1]:\n    a[0] -= b[1]\n    b[1] = 0\nelse:\n    b[1] -= a[0]\n    a[0] = 0\nif a[2] > b[0]:\n    a[2] -= b[0]\n    b[0] = 0\nelse:\n    b[0] -= a[2]\n    a[2] = 0\nif a[1] > b[2]:\n    a[1] -= b[2]\n    b[2] = 0\nelse:\n    b[2] -= a[1]\n    a[1] = 0\n\nprint(min(a), max(a))\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\n\nif a[0] > b[1]:\n    a[0] -= b[1]\n    b[1] = 0\nelse:\n    b[1] -= a[0]\n    a[0] = 0\nif a[2] > b[0]:\n    a[2] -= b[0]\n    b[0] = 0\nelse:\n    b[0] -= a[2]\n    a[2] = 0\nif a[1] > b[2]:\n    a[1] -= b[2]\n    b[2] = 0\nelse:\n    b[2] -= a[1]\n    a[1] = 0\n\nprint(min(a), max(a))\n"
    }
  ],
  "created": 1650257828,
  "object": "edit"
}
2022-04-18 04:57:10.285225 fix syntax errors 3 ['#!/usr/bin/env python\n\nn = int(input())\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\n\nif a[0] > b[1]:\n    a[0] -= b[1]\n    b[1] = 0\nelse:\n    b[1] -= a[0]\n    a[0] = 0\nif a[2] > b[0]:\n    a[2] -= b[0]\n    b[0] = 0\nelse:\n    b[0] -= a[2]\n    a[2] = 0\nif a[1] > b[2]:\n    a[1] -= b[2]\n    b[2] = 0\nelse:\n    b[2] -= a[1]\n    a[1] = 0\n\nprint(min(a), max(a))\n', '\nn = int(input())\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\n\nif a[0] > b[1]:\n    a[0] -= b[1]\n    b[1] = 0\nelse:\n    b[1] -= a[0]\n    a[0] = 0\nif a[2] > b[0]:\n    a[2] -= b[0]\n    b[0] = 0\nelse:\n    b[0] -= a[2]\n    a[2] = 0\nif a[1] > b[2]:\n    a[1] -= b[2]\n    b[2] = 0\nelse:\n    b[2] -= a[1]\n    a[1] = 0\n\nprint(min(a), max(a))\n', '\nn = int(input())\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\n\nif a[0] > b[1]:\n    a[0] -= b[1]\n    b[1] = 0\nelse:\n    b[1] -= a[0]\n    a[0] = 0\nif a[2] > b[0]:\n    a[2] -= b[0]\n    b[0] = 0\nelse:\n    b[0] -= a[2]\n    a[2] = 0\nif a[1] > b[2]:\n    a[1] -= b[2]\n    b[2] = 0\nelse:\n    b[2] -= a[1]\n    a[1] = 0\n\nprint(min(a), max(a))\n']
2022-04-18 04:57:10.285285 size on output set 2
2022-04-18 04:57:10.285295 num operations 1
2022-04-18 04:57:10.285301 size on input set 1
2022-04-18 04:57:47.582889 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "var fs = require('fs');\n\nfs.readFile('/etc/passwd', function(err, data) {\n\tif (err) throw err;\n\tconsole.log(data);\n});\n"
    },
    {
      "index": 1,
      "text": "var fs = require('fs');\nvar path = require('path');\n\nvar dir = process.argv[2];\nvar ext = process.argv[3];\n\nfs.readdir(dir, function(err, list) {\n\tlist.forEach(function(file) {\n\t\tif (path.extname(file) === '.' + ext) {\n\t\t\tconsole.log(file);\n\t\t}\n\t});\n});\n"
    },
    {
      "index": 2,
      "text": "\n\n// \n// const fs = require('fs');\n// const path = require('path');\n// const dirname = path.join(__dirname, 'files');\n// const currentFiles = fs.readdirSync(dirname);\n// const files = currentFiles.map(file => {\n//   return path.join(dirname, file);\n// });\n// // console.log(files);\n// const fileContents = files.map(file => {\n//   return fs.readFileSync(file).toString();\n// });\n// console.log(fileContents);\n\n// fs.mkdir(dirname, err => {\n//   if (err) {\n//     throw err;\n//   }\n//   files.forEach((file, i) => {\n//     fs.writeFile(file, fileContents[i], err => {\n//       if (err) throw err;\n//     });\n//   });\n// });\n\n// const fs = require('fs');\n// const path = require('path');\n// const dirname = path.join(__dirname, 'files');\n// const currentFiles = fs.readdirSync(dirname);\n// const files = currentFiles.map(file => {\n//   return path.join(dirname, file);\n// });\n// const fileContents = files.map(file => {\n//   return fs.readFileSync(file).toString();\n// });\n\n// fs.mkdir(dirname, err => {\n//   if (err) {\n//     throw err;\n//   }\n//   files.forEach((file, i) => {\n//     fs.writeFile(file, fileContents[i], err => {\n//       if (err) throw err;\n//     });\n//   });\n// });\n\n// const fs = require('fs');\n// const path = require('path');\n// const dirname = path.join(__dirname, 'files');\n// const currentFiles = fs.readdirSync(dirname);\n// const files = currentFiles.map(file => {\n//   return path.join(dirname, file);\n// });\n// const fileContents = files.map(file => {\n//   return fs.readFileSync(file).toString();\n// });\n\n// fs.mkdir(dirname, err => {\n//   if (err) {\n//     throw err;\n//   }\n//   files.forEach((file, i) => {\n//     fs.writeFile(file, fileContents[i], err => {\n//       if (err) throw err;\n//     });\n//   });\n// });\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    }
  ],
  "created": 1650257830,
  "object": "edit"
}
2022-04-18 04:57:47.583135 fix syntax errors 3 ["var fs = require('fs');\n\nfs.readFile('/etc/passwd', function(err, data) {\n\tif (err) throw err;\n\tconsole.log(data);\n});\n", "var fs = require('fs');\nvar path = require('path');\n\nvar dir = process.argv[2];\nvar ext = process.argv[3];\n\nfs.readdir(dir, function(err, list) {\n\tlist.forEach(function(file) {\n\t\tif (path.extname(file) === '.' + ext) {\n\t\t\tconsole.log(file);\n\t\t}\n\t});\n});\n", "\n\n// \n// const fs = require('fs');\n// const path = require('path');\n// const dirname = path.join(__dirname, 'files');\n// const currentFiles = fs.readdirSync(dirname);\n// const files = currentFiles.map(file => {\n//   return path.join(dirname, file);\n// });\n// // console.log(files);\n// const fileContents = files.map(file => {\n//   return fs.readFileSync(file).toString();\n// });\n// console.log(fileContents);\n\n// fs.mkdir(dirname, err => {\n//   if (err) {\n//     throw err;\n//   }\n//   files.forEach((file, i) => {\n//     fs.writeFile(file, fileContents[i], err => {\n//       if (err) throw err;\n//     });\n//   });\n// });\n\n// const fs = require('fs');\n// const path = require('path');\n// const dirname = path.join(__dirname, 'files');\n// const currentFiles = fs.readdirSync(dirname);\n// const files = currentFiles.map(file => {\n//   return path.join(dirname, file);\n// });\n// const fileContents = files.map(file => {\n//   return fs.readFileSync(file).toString();\n// });\n\n// fs.mkdir(dirname, err => {\n//   if (err) {\n//     throw err;\n//   }\n//   files.forEach((file, i) => {\n//     fs.writeFile(file, fileContents[i], err => {\n//       if (err) throw err;\n//     });\n//   });\n// });\n\n// const fs = require('fs');\n// const path = require('path');\n// const dirname = path.join(__dirname, 'files');\n// const currentFiles = fs.readdirSync(dirname);\n// const files = currentFiles.map(file => {\n//   return path.join(dirname, file);\n// });\n// const fileContents = files.map(file => {\n//   return fs.readFileSync(file).toString();\n// });\n\n// fs.mkdir(dirname, err => {\n//   if (err) {\n//     throw err;\n//   }\n//   files.forEach((file, i) => {\n//     fs.writeFile(file, fileContents[i], err => {\n//       if (err) throw err;\n//     });\n//   });\n// });\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]
2022-04-18 04:57:47.583263 size on output set 3
2022-04-18 04:57:47.583276 num operations 1
2022-04-18 04:57:47.583282 size on input set 1
2022-04-18 04:58:02.049461 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\nans = 0\n\nfor i in range(3):\n    if a[i] == n or b[i] == n:\n        continue\n    else:\n        if (i - i) % 3 == 1:\n            ans += min(a[i],b[i])\n        elif (i - i) % 3 == 2:\n            ans += min(a[i],b[i])\n\nprint(ans,n-ans)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\nmin_win = 0\nmax_win = 0\n\nfor i in range(3):\n    for j in range(3):\n        if a[i] == 0 or b[j] == 0:\n            continue\n        else:\n            if (i - j)%3 == 1:\n                min_win += min(a[i],b[j])\n            elif (i - j)%3 == 2:\n                max_win += min(a[i],b[j])\n\nprint(min_win,max_win)\n\nn = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\nans = 0\n\nfor i in range(3):\n    if a[i] == n or b[i] == n:\n        continue\n    else:\n        if (i - i)%3 == 1:\n            ans += min(a[i],b[i])\n        elif (i - i)%3 == 2:\n            ans += min(a[i],b[i])\n\nprint(ans,n-ans)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\nmin_win = 0\nmax_win = 0\n\nfor i in range(3):\n    for j in range(3):\n        if a[i] == 0 or b[j] == 0:\n            continue\n        else:\n            if (i - j)%3 == 1:\n                min_win += min(a[i],b[j])\n            elif (i - j)%3 == 2:\n                max_win += min(a[i],b[j])\n\nprint(min_win,max_win)\n\nn = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\n# ans = 0\n#\n# for i in range(3):\n#     if a[i] == n or b[i] == n:\n#         continue\n#     else:\n#         if (i - i)%3 == 1:\n#             ans += min(a[i],b[i])\n#         elif (i - i)%3 == 2:\n#             ans += min(a[i],b[i])\n#\n# print(ans,n-ans)\n"
    }
  ],
  "created": 1650257867,
  "object": "edit"
}
2022-04-18 04:58:02.049690 fix syntax errors 3 ['\n\nn = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\nans = 0\n\nfor i in range(3):\n    if a[i] == n or b[i] == n:\n        continue\n    else:\n        if (i - i) % 3 == 1:\n            ans += min(a[i],b[i])\n        elif (i - i) % 3 == 2:\n            ans += min(a[i],b[i])\n\nprint(ans,n-ans)\n', '\n\nn = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\nmin_win = 0\nmax_win = 0\n\nfor i in range(3):\n    for j in range(3):\n        if a[i] == 0 or b[j] == 0:\n            continue\n        else:\n            if (i - j)%3 == 1:\n                min_win += min(a[i],b[j])\n            elif (i - j)%3 == 2:\n                max_win += min(a[i],b[j])\n\nprint(min_win,max_win)\n\nn = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\nans = 0\n\nfor i in range(3):\n    if a[i] == n or b[i] == n:\n        continue\n    else:\n        if (i - i)%3 == 1:\n            ans += min(a[i],b[i])\n        elif (i - i)%3 == 2:\n            ans += min(a[i],b[i])\n\nprint(ans,n-ans)\n', '\n\nn = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\nmin_win = 0\nmax_win = 0\n\nfor i in range(3):\n    for j in range(3):\n        if a[i] == 0 or b[j] == 0:\n            continue\n        else:\n            if (i - j)%3 == 1:\n                min_win += min(a[i],b[j])\n            elif (i - j)%3 == 2:\n                max_win += min(a[i],b[j])\n\nprint(min_win,max_win)\n\nn = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\n# ans = 0\n#\n# for i in range(3):\n#     if a[i] == n or b[i] == n:\n#         continue\n#     else:\n#         if (i - i)%3 == 1:\n#             ans += min(a[i],b[i])\n#         elif (i - i)%3 == 2:\n#             ans += min(a[i],b[i])\n#\n# print(ans,n-ans)\n']
2022-04-18 04:58:02.049758 size on output set 3
