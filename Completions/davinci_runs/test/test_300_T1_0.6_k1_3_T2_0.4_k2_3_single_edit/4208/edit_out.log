2022-04-18 05:39:58.532763 num operations 1
2022-04-18 05:39:58.532777 size on input set 1
2022-04-18 05:40:13.370325 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# I/O\nn = int(input())\nleft = input()\nright = input()\n\n# Solution\n\n# Create a list of all possible left/right pairs\npairs = []\nfor i in range(n):\n    for j in range(n):\n        pairs.append((i+1, j+1))\n\n# Filter out pairs where colors don't match\nfor i in range(n):\n    if left[i] != \"?\" and right[i] != \"?\":\n        if left[i] != right[i]:\n            pairs = [pair for pair in pairs if pair[0] != i+1 and pair[1] != i+1]\n\n# Filter out pairs where left boots repeat\nlefts = [pair[0] for pair in pairs]\ndups = [i for i in lefts if lefts.count(i) > 1]\npairs = [pair for pair in pairs if pair[0] not in dups] if dups else pairs\n\n# Filter out pairs where right boots repeat\nrights = [pair[1] for pair in pairs]\ndups = [i for i in rights if rights.count(i) > 1]\npairs = [pair for pair in pairs if pair[1] not in dups] if dups else pairs\n\n# Print pairs\nprint(len(pairs))\nfor pair in pairs:\n    print(pair[0], pair[1])\n"
    },
    {
      "index": 1,
      "text": "\n\n# # I/O\n# n = int(input())\n# left = input()\n# right = input()\n\n# # Solution\n\n# # Create a list of all possible left/right pairs\n# pairs = []\n# for i in range(n):\n#     for j in range(n):\n#         pairs.append((i+1, j+1))\n\n# # Filter out pairs where colors don't match\n# for i in range(n):\n#     if left[i] != \"?\" and right[i] != \"?\":\n#         if left[i] != right[i]:\n#             pairs = [pair for pair in pairs if pair[0] != i+1 and pair[1] != i+1]\n\n# # Filter out pairs where left boots repeat\n# left = [pair[0] for pair in pairs]\n# dups = [i for i in left if left.count(i) > 1]\n# pairs = [pair for pair in pairs if pair[0] not in dups]\n\n# # Filter out pairs where right boots repeat\n# right = [pair[1] for pair in pairs]\n# dups = [i for i in right if right.count(i) > 1]\n# pairs = [pair for pair in pairs if pair[1] not in dups]\n\n# # Print pairs\n# print(len(pairs))\n# for pair in pairs:\n#     print(pair[0], pair[1])\n\nprint(\"Hello\")\n"
    },
    {
      "index": 2,
      "text": "\n\n# I/O\nn = int(input())\nleft = input()\nright = input()\n\n# Solution\n\n# Create a list of all possible left/right pairs\npairs = []\nfor i in range(n):\n    for j in range(n):\n        pairs.append((i+1, j+1))\n\n# Filter out pairs where colors don't match\nfor i in range(n):\n    if left[i] != \"?\" and right[i] != \"?\":\n        if left[i] != right[i]:\n            pairs = [pair for pair in pairs if pair[0] != i+1 and pair[1] != i+1]\n\n# Filter out pairs where left boots repeat\nlefts = [pair[0] for pair in pairs]\ndups = [i for i in lefts if lefts.count(i) > 1]\npairs = [pair for pair in pairs if pair[0] not in dups and pair[0] != \"?\"]\n\n# Filter out pairs where right boots repeat\nrights = [pair[1] for pair in pairs]\ndups = [i for i in rights if rights.count(i) > 1]\npairs = [pair for pair in pairs if pair[1] not in dups and pair[1] != \"?\"]\n\n# Print pairs\nprint(len(pairs))\nfor pair in pairs:\n    print(pair[0], pair[1])\n"
    }
  ],
  "created": 1650260398,
  "object": "edit"
}
2022-04-18 05:40:13.370523 fix syntax errors 3 ['\n# I/O\nn = int(input())\nleft = input()\nright = input()\n\n# Solution\n\n# Create a list of all possible left/right pairs\npairs = []\nfor i in range(n):\n    for j in range(n):\n        pairs.append((i+1, j+1))\n\n# Filter out pairs where colors don\'t match\nfor i in range(n):\n    if left[i] != "?" and right[i] != "?":\n        if left[i] != right[i]:\n            pairs = [pair for pair in pairs if pair[0] != i+1 and pair[1] != i+1]\n\n# Filter out pairs where left boots repeat\nlefts = [pair[0] for pair in pairs]\ndups = [i for i in lefts if lefts.count(i) > 1]\npairs = [pair for pair in pairs if pair[0] not in dups] if dups else pairs\n\n# Filter out pairs where right boots repeat\nrights = [pair[1] for pair in pairs]\ndups = [i for i in rights if rights.count(i) > 1]\npairs = [pair for pair in pairs if pair[1] not in dups] if dups else pairs\n\n# Print pairs\nprint(len(pairs))\nfor pair in pairs:\n    print(pair[0], pair[1])\n', '\n\n# # I/O\n# n = int(input())\n# left = input()\n# right = input()\n\n# # Solution\n\n# # Create a list of all possible left/right pairs\n# pairs = []\n# for i in range(n):\n#     for j in range(n):\n#         pairs.append((i+1, j+1))\n\n# # Filter out pairs where colors don\'t match\n# for i in range(n):\n#     if left[i] != "?" and right[i] != "?":\n#         if left[i] != right[i]:\n#             pairs = [pair for pair in pairs if pair[0] != i+1 and pair[1] != i+1]\n\n# # Filter out pairs where left boots repeat\n# left = [pair[0] for pair in pairs]\n# dups = [i for i in left if left.count(i) > 1]\n# pairs = [pair for pair in pairs if pair[0] not in dups]\n\n# # Filter out pairs where right boots repeat\n# right = [pair[1] for pair in pairs]\n# dups = [i for i in right if right.count(i) > 1]\n# pairs = [pair for pair in pairs if pair[1] not in dups]\n\n# # Print pairs\n# print(len(pairs))\n# for pair in pairs:\n#     print(pair[0], pair[1])\n\nprint("Hello")\n', '\n\n# I/O\nn = int(input())\nleft = input()\nright = input()\n\n# Solution\n\n# Create a list of all possible left/right pairs\npairs = []\nfor i in range(n):\n    for j in range(n):\n        pairs.append((i+1, j+1))\n\n# Filter out pairs where colors don\'t match\nfor i in range(n):\n    if left[i] != "?" and right[i] != "?":\n        if left[i] != right[i]:\n            pairs = [pair for pair in pairs if pair[0] != i+1 and pair[1] != i+1]\n\n# Filter out pairs where left boots repeat\nlefts = [pair[0] for pair in pairs]\ndups = [i for i in lefts if lefts.count(i) > 1]\npairs = [pair for pair in pairs if pair[0] not in dups and pair[0] != "?"]\n\n# Filter out pairs where right boots repeat\nrights = [pair[1] for pair in pairs]\ndups = [i for i in rights if rights.count(i) > 1]\npairs = [pair for pair in pairs if pair[1] not in dups and pair[1] != "?"]\n\n# Print pairs\nprint(len(pairs))\nfor pair in pairs:\n    print(pair[0], pair[1])\n']
2022-04-18 05:40:13.370565 size on output set 3
2022-04-18 05:40:13.370581 num operations 1
2022-04-18 05:40:13.370587 size on input set 1
