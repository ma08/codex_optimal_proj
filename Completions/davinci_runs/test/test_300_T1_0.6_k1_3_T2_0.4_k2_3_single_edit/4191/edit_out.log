2022-04-18 05:35:38.239720 num operations 1
2022-04-18 05:35:38.239743 size on input set 1
2022-04-18 05:35:43.821112 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\na = bool(int(input()))\nb = bool(int(input()))\nc = bool(int(input()))\nd = bool(int(input()))\n\ne = not(a)\nf = not(b)\n\ng = e or f\n\nh = not(c)\ni = not(d)\n\nj = h or i\n\nk = g and j\n\nprint(int(k)) \n"
    },
    {
      "index": 1,
      "text": "\nprint(int(not int(input()) or not int(input())) and int(not int(input()) or not int(input())))\n"
    },
    {
      "index": 2,
      "text": "\n\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\ne = not(a)\nf = not(b)\n\ng = e or f\n\nh = not(c)\ni = not(d)\n\nj = h or i\n\nk = g and j\n\nprint(int(k))\n"
    }
  ],
  "created": 1650260138,
  "object": "edit"
}
2022-04-18 05:35:43.821364 fix syntax errors 3 ['\n\na = bool(int(input()))\nb = bool(int(input()))\nc = bool(int(input()))\nd = bool(int(input()))\n\ne = not(a)\nf = not(b)\n\ng = e or f\n\nh = not(c)\ni = not(d)\n\nj = h or i\n\nk = g and j\n\nprint(int(k)) \n', '\nprint(int(not int(input()) or not int(input())) and int(not int(input()) or not int(input())))\n', '\n\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\ne = not(a)\nf = not(b)\n\ng = e or f\n\nh = not(c)\ni = not(d)\n\nj = h or i\n\nk = g and j\n\nprint(int(k))\n']
2022-04-18 05:35:43.821405 size on output set 3
2022-04-18 05:35:43.821425 num operations 1
2022-04-18 05:35:43.821437 size on input set 1
2022-04-18 05:35:48.094386 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\ndef main(inp):\n    if inp[0] == inp[2] and inp[1] == inp[3]:\n        return 0\n    return 1\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main(inp):\n    if inp[0] == inp[2] or inp[1] == inp[3]:\n        return 0\n    elif abs(inp[0] - inp[2]) == abs(inp[1] - inp[3]):\n        return 1\n    else:\n        return 2\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n"
    },
    {
      "index": 2,
      "text": "\ndef main(inp):\n    if inp[0] == inp[2] or inp[1] == inp[3]:\n        return 0\n    else:\n        return 1\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n"
    }
  ],
  "created": 1650260143,
  "object": "edit"
}
2022-04-18 05:35:48.094600 fix syntax errors 3 ["\n\n\ndef main(inp):\n    if inp[0] == inp[2] and inp[1] == inp[3]:\n        return 0\n    return 1\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n", "\n\ndef main(inp):\n    if inp[0] == inp[2] or inp[1] == inp[3]:\n        return 0\n    elif abs(inp[0] - inp[2]) == abs(inp[1] - inp[3]):\n        return 1\n    else:\n        return 2\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n", "\ndef main(inp):\n    if inp[0] == inp[2] or inp[1] == inp[3]:\n        return 0\n    else:\n        return 1\n\nif __name__ == '__main__':\n    inp = []\n    for i in range(4):\n        inp.append(int(input()))\n    print(main(inp))\n"]
2022-04-18 05:35:48.094656 size on output set 3
2022-04-18 05:35:48.094675 num operations 1
2022-04-18 05:35:48.094685 size on input set 1
2022-04-18 05:35:50.085474 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if (data[0] ^ data[2] ^ data[1] ^ data[3]) else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n"
    },
    {
      "index": 1,
      "text": "\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if (data[0] ^ data[2] ^ data[1] ^ data[3]) else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n"
    },
    {
      "index": 2,
      "text": "\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if (data[0] ^ data[2] ^ data[1] ^ data[3]) else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n"
    }
  ],
  "created": 1650260148,
  "object": "edit"
}
2022-04-18 05:35:50.085729 fix syntax errors 3 ['\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if (data[0] ^ data[2] ^ data[1] ^ data[3]) else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n', '\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if (data[0] ^ data[2] ^ data[1] ^ data[3]) else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n', '\n# first solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0]:\n        return 0\n    elif data == [0, 1, 0, 1]:\n        return 1\n    elif data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# second solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    if data == [0, 1, 1, 0] or data == [1, 0, 0, 1]:\n        return 0\n    else:\n        return 1\n\n# third solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return 1 if (data[0] ^ data[2] ^ data[1] ^ data[3]) else 0\n\n# fourth solution\ndef image():\n    data = [int(input()) for i in range(4)]\n    return int((data[0] ^ data[2]) != (data[1] ^ data[3]))\n']
2022-04-18 05:35:50.085792 size on output set 1
