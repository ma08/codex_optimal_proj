["a, b = input().split()\na = int(a)\nb1, b2 = b.split('.')\nb3 = int(b1)*100 + int(b2)\n\nprint((a*b3//100))\n", "A,B = input().split()\nA = int(A)\nB = B[0]+B[2:]\n\nif A*int(B) >= 100:\n  print(str(A*int(B))[:-2])\nelse:\n  print(0)", "from decimal import Decimal\na, b = list(map(Decimal, input().split()))\nprint((int(a*b)))\n", "\ndef ri():\n    return int(input())\n\n\ndef rii():\n    return [str(v) for v in input().split()]\n\nA, B = rii()\nA = int(A)\nB, F = [int(v) for v in B.split(\".\")]\nB = 100 * B + F\n\nprint((A * B) // 100)", "from decimal import Decimal\n\nA, B = list(map(Decimal, input().split()))\n\nA_ = int(A)\nB_ = (B*100)\n\nprint((int(A_*B_/100)))\n\n", "a,b = input().split()\na = int(a)\nb = int(''.join(b.split('.')))\n\nprint(((a*b)//100))\n", "a, b = input().split()\na = int(a)\nb = int(b.replace('.', ''))\nprint((a * b // 100))\n", "a,b=input().split()\nnum=int(b[0])*100+int(b[2])*10+int(b[3])\nprint(num*int(a)//100)", "A, B = input().split()\nA = int(A)\ni, d = list(map(int, B.split(\".\")))\nB_m = i * 100 + d\nans = A * B_m // 100\nprint(ans)\n", "import math\nl = input().split(\" \")\na = int(l[0])\n\nb = (l[1].split(\".\"))\nc = int(b[0])\nd = int(b[1])\n\ne = a*(c*100 + d)//100\nprint(e)", "A,B = input().split()\nprint((int(A)*round(100*float(B)))//100)", "import decimal\n\na, b = input().split()\na = int(a)\nb = decimal.Decimal(b)\nc = b * 100\nx = a * int(c)\nprint(x//100)", "import decimal as d\na,b=input().split()\nprint(int(int(a)*d.Decimal(b)))", "a, b = map(float, input().split())\nib = b * 100\nans = int(a) * round(ib) // 100\nprint(ans)", "#n = int(input())\n#a, b = map(int, input().split())\n#al = list(map(int, input().split()))\n#al=[list(input()) for i in range(n)]\n\na, b = list(map(str, input().split()))\n\na = int(a)\nb = int(b[0]+b[2:])\nprint((a*b//100))\n", "a,b = list(map(str,input().split()))\na = int(a)\nb = 100*int(b[0])+10*int(b[2])+int(b[3])\nprint((a*b//100))\n\n", "A, B = list(map(str, input().split()))\nans = int(A) * int(B[0]) * 100\nans += (int(A) * int(B[2]) * 10)\nans += (int(A) * int(B[3]))\nprint((ans // 100))\n", "A,B = input().split()\nA = int(A)\nB1, B2 = B.split('.')\nB = int(B1)*10**len(B2)+int(B2)\nprint(((A*B)//10**len(B2)))\n", "inputs = input().split(\" \")\nproduct = int(inputs[0])*(round(float(inputs[1])*100))\nprint(product//100)", "A, B = input().split()\nA = int(A)\nB = round(100*float(B))\n\nprint(A*B//100)", "a, b = input().split()\n \na = int(a)\nb = int(b.replace('.', ''))\n \nans = a * b // 100\nprint(ans)", "x, y = input().split()\ny = float(y) * 100 + 0.01\nans = int(x) * int(y)\nprint(ans//100)", "a,b = input().split()\na = int(a)\nb = int(b[0]+b[2]+b[3])\nprint(a * b // 100)", "a,b = input().split()\n\na = int(a)\nb = int(b.replace('.',''))\n\nprint((a*b//100))\n", "a, B = input().split()\na = int(a)\ni = 2\nans = 0\nfor b in B:\n    if b == \".\":\n        continue\n    ans += int(b) * a * 10 ** i\n    i -= 1\nprint((ans // 100))\n", "A,B = input().split()\n\n\nA = int(A)\nB = int(B[:len(B)-3] + B[len(B)-2:])\n\nprint(int((A*B)//100))", "a, b = input().split()\na = int(a)\nb = round(100*float(b))\nprint(int(a*b//100))", "A, B = input().split()\n\nprint(int(A) * round(float(B) * 100) // 100)", "a, b = input().split()\na = int(a)\nb = round(100*float(b))\nprint(a*b//100)", "A,B=input().split()\nA=int(A)\nB=round(100*float(B))\nprint(A*B//100)", "# C\nfrom decimal import Decimal\nA,B = map(Decimal,input().split())\nans = A * B\n\nprint(int(ans))", "import sys\nimport math\nfrom collections import defaultdict, deque, Counter\nfrom copy import deepcopy\nfrom bisect import bisect, bisect_right, bisect_left\nfrom heapq import heapify, heappop, heappush\n    \ninput = sys.stdin.readline\ndef RD(): return input().rstrip()\ndef F(): return float(input().rstrip())\ndef I(): return int(input().rstrip())\ndef MI(): return map(int, input().split())\ndef MF(): return map(float,input().split())\ndef LI(): return list(map(int, input().split()))\ndef TI(): return tuple(map(int, input().split()))\ndef LF(): return list(map(float,input().split()))\ndef Init(H, W, num): return [[num for i in range(W)] for j in range(H)]\n    \n    \ndef main():\n    A, B = input().rstrip().split()\n    A = int(A)\n    B = int(B.replace('.', ''))\n    print((A*B)//100)\ndef __starting_point():\n    main()\n__starting_point()", "import math\nA,B = map(float,input().split())\nB =  B*100\nans = int(A)*round(B)//100\nprint(ans)", "a=input().split()\na1=int(a[0])\na2=a[1]\na3=a2[0]+a2[2:]\na3=int(a3)\nprint(((a1*a3)//100))\n", "from decimal import Decimal\nimport math\na,b=map(str,input().split())\n\nc=math.floor(Decimal(a)*Decimal(b))\n\nprint(c)", "a,b = input().split()\nb = b.replace('.','')\na = int(a)\nprint((a*int(b)//100))\n", "A,B = map(str,input().split())\nA = int(A)\nC,D = map(int,B.split('.'))\nB1 = C*100+D\nprint(int((A*B1)//100))", "def main():\n    from decimal import Decimal\n    N, M = (Decimal(i) for i in input().split())\n    print((int(N * M)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def LS():\n    return list(input().split())\n\n\nA, B = LS()\nA = int(A)\nB = B.replace(\".\", \"\", 1)\nB = int(B)\nans = A*B\nans //= 100\nprint(ans)\n", "a, b = map(str, input().split())\ni, f = b.split(\".\")[0], b.split(\".\")[1][0:2]\nb = int(i) * 100 + int(f)\nprint(int(a) * b // 100)", "A, B = input().split()\nA = int(A)\nB = round(100 * float(B))\nprint(A*B//100)", "a,b=input().split()\na=int(a)\nb=int(b[0])*100+int(b[2])*10+int(b[3])\ns=a*b\nprint(s//100)", "from decimal import Decimal, ROUND_DOWN\na, b = map(lambda x: Decimal(x), input().split())\nprint(Decimal(a * b).quantize(Decimal('1.'), rounding=ROUND_DOWN))", "A, B = input().split()\nA = int(A)\nB = int(''.join([b for b in B if b != '.']))\n\nprint(A * B // 100)", "a, b = input().split()\na = int(a)\nprint((a * int(b[0]) + a * (int(b[2]) * 10 + int(b[3])) // 100))\n", "a,b=input().split();print(int(a)*int(b[0]+b[2:])//100)", "A, B=(input().split())\nA=int(A)\nC=int(B[0])*100+int(B[2])*10+int(B[3])\nprint((int(A*C//100)))\n\n", "import decimal\na, b = input().split()\nx=decimal.Decimal(a)\ny=decimal.Decimal(b)\nans = int(x * y) \nprint(ans)", "import math\nimport fractions\na, b = list(map(str, input().split()))\na, b = int(a), fractions.Fraction(b)\nprint((math.floor(a*b)))\n", "from decimal import *\nimport math\n\na, b = list(map(Decimal, input().split()))\nprint((math.floor(a * b)))\n", "a,b = input().split()\na = int(a)\nb = int(b.replace(\".\",\"\"))\nprint((a*b)//100)", "A,B=input().split()\nA=int(A)\nB=100*int(B[0])+10*int(B[2])+int(B[3])\nprint(A*B//100)", "import math\nfrom decimal import *\na,b=map(str,input().split())\nans=(Decimal(a)*Decimal(b))//1\nprint(ans)", "a, b = input().split()\nc, d = b.split('.')\ne = int(c) * 100 + int(d)\nf = int(a) * e\nprint((f // 100))\n", "import decimal\nA,B = map(decimal.Decimal,input().split())\nnum = A*B\nprint(int(num)//1)", "line = input().split()\na = int(line[0])\nb = round(float(line[1])*100)\n\nprint(a*b//100)", "import math\n\n\ndef main() -> None:\n    a, b = input().split()\n\n    print(((int(a)*int(b.replace('.', ''))) // 100))\n\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "A,B=input().split()\nA=int(A)\nB=int(100*float(B)+0.5)\nprint((A*B//100))\n", "a, b = input().split()\na = int(a)\nb = int(b.replace('.', ''))\nprint(int(a * b) // 100)", "a, b = input().split()\na = int(a)\nb = round(100*float(b))\nprint(a*b//100)", "from fractions import Decimal, Fraction\na,b = input().split()\na = Fraction(a)\nx = Decimal(b).as_integer_ratio()\nb = Fraction(x[0], x[1])\nprint(int(a*b))", "import math\nimport decimal\n\nA, B = map(str, input().split())\nA = int(A)\nB = decimal.Decimal(B)\nprint(math.floor(A*B))", "def main(A, B):\n    B = round(100 * B)\n    ans = A * B\n    return int(ans // 100)\n\n\ndef __starting_point():\n    A, B = input().split()\n    A = int(A)\n    B = float(B)\n    ans = main(A, B)\n    print(ans)\n\n__starting_point()", "A,B = input().split()\nA = int(A)\nC = \"\"\nfor i in range(len(B)):\n    if(i != 1):\n        C += B[i]\nC = int(C)\nmultiply = str(A * C)\nif(A * C < 100):\n    print(0)\n    return\nans = \"\"\nfor i in range(len(multiply) - 2):\n    ans += multiply[i]\nprint(int(ans))", "a, b = input().split()\n\na = int(a)\n\nb = round(float(b) * 100)\n\nprint(int(a * b // 100))", "import math\nfrom decimal import *\na,b=map(str, input().split())\na_ = Decimal(a)\nb_ = Decimal(b)\nprint(math.floor(a_*b_))", "x,y = list(input().split())\nx = int(x)\ny = int(y[0]+y[2]+y[3])\nprint(x*y//100)", "s=input().split()\na=int(s[0])\nb=int(s[1].replace('.',''))\nprint((a*b//100))\n", "from decimal import *\nA,B=list(map(Decimal,input().split()))\n#print(A)\n#print(B*100)\nprint((int((A*(B*100))//100)))\n", "#from statistics import median\n#import collections\n#aa = collections.Counter(a) # list to list || .most_common(2)\u3067\u6700\u5927\u306e2\u500b\u3068\u308a\u3060\u305b\u308b\u304a a[0][0]\nfrom fractions import gcd\nfrom itertools import combinations,permutations,accumulate, product # (string,3) 3\u56de\n#from collections import deque\nfrom collections import deque,defaultdict,Counter\nimport decimal\nimport re\nimport math\nimport bisect\nimport heapq\n#\n#\n#\n# python\u3067\u7121\u7406\u306a\u3068\u304d\u306f\u3001pypy\u3067\u3084\u308b\u3068\u6b63\u89e3\u3059\u308b\u304b\u3082\uff01\uff01\n#\n#\n# my_round_int = lambda x:np.round((x*2 + 1)//2)\n# \u56db\u6368\u4e94\u5165g\n#\n# \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u7cfb\n# int min_y = max(0, i - 2), max_y = min(h - 1, i + 2);\n# int min_x = max(0, j - 2), max_x = min(w - 1, j + 2);\n#\n#\nimport sys\nsys.setrecursionlimit(10000000)\nmod = 10**9 + 7\n#mod = 9982443453\n#mod = 998244353\nfrom sys import stdin\nreadline = stdin.readline\ndef readInts():\n  return list(map(int,readline().split()))\ndef readTuples():\n    return tuple(map(int,readline().split()))\ndef I():\n    return int(readline())\na,b = list(map(decimal.Decimal,input().split()))\nprint((int(a*b)))\n", "a,b=input().split()\na = int(a)\nb = int(b.replace('.',\"\"))\n\nprint((int(a*b)//100))\n", "from decimal import *\nA, B = list(map(Decimal, input().split()))\nprint((int(A*B)))\n", "# coding=utf-8\n\ndef __starting_point():\n    A, B = input().split()\n    A = int(A)\n    B = float(B)\n    B = int(B*100+0.5)\n\n    print((A*B//100))\n\n__starting_point()", "#submit 16999743\na, b = input().split()\n\na = int(a)\nb1, b2 = b.split('.')\n\nans = a * (int(b1) * 100 + int(b2)) // 100\nprint(ans)\n", "from math import floor\nfrom fractions import Fraction\na,b = input().split()\na = int(a)\nb = Fraction(b)\n\nprint(floor(a*b))", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time, copy,bisect\n#from operator import itemgetter\n#from heapq import heappush, heappop\n#import numpy as np\n#from scipy.sparse.csgraph import breadth_first_order, depth_first_order, shortest_path, floyd_warshall, dijkstra, bellman_ford, johnson\n#from scipy.sparse import csr_matrix\n#from decimal import Decimal, ROUND_HALF_UP, ROUND_HALF_EVEN\nimport sys\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\nmod = 10**9 + 7\n\nstdin = sys.stdin\n\nni = lambda: int(ns())\nnf = lambda: float(ns())\nna = lambda: list(map(int, stdin.readline().split()))\nnb = lambda: list(map(float, stdin.readline().split()))\nns = lambda: stdin.readline().rstrip()  # ignore trailing spaces\n\nfrom decimal import Decimal\na, b = map(Decimal, input().split())\nprint(int(a*b))", "from decimal import Decimal\nfrom decimal import ROUND_FLOOR\n\nA, B = [Decimal(i) for i in input().split()]\n\nprint(((A*B).quantize(Decimal(0), rounding=ROUND_FLOOR)))\n", "from decimal import *\n\na, b = input().split()\na = int(a)\nb = Decimal(b)\nprint(int(a*b))", "a,b = map(str,input().split())\na = int(a)\nb = list(b)\nc = int(b[0])*100 + int(b[2])*10 + int(b[3])\nnum = a*c\nprint(num//100)", "a,b = map(str, input().split())\na = int(a)\nli_b = []\nfor i in range(4):\n    B = b[i]\n    if B!=\".\":\n        li_b.append(int(B))\nb = 100*li_b[0] + 10*li_b[1] + li_b[2]\n\nans = a*b // 100\nprint(ans)", "from decimal import Decimal\nA, B = input().split()\na=Decimal(A)\nb=Decimal(B)\nprint(int(a*b))", "import re\na,b,c=map(int, re.split(\"[ .]\",input()))\nprint(a*(b*100+c)//100)", "A,B=map(float,input().split())\nA =int(A)\nB=round(100*B)\nprint(A*B//100)", "from decimal import Decimal\nfrom math import floor\n\n\ndef main():\n    a, b = list(map(Decimal, input().split()))\n    print((floor(a * b)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from decimal import Decimal\n\nA, B = list(map(Decimal, input().split()))\n\nans = A * B\n\nprint((int(ans)))\n\n", "from decimal import Decimal\nfrom math import floor\na, b = map(Decimal, input().split())\nprint(floor(a*b))", "from decimal import Decimal\na, b = map(Decimal,input().split())\nscore=a*b\nscore = int(score)\nprint(score)", "a, b = input().split()\n\na = int(a)\nb1, b2 = b.split('.')\n\nans = a * (int(b1) * 100 + int(b2)) // 100\nprint(ans)", "from decimal import Decimal\n\na, b = input().split()\n\na = Decimal(a)\nb = Decimal(b)\n\nprint(int(a*b))", "# -*- coding: utf-8 -*-\nfrom decimal import Decimal  \nimport math\n\na, b = input().split()\n\na = int(a)\nb = Decimal(b)\n\nx = a * b\n\nprint((math.floor(int(a) * Decimal(b))))\n\n", "a,b=map(int,input().replace('.','').split())\nprint(a*b//100)", "#!/usr/bin/env python3\n\nimport decimal\n#import\n#import math\n#import numpy as np\n#= int(input())\n#= input()\nA, B = list(map(decimal.Decimal, input().split()))\n\nprint((int(A * B)))\n", "a, b = map(str, input().split())\na, b = int(a), int(b.split(\".\")[0])*100 + int(b.split(\".\")[1])\nprint(a*b//100)", "from math import floor\nfrom decimal import Decimal\na, b = input().split()\na = int(a)\nb = Decimal(b)\nprint(floor(a * b))", "import math\nimport decimal\ndef i_input(): return int(input())\n\n\ndef i_map(): return map(int, input().split())\n\n\ndef i_list(): return list(map(int, input().split()))\n\n\ndef i_row(N): return [int(input()) for _ in range(N)]\n\n\ndef i_row_list(N): return [list(map(int, input().split())) for _ in range(N)]\n\na,b=map(decimal.Decimal, input().split())\nprint(int(a*b))", "import sys\nfrom collections import deque, defaultdict, Counter\nfrom itertools import accumulate, product, permutations, combinations\nfrom operator import itemgetter\nfrom bisect import bisect_left, bisect_right\nfrom heapq import heappop, heappush\nfrom math import ceil, floor, sqrt, gcd, inf\nfrom copy import deepcopy\nimport numpy as np\nimport scipy as sp\n\nINF = inf\nMOD = 1000000007\n\na, b = input().split()\n\ntmp = 0\nres = 0\n\na = int(a)\nb = int(b.replace(\".\", \"\"))\nres = a * b // 100\n\nprint(res)\n", "import math\n\na, b = list(map(float, input().split()))\n\na = int(a)\nb = int(round(b * 100))\n\nans = a * b\n\nans = ans // 100\n\nprint(ans)\n", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    a, b = input().split()\n    c, d = b.split(\".\")\n    if len(d) == 1:\n        d = d + '0'\n    \n    p, q = int(a), int(c) * 100 + int(d)\n    ans = p * q // 100\n\n    print(ans)\n    \n    \n    \ndef __starting_point():\n    main()\n\n__starting_point()", "import math\nimport decimal\nA,B = input().split(' ')\nanswer = math.floor(int(A)*decimal.Decimal(B))\nprint(answer)\n\n", "\nM, N = input().split()   # 2\u3064\u6574\u6570\u306e\u8aad\u307f\u53d6\u308a\nA=int(M)\nB=N.replace(\".\",\"\")\nB=int(B)\n\nC=A*B//100\nprint(C)"]