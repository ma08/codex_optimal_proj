2022-04-18 04:54:27.105195 num operations 1
2022-04-18 04:54:27.105214 size on input set 1
2022-04-18 04:54:31.530759 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    r = [r]\n    for line in sys.stdin:\n        a, b = map(int, line.split())\n        if a > r[-1]:\n            r.append(r[-1])\n        else:\n            r.append(max(r[-1] - b, 0))\n    print(len(r) - 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    r = [0]\n    d = 0\n    for line in sys.stdin:\n        a, b = map(int, line.split())\n        if a > r[-1]:\n            r.append(r[-1] + b)\n        else:\n            d = max(d, r[-1] - b)\n    print(d)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    r = [0]\n    for line in sys.stdin:\n        a, b = map(int, line.split())\n        if a > r[-1]:\n            r.append(r[-1])\n        else:\n            r.append(max(r[-1] - b, 0))\n    print(r[-1])\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650257667,
  "object": "edit"
}
2022-04-18 04:54:31.531029 fix syntax errors 3 ['#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    r = [r]\n    for line in sys.stdin:\n        a, b = map(int, line.split())\n        if a > r[-1]:\n            r.append(r[-1])\n        else:\n            r.append(max(r[-1] - b, 0))\n    print(len(r) - 1)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    r = [0]\n    d = 0\n    for line in sys.stdin:\n        a, b = map(int, line.split())\n        if a > r[-1]:\n            r.append(r[-1] + b)\n        else:\n            d = max(d, r[-1] - b)\n    print(d)\n\nif __name__ == "__main__":\n    main()\n', '\n\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    r = [0]\n    for line in sys.stdin:\n        a, b = map(int, line.split())\n        if a > r[-1]:\n            r.append(r[-1])\n        else:\n            r.append(max(r[-1] - b, 0))\n    print(r[-1])\n\nif __name__ == "__main__":\n    main()\n']
2022-04-18 04:54:31.531116 size on output set 3
2022-04-18 04:54:31.531136 num operations 1
2022-04-18 04:54:31.531146 size on input set 1
2022-04-18 04:54:34.845590 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nfrom sys import stdin\nfrom typing import List, Tuple, Dict\n\n\ndef get_max_num_projects(rating: int, projects: List[Tuple[int, int]]) -> int\n    num_projects = 0\n    for required_rating, rating_change in projects:\n        if rating >= required_rating:\n            rating += rating_change\n            num_projects += 1\n\n    return num_projects\n\n\ndef main() -> None\n    input_line = stdin.readline().split()\n    num_projects, initial_rating = int(input_line[0]), int(input_line[1])\n    projects: List[Tuple[int, int]] = []\n    for _ in range(num_projects):\n        project_rating, rating_change = stdin.readline().split()\n        projects.append((int(project_rating), int(rating_change)))\n\n    projects.sort(key=lambda x: x[1])\n    projects.sort(key=lambda x: x[0])\n    print(get_max_num_projects(initial_rating, projects))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nfrom sys import stdin\nfrom typing import List, Tuple\n\n\ndef get_max_num_projects(rating: int, projects: List[Tuple[int, int]]) -> int:\n    num_projects = 0\n    for required_rating, rating_change in projects:\n        if rating >= required_rating:\n            rating += rating_change\n            num_projects += 1\n\n    return num_projects\n\n\ndef main() -> None:\n    input_line = stdin.readline().split()\n    num_projects, initial_rating = int(input_line[0]), int(input_line[1])\n    projects: List[Tuple[int, int]] = []\n    for _ in range(num_projects):\n        project_rating, rating_change = stdin.readline().split()\n        projects.append((int(project_rating), int(rating_change)))\n\n    projects.sort(key=lambda x: x[1])\n    projects.sort(key=lambda x: x[0])\n    print(get_max_num_projects(initial_rating, projects))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nfrom sys import stdin\nfrom typing import List, Tuple\n\n\ndef get_max_num_projects(rating: int, projects: List[Tuple[int, int]]) -> int:\n    num_projects = 0\n    for required_rating, rating_change in projects:\n        if rating >= required_rating:\n            rating += rating_change\n            num_projects += 1\n\n    return num_projects\n\n\ndef main() -> None:\n    input_line = stdin.readline().split()\n    num_projects, initial_rating = int(input_line[0]), int(input_line[1])\n    projects: List[Tuple[int, int]] = []\n    for _ in range(num_projects):\n        project_rating, rating_change = stdin.readline().split()\n        projects.append((int(project_rating), int(rating_change)))\n\n    projects.sort(key=lambda x: x[1])\n    projects.sort(key=lambda x: x[0])\n    print(get_max_num_projects(initial_rating, projects))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650257671,
  "object": "edit"
}
2022-04-18 04:54:34.845878 fix syntax errors 3 ["\n\nfrom sys import stdin\nfrom typing import List, Tuple, Dict\n\n\ndef get_max_num_projects(rating: int, projects: List[Tuple[int, int]]) -> int\n    num_projects = 0\n    for required_rating, rating_change in projects:\n        if rating >= required_rating:\n            rating += rating_change\n            num_projects += 1\n\n    return num_projects\n\n\ndef main() -> None\n    input_line = stdin.readline().split()\n    num_projects, initial_rating = int(input_line[0]), int(input_line[1])\n    projects: List[Tuple[int, int]] = []\n    for _ in range(num_projects):\n        project_rating, rating_change = stdin.readline().split()\n        projects.append((int(project_rating), int(rating_change)))\n\n    projects.sort(key=lambda x: x[1])\n    projects.sort(key=lambda x: x[0])\n    print(get_max_num_projects(initial_rating, projects))\n\n\nif __name__ == '__main__':\n    main()\n", "\nfrom sys import stdin\nfrom typing import List, Tuple\n\n\ndef get_max_num_projects(rating: int, projects: List[Tuple[int, int]]) -> int:\n    num_projects = 0\n    for required_rating, rating_change in projects:\n        if rating >= required_rating:\n            rating += rating_change\n            num_projects += 1\n\n    return num_projects\n\n\ndef main() -> None:\n    input_line = stdin.readline().split()\n    num_projects, initial_rating = int(input_line[0]), int(input_line[1])\n    projects: List[Tuple[int, int]] = []\n    for _ in range(num_projects):\n        project_rating, rating_change = stdin.readline().split()\n        projects.append((int(project_rating), int(rating_change)))\n\n    projects.sort(key=lambda x: x[1])\n    projects.sort(key=lambda x: x[0])\n    print(get_max_num_projects(initial_rating, projects))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nfrom sys import stdin\nfrom typing import List, Tuple\n\n\ndef get_max_num_projects(rating: int, projects: List[Tuple[int, int]]) -> int:\n    num_projects = 0\n    for required_rating, rating_change in projects:\n        if rating >= required_rating:\n            rating += rating_change\n            num_projects += 1\n\n    return num_projects\n\n\ndef main() -> None:\n    input_line = stdin.readline().split()\n    num_projects, initial_rating = int(input_line[0]), int(input_line[1])\n    projects: List[Tuple[int, int]] = []\n    for _ in range(num_projects):\n        project_rating, rating_change = stdin.readline().split()\n        projects.append((int(project_rating), int(rating_change)))\n\n    projects.sort(key=lambda x: x[1])\n    projects.sort(key=lambda x: x[0])\n    print(get_max_num_projects(initial_rating, projects))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-18 04:54:34.846039 size on output set 3
2022-04-18 04:54:34.846081 num operations 1
2022-04-18 04:54:34.846094 size on input set 1
2022-04-18 04:54:56.455732 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# # Not my solution, but I understand it and it's so damn clever and fast\n# # https://codeforces.com/contest/1206/submission/59559046\n#\n# n, r = map(int, input().split())\n# p = [list(map(int, input().split())) for _ in range(n)]\n# p.sort(key=lambda x: x[1] / x[0], reverse=True)\n# for i in range(n):\n#     r -= p[i][0]\n#     if r < 0:\n#         print(i)\n#         exit()\n#     r += p[i][1]\n# print(n)\n\n# n, r = map(int, input().split())\n# a = [list(map(int, input().split())) for _ in range(n)]\n# a.sort(key=lambda x: x[1] / x[0], reverse=True)\n# for i, j in a:\n#     r -= i\n#     if r < 0:\n#         print(i)\n#         break\n#     r += j\n# else:\n#     print(n)\n\n# My solution\n\n# def get_max(lst, x):\n#     for i in range(len(lst)):\n#         if lst[i][0] > x:\n#             continue\n#         else:\n#             return i\n#\n# n, r = map(int, input().split())\n# lst = [list(map(int, input().split())) for _ in range(n)]\n# lst.sort(key=lambda x: x[1] / x[0], reverse=True)\n#\n# ans = 0\n# while lst:\n#     num = get_max(lst, r)\n#     if num is None:\n#         break\n#     for i in range(num + 1):\n#         r -= lst[i][0]\n#         r += lst[i][1]\n#     lst = lst[num + 1:]\n#     ans += 1\n# print(ans)\n\n# It's the same solution as above, but the code is a bit more compact\n# https://codeforces.com/contest/1206/submission/59560137\n\nn, r = map(int, input().split())\na = [list(map(int, input().split())) for _ in range(n)]\na.sort(key=lambda x: x[1] / x[0], reverse=True)\nfor i, j in a:\n    r -= i\n    if r < 0:\n        print(i)\n        break\n    r += j\nelse:\n    print(n)\n"
    },
    {
      "index": 1,
      "text": "\n\n# Not my solution, but I understand it and it's so damn clever and fast\n# https://codeforces.com/contest/1206/submission/59559046\n\n# n, r = map(int, input().split())\n# p = [list(map(int, input().split())) for _ in range(n)]\n# p.sort(key=lambda x: x[1] / x[0], reverse=True)\n# for i in range(n):\n#     r -= p[i][0]\n#     if r < 0:\n#         print(i)\n#         exit()\n#     r += p[i][1]\n# print(n)\n\n# My solution\n\n# def get_max(lst, x):\n#     for i in range(len(lst)):\n#         if lst[i][0] > x:\n#             continue\n#         else:\n#             return i\n#\n# n, r = map(int, input().split())\n# lst = [list(map(int, input().split())) for _ in range(n)]\n# lst.sort(key=lambda x: x[1] / x[0], reverse=True)\n#\n# ans = 0\n# while lst:\n#     num = get_max(lst, r)\n#     if num is None:\n#         break\n#     for i in range(num + 1):\n#         r -= lst[i][0]\n#         r += lst[i][1]\n#     lst = lst[num + 1:]\n#     ans += 1\n# print(ans)\n\n# It's the same solution as above, but the code is a bit more compact\n# https://codeforces.com/contest/1206/submission/59560137\n\nn, r = map(int, input().split())\na = [list(map(int, input().split())) for _ in range(n)]\na.sort(key=lambda x: x[1] / x[0], reverse=True)\nfor i, j in a:\n    r -= i\n    if r < 0:\n        print(a.index(i))\n        break\n    r += j\nelse:\n    print(n)\n"
    },
    {
      "index": 2,
      "text": "\n\n# Not my solution, but I understand it and it's so damn clever and fast https://codeforces.com/contest/1206/submission/59559046\n\n# n, r = map(int, input().split())\n# p = [list(map(int, input().split())) for _ in range(n)]\n# p.sort(key=lambda x: x[1] / x[0], reverse=True)\n# for i in range(n):\n#     r -= p[i][0]\n#     if r < 0:\n#         print(i)\n#         exit()\n#     r += p[i][1]\n# print(n)\n\n# My solution\n\n# def get_max(lst, x):\n#     for i in range(len(lst)):\n#         if lst[i][0] > x:\n#             continue\n#         else:\n#             return i\n#\n# n, r = map(int, input().split())\n# lst = [list(map(int, input().split())) for _ in range(n)]\n# lst.sort(key=lambda x: x[1] / x[0], reverse=True)\n#\n# ans = 0\n# while lst:\n#     num = get_max(lst, r)\n#     if num is None:\n#         break\n#     for i in range(num + 1):\n#         r -= lst[i][0]\n#         r += lst[i][1]\n#     lst = lst[num + 1:]\n#     ans += 1\n# print(ans)\n\n# It's the same solution as above, but the code is a bit more compact https://codeforces.com/contest/1206/submission/59560137\n\nn, r = map(int, input().split())\na = [list(map(int, input().split())) for _ in range(n)]\na.sort(key=lambda x: x[1] / x[0], reverse=True)\nfor i, j in a:\n    r -= i\n    if r < 0:\n        print(i)\n        break\n    r += j\nelse:\n    print(n)\n"
    }
  ],
  "created": 1650257674,
  "object": "edit"
}
2022-04-18 04:54:56.455977 fix syntax errors 3 ["\n\n# # Not my solution, but I understand it and it's so damn clever and fast\n# # https://codeforces.com/contest/1206/submission/59559046\n#\n# n, r = map(int, input().split())\n# p = [list(map(int, input().split())) for _ in range(n)]\n# p.sort(key=lambda x: x[1] / x[0], reverse=True)\n# for i in range(n):\n#     r -= p[i][0]\n#     if r < 0:\n#         print(i)\n#         exit()\n#     r += p[i][1]\n# print(n)\n\n# n, r = map(int, input().split())\n# a = [list(map(int, input().split())) for _ in range(n)]\n# a.sort(key=lambda x: x[1] / x[0], reverse=True)\n# for i, j in a:\n#     r -= i\n#     if r < 0:\n#         print(i)\n#         break\n#     r += j\n# else:\n#     print(n)\n\n# My solution\n\n# def get_max(lst, x):\n#     for i in range(len(lst)):\n#         if lst[i][0] > x:\n#             continue\n#         else:\n#             return i\n#\n# n, r = map(int, input().split())\n# lst = [list(map(int, input().split())) for _ in range(n)]\n# lst.sort(key=lambda x: x[1] / x[0], reverse=True)\n#\n# ans = 0\n# while lst:\n#     num = get_max(lst, r)\n#     if num is None:\n#         break\n#     for i in range(num + 1):\n#         r -= lst[i][0]\n#         r += lst[i][1]\n#     lst = lst[num + 1:]\n#     ans += 1\n# print(ans)\n\n# It's the same solution as above, but the code is a bit more compact\n# https://codeforces.com/contest/1206/submission/59560137\n\nn, r = map(int, input().split())\na = [list(map(int, input().split())) for _ in range(n)]\na.sort(key=lambda x: x[1] / x[0], reverse=True)\nfor i, j in a:\n    r -= i\n    if r < 0:\n        print(i)\n        break\n    r += j\nelse:\n    print(n)\n", "\n\n# Not my solution, but I understand it and it's so damn clever and fast\n# https://codeforces.com/contest/1206/submission/59559046\n\n# n, r = map(int, input().split())\n# p = [list(map(int, input().split())) for _ in range(n)]\n# p.sort(key=lambda x: x[1] / x[0], reverse=True)\n# for i in range(n):\n#     r -= p[i][0]\n#     if r < 0:\n#         print(i)\n#         exit()\n#     r += p[i][1]\n# print(n)\n\n# My solution\n\n# def get_max(lst, x):\n#     for i in range(len(lst)):\n#         if lst[i][0] > x:\n#             continue\n#         else:\n#             return i\n#\n# n, r = map(int, input().split())\n# lst = [list(map(int, input().split())) for _ in range(n)]\n# lst.sort(key=lambda x: x[1] / x[0], reverse=True)\n#\n# ans = 0\n# while lst:\n#     num = get_max(lst, r)\n#     if num is None:\n#         break\n#     for i in range(num + 1):\n#         r -= lst[i][0]\n#         r += lst[i][1]\n#     lst = lst[num + 1:]\n#     ans += 1\n# print(ans)\n\n# It's the same solution as above, but the code is a bit more compact\n# https://codeforces.com/contest/1206/submission/59560137\n\nn, r = map(int, input().split())\na = [list(map(int, input().split())) for _ in range(n)]\na.sort(key=lambda x: x[1] / x[0], reverse=True)\nfor i, j in a:\n    r -= i\n    if r < 0:\n        print(a.index(i))\n        break\n    r += j\nelse:\n    print(n)\n", "\n\n# Not my solution, but I understand it and it's so damn clever and fast https://codeforces.com/contest/1206/submission/59559046\n\n# n, r = map(int, input().split())\n# p = [list(map(int, input().split())) for _ in range(n)]\n# p.sort(key=lambda x: x[1] / x[0], reverse=True)\n# for i in range(n):\n#     r -= p[i][0]\n#     if r < 0:\n#         print(i)\n#         exit()\n#     r += p[i][1]\n# print(n)\n\n# My solution\n\n# def get_max(lst, x):\n#     for i in range(len(lst)):\n#         if lst[i][0] > x:\n#             continue\n#         else:\n#             return i\n#\n# n, r = map(int, input().split())\n# lst = [list(map(int, input().split())) for _ in range(n)]\n# lst.sort(key=lambda x: x[1] / x[0], reverse=True)\n#\n# ans = 0\n# while lst:\n#     num = get_max(lst, r)\n#     if num is None:\n#         break\n#     for i in range(num + 1):\n#         r -= lst[i][0]\n#         r += lst[i][1]\n#     lst = lst[num + 1:]\n#     ans += 1\n# print(ans)\n\n# It's the same solution as above, but the code is a bit more compact https://codeforces.com/contest/1206/submission/59560137\n\nn, r = map(int, input().split())\na = [list(map(int, input().split())) for _ in range(n)]\na.sort(key=lambda x: x[1] / x[0], reverse=True)\nfor i, j in a:\n    r -= i\n    if r < 0:\n        print(i)\n        break\n    r += j\nelse:\n    print(n)\n"]
2022-04-18 04:54:56.456146 size on output set 3
