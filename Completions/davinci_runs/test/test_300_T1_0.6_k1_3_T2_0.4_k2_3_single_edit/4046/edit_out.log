2022-04-18 04:56:32.749311 num operations 1
2022-04-18 04:56:32.749331 size on input set 1
2022-04-18 04:56:35.852713 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]) or p[-1] != n:\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n"
    },
    {
      "index": 1,
      "text": "\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    print(-1)\nelse:\n    p = [0]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1] + 1)\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n"
    }
  ],
  "created": 1650257792,
  "object": "edit"
}
2022-04-18 04:56:35.852905 fix syntax errors 3 ["\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]) or p[-1] != n:\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n", "\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    print(-1)\nelse:\n    p = [1]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1])\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n", "\n\nn = int(input())\nq = [int(x) for x in input().split()]\n\nif not all([-n < x < n for x in q]):\n    print(-1)\nelse:\n    p = [0]\n    for i in range(1, n):\n        p.append(p[-1] + q[i-1] + 1)\n    if not all([1 <= x <= n for x in p]):\n        print(-1)\n    else:\n        print(' '.join([str(x) for x in p]))\n"]
2022-04-18 04:56:35.852977 size on output set 3
2022-04-18 04:56:35.853001 num operations 1
2022-04-18 04:56:35.853007 size on input set 1
2022-04-18 04:56:41.957145 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# first and last values of p\np_first = -1\np_last = n\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\n# check if possible\nfor i in q:\n\tif abs(i) >= n:\n\t\tprint(-1)\n\t\texit()\n\n# check if possible\nfor i in range(1, n):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\t\texit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n\tp[i+1] = p[i] + q[i]\n\n# check if possible\nfor i in p:\n\tif i > p_last or i < p_first:\n\t\tprint(-1)\n\t\texit()\n\n# print possible p\nprint(*p)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input()) # number of elements\nq = [int(i) for i in input().split()] # q values\n\n# first and last values of p (possible)\np_first = 1\np_last = n+1\n\n# check if possible (sum of q)\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\n# check if possible (abs(q[i]) < n)\nfor i in q:\n\tif abs(i) >= n:\n\t\tprint(-1)\n\t\texit()\n\n# check if possible (q[i] != q[i-1])\nfor i in range(1, n):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\t\texit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n\tp[i+1] = p[i] + q[i]\n\n# check if possible (p[i] < p_last and p[i] > p_first)\nfor i in p:\n\tif i > p_last or i < p_first:\n\t\tprint(-1)\n\t\texit()\n\n# print possible p\nprint(*p)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# first and last values of p\np_first = -1\np_last = n\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\n# check if possible\nfor i in q:\n\tif abs(i) >= n:\n\t\tprint(-1)\n\t\texit()\n\n# check if possible\nfor i in range(1, n):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\t\texit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n\tp[i+1] = p[i] + q[i]\n\n# check if possible\nfor i in p:\n\tif i >= p_last or i <= p_first:\n\t\tprint(-1)\n\t\texit()\n\n# print possible p\nprint(*p)\n"
    }
  ],
  "created": 1650257795,
  "object": "edit"
}
2022-04-18 04:56:41.957326 fix syntax errors 3 ['\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# first and last values of p\np_first = -1\np_last = n\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\n# check if possible\nfor i in q:\n\tif abs(i) >= n:\n\t\tprint(-1)\n\t\texit()\n\n# check if possible\nfor i in range(1, n):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\t\texit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n\tp[i+1] = p[i] + q[i]\n\n# check if possible\nfor i in p:\n\tif i > p_last or i < p_first:\n\t\tprint(-1)\n\t\texit()\n\n# print possible p\nprint(*p)\n', '\n\nn = int(input()) # number of elements\nq = [int(i) for i in input().split()] # q values\n\n# first and last values of p (possible)\np_first = 1\np_last = n+1\n\n# check if possible (sum of q)\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\n# check if possible (abs(q[i]) < n)\nfor i in q:\n\tif abs(i) >= n:\n\t\tprint(-1)\n\t\texit()\n\n# check if possible (q[i] != q[i-1])\nfor i in range(1, n):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\t\texit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n\tp[i+1] = p[i] + q[i]\n\n# check if possible (p[i] < p_last and p[i] > p_first)\nfor i in p:\n\tif i > p_last or i < p_first:\n\t\tprint(-1)\n\t\texit()\n\n# print possible p\nprint(*p)\n', '\n\nn = int(input())\nq = [int(i) for i in input().split()]\n\n# first and last values of p\np_first = -1\np_last = n\n\n# check if possible\nif sum(q) != 0:\n\tprint(-1)\n\texit()\n\n# check if possible\nfor i in q:\n\tif abs(i) >= n:\n\t\tprint(-1)\n\t\texit()\n\n# check if possible\nfor i in range(1, n):\n\tif q[i] == q[i-1]:\n\t\tprint(-1)\n\t\texit()\n\n# calculate p\np = [0 for i in range(n)]\nfor i in range(n-1):\n\tp[i+1] = p[i] + q[i]\n\n# check if possible\nfor i in p:\n\tif i >= p_last or i <= p_first:\n\t\tprint(-1)\n\t\texit()\n\n# print possible p\nprint(*p)\n']
2022-04-18 04:56:41.957367 size on output set 3
2022-04-18 04:56:41.957378 num operations 1
2022-04-18 04:56:41.957383 size on input set 1
2022-04-18 04:56:44.869430 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\nq = list(map(int, input().split()))\nq.sort()\np = [0]*n\np[0] = q[0]\nfor i in range(1, n-1):\n    p[i] = q[i] + p[i-1]\np[n-1] = q[n-2] + p[n-2]\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n-1):\n    p[i] = q[i] + p[i-1]\n\np[n-1] = q[n-2] + p[n-2]\n\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(p)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n):\n    p[i] = q[i] + p[i-1]\n\np[n-1] = q[n-2] + p[n-2]\n\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n"
    }
  ],
  "created": 1650257801,
  "object": "edit"
}
2022-04-18 04:56:44.869622 fix syntax errors 3 ['\nn = int(input())\nq = list(map(int, input().split()))\nq.sort()\np = [0]*n\np[0] = q[0]\nfor i in range(1, n-1):\n    p[i] = q[i] + p[i-1]\np[n-1] = q[n-2] + p[n-2]\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n', '\n\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n-1):\n    p[i] = q[i] + p[i-1]\n\np[n-1] = q[n-2] + p[n-2]\n\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(p)\n', '\nn = int(input())\nq = list(map(int, input().split()))\n\nq.sort()\n\np = [0]*n\np[0] = q[0]\n\nfor i in range(1, n):\n    p[i] = q[i] + p[i-1]\n\np[n-1] = q[n-2] + p[n-2]\n\nif p[n-1] < 1:\n    print(-1)\nelse:\n    print(*p)\n']
2022-04-18 04:56:44.869725 size on output set 3
