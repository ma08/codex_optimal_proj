["\nn, k = map(int, input().split())\n\nif k == 1:\n    if n == 1:\n        print('YES')\n        print(n)\n    else:\n        print('NO')\nelif k == 2:\n    if n % 2 == 0:\n        print('YES')\n        print(n // 2, n - n // 2)\n    else:\n        print('NO')\nelif k == 3:\n    if n % 3 == 0:\n        print('YES')\n        print(n // 3, n // 3, n - 2 * n // 3)\n    else:\n        print('NO')\nelif k > 3:\n    if n >= k and n <= 2 * k - 1:\n        print('YES')\n        if n >= k + 2:\n            print(1, 1, n - 2)\n        else:\n            print(1, n - 1)\n    else:\n        print('NO')\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    if n <= k:\n        print(\"NO\")\n        return\n    a = [1]\n    for i in range(1, k):\n        if a[-1] * 2 - 1 <= n:\n            a.append(a[-1] * 2 - 1)\n        else:\n            a.append(n)\n            break\n    else:\n        if a[-1] * 2 - 1 == n:\n            a.append(n)\n        else:\n            print(\"NO\")\n            return\n    a[-1] = n - sum(a[:-1])\n    print(\"YES\")\n    print(*a)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    pass\n\nif __name__ == \"__main__\":\n    main()\n", "\n#!/usr/bin/python3\n# -*- coding: utf-8 -*-\n# Author: Volkan \u015eahin <volkansah.in> <bm.volkansahin@gmail.com>\nimport os\nimport sys\nimport json\nimport base64\nimport argparse\nimport subprocess\nimport threading\nimport signal\nimport time\nimport getpass\nimport re\nimport hashlib\nimport socket\nimport urllib.request\nimport urllib.parse\nimport urllib.error\nimport urllib.request\nimport urllib.error\nimport urllib.parse\nimport http.client\nimport http.client\nimport http.cookiejar\nimport requests\nimport requests\nfrom datetime import datetime\nfrom base.scope import Scope\nfrom base.system import System\nfrom base.util.util import Util\nfrom base.timer.timer import Timer\nfrom base.timer.timer import Timer\nfrom base.model.enum.content_type import ContentType\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.message_code import MessageCode\nfrom base.model.enum.\n", "\ndef main():\n    n, k = map(int, input().split())\n    if n < k:\n        print(\"NO\")\n        return\n    a = [1]\n    for i in range(1, k):\n        if a[-1] * 2 - 1 < n:\n            a.append(a[-1] * 2 - 1)\n        else:\n            a.append(n)\n            break\n    else:\n        if a[-1] * 2 - 1 == n:\n            a.append(n)\n        else:\n            print(\"NO\")\n            return\n    a[-1] = n - sum(a[:-1])\n    print(\"YES\")\n    print(*a)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n, k = map(int, input().split())\n    if n < k:\n        print(\"NO\")\n        return\n    a = [1]\n    for i in range(1, k):\n        if a[-1] * 2 - 1 <= n:\n            a.append(a[-1] * 2)\n        else:\n            a.append(n)\n            break\n    else:\n        print(\"NO\")\n        return\n    a[-1] = n - sum(a[:-1])\n    print(\"YES\")\n    print(*a)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n, k = [int(x) for x in input().split()]\n    if n < k:\n        print(\"NO\")\n        return\n    if k == 1:\n        if n == 1:\n            print(\"YES\")\n            print(\"1\")\n        else:\n            print(\"NO\")\n        return\n    # k >= 2\n    if n % (k - 1) == 0:\n        print(\"YES\")\n        print(\"1 \" * (k - 1) + str(n // (k - 1)))\n    else:\n        if n % (k - 1) == 1:\n            print(\"NO\")\n        else:\n            print(\"YES\")\n            print(str(2 * (n % (k - 1))) + \" \" + \"1 \" * (k - 2) + str(n // (k - 1)))\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a.sort()\n    print(a[n - 1] - a[0])\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# SOLUTION\nn, k = map(int, input().split())\n\nif k == 1:\n    if n == 1:\n        print('YES')\n        print(n)\n    else:\n        print('NO')\nelif k == 2:\n    if n % 2 == 0:\n        print('YES')\n        print(n // 2, n - n // 2)\n    else:\n        print('NO')\nelif k == 3:\n    if n % 3 == 0:\n        print('YES')\n        print(n // 3, n // 3, n - 2 * n // 3)\n    else:\n        print('NO')\nelif k > 3:\n    if n >= k and n <= 2 * k - 1:\n        print('YES')\n        if n >= k + 2:\n            print(1, 1, n - 2)\n        else:\n            print(1, n - 1)\n    else:\n        print('NO')\n"]