2022-04-18 05:49:42.797987 num operations 1
2022-04-18 05:49:42.798008 size on input set 1
2022-04-18 05:49:49.947611 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# get input\ns = raw_input()\nt = raw_input()\n\n# get length of both strings\nsl = len(s)\ntl = len(t)\n\n# initialize count\ncount = 0\n\n# loop through t and check if s has it\nfor i in range(0, tl):\n    if s[i] != t[i]:\n        count += 1\n\n# print out result\nprint count\n"
    },
    {
      "index": 1,
      "text": "\n\n# get input\ns = input()\nt = input()\n\n# get length of both strings\nsl = len(s)\ntl = len(t)\n\n# initialize count\ncount = 0\n\n# loop through t and check if s has it\nfor i in range(0, tl):\n    if s[i] == t[i]:\n        count += 1\n\n# print out result\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\n\n# get input \ns = input() \nt = input() \n\n# get length of both strings \nsl = len(s) \ntl = len(t) \n\n# initialize count \ncount = 0 \n\n# loop through t and check if s has it \nfor i in range(0, tl): \n    if s[i] != t[i]: \n        count += 1 \n\n# print out result \nprint(count) \n"
    }
  ],
  "created": 1650260982,
  "object": "edit"
}
2022-04-18 05:49:49.947917 fix syntax errors 3 ['\n\n# get input\ns = raw_input()\nt = raw_input()\n\n# get length of both strings\nsl = len(s)\ntl = len(t)\n\n# initialize count\ncount = 0\n\n# loop through t and check if s has it\nfor i in range(0, tl):\n    if s[i] != t[i]:\n        count += 1\n\n# print out result\nprint count\n', '\n\n# get input\ns = input()\nt = input()\n\n# get length of both strings\nsl = len(s)\ntl = len(t)\n\n# initialize count\ncount = 0\n\n# loop through t and check if s has it\nfor i in range(0, tl):\n    if s[i] == t[i]:\n        count += 1\n\n# print out result\nprint(count)\n', '\n\n# get input \ns = input() \nt = input() \n\n# get length of both strings \nsl = len(s) \ntl = len(t) \n\n# initialize count \ncount = 0 \n\n# loop through t and check if s has it \nfor i in range(0, tl): \n    if s[i] != t[i]: \n        count += 1 \n\n# print out result \nprint(count) \n']
2022-04-18 05:49:49.947959 size on output set 3
2022-04-18 05:49:49.947978 num operations 1
2022-04-18 05:49:49.947984 size on input set 1
2022-04-18 05:49:54.349398 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/python3\n\ns = input()\nt = input()\n\ndef main(s, t):\n    count = 0\n\n    for i in range(len(s)):\n        if s[i:i+len(t)] == t:\n            return count\n        else:\n            count += 1\n\nprint(main(s, t))\n"
    },
    {
      "index": 1,
      "text": "\ns = input()\nt = input()\n\ndef main(s, t):\n    count = 0\n\n    for i in range(len(s)):\n        if s[i:i+len(t)] == t:\n            return count\n        else:\n            count += 1\n\nprint(main(s, t))\n"
    },
    {
      "index": 2,
      "text": "\ns = input()\nt = input()\n\ndef main(s, t):\n    count = 0\n\n    for i in range(len(s)):\n        if s[i:i+len(t)] == t: # \u5f8c\u308d\u304b\u3089\u63a2\u7d22\u3057\u3066\u3044\u304f\n            return count\n        else:\n            count += 1\n\nprint(main(s, t))\n"
    }
  ],
  "created": 1650260990,
  "object": "edit"
}
2022-04-18 05:49:54.349601 fix syntax errors 3 ['#!/usr/bin/python3\n\ns = input()\nt = input()\n\ndef main(s, t):\n    count = 0\n\n    for i in range(len(s)):\n        if s[i:i+len(t)] == t:\n            return count\n        else:\n            count += 1\n\nprint(main(s, t))\n', '\ns = input()\nt = input()\n\ndef main(s, t):\n    count = 0\n\n    for i in range(len(s)):\n        if s[i:i+len(t)] == t:\n            return count\n        else:\n            count += 1\n\nprint(main(s, t))\n', '\ns = input()\nt = input()\n\ndef main(s, t):\n    count = 0\n\n    for i in range(len(s)):\n        if s[i:i+len(t)] == t: # 後ろから探索していく\n            return count\n        else:\n            count += 1\n\nprint(main(s, t))\n']
2022-04-18 05:49:54.349633 size on output set 3
2022-04-18 05:49:54.349644 num operations 1
2022-04-18 05:49:54.349650 size on input set 1
2022-04-18 05:50:10.191499 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef edit_distance(s, t):\n    # Set up variables\n    slen = len(s)\n    tlen = len(t)\n\n    # Initialize array to store the minimum number of changes needed\n    changes = [[0 for i in range(slen + 1)] for j in range(tlen + 1)]\n\n# Initialize array to store the minimum number of changes needed\nchanges = [[0 for i in range(slen + 1)] for j in range(tlen + 1)]\n\n# Populate the first row\nfor i in range(1, slen + 1):\n    changes[0][i] = i\n\n# Populate the first column\nfor j in range(1, tlen + 1):\n    changes[j][0] = j\n\n# Calculate the rest of the matrix\nfor j in range(1, tlen + 1):\n    for i in range(1, slen + 1):\n        if S[i-1] == T[j-1]:\n            changes[j][i] = changes[j-1][i-1]\n        else:\n            changes[j][i] = min(changes[j-1][i], changes[j][i-1], changes[j-1][i-1]) + 1\n\nprint(changes[tlen][slen])\n"
    },
    {
      "index": 1,
      "text": "\n# Get input\nS = input()\nT = input()\n\n# Set up variables\nslen = len(S)\ntlen = len(T)\n\n# Initialize array to store the minimum number of changes needed\nchanges = [[0 for i in range(slen + 1)] for j in range(tlen + 1)]\n\n# Populate the first row\nfor i in range(1, slen + 1):\n    changes[0][i] = i\n\n# Populate the first column\nfor j in range(1, tlen + 1):\n    changes[j][0] = j\n\n# Calculate the rest of the matrix\nfor j in range(1, tlen + 1):\n    for i in range(1, slen + 1):\n        if S[i-1] == T[j-1]:\n            changes[j][i] = changes[j-1][i-1]\n        else:\n            changes[j][i] = min(changes[j-1][i], changes[j][i-1], changes[j-1][i-1]) + 1\n\nprint(changes[tlen][slen])\n"
    },
    {
      "index": 2,
      "text": "\n# Get input\nS = input()\nT = input()\n\n# Set up variables\nslen = len(S)\ntlen = len(T)\n\n# Initialize array to store the minimum number of changes needed\nchanges = [[0 for i in range(slen + 1)] for j in range(tlen + 1)]\n\n# Populate the first row\nfor i in range(1, slen + 1):\n    changes[0][i] = i\n\n# Populate the first column\nfor j in range(1, tlen + 1):\n    changes[j][0] = j\n\n# Calculate the rest of the matrix\nfor j in range(1, tlen + 1):\n    for i in range(1, slen + 1):\n        if S[i-1] == T[j-1]:\n            changes[j][i] = changes[j-1][i-1]\n        else:\n            changes[j][i] = min(changes[j-1][i], changes[j][i-1], changes[j-1][i-1]) + 1\n\nprint(changes[tlen][slen])\n"
    }
  ],
  "created": 1650260994,
  "object": "edit"
}
2022-04-18 05:50:10.191681 fix syntax errors 3 ['\n\ndef edit_distance(s, t):\n    # Set up variables\n    slen = len(s)\n    tlen = len(t)\n\n    # Initialize array to store the minimum number of changes needed\n    changes = [[0 for i in range(slen + 1)] for j in range(tlen + 1)]\n\n# Initialize array to store the minimum number of changes needed\nchanges = [[0 for i in range(slen + 1)] for j in range(tlen + 1)]\n\n# Populate the first row\nfor i in range(1, slen + 1):\n    changes[0][i] = i\n\n# Populate the first column\nfor j in range(1, tlen + 1):\n    changes[j][0] = j\n\n# Calculate the rest of the matrix\nfor j in range(1, tlen + 1):\n    for i in range(1, slen + 1):\n        if S[i-1] == T[j-1]:\n            changes[j][i] = changes[j-1][i-1]\n        else:\n            changes[j][i] = min(changes[j-1][i], changes[j][i-1], changes[j-1][i-1]) + 1\n\nprint(changes[tlen][slen])\n', '\n# Get input\nS = input()\nT = input()\n\n# Set up variables\nslen = len(S)\ntlen = len(T)\n\n# Initialize array to store the minimum number of changes needed\nchanges = [[0 for i in range(slen + 1)] for j in range(tlen + 1)]\n\n# Populate the first row\nfor i in range(1, slen + 1):\n    changes[0][i] = i\n\n# Populate the first column\nfor j in range(1, tlen + 1):\n    changes[j][0] = j\n\n# Calculate the rest of the matrix\nfor j in range(1, tlen + 1):\n    for i in range(1, slen + 1):\n        if S[i-1] == T[j-1]:\n            changes[j][i] = changes[j-1][i-1]\n        else:\n            changes[j][i] = min(changes[j-1][i], changes[j][i-1], changes[j-1][i-1]) + 1\n\nprint(changes[tlen][slen])\n', '\n# Get input\nS = input()\nT = input()\n\n# Set up variables\nslen = len(S)\ntlen = len(T)\n\n# Initialize array to store the minimum number of changes needed\nchanges = [[0 for i in range(slen + 1)] for j in range(tlen + 1)]\n\n# Populate the first row\nfor i in range(1, slen + 1):\n    changes[0][i] = i\n\n# Populate the first column\nfor j in range(1, tlen + 1):\n    changes[j][0] = j\n\n# Calculate the rest of the matrix\nfor j in range(1, tlen + 1):\n    for i in range(1, slen + 1):\n        if S[i-1] == T[j-1]:\n            changes[j][i] = changes[j-1][i-1]\n        else:\n            changes[j][i] = min(changes[j-1][i], changes[j][i-1], changes[j-1][i-1]) + 1\n\nprint(changes[tlen][slen])\n']
2022-04-18 05:50:10.191790 size on output set 2
