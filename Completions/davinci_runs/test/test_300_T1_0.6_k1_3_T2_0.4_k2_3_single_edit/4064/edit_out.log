2022-04-18 05:01:09.995807 num operations 1
2022-04-18 05:01:09.995829 size on input set 1
2022-04-18 05:01:24.039793 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef solve_dp(n, h, l, r, a, dp):\n    if n == 0:\n        return 0\n    if dp[n][h][l][r] != -1:\n        return dp[n][h][l][r]\n    if (h + a[n - 1]) % h >= l and (h + a[n - 1]) % h <= r:\n        dp[n][h][l][r] = max(dp[n][h][l][r], solve_dp(n - 1, (h + a[n - 1]) % h, l, r, a, dp) + 1)\n    if (h + a[n - 1] - 1) % h >= l and (h + a[n - 1] - 1) % h <= r:\n        dp[n][h][l][r] = max(dp[n][h][l][r], solve_dp(n - 1, (h + a[n - 1] - 1) % h, l, r, a, dp) + 1)\n    return dp[n][h][l][r]\n\n\nn, h, l, r = map(int, input().split())\na = list(map(int, input().split()))\ndp = [[[[-1] * (r + 1) for j in range(l + 1)] for k in range(h + 1)] for l in range(n + 1)]\nprint(solve_dp(n, 0, l, r, a, dp))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef solve_dp(n, h, l, r, a):\n    dp = [[0] * (h + 1) for i in range(n)]\n    dp[0][a[0] % h] = 1\n    for i in range(n - 1):\n        for j in range(h + 1):\n            if dp[i][j] == 0:\n                continue\n            if (j + a[i + 1]) % h >= l and (j + a[i + 1]) % h < r:\n                dp[i + 1][(j + a[i + 1]) % h] = max(dp[i + 1][(j + a[i + 1]) % h], dp[i][j])\n            if (j + a[i + 1] - 1) % h >= l and (j + a[i + 1] - 1) % h < r:\n                dp[i + 1][(j + a[i + 1] - 1) % h] = max(dp[i + 1][(j + a[i + 1] - 1) % h], dp[i][j])\n            dp[i + 1][(j + a[i + 1]) % h] = max(dp[i + 1][(j + a[i + 1]) % h], dp[i][j] + 1)\n            dp[i + 1][(j + a[i + 1] - 1) % h] = max(dp[i + 1][(j + a[i + 1] - 1) % h], dp[i][j] + 1)\n    return max(dp[n - 1])\n\n\nn, h, l, r = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve_dp(n, h, l, r, a))\n"
    },
    {
      "index": 2,
      "text": "\n\ndef solve_dp(n, h, l, r, a, s):\n    dp = [[0] * h for i in range(n)]\n    dp[0][s[0]] = 1\n    for i in range(n - 1):\n        for j in range(h):\n            if dp[i][j] == 0:\n                continue\n            if (j + s[i + 1]) % h >= l and (j + s[i + 1]) % h <= r:\n                dp[i + 1][(j + s[i + 1]) % h] = max(dp[i + 1][(j + s[i + 1]) % h], dp[i][j] + 1)\n            if (j + s[i + 1] - 1) % h >= l and (j + s[i + 1] - 1) % h <= r:\n                dp[i + 1][(j + s[i + 1] - 1) % h] = max(dp[i + 1][(j + s[i + 1] - 1) % h], dp[i][j] + 1)\n    return max(dp[n - 1])\n\n\nn, h, l, r = map(int, input().split())\na = list(map(int, input().split()))\ns = [0]\nfor i in range(n - 1):\n    s.append((s[i] + a[i]) % h)\nprint(solve_dp(n, h, l, r, a, s))\n"
    }
  ],
  "created": 1650258070,
  "object": "edit"
}
2022-04-18 05:01:24.040122 fix syntax errors 3 ['\n\ndef solve_dp(n, h, l, r, a, dp):\n    if n == 0:\n        return 0\n    if dp[n][h][l][r] != -1:\n        return dp[n][h][l][r]\n    if (h + a[n - 1]) % h >= l and (h + a[n - 1]) % h <= r:\n        dp[n][h][l][r] = max(dp[n][h][l][r], solve_dp(n - 1, (h + a[n - 1]) % h, l, r, a, dp) + 1)\n    if (h + a[n - 1] - 1) % h >= l and (h + a[n - 1] - 1) % h <= r:\n        dp[n][h][l][r] = max(dp[n][h][l][r], solve_dp(n - 1, (h + a[n - 1] - 1) % h, l, r, a, dp) + 1)\n    return dp[n][h][l][r]\n\n\nn, h, l, r = map(int, input().split())\na = list(map(int, input().split()))\ndp = [[[[-1] * (r + 1) for j in range(l + 1)] for k in range(h + 1)] for l in range(n + 1)]\nprint(solve_dp(n, 0, l, r, a, dp))\n', '\n\ndef solve_dp(n, h, l, r, a):\n    dp = [[0] * (h + 1) for i in range(n)]\n    dp[0][a[0] % h] = 1\n    for i in range(n - 1):\n        for j in range(h + 1):\n            if dp[i][j] == 0:\n                continue\n            if (j + a[i + 1]) % h >= l and (j + a[i + 1]) % h < r:\n                dp[i + 1][(j + a[i + 1]) % h] = max(dp[i + 1][(j + a[i + 1]) % h], dp[i][j])\n            if (j + a[i + 1] - 1) % h >= l and (j + a[i + 1] - 1) % h < r:\n                dp[i + 1][(j + a[i + 1] - 1) % h] = max(dp[i + 1][(j + a[i + 1] - 1) % h], dp[i][j])\n            dp[i + 1][(j + a[i + 1]) % h] = max(dp[i + 1][(j + a[i + 1]) % h], dp[i][j] + 1)\n            dp[i + 1][(j + a[i + 1] - 1) % h] = max(dp[i + 1][(j + a[i + 1] - 1) % h], dp[i][j] + 1)\n    return max(dp[n - 1])\n\n\nn, h, l, r = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve_dp(n, h, l, r, a))\n', '\n\ndef solve_dp(n, h, l, r, a, s):\n    dp = [[0] * h for i in range(n)]\n    dp[0][s[0]] = 1\n    for i in range(n - 1):\n        for j in range(h):\n            if dp[i][j] == 0:\n                continue\n            if (j + s[i + 1]) % h >= l and (j + s[i + 1]) % h <= r:\n                dp[i + 1][(j + s[i + 1]) % h] = max(dp[i + 1][(j + s[i + 1]) % h], dp[i][j] + 1)\n            if (j + s[i + 1] - 1) % h >= l and (j + s[i + 1] - 1) % h <= r:\n                dp[i + 1][(j + s[i + 1] - 1) % h] = max(dp[i + 1][(j + s[i + 1] - 1) % h], dp[i][j] + 1)\n    return max(dp[n - 1])\n\n\nn, h, l, r = map(int, input().split())\na = list(map(int, input().split()))\ns = [0]\nfor i in range(n - 1):\n    s.append((s[i] + a[i]) % h)\nprint(solve_dp(n, h, l, r, a, s))\n']
2022-04-18 05:01:24.040189 size on output set 3
2022-04-18 05:01:24.040209 num operations 1
2022-04-18 05:01:24.040235 size on input set 1
2022-04-18 05:01:26.294498 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, h, l, r = map(int, input().split())\na = list(map(int, input().split()))\n\ndp = [[0, 0] for i in range(n)]\n\nif a[0] > l and a[0] < r:\n    dp[0][0] = 1\nelse:\n    dp[0][0] = 0\nif a[0] - 1 > l and a[0] - 1 < r:\n    dp[0][1] = 1\nelse:\n    dp[0][1] = 0\n\nfor i in range(1, n):\n    dp[i][0] = max(dp[i - 1][0], dp[i - 1][1])\n    if a[i] > l and a[i] < r:\n        dp[i][0] += 1\n    dp[i][1] = max(dp[i - 1][0], dp[i - 1][1])\n    if a[i] - 1 > l and a[i] - 1 < r:\n        dp[i][1] += 1\n\nprint(max(dp[n - 1][0], dp[n - 1][1]))\n"
    },
    {
      "index": 1,
      "text": "# https://atcoder.jp/contests/dp/tasks/dp_h\n\nn, h, l, r = map(int, input().split())\na = list(map(int, input().split()))\n\ndp = [[0, 0] for i in range(n)]\n\nif a[0] > l and a[0] < r:\n    dp[0][0] = 1\nelse:\n    dp[0][0] = 0\nif a[0] - 1 > l and a[0] - 1 < r:\n    dp[0][1] = 1\nelse:\n    dp[0][1] = 0\n\nfor i in range(1, n):\n    dp[i][0] = max(dp[i - 1][0], dp[i - 1][1])\n    if a[i] > l and a[i] < r:\n        dp[i][0] += 1\n    dp[i][1] = max(dp[i - 1][0], dp[i - 1][1])\n    if a[i] - 1 > l and a[i] - 1 < r:\n        dp[i][1] += 1\n\nprint(max(dp[n - 1][0], dp[n - 1][1]))\n"
    },
    {
      "index": 2,
      "text": "#a\n\nn, h, l, r = map(int, input().split())\na = list(map(int, input().split()))\n\ndp = [[0, 0] for i in range(n)]\n\nif a[0] > l and a[0] < r:\n    dp[0][0] = 1\nelse:\n    dp[0][0] = 0\nif a[0] - 1 > l and a[0] - 1 < r:\n    dp[0][1] = 1\nelse:\n    dp[0][1] = 0\n\nfor i in range(1, n):\n    dp[i][0] = max(dp[i - 1][0], dp[i - 1][1])\n    if a[i] > l and a[i] < r:\n        dp[i][0] += 1\n    dp[i][1] = max(dp[i - 1][0], dp[i - 1][1])\n    if a[i] - 1 > l and a[i] - 1 < r:\n        dp[i][1] += 1\n\nprint(max(dp[n - 1][0], dp[n - 1][1]))\n"
    }
  ],
  "created": 1650258084,
  "object": "edit"
}
2022-04-18 05:01:26.294760 fix syntax errors 3 ['\nn, h, l, r = map(int, input().split())\na = list(map(int, input().split()))\n\ndp = [[0, 0] for i in range(n)]\n\nif a[0] > l and a[0] < r:\n    dp[0][0] = 1\nelse:\n    dp[0][0] = 0\nif a[0] - 1 > l and a[0] - 1 < r:\n    dp[0][1] = 1\nelse:\n    dp[0][1] = 0\n\nfor i in range(1, n):\n    dp[i][0] = max(dp[i - 1][0], dp[i - 1][1])\n    if a[i] > l and a[i] < r:\n        dp[i][0] += 1\n    dp[i][1] = max(dp[i - 1][0], dp[i - 1][1])\n    if a[i] - 1 > l and a[i] - 1 < r:\n        dp[i][1] += 1\n\nprint(max(dp[n - 1][0], dp[n - 1][1]))\n', '# https://atcoder.jp/contests/dp/tasks/dp_h\n\nn, h, l, r = map(int, input().split())\na = list(map(int, input().split()))\n\ndp = [[0, 0] for i in range(n)]\n\nif a[0] > l and a[0] < r:\n    dp[0][0] = 1\nelse:\n    dp[0][0] = 0\nif a[0] - 1 > l and a[0] - 1 < r:\n    dp[0][1] = 1\nelse:\n    dp[0][1] = 0\n\nfor i in range(1, n):\n    dp[i][0] = max(dp[i - 1][0], dp[i - 1][1])\n    if a[i] > l and a[i] < r:\n        dp[i][0] += 1\n    dp[i][1] = max(dp[i - 1][0], dp[i - 1][1])\n    if a[i] - 1 > l and a[i] - 1 < r:\n        dp[i][1] += 1\n\nprint(max(dp[n - 1][0], dp[n - 1][1]))\n', '#a\n\nn, h, l, r = map(int, input().split())\na = list(map(int, input().split()))\n\ndp = [[0, 0] for i in range(n)]\n\nif a[0] > l and a[0] < r:\n    dp[0][0] = 1\nelse:\n    dp[0][0] = 0\nif a[0] - 1 > l and a[0] - 1 < r:\n    dp[0][1] = 1\nelse:\n    dp[0][1] = 0\n\nfor i in range(1, n):\n    dp[i][0] = max(dp[i - 1][0], dp[i - 1][1])\n    if a[i] > l and a[i] < r:\n        dp[i][0] += 1\n    dp[i][1] = max(dp[i - 1][0], dp[i - 1][1])\n    if a[i] - 1 > l and a[i] - 1 < r:\n        dp[i][1] += 1\n\nprint(max(dp[n - 1][0], dp[n - 1][1]))\n']
2022-04-18 05:01:26.294945 size on output set 3
2022-04-18 05:01:26.294969 num operations 1
2022-04-18 05:01:26.294980 size on input set 1
2022-04-18 05:01:37.959616 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nprint(input().replace('2017', '2018'))\n"
    },
    {
      "index": 1,
      "text": "\nn, h, l, r = map(int, input().split())\na = list(map(int, input().split()))\n\ndp = [[0 for _ in range(h)] for _ in range(n)]\n\ndp[0][0] = 1\nfor i in range(1, n):\n    for j in range(h):\n        if j - a[i] >= 0:\n            dp[i][j] = max(dp[i - 1][j - a[i]], dp[i - 1][j - a[i] + 1])\n        else:\n            dp[i][j] = dp[i - 1][j - a[i] + 1]\n\nans = 0\nfor i in range(l, r + 1):\n    ans = max(ans, dp[n - 1][i])\n\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\nn, h, l, r = map(int, input().split())\na = list(map(int, input().split()))\n\ndp = [[0 for _ in range(h)] for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(h):\n        if j - a[i] >= 0:\n            dp[i][j] = max(dp[i - 1][j - a[i - 1]], dp[i - 1][(j - a[i - 1]) + 1])\n        else:\n            dp[i][j] = dp[i - 1][j - a[i - 1] + 1]\n\nans = 0\nfor i in range(l, r + 1):\n    ans = max(ans, dp[n - 1][i])\n\nprint(ans)\n"
    }
  ],
  "created": 1650258086,
  "object": "edit"
}
2022-04-18 05:01:37.959848 fix syntax errors 3 ["\nprint(input().replace('2017', '2018'))\n", '\nn, h, l, r = map(int, input().split())\na = list(map(int, input().split()))\n\ndp = [[0 for _ in range(h)] for _ in range(n)]\n\ndp[0][0] = 1\nfor i in range(1, n):\n    for j in range(h):\n        if j - a[i] >= 0:\n            dp[i][j] = max(dp[i - 1][j - a[i]], dp[i - 1][j - a[i] + 1])\n        else:\n            dp[i][j] = dp[i - 1][j - a[i] + 1]\n\nans = 0\nfor i in range(l, r + 1):\n    ans = max(ans, dp[n - 1][i])\n\nprint(ans)\n', '\nn, h, l, r = map(int, input().split())\na = list(map(int, input().split()))\n\ndp = [[0 for _ in range(h)] for _ in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(h):\n        if j - a[i] >= 0:\n            dp[i][j] = max(dp[i - 1][j - a[i - 1]], dp[i - 1][(j - a[i - 1]) + 1])\n        else:\n            dp[i][j] = dp[i - 1][j - a[i - 1] + 1]\n\nans = 0\nfor i in range(l, r + 1):\n    ans = max(ans, dp[n - 1][i])\n\nprint(ans)\n']
2022-04-18 05:01:37.959969 size on output set 3
