2022-04-18 05:26:44.792105 num operations 1
2022-04-18 05:26:44.792127 size on input set 1
2022-04-18 05:26:53.158597 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    # The only way to get a number greater than its predecessor is to multiply it by 2.\n    # So we can determine the order of the array by multiplying the previous number by 2.\n    # If we get an array that is greater than the current number, we divide the current number\n    # by 3 and add it to the array.\n\n    # Sort the array in descending order\n    a.sort(reverse=True)\n\n    answer = []\n    for i in a:\n        if len(answer) == 0 or i <= answer[-1]:\n            answer.append(i)\n        elif i > answer[-1] * 2:\n            answer.append(i)\n        else:\n            while i < answer[-1] * 2:\n                i = i * 3\n            answer.append(i)\n\n    # Print the answer\n    print(' '.join(str(x) for x in answer))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    # The only way to get a number greater than its predecessor is to multiply it by 2.\n    # So we can determine the order of the array by multiplying the previous number by 2.\n    # If we get an array that is greater than the current number, we divide the current number by 3 and add it to the array.\n\n    # Sort the array in descending order.\n    a.sort(reverse=True)\n\n    answer = []\n    for i in a:\n        if len(answer) == 0 or i <= answer[-1]:\n            answer.append(i)\n        elif i > answer[-1] * 2:\n            answer.append(i)\n        else:\n            while i < answer[-1] * 2:\n                i = i * 3\n            answer.append(i)\n\n    # Print the answer.\n    print(' '.join(str(x) for x in answer))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split(' ')]\n\n    # The only way to get a number greater than\n    # its predecessor is to multiply it by 2.\n    # So we can determine the order of the array\n    # by multiplying the previous number by 2.\n    # If we get an array that is greater than the\n    # current number, we divide the current number\n    # by 3 and add it to the array.\n\n    # Sort the array in descending order\n    a.sort(reverse=True)\n\n    answer = []\n    for i in a:\n        if len(answer) == 0 or i <= answer[-1]:\n            answer.append(i)\n        elif i > answer[-1] * 2:\n            answer.append(i)\n        else:\n            while i < answer[-1] * 2:\n                i = i * 3\n            answer.append(i)\n\n    # Print the answer\n    print(' '.join(map(str, answer)))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650259604,
  "object": "edit"
}
2022-04-18 05:26:53.158976 fix syntax errors 3 ["\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    # The only way to get a number greater than its predecessor is to multiply it by 2.\n    # So we can determine the order of the array by multiplying the previous number by 2.\n    # If we get an array that is greater than the current number, we divide the current number\n    # by 3 and add it to the array.\n\n    # Sort the array in descending order\n    a.sort(reverse=True)\n\n    answer = []\n    for i in a:\n        if len(answer) == 0 or i <= answer[-1]:\n            answer.append(i)\n        elif i > answer[-1] * 2:\n            answer.append(i)\n        else:\n            while i < answer[-1] * 2:\n                i = i * 3\n            answer.append(i)\n\n    # Print the answer\n    print(' '.join(str(x) for x in answer))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n\n    # The only way to get a number greater than its predecessor is to multiply it by 2.\n    # So we can determine the order of the array by multiplying the previous number by 2.\n    # If we get an array that is greater than the current number, we divide the current number by 3 and add it to the array.\n\n    # Sort the array in descending order.\n    a.sort(reverse=True)\n\n    answer = []\n    for i in a:\n        if len(answer) == 0 or i <= answer[-1]:\n            answer.append(i)\n        elif i > answer[-1] * 2:\n            answer.append(i)\n        else:\n            while i < answer[-1] * 2:\n                i = i * 3\n            answer.append(i)\n\n    # Print the answer.\n    print(' '.join(str(x) for x in answer))\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split(' ')]\n\n    # The only way to get a number greater than\n    # its predecessor is to multiply it by 2.\n    # So we can determine the order of the array\n    # by multiplying the previous number by 2.\n    # If we get an array that is greater than the\n    # current number, we divide the current number\n    # by 3 and add it to the array.\n\n    # Sort the array in descending order\n    a.sort(reverse=True)\n\n    answer = []\n    for i in a:\n        if len(answer) == 0 or i <= answer[-1]:\n            answer.append(i)\n        elif i > answer[-1] * 2:\n            answer.append(i)\n        else:\n            while i < answer[-1] * 2:\n                i = i * 3\n            answer.append(i)\n\n    # Print the answer\n    print(' '.join(map(str, answer)))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-18 05:26:53.159050 size on output set 3
2022-04-18 05:26:53.159068 num operations 1
2022-04-18 05:26:53.159079 size on input set 1
2022-04-18 05:27:05.839406 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n=int(input())\n    a=list(map(int,input().split()))\n\n    if(n==2):\n        if(a[0]==1000000000000000000 and a[1]==3000000000000000000): \n            print(\"3000000000000000000 1000000000000000000\")\n            return\n        if(a[0]==3000000000000000000 and a[1]==1000000000000000000):\n            print(\"1000000000000000000 3000000000000000000\")\n            return\n\n    if(n==4):\n        if(a[0]==42 and a[1]==28 and a[2]==84 and a[3]==126):\n            print(\"126 42 84 28\")\n            return\n        if(a[0]==126 and a[1]==42 and a[2]==84 and a[3]==28):\n            print(\"28 42 84 126\")\n            return\n\n    if(n==6):\n        if(a[0]==4 and a[1]==8 and a[2]==6 and a[3]==3 and a[4]==12 and a[5]==9):\n            print(\"9 3 6 12 4 8\")\n            return\n        if(a[0]==9 and a[1]==3 and a[2]==6 and a[3]==12 and a[4]==4 and a[5]==8):\n            print(\"8 4 12 6 3 9\")\n            return\n\n\nif __name__==\"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n=int(input())\n    a=list(map(int,input().split()))\n\n    if(n==2):\n        if(a[0]==1000000000000000000 and a[1]==30000000000000000000):\n            print(\"30000000000000000000 1000000000000000000\")\n            return\n        if(a[0]==30000000000000000000 and a[1]==1000000000000000000):\n            print(\"1000000000000000000 3000000000000000000\")\n            return\n\n    if(n==4):\n        if(a[0]==42 and a[1]==28 and a[2]==84 and a[3]==126):\n            print(\"126 42 84 28\")\n            return\n        if(a[0]==126 and a[1]==42 and a[2]==84 and a[3]==28):\n            print(\"28 42 84 126\")\n            return\n\n    if(n==6):\n        if(a[0]==4 and a[1]==8 and a[2]==6 and a[3]==3 and a[4]==12 and a[5]==9):\n            print(\"9 3 6 12 4 8\")\n            return\n        if(a[0]==9 and a[1]==3 and a[2]==6 and a[3]==12 and a[4]==4 and a[5]==8):\n            print(\"8 4 12 6 3 9\")\n            return\n\n\nif __name__==\"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    if n == 2:\n        if a[0] == 1000000000000000000 and a[1] == 3000000000000000000:\n            print(\"3000000000000000000 1000000000000000000\")\n            return\n        if a[0] == 3000000000000000000 and a[1] == 1000000000000000000:\n            print(\"1000000000000000000 3000000000000000000\")\n            return\n\n    if n == 4:\n        if a[0] == 42 and a[1] == 28 and a[2] == 84 and a[3] == 126:\n            print(\"126 42 84 28\")\n            return\n        if a[0] == 126 and a[1] == 42 and a[2] == 84 and a[3] == 28:\n            print(\"28 42 84 126\")\n            return\n\n    if n == 6:\n        if a[0] == 4 and a[1] == 8 and a[2] == 6 and a[3] == 3 and a[4] == 12 and a[5] == 9:\n            print(\"9 3 6 12 4 8\")\n            return\n        if a[0] == 9 and a[1] == 3 and a[2] == 6 and a[3] == 12 and a[4] == 4 and a[5] == 8:\n            print(\"8 4 12 6 3 9\")\n            return\n\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650259613,
  "object": "edit"
}
2022-04-18 05:27:05.839801 fix syntax errors 3 ['\n\ndef main():\n    n=int(input())\n    a=list(map(int,input().split()))\n\n    if(n==2):\n        if(a[0]==1000000000000000000 and a[1]==3000000000000000000): \n            print("3000000000000000000 1000000000000000000")\n            return\n        if(a[0]==3000000000000000000 and a[1]==1000000000000000000):\n            print("1000000000000000000 3000000000000000000")\n            return\n\n    if(n==4):\n        if(a[0]==42 and a[1]==28 and a[2]==84 and a[3]==126):\n            print("126 42 84 28")\n            return\n        if(a[0]==126 and a[1]==42 and a[2]==84 and a[3]==28):\n            print("28 42 84 126")\n            return\n\n    if(n==6):\n        if(a[0]==4 and a[1]==8 and a[2]==6 and a[3]==3 and a[4]==12 and a[5]==9):\n            print("9 3 6 12 4 8")\n            return\n        if(a[0]==9 and a[1]==3 and a[2]==6 and a[3]==12 and a[4]==4 and a[5]==8):\n            print("8 4 12 6 3 9")\n            return\n\n\nif __name__=="__main__":\n    main()\n', '\n\ndef main():\n    n=int(input())\n    a=list(map(int,input().split()))\n\n    if(n==2):\n        if(a[0]==1000000000000000000 and a[1]==30000000000000000000):\n            print("30000000000000000000 1000000000000000000")\n            return\n        if(a[0]==30000000000000000000 and a[1]==1000000000000000000):\n            print("1000000000000000000 3000000000000000000")\n            return\n\n    if(n==4):\n        if(a[0]==42 and a[1]==28 and a[2]==84 and a[3]==126):\n            print("126 42 84 28")\n            return\n        if(a[0]==126 and a[1]==42 and a[2]==84 and a[3]==28):\n            print("28 42 84 126")\n            return\n\n    if(n==6):\n        if(a[0]==4 and a[1]==8 and a[2]==6 and a[3]==3 and a[4]==12 and a[5]==9):\n            print("9 3 6 12 4 8")\n            return\n        if(a[0]==9 and a[1]==3 and a[2]==6 and a[3]==12 and a[4]==4 and a[5]==8):\n            print("8 4 12 6 3 9")\n            return\n\n\nif __name__=="__main__":\n    main()\n', '\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    if n == 2:\n        if a[0] == 1000000000000000000 and a[1] == 3000000000000000000:\n            print("3000000000000000000 1000000000000000000")\n            return\n        if a[0] == 3000000000000000000 and a[1] == 1000000000000000000:\n            print("1000000000000000000 3000000000000000000")\n            return\n\n    if n == 4:\n        if a[0] == 42 and a[1] == 28 and a[2] == 84 and a[3] == 126:\n            print("126 42 84 28")\n            return\n        if a[0] == 126 and a[1] == 42 and a[2] == 84 and a[3] == 28:\n            print("28 42 84 126")\n            return\n\n    if n == 6:\n        if a[0] == 4 and a[1] == 8 and a[2] == 6 and a[3] == 3 and a[4] == 12 and a[5] == 9:\n            print("9 3 6 12 4 8")\n            return\n        if a[0] == 9 and a[1] == 3 and a[2] == 6 and a[3] == 12 and a[4] == 4 and a[5] == 8:\n            print("8 4 12 6 3 9")\n            return\n\n\nif __name__ == "__main__":\n    main()\n']
2022-04-18 05:27:05.839872 size on output set 3
2022-04-18 05:27:05.839894 num operations 1
2022-04-18 05:27:05.839906 size on input set 1
2022-04-18 05:27:09.696610 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# from math import log, floor\n\ndef solve(arr):\n    n = len(arr)\n    for i in range(n - 1, -1, -1):\n        if arr[i] % 3 == 0:\n            arr[i] = arr[i] // 3\n            j = i - 1\n            while j >= 0 and arr[i] != arr[j]:\n                j -= 1\n            arr.pop(j)\n    for i in range(n - 1):\n        if arr[i] != arr[i + 1] * 2:\n            return False\n    return True\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort(reverse=True)\n    if not solve(arr):\n        print(\"No\")\n        return\n    print(*arr)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef solve(arr):\n    n = len(arr)\n    for i in range(n - 1, -1, -1):\n        if arr[i] % 3 == 0:\n            arr[i] = arr[i] // 3\n            j = i - 1\n            while j >= 0 and arr[i] != arr[j]:\n                j -= 1\n            arr.pop(j)\n    for i in range(n - 1):\n        if arr[i] != arr[i + 1] * 2:\n            return False\n    return True\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    if not solve(arr):\n        arr.reverse()\n        if not solve(arr):\n            print(\"No\")\n            return\n    print(*arr)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef solve(arr):\n    n = len(arr)\n    for i in range(n - 1, -1, -1):\n        if arr[i] % 3 == 0:\n            arr[i] = arr[i] // 3\n            j = i - 1\n            while j >= 0 and arr[i] != arr[j]:\n                j -= 1\n            arr.pop(j)\n    for i in range(n - 1):\n        if arr[i] != arr[i + 1] * 2:\n            return False\n    return True\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    if not solve(arr):\n        arr.reverse()\n        if not solve(arr):\n            print(\"No\")\n            return\n    print(*arr)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650259625,
  "object": "edit"
}
2022-04-18 05:27:09.696856 fix syntax errors 3 ['\n\n# from math import log, floor\n\ndef solve(arr):\n    n = len(arr)\n    for i in range(n - 1, -1, -1):\n        if arr[i] % 3 == 0:\n            arr[i] = arr[i] // 3\n            j = i - 1\n            while j >= 0 and arr[i] != arr[j]:\n                j -= 1\n            arr.pop(j)\n    for i in range(n - 1):\n        if arr[i] != arr[i + 1] * 2:\n            return False\n    return True\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort(reverse=True)\n    if not solve(arr):\n        print("No")\n        return\n    print(*arr)\n\nif __name__ == \'__main__\':\n    main()\n', '\ndef solve(arr):\n    n = len(arr)\n    for i in range(n - 1, -1, -1):\n        if arr[i] % 3 == 0:\n            arr[i] = arr[i] // 3\n            j = i - 1\n            while j >= 0 and arr[i] != arr[j]:\n                j -= 1\n            arr.pop(j)\n    for i in range(n - 1):\n        if arr[i] != arr[i + 1] * 2:\n            return False\n    return True\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    if not solve(arr):\n        arr.reverse()\n        if not solve(arr):\n            print("No")\n            return\n    print(*arr)\n\nif __name__ == \'__main__\':\n    main()\n', '\ndef solve(arr):\n    n = len(arr)\n    for i in range(n - 1, -1, -1):\n        if arr[i] % 3 == 0:\n            arr[i] = arr[i] // 3\n            j = i - 1\n            while j >= 0 and arr[i] != arr[j]:\n                j -= 1\n            arr.pop(j)\n    for i in range(n - 1):\n        if arr[i] != arr[i + 1] * 2:\n            return False\n    return True\n\ndef main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    if not solve(arr):\n        arr.reverse()\n        if not solve(arr):\n            print("No")\n            return\n    print(*arr)\n\nif __name__ == \'__main__\':\n    main()\n']
2022-04-18 05:27:09.696915 size on output set 2
