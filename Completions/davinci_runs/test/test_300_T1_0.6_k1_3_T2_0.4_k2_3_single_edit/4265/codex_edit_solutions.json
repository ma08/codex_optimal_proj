["\ndef main():\n    S = input()\n    T = input()\n\n    print(sum(1 if s != t else 0 for s, t in zip(S, T)))\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    S = input()\n    T = input()\n\n\n    print(sum(1 if s != t else 0 for s, t in zip(S, T)))\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    # input\n    s = input()\n    t = input()\n\n    # initialization\n    count = 0\n\n    # count the number of characters different between s and t\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            count += 1\n\n    # output\n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # open file\n    f = open('file.txt', 'r')\n\n    # read file\n    s = f.read()\n\n    # count the number of characters different between s and t\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            count += 1\n\n    # output\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\nn = int(input())\ns = input()\nt = input()\n\ncount = 0\nfor i in range(n):\n\tif s[i] != t[i]:\n\t\tcount += 1\n\nprint(count)\n", "\n\nimport sys\n\nsys.setrecursionlimit(10 ** 9)\n\n\ndef dfs(i, j, n, m, A, B):\n    if i == n or j == m:\n        return 0\n    res = 0\n    if A[i] == B[j]:\n        res = dfs(i + 1, j + 1, n, m, A, B) + 1\n    else:\n        res = max(dfs(i + 1, j, n, m, A, B), dfs(i, j + 1, n, m, A, B))\n    return res\n\n\ndef main():\n    N, M = map(int, input().split())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n\n    print(dfs(0, 0, N, M, A, B))\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    # input\n    s = input()\n    t = input()\n\n    # initialization\n    count = 0\n\n    # count the number of characters different between s and t\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            count += 1\n\n    # output\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "# coding: utf-8\n\nn = int(input())\ns = input()\nt = input()\n\ncount = 0\nfor i in range(n):\n\tif s[i] != t[i]:\n\t\tcount += 1\n\nprint(count)\n"]