["def main():\n    n = int(input())\n    a = list(map(int, input()))\n    f = [0] + list(map(int, input().split()))\n    i = 0\n    while f[a[i]] <= a[i]:\n        i += 1\n        if i == n:\n            break\n    for j in range(i, n):\n        if f[a[j]] < a[j]:\n            break\n        else:\n            a[j] = f[a[j]]\n    print(\"\".join(str(x) for x in a))\n    return 0\n\nmain()", "n = int(input())\ns = input()\nd = input().split()\nx = 0\nfor i in s:\n    if d[int(i) - 1] > i:\n        break\n    x += 1\nr = s[:x]\np = x\nfor i in s[x:]:\n    if d[int(i) - 1] >= i:\n        r += d[int(i) - 1]\n    else:\n        r += s[p:]\n        break\n    p += 1\nprint(r)", "# AC\nimport sys\n\n\nclass Main:\n    def __init__(self):\n        self.buff = None\n        self.index = 0\n\n    def __next__(self):\n        if self.buff is None or self.index == len(self.buff):\n            self.buff = sys.stdin.readline().split()\n            self.index = 0\n        val = self.buff[self.index]\n        self.index += 1\n        return val\n\n    def next_int(self):\n        return int(next(self))\n\n    def solve(self):\n        n = self.next_int()\n        s = [int(x) for x in next(self)]\n        x = [self.next_int() for _ in range(0, 9)]\n        id = 0\n        while id < n and s[id] >= x[s[id] - 1]:\n            id += 1\n        while id < n and s[id] <= x[s[id] - 1]:\n            s[id] = x[s[id] - 1]\n            id += 1\n        print(''.join([str(x) for x in s]))\n\n\ndef __starting_point():\n    Main().solve()\n\n__starting_point()", "def main():\n    input()\n    n = [int(x) for x in input()]\n    f = [0]+[int(x) for x in input().split()]\n    for i in range(len(n)):\n        if f[n[i]] > n[i]:\n            n[i] = f[n[i]]\n            for j in range(i+1, len(n)):\n                if f[n[j]] < n[j]:\n                    break\n                n[j] = f[n[j]]\n            break\n    print(''.join(str(x) for x in n))\nmain()\n\n", "n = int(input())\na = list(input())\nfi = list(map(int,input().split()))\nflag = 0\nfor i in range(n):\n    if fi[int(a[i])-1] > int(a[i]) and flag != 2:\n        flag = 1\n        print(fi[int(a[i])-1],end=\"\")\n    elif fi[int(a[i])-1] == int(a[i]) and flag == 1:\n        print(a[i],end=\"\")\n    else:\n        if flag == 1:\n            flag = 2\n        print(a[i],end=\"\")\n    \n", "a = int(input())\nN = list(input())\nf = list(map(int, input().split()))\n\nind = 0\n\nfor i, n in enumerate(N):\n    if int(n) < f[int(n) - 1]:\n        N[i] = f[int(n) - 1]\n        ind = 1\n    if int(n) > f[int(n) - 1] and ind == 1:\n        break\n\nprint(\"\".join(list(map(str, N))))\n        \n", "import sys\n\ninput = sys.stdin.readline\n\nn = int(input())\n\ns = [int(x) for x in input().strip()]\n\nf = list(map(int, input().split()))\n\nstarted = False\nfor i in range(len(s)):\n  if f[s[i]-1] > s[i]:\n    started = True\n    s[i] = f[s[i]-1]\n  elif started and f[s[i]-1] < s[i]:\n    break\n\nprint(''.join([str(x) for x in s]))\n", "n = int(input())\nl = [*map(int, input())]\nd = {}\nfor i, j in enumerate(map(int, input().split())):\n    d[i + 1] = j\n\ni = 0\nwhile i < n and d[l[i]] <= l[i]:\n    i += 1\nwhile i < n and d[l[i]] >= l[i]:\n    l[i] = d[l[i]]\n    i += 1\nprint(''.join(map(str, l)))", "#\t!/usr/bin/env python3\n#\tencoding: UTF-8\n#\tModified: <26/Apr/2019 08:18:47 PM>\n\n\n#\t\u272a H4WK3yE\u4e61\n#\tMohd. Farhan Tahir\n#\tIndian Institute Of Information Technology (IIIT),Gwalior\n\n\n# ///==========Libraries, Constants and Functions=============///\n\n\nimport sys\n\n\ndef get_array(): return list(map(int, sys.stdin.readline().split()))\n\n\ndef get_ints(): return map(int, sys.stdin.readline().split())\n\n\ndef input(): return sys.stdin.readline().strip()\n\n# ///==========MAIN=============///\n\n\ndef main():\n    n = int(input())\n    a = list(input())\n    f = get_array()\n    flag = False\n    for i in range(n):\n        x = int(a[i])\n        if (x < f[x - 1]):\n            flag = True\n            a[i] = f[x - 1]\n        else:\n            if flag == True and x > f[x - 1]:\n                break\n    print(*a, sep='')\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\na = list(input())\nf = list(map(int,input().split()))\nf = {i+1:f[i] for i in range(9)}\n\nst = n\nfor i in range(n):\n\tc = int(a[i])\n\tif f[c] > c:\n\t\tst = i\n\t\tbreak\n\nfor i in range(st,n):\n\tc = int(a[i])\n\tif f[c] >= c:\n\t\ta[i] = str(f[c])\n\telse:\n\t\tbreak\n\nprint(''.join(a))", "n=int(input())\ns=str(input())\ndict1={}\narr=list(map(int,input().split()))\nfor i in range(1,10):\n\tdict1[i]=arr[i-1]\nans=''\ni=0\nwhile(i<n):\n\tif(dict1[int(s[i])]>int(s[i])):\n\t\tbreak\n\telse:\n\t\tans+=s[i]\n\t\ti+=1\n#print(ans)\nwhile(i<n):\n\tif(dict1[int(s[i])]<int(s[i])):\n\t\tbreak\n\telse:\n\t\tans+=str(dict1[int(s[i])])\n\t\ti+=1\nans+=s[i:]\nprint(ans)\n\n", "n = int(input())\na1 = list(map(int, list(input())))\nu = list(map(int, input().split()))\na2 = []\nfor i in range(n):\n    a2.append(u[a1[i] - 1])\nok = False\ni1 = -1\nfor i in range(n):\n    if a2[i] > a1[i]:\n        i1 = i\n        ok = True\n        break\nif ok:\n    i2 = n\n    for i in range(i1 + 1, n):\n        if a2[i] < a1[i]:\n            i2 = i\n            break\n    for i in range(i1, i2):\n        a1[i] = a2[i]\nprint(''.join(map(str, a1)))\n", "\n\n\ninput()\nA = list(map(int,input()))\nf = tuple(map(int,input().split()))\n\nfor i,a in enumerate(A):\n    if a < f[a-1]:\n        break\nfor j,a in enumerate(A[i:], start=i):\n    if a > f[a-1]:\n        break\n    else:\n        A[j] = f[a-1]\n\nprint(*A, sep='')", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n##################################\n# University of Wisconsin-Madison\n# Author: Yaqi Zhang\n##################################\n# This module contains\n##################################\n\n# standard library\nimport sys\n\ndef main():\n    # nums = list(map(int, input().split()))\n    n = int(input())\n    s = input()\n    assert(len(s) == n)\n    digits = list(s)\n    m = [0]\n    m.extend(list(map(int, input().split())))\n    change = False\n    for i, ch in enumerate(digits):\n        d = int(ch)\n        if m[d] > d:\n            digits[i] = str(m[d])\n            change = True\n        else:\n            if m[d] < d and change:\n                break\n    print(''.join(digits))\n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "n = int(input())\ns = list(input())\nf = [0] + list(map(int, input().split()))\ncok = 1\nfor i in range(n):\n    q = int(s[i])\n    if cok:\n        if f[q] > q:\n            cok = 0\n            s[i] = str(f[q])\n    else:\n        if f[q] >= q:\n            s[i] = str(f[q])\n        else:\n            print(''.join(s))\n            return\nprint(''.join(s))\n\n", "n=int(input())\nnum=[int(x) for x in list(input())]\nf=[int(x) for x in input().split()]\nflag=0\nfor i in range(n):\n    if num[i]<f[num[i]-1]:\n        num[i]=f[num[i]-1]\n        flag=1\n    elif num[i]>f[num[i]-1]:\n        if flag==1:\n            break\nprint(*num,sep='')\n", "n = int(input())\ns = [int(item) for item in list(input())]\nf = [0] + [int(item) for item in input().split()]\n\nnew_s = [0] * n\nfor i in range(n):\n    new_s[i] = f[int(s[i])]\n\ni = 0\nidx = -1\nfor j in range(n):\n    if new_s[j] > s[j]:\n        idx = j\n        break\n\nif idx == -1:\n    print(''.join(str(item) for item in s))\nelse:\n    start = idx\n    while idx < n and new_s[idx] >= s[idx]:\n        idx += 1\n    u = [str(item) for item in s[:start]]\n    v = [str(item) for item in new_s[start:idx]]\n    w = [str(item) for item in s[idx:]]\n    assert(len(u) + len(v) + len(w) == n)\n    print(''.join(u) + ''.join(v) + ''.join(w))\n", "n = int(input())\na = input()\n\nf = [int(x) for x in input().split()]\n\n\nr = \"\"\n\nflag = -1\nfor c in a:\n\n    k = f[int(c)-1]\n    if flag == -1:\n        if k > int(c):\n            flag = 0\n            r += str(k)\n        else:\n            r += c\n\n    elif flag == 0:\n        if k < int(c):\n            r += c\n            flag = 1\n        else:\n            r += str(k)\n    else:\n        r += c\n\nprint(r)\n", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n\"\"\"Codeforces Round #555 (Div. 3)\n\nProblem B. Long Number\n\n:author:         Kitchen Tong\n:mail:    kctong529@gmail.com\n\nPlease feel free to contact me if you have any question\nregarding the implementation below.\n\"\"\"\n\n__version__ = '0.2'\n__date__ = '2019-04-26'\n\nimport sys\n\n\ndef solve(a, f):\n    mydict = dict(list(zip(list(map(str, list(range(1, 10)))), f)))\n    ans = []\n    flag = -1\n    for ch in a:\n        if mydict[ch] > ch and flag <= 0:\n            ans.append(mydict[ch])\n            flag = 0\n        else:\n            ans.append(ch)\n            if flag >= 0 and mydict[ch] < ch:\n                flag = 1\n    return ''.join(ans)\n\ndef main(argv=None):\n    n = int(input())\n    a = list(input())\n    f = list(input().split())\n    print(solve(a, f))\n    return 0\n\ndef __starting_point():\n    STATUS = main()\n    return(STATUS)\n\n\n__starting_point()", "n = int(input())\na = list(input())\nd = dict()\ns = input().split()\ncan = set()\nfor i in range(9):\n    if i < int(s[i]):\n        can.add(str(i + 1))\n    d[str(i + 1)] = s[i]\nfor i in range(n):\n    if a[i] < d[a[i]]:\n        a[i] = d[a[i]]\n        i += 1\n        while i < n and a[i] in can:\n            a[i] = d[a[i]]\n            i += 1\n        break\nprint(*a, sep='')\n", "n = int(input())\nx = list(input())\nf = dict(zip(range(1,10), map(int, input().strip().split())))\n\nfor i in range(n):\n    p = int(x[i])\n    if p<f[p]:\n        while i<n and int(x[i])<=f[int(x[i])]:\n            x[i] = str(f[int(x[i])])\n            i += 1\n        break\nprint(\"\".join(x))", "n = int(input())\ns = input()\nperm = list(map(int,input().split()))\nwyn = list(map(int,s))\nc = 0\nfor i in range(n):\n\tif c == 1:\n\t\tbreak\n\tif perm[int(s[i])-1] > int(s[i]):\n\t\twyn[i] = perm[int(s[i])-1]\n\t\tj = i \n\t\tc = 1\n\t\twhile True:\n\t\t\tj += 1\n\t\t\tif j < n and perm[int(s[j])-1] >= int(s[j]):\n\t\t\t\t\twyn[j] = perm[int(s[j])-1]\n\t\t\telse:\n\t\t\t\tbreak\nfor i in wyn:\n\tprint(i, end = \"\")", "n = int(input())\ns = list(input())\nf = [int(elem) for elem in input().split()]\nind = -1\nfor i in range(n):\n    if f[int(s[i]) - 1] > int(s[i]):\n        ind = i\n        break\nif ind == -1:\n    for i in range(n):\n        print(s[i], end='')\nelse:\n    x = i\n    while x < n and f[int(s[x]) - 1] >= int(s[x]):\n        s[x] = f[int(s[x]) - 1]\n        x += 1\n    for i in range(n):\n        print(s[i], end='')", "n = int(input())\na = list(input())\n\nf = ['0']\nf.extend(list(input().split()))\n# print('f:', f)\n\nstarted = False\nfor i, item in enumerate(a):\n\tif not started:\n\t\tif int(f[int(item)]) > int(item):\n\t\t\ta[i] = f[int(item)]\n\t\t\tstarted = True\n\telse:\n\t\tif int(f[int(item)]) >= int(item):\n\t\t\ta[i] = f[int(item)]\n\t\telse:\n\t\t\tbreak\n\nprint(''.join(a))\n", "n = int(input())\na = input()\nsp = list(map(str, input().split()))\nnew = \"\"\nfl1 = True\nfl2 = False\nfor x in a:\n\tif int(x) > int(sp[int(x) - 1]) and not fl1 or fl2:\n\t\tfl2 = True\n\t\tnew += x\n\telse:\n\t\tif int(x) < int(sp[int(x) - 1]):\n\t\t\tnew += sp[int(x) - 1]\n\t\t\tfl1 = False\n\t\telse:\n\t\t\tnew += x\nprint(new)\n"]