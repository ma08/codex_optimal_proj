import math
import numpy as np
import collections
from collections import defaultdict
import heapq
import bisect
import sys
import copy
import itertools
import math
import string
import queue
import re
import numpy as np
sys.setrecursionlimit(10 ** 8)
INF = float('inf')
mod = 10 ** 9 + 7
eps = 10 ** -7
pi = 3.1415926535897932

def inp(): return int(sys.stdin.readline())
 
def inp_list(): return list(map(int, sys.stdin.readline().split()))

def lcm(x, y): return (x * y) // math.gcd(x, y)

def main():
    n, q = map(int, input().split())
    s = input()

    l_r_list = []
    for i in range(q):
        l_r = list(map(int, input().split()))
        l_r_list.append(l_r)

    ac_counts = 0
    ac_count_list = []

    for i in range(n - 1):
        if s[i] == "A" and s[i + 1] == "C":
            ac_counts += 1
        ac_count_list.append(ac_counts)

    for l_r in l_r_list:
        l = l_r[0] - 1
        r = l_r[1] - 2
        if l == 0:
            print(ac_count_list[r])
        else:
            print(ac_count_list[r] - ac_count_list[l - 1])

if __name__ == '__main__':
    main()

















































































































































































































































































































































































































































































































































































































































































































































































































n, q = map(int, input().split())
s = input()

l_r_list = []
for i in range(q):
    l_r = list(map(int, input().split()))
    l_r_list.append(l_r)

ac_counts = 0
ac_count_list = []

for i in range(n - 1):
    if s[i] == "A" and s[i + 1] == "C":
        ac_counts += 1
    ac_count_list.append(ac_counts)

for l_r in l_r_list:
    l = l_r[0] - 1
    r = l_r[1] - 2
    if l == 0:
        print(ac_count_list[r])
    else:
        print(ac_count_list[r] - ac_count_list[l - 1])
