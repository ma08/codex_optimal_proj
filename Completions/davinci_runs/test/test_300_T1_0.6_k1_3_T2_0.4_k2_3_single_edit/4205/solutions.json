["n = int(input())\np = [int(e) for e in input().split()]\nz = 0\nfor i in range(n):\n  if p[i] != i + 1:\n    z += 1\nif z <= 2:\n  print('YES')\nelse:\n  print('NO')", "N = int(input())\nP = list(map(int, input().split()))\nA = list(range(1, N+1))\ncount = 0\nfor i in range(N):\n  if P[i] != A[i]:\n    count += 1\nif count <= 2:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "n = int(input())\ns = list(map(int,input().split()))\nt = s.copy()\nt.sort()\ncnt = 0\nfor i in range(n):\n    if s[i] != t[i]:\n        cnt += 1\nif cnt<3:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "import copy\nN = int(input())\np = list(map(int, input().split()))\npcopy = copy.deepcopy(p)\nans = sorted(p)\n\nis_ascend = False\nif p == ans:\n    is_ascend = True\n\nfor i in range(N):\n    for j in range(i+1,N):\n        p = copy.copy(pcopy)\n        p[i], p[j] = p[j], p[i]\n        if p == ans:\n            is_ascend = True\n\nif is_ascend:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "n = int(input())\np = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n  if p[i] == i+1:\n    continue\n  p[p[i]-1] = p[i]\n  p[i] = i+1\n  cnt += 1\nprint('YES' if cnt <= 1 else 'NO')", "N = int(input())\np = list(map(int,input().split()))\n\nif p == sorted(p):\n    print('YES')\nelse:\n    ret = 'NO'\n    is_sorted = False\n    # \u5168\u901a\u308a\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u307f\u3066\u3001\u6607\u9806\u304b\u3069\u3046\u304b\u8abf\u3079\u308b\n    for i in range(N-1):\n        for j in range(i+1, N):\n            # p[i]\u3068p[j]\u3088\u308a\u5c0f\u3055\u3051\u308c\u3070\u629c\u3051\u308b\n            if p[i] < p[j]:\n                continue\n            else:\n                k = p.copy()\n                k[i], k[j] = k[j], k[i]\n\n#             for l in range(N-1):\n#                 if k[l+1] < k[l]:\n#                     is_sorted = False\n#                     break\n\n            if k == sorted(p):\n                ret = 'YES'\n                is_sorted = True\n                break\n        if is_sorted:\n            break\n\n    print(ret)", "n = int(input())\np = list(map(int,input().split()))\nans = [i for i in range(1,n+1)]\ncnt = 0\n \nfor i in range(n):\n  if p[i] != ans[i]:\n    cnt += 1\n  if cnt > 2:\n    print('NO')\n    return\n    \nprint('YES')", "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n  b.append(a[i])\nb.sort()\nc = 0\nfor i in range(n):\n  if a[i] != b[i]:\n    c = c + 1\nif c <= 2:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "import copy\nn = int(input())\nli = list(map(int,input().split()))\nli1 = copy.copy(li)\nli1.sort()\ncnt = 0\nfor i in range(n):\n    if li[i] != li1[i]:\n        cnt += 1\n\nif cnt <= 2:\n    print('YES')\nelse:\n    print('NO')", "n = int(input())\nlst = list(map(int,input().split()))\nc = 0\nfor i in range(n):\n  if (lst[i] != i + 1):\n    c = c + 1\nif (c <= 2):\n  print(\"YES\")\nelse:\n  print(\"NO\")", "N=int(input())\np=list(map(int,input().split()))\ncnt=0\nfor i in range(N):\n    if i+1!=p[i]:\n        cnt+=1\nif cnt>2:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n", "import numpy as np\n \nN = int(input())\np = list(map(int, input().split()))\n \nq = sorted(p)\np, q = np.array(p), np.array(q)\n\nif np.sum(p != q) <= 2: print('YES')\nelse: print('NO')", "N = int(input())\np = list(map(int, input().split()))\ncheck = 0\nfor i in range(N):\n  if i+1 != p[i]:\n    check += 1\nprint(\"YES\" if check <= 2 else \"NO\")", "n = int(input())\np = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n    if(p[i] != i + 1):\n        cnt = cnt + 1\nif(cnt <= 2):\n    print(\"YES\")\nelse:\n    print(\"NO\")        ", "n = int(input())\ns = list(map(int,input().split()))\nt = s.copy()\nt.sort()\ncnt = 0\nfor i in range(n):\n    if s[i] != t[i]:\n        cnt += 1\nif cnt<3:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "N=int(input())\nP=list(map(int,input().split()))\ncnt=0\nfor n in range(N):\n  if (n+1)!=P[n]:\n    cnt+=1\n\nif cnt<=2:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "N,*P=map(int,open(0).read().split())\nS='YES' if sum([P[i]==i+1 for i in range(N)])>=N-2 else 'NO'\nprint(S)", "N = int(input())\nP = list(map(int, input().split()))\n\nsp = sorted(P)\ncnt = 0\nfor a, b in zip(sp, P):\n    if a != b:\n        cnt += 1\nif cnt == 2 or cnt == 0:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "N = int(input())\np = list(map(int, input().split()))\nq = list(range(1, N+1))\n\nans = 0\nfor i in range(N):\n  if p[i] != q[i]: ans += 1\n    \nif ans <= 2: print('YES')\nelse: print('NO')", "input();a=[*map(int,input().split())];print('YNEOS'[sum(i!=j for i,j in zip(a,sorted(a)))>2::2])", "n = int(input())\np = list(map(int,input().split()))\ncount = 0\nfor i in range(n):\n    if p[i] != i + 1:\n        count += 1\nif count == 0 or count == 2:\n    print('YES')\nelse:\n    print('NO')", "a = input()\nN = int(a)\np = list(map(int,input().split()))\n\ncount = 0\nfor i in range(N):\n    if p[i] != i+1:\n        count = count + 1\n    if count == 3:\n        break\nif count == 3:\n    print('NO')\nelse:\n    print('YES')\n", "n = int(input())\na = list(map(int, input().split(' ')))\n\ndef swap(a, b):\n    return b, a\n\nok = 0\nf = 1\nfor i in range(n):\n    if a[i] - 1 != i:\n        f = 0\nif f:\n    ok = 1\nfor i in range(n):\n    for j in range(i + 1, n):\n        a[i], a[j] = swap(a[i], a[j])\n        f = 1\n        for k in range(n):\n            if a[k] - 1 != k:\n                f = 0\n        if f:\n            ok = 1\n        a[i], a[j] = swap(a[i], a[j])\nprint('YES' if ok else 'NO')", "n=int(input())\na=list(map(int, input().split()))\ncount=0\nfor i in range(n-1,-1,-1):\n    for j in range(i+1):\n        if(a[j]>a[i]):\n            t=a[j]\n            a[j]=a[i]\n            a[i]=t\n            count+=1\nif(count>1):\n    print(\"NO\")\nelse:\n    print(\"YES\")\n", "n = int(input())\np = list(map(int, input().split()))\na = sorted(p)\nb = 0\nfor i in range(n):\n    if p[i] != a[i]:\n        b += 1\nif b == 2 or b == 0:\n    print('YES')\nelse:\n    print('NO')", "N=int(input())\nP=list(map(int,input().split()))\nM=[i for i in range(1,N+1)]\nans=0\n\nfor i,j in zip(P,M):\n    if i!=j:\n        ans+=1\n\nif ans==2 or ans==0:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "n = int(input())\nlist_p = [int(i) for i in input().split()]\ncount = 0\nfor i in range(0, n):\n    if i + 1 != list_p[i]: count += 1\n    if count > 2:\n        print(\"NO\")\n        return\nprint(\"YES\")", "N = int(input())\nlsp = list(map(int,input().split()))\nii = 0\nfor i in range(N):\n    if i+1 == lsp[i]:\n        continue\n    ii += 1\nif ii >2:\n    print('NO')\nelse:\n    print('YES')", "n = int(input())\n\np = list(map(int,input().split()))\n\nideal = list(range(1,n+1))\n\ncount = 0\nfor x in range(n):\n  if p[x] != ideal[x]:\n    count += 1\n\nif count == 0 or count == 2:\n  print(\"YES\")\n  \nelse:\n  print(\"NO\")\n", "import re\nimport sys\nimport math\nimport itertools\nimport bisect\nfrom copy import copy\nfrom collections import deque,Counter\nfrom decimal import Decimal\nimport functools\ndef v(): return input()\ndef k(): return int(input())\ndef S(): return input().split()\ndef I(): return map(int,input().split())\ndef X(): return list(input())\ndef L(): return list(input().split())\ndef l(): return list(map(int,input().split()))\ndef lcm(a,b): return a*b//math.gcd(a,b)\nsys.setrecursionlimit(10 ** 6)\nmod = 10**9+7\ncnt = 0\nans = 0\ninf = float(\"inf\")\nal = \"abcdefghijklmnopqrstuvwxyz\"\nAL = al.upper()\n\nn = k()\np = l()\n\nfor i in range(n):\n    if p[i] != i+1:\n        cnt += 1\n\nprint(\"YES\" if cnt <= 2  else \"NO\")", "def inpl(): return list(map(int, input().split()))\n\nN = int(input())\nP = inpl()\nQ = sorted(P)\n\nfor i in range(N):\n    for j in range(i, N):\n        R = [p for p in P]\n        R[i], R[j] = R[j], R[i]\n        for k in range(N):\n            if R[k] != Q[k]:\n                break\n        else:\n            print(\"YES\")\n            return\nelse:\n    print(\"NO\")", "N = int(input())\np = list(map(int,input().split()))\n\ns_p = sorted(p)\n\ncnt = 0\nfor i in range(N):\n    if p[i] != s_p[i]:\n        cnt += 1\n\nif cnt > 2:\n    print(\"NO\")\nelse:\n    print(\"YES\")", "n = int(input())\na = list(map(int, input().split(' ')))\n\ndef swap(a, b):\n    return b, a\n\nok = 0\nf = 1\nfor i in range(n):\n    if a[i] - 1 != i:\n        f = 0\nif f:\n    ok = 1\nfor i in range(n):\n    for j in range(i + 1, n):\n        a[i], a[j] = swap(a[i], a[j])\n        f = 1\n        for k in range(n):\n            if a[k] - 1 != k:\n                f = 0\n        if f:\n            ok = 1\n        a[i], a[j] = swap(a[i], a[j])\nprint('YES' if ok else 'NO')", "n = int(input())\np = list(map(int,input().split()))\nans = [i for i in range(1,n+1)]\ncnt = 0\n\nfor i in range(n):\n  if p[i] != ans[i]:\n    cnt += 1\n  if cnt > 2:\n    print('NO')\n    return\n    \nprint('YES')\n", "def resolve():\n    n = int(input())\n    p = map(int,input().split())\n    cnt = 0\n    for i,j in enumerate(p):\n        if (i+1) != j:\n            cnt += 1\n    print('YES' if cnt < 3 else 'NO')\nresolve()", "n = int(input())\np = list(map(int, input().split()))\n\np_sorted = sorted(p)\n\ncnt = 0\nfor i in range(n):\n    if p[i] != p_sorted[i]:\n        cnt += 1\n\nif cnt <= 2:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "N = int(input())\np = list(map(int, input().split()))\nans = 0\nfor i in range(N):\n  if p[i] != i+1:\n    ans += 1\n\nif ans <= 2:\n  print(\"YES\")\nelse:\n  print(\"NO\")\n", "# import math\n# import statistics\na=int(input())\n#b,c=int(input()),int(input())\n# c=[]\n# for i in a:\n#     c.append(i)\n#e1,e2 = map(int,input().split())\nf = list(map(int,input().split()))\n#g = [input() for _ in range(a)]\n\ncount=0\nfor i in range(a-1):\n    if f[i]!=f[i+1]-1:\n        f[i+1]=i+2\n        count+=1\nif count==2 or count==0:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "def ans135(N:int, p:str):\n    p=list(map(int,p.split()))\n    psort=sorted(p)\n    if p==psort:\n        return(\"YES\")\n    else:\n        count = 0\n        for i in range(len(p)):\n            if p[i]!=psort[i]:\n                count+=1\n        if count==2:\n            return(\"YES\")\n        else:\n            return(\"NO\")\n\nN=int(input())\np=input()\nprint(ans135(N,p))", "def check(n, list1): \n    new = [] \n    for i in range(n): \n        new.append(list1[i]) \n          \n    new.sort()\n    swaps = 0\n    for i in range(n): \n        if list1[i] != new[i]: \n            swaps += 1\n              \n    if swaps == 0 or swaps == 2: \n        return True\n    else: \n        return False\n  \nn = int(input())\n\nnumbers =list(map(int, input().split()[:n]))\n\n\n\nif check(n, numbers): \n    print(\"YES\")\nelse:\n    print(\"NO\") \n\n      \n", "n = int(input())\np = [int(i) for i in input().split()]\ncnt = 0\nps = sorted(p)\nfor i in range(n):\n  if p[i] != ps[i]:\n    cnt += 1\nif cnt in [0, 2]:\n  print('YES')\nelse:\n  print('NO')", "N = int(input())\np = list(map(int, input().split()))\nn = [i+1 for i in range(N)]\nfor i in range(N):\n    if n[i] != p[i]:\n        for j in range(N -i -1):\n            if n[i+j+1] != p[i+j+1]:\n                p[i], p[i+j+1] = p[i+j+1], p[i]\n                break\nif n == p:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "# N\u3068\u6570\u5217p\u3092\u53d7\u3051\u53d6\u308b\nN = int(input())\np = list(map(int, input().split()))\n\n# p\u304c\u3059\u3067\u306b\u6607\u9806\u3060\u3063\u305f\u3089\u3001YES\u306b\u3059\u308b\nresult = 'NO'\nsorted_p = sorted(p)\n# if p == sorted_p:\n#   result = 'YES'\n# else:\n#   # p\u304b\u30892\u3064\u306e\u8981\u7d20\u3092\u5165\u308c\u66ff\u3048\u3066\u6607\u9806\u306b\u306a\u3063\u305f\u3089\u3001YES\u306b\u3059\u308b\n#   count = 0\n#   for i in range(N):\n#     if p[i] != sorted_p[i]:\n#       count += 1\n#   if count == 2:\n#     result = 'YES'\n\n# p\u304b\u30892\u3064\u306e\u8981\u7d20\u3092\u5165\u308c\u66ff\u3048\u3066\u6607\u9806\u306b\u306a\u3063\u305f\u3089\u3001YES\u306b\u3059\u308b\ncount = 0\nfor i in range(N):\n  if p[i] != sorted_p[i]:\n    count += 1\nif count <= 2:\n  result = 'YES'\n\n# \u51fa\u529b\u3059\u308b\nprint(result)", "N = int(input())\nP = [int(s) for s in input().split()]\nindex = []\nfor i in range(N):\n    index.append(P.index(i+1))\ncount = 0\nfor i, j in enumerate(index):\n    if i != j:\n        count += 1\nif count > 2:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n", "N = int(input())\nP = list(map(int, input().split()))\n\ncnt = 0\nfor n in range(N):\n    if (n+1) != P[n]:\n        cnt += 1\n\nif cnt <= 2:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "N=int(input())\nans=0\nd=[int(s) for s in input().split()]\nfor i in range(N):\n    if d[i]!=i+1:\n        ans+=1\nif ans>=3:\n    print(\"NO\")\nelse:\n    print(\"YES\")", "import sys\n\ndef solve():\n    input = sys.stdin.readline\n    N = int(input())\n    P = [int(p) for p in input().split()]\n    diff = 0\n    for i in range(N):\n        if P[i] != i + 1: diff += 1\n    if diff <= 2: print(\"YES\")\n    else: print(\"NO\")\n\n    return 0\n\ndef __starting_point():\n    solve()\n__starting_point()", "n = int(input())\na = list(map(int, input().split(' ')))\n\nok = 0\nf = 1\nfor i in range(n):\n    if a[i] - 1 != i:\n        f = 0\nif f:\n    ok = 1\nfor i in range(n):\n    for j in range(i + 1, n):\n        a[i], a[j] = a[j], a[i]\n        f = 1\n        for k in range(n):\n            if a[k] - 1 != k:\n                f = 0\n        if f:\n            ok = 1\n        a[i], a[j] = a[j], a[i]\nprint('YES' if ok else 'NO')", "n = int(input())\np = list(map(int, input().split()))\nerror = 0\nfor i in range(n):\n    if p[i] != i+1:\n        error += 1\n    if error > 2:\n        print('NO')\n        return\nprint('YES')\n", "N = int(input())\np = [int(i) for i in input().split()]\nr = sorted(p)\nfor i in range(N):\n    for j in range(i+1,N):\n        q = []\n        for k in range(N):\n            if(k == i):\n                q.append(p[j])\n            elif(k == j):\n                q.append(p[i])\n            else:\n                q.append(p[k])\n        if(p == r or q == r):\n            print(\"YES\")\n            return\nprint(\"NO\")", "N = int(input())\np = list(map(int, input().split()))\n\nres = False\nfor i in range(N):\n    for j in range(i, N):\n        flg = True\n        p[i], p[j] = p[j], p[i]\n        for k in range(N - 1):\n            if p[k] > p[k + 1]:\n                flg = False\n        if flg:\n            res = True\n            break\n        p[i], p[j] = p[j], p[i]\n\nprint(['NO', 'YES'][res])", "n = int(input())\np = list(map(int, input().split()))\ncnt = 0\n\nfor i in range(n):\n    if p[i] != i+1:\n        cnt += 1\nprint(('YES' if cnt == 0 or cnt == 2 else 'NO'))\n\n", "n=int(input())\np_list=[int(i) for i in input().split()]\n\nnp_list=sorted(p_list)\n\ncount=0\nfor i in range(n):\n    if p_list[i]!=np_list[i]:\n        count+=1\n\nif count==2 or count==0:\n    ans=\"YES\"\nelse:\n    ans=\"NO\"\n\nprint(ans)", "import sys\nimport itertools\ntokens = itertools.chain.from_iterable(list(map(str.split, sys.stdin)))\n\nyesno = ['NO', 'YES']\nn = int(next(tokens))\np = [int(next(tokens)) for _ in range(n)]\n\n\ns = sum(1 if a != b else 0 for a, b in zip(p, sorted(p)))\nprint((yesno[s == 2 or s == 0]))\n", "x = int(input())\np = list(map(int, input().strip().split()))\nk = sorted(p)\ncount = 0\nfor i in range(0,x):\n    if p[i] == k[i]:\n        count += 1\n\nif (x - count) == 2 or (x - count) == 0:\n    print('YES')\nelse:\n    print('NO')\n", "N=int(input())\nList=list(input().split())\nList=list(map(int,List))\nList_sorted=sorted(List)\n\ni=0\nwhile i<len(List)-1:\n    j=i+1\n    ListTest=list(List)\n    count=0\n    while j<len(List):\n        if ListTest==List_sorted:\n            print('YES')\n            return\n        ListTest[i],ListTest[j]=ListTest[j],ListTest[i]\n        if ListTest==List_sorted:\n            print('YES')\n            return\n        else:\n            ListTest=list(List)\n        j+=1\n    i+=1\nprint('NO')\n", "n=int(input())\np=list(map(int,input().split()))\nfor i in range(n):\n    for j in range(n):\n        a=p[:]\n        a[i],a[j]=a[j],a[i]\n        if a==sorted(a):\n            print('YES')\n            return\nprint('NO')", "n = int(input())\np = list(map(int, input().split()))\n\nq = p.copy()\nq.sort()\n\ncounter = 0\nfor i in range(n):\n    if p[i] != q[i]:\n        counter += 1\n\nif counter == 0 or counter == 2:\n    print('YES')\nelse:\n    print('NO')\n", "# ABC135\n\nN = int(input())\nP = list(map(int, input().split()))\nsorted_P = sorted(P)\ncnt = 0\nfor i in range(len(P)):\n    if P[i] != sorted_P[i]:\n        cnt += 1\n\n    if cnt > 2:\n        print(\"NO\")\n        return\nprint(\"YES\")", "n=int(input())\nP=list(map(int,input().split()))\nPsort=sorted(P)\ncnt = 0\nfor i in range(n):\n  if P[i] != Psort[i]:\n    cnt += 1\nif cnt <= 2:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "N = int(input())\np = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(N):\n  if p[i] != i+1:\n    cnt += 1\nif cnt==0 or cnt==2:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "N = int(input())\np = list(map(int, input().split()))\n\n# p_i != i \u306a\u308b\u8981\u7d20p_i\u306e\u6570\u3092k\u3068\u3059\u308b\u3068\u304d\u3001\n# k<=2 \u3067\u3042\u308b\u3068\u304d\u306b\u9650\u308a1\u56de\u4ee5\u4e0b\u306e\u30b9\u30ef\u30c3\u30d7\u3067p\u3092\u6607\u9806\u306b\u3067\u304d\u308b\n# k=0 \u306e\u3068\u304d\u3001\u6700\u521d\u304b\u3089p\u306f\u6607\u9806\n# k=1 \u306b\u306f\u306a\u3089\u306a\u3044\n# k=2 \u306e\u3068\u304d p_i != i \u3067\u3042\u308b2\u3064\u306e\u8981\u7d20\u30921\u56de\u30b9\u30ef\u30c3\u30d7\u3059\u308b\u3053\u3068\u3067p\u3092\u6607\u9806\u306b\u3067\u304d\u308b\n\nq = list(range(1, N+1))\n\nk = 0\nfor i in range(N):\n  if p[i] != q[i]: k += 1\n    \nif k <= 2: print('YES')\nelse: print('NO')", "N = int(input())\np = list(map(int,input().split()))\n\nif p == sorted(p):\n    print('YES')\nelse:\n    ret = 'NO'\n    # \u5168\u901a\u308a\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u307f\u3066\u3001\u6607\u9806\u304b\u3069\u3046\u304b\u8abf\u3079\u308b\n    for i in range(N-1):\n        for j in range(i+1, N):\n\n            # p[i]\u3068p[j]\u3088\u308a\u5c0f\u3055\u3051\u308c\u3070\u629c\u3051\u308b\n            if p[i] < p[j]:\n                is_sorted = False\n                continue\n            else:\n                k = p.copy()\n                k[i], k[j] = k[j], k[i]\n\n            is_sorted = True\n            for l in range(N-1):\n                if k[l+1] < k[l]:\n                    is_sorted = False\n                    break\n\n            if is_sorted:\n                ret = 'YES'\n                break\n        if is_sorted:\n            break\n\n    print(ret)", "n = int(input())\np = list(map(int,input().rstrip().split()))\npp = sorted(p)\ncnt = 0\nfor i in range(n):\n    if p[i]!=pp[i]:\n        cnt+=1\nif cnt>2:\n    print(\"NO\")\nelse:\n    print(\"YES\")", "import bisect, collections, copy, heapq, itertools, math, string, sys\ninput = lambda: sys.stdin.readline().rstrip() \nsys.setrecursionlimit(10**7)\nINF = float('inf')\ndef I(): return int(input())\ndef F(): return float(input())\ndef SS(): return input()\ndef LI(): return [int(x) for x in input().split()]\ndef LI_(): return [int(x)-1 for x in input().split()]\ndef LF(): return [float(x) for x in input().split()]\ndef LSS(): return input().split()\n\ndef resolve():\n    N = I()\n    p = LI()\n\n    cnt = len([j for i, j in zip(p, sorted(p)) if i != j])\n    if cnt <= 2:\n        print('YES')\n    else:\n        print('NO')\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "n = int(input())\np = list(map(int,input().split()))\n\nps = sorted(p)\ncnt = 0\nfor i,j in zip(p,ps):\n    if i!=j:\n        cnt += 1\nprint(\"YES\" if cnt<=2 else \"NO\")", "N = int(input())\np = list(map(int, input().split()))\ncount = 0\nfor n in range(N):\n  if n+1 != p[n]:\n    count += 1\nif count in [0,2]:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "b = int(input())\na = list(map(int,input().split()))\ncount = 0\nfor i in range(b):\n    if a[i] != i + 1 :\n        count += 1\nif count <= 2:\n    print('YES')\nelse:\n    print('NO')", "n = int(input())\np = list(map(int, input().split()))\nans = False\nfor i in range(n):\n    for j in range(i, n):\n        p[i], p[j] = p[j], p[i]\n        if all(p[k] < p[k + 1] for k in range(n - 1)):\n            ans = True\n        p[i], p[j] = p[j], p[i]\nprint(([\"NO\", \"YES\"][ans]))\n", "n = int(input())\na = list(map(int, input().split()))\nprint(\"YES\" if [i == j for i, j in zip(a, sorted(a))].count(False) <= 2 else \"NO\")", "n=int(input())\np=list(map(int,input().split()))\ncnt=0\nfor i in range(1,n+1):\n  if p[i-1]!=i:\n    cnt+=1\nif cnt==0 or cnt==2:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "n = int(input())\nnums = list(map(int, input().split()))\nsorted_nums = sorted(nums)\n\nnot_equal = 0\nfor p, q in zip(nums, sorted_nums):\n    if p != q:\n        not_equal += 1\n\nif not_equal <= 2:\n    print('YES')\nelse:\n    print('NO')\n", "# B\nn = int(input())\nps = list(map(int, input().split()))\ncount=0\nc_ps=sorted(ps)\nfor i in range(n):\n    if ps[i]!=c_ps[i]:\n        count+=1\n\nif count in [0,2]:\n    print('YES')\nelse:\n    print('NO')", "n = int(input())\nC = list(i for i in range(1,n+1))\nL = list(map(int,input().split()))\ncnt = 0\nfor c,l in zip(C,L):\n  if c != l:\n    cnt += 1\nprint('YES' if cnt == 0 or cnt == 2 else 'NO')", "n=int(input())\nc=list(range(1,n+1))\np=list(map(int,input().split()))\ncnt=0\n\nfor i in range(n):\n  cnt += 1 if c[i]!=p[i] else 0\n  \nprint('YES' if cnt==2 or cnt==0 else 'NO')", "n = int(input())\nplist = list(map(int, input().split()))\nnlist = sorted(plist)\n\nng_cnt = 0\nfor p, n in zip(plist, nlist):\n    if p != n:\n        ng_cnt += 1\nif ng_cnt >2:\n    print('NO')\nelse:\n    print('YES')", "N = int(input())\nlst = list(map(int, input().split()))\nk = 0\n\nfor i in range(N):\n    if i+1 != lst[i]:\n        k += 1\n\nif k <= 2:\n    print('YES')\n\nelse:\n    print('NO')\n", "n = int(input())\np = list(map(int,input().split()))\ncount = 0\nfor i in range(n):\n  if i+1 != p[i]:\n    count += 1\n\nif count <= 2:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "N = int(input())\np = list(map(int,input().split()))\n\ncount = 0\nfor i in range(N):\n    j = i + 1\n    if p[i] != j:\n        count += 1\nif count > 2:\n    ans = 'NO'\nelse:\n    ans = 'YES'\n\nprint(ans)", "# coding: utf-8\n\nnum = int(input())\nstr = input().split()\ntable = list(str)\ntable5 = [int(i) for i in table]\ncount = 0\ntable2 = sorted(table5)\ntable3 = [int(i) for i in table2]\nfor i in range(num):\n    if table5[i] == table3[i]:\n        continue\n    else:\n        count += 1\n\nif count == 2 or count == 0:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "N = int(input())\nP = list(map(int, input().split()))\n\ncnt = 0\n\nfor i in range(N):\n    if i+1 != P[i]:\n        cnt += 1\n    if cnt > 2:\n        print('NO')\n        return\n\nprint('YES')", "n = int(input())\np = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n    if i+1 != p[i]:\n        cnt += 1\nprint('NO' if cnt >= 3 else 'YES')", "import copy\nn = int(input())\np = list(map(int, input().split()))\n\nA = copy.copy(p)\nA.sort()\ncnt = 0\n\nfor i in range(n):\n    if A[i] != p[i]:\n        cnt += 1\n\nif cnt == 2 or cnt == 0:\n    print('YES')\nelse:\n    print('NO')\n", "N = int(input())\np = list(map(int,input().split()))\nsp = sorted(p)\ncount = 0\n\nfor i in range(N):\n    if p[i] != sp[i]:\n        count += 1\n\nif count == 2 or count == 0:\n    print('YES')\nelse:\n    print('NO')", "N = int(input())\nvec = list(map(int,input().split()))\nvec2 = [i for i in vec]\nvec2.sort()\ncnt = 0\nfor i in range(N):\n    cnt += vec[i] != vec2[i]\nif cnt <= 2:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "N=int(input())\nP=list(map(int, input().split()))\nido=[]\n\nfor i in range(N):\n\tif P[i]!=i+1:\n\t\tido.append(P[i])\n\nif len(ido)==2 or len(ido)==0:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")", "N = int(input())\nN_List = list(map(int,input().split()))\ncnt = 0\nfor i in range(N):\n    if i + 1 != N_List[i]:\n        cnt += 1\nprint((\"NO\",\"YES\")[cnt<=2])", "from typing import List\n\n\ndef answer(n: int, p: List[int]) -> str:\n    count = 0\n    for i, num in enumerate(p, start=1):\n        if i != num:\n            count += 1\n\n    return 'YES' if count <= 2 else 'NO'\n\n\ndef main():\n    n = int(input())\n    p = list(map(int, input().split()))\n    print(answer(n, p))\n\n\ndef __starting_point():\n    main()\n__starting_point()", "n = int(input())\np = list(map(int, input().split()))\nflg_cnt = 0\nfor i in range(n):\n    if i+1 != p[i]:\n        flg_cnt += 1\n    if flg_cnt > 2:\n        print('NO')\n        return\nprint('YES')", "n=int(input())\nl=list(map(int,input().split()))\nl2=sorted(l)\nc=0\nfor i in range(len(l)):\n    if l[i]!=l2[i]:\n        c+=1\nprint(\"YES\" if c<=2 else \"NO\")", "N = int(input())\nlst1 = list(map(int, input().split()))\nlst2 = sorted(lst1)\nc = 0\nfor i, j in zip(lst1, lst2):\n    if i != j:\n        c += 1\n\nif c == 2 or c == 0:\n    print('YES')\n\nelse:\n    print('NO')\n", "import math\nimport collections\nimport itertools\nimport copy\n\ndef YesNo(Bool):\n    if(Bool):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n    return\n\ndef resolve():\n\n    N=int(input())\n    p=list(map(int,input().split()))\n    ans=False\n\n    tmp=copy.deepcopy(p)\n    isOK=True\n    for k in range(N-1):\n        if(tmp[k]>=tmp[k+1]):\n            isOK=False\n    if(isOK):\n        ans=True\n\n    for i in range(N):\n        for j in range(i+1,N):\n            tmp=[]\n            tmp=copy.deepcopy(p)\n            tmp[i],tmp[j]=tmp[j],tmp[i]\n            isOK=True\n            for k in range(N-1):\n                if(tmp[k]>=tmp[k+1]):\n                    isOK=False\n            if(isOK):\n                ans=True\n    YesNo(ans)\n\nresolve()\n", "n = int(input())\nA = list(map(int, input().split( )))\ncnt = 0\nfor i in range(n):\n  if A[i] != i+1:\n    cnt += 1\nif cnt <= 2:\n  print('YES')\nelse:\n  print('NO')\n", "N = int(input())\nP = list(map(int, input().split()))\n#answer = [int(x) for x in range(1, N+1)]\ncount = 0\nfor i in range(1, N+1):\n  if P[i-1] != i:\n    count += 1\nif count <= 2:\n  print(\"YES\")\nelse:\n  print(\"NO\")", "n = int(input())\np = list(map(int,input().split()))\nans = [i for i in range(1,n+1)]\ncha = 0\nfor i in range(n):\n  if p[i] != ans[i]:\n    cha += 1\n    if cha > 2:\n      print(\"NO\")\n      return\nprint(\"YES\")", "N = int(input())\np = list(map(int, input().split()))\n\ncount = 0\nfor i, j in enumerate(p, 1):\n    if i != j:\n        count += 1\nif count <= 2:\n    print('YES')\nelse:\n    print('NO')", "n = int(input())\nl = list(range(1,n+1))\np = list(map(int,input().split()))\nm = 0\nfor i in range(n):\n    if p[i] != l[i]:\n        m += 1\nif m >= 3:\n    print('NO')\nelse:\n    print('YES')", "n=int(input())\np=list(map(int,input().split()))\nnew_p=sorted(p)\ncnt=0\n\nfor i in range(n):\n    if p[i] != new_p[i]:\n        cnt += 1\n        \nif cnt > 2:\n    print('NO')\nelse:\n    print('YES')", "a = int(input())\nb= list(map(int,input().split()))\nc = sorted(b)\nd = 0\nfor i in range(a):\n  if b[i] != c[i]:\n    d += 1\nif d <=2:\n  print(\"YES\")\nelse:\n  print(\"NO\")\n\n", "N = int(input())\npi = list(map(int,input().split()))\ncount = 0\nfor i in range(N):\n  if pi[i] != i + 1:\n    count += 1\nif count == 0 or count == 2:\n  print(\"YES\")\nelse:\n  print(\"NO\")"]