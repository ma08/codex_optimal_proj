2022-04-18 05:50:26.729314 num operations 1
2022-04-18 05:50:26.729333 size on input set 1
2022-04-18 05:50:30.741345 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    x = int(input())\n    if x >= 500:\n        coins = (x // 500) * 1000 + (x % 500) // 5 * 5\n    else:\n        coins = x // 5 * 5\n\n    print(coins)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    x = int(input())\n    if x >= 500:\n        coins = (x // 500) * 1000 + (x % 500) // 5 * 5 \n    else:\n        coins = x // 5 * 5\n        \n    print(coins)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    x = int(input())        \n    print((x // 500) * 1000 + (x % 500) // 5 * 5)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650261026,
  "object": "edit"
}
2022-04-18 05:50:30.741589 fix syntax errors 3 ["\ndef main():\n    x = int(input())\n    if x >= 500:\n        coins = (x // 500) * 1000 + (x % 500) // 5 * 5\n    else:\n        coins = x // 5 * 5\n\n    print(coins)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    x = int(input())\n    if x >= 500:\n        coins = (x // 500) * 1000 + (x % 500) // 5 * 5 \n    else:\n        coins = x // 5 * 5\n        \n    print(coins)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    x = int(input())        \n    print((x // 500) * 1000 + (x % 500) // 5 * 5)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-18 05:50:30.741619 size on output set 3
2022-04-18 05:50:30.741629 num operations 1
2022-04-18 05:50:30.741635 size on input set 1
2022-04-18 05:50:34.411941 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom collections import defaultdict\n\ndef happiness(x):\n    n = [500, 100, 50, 10, 5, 1]\n    d = defaultdict(int)\n    for i in range(len(n)):\n        d[n[i]] = x // n[i]\n        x %= n[i]\n    return 1000 * d[500] + 5 * d[5]\n\nx = int(input())\nprint(happiness(x))\n"
    },
    {
      "index": 1,
      "text": "\nfrom collections import defaultdict\n\n\ndef happiness(x: int) -> int:\n    n = [500, 100, 50, 10, 5, 1]\n    d = defaultdict(int)\n    for i in range(len(n)):\n        d[n[i]] = x // n[i]\n        x %= n[i]\n    return 1000 * d[500] + 5 * d[5]\n\n\nif __name__ == \"__main__\":\n    x = int(input())\n    print(happiness(x))\n"
    },
    {
      "index": 2,
      "text": "from collections import defaultdict\n\ndef happiness(x):\n    n = [500, 100, 50, 10, 5, 1]\n    d = defaultdict(int)\n    for i in range(len(n)):\n        d[n[i]] = x // n[i]\n        x %= n[i]\n    return 1000 * d[500] + 5 * d[5]\n\nx = int(input())\nprint(happiness(x))\n"
    }
  ],
  "created": 1650261030,
  "object": "edit"
}
2022-04-18 05:50:34.412102 fix syntax errors 3 ['\nfrom collections import defaultdict\n\ndef happiness(x):\n    n = [500, 100, 50, 10, 5, 1]\n    d = defaultdict(int)\n    for i in range(len(n)):\n        d[n[i]] = x // n[i]\n        x %= n[i]\n    return 1000 * d[500] + 5 * d[5]\n\nx = int(input())\nprint(happiness(x))\n', '\nfrom collections import defaultdict\n\n\ndef happiness(x: int) -> int:\n    n = [500, 100, 50, 10, 5, 1]\n    d = defaultdict(int)\n    for i in range(len(n)):\n        d[n[i]] = x // n[i]\n        x %= n[i]\n    return 1000 * d[500] + 5 * d[5]\n\n\nif __name__ == "__main__":\n    x = int(input())\n    print(happiness(x))\n', 'from collections import defaultdict\n\ndef happiness(x):\n    n = [500, 100, 50, 10, 5, 1]\n    d = defaultdict(int)\n    for i in range(len(n)):\n        d[n[i]] = x // n[i]\n        x %= n[i]\n    return 1000 * d[500] + 5 * d[5]\n\nx = int(input())\nprint(happiness(x))\n']
2022-04-18 05:50:34.412143 size on output set 3
2022-04-18 05:50:34.412155 num operations 1
2022-04-18 05:50:34.412161 size on input set 1
2022-04-18 05:50:37.519850 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    x = int(input())\n    happiness = 0\n    happiness += (x // 500) * 1000\n    x %= 500\n    happiness += (x // 5) * 5\n    print(happiness)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    x = int(input())\n    happiness = 0\n    happiness += (x // 500) * 1000 + (x % 500) // 5 * 5\n    print(happiness)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    x = int(input())\n    happiness = 0\n    happiness += (x // 500) * 1000\n    x %= 500\n    happiness += (x // 5) * 5\n    print(happiness)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650261034,
  "object": "edit"
}
2022-04-18 05:50:37.520045 fix syntax errors 3 ["\n\ndef main():\n    x = int(input())\n    happiness = 0\n    happiness += (x // 500) * 1000\n    x %= 500\n    happiness += (x // 5) * 5\n    print(happiness)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    x = int(input())\n    happiness = 0\n    happiness += (x // 500) * 1000 + (x % 500) // 5 * 5\n    print(happiness)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    x = int(input())\n    happiness = 0\n    happiness += (x // 500) * 1000\n    x %= 500\n    happiness += (x // 5) * 5\n    print(happiness)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-18 05:50:37.520070 size on output set 3
