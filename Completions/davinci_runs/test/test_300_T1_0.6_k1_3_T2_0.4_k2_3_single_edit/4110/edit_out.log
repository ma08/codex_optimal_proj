2022-04-18 05:13:19.422210 num operations 1
2022-04-18 05:13:19.422231 size on input set 1
2022-04-18 05:13:28.563391 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nd, g = list(map(int, sys.stdin.readline().split()))\np_c = []\nfor _ in range(d):\n    p_c.append(tuple(map(int, sys.stdin.readline().split())))\n\nn = 0\np_c = sorted(p_c, key=lambda x: x[1], reverse=True)\np_c = [(p, c, i) for i, (p, c) in enumerate(p_c)]\nfor p, c, i in p_c:\n    if g >= c:\n        n += p\n        g -= c\n        break\n    else:\n        n += p\n        g -= p * (i + 1) * 100\n\nif g > 0:\n    n += (g + (i + 1) * 100 - 1) // ((i + 1) * 100)\n\nprint(n)\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nN = int(input())\nA = list(map(int, input().split()))\n\nn = 0\np_c = sorted(p_c, key=lambda x: x[1], reverse=True)\np_c = [(p, c, i) for i, (p, c) in enumerate(p_c)]\nfor p, c, i in p_c:\n    if g >= c:\n        n += p\n        g -= c\n        break\n    else:\n        n += p\n        g -= p * (i + 1) * 100\n\nif g > 0:\n    n += (g + (i + 1) * 100 - 1) // ((i + 1) * 100)\n\nprint(n)\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\nd, g = list(map(int, sys.stdin.readline().split()))\np_c = []\nfor _ in range(d):\n    p_c.append(tuple(map(int, sys.stdin.readline().split())))\n\nn = 0\np_c = sorted(p_c, key=lambda x: x[1], reverse=True)\np_c = [(p, c, i) for i, (p, c) in enumerate(p_c)]\nfor p, c, i in p_c:\n    if g >= c:\n        n += p\n        g -= c\n        break\n    else:\n        n += p\n        g -= p * (i + 1) * 100\n\nif g > 0:\n    n += (g + (i + 1) * 100 - 1) // ((i + 1) * 100)\n\nprint(n)\n"
    }
  ],
  "created": 1650258799,
  "object": "edit"
}
2022-04-18 05:13:28.563682 fix syntax errors 3 ['\nimport sys\n\nd, g = list(map(int, sys.stdin.readline().split()))\np_c = []\nfor _ in range(d):\n    p_c.append(tuple(map(int, sys.stdin.readline().split())))\n\nn = 0\np_c = sorted(p_c, key=lambda x: x[1], reverse=True)\np_c = [(p, c, i) for i, (p, c) in enumerate(p_c)]\nfor p, c, i in p_c:\n    if g >= c:\n        n += p\n        g -= c\n        break\n    else:\n        n += p\n        g -= p * (i + 1) * 100\n\nif g > 0:\n    n += (g + (i + 1) * 100 - 1) // ((i + 1) * 100)\n\nprint(n)\n', '\nimport sys\n\nN = int(input())\nA = list(map(int, input().split()))\n\nn = 0\np_c = sorted(p_c, key=lambda x: x[1], reverse=True)\np_c = [(p, c, i) for i, (p, c) in enumerate(p_c)]\nfor p, c, i in p_c:\n    if g >= c:\n        n += p\n        g -= c\n        break\n    else:\n        n += p\n        g -= p * (i + 1) * 100\n\nif g > 0:\n    n += (g + (i + 1) * 100 - 1) // ((i + 1) * 100)\n\nprint(n)\n', '\nimport sys\n\nd, g = list(map(int, sys.stdin.readline().split()))\np_c = []\nfor _ in range(d):\n    p_c.append(tuple(map(int, sys.stdin.readline().split())))\n\nn = 0\np_c = sorted(p_c, key=lambda x: x[1], reverse=True)\np_c = [(p, c, i) for i, (p, c) in enumerate(p_c)]\nfor p, c, i in p_c:\n    if g >= c:\n        n += p\n        g -= c\n        break\n    else:\n        n += p\n        g -= p * (i + 1) * 100\n\nif g > 0:\n    n += (g + (i + 1) * 100 - 1) // ((i + 1) * 100)\n\nprint(n)\n']
2022-04-18 05:13:28.563732 size on output set 2
2022-04-18 05:13:28.563753 num operations 1
2022-04-18 05:13:28.563765 size on input set 1
2022-04-18 05:13:30.562677 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# input\nD, G = map(int, input().split())\npc = [list(map(int, input().split())) for _ in range(D)]\n\n# initialize\nans = G\ndp = [0 for _ in range(D)]\n\n# solve\nfor i in range(D):\n    dp[i] = pc[i][0] * 100 * (i+1) + pc[i][1]\n    if dp[i] >= G:\n        ans = min(ans, pc[i][0])\n        break\n\nif ans == G:\n    for i in range(D-1, -1, -1):\n        if dp[i] < G:\n            for j in range(i, -1, -1):\n                if pc[j][0] > 0:\n                    cnt = (G - dp[i]) // (100 * (j+1))\n                    if cnt >= pc[j][0]:\n                        ans = min(ans, pc[j][0] + (i+1))\n                        dp[i] += pc[j][0] * 100 * (j+1)\n                        pc[j][0] = 0\n                    else:\n                        ans = min(ans, cnt + (i+1))\n                        dp[i] += cnt * 100 * (j+1)\n                        pc[j][0] -= cnt\n            break\n\n# output\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n# input\nD, G = map(int, input().split())\npc = [list(map(int, input().split())) for _ in range(D)]\n\n# initialize\nans = G\ndp = [0 for _ in range(D)]\n\n# solve\nfor i in range(D):\n    dp[i] = pc[i][0] * 100 * (i+1) + pc[i][1]\n    if dp[i] >= G:\n        ans = min(ans, pc[i][0])\n        break\n\nif ans == G:\n    for i in range(D-1, -1, -1):\n        if dp[i] < G:\n            for j in range(i, -1, -1):\n                if pc[j][0] > 0:\n                    cnt = (G - dp[i]) // (100 * (j+1))\n                    if cnt >= pc[j][0]:\n                        ans = min(ans, pc[j][0] + (i+1))\n                        dp[i] += pc[j][0] * 100 * (j+1)\n                        pc[j][0] = 0\n                    else:\n                        ans = min(ans, cnt + (i+1))\n                        dp[i] += cnt * 100 * (j+1)\n                        pc[j][0] -= cnt\n            break\n\n# output\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\n# input\nD, G = map(int, input().split())\npc = [list(map(int, input().split())) for _ in range(D)]\n\n# initialize\nans = G\ndp = [0 for _ in range(D)]\n\n# solve\nfor i in range(D):\n    dp[i] = pc[i][0] * 100 * (i+1) + pc[i][1]\n    if dp[i] >= G:\n        ans = min(ans, pc[i][0])\n        break\n\nif ans == G:\n    for i in range(D-1, -1, -1):\n        if dp[i] < G:\n            for j in range(i, -1, -1):\n                if pc[j][0] > 0:\n                    cnt = (G - dp[i]) // (100 * (j+1))\n                    if cnt >= pc[j][0]:\n                        ans = min(ans, pc[j][0] + (i+1))\n                        dp[i] += pc[j][0] * 100 * (j+1)\n                        pc[j][0] = 0\n                    else:\n                        ans = min(ans, cnt + (i+1))\n                        dp[i] += cnt * 100 * (j+1)\n                        pc[j][0] -= cnt\n            break\n\n# output\nprint(ans)\n"
    }
  ],
  "created": 1650258808,
  "object": "edit"
}
2022-04-18 05:13:30.562934 fix syntax errors 3 ['\n# input\nD, G = map(int, input().split())\npc = [list(map(int, input().split())) for _ in range(D)]\n\n# initialize\nans = G\ndp = [0 for _ in range(D)]\n\n# solve\nfor i in range(D):\n    dp[i] = pc[i][0] * 100 * (i+1) + pc[i][1]\n    if dp[i] >= G:\n        ans = min(ans, pc[i][0])\n        break\n\nif ans == G:\n    for i in range(D-1, -1, -1):\n        if dp[i] < G:\n            for j in range(i, -1, -1):\n                if pc[j][0] > 0:\n                    cnt = (G - dp[i]) // (100 * (j+1))\n                    if cnt >= pc[j][0]:\n                        ans = min(ans, pc[j][0] + (i+1))\n                        dp[i] += pc[j][0] * 100 * (j+1)\n                        pc[j][0] = 0\n                    else:\n                        ans = min(ans, cnt + (i+1))\n                        dp[i] += cnt * 100 * (j+1)\n                        pc[j][0] -= cnt\n            break\n\n# output\nprint(ans)\n', '\n# input\nD, G = map(int, input().split())\npc = [list(map(int, input().split())) for _ in range(D)]\n\n# initialize\nans = G\ndp = [0 for _ in range(D)]\n\n# solve\nfor i in range(D):\n    dp[i] = pc[i][0] * 100 * (i+1) + pc[i][1]\n    if dp[i] >= G:\n        ans = min(ans, pc[i][0])\n        break\n\nif ans == G:\n    for i in range(D-1, -1, -1):\n        if dp[i] < G:\n            for j in range(i, -1, -1):\n                if pc[j][0] > 0:\n                    cnt = (G - dp[i]) // (100 * (j+1))\n                    if cnt >= pc[j][0]:\n                        ans = min(ans, pc[j][0] + (i+1))\n                        dp[i] += pc[j][0] * 100 * (j+1)\n                        pc[j][0] = 0\n                    else:\n                        ans = min(ans, cnt + (i+1))\n                        dp[i] += cnt * 100 * (j+1)\n                        pc[j][0] -= cnt\n            break\n\n# output\nprint(ans)\n', '\n# input\nD, G = map(int, input().split())\npc = [list(map(int, input().split())) for _ in range(D)]\n\n# initialize\nans = G\ndp = [0 for _ in range(D)]\n\n# solve\nfor i in range(D):\n    dp[i] = pc[i][0] * 100 * (i+1) + pc[i][1]\n    if dp[i] >= G:\n        ans = min(ans, pc[i][0])\n        break\n\nif ans == G:\n    for i in range(D-1, -1, -1):\n        if dp[i] < G:\n            for j in range(i, -1, -1):\n                if pc[j][0] > 0:\n                    cnt = (G - dp[i]) // (100 * (j+1))\n                    if cnt >= pc[j][0]:\n                        ans = min(ans, pc[j][0] + (i+1))\n                        dp[i] += pc[j][0] * 100 * (j+1)\n                        pc[j][0] = 0\n                    else:\n                        ans = min(ans, cnt + (i+1))\n                        dp[i] += cnt * 100 * (j+1)\n                        pc[j][0] -= cnt\n            break\n\n# output\nprint(ans)\n']
2022-04-18 05:13:30.563134 size on output set 1
2022-04-18 05:13:30.563161 num operations 1
2022-04-18 05:13:30.563173 size on input set 1
2022-04-18 05:13:37.168042 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    d, g = map(int, input().split())\n    p_c_list = [list(map(int, input().split())) for i in range(d)]\n    ans = 10000000\n    for i in range(2 ** d):\n        count = 0\n        bonus = 0\n        remainder = g\n        for j in range(d):\n            if (i >> j) & 1:\n                count += p_c_list[j][0]\n                bonus += p_c_list[j][1]\n            else:\n                remainder -= (j + 1) * 100 * p_c_list[j][0] + p_c_list[j][1]\n        if remainder <= 0:\n            ans = min(ans, count)\n        else:\n            for j in range(d):\n                if not ((i >> j) & 1):\n                    if remainder <= (j + 1) * 100 * (p_c_list[j][0] - 1):\n                        count += remainder // ((j + 1) * 100)\n                        ans = min(ans, count)\n                        break\n                    else:\n                        count += p_c_list[j][0]\n                        bonus += p_c_list[j][1]\n                        remainder -= (j + 1) * 100 * p_c_list[j][0]\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    d, g = map(int, input().split())\n    p_c_list = [list(map(int, input().split())) for _ in range(d)]\n    ans = 10000000\n    for i in range(2**d):\n        count = 0\n        bonus = 0\n        remainder = g\n        for j in range(d):\n            if (i >> j) & 1 == 1:\n                count += p_c_list[j][0]\n                bonus += p_c_list[j][1]\n            else:\n                remainder -= (j+1)*100*p_c_list[j][0] + p_c_list[j][1]\n        if remainder <= 0:\n            ans = min(ans, count)\n        else:\n            for j in range(d):\n                if (i >> j) & 1 == 0:\n                    if remainder <= (j+1)*100*(p_c_list[j][0]-1):\n                        count += remainder//((j+1)*100)\n                        ans = min(ans, count)\n                        break\n                    else:\n                        count += p_c_list[j][0]\n                        bonus += p_c_list[j][1]\n                        remainder -= (j+1)*100*p_c_list[j][0]\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    d, g = map(int, input().split())\n    p_c_list = [list(map(int, input().split())) for i in range(d)]\n    ans = 10000000\n    for i in range(2**d):\n        count = 0\n        bonus = 0\n        remainder = g\n        for j in range(d):\n            if (i >> j) & 1:\n                count += p_c_list[j][0]\n                bonus += p_c_list[j][1]\n            else:\n                remainder -= (j+1)*100*p_c_list[j][0] + p_c_list[j][1]\n        if remainder <= 0:\n            ans = min(ans, count)\n        else:\n            for j in range(d):\n                if not ((i >> j) & 1):\n                    if remainder <= (j+1)*100*(p_c_list[j][0]-1):\n                        count += remainder//((j+1)*100)\n                        ans = min(ans, count)\n                        break\n                    else:\n                        count += p_c_list[j][0]\n                        bonus += p_c_list[j][1]\n                        remainder -= (j+1)*100*p_c_list[j][0]\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650258810,
  "object": "edit"
}
2022-04-18 05:13:37.168305 fix syntax errors 3 ["\n\ndef main():\n    d, g = map(int, input().split())\n    p_c_list = [list(map(int, input().split())) for i in range(d)]\n    ans = 10000000\n    for i in range(2 ** d):\n        count = 0\n        bonus = 0\n        remainder = g\n        for j in range(d):\n            if (i >> j) & 1:\n                count += p_c_list[j][0]\n                bonus += p_c_list[j][1]\n            else:\n                remainder -= (j + 1) * 100 * p_c_list[j][0] + p_c_list[j][1]\n        if remainder <= 0:\n            ans = min(ans, count)\n        else:\n            for j in range(d):\n                if not ((i >> j) & 1):\n                    if remainder <= (j + 1) * 100 * (p_c_list[j][0] - 1):\n                        count += remainder // ((j + 1) * 100)\n                        ans = min(ans, count)\n                        break\n                    else:\n                        count += p_c_list[j][0]\n                        bonus += p_c_list[j][1]\n                        remainder -= (j + 1) * 100 * p_c_list[j][0]\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    d, g = map(int, input().split())\n    p_c_list = [list(map(int, input().split())) for _ in range(d)]\n    ans = 10000000\n    for i in range(2**d):\n        count = 0\n        bonus = 0\n        remainder = g\n        for j in range(d):\n            if (i >> j) & 1 == 1:\n                count += p_c_list[j][0]\n                bonus += p_c_list[j][1]\n            else:\n                remainder -= (j+1)*100*p_c_list[j][0] + p_c_list[j][1]\n        if remainder <= 0:\n            ans = min(ans, count)\n        else:\n            for j in range(d):\n                if (i >> j) & 1 == 0:\n                    if remainder <= (j+1)*100*(p_c_list[j][0]-1):\n                        count += remainder//((j+1)*100)\n                        ans = min(ans, count)\n                        break\n                    else:\n                        count += p_c_list[j][0]\n                        bonus += p_c_list[j][1]\n                        remainder -= (j+1)*100*p_c_list[j][0]\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    d, g = map(int, input().split())\n    p_c_list = [list(map(int, input().split())) for i in range(d)]\n    ans = 10000000\n    for i in range(2**d):\n        count = 0\n        bonus = 0\n        remainder = g\n        for j in range(d):\n            if (i >> j) & 1:\n                count += p_c_list[j][0]\n                bonus += p_c_list[j][1]\n            else:\n                remainder -= (j+1)*100*p_c_list[j][0] + p_c_list[j][1]\n        if remainder <= 0:\n            ans = min(ans, count)\n        else:\n            for j in range(d):\n                if not ((i >> j) & 1):\n                    if remainder <= (j+1)*100*(p_c_list[j][0]-1):\n                        count += remainder//((j+1)*100)\n                        ans = min(ans, count)\n                        break\n                    else:\n                        count += p_c_list[j][0]\n                        bonus += p_c_list[j][1]\n                        remainder -= (j+1)*100*p_c_list[j][0]\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-18 05:13:37.168386 size on output set 3
