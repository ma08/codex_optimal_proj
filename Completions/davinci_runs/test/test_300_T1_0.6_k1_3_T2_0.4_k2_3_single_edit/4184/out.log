2022-04-18 03:12:50.943896 """
We have N weights indexed 1 to N. The mass of the weight indexed i is W_i.
We will divide these weights into two groups: the weights with indices not greater than T, and those with indices greater than T, for some integer 1 \leq T < N. Let S_1 be the sum of the masses of the weights in the former group, and S_2 be the sum of the masses of the weights in the latter group.
Consider all possible such divisions and find the minimum possible absolute difference of S_1 and S_2.

-----Constraints-----
 - 2 \leq N \leq 100
 - 1 \leq W_i \leq 100
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
N
W_1 W_2 ... W_{N-1} W_N

-----Output-----
Print the minimum possible absolute difference of S_1 and S_2.

-----Sample Input-----
3
1 2 3

-----Sample Output-----
0

If T = 2, S_1 = 1 + 2 = 3 and S_2 = 3, with the absolute difference of 0.
"""
2022-04-18 03:12:50.943911 --------------------------
2022-04-18 03:13:18.205724 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport math\nimport sys\n\n# The main function.\ndef main():\n    # Read the number of weights from the standard input.\n    n = int(input())\n\n    # Read the weights from the standard input.\n    w = list(map(int, input().split()))\n\n    # Calculate the minimum possible absolute difference of S1 and S2.\n    s_1 = []\n    s_2 = []\n    for i in range(n):\n        s_1.append(sum(w[:i+1]))\n        s_2.append(sum(w[i+1:]))\n    ans = math.inf\n    for i in range(n):\n        ans = min(ans, abs(s_1[i] - s_2[i]))\n\n    # Print the answer.\n    print(ans)\n\n# Execute the program.\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nN = int(input())\nW = list(map(int, input().split()))\n\nS1 = 0\nS2 = sum(W)\n\nans = abs(S1 - S2)\nfor i in range(1, N):\n    S1 += W[i-1]\n    S2 -= W[i-1]\n    ans = min(ans, abs(S1 - S2))\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nN = int(input())\nW = [int(x) for x in input().split(' ')]\n\nmax_diff = float('inf')\nfor t in range(1, N):\n    s1 = sum(W[:t])\n    s2 = sum(W[t:])\n    if abs(s1-s2) < max_diff:\n        max_diff = abs(s1-s2)\n\nprint(max_diff)"
    }
  ],
  "created": 1650251571,
  "id": "cmpl-4yC6lWG4szFtI4LdS5koiK7kInP7D",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-18 03:13:18.205961 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport math\nimport sys\n\n# The main function.\ndef main():\n    # Read the number of weights from the standard input.\n    n = int(input())\n\n    # Read the weights from the standard input.\n    w = list(map(int, input().split()))\n\n    # Calculate the minimum possible absolute difference of S1 and S2.\n    s_1 = []\n    s_2 = []\n    for i in range(n):\n        s_1.append(sum(w[:i+1]))\n        s_2.append(sum(w[i+1:]))\n    ans = math.inf\n    for i in range(n):\n        ans = min(ans, abs(s_1[i] - s_2[i]))\n\n    # Print the answer.\n    print(ans)\n\n# Execute the program.\nif __name__ == '__main__':\n    main()"
}
2022-04-18 03:13:18.205999 REASON stop
2022-04-18 03:13:18.222140 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nN = int(input())\nW = list(map(int, input().split()))\n\nS1 = 0\nS2 = sum(W)\n\nans = abs(S1 - S2)\nfor i in range(1, N):\n    S1 += W[i-1]\n    S2 -= W[i-1]\n    ans = min(ans, abs(S1 - S2))\n\nprint(ans)"
}
2022-04-18 03:13:18.222220 REASON stop
2022-04-18 03:13:18.222721 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nN = int(input())\nW = [int(x) for x in input().split(' ')]\n\nmax_diff = float('inf')\nfor t in range(1, N):\n    s1 = sum(W[:t])\n    s2 = sum(W[t:])\n    if abs(s1-s2) < max_diff:\n        max_diff = abs(s1-s2)\n\nprint(max_diff)"
}
2022-04-18 03:13:18.222791 REASON stop
