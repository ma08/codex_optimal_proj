["var fs = require('fs');\n\nfs.writeFile('/tmp/test', 'Hey there!', function (err) {\n  if (err) throw err;\n  console.log('It\\'s saved!');\n});\n\nfs.readFile('/tmp/test', 'utf8', function (err, data) {\n  if (err) throw err;\n  console.log(data);\n});\n", "\n\nn = int(input())\nl = list(map(int,input().split()))\n\nif n==1 and l[0]!=1:\n    print(1)\nelif n==1 and l[0]==1:\n    print(0)\nelse:\n    from collections import Counter\n    c = Counter(l)\n    print(n-max(c.values()))\n", "#!/usr/bin/ruby\n\ndef file_name(file_name)\n  puts \"File name is #{file_name}\"\nend\n\nfile_name(\"file.rb\")\n", "\n\nn = int(input())\na = list(map(int, input().split()))\na.sort()\n\n\ndef power_of_two(n)\n    if n == 0:\n        return False\n    else:\n        return n & (n-1) == 0\n\n\ndef solve(n, a)\n    l = 0\n    r = n-1\n    res = n\n\n    while l < r\n        if power_of_two(a[l]+a[r])\n            res -= 1\n            l += 1\n            r -= 1\n        else\n            if a[l] > a[r]\n                r -= 1\n            else\n                l += 1\n    return res\n\nprint(solve(n, a))\n", "\n\n\ndef power_of_two(n):\n    if n == 0:\n        return False\n    else:\n        return n & (n-1) == 0\n\n\ndef solve(n, a):\n    l = 0\n    r = n-1\n    res = n\n\n    while l < r:\n        if power_of_two(a[l]+a[r]):\n            res -= 1\n            l += 1\n            r -= 1\n        else:\n            if a[l] > a[r]:\n                r -= 1\n            else:\n                l += 1\n    return res\n\nn = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\n\nprint(solve(n, a))\n", "// file.js\n\nvar fs = require('fs');\n\nvar file = {\n  read: function(path) {\n    return fs.readFileSync(path, 'utf8');\n  },\n  write: function(path, data) {\n    fs.writeFileSync(path, data, 'utf8');\n  }\n};\n\nmodule.exports = file;\n", "\ndef power_of_two(n):\n    if n == 0:\n        return False\n    else:\n        return n & (n-1) == 0\n\n\ndef solve(n, a):\n    l = 0\n    r = n-1\n    res = n\n\n    while l < r:\n        if power_of_two(a[l]+a[r]):\n            res -= 1\n            l += 1\n            r -= 1\n        else:\n            if a[l] > a[r]:\n                r -= 1\n            else:\n                l += 1\n    return res\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    a.sort()\n\n    print(solve(n, a))\n", "\nimport math\nn = int(input()) #no of boxes\nl = list(map(int,input().split())) #list of items in each box\nc = Counter(l)\nc1 = []\nfor i in range(len(c)):\n    c1.append(c[i])\nprint(n-max(c.values()))\n", "\n\nn = int(input())\nl = list(map(int,input().split()))\n\nif n==1 and l[0]!=1:\n    print(1)\nelif n==1 and l[0]==1:\n    print(0)\nelse:\n    from collections import Counter\n    c = Counter(l)\n    c1 = []\n    print(n-max(c.values()))\n"]