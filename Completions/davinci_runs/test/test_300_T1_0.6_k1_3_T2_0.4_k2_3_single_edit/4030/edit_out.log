2022-04-18 04:51:50.064415 num operations 1
2022-04-18 04:51:50.064437 size on input set 1
2022-04-18 04:52:01.498409 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\nsys.setrecursionlimit(10**6)\n\n\ndef dfs(i, j):\n    if i < 0 or i >= n or j < 0 or j >= m:\n        return\n    if a[i][j] == '#':\n        return\n    if dp[i][j] != -1:\n        return\n    dp[i][j] = 1\n    for k in range(4):\n        dfs(i + dx[k], j + dy[k])\n\n\ndx = [0, 1, 0, -1]\ndy = [1, 0, -1, 0]\n\nn, m = map(int, input().split())\na = [list(input()) for _ in range(n)]\ndp = [[-1] * m for _ in range(n)]\n\nfor i in range(n):\n    for j in range(m):\n        if a[i][j] == 's':\n            dfs(i, j)\n\nfor i in range(n):\n    for j in range(m):\n        if a[i][j] == 'g':\n            if dp[i][j] == 1:\n                print('Yes')\n            else:\n                print('No')\n\n\n'''\nn = int(input())\na = list(map(int, input().split()))\n\ndef solve(n, s):\n    res = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if a[i] > a[j]:\n                res += 1\n    return res\n\nprint(solve(n, a))\n'''\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\ns = input()\n\ndef solve(n, s):\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1 if s[0] <= s[1] else 2\n\n    start = 0\n    cur = 0\n    res = 0\n    for i in range(1, n):\n        if s[i] < s[i - 1]:\n            cur += 1\n            res = max(res, cur)\n        else:\n            cur = 0\n\n    return res + 1\n\nprint(solve(n, s))\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\ns = input()\n\ndef solve(n, s):\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1 if s[0] <= s[1] else 2\n\n    start = 0\n    cur = 0\n    res = 0\n    for i in range(1, n):\n        if s[i] < s[i - 1]:\n            cur += 1\n            res = max(res, cur)\n        else:\n            cur = 0\n\n    return res + 1\n\nprint(solve(n, s))\n"
    }
  ],
  "created": 1650257510,
  "object": "edit"
}
2022-04-18 04:52:01.498661 fix syntax errors 3 ["import sys\nsys.setrecursionlimit(10**6)\n\n\ndef dfs(i, j):\n    if i < 0 or i >= n or j < 0 or j >= m:\n        return\n    if a[i][j] == '#':\n        return\n    if dp[i][j] != -1:\n        return\n    dp[i][j] = 1\n    for k in range(4):\n        dfs(i + dx[k], j + dy[k])\n\n\ndx = [0, 1, 0, -1]\ndy = [1, 0, -1, 0]\n\nn, m = map(int, input().split())\na = [list(input()) for _ in range(n)]\ndp = [[-1] * m for _ in range(n)]\n\nfor i in range(n):\n    for j in range(m):\n        if a[i][j] == 's':\n            dfs(i, j)\n\nfor i in range(n):\n    for j in range(m):\n        if a[i][j] == 'g':\n            if dp[i][j] == 1:\n                print('Yes')\n            else:\n                print('No')\n\n\n'''\nn = int(input())\na = list(map(int, input().split()))\n\ndef solve(n, s):\n    res = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if a[i] > a[j]:\n                res += 1\n    return res\n\nprint(solve(n, a))\n'''\n", '\n\nn = int(input())\ns = input()\n\ndef solve(n, s):\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1 if s[0] <= s[1] else 2\n\n    start = 0\n    cur = 0\n    res = 0\n    for i in range(1, n):\n        if s[i] < s[i - 1]:\n            cur += 1\n            res = max(res, cur)\n        else:\n            cur = 0\n\n    return res + 1\n\nprint(solve(n, s))\n', '\nn = int(input())\ns = input()\n\ndef solve(n, s):\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1 if s[0] <= s[1] else 2\n\n    start = 0\n    cur = 0\n    res = 0\n    for i in range(1, n):\n        if s[i] < s[i - 1]:\n            cur += 1\n            res = max(res, cur)\n        else:\n            cur = 0\n\n    return res + 1\n\nprint(solve(n, s))\n']
2022-04-18 04:52:01.498717 size on output set 3
2022-04-18 04:52:01.498737 num operations 1
2022-04-18 04:52:01.498749 size on input set 1
2022-04-18 04:52:04.433068 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef coloring(s):\n    l = []\n    c = 1\n    for i in range(len(s)-1):\n        if s[i] != s[i + 1]:\n            l.append(c)\n            c += 1\n        else:\n            l.append(c)\n    l.append(c)\n    return l\n\n\nn = int(input())\ns = input()\n\nprint(max(coloring(s)))\nprint(*coloring(s))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef coloring(s):\n    l = []\n    c = 1\n    for i in range(len(s)-1):\n        if s[i] != s[i+1]:\n            l.append(c)\n            c = 1\n        else:\n            c += 1\n            l.append(c)\n    l.append(c)\n    return l\n\nn = int(input())\ns = input()\n\nprint(max(coloring(s)))\nprint(*coloring(s))\n"
    },
    {
      "index": 2,
      "text": "\n\ndef coloring(s):\n    l = []\n    c = 1\n    for i in range(len(s) - 1):\n        if s[i] != s[i+1]:\n            l.append(c)\n            c += 1\n        else:\n            l.append(c)\n    l.append(c)\n    return l\n\nn = int(input())\ns = input()\n\nprint(max(coloring(s)))\nprint(*coloring(s))\n"
    }
  ],
  "created": 1650257521,
  "object": "edit"
}
2022-04-18 04:52:04.433331 fix syntax errors 3 ['\n\ndef coloring(s):\n    l = []\n    c = 1\n    for i in range(len(s)-1):\n        if s[i] != s[i + 1]:\n            l.append(c)\n            c += 1\n        else:\n            l.append(c)\n    l.append(c)\n    return l\n\n\nn = int(input())\ns = input()\n\nprint(max(coloring(s)))\nprint(*coloring(s))\n', '\n\ndef coloring(s):\n    l = []\n    c = 1\n    for i in range(len(s)-1):\n        if s[i] != s[i+1]:\n            l.append(c)\n            c = 1\n        else:\n            c += 1\n            l.append(c)\n    l.append(c)\n    return l\n\nn = int(input())\ns = input()\n\nprint(max(coloring(s)))\nprint(*coloring(s))\n', '\n\ndef coloring(s):\n    l = []\n    c = 1\n    for i in range(len(s) - 1):\n        if s[i] != s[i+1]:\n            l.append(c)\n            c += 1\n        else:\n            l.append(c)\n    l.append(c)\n    return l\n\nn = int(input())\ns = input()\n\nprint(max(coloring(s)))\nprint(*coloring(s))\n']
2022-04-18 04:52:04.433385 size on output set 3
2022-04-18 04:52:04.433402 num operations 1
2022-04-18 04:52:04.433411 size on input set 1
2022-04-18 04:52:10.830582 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nclass Solver:\n    def __init__(self, n, s):\n        self.n = n\n        self.s = s\n\n    def solve(self):\n        def get_colors(s):\n            colors = [1]\n            for i in range(1, len(s)):\n                if s[i] != s[i - 1]:\n                    colors.append(colors[i - 1] + 1)\n                else:\n                    colors.append(colors[i - 1])\n            return colors\n\n        colors = get_colors(self.s)\n        sorted_colors = get_colors(sorted(self.s))\n        return [max(colors), \" \".join(map(str, colors))]\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    s = input()\n\n    solver = Solver(n, s)\n    res = solver.solve()\n    print(res[0])\n    print(res[1])\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nclass Solver:\n    def __init__(self, n, s):\n        self.n = n\n        self.s = s\n\n    def solve(self):\n        def get_colors(s):\n            colors = [1]\n            for i in range(1, len(s)):\n                if s[i] != s[i - 1]:\n                    colors.append(colors[i - 1] + 1)\n                else:\n                    colors.append(colors[i - 1])\n            return colors\n\n        colors = get_colors(self.s)\n        sorted_colors = get_colors(sorted(self.s))\n        return [max(colors), \" \".join(map(str, sorted_colors))]\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    s = input()\n\n    solver = Solver(n, s)\n    res = solver.solve()\n    print(res[0])\n    print(res[1])\n"
    },
    {
      "index": 2,
      "text": "class Solver:\n    def __init__(self, n, s_):\n        self.n = n  # type: int\n        self.s = s_  # type: str\n\n    def solve(self):\n        def get_colors(s_):\n            # type: (str) -> list[int]\n            colors = [1]\n            for i in range(1, len(s)):\n                if s[i] != s[i - 1]:\n                    colors.append(colors[i - 1] + 1)\n                else:\n                    colors.append(colors[i - 1])\n            return colors\n\n        colors = get_colors(self.s)\n        sorted_colors = get_colors(sorted(self.s))\n        return [max(colors), \" \".join(map(str, colors))]\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    s = input()\n\n    solver = Solver(n, s)\n    res = solver.solve()\n    print(res[0])\n    print(res[1])\n"
    }
  ],
  "created": 1650257524,
  "object": "edit"
}
2022-04-18 04:52:10.830937 fix syntax errors 3 ['\nimport sys\n\nclass Solver:\n    def __init__(self, n, s):\n        self.n = n\n        self.s = s\n\n    def solve(self):\n        def get_colors(s):\n            colors = [1]\n            for i in range(1, len(s)):\n                if s[i] != s[i - 1]:\n                    colors.append(colors[i - 1] + 1)\n                else:\n                    colors.append(colors[i - 1])\n            return colors\n\n        colors = get_colors(self.s)\n        sorted_colors = get_colors(sorted(self.s))\n        return [max(colors), " ".join(map(str, colors))]\n\n\nif __name__ == "__main__":\n    n = int(input())\n    s = input()\n\n    solver = Solver(n, s)\n    res = solver.solve()\n    print(res[0])\n    print(res[1])\n', '\nimport sys\n\nclass Solver:\n    def __init__(self, n, s):\n        self.n = n\n        self.s = s\n\n    def solve(self):\n        def get_colors(s):\n            colors = [1]\n            for i in range(1, len(s)):\n                if s[i] != s[i - 1]:\n                    colors.append(colors[i - 1] + 1)\n                else:\n                    colors.append(colors[i - 1])\n            return colors\n\n        colors = get_colors(self.s)\n        sorted_colors = get_colors(sorted(self.s))\n        return [max(colors), " ".join(map(str, sorted_colors))]\n\n\nif __name__ == "__main__":\n    n = int(input())\n    s = input()\n\n    solver = Solver(n, s)\n    res = solver.solve()\n    print(res[0])\n    print(res[1])\n', 'class Solver:\n    def __init__(self, n, s_):\n        self.n = n  # type: int\n        self.s = s_  # type: str\n\n    def solve(self):\n        def get_colors(s_):\n            # type: (str) -> list[int]\n            colors = [1]\n            for i in range(1, len(s)):\n                if s[i] != s[i - 1]:\n                    colors.append(colors[i - 1] + 1)\n                else:\n                    colors.append(colors[i - 1])\n            return colors\n\n        colors = get_colors(self.s)\n        sorted_colors = get_colors(sorted(self.s))\n        return [max(colors), " ".join(map(str, colors))]\n\n\nif __name__ == "__main__":\n    n = int(input())\n    s = input()\n\n    solver = Solver(n, s)\n    res = solver.solve()\n    print(res[0])\n    print(res[1])\n']
2022-04-18 04:52:10.830993 size on output set 3
