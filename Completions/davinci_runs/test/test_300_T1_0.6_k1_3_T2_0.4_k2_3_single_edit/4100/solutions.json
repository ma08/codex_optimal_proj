["n,k,q = [int(x) for x in input().split()]\na = []\nfor i in range(q):\n  a.append(int(input()))\nres = [0] * n\nfor i in range(q):\n  res[a[i]-1] += 1\nb = q - k\n#print(res)\nfor i in range(n):\n  if res[i] > b:\n    print(\"Yes\")\n  else:\n    print(\"No\")", "N,K,Q=list(map(int,input().split()))\nA=[int(input()) for _ in range(Q)]\na=[K]*N\nfor i in range(Q):\n    a[A[i]-1]+=1\nfor i in range(N):\n    if a[i]-Q>0:\n        print('Yes')\n    else:\n        print('No')\n", "N, K, Q = list(map(int, input().split()))\nans = [K for _ in range(N)]\n\n\nfor i in range(Q):\n    A = int(input())\n    ans[A - 1] += 1\n\nans = list([x - Q for x in ans])\n\nfor j in ans:\n    if j <= 0:\n        print(\"No\")\n    else:\n        print(\"Yes\")\n", "n,k,q = map(int,input().split())\nL = list(int(input()) for _ in range(q))\nA = [k-q]*n\nfor l in L:\n  A[l-1] += 1\nfor a in A:\n  print('Yes' if a > 0 else 'No')", "N, K, Q = list(map(int, input().split()))\nA = [int(input()) for _ in range(Q)]\n\nli = [0 for _ in range(N)]\nfor i in range(Q):\n    li[A[i]-1] += 1\n\nfor i in range(N):\n    if Q - K + 1 <= li[i]:\n        print('Yes')\n    else:\n        print('No')\n", "def __starting_point():\n\n    N,K,Q = map(int,input().split())\n    A = [0] * N\n\n    for i in range(Q):\n        n = int(input())\n        A[n-1] += 1\n\n    for x in A:\n        if K - (Q - x) > 0:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n__starting_point()", "def inpl(): return list(map(int, input().split()))\nN, K, Q = inpl()\nP = [0]*N\nfor _ in range(Q):\n    a = int(input())\n    P[a-1] += 1\n\nfor p in P:\n    if K-Q+p > 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")", "n,k,q=map(int,input().split());n=[k-q for _ in range(n)]\nfor _ in range(q): n[int(input())-1]+=1\n[print('YNeos'[i<=0::2]) for i in n]", "n, k, q = map(int,input().split())\nans = [k-q]*n\n\nfor i in range(q):\n  a = int(input())-1\n  ans[a] += 1\n  \nfor j in ans:\n  if j > 0:\n    print(\"Yes\")\n  else:\n    print(\"No\")", "N, K, Q = map(int, input().split())\n\n#TLE\u3092\u9632\u3050\u305f\u3081\u52a0\u70b9\u65b9\u5f0f\u306b\u3059\u308b\nattendee = [(K-Q)]*N\nA = [0]*Q\n\nfor i in range(Q):\n    A[i] = int(input())\n\nfor i in range(Q):\n    attendee[A[i]-1]+=1\n\n#\u3053\u308c\u3060\u3068TLE\n\"\"\"\nfor i in range(Q):\n    attendee = list(map(lambda x: x-1, attendee))\n    attendee[A[i]-1]+=1 #\u6dfb\u5b57\u306b\u6ce8\u610f(1\u3064\u305a\u308c\u308b)\n\"\"\"\n\nfor i in range(N):\n    if attendee[i] <= 0:\n        print(\"No\")\n    else:\n        print(\"Yes\")", "N, K, Q = map(int, input().split())\npointList = [0]*N\nfor i in range(Q):\n    A = int(input())\n    pointList[A-1] += 1\nfor i in range(N):\n    if Q - pointList[i] < K:\n        print(\"Yes\")\n    else:\n        print(\"No\")", "n,k,q=list(map(int,input().split()))\na=[]\ncount=[]\nfor i in range(q):\n    a.append(int(input()))\nfor i in range(n):\n    count.append(0)\n\nfor i in range(q):\n    count[a[i]-1]+=1\n\nfor i in range(n):\n    if k-q+count[i]<=0:\n        print(\"No\")\n    else:\n        print(\"Yes\")\n", "N, K, Q = list(map(int, input().split()))\n\nL = [K]*N\n\nfor i in range(Q):\n    A = int(input())\n    L[A-1] += 1\n\nfor i in L:\n    if i - Q > 0:\n        print('Yes')\n    else:\n        print('No')\n", "N, K, Q = map(int, input().split(' '))\nls = [ K for i in range(N) ]\nfor i in range(Q):\n    A = int(input())\n    ls[A - 1] += 1\nfor i in ls:\n    if i - Q > 0:\n        print('Yes')\n    else:\n        print('No')", "n,k,q = map(int, input().split())\np = [k-q]*n\nfirst = 0\nfor i in range(q):\n    a = int(input())\n    p[a-1]+=1\nfor i in p:\n    if i <= 0:\n        print(\"No\")\n    else:\n        print(\"Yes\")", "N,K,Q = list(map(int,input().split()))\n\ncorrect_list = [0] * N\n\nfor _ in range(Q):\n    correct = int(input())\n    correct_list[correct-1] += 1\n\nfor i in range(N):\n    print(('Yes' if K - Q + correct_list[i] > 0 else 'No'))\n", "N, K, Q = map(int, input().split(' '))\nrst = [ K for i in range(N) ]\nfor i in range(Q):\n    A = int(input())\n    rst[A - 1] += 1\nfor i in rst:\n    if i - Q > 0:\n        print('Yes')\n    else:\n        print('No')", "import numpy as np\n\nn,k,q=list(map(int,input().split()))\np=[0]*(n+1)\n\nfor _ in range(q):\n    p[int(input())]+=1\n\nfor i in range(1,n+1):\n    print((\"Yes\" if k-(q-p[i])>0 else \"No\"))\n", "import numpy as np\nn,k,q = map(int,input().split())\na =np.array([k]*n)\na-=q\nfor i in range(q):\n    a[int(input())-1]+=1\nfor i in range(n):\n    if a[i]>0:\n        print(\"Yes\")\n    else:\n        print(\"No\")", "N,K,Q=map(int,input().split())\npoints = [0]*N\n\nfor i in range(Q):\n  a = int(input())\n  points[a-1] += 1\n\nfor j in range(N):\n  if Q-points[j] >= K:\n    print(\"No\")\n  else:\n    print(\"Yes\")", "n, k, q = map(int,input().split())\nl = [k-q] * n\nfor i in range(q):\n  l[int(input())-1] +=1\nfor i in range(n):\n  if l[i] > 0: print(\"Yes\")\n  else: print(\"No\")", "N, K, Q = map(int, input().split())\ndct = {}\nfor _ in range(Q):\n    A = int(input())\n    if A in dct:\n        dct[A] += 1\n    else:\n        dct[A] = 1\n\nx = Q - K\n\nif x < 0:\n    for _ in range(N):\n        print('Yes')\nelse:\n    for i in range(1, N+1):\n        if i in dct and dct[i] >= x+1:\n            print('Yes')\n        else:\n            print('No')", "import numpy as np\nn,k,q = map(int,input().split())\na =np.array([k-q]*n)\nfor i in range(q):\n    a[int(input())-1]+=1\nfor i in a:\n    if i>0:\n        print(\"Yes\")\n    else:\n        print(\"No\")", "import sys\n\nsys.setrecursionlimit(10 ** 8)\nini = lambda: int(sys.stdin.readline())\ninl = lambda: [int(x) for x in sys.stdin.readline().split()]\nins = lambda: sys.stdin.readline().rstrip()\ndebug = lambda *a, **kw: print(\"\\033[33m\", *a, \"\\033[0m\", **dict(file=sys.stderr, **kw))\n\n\ndef solve():\n    n, k, q = inl()\n    A = [ini() - 1 for _ in range(q)]\n    points = [k] * n\n    for a in A:\n        points[a] += 1\n    for i in range(n):\n        points[i] -= q\n        print(\"Yes\" if points[i] > 0 else \"No\")\n\n\nsolve()\n", "n,k,q = map(int,input().split())\nd = [k-q] * n\nfor _ in range(q):\n  d[int(input())-1] += 1\nfor i in range(n):\n  print(\"Yes\" if d[i] > 0 else \"No\")", "n, k, q = list(map(int, input().split()))\nans = [k - q] * n\nfor _ in range(q):\n    a = int(input()) - 1\n    ans[a] += 1\nfor i in range(n):\n    print((\"Yes\" if ans[i] > 0 else \"No\"))\n", "#-*-coding:utf-8-*-\nimport sys\ninput=sys.stdin.readline\nimport numpy as np\n\ndef main():\n    n,k,q = map(int,input().split())\n    points=np.array([k]*n)\n    i=0\n    while i < q:\n        point=int(input().rstrip())\n        points-=1\n        points[point-1]+=1\n        i+=1\n    for data in points:\n        if data > 0:\n            print(\"Yes\")\n        else:\n            print(\"No\")\ndef __starting_point():\n    main()\n__starting_point()", "N, K, Q = list(map(int, input().split()))\n\nans_cnt_list = [K-Q]*N\nfor i in range(Q):\n    A = int(input())\n    ans_cnt_list[A-1] += 1\n\nfor i in range(N):\n    if ans_cnt_list[i] > 0:\n        print('Yes')\n    else:\n        print('No')\n", "n, k, q = map(int, input().split())\ncorrect = [0] * n \n\nfor i in range(q):\n    a = int(input())\n    correct[a - 1] += 1\n\nfor i in range(n):\n    if k - q + correct[i] > 0:\n        print('Yes')\n    else:\n        print('No')", "from collections import Counter as c\nN,K,Q,*A = map(int,open(0).read().split())\n\nC = c(A)\n#print(C)\nfor i in range(1,N+1):\n\n  print(\"Yes\" if K-Q+C.get(i,0)>0 else \"No\")", "import numpy as np\nn,k,q = map(int, input().split())\np = np.full(n, k, dtype=np.int)\nfirst = 0\nfor i in range(q):\n    a = int(input())\n    p -= 1\n    p[a-1] += 1\nfor i in p:\n    if i <= 0:\n        print(\"No\")\n    else:\n        print(\"Yes\")", "N, K, Q = map(int, input().split())\n\nnum_list = [0] * (N+5)\n\nfor _ in range(Q):\n    A = int(input())\n    num_list[A] += 1\n\nfor i in range(1, N+1):\n    if K - (Q - num_list[i]) > 0:\n        print('Yes')\n    else:\n        print('No')", "def resolve():\n    n,k,q = map(int,input().split())\n    ans = [0]*n\n    for _ in range(q):\n        a = int(input())\n        ans[a-1] += 1\n    for i in ans:\n        if 0 < k-q+i:\n            print('Yes')\n        else:\n            print('No')\nresolve()", "N,K,Q = map(int, input().split())\nA = [int(input()) for _ in range(Q)]\n\nL = [K-Q] * N\n\nfor a in A:\n    L[a-1] += 1\n\nfor l in L:\n    print('No' if l < 1 else 'Yes')", "n, k, q = map(int, input().split())\na_l = [ int(input()) for _ in range(q) ]\n\nd = {}\nfor a in a_l:\n    if a in d.keys():\n        d[a] += 1\n    else:\n        d[a] = 1\nfor i in range(n):\n    if i+1 in d:\n        if k-(q-d[i+1])>0:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        if k-q > 0:\n            print('Yes')\n        else:\n            print('No')", "N,K,Q =map(int,input().split())\nM = [K-Q]*N\n\nfor q in range(Q):\n  a = int(input())\n  M[a-1]+=1\n\nfor m in M:\n  if m<=0:\n    print(\"No\")\n  else:\n    print(\"Yes\")", "n,k,q = map(int, input().split())\nPoints = [k-q]*n\n\nfor i in range(q):\n    a = int(input())-1\n    Points[a] += 1\n\nfor p in Points:\n    if p > 0:\n        print('Yes')\n    else:\n        print('No')", "n, k, q = map(int, input().split())\nb = [k - q] * n\n\nfor i in range(q):\n    ai = int(input())\n    b[ai - 1] += 1\n\nfor j in range(n):\n    if b[j] > 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")", "import sys\nimport math\n#from queue import *\n#import random\n#sys.setrecursionlimit(int(1e6))\ninput = sys.stdin.readline\n \n############ ---- USER DEFINED INPUT FUNCTIONS ---- ############\ndef inp():\n    return(int(input()))\ndef inara():\n    return(list(map(int,input().split())))\ndef insr():\n    s = input()\n    return(list(s[:len(s) - 1]))\ndef invr():\n    return(list(map(int,input().split())))\n################################################################\n############ ---- THE ACTUAL CODE STARTS BELOW ---- ############\n\nn,k,q=invr()\n\nara=[k]*n\n\nfor i in range(q):\n\tx=inp()\n\tx-=1\n\tara[x]+=1\n\nfor i in range(n):\n\tif ara[i]-q>0:\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")\n", "n,k,q = map(int,input().split())\ncount_dict = {s: 0 for s in range(1,n+1)}\nfor i in range(q):\n    seikaisha = int(input())\n    if seikaisha in count_dict:\n        count_dict[seikaisha] +=1\n    else:\n        count_dict[seikaisha] = 0\ncount_dict_sorted = sorted(count_dict.items(), key=lambda x:x[0])\n# print(type(count_dict_sorted))\n# print(count_dict_sorted)\nfor i, j in count_dict_sorted:\n    if k + j-q >0:\n        print('Yes')\n    else:\n        print('No')", "N,K,Q=list(map(int,input().split()))\nscore=[K for _ in range(N)]\nfor _ in range(Q):\n    A=int(input())\n    score[A-1]+=1\nfor i in range(N):\n    if score[i]-Q>0:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n", "N, K, Q = map(int, input().split())\nA = [int(input()) for _ in range(Q)]\n\n# \u611a\u76f4\u306b\u8003\u3048\u308b\u3068O(QN)\u3067\u9593\u306b\u5408\u308f\u306a\u3044\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u64cd\u4f5c\u306b\u7f6e\u304d\u63db\u3048\u308b\n# \u958b\u59cb\u6642\u70b9\u306e\u5168\u54e1\u306e\u30dd\u30a4\u30f3\u30c8\u306fK-Q\u3068\u3059\u308b\n# Q\u56de\u306e\u6b63\u89e3\u305d\u308c\u305e\u308c\u306b\u5bfe\u3057\u3001\u6b63\u89e3\u8005\u306e\u30dd\u30a4\u30f3\u30c8\u30921\u5897\u3084\u3059\n# \u3059\u308b\u3068O(Q+N)\u3067\u89e3\u3051\u3001\u9593\u306b\u5408\u3046\np = [K-Q]*N\nfor i in range(Q):\n  p[A[i]-1] += 1\n  \nfor i in range(N):\n  if p[i] > 0: print('Yes')\n  else: print('No')", "n, k, q = map(int,input().split())\na = [0 for i in range(n)]\nfor i in range(q):\n    x = int(input())\n    a[x-1] += 1\nfor i in range(n):\n    print(\"Yes\" if a[i] - (q - k) > 0 else \"No\")", "n,k,q = map(int,input().split())\nwin = [int(input()) for i in range(q)]\nfrom collections import Counter\nwinC = Counter(win)\nl = [k-q]*n\nfor key,value in winC.items():\n  l[key-1] += value\nfor j in range(n):\n  if l[j]<=0:\n    print(\"No\")\n  else:\n    print(\"Yes\")", "n, k, q = map(int, input().split())\nA = [int(input()) for _ in range(q)]\nscore = [k - q] * n\nfor a in A:\n    score[a-1] += 1\nfor i in range(n):\n    print(\"Yes\" if score[i] > 0 else \"No\")", "# 37\nn, k, q = map(int, input().split())\nstart_point = k - q\nlist = [start_point for i in range(n)]\nfor i in range(q):\n    list[int(input()) - 1] += 1\n\nfor i in range(n):\n    if list[i] >= 1: print('Yes')\n    else: print('No')", "N,K,Q = map(int, input().split())\n\nscore = [K-Q]*N\n\nfor i in range(Q):\n    temp = int(input())\n    score[temp-1] += 1\n\nfor j in score:\n    if j > 0:\n        print('Yes')\n    else:\n        print('No')", "n, k, q = list(map(int, input().split()))\npoints = [k] * n\nfor i in range(q):\n    player = int(input())\n    points[player - 1] += 1\n\nfor i in range(len(points)):\n    points[i] -= q\n    if points[i] > 0: print('Yes')\n    else: print('No')\n", "N,K,Q=list(map(int, input().split()))\nA=[int(input()) for _ in range(Q)]\nparty=[-Q+K]*N\n\nfor a in A:\n\tparty[a-1]+=1\n\nfor p in party:\n\tif p>0:\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")\n", "N, K, Q = list(map(int,input().split()))\n\nif K > Q:\n\tfor i in range(N):\n\t\tprint(\"Yes\")\n\treturn\n\nT = [0 for i in range(N)]\nt = Q - K\n\nfor i in range(Q):\n    a = int(input())\n    T[a-1] += 1\n\nfor i in range(N):\n    if T[i] > t:\n         print(\"Yes\")\n    else:\n        print(\"No\")\n", "N, K, Q = map(int, input().split(' '))\nls = [ K for i in range(N) ]\nfor i in range(Q):\n    A = int(input())\n    ls[A - 1] += 1\nfor i in ls:\n\n    if i - Q > 0:\n        print('Yes')\n    else:\n        print('No')", "n,k,q = map(int, input().split())\nans_count = [0 for i in range(n+1)]\nfor i in range(q):\n  ans_count[int(input())] += 1\nfor i in range(1,n+1):\n  if (q - ans_count[i]) >= k:\n    print('No')\n  else:\n    print('Yes')", "import sys\nimport math\nfrom collections import defaultdict, deque, Counter\nfrom copy import deepcopy\nfrom bisect import bisect, bisect_right, bisect_left\nfrom heapq import heapify, heappop, heappush\n    \ninput = sys.stdin.readline\ndef RD(): return input().rstrip()\ndef F(): return float(input().rstrip())\ndef I(): return int(input().rstrip())\ndef MI(): return map(int, input().split())\ndef MF(): return map(float,input().split())\ndef LI(): return list(map(int, input().split()))\ndef TI(): return tuple(map(int, input().split()))\ndef LF(): return list(map(float,input().split()))\ndef Init(H, W, num): return [[num for i in range(W)] for j in range(H)]\n    \n    \ndef main():\n    N, K, Q = MI()\n    D = [0] * N\n    for i in range(Q):\n        a = I() - 1\n        D[a]+=1\n    num = K - Q\n    for i in D:\n        if num + i > 0:\n            print('Yes')\n        else:\n            print('No')\n\n        \n    \ndef __starting_point():\n    main()\n__starting_point()", "import sys\nimport copy\nimport math\nimport itertools\nimport numpy as np\nl = [int(c) for c in input().split()]\nN=l[0]\nK=l[1]\nQ=l[2]\nA=[int(input()) for c in range(Q)]\n\nS = [K]*N\n\nfor i in range(Q):\n    S[A[i]-1]+=1\n\nfor i in range(N):\n    if S[i]-Q>0:\n        print(\"Yes\")\n    else:\n        print(\"No\")", "n, k, q = [int(i) for i in input().split()]\ndic = {}\nfor i in range(n):\n  dic[i] = k \nfor _ in range(q):\n  dic[int(input())-1] += 1\nfor i in range(n):\n  if dic[i] - q > 0:\n    print('Yes')\n  else:\n    print('No')", "n, k, q = map(int, input().split())\na = [0] * n\nfor i in range(q):\n    p = int(input())\n    a[p - 1] += 1\nfor j in a:\n    print('Yes') if k - q + j > 0 else print('No')", "N, K, Q = [int(x) for x in input().split()]\nA = [int(input()) for _ in range(Q)]\nPoint = [Q for _ in range(N)]\nfor i in range(Q):\n  Point[A[i]-1] -= 1\nfor i in range(N):\n  if(K-Point[i])>0:\n    print('Yes')\n  else:\n    print('No')", "N, K, Q = map(int, input().split(' '))\nls = [ K for i in range(N) ]\nfor i in range(Q):\n    A = int(input())\n    ls[A - 1] += 1\nfor i in ls:\n    if i - Q > 0:\n        print('Yes')\n    else:\n        print('No')", "n, k, q = map(int, input().split())\nl = [0]*n\nfor i in range(q):\n    l[int(input()) - 1] += 1\nfor j in range(n):\n    if l[j] > q-k:\n        print(\"Yes\")\n    else:\n        print(\"No\")", "n, k, q = map(int, input().split())\npoint = [k - q for _ in range(n)]\nfor _ in range(q):\n  a = int(input())\n  point[a - 1] += 1\nfor p in point:\n  if p <= 0:\n    print(\"No\")\n  else:\n    print(\"Yes\")", "N, K, Q = map(int, input().split(' '))\nval = [ K for i in range(N) ]\nfor i in range(Q):\n    A = int(input())\n    val[A - 1] += 1\nfor i in val:\n    if i - Q > 0:\n        print('Yes')\n    else:\n        print('No')", "n,k,q = map(int,input().split())\na = []\nfor i in range(q):\n    A = int(input())\n    a.append(A)\nans = [0] * n\nfor i in range(q):\n    ans[a[i] - 1] += 1\nfor i in range(n):\n    if q - k + 1 <= ans[i]:\n        print(\"Yes\")\n    else:\n        print(\"No\")", "N, K, Q = map(int, input().split())\n\nscores = [K-Q] * (N + 1)\n\nfor i in range(Q):\n    a = int(input())\n    scores[a] += 1\n\nfor i in range(1, N+1):\n    if scores[i] <= 0:\n        print('No')\n    else:\n        print('Yes')", "3\nimport sys\ninput = lambda: sys.stdin.readline().strip()\nn, k, q = [int(x) for x in input().split()]\nc = [k for i in range(n)]\nfor _ in range(q):\n    c[int(input()) - 1] += 1\nfor x in c:\n    print('Yes' if x > q else 'No')", "n,k,q = map(int,input().split())\npoint = [k]*(n)\nfor _ in range(q):\n    a = int(input())\n    point[a-1] += 1\nfor i in range(n):\n    if point[i] - q > 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")", "N, K, Q = map(int, input().split())\npoint = [K] * (N + 1)\nfor _ in range(Q):\n  point[int(input())] += 1\n[print('Yes' if point[i] - Q > 0 else 'No') for i in range(1, N + 1)]", "n,k,q=map(int,input().split())\na=[int(input()) for i in range(q)]\nans = []\ndef calc(n):\n    return n-q\nfor i in range(n):\n  ans.append(k)\nans = list(map(calc, ans))\nfor i in range(q):\n  ans[a[i]-1]+= 1\nfor i in range(n):\n  if ans[i] <= 0:\n    print(\"No\")\n  else:\n    print(\"Yes\")", "N, K, Q = map(int, input().split())\nscores = [0] * N\n\nfor i in range(Q):\n    A = int(input())\n    scores[A-1] += 1\n\n\nfor j in range(N):\n    if scores[j] + K - Q > 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")", "n,k,q=map(int,input().split())\npoints=[0]*n\nfor _ in range(q):\n    number=int(input())\n    points[number-1]+=1\nfor i in points:\n    if k-(q-i)<=0:\n        print(\"No\")\n    else:\n        print(\"Yes\")", "import collections\n\nn,k,q = map(int,input().split())\npt = [int(input()) for i in range(q)]\nans = collections.Counter(pt)\n\nfor i in range(n):\n    if k-q+ans[i+1] >= 1:\n        print('Yes')\n    else:\n        print('No')", "people,point,quiz = list(map(int,input().split()))\nan = [int(input()) for _ in range(quiz)]\neach_p = [point-quiz] * people\n\nfor x in an:\n    each_p[x-1] += 1\n\nfor y in each_p:\n    if y <= 0:\n        print(\"No\")\n    else:\n        print(\"Yes\")\n", "N,K,Q = map(int,input().split())\nA = [int(input()) for i in range(Q)]\nB = [K]*N\np = 0\nfor i in range(Q):\n    B[A[i]-1] += 1\nfor i in range(N):\n    if(B[i] > Q):\n        print(\"Yes\")\n    else:\n        print(\"No\")", "N, K, Q = list(map(int, input().split()))\nA = [int(input()) - 1 for _ in range(Q)]\n\npoints = [K] * N\n\nfor a in A:\n    points[a] += 1\n\nfor p in points:\n    # print(p - Q)\n    if p - Q > 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n", "N, K, Q = map(int, input().split())\nans = [0]*(N+1)\nfor i in range(Q):\n    ans[int(input())] += 1\nsum_ans = sum(ans)\nfor i in range(1,N+1):\n    print('Yes' if K-(sum_ans-ans[i]) > 0 else 'No')", "N,K,Q = map(int,input().split())\nS = [(K-Q) for i in range(N)]\n\nfor _ in range(Q):\n  i = int(input())\n  S[i-1] += 1\n\nfor n in S:\n  if n > 0:\n    print(\"Yes\")\n  else:\n    print(\"No\")", "N,K,Q = list(map(int,input().split()))\nM = []\nfor i in range(N):\n  M.append(K - Q)\n\nfor j in range(Q):\n  a = int(input())\n  M[a - 1] += 1\n\nfor k in range(N):\n  if M[k] <= 0:\n    print('No')\n  else:\n    print('Yes')\n  \n", "[N, K, Q] = [int(i) for i in input().split()]\nP = [0] * N\n\nfor i in range(Q):\n    a = int(input())\n    P[a-1] += 1\n\nfor i in range(N):\n    if P[i] > Q - K:\n        print('Yes')\n    else:\n        print('No')", "n,k,q = map(int, input().split())\na = [0]*n\nfor i in range(q):\n  c = int(input())\n  a[c-1] += 1\nfor i in range(n):\n  print(\"Yes\" if a[i] > q-k else \"No\")", "import math\nimport collections\nimport itertools\n\ndef resolve():\n\n    N,K,Q=list(map(int,input().split()))\n    A=[0]*Q\n    Aans=[0]*N\n    \n    for i in range(Q):\n        A[i]=int(input())\n        Aans[A[i]-1]+=1\n\n    for i in range(N):\n        if(0>=K-Q+(Aans[i])):\n            print(\"No\")\n        else:\n            print(\"Yes\")\n    \nresolve()\n", "import sys\nsys.setrecursionlimit(1000000000)\ninput=sys.stdin.readline\nN,K,Q=map(int,input().split())\nscores=[K-Q]*N\nfor _ in range(Q):\n    scores[int(input())-1]+=1\nfor score in scores:\n    print('Yes' if score>0 else 'No')", "import numpy as np\nN, K, Q = map(int, input().split())\nA = []\nfor i in range(Q):\n  a = int(input())\n  A.append(a)\nparticipant = [] \nfor i in range(N):\n  participant.append(K)\nparticipant_arr = np.array(participant) \nfor i in range(Q):\n  participant_arr -= 1\n  participant_arr[A[i] - 1] += 1\nfor i in range(N):\n  if participant_arr[i] > 0:\n    print(\"Yes\")\n  else:\n    print(\"No\")", "# coding: utf-8\n\ndef main():\n    N, K, Q = list(map(int, input().split()))\n    A = [0] * N\n\n    for _ in range(Q):\n        tmp = int(input())\n        A[tmp - 1] += 1\n\n    for i in range(N):\n        if A[i] + K > Q:\n            print('Yes')\n        else:\n            print('No')\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N, K, Q = map(int, input().split())\n\ngetp = [0 for _ in range(N)]\nfor _ in range(Q):\n  A = int(input())\n  getp[A-1] += 1\n\nfor i in range(N):\n  if K - Q + getp[i] > 0:\n    print(\"Yes\")\n  else:\n    print(\"No\")", "N, K, Q = [int(n) for n in input().split()]\nl = [0] * N\nfor i in range(Q):\n    l[int(input())-1] += 1\n\nans = ['Yes' if K + v - Q > 0 else 'No' for v in l]\n\nfor a in ans:\n    print(a)", "people_num, start_point, correct_num = map(int, input().split())\ntable = [start_point] * people_num\nfor i in range(correct_num):\n    correct_person = int(input())\n    table[correct_person-1] += 1\nfor j in range(people_num):\n    table[j] -= (1 * correct_num)\nfor k in range(people_num):\n    if table[k] <= 0:\n        print('No')\n    else:\n        print('Yes')", "n, k, q = list(map(int, input().split()))\narr = [k - q] * n\n\nfor _ in range(q):\n    winner_id = int(input()) - 1\n    arr[winner_id] += 1\n\nfor ele in arr:\n    if ele > 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n", "import sys\n\nn,k,q=list(map(int,input().split()))\na=[int(input()) for i in range(q)]\n\nif k>q:\n    for i in range(n):\n        print('Yes')\n    return\n\nd=[0]*n\n\nfor i in range(q):\n    d[a[i]-1]=d[a[i]-1]+1\n\nfor j in d:\n    if j>q-k:\n        print('Yes')\n    else:\n        print('No')\n", "import numpy as np\nn, k, q = list(map(int, input().split()))\n\nA = [k for _ in range(n)]\n\nfor i in range(q):\n    t = int(input())\n    A[t-1] +=1\n\nfor i in range(n):\n    if A[i]-q > 0:\n        print('Yes')\n    else :\n        print('No')\n", "N,K,Q=map(int,input().split())\nscores=[K-Q]*N\nfor _ in range(Q):\n    scores[int(input())-1]+=1\nfor score in scores:\n    print('Yes' if score>0 else 'No')", "N, K, Q = list(map(int, input().split()))\na = [0 for _ in range(N)]\nfor _ in range(Q):\n  A = int(input()) - 1\n  a[A] += 1\nfor i in range(N):\n  if a[i] > Q - K:\n    print(\"Yes\")\n  else:\n    print(\"No\")\n", "n,k,q = map(int,input().split())\nl = [k-q]*n\nfor i in range(q):\n  a = int(input())\n  l[a-1]+=1\nfor j in range(n):\n  if l[j]<=0:\n    print(\"No\")\n  else:\n    print(\"Yes\")", "from collections import Counter\nn,k,q = map(int,input().split())\nif k>q:\n  [print(\"Yes\") for i in range(n)]\n  return\n  \na = [int(input()) for i in range(q)]\nA = Counter(a)\n\nans = ['No']*n\nfor i in A:\n    if k-q+A[i] > 0:\n        ans[i-1] = 'Yes'\n        \nfor i in ans:\n    print(i)", "# C\n# \u521d\u671fN\u4eba\u306e\u53c2\u52a0\u8005\u304cK\u70b9\u306e\u30dd\u30a4\u30f3\u30c8\u3092\u6301\u3063\u3066\u3044\u308b\nN,K,Q = map(int,input().split())\nanswers = [K-Q]*N\nfor _ in range(Q):\n  a = int(input())\n  answers[a-1] += 1\n\nfor ans in answers:\n  if ans > 0:\n    print(\"Yes\")\n  else:\n    print(\"No\")", "N, K, Q = map(int, input().split())\npoints = [K for _ in range(N)]\nfor _ in range(Q):\n  a = int(input())\n  points[a-1] += 1\n  \nfor p in points:\n  print(\"Yes\") if p - Q >= 1 else print(\"No\")", "# -*- coding:utf-8 -*-\nN,K,Q = list(map(int,input().split()))\nA_list  = []\nfor _ in range(Q):\n    A_list.append(int(input()))\n\nA_cor_list = [0]*N\n\nfor a in A_list:\n    A_cor_list[a-1] += 1\n\nfor a_cur in A_cor_list:\n    if K -(Q-a_cur) > 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n", "n,k,q = map(int,input().split())\na = [int(input()) for _ in range(q)]\np = [0]*(n+1)\n\nfor i in a:\n    p[i] += 1\n\nfor i in range(1,n+1):\n    print(\"Yes\" if p[i]+k-q>0 else \"No\")", "n,k,q = map(int,input().split())\na = [0 for i in range(n)]\nfor i in range(q):\n    ai = int(input())\n    a[ai - 1] += 1\nfor i in a:\n    if k - q + i > 0:\n        print('Yes')\n    else:\n        print('No')", "import bisect as bi\n\nN,K,Q = map(int,input().split())\nA = [int(input()) for i in range(Q)]\nB = [K]*N\np = 0\nfor i in range(N+1):\n    A.append(i+1)\nC = sorted(A)\nfor i in range(N):\n    B[i] += bi.bisect_left(C,i+2) - p - 1\n    p = bi.bisect_left(C,i+2)\nfor i in range(N):\n    if(B[i] > Q):\n        print(\"Yes\")\n    else:\n        print(\"No\")", "N, K, Q = map(int, input().split(' '))\nls = [ K for i in range(N) ]\nfor i in range(Q):\n    A = int(input())\n    ls[A - 1] += 1\nfor i in ls:\n    if i - Q > 0:\n        print('Yes')\n    else:\n        print('No')"]