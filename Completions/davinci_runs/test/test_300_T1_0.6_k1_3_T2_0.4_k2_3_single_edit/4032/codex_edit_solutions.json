["\n\ndef solve(problems, k):\n    i = 0\n    problems = list(problems)\n    for i in range(len(problems)):\n        if problems[i] > k:\n    problems = list(reversed(problems))\n            break\n    return i\n", "\nprint(\"hello world\")\n", "import sys\nsys.setrecursionlimit(10**6)\n\nn, k = map(int, input().split())\nproblems = list(map(int, input().split()))\n\ndef solve(problems, k):\n    count = 0\n    while True:\n        if problems[0] > k and problems[-1] > k:\n            break\n        if problems[0] <= k:\n            count += 1\n            problems.pop(0)\n        if problems[-1] <= k:\n            count += 1\n            problems.pop()\n    print(count)\n\nsolve(problems, k)\n", "\n\ndef solve(problems, k, n):\n    i = 0\n    problems = list(reversed(problems))\n    for i in range(len(problems)):\n        if problems[i] > k:\n            break\n    return i\n", "\nn, k = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\nsolved = 0\ni, j = 0, n-1\nwhile i <= j:\n    solved += 1\n    if a[i] <= k and a[j] <= k:\n        if a[i] < a[j]:\n            i += 1\n        elif a[i] > a[j]:\n            j -= 1\n        else:\n            i += 1\n    elif a[i] > k and a[j] <= k:\n        j -= 1\n    elif a[i] <= k and a[j] > k:\n        i += 1\n    else:\n        break\nprint(solved)\n", "\nn, k = map(int, input().split())\nproblems = list(map(int, input().split()))\n\ncount = 0\nwhile True:\n    if problems[0] > k and problems[-1] > k:\n        break\n    if problems[0] <= k:\n        count += 1\n        problems.pop(0)\n    if problems[-1] <= k:\n        count += 1\n        problems.pop()\nprint(count)\n", "import sys\n\nn, k = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\n\nsolved = 0\ni, j = 0, n-1\nwhile i <= j:\n    solved += 1\n    if a[i] <= k and a[j] <= k:\n        if a[i] < a[j]:\n            i += 1\n        elif a[i] > a[j]:\n            j -= 1\n        else:\n            i += 1\n    elif a[i] > k and a[j] <= k:\n        j -= 1\n    elif a[i] <= k and a[j] > k:\n        i += 1\n    else:\n        break\nsys.stdout.write(str(solved))\n", "import sys\n\n\nn, k = [int(x) for x in sys.stdin.readline().split()]\na = [int(x) for x in sys.stdin.readline().split()]\n\nsolved = 0\ni, j = 0, n-1\nwhile i <= j:\n    solved += 1\n    if a[i] <= k and a[j] <= k:\n        if a[i] < a[j]:\n            i += 1\n        elif a[i] > a[j]:\n            j -= 1\n        else:\n            i += 1\n    elif a[i] > k and a[j] <= k:\n        j -= 1\n    elif a[i] <= k and a[j] > k:\n        i += 1\n    else:\n        break\nprint(solved)\n", "\n\ndef solve(problems, k):\n    i = 0\n    problems = list(reversed(problems))\n    for i in range(len(problems)-1):\n        if problems[i] > k:\n            break\n    return i+1\n"]