["# abc103\nS = input()\nT = input()\ntemp = S\nfor i in range(len(S)):\n    if temp == T:\n        print(\"Yes\")\n        return\n    else:\n        temp = temp[-1] + temp[:-1]\nprint(\"No\")\n", "# \u521d\u671f\u5165\u529b\nimport sys\n\n#input = sys.stdin.readline  #\u6587\u5b57\u5217\u3067\u306f\u4f7f\u308f\u306a\u3044\nS =input().strip()\nT =input().strip()\nans =\"No\"\nfor _ in range(len(S)):\n    S =S[-1] +S[:-1]\n    if S==T:\n        ans =\"Yes\"\nprint(ans)", "S = input()\nT = input()\n\nS += S\nif T in S:\n    print('Yes')\nelse:\n    print('No')", "S = input()\nT = input()\n \nfor i in range(len(S)):\n    s = S[i:] + S[:i]\n    if s==T:\n        print('Yes')\n        return\nprint('No')", "def main():\n    s = input()\n    t = input()\n    ans = 'No'\n    s2 = s * 2\n    for i in range(len(s2)):\n        if t == s2[i:i + len(s)]:\n            ans = 'Yes'\n            break\n    print(ans)\n\n\n\ndef __starting_point():\n    main()\n__starting_point()", "import sys\ns=input()\nt=input()\n\ns=list(s)\nt=list(t)\nu=s[:]\n\nfor i in range(len(s)):\n    u.append(s[i])\n    u.remove(u[0])\n    if u==t:\n        print('Yes')\n        return\nprint('No')", "import sys\n\nS = input()\nT = input()\n\nfor i in range(len(S)):\n    s = S[i:] + S[:i]\n    for j in range(len(S)):\n        if s == T:\n            print(\"Yes\")\n            return\nprint(\"No\")\n", "s = input()\nt = input()\n\nans = 'No'\nfor _ in range(len(s)):\n    s = s[-1] + s[0: len(s) - 1]\n    if s == t:\n        ans = 'Yes'\n        break\nprint(ans)\n", "s = input()\nt = input()\nres = \"No\"\n\ndef rotate(a):\n  n = len(a)\n  a = a[n-1] + a[:n-1]\n  return a\n\nfor i in range(len(s)):\n  if s == t:\n    res = \"Yes\"\n    break\n  s = rotate(s)\n\nprint(res)", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\nfrom collections import deque\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\nmod = 10**9 + 7\n\nDR = [1, -1, 0, 0]\nDC = [0, 0, 1, -1]\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\n     \ndef main():\n    s = S()\n    t = S()\n    l = len(s)\n    s += s\n    t += t\n    flag = False\n    for i in range(l):\n        for j in range(l):\n            if s[i:i+l] == t[j:j+l]:\n                flag = True\n    if flag:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nmain()\n\n", "S = str(input())\nT = str(input())\n\nx = len(S)\nfor i in range(0, x):\n    if S[i:] + S[:i] == T:\n        print('Yes')\n        return\n\nprint('No')", "\nS = input()\nT = input()\n\nfor i in range(len(S)):\n    S = S[1:] + S[0]\n    if T == S:\n        print('Yes')\n        break\nelse:\n    print('No')", "print(('No', 'Yes')[input() in input() * 2])", "s = input()\nt = input()\n\nlength = len(s)\n\nfor _ in range(length):\n    s = s[-1] + s[:length-1]\n    if s == t:\n        print('Yes')\n        break\nelse:\n    print('No')", "S = input()\nT = input()\n\ndef rolling(str , n):\n    return str[n:len(str)] + str[:n]\n\nfor i in range(len(S)):\n    if T == rolling(S, i):\n        print('Yes')\n        return\n\nprint('No')", "S = input()\nT = input()\n\nn = len(S)+1\nwhile n:\n    S = S[-1] + S[:-1]\n    if S == T:\n        print(\"Yes\")\n        return\n    n -= 1\nprint(\"No\")", "s = input()\nt = input()\n\ns_num = len(s)\ni = 0\na = 0\nwhile i < s_num:\n    if s == t:\n        a = 1\n    s = s[-1] + s[0:s_num-1]\n    i = i + 1\n\nif a == 1:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "S = input()\nT = input()\n\ncharacters_num = len(T)\n\nfor i in range(characters_num):\n    rotation_S = S[i:] + S[:i]\n    if rotation_S == T:\n        answer = 'Yes'\n        break\n    else:\n        answer = 'No'\nprint(answer)", "#-*-coding:utf-8-*-\nimport sys\ninput=sys.stdin.readline\n\ndef main(): \n    s = list(input().rstrip())\n    t = input().rstrip()\n    for i in range(len(s)):\n        if t == \"\".join(s):\n            print(\"Yes\")\n            return\n        else:\n            tmp=s.pop(0)\n            s.append(tmp)\n    print(\"No\")\n\n\n\ndef __starting_point():\n    main()\n__starting_point()", "import bisect, collections, copy, heapq, itertools, math, string, sys\ninput = lambda: sys.stdin.readline().rstrip() \nsys.setrecursionlimit(10**7)\nINF = float('inf')\ndef I(): return int(input())\ndef F(): return float(input())\ndef SS(): return input()\ndef LI(): return [int(x) for x in input().split()]\ndef LI_(): return [int(x)-1 for x in input().split()]\ndef LF(): return [float(x) for x in input().split()]\ndef LSS(): return input().split()\n\ndef resolve():\n    S = SS()\n    T = SS()\n    l = len(S)\n    S2 = S * 2\n\n    ans = 'No'\n    for i in range(l):\n        if S2[i:i+l] == T:\n            ans = 'Yes'\n            break\n\n    print(ans)\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "s = input()\nt = input()\ntemp = s\nans = 'No'\nfor i in range(len(s)):\n    temp = temp[-1] + temp[:-1]\n    if temp == t:\n        ans = 'Yes'\n        break\nprint(ans)", "s = input()\nt = input()\nn = len(s)\nif s == t:\n    print('Yes')\n    return\nfor i in range(1,n):\n    s = s[n-1]+s[:n-1]\n    if s ==t:\n        print('Yes')\n        return\nprint('No')", "s=list(input())\nt=list(input())\n\nS=s+s\nc=0\n\nfor i in range(len(s)):\n  ch=0\n  for j in range(len(s)):\n    if S[i+j]==t[j]:\n      ch+=1\n  if ch==len(s):\n    c+=1\n\nif c>0:\n  print('Yes')\n  \nelse:\n  print('No')\n\n", "s = input()\nt = input()\nfor i in range(len(s)):\n    s = s[-1] + s[0:-1]\n    if s == t:\n        print(\"Yes\")\n        return\nprint(\"No\")", "s = list(input())\nt = list(input())\n\nans = 'No'\nfor i in range(len(s)+1):\n    if s[-i:]+s[:len(s)-i] == t:\n        ans = 'Yes'\nprint(ans)", "s=input()\nt=input()\n\nflag = False\nfor i in range(1,len(s)+1):\n    if s[-i:]+s[:len(s)-i]==t:\n        flag=True\n        break\nprint((\"Yes\" if flag else \"No\"))\n", "s = input()\nt = input()\n\ns = list(s)\nt = list(t)\n\ncount = 0\njudgment = 0\n\nwhile count <= len(s):\n    count +=1\n    item = s.pop()\n    s.insert(0,item)\n    if s == t:\n        judgment += 1\n\nif judgment == 0:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "S = input()\nT = input()\n\nfor i in range(len(S)):\n    x = S[-i:] + S[:-i]\n    if x == T:\n        print('Yes')\n        break\nelse:\n    print('No')\n", "s = input()\nt = input()\n\nfor i in range(len(s)):\n    if s[i:] + s[:i] == t:\n        print('Yes')\n        return\nprint('No')", "s = input()\nt = input()\nfor i in range(len(s)):\n    if s[i:]+s[:i] == t:\n        print(\"Yes\")\n        break\nelse:\n    print(\"No\")", "S = input()\nT = input()\n\nfor i in range(len(S)):\n    if S[i:] + S[:i] == T:\n        print('Yes')\n        return\nprint('No')\n\n", "# -*- coding: utf-8 -*-\n# \u6a19\u6e96\u5165\u529b\u3092\u53d6\u5f97\nS = input()\nT = input()\n\n# \u6c42\u89e3\u51e6\u7406\nN = len(S)\nans = \"No\"\nfor i in range(N):\n    if S[-i:] + S[:-i] == T:\n        ans = \"Yes\"\n        break\n\n# \u7d50\u679c\u51fa\u529b\nprint(ans)\n", "s = input()\nt = input()\nk = 0\nfor i in range(len(s)):\n    x = s[i:] + s[:i]\n    if x == t:\n        k=1\n        break\nif k==1:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "import copy\ns = list(input())\nt = list(input())\nbool = False\nfor i in range(len(s)):\n    temp = copy.copy(s)\n    if s == t:\n        bool = True\n    for j in range(len(s)):\n        if j == 0:\n            s[0] = temp[len(s) - 1]\n        else:\n            s[j] = temp[j - 1]\nif bool:\n    print('Yes')\nelse:\n    print('No')", "S = input()\nT = input()\nflag = False\n\nfor i in range(len(S)):\n    if flag:\n        break\n    if S[i] == T[0]:\n        tem = i+1\n        f = 1\n        if tem == len(S):\n            tem = 0\n        for t in range(1,len(T)):\n            if T[t] == S[tem]:\n                tem += 1\n                if tem == len(S):\n                    tem = 0\n            else:\n                break\n            if t == len(T)-1:\n                flag = True\nif flag:\n    print('Yes')\nelse:\n    print('No')", "S = input()\nT = input()*2\nprint('Yes' if S in T*2 else 'No')", "str1 = input()\nstr2 = input()\n\nprint(\"Yes\" if str2 in str1 * 2 else \"No\")", "import math\nimport collections\nii = lambda : int(input())\nmi = lambda : map(int,input().split())\nli = lambda : list(map(int,input().split()))\n\ns = input()\nt = input()\nn = len(s)\n\nfor i in range(n):\n    flag = 0\n    for j in range(n):\n        if s[(i+j)%n] != t[j]:\n            flag = 1\n            break\n    if flag == 0:\n        print('Yes')\n        return\nprint('No')", "from itertools import groupby\nclass Combination:\n    def __init__(self, n, mod):\n        self.n = n\n        self.mod = mod\n        self.fac = [1 for i in range(self.n + 1)]\n        self.finv = [1 for i in range(self.n + 1)]\n        for i in range(2, self.n+1):\n            self.fac[i] = (self.fac[i - 1] * i) % self.mod\n            self.finv[i] = (self.finv[i - 1] * pow(i, -1, self.mod)) % self.mod\n\n    def comb(self, n, m):\n        return self.fac[n] * (self.finv[n - m] * self.finv[m] % self.mod) % self.mod\n        \ndef iparse():\n    return list(map(int, input().split()))\n\n\n# RUN LENGTH ENCODING str -> tuple\n\n\ndef runLengthEncode(S: str):\n    grouped = groupby(S)\n    res = []\n    for k, v in grouped:\n        res.append((k, str(len(list(v)))))\n    return res\n\n\ndef __starting_point():\n    s = input()\n    t = input()\n    s = s + s\n    for i in range(len(t)):\n        if t == s[i:i+len(t)]:\n            print(\"Yes\")\n            return\n    print(\"No\")\n    \n        \n\n__starting_point()", "S = input()\nT = input()\nflag = 0\nfor i in range(len(S)):\n  if S == T:\n    flag = 1\n    break\n  S = S[len(S)-1] + S[0:len(S)-1]\nif flag == 1:\n  print('Yes')\nelse:\n  print('No')", "s = str(input())\nt = str(input())\n\ndef answer(s: str, t: str) -> str:\n    for i in range(len(s)):\n        tmp = s[i:] + s[:i]\n        if tmp == t:\n            return 'Yes'\n            break\n    else:\n        return 'No'\n\nprint((answer(s, t)))\n", "s = input()\nt = input()\nprint((\"Yes\" if t in s*2 else \"No\"))\n", "S = input()\nT = input()\nString1 = list(S)\nString2 = list(T)\nN = len(String1)\n\n\n\nfor i in range(1,N):\n    if String1 == String2:\n        print(\"Yes\")\n        break\n    Ex = String1.pop()\n    String1.insert(0,Ex)\n    if String1 == String2:\n        print(\"Yes\")\n        break\nelse:\n    print(\"No\")", "S = input()\nT = input()\nN = len(S)\nfor i in range(N-1,-1,-1):\n    if S[:i] == T[N-i:] and S[i:] == T[:N-i]:\n        print('Yes')\n        return\nprint('No')\n", "s = [a for a in input()]\nt = [b for b in input()]\ntemp = None\nfor _ in range(len(s)):\n  if s == t:\n    print(\"Yes\")\n    return\n  temp = s.pop(0)\n  s.append(temp)\nprint(\"No\")", "s = input()\nt = input()\nans = 0\nfor i in range(len(s)):\n    s = s[-1]+s[:-1]\n    if s == t:\n        ans = 1\nprint(\"Yes\" if ans==1 else \"No\")", "s = input()\nt = input()\n\nif t in s*2:\n    print('Yes')\nelse:\n    print('No')", "S=input()\nT=input()\n\ndef ans103(S:str, T:str):\n    jugde_count=0\n    for i in range(0,len(S)):\n        S=S[-1]+S[:-1]\n        if T==S:\n            jugde_count+=1\n    if jugde_count>0:\n        return \"Yes\"\n    else:\n        return \"No\"\n\nprint(ans103(S,T))", "def main():\n    s = input()\n    t = input()\n    x = len(s)\n\n    for index in range(x):\n        if (s[index+1:] + s[:index+1]) == t:\n            print(\"Yes\")\n            return\n\n    print(\"No\")\n\n\nmain()", "s = list(input())\nt = list(input())\nans = 'No'\n\nfor _ in s:\n    tmp = s.pop()\n    s.insert(0, tmp)\n    ''.join(s)\n    if s == t:\n        ans = 'Yes'\n        break\n\nprint(ans)", "S = list(input())\nT = list(input())\nans = 'No'\n\nfor i in S:\n    tmp = S.pop()\n    S.insert(0, tmp)\n    ''.join(S)\n    if S == T:\n        ans = 'Yes'\n        break\n\nprint(ans)\n\n\n\n\n", "S = input()\nT = input()\n\nfor i in range(len(S)):\n    if S == T:\n        print('Yes')\n        break\n    else:\n        lstS = list(S)\n        s = lstS.pop()\n        a = list(s) + lstS\n        S = ''.join(a)\n        \nelse:\n    print('No')", "S = input()\nT = input()\ncnt = 0\nfor i in range(len(S)):\n  S = S[-1] + S[0:-1]\n  if S == T:\n    cnt = 1\n    print('Yes')\n    break\n    \nif cnt==0:\n  print('No')", "S = str(input())\nT = str(input())\n\n# \u82f1\u5c0f\u6587\u5b57\u306e\u6587\u5b57\u5217S \u3092\u56de\u8ee2\u3055\u305b\u3066 T \u306b\u4e00\u81f4\u3055\u305b\u3089\u308c\u308b\u5834\u5408\u306f Yes\u3001\u4e00\u81f4\u3055\u305b\u3089\u308c\u306a\u3044\u5834\u5408\u306f No \u3092\u51fa\u529b\u305b\u3088\u3002\n\nfor i in range(len(S)):\n    if S[i:] + S[:i] == T:\n        print(\"Yes\")\n        break\nelse:\n    print(\"No\")", "S=input()\nT=input()\nN=len(S)\nfor i in range(N+1):\n    if S[-i:N]+S[0:-i+N]==T:\n        print(\"Yes\")\n        break\nelse:\n    print(\"No\")\n", "s = input()\nt = input()\n\n\nif t == s:\n    print('Yes')\n    return\nelse:\n    for i in range(1,len(s)):\n        st = s[-i:]+s[:len(s)-i]\n\n        if st == t:\n            print('Yes')\n            return\n\nprint('No')", "S=input()\nT=input()\nans = T\nfor i in range(len(S)):\n  ans = ans[-1]+ans[:-1]\n  if S == ans:\n    print(\"Yes\")\n    break\nelse:\n  print(\"No\")", "S = str(input())\nT = str(input())\nans_list = []\n\nfor i in range(len(S)):\n    i = S[-1] + S[0:-1]\n    ans_list.append(i)\n    S = i\n\nif T in ans_list:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "S = list(input())\nT = list(input())\n\nmatch = 0\n\nfor _ in S:\n    i = S.pop()  # \u672b\u5c3e\u3092\u524a\u9664\u3057\u5024\u3092\u53d6\u5f97\n    S.insert(0, i)  # index[0]\u306e\u4f4d\u7f6e\u306bi\u3092\u8ffd\u52a0\n    ''.join(S)  # \u30ea\u30b9\u30c8\u3092\u7d50\u5408\n    if S == T:\n        match += 1\n        break\n\nif match == 0:\n    print('No')\nelse:\n    print('Yes')\n", "S = input()\nT = str(input())\n\ns = list(S)\ns_len = len(S)\n\ni = 0\n\nwhile i < s_len:\n    s.insert(0, s[-1])\n    s.pop(-1)\n    new_s = \"\".join(s)\n    i += 1\n    if new_s == T:\n        print(\"Yes\")\n        break\nelse:\n    print(\"No\")", "S = input()\nT = input()\nans = 'No'\nfor i in range(len(S)):\n    if S == T:\n        ans = 'Yes'\n        break\n    S = S[-1] + S[:-1]\nprint(ans)", "S = input()\nT = input()\n\nsuccess = 0\n\nfor i in range(len(S)):\n    if S[i:] + S[:i] == T:\n        success += 1\n\nif success >= 1:\n    print('Yes')\nelse:\n    print('No')", "s = str(input())\nt = str(input())\n\nfor i in range(len(s)):\n    if s[i:] + s[:i] == t:\n        print('Yes')\n        return\nprint('No')", "s=input()\nt=input()\nFlag=False\nfor _ in range(len(s)):\n    s=s[-1]+s[:-1]\n    if s==t:\n        Flag=True\nif Flag:\n    print('Yes')\nelse:\n    print('No')", "S = input()\nT = input()\nN = len(S)\n\ncheck = False\nfor i in range(N):\n  S = S[-1] + S[:-1]\n  if S == T:\n    check = True\n\nprint(\"Yes\" if check else \"No\")", "S = input()\nT = input()\n\nS_len = len(S)\nS_change = ''\nanswer = 'No'\n\nfor _ in range(0, S_len):\n    if S == T:\n        answer = 'Yes'\n        break\n\n    S_change = S[-1]\n    S = S[:-1]\n    S = S_change + S\n\nprint(answer)", "S = input()\nT = input()\nS = S + S\n\nfor i in range(0, len(S) - len(T)+1):\n    if S[i: i + len(T)] == T:\n        print(\"Yes\")\n        return\n\nprint(\"No\")", "S = input()\nT = input()\n\nif S == T:\n    print(\"Yes\")\nelse:\n    ans = \"No\"\n    S = list(S)\n    for i in range(len(S)):\n        s = S.pop()\n        S.insert(0, s)\n        if \"\".join(S) == T:\n            ans = \"Yes\"\n            break\n    print(ans)", "s = list(input())\nt = list(input())\n\nans = \"No\"\nfor i in range(len(s)):\n    s0 = s[0]\n    s.remove(s0)\n    s.append(s0)\n    if s == t:\n        ans = \"Yes\"\n        break\n\nprint(ans)\n\n", "s = input()\nt = input()\n# s,t\u3092\u30ea\u30b9\u30c8\u306b\u3059\u308b\ns = list(s)\nt = list(t)\n\n# \u5909\u6570count,judgement\u306b0\u3092\u4ee3\u5165\ncount = 0\njudgment = 0\n\n# s\u306e\u9577\u3055\u3060\u3051\u9806\u756a\u5165\u308c\u66ff\u3048\u3092\u7e70\u308a\u8fd4\u3057\nwhile count <= len(s):\n    item = s.pop()\n    s.insert(0,item)\n    if s == t:\n        # s==t\u306b\u306a\u3063\u305f\u3089judgment\u3067\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\n        judgment += 1\n    # \u56de\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\n    count +=1\n\n# \u4e00\u56de\u3082s==t\u306b\u306a\u3063\u3066\u306a\u3051\u308c\u3070No\nif judgment == 0:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "S = input()\nT = input()\n\n# len:\uff98\uff7d\uff84\u306e\u5024\uff08\u4f55\u6587\u5b57\u5165\u3063\u3066\u308b\u304b\uff09\u306e\u4f7f\u3046\n# for i in range(): ()\u306b\u306f\u7e70\u308a\u8fd4\u3057\u305f\u3044\u56de\u6570\u3092\u5165\u308c\u308b\u3002\n\nfor i in range(len(S)):\n    if S[i:] + S[:i] == T:  # S\u3068T\u306b\u4f7f\u308f\u308c\u3066\u308b\u30a2\u30eb\u30d5\u30a1\u3079\u30c3\u30c8\u304c\u540c\u3058\u3068\u3044\u3046\u8a3c\u660e\n        print('Yes')\n        return              \n# else\u3067\u306f\u51fa\u6765\u306a\u304b\u3063\u305f\u3002\u4e00\u65e6exit\u3067\u308b\u3002\nprint('No')", "s = input()\nt = input()\ns_temp = s\nanswer=\"No\"\nfor i in range(len(s)):\n    s_temp = s[i:]+s[:i]\n    if s_temp == t:\n        answer=\"Yes\"\n        break\nprint(answer)", "original = input()\ntoVerify = input()\n\noriginal = original * 3\n\nif toVerify in original:\n    print('Yes')\nelse:\n    print('No')", "\ns=input()\nt=input()\nn=0\n\nfor i in range(len(s)):\n    a=len(s)-1\n\n\n    s=s[a]+s[0:a]\n  \n    if s==t:\n        n=1\n        break\n        \n        \nif n==1:\n    if len(s)==len(t):\n        print(\"Yes\")\nelse:\n    print(\"No\")", "s = input()\nt = input()\nif s == t:\n  print(\"Yes\")\n  return\nfor i in range(1,len(s)):\n  if s[len(s)-i:]+s[:len(s)-i] == t:\n    print(\"Yes\")\n    return\nprint(\"No\")", "import sys\nlines = [s.rstrip(\"\\n\") for s in sys.stdin.readlines()]\ns = lines.pop(0)\nt = lines.pop(0)\nfor i in range(len(s)):\n    if s[i:] + s[:i] == t:\n        print(\"Yes\")\n        break\nelse:\n    print(\"No\")\n", "s,t=input(),input()\nn=len(s)\n\n\n\nans=\"No\"\n\nfor i in range(n):\n    s=s[-1]+s[:-1]\n    if s==t:\n        ans=\"Yes\"\n        break\n\n\nprint(ans)\n    \n", "def answer(s: str, t: str) -> str:\n    for _ in range(len(s)):\n        if t == s:\n            return 'Yes'\n        s = s[-1] + s[:-1]\n    return 'No'\n\n\ndef main():\n    s = input()\n    t = input()\n    print((answer(s, t)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "s = str(input())\nt = str(input())\nN = len(s)\nS = [0] * N\nT = [0] * N\n\nfor i in range(N):\n  S[i] = s[i]\n  T[i] = t[i]\n  \nfor i in range(N):\n  for j in range(N):\n    if j == 0:\n      x = S[j]\n      S[j] = S[j + 1]\n    elif 1 <= j < N - 1:\n      S[j] = S[j + 1]\n    else:\n      S[j] = x\n  #print(S)    \n  if S == T:\n    print(\"Yes\")\n    return\n    \nprint(\"No\")    \n      \n      \n", "s = input()\nt = input()\n\ndef turn(S):\n   return S[-1] + S[:-1]\n\nfor i in range(len(s)):\n   if s == t:\n      print('Yes')\n      return\n   else:\n      s = turn(s)\n\nprint('No')", "s=input()\nt=input()\ntotal=False\nfor i in range(len(s)):\n    s=s[len(s)-1]+s[0:len(s)-1]\n    if s==t:\n        print(\"Yes\")\n        total=True\n        break\nif total==False:\n    print(\"No\")", "S = str(input())\nT = str(input())\n\na = len(S)\nfor i in range(0, a):\n    if S[i:] + S[:i] == T:\n        print('Yes')\n        break\nelse:\n    print('No')", "S=input()\nT=input()\n\nfor i in range(100):\n    S=S[-1]+S\n    S=S[0:(len(S)-1)]\n    if S==T:\n        print(\"Yes\")\n        return\nprint(\"No\")\n", "S = input()*2\nT = input()\n\nif T in S:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "s = str(input())\nt = str(input())\n\nfor i in range(len(s)):\n    if s[i:] + s[:i] == t:\n        print(\"Yes\")\n        return\nprint(\"No\")", "s = input()\nt = input()\n\norigin = s\n\nif s == t:\n    print(\"Yes\")\n    return\n\ns = s[1:] + s[0]\n\n\n\nwhile (s != origin):\n    if s == t:\n        print(\"Yes\")\n        return\n    s = s[1:] + s[0]\n\nprint(\"No\")\n", "S = input()\nT = input()\nr = 'No'\nt2 = T + T\n\nif set(S) == set(T):\n  if t2.count(S) > 0:\n    r = 'Yes'\nelse:\n  r = 'No'\n  \nprint(r)", "s=input()\nt=input()\nans='No'\nfor i in range(len(s)):\n  a=s[i::]+s[0:i]\n  if a==t:\n    ans='Yes'\nprint(ans)", "# -*- coding: utf-8 -*-\n\ndef get_input() -> tuple:\n    \"\"\"\n    \u6a19\u6e96\u5165\u529b\u3092\u53d6\u5f97\u3059\u308b.\n\n    Returns:\\n\n        tuple: \u6a19\u6e96\u5165\u529b\n    \"\"\"\n    S = input()\n    T = input()\n\n    return S, T\n\n\ndef main(S: str, T: str) -> None:\n    \"\"\"\n    \u30e1\u30a4\u30f3\u51e6\u7406.\n\n    Args:\\n\n        S (str): \u82f1\u5b50\u6587\u5b57\u304b\u3089\u306a\u308b\u6587\u5b57\u5217(2 <= |S| <= 100)\n        T (str): \u82f1\u5b50\u6587\u5b57\u304b\u3089\u306a\u308b\u6587\u5b57\u5217(|S| = |T|)\n    \"\"\"\n    # \u6c42\u89e3\u51e6\u7406\n    N = len(S)\n    ans = \"No\"\n    for i in range(N):\n        if S[-i:] + S[:-i] == T:\n            ans = \"Yes\"\n            break\n\n    # \u7d50\u679c\u51fa\u529b\n    print(ans)\n\n\ndef __starting_point():\n    # \u6a19\u6e96\u5165\u529b\u3092\u53d6\u5f97\n    S, T = get_input()\n\n    # \u30e1\u30a4\u30f3\u51e6\u7406\n    main(S, T)\n\n__starting_point()", "s = input()\nt = input()\na = len(s)\nb = 0\nfor i in range(a):\n    if s == t:\n        b += 1\n        break\n    else:\n        c = s[-1]\n        s = c + s[:-1]\n\nif b == 1:\n    print('Yes')\nelse:\n    print('No')", "list_s = list(input())\nlist_t = list(input())\nn = len(list_s)\nfor i in range(0, n):\n    if \"\".join(list_s) == \"\".join(list_t):\n        print(\"Yes\")\n        return\n    list_s.insert(0, list_s[n - 1])\n    list_s.pop(-1)\nprint(\"No\")", "S = input()\nT = input()\n\nnum = len(T)\n\nfor i in range(num):\n    rotation_S = S[i:] + S[:i]\n    if rotation_S == T:\n        answer = 'Yes'\n        break\n    else:\n        answer = 'No'\n\nprint(answer)", "s = list(input())\nt = list(input())\nans = 'No'\n\nfor _ in s:\n    tmp = s.pop()\n    s.insert(0, tmp)\n    ''.join(s)\n    if s == t:\n        ans = 'Yes'\n        break\n\nprint(ans)", "a = input()\nb = input()\nc = 0\nfor i in range(len(a)):\n  if (b[i:len(a)]+b[0:i]) == a:\n    print(\"Yes\")\n    break\n  else:\n    c += 1\nif c == len(a):\n  print(\"No\")\n \n", "string = input()\nrotated_string = input()\nfor i in range(len(string)):\n    string = string[-1] + string[0:-1]\n    if string == rotated_string:\n        print('Yes')\n        return\nprint('No')\n", "s=input()\nt=input()\nprint(\"Yes\" if s in t*2 else \"No\")", "S = input() * 2\nT = input()\nN = len(T)\nfor i in range(N):\n    if T == S[i:N + i]:\n        ans = \"Yes\"\n        break\nelse:\n    ans = \"No\"\nprint(ans)\n", "import sys\nimport math\nimport itertools\nimport collections\nimport heapq\nimport re\nimport numpy as np\nfrom functools import reduce\n\nrr = lambda: sys.stdin.readline().rstrip()\nrs = lambda: sys.stdin.readline().split()\nri = lambda: int(sys.stdin.readline())\nrm = lambda: list(map(int, sys.stdin.readline().split()))\nrl = lambda: list(map(int, sys.stdin.readline().split()))\ninf = float('inf')\nmod = 10**9 + 7\n\ns = rr()\nt = rr()\nfor i in range(len(s)+3):\n    if s == t:\n        print('Yes')\n        return\n    else:\n        s = s[-1] + s[:-1]\nprint('No')\n        \n\n\n\n\n\n\n\n\n\n\n", "S = input()\nT = input()\n\nfor i in range(len(S)):\n  S = S[1:] + S[0]\n  if T == S:\n    print('Yes')\n    return\nprint('No')"]