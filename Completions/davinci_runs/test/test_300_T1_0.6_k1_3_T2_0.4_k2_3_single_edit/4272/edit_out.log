2022-04-18 05:57:04.660283 num operations 1
2022-04-18 05:57:04.660303 size on input set 1
2022-04-18 05:57:07.224882 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n):\n    if s[i:i+3] == 'ABC':\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "# https://atcoder.jp/contests/abc085/tasks/abc085_b\n\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n):\n    if s[i:i+3] == 'ABC':\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n):\n    if s[i:i+3] == 'ABC':\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1650261424,
  "object": "edit"
}
2022-04-18 05:57:07.225133 fix syntax errors 3 ["\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n):\n    if s[i:i+3] == 'ABC':\n        count += 1\n\nprint(count)\n", "# https://atcoder.jp/contests/abc085/tasks/abc085_b\n\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n):\n    if s[i:i+3] == 'ABC':\n        count += 1\n\nprint(count)\n", "\nn = int(input())\ns = input()\n\ncount = 0\n\nfor i in range(n):\n    if s[i:i+3] == 'ABC':\n        count += 1\n\nprint(count)\n"]
2022-04-18 05:57:07.225157 size on output set 2
2022-04-18 05:57:07.225168 num operations 1
2022-04-18 05:57:07.225174 size on input set 1
2022-04-18 05:57:11.755949 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n = int(input())\n    s = input()\n    a = 0\n    for i in range(n - 2):\n        if s[i] == 'A' and s[i + 1] == 'B' and s[i + 2] == 'C':\n            a += 1\n    print(a)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    n = int(input())\n    s = input()\n    a = 0\n    for i in range(n - 2):\n        if s[i] == 'A' and s[i + 1] == 'B' and s[i + 2] == 'C':\n            a += 1\n    print(a)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = input()\n    a = 0\n    for i in range(n - 2):\n        if s[i] == 'A' and s[i + 1] == 'B' and s[i + 2] == 'C':\n            a += 1\n    print(a)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650261427,
  "object": "edit"
}
2022-04-18 05:57:11.756190 fix syntax errors 3 ["\nimport sys\n\ndef main():\n    n = int(input())\n    s = input()\n    a = 0\n    for i in range(n - 2):\n        if s[i] == 'A' and s[i + 1] == 'B' and s[i + 2] == 'C':\n            a += 1\n    print(a)\n\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n = int(input())\n    s = input()\n    a = 0\n    for i in range(n - 2):\n        if s[i] == 'A' and s[i + 1] == 'B' and s[i + 2] == 'C':\n            a += 1\n    print(a)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = input()\n    a = 0\n    for i in range(n - 2):\n        if s[i] == 'A' and s[i + 1] == 'B' and s[i + 2] == 'C':\n            a += 1\n    print(a)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-18 05:57:11.756218 size on output set 3
2022-04-18 05:57:11.756230 num operations 1
2022-04-18 05:57:11.756235 size on input set 1
2022-04-18 05:57:19.304191 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\n# Get the number of characters in the string\nn = int(sys.stdin.readline())\n\n# Get the string\ns = sys.stdin.readline()\n\n# Initialize the number of contiguous subsequences equal to ABC\nnum_subsequences = 0\n\n# If the string contains at least 3 characters\nif n >= 3:\n    # For every character in the string\n    for i in range(n):\n        # If the character is not A, skip it\n        if s[i] != \"A\":\n            continue\n        # If the character is A and the following character is B, check the following character\n        if s[i+1] == \"B\":\n            # If the following character is B and the character after that is C, increment the number of subsequences\n            if s[i+2] == \"C\":\n                num_subsequences += 1\n\n# Print the number of subsequences\nprint(num_subsequences)\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\n# Get the number of characters in the string\nn = int(sys.stdin.readline())\n\n# Get the string\ns = sys.stdin.readline()\n\n# Initialize the number of contiguous subsequences equal to ABC\nnum_subsequences = 0\n\n# For every character in the string\nfor i in range(n):\n    # If the character is not A, skip it\n    if s[i] != \"A\":\n        continue\n    # If the character is A and the following character is B, check the following character\n    elif s[i+1] == \"B\":\n        # If the following character is B and the character after that is C, increment the number of subsequences\n        elif s[i+2] == \"C\":\n            num_subsequences += 1\n\n# Print the number of subsequences\nprint(num_subsequences)\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\nn = int(sys.stdin.readline())\n\ns = sys.stdin.readline()\n\nnum_subsequences = 0\n\nfor i in range(n):\n    if s[i] != \"A\":\n        continue\n    if s[i+1] == \"B\":\n        if s[i+2] == \"C\":\n            num_subsequences += 1\n\nprint(num_subsequences)\n"
    }
  ],
  "created": 1650261431,
  "object": "edit"
}
2022-04-18 05:57:19.304383 fix syntax errors 3 ['\n\nimport sys\n\n# Get the number of characters in the string\nn = int(sys.stdin.readline())\n\n# Get the string\ns = sys.stdin.readline()\n\n# Initialize the number of contiguous subsequences equal to ABC\nnum_subsequences = 0\n\n# If the string contains at least 3 characters\nif n >= 3:\n    # For every character in the string\n    for i in range(n):\n        # If the character is not A, skip it\n        if s[i] != "A":\n            continue\n        # If the character is A and the following character is B, check the following character\n        if s[i+1] == "B":\n            # If the following character is B and the character after that is C, increment the number of subsequences\n            if s[i+2] == "C":\n                num_subsequences += 1\n\n# Print the number of subsequences\nprint(num_subsequences)\n', '\n\nimport sys\n\n# Get the number of characters in the string\nn = int(sys.stdin.readline())\n\n# Get the string\ns = sys.stdin.readline()\n\n# Initialize the number of contiguous subsequences equal to ABC\nnum_subsequences = 0\n\n# For every character in the string\nfor i in range(n):\n    # If the character is not A, skip it\n    if s[i] != "A":\n        continue\n    # If the character is A and the following character is B, check the following character\n    elif s[i+1] == "B":\n        # If the following character is B and the character after that is C, increment the number of subsequences\n        elif s[i+2] == "C":\n            num_subsequences += 1\n\n# Print the number of subsequences\nprint(num_subsequences)\n', '\nimport sys\n\nn = int(sys.stdin.readline())\n\ns = sys.stdin.readline()\n\nnum_subsequences = 0\n\nfor i in range(n):\n    if s[i] != "A":\n        continue\n    if s[i+1] == "B":\n        if s[i+2] == "C":\n            num_subsequences += 1\n\nprint(num_subsequences)\n']
2022-04-18 05:57:19.304417 size on output set 3
