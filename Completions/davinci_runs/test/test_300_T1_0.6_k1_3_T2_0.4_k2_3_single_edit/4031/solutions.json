["n = int(input())\narr = [input() for _ in range(n)]\n\narr.sort(key = lambda x : len(x))\n\nfor u, v in zip(arr[:-1], arr[1:]):\n    if u not in v:\n        print('NO')\n        return\n\nprint('YES')\nprint('\\n'.join(x for x in arr))", "from functools import cmp_to_key\ndef mycmp(a, b):\n    if a == b:\n        return 0\n    if a in b:\n        return -1\n    return 1\n\ndef main():\n    n = int(input())\n    a = [input() for _ in range(n)]\n    poss = True\n    for i in range(n):\n        for j in range(i + 1, n):\n            if a[i] not in a[j] and a[j] not in a[i]:\n                poss = False\n    if not poss:\n        print('NO')\n        return\n    a.sort(key=cmp_to_key(mycmp))\n    print('YES')\n    for x in a:\n        print(x)\nmain()\n", "n = int(input())\nans = []\ns = [input() for i in range(n)]\nfor i in range(n):\n    for j in range(len(s)):\n        t = True\n        for k in range(len(s)):\n            if j == k:\n                continue\n            if s[j] not in s[k]:\n                t = False\n                break\n        if t:\n            ans.append(s[j])\n            del s[j]\n            break\nif len(ans) == n:\n    print('YES')\n    for i in ans:\n        print(i)\nelse:\n    print('NO')\n", "n = int(input())\nst = []\nfor i in range(n):\n\tst.append(input())\n\nfor i in range(n - 1):\n\tfor j in range(i, n):\n\t\tif (not(st[i] in st[j])) and (not(st[j] in st[i])):\n\t\t\tprint(\"NO\")\n\t\t\tquit()\n\t\tif (st[j] in st[i]):\n\t\t\twk1 = st[i]\n\t\t\tst[i] = st[j]\n\t\t\tst[j] = wk1\n\nprint(\"YES\")\nfor i in st:\n\tprint(i)\n", "def go():\n    n = int(input())\n    s = []\n    for i in range(n):\n        s.append(input())\n    s = sorted(s, key=lambda x: len(x))\n    for i in range(n - 1):\n        if s[i] not in s[i + 1]:\n            print('NO')\n            return\n    print('YES')\n    for i in range(n):\n        print(s[i])\n\ngo()\n", "def read_nums():\n    return [int(x) for x in input().split()]\n\n\ndef is_good(strings):\n    for i in range(1, len(strings)):\n        if strings[i-1] not in strings[i]:\n            return False\n    return True\n\n\ndef main():\n    n, = read_nums()\n    strings = []\n    for _ in range(n):\n        strings.append(input())\n\n    strings = sorted(strings, key=lambda x: len(x))\n    if is_good(strings):\n        print('YES')\n        for s in strings:\n            print(s)\n    else:\n        print('NO')\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\nsrc = [input() for i in range(N)]\nsrc.sort(key=lambda x:len(x))\n\nfor a,b in zip(src,src[1:]):\n    if a in b: continue\n    print('NO')\n    return\nprint('YES')\nfor a in src:\n    print(a)\n", "n=int(input())\nL=[input() for i in range(n)]\nL.sort(key=len)\nflag=True\nfor i in range(1,n):\n    if L[i-1] not in L[i]:\n        flag=False\n        break\nif flag:\n    print(\"YES\")\n    for i in L:\n        print(i)\nelse:\n    print(\"NO\")\n", "n = int(input())\narr = []\nfor i in range(n):\n    s = input()\n    arr.append((len(s),s))\narr.sort()\nfl = True\nfor i in range(n - 1):\n    if arr[i + 1][1].find(arr[i][1]) == -1:\n        fl = False\n        break\nif fl:\n    print('YES')\n    for i in arr:\n        print(i[1])\nelse:\n    print('NO')\n'''\nn, k = map(int, input().split())\narr = list(map(int, input().split()))\nfor i in range(n):\n    arr[i] = (arr[i], i + 1)\narr.sort()\n\ncur = -1\nans = []\nfor i in range(n):\n    if arr[i][0] != cur:\n        ans.append(arr[i][1])\n        cur = arr[i][0]\n    if len(ans) == k:\n        break\nif len(ans) == k:\n    print('YES')\n    print(*ans)\nelse:\n    print('NO')\n    '''", "n=int(input())\ns=[]\nfor x in range(n):\n    e=input()\n    s.append(e)\ns=sorted(s,key=lambda x:len(x))\ndef issubstring(a,b):\n    return b.count(a)\nb=True\nfor x in range(n):\n    for y in range(x):\n        if(not issubstring(s[y],s[x])):\n            b=False\nif b:\n    print(\"YES\")\n    for x in s:\n        print(x)\nelse:\n    print(\"NO\")", "n=int(input())\nx=[0]*n\nfor i in range(n):\n  x[i]=input()\nx.sort(key=lambda x:len(x))\nfor i in range(n-1):\n  for j in range(i+1,n):\n    if x[i] not in x[j]:\n      print('NO')\n      return\nprint('YES')\nfor i in x:\n  print(i)", "n = int(input())\nss = []\nfor i in range(n):\n    x = input().strip()\n    ss.append(x)\n\nss = sorted(ss, key=len)\nok = True\ni = 0\nwhile i<len(ss)-1 and ok:\n    if ss[i] not in ss[i+1]:\n        ok = False\n    i += 1\n        \nif not ok:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    for x in ss:\n        print(x)", "n = int(input())\narr = []\nfor _ in range(n):\n    s = input()\n    arr.append(s)\narr.sort(key=len)\nprev = ''\nfor s in arr:\n    if prev not in s:\n        print(\"NO\")\n        break\n    prev = s\nelse:\n    print(\"YES\")\n    print(\"\\n\".join(arr))\n", "n = int(input())\na = [[] for i in range(110)]\nfor i in range(n):\n    x = input()\n    a[len(x)].append(x)\nl = []\nfor i in a:\n    for j in i:\n        l.append(j)\nx = l[0]\nf = 1\n#print(a,l)\nfor i in range(1,n):\n    if(l[i].find(x)==-1):\n        f = 0\n    x = l[i]\nif(f):\n    print('YES')\n    for i in l:\n        print(i)\nelse:\n    print('NO')", "n = int(input())\na = []\nfor i in range(n):\n    a.append(input())\nb = [a[0]]\nfor j in range(1, n):\n    b.append(a[j])\n    c = len(b) - 1\n    while c != 0 and b[c-1] not in b[c]:\n        b[c-1], b[c] = b[c], b[c-1]\n        c -= 1\nflag  = True\nfor i in range(1, n):\n    if b[i - 1] not in b[i]:\n        flag = False\n\nif flag:\n    print(\"YES\")\n    for i in b:\n        print(i)\nelse:\n    print(\"NO\")", "n = int(input())\narr = []\nfor _ in range(n): arr.append(input())\narr.sort(key=len)\nfor i in range(n):\n    for j in range(i, -1, -1):\n        if arr[j] not in arr[i]:\n            print(\"NO\")\n            return\nprint(\"YES\")\nprint(*arr, sep='\\n')", "from copy import deepcopy\nimport itertools\nfrom bisect import bisect_left\nimport math\n\n\ndef read():\n    return int(input())\n\n\ndef readmap():\n    return list(map(int, input().split()))\n\n\ndef readlist():\n    return list(map(int, input().split()))\n\n\nN = read()\nstring_list = []\nfor _ in range(N):\n    s = input()\n    string_list.append((len(s), s))\n\nstring_list.sort(key=lambda x: x[0])\n\n\ndef is_substring(a, b):  # a is shorter than b\n    l_a = len(a)\n    l_b = len(b)\n\n    for i in range(l_b - l_a + 1):\n        if a == b[i:i+l_a]:\n            return True\n\n    return False\n\n\nfor n in range(1, N):\n    if not is_substring(string_list[n-1][1], string_list[n][1]):\n        print(\"NO\")\n        quit()\n\nprint(\"YES\")\nfor n in range(N):\n    print(string_list[n][1])\n", "d = []\nfor _ in range(int(input())):\n    d.append(input())\n\nd.sort(key = len)\n\nfor i in range(len(d) - 1, 0, -1):\n    c, p = d[i], d[i-1]\n    if p not in c:\n        print('NO')\n        return\n\nprint(\"YES\")\nprint(*d, sep = '\\n')\n", "n = int(input())\na = [None] * n\nfor i in range(n):\n    a[i] = input()\na.sort(key=len)\nf = True\nfor i in range(n - 1):\n    if a[i] not in a[i + 1]:\n        f = False\n        break\nif f:\n    print(\"YES\")\n    for i in range(n):\n        print(a[i])\nelse:\n    print(\"NO\")", "from math import log\nfrom operator import itemgetter\nn = int(input())\nsi = [[input(),0] for i in range(n)]\nfor i in range(n):\n    si[i][1] = len(si[i][0])\nsi.sort(key=itemgetter(1))\nans = 1\nfor i in range(1,n):\n    if si[i-1][0] not in si[i][0]:\n        ans = 0\n        break\nif ans == 0:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    for i in range(n):\n        print(si[i][0])\n", "n = int(input())\n\ns = []\nfor i in range(n):\n\ts.append(input())\n\ns.sort(key=len)\n\nyes = True\nfor i in range(n-1):\n\tif s[i] not in s[i+1]:\n\t\tyes = False\n\t\tbreak\n\nif yes:\n\tprint(\"YES\")\n\tprint(\"\\n\".join(s))\nelse:\n\tprint(\"NO\")", "n = int( input() )\nl = []\nfor i in range( n ) :\n    s = str( input() )\n    l.append( [ len( s ) , s ] )\nl.sort()\n#print( l )\nfor i in range( n -1 ) :\n    if l[ i ][1] not in l[ i + 1 ][1] :\n        print( \"NO\" )\n        return\nprint(\"YES\")\nfor i in range( n ) :\n    print( l[ i ][1] )\n    \n", "n=int(input())\na=[]\nfor i in range(n):\n    x=input()\n    a.append([len(x),x])\na=sorted(a)\nfor i in range(n-1):\n    if not(a[i][-1]==a[i+1][-1] or a[i][-1] in a[i+1][-1]):\n        print(\"NO\")\n        break\nelse:\n    print(\"YES\")\n    for j in a:\n        print(j[-1])", "n = int(input())\ns = [0] * n\nans = [0] * n\nused = [0] * n\nq = False\nfor i in range(n):\n    s[i] = input().strip()\nfor i in range(n):\n    for j in range(n):\n        fl = True\n        if (not used[j]):\n            for k in range(n):\n                if s[k] not in s[j]:\n                    fl = False\n            if fl:\n                ans[i] = s[j]\n                used[j] = 1\n                s[j] = ''\n                break\n    if ans[i] == 0:\n        q = True\nif not q:\n    print(\"YES\")\n    print(*ans[::-1], sep = '\\n')\nelse:\n    print(\"NO\")"]