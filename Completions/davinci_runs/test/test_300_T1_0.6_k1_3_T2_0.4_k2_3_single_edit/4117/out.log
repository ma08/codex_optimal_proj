2022-04-18 02:34:18.491934 """
We have sticks numbered 1, \cdots, N. The length of Stick i (1 \leq i \leq N) is L_i.
In how many ways can we choose three of the sticks with different lengths that can form a triangle?
That is, find the number of triples of integers (i, j, k) (1 \leq i < j < k \leq N) that satisfy both of the following conditions:
 - L_i, L_j, and L_k are all different.
 - There exists a triangle whose sides have lengths L_i, L_j, and L_k.

-----Constraints-----
 - 1 \leq N \leq 100
 - 1 \leq L_i \leq 10^9
 - All values in input are integers.

-----Input-----
Input is given from Standard Input in the following format:
N
L_1 L_2 \cdots L_N

-----Output-----
Print the number of ways to choose three of the sticks with different lengths that can form a triangle.

-----Sample Input-----
5
4 4 9 7 5

-----Sample Output-----
5

The following five triples (i, j, k) satisfy the conditions: (1, 3, 4), (1, 4, 5), (2, 3, 4), (2, 4, 5), and (3, 4, 5).
"""
2022-04-18 02:34:18.491948 --------------------------
2022-04-18 02:35:05.891933 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\ndef main():\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(n-2):\n        for j in range(i+1, n-1):\n            for k in range(j+1, n):\n                if l[i] < l[j] + l[k] and l[j] < l[i] + l[k] and l[k] < l[i] + l[j]:\n                    ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n\"\"\"\nimport fractions\nimport itertools\nimport math\nimport sys\n\nsys.setrecursionlimit(10**7)\n\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return sys.stdin.readline().split()\n\nINF = float('inf')\n\n\nn = I()\nL = LI()\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if L[i] != L[j] and L[j] != L[k] and L[k] != L[i]:\n                if L[i] + L[j] > L[k] and L[k] + L[j] > L[i] and L[i] + L[k] > L[j]:\n                    ans += 1\nprint(ans)\n\"\"\"\n\nimport fractions\nimport itertools\nimport math\nimport sys\n\nsys.setrecursionlimit(10**7)\n\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return sys.stdin.readline().split()\n\nINF = float('inf')\n\n\nn = I()\nL = LI()\nL.sort()\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if L[i] != L[j] and L[j] != L[k] and L[k] != L[i]:\n                if L[i] + L[j] > L[k] and L[k] + L[j] > L[i] and L[i] + L[k] > L[j]:\n                    ans += 1\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 2,
      "logprobs": null,
      "text": "\n\nn = int(input())\nl = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if l[i] + l[j] > l[k] and l[i] + l[k] > l[j] and l[j] + l[k] > l[i]:\n                cnt += 1\n\nprint(cnt)"
    }
  ],
  "created": 1650249258,
  "id": "cmpl-4yBVSabCEVQTnnxEGDnJk8AH36DHO",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-18 02:35:05.892157 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\ndef main():\n    n = int(input())\n    l = list(map(int, input().split()))\n    ans = 0\n    for i in range(n-2):\n        for j in range(i+1, n-1):\n            for k in range(j+1, n):\n                if l[i] < l[j] + l[k] and l[j] < l[i] + l[k] and l[k] < l[i] + l[j]:\n                    ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-18 02:35:05.892196 REASON stop
2022-04-18 02:35:05.934564 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n\"\"\"\nimport fractions\nimport itertools\nimport math\nimport sys\n\nsys.setrecursionlimit(10**7)\n\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return sys.stdin.readline().split()\n\nINF = float('inf')\n\n\nn = I()\nL = LI()\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if L[i] != L[j] and L[j] != L[k] and L[k] != L[i]:\n                if L[i] + L[j] > L[k] and L[k] + L[j] > L[i] and L[i] + L[k] > L[j]:\n                    ans += 1\nprint(ans)\n\"\"\"\n\nimport fractions\nimport itertools\nimport math\nimport sys\n\nsys.setrecursionlimit(10**7)\n\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return sys.stdin.readline().split()\n\nINF = float('inf')\n\n\nn = I()\nL = LI()\nL.sort()\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if L[i] != L[j] and L[j] != L[k] and L[k] != L[i]:\n                if L[i] + L[j] > L[k] and L[k] + L[j] > L[i] and L[i] + L[k] > L[j]:\n                    ans += 1\nprint(ans)"
}
2022-04-18 02:35:05.934685 REASON stop
2022-04-18 02:35:05.935184 2 {
  "finish_reason": "stop",
  "index": 2,
  "logprobs": null,
  "text": "\n\nn = int(input())\nl = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if l[i] + l[j] > l[k] and l[i] + l[k] > l[j] and l[j] + l[k] > l[i]:\n                cnt += 1\n\nprint(cnt)"
}
2022-04-18 02:35:05.935237 REASON stop
