["\ns = input()\nt = input()\n\ncnt = 0\n\nfor i in range(len(s)):\n    if s[i] == t[0]:\n        cnt += 1\n        t = t[1:]\n    if len(t) == 0:\n        break\n\nif len(t) == 0:\n    print(len(s) - cnt * len(t))\nelse:\n    print(len(s))\n", "\n\ndef findLongestSubstring(s,t):\n    \"\"\"\n    :type s: str\n    :type t: str\n    :rtype: int\n    \"\"\"\n    if len(s)==len(t):\n        return 0\n\n    left,right = 0,len(s)-1\n    while right-left>1:\n        mid = (left + right) // 2\n        if all(c in s[mid:] for c in t) :\n            left = mid\n        else:\n            right = mid\n\n    if all(c in s[right:] for c in t):\n        return len(s)-right\n    else:\n        return len(s)-left\n\nif __name__ == \"__main__\":\n    s = raw_input(\"s:\")\n    t = raw_input(\"t:\")\n    print findLongestSubstring(s,t)\n", "\nfrom sys import stdin\n\nline = stdin.readline()\ns = line.rstrip()\n\nline = stdin.readline()\nt = line.rstrip()\n\ni = 0\nj = 0\nres = 0\n\nwhile i < len(s):\n    if s[i] == t[j]:\n        j += 1\n        i += 1\n    else:\n        res += 1\n        i += 1\n\nres += len(s) - len(t) - i\n\nprint(res)\n", "\n\nfrom sys import stdin\n\nline = stdin.readline()\ns = line.rstrip()\n\nline = stdin.readline()\nt = line.rstrip()\n\ni = 0\nj = 0\nres = 0\n\nwhile i < len(s):\n    if s[i] == t[j]:\n        j += 1\n        i += 1\n    else:\n        res += 1\n        i += 1\n\nres += len(s) - len(t) - j\n\nprint(res)\n", "\ndef findLongestSubstring(s, t):\n    \"\"\"\n    :type s: str\n    :type t: str\n    :rtype: int\n    \"\"\"\n    if len(s) == len(t):\n        return 0\n\n    left, right = 0, len(s) - 1\n    while right - left > 1:\n        mid = (left + right) // 2\n        if all(c in s[mid:] for c in t):\n            left = mid\n        else:\n            right = mid\n\n    if all(c in s[right:] for c in t):\n        return len(s) - right\n    else:\n        return len(s) - left\n\nif __name__ == \"__main__\":\n    s = input()\n    t = input()\n    print findLongestSubstring(s, t)\n", "s = input()\nt = input()\n\ncnt = 0\n\nfor i in range(len(s)):\n    if s[i] == t[0]:\n        cnt += 1\n        t = t[1:]\n    if len(t) == 0:\n        break\n\nif len(t) == 0:\n    print(len(s) - cnt)\nelse:\n    print(len(s))\n", "s = input()\nt = input()\n\nans = 0\n\nfor i in range(len(s) - len(t) + 1):\n    cnt = 0\n    for j in range(len(t)):\n        if s[i + j] == t[j]:\n            cnt += 1\n    ans = max(ans, cnt)\n\nprint(len(t) - ans)\n", "\n\ndef findLongestSubstring(s, t):\n    \"\"\"\n    :type s: str\n    :type t: str\n    :rtype: int\n    \"\"\"\n    if set(s) == set(t):\n        return 0\n\n    left, right = 0, len(s) - 1\n    while right - left > 1:\n        mid = (left + right) // 2\n        if all(c in s[mid:] for c in t):\n            left = mid\n        else:\n            right = mid\n\n    if all(c in s[right:] for c in t):\n        return len(s) - right\n    else:\n        return len(s) - left\n\nif __name__ == \"__main__\":\n    s = raw_input()\n    t = raw_input()\n    print findLongestSubstring(s, t)\n", "\n\nfrom sys import stdin\n\nline = stdin.readline()\ns = line.rstrip()\n\nline = stdin.readline()\nt = line.rstrip()\n\ni = 0\nj = 0\nres = 0\n\nwhile i < len(s):\n    if s[i] == t[j]:\n        j += 1\n        i += 1\n    else:\n        res += 1\n        i += 1\n\nres += len(t) - j\n\nprint(res)\n"]