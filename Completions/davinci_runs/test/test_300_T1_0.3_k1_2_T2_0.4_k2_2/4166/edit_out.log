2022-04-19 01:08:51.152147 num operations 1
2022-04-19 01:08:51.152168 size on input set 1
2022-04-19 01:08:56.149093 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN, M = map(int, input().split())\n\ns = []\nc = []\nfor _ in range(M):\n    s_i, c_i = map(int, input().split())\n    s.append(s_i)\n    c.append(c_i)\n\nans = -1\nfor i in range(10**N):\n    i_str = str(i)\n    if len(i_str) != N:\n        continue\n    for j in range(M):\n        if i_str[s[j]-1] != str(c[j]):\n            break\n    else:\n        ans = i\n        break\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "import sys\nsys.setrecursionlimit(10**6)\n\n\ndef dfs(s, i):\n    if i == N:\n        return int(s)\n\n    if s[i] != '?':\n        return dfs(s, i+1)\n\n    for j in range(10):\n        s_next = s[:i] + str(j) + s[i+1:]\n        ans = dfs(s_next, i+1)\n        if ans is not None:\n            return ans\n\n    return None\n\n\ndef main():\n    s = input()\n    ans = dfs(s, 0)\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n\n\nN, M = map(int, input().split())\n\ns = []\nc = []\nfor _ in range(M):\n    s_i, c_i = map(int, input().split())\n    s.append(s_i)\n    c.append(c_i)\n\nans = -1\nfor i in range(10**N):\n    i_str = str(i)\n    if len(i_str) != N:\n        continue\n    for j in range(M):\n        if i_str[s[j]-1] != str(c[j]):\n            break\n    else:\n        ans = i\n        break\n\nprint(ans)\n"
    }
  ],
  "created": 1650330531,
  "object": "edit"
}
2022-04-19 01:08:56.149331 fix syntax errors 2 ['\nN, M = map(int, input().split())\n\ns = []\nc = []\nfor _ in range(M):\n    s_i, c_i = map(int, input().split())\n    s.append(s_i)\n    c.append(c_i)\n\nans = -1\nfor i in range(10**N):\n    i_str = str(i)\n    if len(i_str) != N:\n        continue\n    for j in range(M):\n        if i_str[s[j]-1] != str(c[j]):\n            break\n    else:\n        ans = i\n        break\n\nprint(ans)\n', "import sys\nsys.setrecursionlimit(10**6)\n\n\ndef dfs(s, i):\n    if i == N:\n        return int(s)\n\n    if s[i] != '?':\n        return dfs(s, i+1)\n\n    for j in range(10):\n        s_next = s[:i] + str(j) + s[i+1:]\n        ans = dfs(s_next, i+1)\n        if ans is not None:\n            return ans\n\n    return None\n\n\ndef main():\n    s = input()\n    ans = dfs(s, 0)\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n\n\nN, M = map(int, input().split())\n\ns = []\nc = []\nfor _ in range(M):\n    s_i, c_i = map(int, input().split())\n    s.append(s_i)\n    c.append(c_i)\n\nans = -1\nfor i in range(10**N):\n    i_str = str(i)\n    if len(i_str) != N:\n        continue\n    for j in range(M):\n        if i_str[s[j]-1] != str(c[j]):\n            break\n    else:\n        ans = i\n        break\n\nprint(ans)\n"]
2022-04-19 01:08:56.149366 size on output set 2
2022-04-19 01:08:56.149377 num operations 1
2022-04-19 01:08:56.149383 size on input set 1
2022-04-19 01:09:07.893691 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "N, M = map(int, input().split())\n\n\n\ndef rec(i, s, c):\n    if i == M:\n        return s\n    if s[c[i][0]-1] == str(c[i][1]):\n        return s\n    if s[c[i][0]-1] == '-':\n        s[c[i][0]-1] = str(c[i][1])\n        return rec(i+1, s, c)\n    else:\n        s[c[i][0]-1] = str(c[i][1])\n\n        return rec(i+1, s, c)\n\ndef main():\n    s = ['-' for i in range(N)]\n    c = []\n    for i in range(M):\n        c.append(list(map(int, input().split())))\n    ans = rec(0, s, c)\n    if '-' in ans:\n        print(-1)\n    else:\n        print(''.join(ans))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n#\n# N, M = map(int, input().split())\n#\n# def rec(i, s, c):\n#     if i == M:\n#         return s\n#     if s[c[i][0]-1] == str(c[i][1]):\n#         return s\n#     if s[c[i][0]-1] == '-':\n#         s[c[i][0]-1] = str(c[i][1])\n#         return rec(i+1, s, c)\n#     else:\n#         s[c[i][0]-1] = str(c[i][1])\n#         return rec(i+1, s, c)\n#\n# def main():\n#     s = ['-' for i in range(N)]\n#     c = []\n#     for i in range(M):\n#         c.append(list(map(int, input().split())))\n#     ans = rec(0, s, c)\n#     if '-' in ans:\n#         print(-1)\n#     else:\n#         print(''.join(ans))\n#\n# if __name__ == '__main__':\n#     main()\n"
    }
  ],
  "created": 1650330536,
  "object": "edit"
}
2022-04-19 01:09:07.893887 fix syntax errors 2 ["N, M = map(int, input().split())\n\n\n\ndef rec(i, s, c):\n    if i == M:\n        return s\n    if s[c[i][0]-1] == str(c[i][1]):\n        return s\n    if s[c[i][0]-1] == '-':\n        s[c[i][0]-1] = str(c[i][1])\n        return rec(i+1, s, c)\n    else:\n        s[c[i][0]-1] = str(c[i][1])\n\n        return rec(i+1, s, c)\n\ndef main():\n    s = ['-' for i in range(N)]\n    c = []\n    for i in range(M):\n        c.append(list(map(int, input().split())))\n    ans = rec(0, s, c)\n    if '-' in ans:\n        print(-1)\n    else:\n        print(''.join(ans))\n\nif __name__ == '__main__':\n    main()\n", "\n#\n# N, M = map(int, input().split())\n#\n# def rec(i, s, c):\n#     if i == M:\n#         return s\n#     if s[c[i][0]-1] == str(c[i][1]):\n#         return s\n#     if s[c[i][0]-1] == '-':\n#         s[c[i][0]-1] = str(c[i][1])\n#         return rec(i+1, s, c)\n#     else:\n#         s[c[i][0]-1] = str(c[i][1])\n#         return rec(i+1, s, c)\n#\n# def main():\n#     s = ['-' for i in range(N)]\n#     c = []\n#     for i in range(M):\n#         c.append(list(map(int, input().split())))\n#     ans = rec(0, s, c)\n#     if '-' in ans:\n#         print(-1)\n#     else:\n#         print(''.join(ans))\n#\n# if __name__ == '__main__':\n#     main()\n"]
2022-04-19 01:09:07.893921 size on output set 2
