2022-04-19 01:22:37.479176 num operations 1
2022-04-19 01:22:37.479195 size on input set 1
2022-04-19 01:22:44.407920 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef is_hard_to_enter(code):\n    \"\"\"\n    Returns True if the code is hard to enter, False otherwise.\n    \"\"\"\n    for i in range(len(code) - 1):\n        if code[i] == code[i+1]:\n            return True\n    return False\n\ndef main():\n    code = input()\n    if is_hard_to_enter(code):\n        print(\"Bad\")\n    else:\n        print(\"Good\")\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport math\nimport sys\n\ndef is_hard_to_enter(code):\n    \"\"\"\n    Returns True if the code is hard to enter, False otherwise.\n    \"\"\"\n    for i in range(len(code) - 1):\n        if code[i] == code[i+1]:\n            return True\n    return False\ndef is_prime(n):\n    if n <= 1:\n        return False\n    if n == 2 or n == 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    for i in range(5, int(math.sqrt(n)) + 1, 6):\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n    return True\n\ndef prime_divisors(n):\n    divisors = []\n    for i in range(2, n + 1):\n        if n % i == 0 and is_prime(i):\n            divisors.append(i)\n    return divisors\n\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    divisors = prime_divisors(n)\n    print(\" \".join(map(str, divisors)))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650331357,
  "object": "edit"
}
2022-04-19 01:22:44.408151 fix syntax errors 2 ['\nimport sys\n\ndef is_hard_to_enter(code):\n    """\n    Returns True if the code is hard to enter, False otherwise.\n    """\n    for i in range(len(code) - 1):\n        if code[i] == code[i+1]:\n            return True\n    return False\n\ndef main():\n    code = input()\n    if is_hard_to_enter(code):\n        print("Bad")\n    else:\n        print("Good")\n\nif __name__ == "__main__":\n    main()\n', '\nimport math\nimport sys\n\ndef is_hard_to_enter(code):\n    """\n    Returns True if the code is hard to enter, False otherwise.\n    """\n    for i in range(len(code) - 1):\n        if code[i] == code[i+1]:\n            return True\n    return False\ndef is_prime(n):\n    if n <= 1:\n        return False\n    if n == 2 or n == 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    for i in range(5, int(math.sqrt(n)) + 1, 6):\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n    return True\n\ndef prime_divisors(n):\n    divisors = []\n    for i in range(2, n + 1):\n        if n % i == 0 and is_prime(i):\n            divisors.append(i)\n    return divisors\n\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    divisors = prime_divisors(n)\n    print(" ".join(map(str, divisors)))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-19 01:22:44.408187 size on output set 2
2022-04-19 01:22:44.408198 num operations 1
2022-04-19 01:22:44.408204 size on input set 1
2022-04-19 01:22:47.223131 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ns = input()\n\nif s[0] == s[1] or s[1] == s[2] or s[2] == s[3]:\n    print(\"Bad\")\nelse:\n    print(\"Good\")\n"
    },
    {
      "index": 1,
      "text": "\nprint(\"Hello World\")\n"
    }
  ],
  "created": 1650331364,
  "object": "edit"
}
2022-04-19 01:22:47.223328 fix syntax errors 2 ['\ns = input()\n\nif s[0] == s[1] or s[1] == s[2] or s[2] == s[3]:\n    print("Bad")\nelse:\n    print("Good")\n', '\nprint("Hello World")\n']
2022-04-19 01:22:47.223348 size on output set 2
