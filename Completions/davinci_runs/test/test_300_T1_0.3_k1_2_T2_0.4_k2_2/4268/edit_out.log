2022-04-19 01:22:33.089713 num operations 1
2022-04-19 01:22:33.089732 size on input set 1
2022-04-19 01:22:35.206682 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\n\ndef main():\n    N, D = map(int, sys.stdin.readline().strip().split())\n    points = []\n    for i in range(N):\n        points.append(list(map(int, sys.stdin.readline().strip().split())))\n    count = 0\n    for i in range(N):\n        for j in range(i+1, N):\n            dist = 0\n            for k in range(D):\n                dist += (points[i][k] - points[j][k])**2\n            if dist**0.5 == int(dist**0.5):\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    N, D = map(int, sys.stdin.readline().strip().split())\n    points = []\n    for i in range(N):\n        points.append(list(map(int, sys.stdin.readline().strip().split())))\n    count = 0\n    for i in range(N):\n        for j in range(i+1, N):\n            dist = 0\n            for k in range(D):\n                dist += (points[i][k] - points[j][k])**2\n            if dist**0.5 == int(dist**0.5):\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650331353,
  "object": "edit"
}
2022-04-19 01:22:35.206896 fix syntax errors 2 ["import sys\n\ndef main():\n    N, D = map(int, sys.stdin.readline().strip().split())\n    points = []\n    for i in range(N):\n        points.append(list(map(int, sys.stdin.readline().strip().split())))\n    count = 0\n    for i in range(N):\n        for j in range(i+1, N):\n            dist = 0\n            for k in range(D):\n                dist += (points[i][k] - points[j][k])**2\n            if dist**0.5 == int(dist**0.5):\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    N, D = map(int, sys.stdin.readline().strip().split())\n    points = []\n    for i in range(N):\n        points.append(list(map(int, sys.stdin.readline().strip().split())))\n    count = 0\n    for i in range(N):\n        for j in range(i+1, N):\n            dist = 0\n            for k in range(D):\n                dist += (points[i][k] - points[j][k])**2\n            if dist**0.5 == int(dist**0.5):\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-19 01:22:35.206931 size on output set 2
2022-04-19 01:22:35.206942 num operations 1
2022-04-19 01:22:35.206948 size on input set 1
2022-04-19 01:22:37.109301 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import math\n\ndef main():\n    n, d = map(int, input().split())\n    points = []\n    for i in range(n):\n        points.append(list(map(int, input().split())))\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            distance = 0\n            for k in range(d):\n                distance += (points[i][k] - points[j][k]) ** 2\n            if math.sqrt(distance).is_integer():\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport math\n\ndef main():\n    n, d = map(int, input().split())\n    points = []\n    for i in range(n):\n        points.append(list(map(int, input().split())))\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            distance = 0\n            for k in range(d):\n                distance += (points[i][k] - points[j][k]) ** 2\n            if math.sqrt(distance).is_integer():\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650331355,
  "object": "edit"
}
2022-04-19 01:22:37.109499 fix syntax errors 2 ["import math\n\ndef main():\n    n, d = map(int, input().split())\n    points = []\n    for i in range(n):\n        points.append(list(map(int, input().split())))\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            distance = 0\n            for k in range(d):\n                distance += (points[i][k] - points[j][k]) ** 2\n            if math.sqrt(distance).is_integer():\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef main():\n    n, d = map(int, input().split())\n    points = []\n    for i in range(n):\n        points.append(list(map(int, input().split())))\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            distance = 0\n            for k in range(d):\n                distance += (points[i][k] - points[j][k]) ** 2\n            if math.sqrt(distance).is_integer():\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-19 01:22:37.109528 size on output set 2
