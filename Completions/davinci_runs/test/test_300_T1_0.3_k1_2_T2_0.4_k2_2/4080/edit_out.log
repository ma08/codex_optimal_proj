2022-04-19 00:56:45.040154 num operations 1
2022-04-19 00:56:45.040174 size on input set 1
2022-04-19 00:56:48.604820 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\nimport sys\nimport math\nimport heapq\nimport bisect\nimport random\nimport itertools\nimport collections\nimport functools\n\ndef solve(n, a, m, segs):\n    segs.sort(key=lambda x: x[1] - x[0])\n    segs.reverse()\n    # print(segs)\n    # print(a)\n    ans = 0\n    used = [False] * m\n    for i in range(m):\n        seg = segs[i]\n        if not used[i]:\n            for j in range(seg[0]-1, seg[1]):\n                a[j] -= 1\n            ans += 1\n            used[i] = True\n            for j in range(i+1, m):\n                seg2 = segs[j]\n                if not used[j] and seg2[0] <= seg[0] and seg2[1] >= seg[1]:\n                    used[j] = True\n    # print(a)\n    return max(a) - min(a), ans, [i+1 for i in range(m) if used[i]]\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    segs = []\n    for i in range(m):\n        l, r = map(int, input().split())\n        segs.append((l, r))\n    ans, q, c = solve(n, a, m, segs)\n    print(ans)\n    print(q)\n    print(' '.join(map(str, c)))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\nimport math\nimport heapq\nimport bisect\nimport random\nimport itertools\nimport collections\nimport functools\n\ndef solve(n, a, m, segs):\n    segs.sort(key=lambda x: x[1] - x[0])\n    segs.reverse()\n    print(segs)\n    print(a)\n    ans = 0\n    used = [False] * m\n    for i in range(m):\n        seg = segs[i]\n        if not used[i]:\n            for j in range(seg[0]-1, seg[1]):\n                a[j] -= 1\n            ans += 1\n            used[i] = True\n            for j in range(i+1, m):\n                seg2 = segs[j]\n                if not used[j] and seg2[0] <= seg[0] and seg2[1] >= seg[1]:\n                    used[j] = True\n    print(a)\n    return max(a) - min(a), ans, [i+1 for i in range(m) if used[i]]\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    segs = []\n    for i in range(m):\n        l, r = map(int, input().split())\n        segs.append((l, r))\n    ans, q, c = solve(n, a, m, segs)\n    print(ans)\n    print(q)\n    print(' '.join(map(str, c)))\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650329805,
  "object": "edit"
}
2022-04-19 00:56:48.605034 fix syntax errors 2 ["#!/usr/bin/env python3\n\nimport sys\nimport math\nimport heapq\nimport bisect\nimport random\nimport itertools\nimport collections\nimport functools\n\ndef solve(n, a, m, segs):\n    segs.sort(key=lambda x: x[1] - x[0])\n    segs.reverse()\n    # print(segs)\n    # print(a)\n    ans = 0\n    used = [False] * m\n    for i in range(m):\n        seg = segs[i]\n        if not used[i]:\n            for j in range(seg[0]-1, seg[1]):\n                a[j] -= 1\n            ans += 1\n            used[i] = True\n            for j in range(i+1, m):\n                seg2 = segs[j]\n                if not used[j] and seg2[0] <= seg[0] and seg2[1] >= seg[1]:\n                    used[j] = True\n    # print(a)\n    return max(a) - min(a), ans, [i+1 for i in range(m) if used[i]]\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    segs = []\n    for i in range(m):\n        l, r = map(int, input().split())\n        segs.append((l, r))\n    ans, q, c = solve(n, a, m, segs)\n    print(ans)\n    print(q)\n    print(' '.join(map(str, c)))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nimport math\nimport heapq\nimport bisect\nimport random\nimport itertools\nimport collections\nimport functools\n\ndef solve(n, a, m, segs):\n    segs.sort(key=lambda x: x[1] - x[0])\n    segs.reverse()\n    print(segs)\n    print(a)\n    ans = 0\n    used = [False] * m\n    for i in range(m):\n        seg = segs[i]\n        if not used[i]:\n            for j in range(seg[0]-1, seg[1]):\n                a[j] -= 1\n            ans += 1\n            used[i] = True\n            for j in range(i+1, m):\n                seg2 = segs[j]\n                if not used[j] and seg2[0] <= seg[0] and seg2[1] >= seg[1]:\n                    used[j] = True\n    print(a)\n    return max(a) - min(a), ans, [i+1 for i in range(m) if used[i]]\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    segs = []\n    for i in range(m):\n        l, r = map(int, input().split())\n        segs.append((l, r))\n    ans, q, c = solve(n, a, m, segs)\n    print(ans)\n    print(q)\n    print(' '.join(map(str, c)))\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-19 00:56:48.605077 size on output set 2
