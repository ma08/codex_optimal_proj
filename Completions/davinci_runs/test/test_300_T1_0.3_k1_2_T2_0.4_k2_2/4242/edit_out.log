2022-04-19 01:19:33.585376 num operations 1
2022-04-19 01:19:33.585393 size on input set 1
2022-04-19 01:19:35.659847 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().rstrip().split())\n\n# Find all divisors of a and b\ndivisors_a = []\ndivisors_b = []\nfor i in range(1, a + 1):\n    if a % i == 0:\n        divisors_a.append(i)\nfor i in range(1, b + 1):\n    if b % i == 0:\n        divisors_b.append(i)\n\n# Find the intersection of divisors_a and divisors_b\ndivisors = []\nfor i in divisors_a:\n    if i in divisors_b:\n        divisors.append(i)\n\n# Find the k-th largest divisor\ndivisors.sort(reverse=True)\nprint(divisors[k - 1])\n"
    },
    {
      "index": 1,
      "text": "import sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().rstrip().split())\n\n# Find all divisors of a and b\ndivisors_a = []\ndivisors_b = []\nfor i in range(1, a + 1):\n    if a % i == 0:\n        divisors_a.append(i)\nfor i in range(1, b + 1):\n    if b % i == 0:\n        divisors_b.append(i)\n\n# Find the intersection of divisors_a and divisors_b\ndivisors = []\nfor i in divisors_a:\n    if i in divisors_b:\n        divisors.append(i)\n\n# Find the k-th largest divisor\ndivisors.sort(reverse=True)\nprint(divisors[k - 1])\n"
    }
  ],
  "created": 1650331173,
  "object": "edit"
}
2022-04-19 01:19:35.660084 fix syntax errors 2 ['\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().rstrip().split())\n\n# Find all divisors of a and b\ndivisors_a = []\ndivisors_b = []\nfor i in range(1, a + 1):\n    if a % i == 0:\n        divisors_a.append(i)\nfor i in range(1, b + 1):\n    if b % i == 0:\n        divisors_b.append(i)\n\n# Find the intersection of divisors_a and divisors_b\ndivisors = []\nfor i in divisors_a:\n    if i in divisors_b:\n        divisors.append(i)\n\n# Find the k-th largest divisor\ndivisors.sort(reverse=True)\nprint(divisors[k - 1])\n', 'import sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().rstrip().split())\n\n# Find all divisors of a and b\ndivisors_a = []\ndivisors_b = []\nfor i in range(1, a + 1):\n    if a % i == 0:\n        divisors_a.append(i)\nfor i in range(1, b + 1):\n    if b % i == 0:\n        divisors_b.append(i)\n\n# Find the intersection of divisors_a and divisors_b\ndivisors = []\nfor i in divisors_a:\n    if i in divisors_b:\n        divisors.append(i)\n\n# Find the k-th largest divisor\ndivisors.sort(reverse=True)\nprint(divisors[k - 1])\n']
2022-04-19 01:19:35.660115 size on output set 2
2022-04-19 01:19:35.660127 num operations 1
2022-04-19 01:19:35.660133 size on input set 1
2022-04-19 01:19:37.547229 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().split())\n\n# Find all positive integers that divide both a and b\ndivisors = []\nfor i in range(1, min(a, b) + 1):\n    if a % i == 0 and b % i == 0:\n        divisors.append(i)\n\n# Print the k-th largest positive integer that divides both a and b\nprint(divisors[-k])\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().split())\n\n# Find all positive integers that divide both a and b\ndivisors = []\nfor i in range(1, min(a, b) + 1):\n    if a % i == 0 and b % i == 0:\n        divisors.append(i)\n\n# Print the k-th largest positive integer that divides both a and b\nprint(divisors[-k])\n"
    }
  ],
  "created": 1650331175,
  "object": "edit"
}
2022-04-19 01:19:37.547463 fix syntax errors 2 ['\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().split())\n\n# Find all positive integers that divide both a and b\ndivisors = []\nfor i in range(1, min(a, b) + 1):\n    if a % i == 0 and b % i == 0:\n        divisors.append(i)\n\n# Print the k-th largest positive integer that divides both a and b\nprint(divisors[-k])\n', '\nimport sys\n\n# Read input\na, b, k = map(int, sys.stdin.readline().split())\n\n# Find all positive integers that divide both a and b\ndivisors = []\nfor i in range(1, min(a, b) + 1):\n    if a % i == 0 and b % i == 0:\n        divisors.append(i)\n\n# Print the k-th largest positive integer that divides both a and b\nprint(divisors[-k])\n']
2022-04-19 01:19:37.547490 size on output set 1
