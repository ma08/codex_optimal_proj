2022-04-19 01:04:49.572575 num operations 1
2022-04-19 01:04:49.572593 size on input set 1
2022-04-19 01:04:54.172198 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# bf_calc is a function that calculates the result of a given expression\nimport re\n\ndef bf_calc(expr):\n    expr = expr.replace('+', ' + ')\n    expr = expr.replace('-', ' - ')\n    expr = expr.replace(' ', '')\n    nums = re.findall(r'\\d+', expr)\n    signs = re.findall(r'[+-]', expr)\n    result = int(nums[0])\n    for i in range(1, len(nums)):\n        if signs[i-1] == '+':\n            result += int(nums[i])\n        else:\n            result -= int(nums[i])\n    return result\n# bf_gen is a function that generates a brainfuck program that prints the result of a given expression\n\ndef bf_gen(expr):\n    result = bf_calc(expr)\n    output = ''\n    for i in range(0, result):\n        output += '+'\n    output += '>'\n    output += '.'\n    return output\n# main function\nif __name__ == '__main__':\n    expr = input()\n    print(bf_gen(expr))\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\nimport re\n\ndef bf_calc(expr):\n    #print(expr)\n    expr = expr.replace('+', ' + ')\n    expr = expr.replace('-', ' - ')\n    expr = expr.replace(' ', '')\n    #print(expr)\n    nums = re.findall(r'\\d+', expr)\n    #print(nums)\n    signs = re.findall(r'[+-]', expr)\n    #print(signs)\n    result = int(nums[0])\n    for i in range(1, len(nums)):\n        if signs[i-1] == '+':\n            result += int(nums[i])\n        else:\n            result -= int(nums[i])\n    #print(result)\n    return result\n\n\ndef bf_gen(expr):\n    result = bf_calc(expr)\n    #print(result)\n    output = ''\n    for i in range(0, result):\n        output += '+'\n    output += '>'\n    output += '.'\n    return output\n\nif __name__ == '__main__':\n    expr = sys.argv[1]\n    print(bf_gen(expr), end='')\n"
    }
  ],
  "created": 1650330289,
  "object": "edit"
}
2022-04-19 01:04:54.172440 fix syntax errors 2 ["\n# bf_calc is a function that calculates the result of a given expression\nimport re\n\ndef bf_calc(expr):\n    expr = expr.replace('+', ' + ')\n    expr = expr.replace('-', ' - ')\n    expr = expr.replace(' ', '')\n    nums = re.findall(r'\\d+', expr)\n    signs = re.findall(r'[+-]', expr)\n    result = int(nums[0])\n    for i in range(1, len(nums)):\n        if signs[i-1] == '+':\n            result += int(nums[i])\n        else:\n            result -= int(nums[i])\n    return result\n# bf_gen is a function that generates a brainfuck program that prints the result of a given expression\n\ndef bf_gen(expr):\n    result = bf_calc(expr)\n    output = ''\n    for i in range(0, result):\n        output += '+'\n    output += '>'\n    output += '.'\n    return output\n# main function\nif __name__ == '__main__':\n    expr = input()\n    print(bf_gen(expr))\n", "\nimport sys\nimport re\n\ndef bf_calc(expr):\n    #print(expr)\n    expr = expr.replace('+', ' + ')\n    expr = expr.replace('-', ' - ')\n    expr = expr.replace(' ', '')\n    #print(expr)\n    nums = re.findall(r'\\d+', expr)\n    #print(nums)\n    signs = re.findall(r'[+-]', expr)\n    #print(signs)\n    result = int(nums[0])\n    for i in range(1, len(nums)):\n        if signs[i-1] == '+':\n            result += int(nums[i])\n        else:\n            result -= int(nums[i])\n    #print(result)\n    return result\n\n\ndef bf_gen(expr):\n    result = bf_calc(expr)\n    #print(result)\n    output = ''\n    for i in range(0, result):\n        output += '+'\n    output += '>'\n    output += '.'\n    return output\n\nif __name__ == '__main__':\n    expr = sys.argv[1]\n    print(bf_gen(expr), end='')\n"]
2022-04-19 01:04:54.172480 size on output set 2
2022-04-19 01:04:54.172491 num operations 1
2022-04-19 01:04:54.172497 size on input set 1
2022-04-19 01:05:01.344770 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef brainfuck(expression):\n    expression = expression.replace('+', ' + ').replace('-', ' - ').replace(' ', '')\n    expression = expression.split()\n    result = 0\n    for i in range(0, len(expression), 2):\n        if i+1 < len(expression):\n            if expression[i] == '+':\n                result += int(expression[i+1])\n            else:\n                result -= int(expression[i+1])\n        result = result % 256\n    bf = ''\n    for i in range(result):\n        bf += '+'\n    bf += '>'\n    for i in range(result):\n        bf += '<'\n    bf += '[<+>-]<'\n    bf += '.'\n    return bf\n\nexpression = input()\nprint(brainfuck(expression))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef brainfuck(expression):\n    expression = expression.replace('+', ' + ').replace('-', ' - ').replace('*', ' * ').replace('/', ' / ')\n    expression = expression.split()\n    result = 0\n    if len(expression) == 1:\n        result = int(expression[0])\n    else:\n        result = int(expression[0])\n        for i in range(1, len(expression), 2):\n            if expression[i] == '+':\n                result += int(expression[i+1])\n            elif expression[i] == '-':\n                result -= int(expression[i+1])\n            elif expression[i] == '*':\n                result *= int(expression[i+1])\n            else:\n                result //= int(expression[i+1])\n    result = abs(result) % 256\n    bf = ''\n    for i in range(result):\n        bf += '+'\n    bf += '>'\n    for i in range(result):\n        bf += '<'\n    bf += '[<+>-]<'\n    bf += '.'\n    return bf\n\nexpression = input()\nprint(brainfuck(expression))\n"
    }
  ],
  "created": 1650330294,
  "object": "edit"
}
2022-04-19 01:05:01.344975 fix syntax errors 2 ["\n\ndef brainfuck(expression):\n    expression = expression.replace('+', ' + ').replace('-', ' - ').replace(' ', '')\n    expression = expression.split()\n    result = 0\n    for i in range(0, len(expression), 2):\n        if i+1 < len(expression):\n            if expression[i] == '+':\n                result += int(expression[i+1])\n            else:\n                result -= int(expression[i+1])\n        result = result % 256\n    bf = ''\n    for i in range(result):\n        bf += '+'\n    bf += '>'\n    for i in range(result):\n        bf += '<'\n    bf += '[<+>-]<'\n    bf += '.'\n    return bf\n\nexpression = input()\nprint(brainfuck(expression))\n", "\n\ndef brainfuck(expression):\n    expression = expression.replace('+', ' + ').replace('-', ' - ').replace('*', ' * ').replace('/', ' / ')\n    expression = expression.split()\n    result = 0\n    if len(expression) == 1:\n        result = int(expression[0])\n    else:\n        result = int(expression[0])\n        for i in range(1, len(expression), 2):\n            if expression[i] == '+':\n                result += int(expression[i+1])\n            elif expression[i] == '-':\n                result -= int(expression[i+1])\n            elif expression[i] == '*':\n                result *= int(expression[i+1])\n            else:\n                result //= int(expression[i+1])\n    result = abs(result) % 256\n    bf = ''\n    for i in range(result):\n        bf += '+'\n    bf += '>'\n    for i in range(result):\n        bf += '<'\n    bf += '[<+>-]<'\n    bf += '.'\n    return bf\n\nexpression = input()\nprint(brainfuck(expression))\n"]
2022-04-19 01:05:01.345025 size on output set 2
