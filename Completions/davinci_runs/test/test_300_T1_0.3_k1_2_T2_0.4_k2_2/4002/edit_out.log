2022-04-19 00:46:26.638121 num operations 1
2022-04-19 00:46:26.638131 size on input set 1
2022-04-19 00:46:32.823568 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    dp = [[0] * k for i in range(m + 1)]\n    for i in range(n):\n        for j in range(m):\n            for x in range(k - 1, -1, -1):\n                dp[j + 1][(x + a[i][j]) % k] = max(dp[j + 1][(x + a[i][j]) % k], dp[j][x] + a[i][j]) \n    print(dp[m][0])\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n, m, k = [int(x) for x in input().split()]\n    a = []\n    for i in range(n):\n        a.append([int(x) for x in input().split()])\n    dp = [[0] * (k + 1) for i in range(m + 1)]\n    for i in range(n):\n        for j in range(m):\n            for x in range(k):\n                dp[j + 1][(x + a[i][j]) % k] = max(dp[j + 1][(x + a[i][j]) % k],\n                                                   dp[j][x] + a[i][j])\n    print(dp[m][0])\n\n\nmain()\n"
    }
  ],
  "created": 1650329186,
  "object": "edit"
}
2022-04-19 00:46:32.823817 fix syntax errors 2 ['\n\ndef main():\n    n, m, k = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    dp = [[0] * k for i in range(m + 1)]\n    for i in range(n):\n        for j in range(m):\n            for x in range(k - 1, -1, -1):\n                dp[j + 1][(x + a[i][j]) % k] = max(dp[j + 1][(x + a[i][j]) % k], dp[j][x] + a[i][j]) \n    print(dp[m][0])\n\nmain()\n', '\ndef main():\n    n, m, k = [int(x) for x in input().split()]\n    a = []\n    for i in range(n):\n        a.append([int(x) for x in input().split()])\n    dp = [[0] * (k + 1) for i in range(m + 1)]\n    for i in range(n):\n        for j in range(m):\n            for x in range(k):\n                dp[j + 1][(x + a[i][j]) % k] = max(dp[j + 1][(x + a[i][j]) % k],\n                                                   dp[j][x] + a[i][j])\n    print(dp[m][0])\n\n\nmain()\n']
2022-04-19 00:46:32.823850 size on output set 2
2022-04-19 00:46:32.823860 num operations 1
2022-04-19 00:46:32.823866 size on input set 1
2022-04-19 00:46:34.928987 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, m, k = map(int, input().split())\n\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0] * (m + 1) for i in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if j <= m // 2:\n            dp[i][j] = max(dp[i][j - 1], dp[i - 1][j], dp[i - 1][j - 1] + a[i - 1][j - 1])\n        else:\n            dp[i][j] = max(dp[i][j - 1], dp[i - 1][j])\n\nprint(dp[n][m - m // 2])\n"
    },
    {
      "index": 1,
      "text": "n, m, k = map(int, input().split())\n\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0] * (m + 1) for i in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if j <= m // 2:\n            dp[i][j] = max(dp[i][j - 1], dp[i - 1][j], dp[i - 1][j - 1] + a[i - 1][j - 1])\n        else:\n            dp[i][j] = max(dp[i][j - 1], dp[i - 1][j])\n\nprint(dp[n][m - m // 2])\n"
    }
  ],
  "created": 1650329192,
  "object": "edit"
}
2022-04-19 00:46:34.929193 fix syntax errors 2 ['\nn, m, k = map(int, input().split())\n\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0] * (m + 1) for i in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if j <= m // 2:\n            dp[i][j] = max(dp[i][j - 1], dp[i - 1][j], dp[i - 1][j - 1] + a[i - 1][j - 1])\n        else:\n            dp[i][j] = max(dp[i][j - 1], dp[i - 1][j])\n\nprint(dp[n][m - m // 2])\n', 'n, m, k = map(int, input().split())\n\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0] * (m + 1) for i in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if j <= m // 2:\n            dp[i][j] = max(dp[i][j - 1], dp[i - 1][j], dp[i - 1][j - 1] + a[i - 1][j - 1])\n        else:\n            dp[i][j] = max(dp[i][j - 1], dp[i - 1][j])\n\nprint(dp[n][m - m // 2])\n']
2022-04-19 00:46:34.929224 size on output set 2
