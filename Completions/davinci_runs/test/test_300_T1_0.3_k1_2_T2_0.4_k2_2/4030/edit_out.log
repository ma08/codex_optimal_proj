2022-04-19 00:50:29.292550 num operations 1
2022-04-19 00:50:29.292570 size on input set 1
2022-04-19 00:50:53.788048 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n# SOLUTION 1\nn = int(input())\ns = input()\n\n# Initialize the array with 1s\nc = [1] * n\n\n# Keep track of the last character that was colored\nlast = s[0]\n\n# Keep track of the last color used\nlast_color = 1\n\n# Loop through the characters in the string\nfor i in range(1, n):\n    # If the current character is greater than the last character, then use the next color\n    if s[i] > last:\n        last_color += 1\n    # Otherwise, use the same color\n    else:\n        last_color = 1\n    # Update the color array\n    c[i] = last_color\n    # Update the last character\n    last = s[i]\n\n# Print the number of colors used\nprint(max(c))\n# Print the color array\nprint(*c)\n\n\n# SOLUTION 2\nn = int(input())\ns = input()\n\n# Initialize the array with 1s\nc = [1] * n\n\n# Keep track of the last character that was colored\nlast = s[0]\n\n# Keep track of the last color used\nlast_color = 1\n\n# Loop through the characters in the string\nfor i in range(1, n):\n    # If the current character is greater than the last character, then use the next color\n    if s[i] > last:\n        last_color += 1\n    # Otherwise, use the same color\n    else:\n        last_color = 1\n    # Update the color array\n    c[i] = last_color\n    # Update the last character\n    last = s[i]\n\n# Print the number of colors used\nprint(max(c))\n# Print the color array\nprint(*c)\n"
    },
    {
      "index": 1,
      "text": "\n\n# # SOLUTION\n# n = int(input())\n# s = input()\n\n# # Initialize the array with 1s\n# c = [1] * n\n\n# # Keep track of the last character that was colored\n# last = s[0]\n\n# Keep track of the last color used\nlast_color = 1\n\n# Loop through the characters in the string\nfor i in range(1, n):\n    # If the current character is greater than the last character, then use the next color\n    if s[i] > last:\n        last_color += 1\n    # Otherwise, use the same color\n    else:\n        last_color = 1\n    # Update the color array\n    c[i] = last_color\n    # Update the last character\n    last = s[i]\n\n# Print the number of colors used\nprint(max(c))\n# Print the color array\nprint(*c)\n"
    }
  ],
  "created": 1650329429,
  "object": "edit"
}
2022-04-19 00:50:53.788267 fix syntax errors 2 ['\n\n# SOLUTION 1\nn = int(input())\ns = input()\n\n# Initialize the array with 1s\nc = [1] * n\n\n# Keep track of the last character that was colored\nlast = s[0]\n\n# Keep track of the last color used\nlast_color = 1\n\n# Loop through the characters in the string\nfor i in range(1, n):\n    # If the current character is greater than the last character, then use the next color\n    if s[i] > last:\n        last_color += 1\n    # Otherwise, use the same color\n    else:\n        last_color = 1\n    # Update the color array\n    c[i] = last_color\n    # Update the last character\n    last = s[i]\n\n# Print the number of colors used\nprint(max(c))\n# Print the color array\nprint(*c)\n\n\n# SOLUTION 2\nn = int(input())\ns = input()\n\n# Initialize the array with 1s\nc = [1] * n\n\n# Keep track of the last character that was colored\nlast = s[0]\n\n# Keep track of the last color used\nlast_color = 1\n\n# Loop through the characters in the string\nfor i in range(1, n):\n    # If the current character is greater than the last character, then use the next color\n    if s[i] > last:\n        last_color += 1\n    # Otherwise, use the same color\n    else:\n        last_color = 1\n    # Update the color array\n    c[i] = last_color\n    # Update the last character\n    last = s[i]\n\n# Print the number of colors used\nprint(max(c))\n# Print the color array\nprint(*c)\n', '\n\n# # SOLUTION\n# n = int(input())\n# s = input()\n\n# # Initialize the array with 1s\n# c = [1] * n\n\n# # Keep track of the last character that was colored\n# last = s[0]\n\n# Keep track of the last color used\nlast_color = 1\n\n# Loop through the characters in the string\nfor i in range(1, n):\n    # If the current character is greater than the last character, then use the next color\n    if s[i] > last:\n        last_color += 1\n    # Otherwise, use the same color\n    else:\n        last_color = 1\n    # Update the color array\n    c[i] = last_color\n    # Update the last character\n    last = s[i]\n\n# Print the number of colors used\nprint(max(c))\n# Print the color array\nprint(*c)\n']
2022-04-19 00:50:53.788309 size on output set 2
2022-04-19 00:50:53.788322 num operations 1
2022-04-19 00:50:53.788327 size on input set 1
2022-04-19 00:50:57.089165 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn = int(input())\ns = input()\n\ndef solve(n, s):\n    # Write your code here\n    pass\n\nprint(solve(n, s))\n"
    },
    {
      "index": 1,
      "text": "\n\n#!/bin/python3\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n# Complete the solve function below.\ndef solve(n, s):\n    # Write your code here\n    pass\n\nn = int(input())\ns = input()\n\nprint(solve(n, s))\n"
    }
  ],
  "created": 1650329453,
  "object": "edit"
}
2022-04-19 00:50:57.089396 fix syntax errors 2 ['\nn = int(input())\ns = input()\n\ndef solve(n, s):\n    # Write your code here\n    pass\n\nprint(solve(n, s))\n', '\n\n#!/bin/python3\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n# Complete the solve function below.\ndef solve(n, s):\n    # Write your code here\n    pass\n\nn = int(input())\ns = input()\n\nprint(solve(n, s))\n']
2022-04-19 00:50:57.089438 size on output set 2
