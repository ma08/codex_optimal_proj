["import sys\nfrom collections import deque\n\n\n\ndef bfs(graph, start):\n    visited = [False] * (len(graph) + 1)\n    queue = deque([start])\n    visited[start] = True\n\n    while queue:\n        v = queue.popleft()\n        print(v, end=' ')\n        for i in graph[v]:\n            if not visited[i]:\n                queue.append(i)\n                visited[i] = True\n\n\nif __name__ == '__main__':\n    A, B, C = map(int, sys.stdin.readline().rstrip().split())\n    print(min(B // A, C))\n", "#!/usr/bin/env python3\n\na, b, c = map(int, input().split())\nprint(min(b // a, c))\n", "import sys\n\nif __name__ == '__main__':\n    N, M = map(int, sys.stdin.readline().rstrip().split())\n    print((N - 1) * (M - 1))\n", "a, b, c = map(int, input().split())\nprint(min(b // a, c))\n"]