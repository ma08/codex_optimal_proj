["\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = [0] + a\n    dp = [[1, 1] for _ in range(n + 1)]\n    for i in range(2, n + 1):\n        if a[i] > a[i - 1]:\n            dp[i][0] = dp[i - 1][0] + 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n        else:\n            dp[i][0] = 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n    print(max(dp[-1]))\n    ans = []\n    i = n\n    while i > 0:\n        if dp[i][0] > dp[i][1]:\n            ans.append(\"L\")\n            i -= 1\n        else:\n            ans.append(\"R\")\n            i -= dp[i][1]\n    print(ans[::-1])\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = [0] + a\n    dp = [[0, 0] for _ in range(n + 1)]\n    dp[1][0] = 1\n    dp[1][1] = 1\n    for i in range(2, n + 1):\n        if a[i] > a[i - 1]:\n            dp[i][0] = dp[i - 1][0] + 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n        else:\n            dp[i][0] = 1\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0])\n    print(max(dp[-1]))\n    ans = \"\"\n    i = n\n    while i > 0:\n        if dp[i][0] > dp[i][1]:\n            ans += \"L\"\n            i -= 1\n        else:\n            ans += \"R\"\n            i -= dp[i][1]\n    print(ans[::-1])\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n    assert all(1 <= x <= n for x in a) \n    assert len(set(a)) == n\n\n    # TODO: Solve the problem\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    assert len(a) == n\n    assert all(1 <= x <= n for x in a) and len(set(a)) == n\n    assert len(set(a)) == n\n\n    # TODO: Solve the problem\n\nif __name__ == \"__main__\":\n    main()\n"]