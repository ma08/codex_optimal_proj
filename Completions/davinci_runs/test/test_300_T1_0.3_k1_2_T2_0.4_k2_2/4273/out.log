2022-04-18 21:50:58.657858 """
There are N people. The name of the i-th person is S_i.
We would like to choose three people so that the following conditions are met:
 - The name of every chosen person begins with M, A, R, C or H.
 - There are no multiple people whose names begin with the same letter.
How many such ways are there to choose three people, disregarding order?
Note that the answer may not fit into a 32-bit integer type.

-----Constraints-----
 - 1 \leq N \leq 10^5
 - S_i consists of uppercase English letters.
 - 1 \leq |S_i| \leq 10
 - S_i \neq S_j (i \neq j)

-----Input-----
Input is given from Standard Input in the following format:
N
S_1
:
S_N

-----Output-----
If there are x ways to choose three people so that the given conditions are met, print x.

-----Sample Input-----
5
MASHIKE
RUMOI
OBIRA
HABORO
HOROKANAI

-----Sample Output-----
2

We can choose three people with the following names:
 - MASHIKE, RUMOI, HABORO
 - MASHIKE, RUMOI, HOROKANAI
Thus, we have two ways.
"""
2022-04-18 21:50:58.657907 --------------------------
2022-04-18 21:51:30.153814 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = [input() for _ in range(n)]\n    s = [i[0] for i in s if i[0] in ['M', 'A', 'R', 'C', 'H']]\n    s = list(set(s))\n    print(len(s) * (len(s) - 1) * (len(s) - 2) // 6)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    names = []\n    for i in range(n):\n        names.append(input())\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if names[i][0] == names[j][0] or names[i][0] == names[k][0] or names[j][0] == names[k][0]:\n                    continue\n                if names[i][0] != \"M\" and names[i][0] != \"A\" and names[i][0] != \"R\" and names[i][0] != \"C\" and names[i][0] != \"H\":\n                    continue\n                if names[j][0] != \"M\" and names[j][0] != \"A\" and names[j][0] != \"R\" and names[j][0] != \"C\" and names[j][0] != \"H\":\n                    continue\n                if names[k][0] != \"M\" and names[k][0] != \"A\" and names[k][0] != \"R\" and names[k][0] != \"C\" and names[k][0] != \"H\":\n                    continue\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()"
    }
  ],
  "created": 1650318658,
  "id": "cmpl-4yTYoshskbyDHV2geZUWyWSWLWw5s",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-18 21:51:30.154081 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    s = [input() for _ in range(n)]\n    s = [i[0] for i in s if i[0] in ['M', 'A', 'R', 'C', 'H']]\n    s = list(set(s))\n    print(len(s) * (len(s) - 1) * (len(s) - 2) // 6)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-18 21:51:30.154119 REASON stop
2022-04-18 21:51:30.371101 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    names = []\n    for i in range(n):\n        names.append(input())\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if names[i][0] == names[j][0] or names[i][0] == names[k][0] or names[j][0] == names[k][0]:\n                    continue\n                if names[i][0] != \"M\" and names[i][0] != \"A\" and names[i][0] != \"R\" and names[i][0] != \"C\" and names[i][0] != \"H\":\n                    continue\n                if names[j][0] != \"M\" and names[j][0] != \"A\" and names[j][0] != \"R\" and names[j][0] != \"C\" and names[j][0] != \"H\":\n                    continue\n                if names[k][0] != \"M\" and names[k][0] != \"A\" and names[k][0] != \"R\" and names[k][0] != \"C\" and names[k][0] != \"H\":\n                    continue\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-18 21:51:30.371262 REASON stop
