2022-04-19 01:24:11.823592 num operations 1
2022-04-19 01:24:11.823612 size on input set 1
2022-04-19 01:24:14.932970 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n# SOLUTION\nimport sys\n\nclass Query:\n    def __init__(self):\n        self.k = 0\n        self.n = 0\n        self.a = 0\n        self.b = 0\ndef read_queries():\n    q = int(input())\n    queries = []\n    for _ in range(q):\n        query = Query()\n        query.k, query.n, query.a, query.b = map(int, input().split())\n        queries.append(query)\n    return queries\n\ndef write_responses(result):\n    print('\\n'.join(map(str, result)))\n\ndef solve_query(query):\n    k = query.k\n    n = query.n\n    a = query.a\n    b = query.b\n    if k < n*b:\n        return -1\n    if k < n*a:\n        return 0\n    k -= n*a\n    return n - k//(a-b)\n\ndef solve(queries):\n    result = []\n    for query in queries:\n        result.append(solve_query(query))\n    return result\n\nif __name__ == '__main__':\n    write_responses(solve(read_queries()))\n"
    },
    {
      "index": 1,
      "text": "\n#\n# SOLUTION\n\nimport sys\n\nclass Query:\n    def __init__(self):\n        self.k = 0\n        self.n = 0\n        self.a = 0\n        self.b = 0\n\ndef read_queries():\n    q = int(input())\n    queries = []\n    for _ in range(q):\n        query = Query()\n        query.k, query.n, query.a, query.b = map(int, input().split())\n        queries.append(query)\n    return queries\n\ndef write_responses(result):\n    print('\\n'.join(map(str, result)))\n\ndef solve_query(query):\n    k = query.k\n    n = query.n\n    a = query.a\n    b = query.b\n    if k < n*b:\n        return -1\n    if k < n*a:\n        return 0\n    k -= n*a\n    return n - k//(a-b)\n\ndef solve(queries):\n    result = []\n    for query in queries:\n        result.append(solve_query(query))\n    return result\n\nif __name__ == '__main__':\n    write_responses(solve(read_queries()))\n"
    }
  ],
  "created": 1650331451,
  "object": "edit"
}
2022-04-19 01:24:14.933190 fix syntax errors 2 ["\n# SOLUTION\nimport sys\n\nclass Query:\n    def __init__(self):\n        self.k = 0\n        self.n = 0\n        self.a = 0\n        self.b = 0\ndef read_queries():\n    q = int(input())\n    queries = []\n    for _ in range(q):\n        query = Query()\n        query.k, query.n, query.a, query.b = map(int, input().split())\n        queries.append(query)\n    return queries\n\ndef write_responses(result):\n    print('\\n'.join(map(str, result)))\n\ndef solve_query(query):\n    k = query.k\n    n = query.n\n    a = query.a\n    b = query.b\n    if k < n*b:\n        return -1\n    if k < n*a:\n        return 0\n    k -= n*a\n    return n - k//(a-b)\n\ndef solve(queries):\n    result = []\n    for query in queries:\n        result.append(solve_query(query))\n    return result\n\nif __name__ == '__main__':\n    write_responses(solve(read_queries()))\n", "\n#\n# SOLUTION\n\nimport sys\n\nclass Query:\n    def __init__(self):\n        self.k = 0\n        self.n = 0\n        self.a = 0\n        self.b = 0\n\ndef read_queries():\n    q = int(input())\n    queries = []\n    for _ in range(q):\n        query = Query()\n        query.k, query.n, query.a, query.b = map(int, input().split())\n        queries.append(query)\n    return queries\n\ndef write_responses(result):\n    print('\\n'.join(map(str, result)))\n\ndef solve_query(query):\n    k = query.k\n    n = query.n\n    a = query.a\n    b = query.b\n    if k < n*b:\n        return -1\n    if k < n*a:\n        return 0\n    k -= n*a\n    return n - k//(a-b)\n\ndef solve(queries):\n    result = []\n    for query in queries:\n        result.append(solve_query(query))\n    return result\n\nif __name__ == '__main__':\n    write_responses(solve(read_queries()))\n"]
2022-04-19 01:24:14.933227 size on output set 2
2022-04-19 01:24:14.933238 num operations 1
2022-04-19 01:24:14.933244 size on input set 1
2022-04-19 01:24:17.548618 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef max_play_turns(k, n, a, b):\n    if k <= b:\n        return -1\n    if a == b:\n        return n\n    if k % a == 0:\n        return n - 1\n    if k % b == 0:\n        return n - 1\n    if k % a < k % b:\n        return n - (k % a)\n    return n - (k % b)\n\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        k, n, a, b = map(int, input().split())\n        print(max_play_turns(k, n, a, b))\n"
    },
    {
      "index": 1,
      "text": "\n\ndef max_play_turns(k, n, a, b):\n    if k <= b:\n        return -1\n    if a == b:\n        return n\n    if k % a == 0:\n        return n - 1\n    if k % b == 0:\n        return n - 1\n    if k % a < k % b:\n        return n - (k % a) + 1\n    return n - (k % b) + 1\n\n\nif __name__ == \"__main__\":\n    q = int(input())\n    for _ in range(q):\n        k, n, a, b = map(int, input().split())\n        print(max_play_turns(k, n, a, b))\n"
    }
  ],
  "created": 1650331454,
  "object": "edit"
}
2022-04-19 01:24:17.548865 fix syntax errors 2 ['\ndef max_play_turns(k, n, a, b):\n    if k <= b:\n        return -1\n    if a == b:\n        return n\n    if k % a == 0:\n        return n - 1\n    if k % b == 0:\n        return n - 1\n    if k % a < k % b:\n        return n - (k % a)\n    return n - (k % b)\n\n\nif __name__ == "__main__":\n    q = int(input())\n    for _ in range(q):\n        k, n, a, b = map(int, input().split())\n        print(max_play_turns(k, n, a, b))\n', '\n\ndef max_play_turns(k, n, a, b):\n    if k <= b:\n        return -1\n    if a == b:\n        return n\n    if k % a == 0:\n        return n - 1\n    if k % b == 0:\n        return n - 1\n    if k % a < k % b:\n        return n - (k % a) + 1\n    return n - (k % b) + 1\n\n\nif __name__ == "__main__":\n    q = int(input())\n    for _ in range(q):\n        k, n, a, b = map(int, input().split())\n        print(max_play_turns(k, n, a, b))\n']
2022-04-19 01:24:17.548896 size on output set 2
