2022-04-19 01:20:04.347076 num operations 1
2022-04-19 01:20:04.347093 size on input set 1
2022-04-19 01:20:11.135733 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport math\n\ndef main(): \n    n = int(input())\n    points = []\n    for i in range(n): \n        points.append([float(x) for x in input().split()])\n\n    angles = []\n    for i in range(n): \n        for j in range(i + 1, n):\n            angle = math.atan2(points[j][1] - points[i][1], points[j][0] - points[i][0]) \n            angles.append(angle)\n\n    angles.sort() \n    angles.append(angles[0] + 2 * math.pi)\n\n    max_angle = 0\n    for i in range(n): \n        angle = angles[i + 1] - angles[i]\n        if angle > max_angle: \n            max_angle = angle\n\n    print(math.degrees(max_angle))\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    points = []\n    for i in range(n):\n        points.append([float(x) for x in sys.stdin.readline().split()])\n\n    angles = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            angle = math.atan2(points[j][1] - points[i][1], points[j][0] - points[i][0])\n            angles.append(angle)\n\n    angles.sort()\n    angles.append(angles[0] + 2 * math.pi)\n\n    max_angle = 0\n    for i in range(n):\n        angle = angles[i + 1] - angles[i]\n        if angle > max_angle:\n            max_angle = angle\n\n    print(round(math.degrees(max_angle)))\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650331204,
  "object": "edit"
}
2022-04-19 01:20:11.135947 fix syntax errors 2 ['\nimport math\n\ndef main(): \n    n = int(input())\n    points = []\n    for i in range(n): \n        points.append([float(x) for x in input().split()])\n\n    angles = []\n    for i in range(n): \n        for j in range(i + 1, n):\n            angle = math.atan2(points[j][1] - points[i][1], points[j][0] - points[i][0]) \n            angles.append(angle)\n\n    angles.sort() \n    angles.append(angles[0] + 2 * math.pi)\n\n    max_angle = 0\n    for i in range(n): \n        angle = angles[i + 1] - angles[i]\n        if angle > max_angle: \n            max_angle = angle\n\n    print(math.degrees(max_angle))\n\nif __name__ == "__main__":\n    main()\n', 'import sys\n\nimport math\n\ndef main():\n    n = int(sys.stdin.readline())\n    points = []\n    for i in range(n):\n        points.append([float(x) for x in sys.stdin.readline().split()])\n\n    angles = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            angle = math.atan2(points[j][1] - points[i][1], points[j][0] - points[i][0])\n            angles.append(angle)\n\n    angles.sort()\n    angles.append(angles[0] + 2 * math.pi)\n\n    max_angle = 0\n    for i in range(n):\n        angle = angles[i + 1] - angles[i]\n        if angle > max_angle:\n            max_angle = angle\n\n    print(round(math.degrees(max_angle)))\n\nif __name__ == "__main__":\n    main()\n']
2022-04-19 01:20:11.135983 size on output set 2
