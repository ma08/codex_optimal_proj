["\n\ndef main():\n    n = int(input())\n    segments = []\n    for i in range(n):\n        segments.append(list(map(int, input().split())))\n    segments.sort(key=lambda x: x[0])\n    max_len = 0\n    for i in range(n):\n        if i == 0:\n            max_len = max(max_len, segments[i+1][1] - segments[i][0])\n        elif i == n-1:\n            max_len = max(max_len, segments[i][1] - segments[i-1][0])\n        else:\n            max_len = max(max_len, segments[i][1] - segments[i-1][0], segments[i+1][1] - segments[i][0])\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    segments = []\n    for i in range(n):\n        segments.append(list(map(int, input().split())))\n    segments.sort(key=lambda x: x[1])\n    max_len = 0\n    for i in range(n):\n        if i == 0:\n            max_len = max(max_len, segments[i+1][1] - segments[i][0])\n        elif i == n-1:\n            max_len = max(max_len, segments[i][1] - segments[i-1][0])\n        else:\n            max_len = max(max_len, segments[i][1] - segments[i-1][0], segments[i+1][1] - segments[i][0])\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "\n# Solution\n\nn = int(input())\n\nleft = []\nright = []\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left.append(l)\n    right.append(r)\n\nleft.sort()\nright.sort()\n\nif n == 2:\n    print(right[1] - left[0])\nelse:\n    print(max(right[n - 2] - left[0], right[n - 1] - left[1], right[n - 1] - left[0]))\n"]