2022-04-18 20:08:44.440561 """
You are given an integer sequence $a_1, a_2, \dots, a_n$.

Find the number of pairs of indices $(l, r)$ ($1 \le l \le r \le n$) such that the value of median of $a_l, a_{l+1}, \dots, a_r$ is exactly the given number $m$.

The median of a sequence is the value of an element which is in the middle of the sequence after sorting it in non-decreasing order. If the length of the sequence is even, the left of two middle elements is used.

For example, if $a=[4, 2, 7, 5]$ then its median is $4$ since after sorting the sequence, it will look like $[2, 4, 5, 7]$ and the left of two middle elements is equal to $4$. The median of $[7, 1, 2, 9, 6]$ equals $6$ since after sorting, the value $6$ will be in the middle of the sequence.

Write a program to find the number of pairs of indices $(l, r)$ ($1 \le l \le r \le n$) such that the value of median of $a_l, a_{l+1}, \dots, a_r$ is exactly the given number $m$.


-----Input-----

The first line contains integers $n$ and $m$ ($1 \le n,m \le 2\cdot10^5$) â€” the length of the given sequence and the required value of the median.

The second line contains an integer sequence $a_1, a_2, \dots, a_n$ ($1 \le a_i \le 2\cdot10^5$).


-----Output-----

Print the required number.


-----Examples-----
Input
5 4
1 4 5 60 4

Output
8

Input
3 1
1 1 1

Output
6

Input
15 2
1 2 3 1 2 3 1 2 3 1 2 3 1 2 3

Output
97



-----Note-----

In the first example, the suitable pairs of indices are: $(1, 3)$, $(1, 4)$, $(1, 5)$, $(2, 2)$, $(2, 3)$, $(2, 5)$, $(4, 5)$ and $(5, 5)$.
"""
2022-04-18 20:08:44.440586 --------------------------
2022-04-18 20:09:06.912652 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef median(a, l, r):\n    if (r - l) % 2 == 0:\n        return a[(l + r) // 2]\n    else:\n        return a[(l + r) // 2 + 1]\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    a.sort()\n\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(a, i, j) == m:\n                count += 1\n\n    print(count)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\n#-----Solution-----\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = 0\n\nfor i in range(n):\n    for j in range(i, n):\n        if (j - i + 1) % 2 == 1:\n            if a[(j + i) // 2] == m:\n                count += 1\n        else:\n            if a[(j + i) // 2] == m or a[(j + i) // 2 + 1] == m:\n                count += 1\n\nprint(count)"
    }
  ],
  "created": 1650312524,
  "id": "cmpl-4yRxsekcV208cMrB0aKXJXXqFpR7J",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-18 20:09:06.912933 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef median(a, l, r):\n    if (r - l) % 2 == 0:\n        return a[(l + r) // 2]\n    else:\n        return a[(l + r) // 2 + 1]\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n\n    a.sort()\n\n    count = 0\n    for i in range(n):\n        for j in range(i, n):\n            if median(a, i, j) == m:\n                count += 1\n\n    print(count)\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-18 20:09:06.912976 REASON stop
2022-04-18 20:09:06.949085 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\n#-----Solution-----\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ncount = 0\n\nfor i in range(n):\n    for j in range(i, n):\n        if (j - i + 1) % 2 == 1:\n            if a[(j + i) // 2] == m:\n                count += 1\n        else:\n            if a[(j + i) // 2] == m or a[(j + i) // 2 + 1] == m:\n                count += 1\n\nprint(count)"
}
2022-04-18 20:09:06.949248 REASON stop
