["import sys\nsys.setrecursionlimit(10**6)\n\ndef dfs(i, j):\n    if dp[i][j] >= 0:\n        return dp[i][j]\n    if j == 0:\n        dp[i][j] = 0\n    elif i < k:\n        dp[i][j] = -1\n    else:\n        dp[i][j] = max(dfs(i-1, j), dfs(i-k, j-1) + a[i-1])\n    return dp[i][j]\n\n\ndef main():\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [[-1]*(x+1) for _ in range(n+1)]\n    print(dfs(n, x))\n\nmain()\n", "# coding: utf-8\n\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\n    exit()\n\ndp = [[0] * (x + 1) for i in range(n + 1)]\n\nfor i in range(1, n + 1):\n    for j in range(1, x + 1):\n        if j < k:\n            dp[i][j] = dp[i - 1][j]\n        else:\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - k] + sum(a[i - k:i]))\n\nprint(dp[n][x])\n", "\ndef solve():\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    \n    if x < k:\n        print(-1)\n        exit()\n    \n    dp = [[0] * (x + 1) for _ in range(n + 1)]\n    \n    for i in range(1, n + 1):\n        for j in range(1, x + 1):\n            if j < k:\n                dp[i][j] = dp[i - 1][j]\n            else:\n                dp[i][j] = max(dp[i - 1][j], dp[i - k][j - k] + sum(a[i - k:i]))\n    \n    print(dp[n][x])\n", "\ndef main():\n    n, k, x = map(int, input().split())\n    a = list(map(int, input().split()))\n    dp = [[0]*(x+1) for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            dp[i][j] = dp[i-1][j]\n            if i >= k:\n                dp[i][j] = max(dp[i][j], dp[i-k][j-1] + a[i-1])\n    print(dp[n][x])\n\nmain()\n"]