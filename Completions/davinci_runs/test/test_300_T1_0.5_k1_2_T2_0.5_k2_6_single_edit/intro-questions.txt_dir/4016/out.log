2022-04-09 18:04:49.623237 """
You are given a string $t$ consisting of $n$ lowercase Latin letters and an integer number $k$.

Let's define a substring of some string $s$ with indices from $l$ to $r$ as $s[l \dots r]$.

Your task is to construct such string $s$ of minimum possible length that there are exactly $k$ positions $i$ such that $s[i \dots i + n - 1] = t$. In other words, your task is to construct such string $s$ of minimum possible length that there are exactly $k$ substrings of $s$ equal to $t$.

It is guaranteed that the answer is always unique.


-----Input-----

The first line of the input contains two integers $n$ and $k$ ($1 \le n, k \le 50$) â€” the length of the string $t$ and the number of substrings.

The second line of the input contains the string $t$ consisting of exactly $n$ lowercase Latin letters.


-----Output-----

Print such string $s$ of minimum possible length that there are exactly $k$ substrings of $s$ equal to $t$.

It is guaranteed that the answer is always unique.


-----Examples-----
Input
3 4
aba

Output
ababababa

Input
3 2
cat

Output
catcat
"""
2022-04-09 18:04:49.623255 --------------------------
2022-04-09 18:04:58.195547 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nn, k = map(int, input().split())\nt = input()\n\nans = \"\"\nfor i in range(n):\n    if i < (k - 1) % n:\n        ans += t[i]\n    else:\n        ans += t[(k - 1) % n]\n\nprint(ans)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    t = input()\n    print(t*(k//n) + t[:k%n])\n\nif __name__ == \"__main__\":\n    main()"
    }
  ],
  "created": 1649541890,
  "id": "cmpl-4vDUI3befwQQSik5F1NYEDFbRqCHz",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-09 18:04:58.195730 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nn, k = map(int, input().split())\nt = input()\n\nans = \"\"\nfor i in range(n):\n    if i < (k - 1) % n:\n        ans += t[i]\n    else:\n        ans += t[(k - 1) % n]\n\nprint(ans)"
}
2022-04-09 18:04:58.195776 REASON stop
2022-04-09 18:04:58.197273 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef main():\n    n, k = map(int, input().split())\n    t = input()\n    print(t*(k//n) + t[:k%n])\n\nif __name__ == \"__main__\":\n    main()"
}
2022-04-09 18:04:58.197434 REASON stop
