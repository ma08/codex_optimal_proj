2022-04-19 05:57:29.472165 num operations 1
2022-04-19 05:57:29.472180 size on input set 1
2022-04-19 05:57:36.358436 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nS = input()\n#S = \"ATCODER\"\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n\nS = input()\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if not (S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\"):\n        ans += 1\n            break\n\nprint(ans)\n"
    },
    {
      "index": 2,
      "text": "\n\n# S = input()\nS = 'ATCODER'\nans = 1\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == 'A' or S[i] == 'C' or S[i] == 'G' or S[i] == 'T':\n            ans += 1\n            ans = max(ans, j - i)\n        else:\n            break\n\nprint(ans)\n"
    },
    {
      "index": 3,
      "text": "\n#S = input()\nS = \"ATCODER\"\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n"
    },
    {
      "index": 4,
      "text": "\n\nS = input()\nans = 0\n\nfor i in S:\n    if i == \"A\" or i == \"C\" or i == \"G\" or i == \"T\":\n        ans += 1\n    else:\n        ans = 0\n\nprint(ans)\n"
    },
    {
      "index": 5,
      "text": "\n\nS = input()\n#S = \"ATCODER\"\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == \"A\" or S[i] == \"C\" or S[i] == \"G\" or S[i] == \"T\":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n"
    }
  ],
  "created": 1650347849,
  "object": "edit"
}
2022-04-19 05:57:36.358746 fix syntax errors 6 ['\n\nS = input()\n#S = "ATCODER"\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == "A" or S[i] == "C" or S[i] == "G" or S[i] == "T":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n', '\n\nS = input()\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if not (S[i] == "A" or S[i] == "C" or S[i] == "G" or S[i] == "T"):\n        ans += 1\n            break\n\nprint(ans)\n', "\n\n# S = input()\nS = 'ATCODER'\nans = 1\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == 'A' or S[i] == 'C' or S[i] == 'G' or S[i] == 'T':\n            ans += 1\n            ans = max(ans, j - i)\n        else:\n            break\n\nprint(ans)\n", '\n#S = input()\nS = "ATCODER"\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == "A" or S[i] == "C" or S[i] == "G" or S[i] == "T":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n', '\n\nS = input()\nans = 0\n\nfor i in S:\n    if i == "A" or i == "C" or i == "G" or i == "T":\n        ans += 1\n    else:\n        ans = 0\n\nprint(ans)\n', '\n\nS = input()\n#S = "ATCODER"\nans = 0\n\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if S[i] == "A" or S[i] == "C" or S[i] == "G" or S[i] == "T":\n            ans += 1\n        else:\n            break\n\nprint(ans)\n']
2022-04-19 05:57:36.358785 size on output set 5
2022-04-19 05:57:36.358797 num operations 1
2022-04-19 05:57:36.358803 size on input set 1
2022-04-19 05:57:43.775716 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "import sys\n\ndef main():\n    S = sys.stdin.readline().rstrip()  # remove unnecessary newline\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        while a[i] % 2 == 0:\n            ans += 1\n            a[i] //= 2\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "import sys\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "\nimport sys\n\ndef main():\n    S = sys.stdin.readline()\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650347856,
  "object": "edit"
}
2022-04-19 05:57:43.775984 fix syntax errors 6 ["\nimport sys\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    S = sys.stdin.readline().rstrip()  # remove unnecessary newline\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        while a[i] % 2 == 0:\n            ans += 1\n            a[i] //= 2\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    S = sys.stdin.readline().rstrip()\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    S = sys.stdin.readline()\n    max_len = 0\n    curr_len = 0\n    for c in S:\n        if c == 'A' or c == 'C' or c == 'G' or c == 'T':\n            curr_len += 1\n        else:\n            if curr_len > max_len:\n                max_len = curr_len\n            curr_len = 0\n    if curr_len > max_len:\n        max_len = curr_len\n    print(max_len)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-19 05:57:43.776118 size on output set 5
