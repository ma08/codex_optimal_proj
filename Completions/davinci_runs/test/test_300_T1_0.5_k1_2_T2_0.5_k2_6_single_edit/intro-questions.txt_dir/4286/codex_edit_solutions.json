["\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    g = [[] for _ in range(n + 1)]\n    for _ in range(m):\n        x, y, w = map(int, input().split())\n        g[x].append((y, w))\n        g[y].append((x, w))\n\n    spt = [float('inf')] * (n + 1)\n    spt[1] = 0\n    q = [1]\n    while q:\n        u = q.pop(0)\n        for v, w in g[u]:\n            if spt[v] > spt[u] + w:\n                spt[v] = spt[u] + w\n                q.append(v)\n\n    ans = sum(a)\n    for i in range(2, n + 1):\n        ans += min(spt[i], a[i - 1])\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    offers = []\n    for i in range(m):\n        x, y, c = map(int, input().split())\n        offers.append([x, y, c])\n\n    min_cost = 0\n    for i in range(n):\n        min_cost += a[i]\n\n    for offer in offers:\n        x, y, c = offer\n        if a[x - 1] + a[y - 1] > c:\n            min_cost -= a[x - 1] + a[y - 1]\n            min_cost += c\n\n    print(min_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))  # a[i]: cost of i-th item\n    offers = []\n    for i in range(m):\n        x, y, c = map(int, input().split())  # x, y: item number, c: cost of the offer\n        offers.append([x, y, c])  # offers[i]: the i-th offer\n\n    min_cost = 0\n    for i in range(n):\n        min_cost += a[i]  # initial minimum cost\n\n    for offer in offers:\n        x, y, c = offer  # offer[i]: the i-th offer\n        if a[x-1] + a[y-1] > c:  # if the offer is cheaper than buying the two items separately\n            min_cost -= a[x-1] + a[y-1]  # remove the cost of the two items from the minimum cost\n            min_cost += c  # add the cost of the offer to the minimum cost\n\n    print(min_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n", "def main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    g = [[] for _ in range(n + 1)]\n    for _ in range(m):\n        x, y, w = map(int, input().split())\n        g[x].append((y, w))\n        g[y].append((x, w))\n\n    spt = [float('inf')] * (n + 1)\n    spt[1] = 0\n    q = [1]\n    while q:\n        u = q.pop(0)\n        for v, w in g[u]:\n            if spt[v] > spt[u] + w:\n                spt[v] = spt[u] + w\n                q.append(v)\n\n    ans = sum(a)\n    for i in range(2, n + 1):\n        ans += min(spt[i], a[i - 1])\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))[:n]\n\n    a.sort()\n\n    if n % 2 == 0:\n        print(a[n//2 - 1])\n    else:\n        print(a[n//2])\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    offers = []\n    for i in range(m):\n        x, y, c = map(int, input().split())\n        offers.append([x, y, c])\n\n    min_cost = 0\n    for i in range(n):\n        min_cost += a[i]\n\n    for offer in offers:\n        x, y, c = offer\n        if a[x-1] + a[y-1] > c:\n            min_cost -= a[x-1] + a[y-1]\n            min_cost += c\n\n    print(min_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nn, m = map(int, input().split())\na = list(map(int, input().split()))\ng = [[] for _ in range(n + 1)]\nfor _ in range(m):\n    x, y, w = map(int, input().split())\n    g[x].append((y, w))\n    g[y].append((x, w))\nspt = [float('inf')] * (n + 1)\nspt[1] = 0\nq = [1]\nwhile q:\n    u = q.pop(0)\n    for v, w in g[u]:\n        if spt[v] > spt[u] + w:\n            spt[v] = spt[u] + w\n            q.append(v)\nans = sum(a)\nfor i in range(2, n + 1):\n    ans += min(spt[i], a[i - 1])\nprint(ans)\n"]