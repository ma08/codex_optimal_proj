2022-04-19 04:33:16.696146 num operations 1
2022-04-19 04:33:16.696166 size on input set 1
2022-04-19 04:33:24.113470 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef get_input():\n    return [int(x) for x in input().split(' ')]\n\n\ndef solve(n, m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if m % n != 0:\n        return -1\n    return solve(n * 2, m) + 1 if m % (n * 2) == 0 else solve(n * 3, m) + 1\n\n\nif __name__ == '__main__':\n    n, m = get_input()\n    print(solve(n, m))\n"
    },
    {
      "index": 1,
      "text": "#!/usr/bin/env python3\n\n\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(n, m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if m % n != 0:\n        return -1\n    return solve(n * 2, m) + 1 if m % (n * 2) == 0 else solve(n * 3, m) + 1\n\n\nif __name__ == '__main__':\n    n, m = get_input()\n    print(solve(n, m))\n"
    },
    {
      "index": 2,
      "text": "\n\ndef get_input():\n    return [int(x) for x in input().split()]  # noqa: E501\n\n\ndef solve(n, m):\n    if n == m:  # noqa: E501\n        return 0\n    if n > m:  # noqa: E501\n        return -1\n    if m % n != 0:  # noqa: E501\n        return -1\n    return solve(n * 2, m) + 1 if m % (n * 2) == 0 else solve(n * 3, m) + 1  # noqa: E501\n\n\nif __name__ == '__main__':\n    n, m = get_input()\n    print(solve(n, m))\n"
    },
    {
      "index": 3,
      "text": "\n\ndef solve(n, m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if m % n != 0:\n        return -1\n    return solve(n * 2, m) + 1 if m % (n * 2) == 0 else solve(n * 3, m) + 1\n\n\nif __name__ == '__main__':\n    n, m = [int(x) for x in input().split()]\n    print(solve(n, m))\n"
    },
    {
      "index": 4,
      "text": "\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(n, m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if m % n != 0:\n        return -1\n    return solve(n * 2, m) + 1 if m % (n * 2) == 0 else solve(n * 3, m) + 1\n\n\nif __name__ == '__main__':\n    n, m = get_input()\n    print(solve(n, m))\n"
    },
    {
      "index": 5,
      "text": "\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(n, m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if m % n != 0:\n        return -1\n    return solve(n * 2, m) + 1 if m % (n * 2) == 0 else solve(n * 3, m) + 1\n\n\nif __name__ == '__main__':\n    n, m = get_input()\n    print(solve(n, m))\n"
    }
  ],
  "created": 1650342796,
  "object": "edit"
}
2022-04-19 04:33:24.113767 fix syntax errors 6 ["\n\ndef get_input():\n    return [int(x) for x in input().split(' ')]\n\n\ndef solve(n, m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if m % n != 0:\n        return -1\n    return solve(n * 2, m) + 1 if m % (n * 2) == 0 else solve(n * 3, m) + 1\n\n\nif __name__ == '__main__':\n    n, m = get_input()\n    print(solve(n, m))\n", "#!/usr/bin/env python3\n\n\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(n, m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if m % n != 0:\n        return -1\n    return solve(n * 2, m) + 1 if m % (n * 2) == 0 else solve(n * 3, m) + 1\n\n\nif __name__ == '__main__':\n    n, m = get_input()\n    print(solve(n, m))\n", "\n\ndef get_input():\n    return [int(x) for x in input().split()]  # noqa: E501\n\n\ndef solve(n, m):\n    if n == m:  # noqa: E501\n        return 0\n    if n > m:  # noqa: E501\n        return -1\n    if m % n != 0:  # noqa: E501\n        return -1\n    return solve(n * 2, m) + 1 if m % (n * 2) == 0 else solve(n * 3, m) + 1  # noqa: E501\n\n\nif __name__ == '__main__':\n    n, m = get_input()\n    print(solve(n, m))\n", "\n\ndef solve(n, m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if m % n != 0:\n        return -1\n    return solve(n * 2, m) + 1 if m % (n * 2) == 0 else solve(n * 3, m) + 1\n\n\nif __name__ == '__main__':\n    n, m = [int(x) for x in input().split()]\n    print(solve(n, m))\n", "\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(n, m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if m % n != 0:\n        return -1\n    return solve(n * 2, m) + 1 if m % (n * 2) == 0 else solve(n * 3, m) + 1\n\n\nif __name__ == '__main__':\n    n, m = get_input()\n    print(solve(n, m))\n", "\ndef get_input():\n    return [int(x) for x in input().split()]\n\n\ndef solve(n, m):\n    if n == m:\n        return 0\n    if n > m:\n        return -1\n    if m % n != 0:\n        return -1\n    return solve(n * 2, m) + 1 if m % (n * 2) == 0 else solve(n * 3, m) + 1\n\n\nif __name__ == '__main__':\n    n, m = get_input()\n    print(solve(n, m))\n"]
2022-04-19 04:33:24.113810 size on output set 5
2022-04-19 04:33:24.113823 num operations 1
2022-04-19 04:33:24.113830 size on input set 1
2022-04-19 04:34:03.472765 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n#-----Solution-----\n\n#This is a greedy algorithm.\n#The idea is to greedily multiply by 3 until the number is greater than m.\n#Then, multiply by 2 as many times as possible, until the number is greater than m.\n#If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n"
    },
    {
      "index": 1,
      "text": "\n#-----Solution-----\n\n#This is a greedy algorithm.\n#The idea is to greedily multiply by 3 until the number is greater than m.\n#Then, multiply by 2 as many times as possible, until the number is greater than m.\n#If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n"
    },
    {
      "index": 2,
      "text": "\n\n#-----Solution-----\n\n#This is a greedy algorithm.\n#The idea is to greedily multiply by 3 until the number is greater than m.\n#Then, multiply by 2 as many times as possible, until the number is greater than m.\n#If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
      "index": 3,
      "text": "\n\n#-----Solution-----\n\n#This is a greedy algorithm. The idea is to greedily multiply by 3 until the number is greater than m.\n#Then, multiply by 2 as many times as possible, until the number is greater than m. If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n"
    },
    {
      "index": 4,
      "text": "\n#-----Solution-----\n\n#This is a greedy algorithm.\n#The idea is to greedily multiply by 3 until the number is greater than m.\n#Then, multiply by 2 as many times as possible, until the number is greater than m.\n#If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n"
    },
    {
      "index": 5,
      "text": "\n#\n# #-----Solution-----\n#\n# #This is a greedy algorithm.\n# #The idea is to greedily multiply by 3 until the number is greater than m.\n# #Then, multiply by 2 as many times as possible, until the number is greater than m.\n# #If the number is not m, then the answer is -1.\n#\n# n, m = map(int, input().split())\n#\n# if n == m:\n#     print(0)\n# elif m % 2 == 0 and n % 2 == 1:\n#     print(-1)\n# else:\n#     steps = 0\n#     while n < m:\n#         if n * 3 <= m:\n#             n *= 3\n#         else:\n#             n *= 2\n#         steps += 1\n#     if n == m:\n#         print(steps)\n#     else:\n#         print(-1)\n"
    }
  ],
  "created": 1650342804,
  "object": "edit"
}
2022-04-19 04:34:03.473167 fix syntax errors 6 ['\n#-----Solution-----\n\n#This is a greedy algorithm.\n#The idea is to greedily multiply by 3 until the number is greater than m.\n#Then, multiply by 2 as many times as possible, until the number is greater than m.\n#If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n', '\n#-----Solution-----\n\n#This is a greedy algorithm.\n#The idea is to greedily multiply by 3 until the number is greater than m.\n#Then, multiply by 2 as many times as possible, until the number is greater than m.\n#If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n', '\n\n#-----Solution-----\n\n#This is a greedy algorithm.\n#The idea is to greedily multiply by 3 until the number is greater than m.\n#Then, multiply by 2 as many times as possible, until the number is greater than m.\n#If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n', '\n\n#-----Solution-----\n\n#This is a greedy algorithm. The idea is to greedily multiply by 3 until the number is greater than m.\n#Then, multiply by 2 as many times as possible, until the number is greater than m. If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n', '\n#-----Solution-----\n\n#This is a greedy algorithm.\n#The idea is to greedily multiply by 3 until the number is greater than m.\n#Then, multiply by 2 as many times as possible, until the number is greater than m.\n#If the number is not m, then the answer is -1.\n\nn, m = map(int, input().split())\n\nif n == m:\n    print(0)\nelif m % 2 == 0 and n % 2 == 1:\n    print(-1)\nelse:\n    steps = 0\n    while n < m:\n        if n * 3 <= m:\n            n *= 3\n        else:\n            n *= 2\n        steps += 1\n    if n == m:\n        print(steps)\n    else:\n        print(-1)\n', '\n#\n# #-----Solution-----\n#\n# #This is a greedy algorithm.\n# #The idea is to greedily multiply by 3 until the number is greater than m.\n# #Then, multiply by 2 as many times as possible, until the number is greater than m.\n# #If the number is not m, then the answer is -1.\n#\n# n, m = map(int, input().split())\n#\n# if n == m:\n#     print(0)\n# elif m % 2 == 0 and n % 2 == 1:\n#     print(-1)\n# else:\n#     steps = 0\n#     while n < m:\n#         if n * 3 <= m:\n#             n *= 3\n#         else:\n#             n *= 2\n#         steps += 1\n#     if n == m:\n#         print(steps)\n#     else:\n#         print(-1)\n']
2022-04-19 04:34:03.473254 size on output set 4
