2022-04-19 06:00:08.658071 num operations 1
2022-04-19 06:00:08.658095 size on input set 1
2022-04-19 06:00:16.486094 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "# coding: utf-8\n\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\ns = input()\nt = input()\ns = '*' + s + '*'\nt = '*' + t + '*'\nc = 0\nfor i in range(len(s) - 1):\n    if s[i] == t[i] and s[i + 1] == t[i + 1]:\n        c += 1\nprint(c)\n"
    },
    {
      "index": 2,
      "text": "\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n"
    },
    {
      "index": 3,
      "text": "\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n"
    },
    {
      "index": 4,
      "text": "\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n"
    },
    {
      "index": 5,
      "text": "\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n"
    }
  ],
  "created": 1650348008,
  "object": "edit"
}
2022-04-19 06:00:16.486370 fix syntax errors 6 ['# coding: utf-8\n\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n', "\ns = input()\nt = input()\ns = '*' + s + '*'\nt = '*' + t + '*'\nc = 0\nfor i in range(len(s) - 1):\n    if s[i] == t[i] and s[i + 1] == t[i + 1]:\n        c += 1\nprint(c)\n", '\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n', '\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n', '\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n', '\nn = int(input())\ndishes = list(map(int, input().split()))\npoints = list(map(int, input().split()))\nbonus = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += points[dishes[i] - 1]\n    if i > 0 and dishes[i] == dishes[i - 1] + 1:\n        ans += bonus[dishes[i - 1] - 1]\n\nprint(ans)\n']
2022-04-19 06:00:16.486407 size on output set 3
2022-04-19 06:00:16.486418 num operations 1
2022-04-19 06:00:16.486423 size on input set 1
2022-04-19 06:00:23.250615 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n"
    },
    {
      "index": 1,
      "text": "\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n"
    },
    {
      "index": 2,
      "text": "\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n"
    },
    {
      "index": 3,
      "text": "\n\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\nprint(total_points)\n"
    },
    {
      "index": 4,
      "text": "\n\n\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n"
    },
    {
      "index": 5,
      "text": "\n\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish - 1]\n    if i != 0 and dishes[i - 1] == dish:\n        total_points += additional_points[dish - 2]\n\nprint(total_points)\n"
    }
  ],
  "created": 1650348016,
  "object": "edit"
}
2022-04-19 06:00:23.250829 fix syntax errors 6 ['\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n', '\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n', '\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n', '\n\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\nprint(total_points)\n', '\n\n\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) - 1 for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish]\n    if i != 0 and dishes[i - 1] == dish - 1:\n        total_points += additional_points[dish - 1]\n\nprint(total_points)\n', '\n\nfrom sys import stdin\n\nn = int(stdin.readline())\ndishes = [int(a) for a in stdin.readline().split()]\nbase_points = [int(a) for a in stdin.readline().split()]\nadditional_points = [int(a) for a in stdin.readline().split()]\n\n# print(n, dishes, base_points, additional_points)\n\ntotal_points = 0\nfor i in range(n):\n    dish = dishes[i]\n    total_points += base_points[dish - 1]\n    if i != 0 and dishes[i - 1] == dish:\n        total_points += additional_points[dish - 2]\n\nprint(total_points)\n']
2022-04-19 06:00:23.250956 size on output set 6
