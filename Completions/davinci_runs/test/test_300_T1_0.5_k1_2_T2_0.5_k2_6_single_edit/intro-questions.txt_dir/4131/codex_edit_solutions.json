["from collections import defaultdict\n\n\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_cities = [[] for _ in range(N)]\n    prefecture_cities = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P].append(Y)\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:06}{:06}'.format(P, i))\n\n\nif __name__ == '__main__':\n    main()\n", "from collections import defaultdict\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_cities = [[] for _ in range(N)]\n    prefecture_cities = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P].append(Y)\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:06}{:06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n", "from collections import defaultdict\n\n\ndef main():\n    N, M = map(int, input().split())\n    # prefecture_cities = [[] for _ in range(N)]\n    prefecture_cities = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P].append(Y)\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n", "\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N+1)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(1, N+1):\n    for j in range(len(prefectures[i])):\n        print(str(i).zfill(6) + str(j+1).zfill(6))\n", "\n\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N+1)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(1, N+1):\n    for j in range(len(prefectures[i])):\n        print(str(i).zfill(6) + str(prefectures[i][j]).zfill(6))\n", "from collections import defaultdict\n\n\nN = int(input())\n\nd = defaultdict(int)\nfor i in range(N):\n    a = int(input())\n    d[a] += 1\n\nfor key, value in d.items():\n    print(str(key) + ' ' + str(value))\n", "from collections import defaultdict\n\n\ndef main():\n    N, M = map(int, input().split())\n    prefecture_cities = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P].append(Y)\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    N, M = map(int, input().split())\n    prefecture_cities = [[] for _ in range(N)]\n    # prefecture_cities = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P - 1].append(Y)\n    for i, cities in enumerate(prefecture_cities):\n        cities.sort()  # \u5e02\u753a\u6751\u3092\u767b\u9332\u9806\u306b\u30bd\u30fc\u30c8\u3059\u308b\n        for j, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(i + 1, j))\n\nif __name__ == '__main__':\n    main()\n", "\nN = int(input())\nA = list(map(int, input().split()))\nA.sort()\nfor i in range(1, N):\n    if A[i-1] == A[i]:\n        print(\"NO\")\n        exit()\nprint(\"YES\")\n", "from collections import defaultdict\n\n\n\ndef main():\n    N, M = map(int, input().split())\n    prefecture_cities = defaultdict(list)\n    for _ in range(M):\n        P, Y = map(int, input().split())\n        prefecture_cities[P].append(Y)\n    for P, cities in prefecture_cities.items():\n        cities.sort()\n        for i, city in enumerate(cities, 1):\n            print('{:>06}{:>06}'.format(P, i))\n\n\nif __name__ == '__main__':\n    main()\n", "\nN, M = map(int, input().split())\ncities = []\nfor i in range(M):\n    cities.append(list(map(int, input().split())))\n\ncities.sort(key=lambda x: x[1])\n\nprefectures = [[] for _ in range(N + 1)]\n\nfor city in cities:\n    prefectures[city[0]].append(city[1])\n\nfor i in range(1, N + 1):\n    for j in range(len(prefectures[i])):\n        print(str(i).zfill(6) + str(j+1).zfill(6))\n"]