["N, A, B, C = map(int, input().split())\nl = [int(input()) for _ in range(N)]\n\n\n\ndef dfs(cur, a, b, c, cost):\n    if a > A or b > B or c > C:\n        return float('inf')\n    if cur == N:\n        if a == A and b == B and c == C:\n            return cost\n        return 0\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c, cost))\n    res = min(res, dfs(cur + 1, a + l[cur], b, c, cost + 10))\n    res = min(res, dfs(cur + 1, a, b + l[cur], c, cost + 10))\n    res = min(res, dfs(cur + 1, a, b, c + l[cur], cost + 10))\n    if l[cur] - 1 > 0:\n        res = min(res, dfs(cur + 1, a + l[cur] - 1, b, c, cost + 9))\n        res = min(res, dfs(cur + 1, a, b + l[cur] - 1, c, cost + 9))\n        res = min(res, dfs(cur + 1, a, b, c + l[cur] - 1, cost + 9))\n    if l[cur] - 2 > 0:\n        res = min(res, dfs(cur + 1, a + l[cur] - 2, b, c, cost + 8))\n        res = min(res, dfs(cur + 1, a, b + l[cur] - 2, c, cost + 8))\n        res = min(res, dfs(cur + 1, a, b, c + l[cur] - 2, cost + 8))\n    return res\n\n\nprint(dfs(0, 0, 0, 0, 0))\n", "\nimport sys\nN, M = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(list(map(int, sys.stdin.readline().split())))\n\nl.sort(key=lambda x: x[0])\nans = 0\nfor i in range(M):\n    if l[i][1] == 1:\n        ans += l[i][0]\n    else:\n        ans += l[i][0]//2\n\nprint(ans)\n", "\n\nn, a, b, c = map(int, input().split())\nls = [int(input()) for _ in range(n)]\n\ndef dfs(cur, aa, bb, cc):\n    if aa == a and bb == b and cc == c:\n        return 0\n    if cur == n:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, aa, bb, cc))\n    res = min(res, dfs(cur + 1, aa + ls[cur], bb, cc) + 10)\n    res = min(res, dfs(cur + 1, aa, bb + ls[cur], cc) + 10)\n    res = min(res, dfs(cur + 1, aa, bb, cc + ls[cur]) + 10)\n    if ls[cur] - 1 > 0:\n        res = min(res, dfs(cur + 1, aa + ls[cur] - 1, bb, cc) + 9)\n        res = min(res, dfs(cur + 1, aa, bb + ls[cur] - 1, cc) + 9)\n        res = min(res, dfs(cur + 1, aa, bb, cc + ls[cur] - 1) + 9)\n    if ls[cur] - 2 > 0:\n        res = min(res, dfs(cur + 1, aa + ls[cur] - 2, bb, cc) + 8)\n        res = min(res, dfs(cur + 1, aa, bb + ls[cur] - 2, cc) + 8)\n        res = min(res, dfs(cur + 1, aa, bb, cc + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n", "import sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2:\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp-10) + 10)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n", "\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2:\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp+9) + 9)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n", "\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] - 1 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if ls[cur] - 2 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n", "import sys\nN, A, B, C = map(int, sys.stdin.readline().split())\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\ndef dfs(l, a, b, c, mp):\n    ans = float('inf')\n    for i in range(N):\n        if a < A:\n            ans = min(ans, dfs(l[:i]+l[i+1:], a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l[:i]+l[i+1:], a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l[:i]+l[i+1:], a, b, c+l[i], mp-(C-c)))\n        ans = min(ans, dfs(l[:i]+l[i+1:], a, b, c, mp-10) + 10)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100) if dfs(l, 0, 0, 0, 100) < float('inf') else -1)\n", "\n\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] - 1 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if ls[cur] - 2 >= 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n", "\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        if l[i] >= 2:\n            ans = min(ans, dfs(l, a, b, c, mp-1) + 1)\n        if i+1 < len(l):\n            l[i+1] += l[i]\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp-9) + 9)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n", "\nN, A, B, C = map(int, input().split())\nls = [int(input()) for _ in range(N)]\n\ndef dfs(cur, a, b, c):\n    if a == A and b == B and c == C:\n        return 0\n    if cur == N:\n        return float('inf')\n    res = float('inf')\n    res = min(res, dfs(cur + 1, a, b, c))\n    res = min(res, dfs(cur + 1, a + ls[cur], b, c) + 10)\n    res = min(res, dfs(cur + 1, a, b + ls[cur], c) + 10)\n    res = min(res, dfs(cur + 1, a, b, c + ls[cur]) + 10)\n    if ls[cur] - 1 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 1, b, c) + 9)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 1, c) + 9)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 1) + 9)\n    if ls[cur] - 2 > 0:\n        res = min(res, dfs(cur + 1, a + ls[cur] - 2, b, c) + 8)\n        res = min(res, dfs(cur + 1, a, b + ls[cur] - 2, c) + 8)\n        res = min(res, dfs(cur + 1, a, b, c + ls[cur] - 2) + 8)\n    return res\n\nprint(dfs(0, 0, 0, 0))\n", "\n\nimport sys\n\nN, A, B, C = list(map(int, sys.stdin.readline().split()))\nl = []\nfor i in range(N):\n    l.append(int(sys.stdin.readline()))\n\nl.sort()\n\ndef dfs(l, a, b, c, mp):\n    if mp >= 0 and (a == A and b == B and c == C):\n        return mp\n    if mp < 0 or (a > A or b > B or c > C):\n        return float('inf')\n    ans = float('inf')\n    for i in range(len(l)):\n        if a < A:\n            ans = min(ans, dfs(l, a+l[i], b, c, mp-(A-a)))\n        if b < B:\n            ans = min(ans, dfs(l, a, b+l[i], c, mp-(B-b)))\n        if c < C:\n            ans = min(ans, dfs(l, a, b, c+l[i], mp-(C-c)))\n        ans = min(ans, dfs(l[i+1:], a, b, c, mp-10) + 10)\n    return ans\n\nprint(dfs(l, 0, 0, 0, 100))\n"]