["def main():\n    import sys\n    input = sys.stdin.readline\n\n    N, H, L, R = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n\n    dp = [[-1] * H for _ in range(N+1)]\n    dp[0][0] = 0\n    for i, a in enumerate(A):\n        for t in range(H):\n            if dp[i][t] >= 0:\n                dp[i+1][(t+a)%H] = max(dp[i+1][(t+a)%H], dp[i][t] + int(L <= (t+a)%H <= R))\n                dp[i + 1][(t + a-1) % H] = max(dp[i + 1][(t + a-1) % H], dp[i][t] + int(L <= (t + a-1) % H <= R))\n    print(max(dp[-1]))\n\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "#!/usr/bin/env python3\nimport sys\ninput = sys.stdin.readline\n\nn, h, l, r = map(int, input().split())\na = [int(item) for item in input().split()]\ndp = [[-1] * h for _ in range(n + 1)]\ndp[0][0] = 0\n\nfor i, item in enumerate(a):\n    for j in range(h):\n        if dp[i][j] == -1:\n            continue\n        # Sleep early\n        nt = (j + item) % h\n        if l <= nt <= r:\n            dp[i+1][nt] = max(dp[i+1][nt], dp[i][j] + 1)\n        else:\n            dp[i+1][nt] = max(dp[i+1][nt], dp[i][j])\n        # Sleep normaly\n        nt = (j + item - 1 + h) % h\n        if l <= nt <= r:\n            dp[i+1][nt] = max(dp[i+1][nt], dp[i][j] + 1)\n        else:\n            dp[i+1][nt] = max(dp[i+1][nt], dp[i][j])\nprint(max(dp[-1]))", "n,h,l,r = map(int, input().split())\na = list(map(int, input().split()))\ndp = [[-1]*h for _ in range(n+1)]\ndp[0][0] = 0\nfor i in range(n):\n    for j in range(h):\n        if dp[i][j] < 0: continue\n        dp[i+1][(j+a[i])%h] = max(dp[i+1][(j+a[i])%h], dp[i][j] + (l <= (j+a[i])%h <= r))\n        dp[i+1][(j+a[i]-1)%h] = max(dp[i+1][(j+a[i]-1)%h], dp[i][j] + (l <= (j+a[i]-1)%h <= r))\nprint(max(dp[-1]))", "def go():\n    n, h, l, r = list(map(int, input().split()))\n    # n = int(input())\n    a = list(map(int, input().split()))\n    prev = [0]\n    s = 0\n    mx = 0\n    for i, aa in enumerate(a, 1):\n        cur = []\n        s += aa\n        for delay in range(i+1):\n            g = 1 if l <= (s - delay + h) % h <= r else 0\n            if delay==0:\n                cur.append(prev[delay]+g)\n            elif delay==i:\n                cur.append(prev[delay-1] + g)\n            else:\n                cur.append(max(prev[delay],prev[delay-1])+g)\n        prev = cur\n        mx = max(mx,max(cur))\n    return mx\n\n\n# t = int(input())\nfor _ in range(1):\n    print(go())\n", "import sys\n\ndef solve():\n    input = sys.stdin.readline\n    N, H, L, R = map(int, input().split())\n    A = [int(a) for a in input().split()]\n    DP = [[-1] * H for _ in range(N)]\n    DP[0][A[0]] = (1 if L <= A[0] <= R else 0)\n    DP[0][A[0] - 1] = (1 if L <= A[0] - 1 <= R else 0)\n    for i in range(1, N):\n        for h in range(H):\n            add = (1 if L <= h <= R else 0)\n            if DP[i-1][(h - A[i]) % H] > -1: DP[i][h] = max(DP[i][h], DP[i-1][(h - A[i]) % H] + add)\n            if DP[i-1][(h - A[i] + 1) % H] > -1: DP[i][h] = max(DP[i][h], DP[i-1][(h - A[i] + 1) % H] + add)\n    print(max(DP[N-1]))\n    return 0\n\ndef __starting_point():\n    solve()\n__starting_point()", "\nn,h,l,r = list(map(int,input().split()))\nN = n\n\na = list(map(int,input().split()))\n\nflag = True\ni = -1\nlis = [float(\"-inf\")] * h\nlis[0] = 0\nans = 0\n\nfor i in range(N):\n\n    nlis = [float(\"-inf\")] * h\n\n    na = a[i]\n    for j in range(h):\n\n        if l <= (j+na)%h <= r:\n            nlis[(j+na) % h] = max(nlis[(j+na) % h] , lis[j] + 1)\n        else:\n            nlis[(j+na) % h] = max(nlis[(j+na) % h] , lis[j])\n\n        \n\n        if l <= (j+na-1)%h <= r:\n            nlis[(j+na-1) % h] = max(nlis[(j+na-1) % h] , lis[j] + 1)\n        else:\n            nlis[(j+na-1) % h] = max(nlis[(j+na-1) % h] , lis[j])\n\n            \n\n    lis = nlis\n    #print (lis)\n    \nprint(max(0,max(lis)))\n", "from itertools import accumulate\nn,h,l,r = map(int,input().split())\na = list(map(int,input().split()))\nacc = [0]+list(accumulate(a))\ndp = [[0 for i in range(n+1)] for j in range(n+1)]\nfor i in range(1,n+1):\n  for j in range(i+1):\n    x = (acc[i]-j)%h\n    if j == 0:\n      if l<=x<=r:\n        dp[i][j] = dp[i-1][j]+1\n      else:\n        dp[i][j] = dp[i-1][j]\n    else:\n      if l<=x<=r:\n        dp[i][j] = max(dp[i-1][j-1],dp[i-1][j])+1\n      else:\n        dp[i][j] = max(dp[i-1][j-1],dp[i-1][j])\nprint(max(dp[n]))", "import sys\ninput = sys.stdin.readline\n\nn,h,l,r=list(map(int,input().split()))\nA=list(map(int,input().split()))\n\nDP=[-1]*h\nDP[0]=0\n\nfor a in A:\n    NDP=[-1]*h\n    for k in range(h):\n        if DP[k]==-1:\n            continue\n        if l<=(a+k)%h<=r:\n            NDP[(a+k)%h]=max(NDP[(a+k)%h],DP[k]+1)\n        else:\n            NDP[(a+k)%h]=max(NDP[(a+k)%h],DP[k])\n            \n        if l<=(a+k-1)%h<=r:\n            NDP[(a+k-1)%h]=max(NDP[(a+k-1)%h],DP[k]+1)\n        else:\n            NDP[(a+k-1)%h]=max(NDP[(a+k-1)%h],DP[k])\n            \n    DP=NDP\n\nprint(max(DP))\n        \n    \n\n", "import copy\nn,h,l,r=map(int,input().split())\nA=list(map(int,input().split()))\nV=[0]*h\nV[0]=1\nG=[0]*h\nfor i in range(n):\n    R=[0]*h\n    RG=[0]*h\n    for j in range(h):\n        if V[j]==1:\n            X=(j+A[i])%h\n            Y=(j+A[i]+h-1)%h\n            R[X]=R[Y]=1\n            if l<=X<=r: RG[X]=max(RG[X],1+G[j])\n            else: RG[X]=max(RG[X],G[j])\n            if l<=Y<=r: RG[Y]=max(RG[Y],1+G[j])\n            else: RG[Y]=max(RG[Y],G[j])\n    V=R\n    G=RG\nprint(max(G))"]