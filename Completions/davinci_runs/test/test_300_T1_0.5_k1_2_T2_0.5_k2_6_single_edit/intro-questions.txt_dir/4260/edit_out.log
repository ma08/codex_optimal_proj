2022-04-19 05:56:40.776968 num operations 1
2022-04-19 05:56:40.776987 size on input set 1
2022-04-19 05:56:44.764229 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T / X)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 5,
      "text": "import math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650347800,
  "object": "edit"
}
2022-04-19 05:56:44.764489 fix syntax errors 6 ["\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n", "\nimport math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T / X)\n\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n", "import math\n\ndef main():\n    T, X = map(int, input().split())\n    print(T/X)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-19 05:56:44.764516 size on output set 4
2022-04-19 05:56:44.764526 num operations 1
2022-04-19 05:56:44.764531 size on input set 1
2022-04-19 05:56:56.038017 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 \ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 (edited)\n\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_int():\n    return int(read_line())\n\ndef read_ints(n=None):\n    if n:\n        return list(map(int, read_line().split(' ')))[:n]\n    else:\n        return list(map(int, read_line().split(' ')))\n\ndef read_float():\n    return float(read_line())\n\ndef read_floats(n=None):\n    if n:\n        return list(map(float, read_line().split(' ')))[:n]\n    else:\n        return list(map(float, read_line().split(' ')))\n\n\ndef main():\n\n    T = read_int()\n    for i in range(T):\n        N = read_int()\n        print(N)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "# coding: utf-8\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 4,
      "text": "\n"
    },
    {
      "index": 5,
      "text": "from typing import List, Any\n\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line() -> str:\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints() -> List[int]:\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats() -> List[float]:\n    return list(map(float, read_line().split(' ')))\n\ndef main() -> Any:\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650347804,
  "object": "edit"
}
2022-04-19 05:56:56.038291 fix syntax errors 6 ["#!/usr/bin/env python3\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 \ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", "\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8 (edited)\n\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_int():\n    return int(read_line())\n\ndef read_ints(n=None):\n    if n:\n        return list(map(int, read_line().split(' ')))[:n]\n    else:\n        return list(map(int, read_line().split(' ')))\n\ndef read_float():\n    return float(read_line())\n\ndef read_floats(n=None):\n    if n:\n        return list(map(float, read_line().split(' ')))[:n]\n    else:\n        return list(map(float, read_line().split(' ')))\n\n\ndef main():\n\n    T = read_int()\n    for i in range(T):\n        N = read_int()\n        print(N)\n\n\nif __name__ == '__main__':\n    main()\n", "# coding: utf-8\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line():\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints():\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats():\n    return list(map(float, read_line().split(' ')))\n\ndef main():\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n", '\n', "from typing import List, Any\n\n\n# from https://qiita.com/kazetof/items/1d902c7b2a2af0d7f8b8\ndef read_line() -> str:\n    try:\n        line = input()\n        return line\n    except:\n        return None\n\ndef read_ints() -> List[int]:\n    return list(map(int, read_line().split(' ')))\n\ndef read_floats() -> List[float]:\n    return list(map(float, read_line().split(' ')))\n\ndef main() -> Any:\n    T, X = read_ints()\n    print(T / X)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-19 05:56:56.038335 size on output set 6
