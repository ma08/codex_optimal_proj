2022-04-19 05:11:11.095463 num operations 1
2022-04-19 05:11:11.095485 size on input set 1
2022-04-19 05:11:26.577610 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().split())\n        points.append((x, y, h))\n    center_x = 0\n    center_y = 0\n    height = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y)\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x)\n            else:\n                center_x = (x1 + x2) // 2\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n            if all(h == height - abs(x - center_x) - abs(y - center_y) for x, y, h in points):\n                print(center_x, center_y, height)\n                break\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().split())\n        points.append((x, y, h))\n    # print(points)\n    center_x = 0\n    center_y = 0\n    height = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y)\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x)\n            else:\n                center_x = (x1 + x2) // 2\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n            if all(h == max(height - abs(x - center_x) - abs(y - center_y), 0) for x, y, h in points):\n                print(center_x, center_y, height)\n                break\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().split())\n        points.append((x, y, h))\n    center_x = 0\n    center_y = 0\n    height = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y)\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x)\n            else:\n                center_x = (x1 + x2) // 2\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n            if all(h == height - abs(x - center_x) - abs(y - center_y) for x, y, h in points):\n                return print(center_x, center_y, height)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 3,
      "text": "import itertools\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().split())\n        points.append((x, y, h))\n    # print(points)\n    center_x = 0\n    center_y = 0\n    height = 0\n    for p1, p2 in itertools.combinations(points, 2):\n        x1, y1, h1 = p1\n        x2, y2, h2 = p2\n        if x1 == x2:\n            center_x = x1\n            center_y = (y1 + y2) // 2\n            height = h1 + abs(y1 - center_y)\n        elif y1 == y2:\n            center_x = (x1 + x2) // 2\n            center_y = y1\n            height = h1 + abs(x1 - center_x)\n        else:\n            center_x = (x1 + x2) // 2\n            center_y = (y1 + y2) // 2\n            height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n        # print(center_x, center_y, height)\n        if all(h == height - abs(x - center_x) - abs(y - center_y) for x, y, h in points):\n            print(center_x, center_y, height)\n            break\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 4,
      "text": "\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().split())\n        points.append((x, y, h))\n    # print(points)\n    center_x = 0\n    center_y = 0\n    height = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y)\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x)\n            else:\n                center_x = (x1 + x2) // 2\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n            # print(center_x, center_y, height)\n            if all(h == height - abs(x - center_x) - abs(y - center_y) for x, y, h in points):\n                print(center_x, center_y, height)\n                break\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 5,
      "text": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().split())\n        points.append((x, y, h))\n\n    center_x = 0\n    center_y = 0\n\n    height = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y)\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x)\n            else:\n                center_x = (x1 + x2) // 2\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n\n            if all(h == height - abs(x - center_x) - abs(y - center_y) for x, y, h in points):\n                print(center_x, center_y, height)\n                break\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650345071,
  "object": "edit"
}
2022-04-19 05:11:26.577909 fix syntax errors 6 ['\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().split())\n        points.append((x, y, h))\n    center_x = 0\n    center_y = 0\n    height = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y)\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x)\n            else:\n                center_x = (x1 + x2) // 2\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n            if all(h == height - abs(x - center_x) - abs(y - center_y) for x, y, h in points):\n                print(center_x, center_y, height)\n                break\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().split())\n        points.append((x, y, h))\n    # print(points)\n    center_x = 0\n    center_y = 0\n    height = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y)\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x)\n            else:\n                center_x = (x1 + x2) // 2\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n            if all(h == max(height - abs(x - center_x) - abs(y - center_y), 0) for x, y, h in points):\n                print(center_x, center_y, height)\n                break\n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().split())\n        points.append((x, y, h))\n    center_x = 0\n    center_y = 0\n    height = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y)\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x)\n            else:\n                center_x = (x1 + x2) // 2\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n            if all(h == height - abs(x - center_x) - abs(y - center_y) for x, y, h in points):\n                return print(center_x, center_y, height)\n\nif __name__ == "__main__":\n    main()\n', 'import itertools\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().split())\n        points.append((x, y, h))\n    # print(points)\n    center_x = 0\n    center_y = 0\n    height = 0\n    for p1, p2 in itertools.combinations(points, 2):\n        x1, y1, h1 = p1\n        x2, y2, h2 = p2\n        if x1 == x2:\n            center_x = x1\n            center_y = (y1 + y2) // 2\n            height = h1 + abs(y1 - center_y)\n        elif y1 == y2:\n            center_x = (x1 + x2) // 2\n            center_y = y1\n            height = h1 + abs(x1 - center_x)\n        else:\n            center_x = (x1 + x2) // 2\n            center_y = (y1 + y2) // 2\n            height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n        # print(center_x, center_y, height)\n        if all(h == height - abs(x - center_x) - abs(y - center_y) for x, y, h in points):\n            print(center_x, center_y, height)\n            break\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().split())\n        points.append((x, y, h))\n    # print(points)\n    center_x = 0\n    center_y = 0\n    height = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y)\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x)\n            else:\n                center_x = (x1 + x2) // 2\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n            # print(center_x, center_y, height)\n            if all(h == height - abs(x - center_x) - abs(y - center_y) for x, y, h in points):\n                print(center_x, center_y, height)\n                break\n\nif __name__ == "__main__":\n    main()\n', '#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline().rstrip())\n    points = []\n    for i in range(n):\n        x, y, h = map(int, sys.stdin.readline().rstrip().split())\n        points.append((x, y, h))\n\n    center_x = 0\n    center_y = 0\n\n    height = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            x1, y1, h1 = points[i]\n            x2, y2, h2 = points[j]\n            if x1 == x2:\n                center_x = x1\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(y1 - center_y)\n            elif y1 == y2:\n                center_x = (x1 + x2) // 2\n                center_y = y1\n                height = h1 + abs(x1 - center_x)\n            else:\n                center_x = (x1 + x2) // 2\n                center_y = (y1 + y2) // 2\n                height = h1 + abs(x1 - center_x) + abs(y1 - center_y)\n\n            if all(h == height - abs(x - center_x) - abs(y - center_y) for x, y, h in points):\n                print(center_x, center_y, height)\n                break\n\nif __name__ == "__main__":\n    main()\n']
2022-04-19 05:11:26.578094 size on output set 6
2022-04-19 05:11:26.578109 num operations 1
2022-04-19 05:11:26.578115 size on input set 1
2022-04-19 05:11:43.425166 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\nN = int(input())\n\nx_y_h = []\nfor i in range(N):\n    x_y_h.append(list(map(int, sys.stdin.readline().split())))\n\nfor i in range(100):\n    for j in range(100):\n        for h in range(101):\n            flag = True\n            for k in range(N):\n                if x_y_h[k][2] == 0:\n                    if h > abs(x_y_h[k][0] - i) + abs(x_y_h[k][1] - j):\n                        flag = False\n                else:\n                    if h != abs(x_y_h[k][0] - i) + abs(x_y_h[k][1] - j) + x_y_h[k][2]:\n                        flag = False\n            if flag:\n                print(i, j, h)\n                exit()\n\nprint(\"-1\")\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\nN = int(input())\n\nx_y_h = []\nfor i in range(N):\n    x_y_h.append(list(map(int, sys.stdin.readline().split())))\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if x_y_h[i][0] == x_y_h[j][0]:\n            if x_y_h[i][1] == x_y_h[j][1]:\n                if x_y_h[i][2] != x_y_h[j][2]:\n                    print(\"No\")\n                    exit()\n            else:\n                C_X = x_y_h[i][0]\n                C_Y = (x_y_h[i][1] + x_y_h[j][1]) / 2\n                if x_y_h[i][2] == x_y_h[j][2]:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + x_y_h[i][2]\n                else:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + max(x_y_h[i][2], x_y_h[j][2])\n                break\n\nfor i in range(N):\n    if x_y_h[i][0] == C_X and x_y_h[i][1] == C_Y:\n        if x_y_h[i][2] != H:\n            print(\"No\")\n            exit()\n    else:\n        if x_y_h[i][2] != abs(C_X - x_y_h[i][0]) + abs(C_Y - x_y_h[i][1]) + H:\n            print(\"No\")\n            exit()\n\nprint(C_X, C_Y, H)\n"
    },
    {
      "index": 2,
      "text": "# ABC086C - Traveling\n\nimport sys\n\nN = int(input())\n\nx_y_h = []\nfor i in range(N):\n    x_y_h.append(list(map(int, sys.stdin.readline().split())))\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if x_y_h[i][0] == x_y_h[j][0]:\n            if x_y_h[i][1] == x_y_h[j][1]:\n                if x_y_h[i][2] != x_y_h[j][2]:\n                    print(\"No\")\n                    exit()\n            else:\n                C_X = x_y_h[i][0]\n                C_Y = (x_y_h[i][1] + x_y_h[j][1]) / 2\n                if x_y_h[i][2] == x_y_h[j][2]:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + x_y_h[i][2]\n                else:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + max(x_y_h[i][2], x_y_h[j][2])\n                break\n\nfor i in range(N):\n    if x_y_h[i][0] == C_X and x_y_h[i][1] == C_Y:\n        if x_y_h[i][2] != H:\n            print(\"No\")\n            exit()\n    else:\n        if x_y_h[i][2] != abs(C_X - x_y_h[i][0]) + abs(C_Y - x_y_h[i][1]) + H:\n            print(\"No\")\n            exit()\n\nprint(C_X, C_Y, H)\n"
    },
    {
      "index": 3,
      "text": "import sys\ninput = sys.stdin.readline\n\n\nN = int(input())\nA = [list(map(int, input().split())) for _ in range(N)]\n\nfor x in range(101):\n    for y in range(101):\n        H = 0\n        for a in A:\n            if a[2] != 0:\n                H = a[2] + abs(a[0] - x) + abs(a[1] - y)\n                break\n        if all(a[2] == max(H - abs(a[0] - x) - abs(a[1] - y), 0) for a in A):\n            print(x, y, H)\n            exit()\n"
    },
    {
      "index": 4,
      "text": "\n\nimport sys\n\nN = int(input())\n\nx_y_h = []\nfor i in range(N):\n    x_y_h.append(list(map(int, sys.stdin.readline().split())))\n\nfor i in range(N):\n        C_X = 0\n        C_Y = 0\n        H = 0\n    for j in range(i+1, N):\n        if x_y_h[i][0] == x_y_h[j][0]:\n            if x_y_h[i][1] == x_y_h[j][1]:\n                if x_y_h[i][2] != x_y_h[j][2]:\n                    print(\"No\")\n                    exit()\n            else:\n                C_X = x_y_h[i][0]\n                C_Y = (x_y_h[i][1] + x_y_h[j][1]) / 2\n                if x_y_h[i][2] == x_y_h[j][2]:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + x_y_h[i][2]\n                else:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + max(x_y_h[i][2], x_y_h[j][2])\n                break\n\nfor i in range(N):\n    if x_y_h[i][0] == C_X and x_y_h[i][1] == C_Y:\n        if x_y_h[i][2] != H:\n            print(\"No\")\n            exit()\n    else:\n        if x_y_h[i][2] != abs(C_X - x_y_h[i][0]) + abs(C_Y - x_y_h[i][1]) + H:\n            print(\"No\")\n            exit()\n\nprint(C_X, C_Y, H)\n"
    },
    {
      "index": 5,
      "text": "# coding: utf-8\n\nimport sys\n\nN = int(input())\n\nx_y_h = []\nfor i in range(N):\n    x_y_h.append(list(map(int, sys.stdin.readline().split())))\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if x_y_h[i][0] == x_y_h[j][0]:\n            if x_y_h[i][1] == x_y_h[j][1]:\n                if x_y_h[i][2] != x_y_h[j][2]:\n                    print(\"No\")\n                    exit()\n            else:\n                C_X = x_y_h[i][0]\n                C_Y = (x_y_h[i][1] + x_y_h[j][1]) / 2\n                if x_y_h[i][2] == x_y_h[j][2]:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + x_y_h[i][2]\n                else:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + max(x_y_h[i][2], x_y_h[j][2])\n                break\n\nfor i in range(N):\n    if x_y_h[i][0] == C_X and x_y_h[i][1] == C_Y:\n        if x_y_h[i][2] != H:\n            print(\"No\")\n            exit()\n    else:\n        if x_y_h[i][2] != abs(C_X - x_y_h[i][0]) + abs(C_Y - x_y_h[i][1]) + H:\n            print(\"No\")\n            exit()\n\nprint(C_X, C_Y, H)\n"
    }
  ],
  "created": 1650345086,
  "object": "edit"
}
2022-04-19 05:11:43.425408 fix syntax errors 6 ['\nimport sys\n\nN = int(input())\n\nx_y_h = []\nfor i in range(N):\n    x_y_h.append(list(map(int, sys.stdin.readline().split())))\n\nfor i in range(100):\n    for j in range(100):\n        for h in range(101):\n            flag = True\n            for k in range(N):\n                if x_y_h[k][2] == 0:\n                    if h > abs(x_y_h[k][0] - i) + abs(x_y_h[k][1] - j):\n                        flag = False\n                else:\n                    if h != abs(x_y_h[k][0] - i) + abs(x_y_h[k][1] - j) + x_y_h[k][2]:\n                        flag = False\n            if flag:\n                print(i, j, h)\n                exit()\n\nprint("-1")\n', '\nimport sys\n\nN = int(input())\n\nx_y_h = []\nfor i in range(N):\n    x_y_h.append(list(map(int, sys.stdin.readline().split())))\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if x_y_h[i][0] == x_y_h[j][0]:\n            if x_y_h[i][1] == x_y_h[j][1]:\n                if x_y_h[i][2] != x_y_h[j][2]:\n                    print("No")\n                    exit()\n            else:\n                C_X = x_y_h[i][0]\n                C_Y = (x_y_h[i][1] + x_y_h[j][1]) / 2\n                if x_y_h[i][2] == x_y_h[j][2]:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + x_y_h[i][2]\n                else:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + max(x_y_h[i][2], x_y_h[j][2])\n                break\n\nfor i in range(N):\n    if x_y_h[i][0] == C_X and x_y_h[i][1] == C_Y:\n        if x_y_h[i][2] != H:\n            print("No")\n            exit()\n    else:\n        if x_y_h[i][2] != abs(C_X - x_y_h[i][0]) + abs(C_Y - x_y_h[i][1]) + H:\n            print("No")\n            exit()\n\nprint(C_X, C_Y, H)\n', '# ABC086C - Traveling\n\nimport sys\n\nN = int(input())\n\nx_y_h = []\nfor i in range(N):\n    x_y_h.append(list(map(int, sys.stdin.readline().split())))\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if x_y_h[i][0] == x_y_h[j][0]:\n            if x_y_h[i][1] == x_y_h[j][1]:\n                if x_y_h[i][2] != x_y_h[j][2]:\n                    print("No")\n                    exit()\n            else:\n                C_X = x_y_h[i][0]\n                C_Y = (x_y_h[i][1] + x_y_h[j][1]) / 2\n                if x_y_h[i][2] == x_y_h[j][2]:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + x_y_h[i][2]\n                else:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + max(x_y_h[i][2], x_y_h[j][2])\n                break\n\nfor i in range(N):\n    if x_y_h[i][0] == C_X and x_y_h[i][1] == C_Y:\n        if x_y_h[i][2] != H:\n            print("No")\n            exit()\n    else:\n        if x_y_h[i][2] != abs(C_X - x_y_h[i][0]) + abs(C_Y - x_y_h[i][1]) + H:\n            print("No")\n            exit()\n\nprint(C_X, C_Y, H)\n', 'import sys\ninput = sys.stdin.readline\n\n\nN = int(input())\nA = [list(map(int, input().split())) for _ in range(N)]\n\nfor x in range(101):\n    for y in range(101):\n        H = 0\n        for a in A:\n            if a[2] != 0:\n                H = a[2] + abs(a[0] - x) + abs(a[1] - y)\n                break\n        if all(a[2] == max(H - abs(a[0] - x) - abs(a[1] - y), 0) for a in A):\n            print(x, y, H)\n            exit()\n', '\n\nimport sys\n\nN = int(input())\n\nx_y_h = []\nfor i in range(N):\n    x_y_h.append(list(map(int, sys.stdin.readline().split())))\n\nfor i in range(N):\n        C_X = 0\n        C_Y = 0\n        H = 0\n    for j in range(i+1, N):\n        if x_y_h[i][0] == x_y_h[j][0]:\n            if x_y_h[i][1] == x_y_h[j][1]:\n                if x_y_h[i][2] != x_y_h[j][2]:\n                    print("No")\n                    exit()\n            else:\n                C_X = x_y_h[i][0]\n                C_Y = (x_y_h[i][1] + x_y_h[j][1]) / 2\n                if x_y_h[i][2] == x_y_h[j][2]:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + x_y_h[i][2]\n                else:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + max(x_y_h[i][2], x_y_h[j][2])\n                break\n\nfor i in range(N):\n    if x_y_h[i][0] == C_X and x_y_h[i][1] == C_Y:\n        if x_y_h[i][2] != H:\n            print("No")\n            exit()\n    else:\n        if x_y_h[i][2] != abs(C_X - x_y_h[i][0]) + abs(C_Y - x_y_h[i][1]) + H:\n            print("No")\n            exit()\n\nprint(C_X, C_Y, H)\n', '# coding: utf-8\n\nimport sys\n\nN = int(input())\n\nx_y_h = []\nfor i in range(N):\n    x_y_h.append(list(map(int, sys.stdin.readline().split())))\n\nfor i in range(N):\n    for j in range(i+1, N):\n        if x_y_h[i][0] == x_y_h[j][0]:\n            if x_y_h[i][1] == x_y_h[j][1]:\n                if x_y_h[i][2] != x_y_h[j][2]:\n                    print("No")\n                    exit()\n            else:\n                C_X = x_y_h[i][0]\n                C_Y = (x_y_h[i][1] + x_y_h[j][1]) / 2\n                if x_y_h[i][2] == x_y_h[j][2]:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + x_y_h[i][2]\n                else:\n                    H = abs(x_y_h[i][1] - x_y_h[j][1]) + max(x_y_h[i][2], x_y_h[j][2])\n                break\n\nfor i in range(N):\n    if x_y_h[i][0] == C_X and x_y_h[i][1] == C_Y:\n        if x_y_h[i][2] != H:\n            print("No")\n            exit()\n    else:\n        if x_y_h[i][2] != abs(C_X - x_y_h[i][0]) + abs(C_Y - x_y_h[i][1]) + H:\n            print("No")\n            exit()\n\nprint(C_X, C_Y, H)\n']
2022-04-19 05:11:43.425561 size on output set 6
