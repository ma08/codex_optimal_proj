["\n\ndef main():\n    # Input\n    n, k = [int(i) for i in input().split()]\n    s = input()\n\n    # Initialize the array to store the cost of placing a router in the room\n    cost = [0] * n\n    for i in range(n):\n        if s[i] == '1':\n            cost[i] = i + 1\n\n    # Update the cost based on the routers' range\n    for i in range(k, n):\n        cost[i] = min(cost[i], cost[i - k] + i + 1)\n\n    # Sum the cost\n    total_cost = sum(cost)\n\n    # Output\n    print(total_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n", "# https://codeforces.com/problemset/problem/1335/B\n\n# Solution\n\nn, k = [int(x) for x in input().split()]\ns = input()\n\ncost = 0\nfor i in range(1, n + 1):\n    if s[i - 1] == '1':\n        cost += i\n        continue\n    if i - k - 1 >= 0 and s[i - k - 1] == '1':\n        continue\n    if i + k - 1 < n and s[i + k - 1] == '1':\n        continue\n    cost += i\n\nprint(cost)\n", "\n\n# https://codeforces.com/contest/1326/problem/C\n\nn, k = [int(x) for x in input().split()]\ns = input()\n\ncost = 0\nfor i in range(1, n + 1):\n    if s[i - 1] == '1':\n        cost += i\n        continue\n    if i - k - 1 >= 0 and s[i - k - 1] == '1':\n        continue\n    if i + k - 1 < n and s[i + k - 1] == '1':\n        continue\n    cost += i\nprint(cost)\n", "\ndef main()\n    # Read input\n    n, k = [int(i) for i in input().split()]\n    s = input()\n\n    # Initialize the array to store the cost of placing a router in the room\n    cost = [0] * n\n    for i in range(n):\n        if s[i] == '1':\n            cost[i] = i + 1\n\n    # Update the cost based on the routers' range\n    for i in range(k, n):\n        cost[i] = min(cost[i], cost[i - k] + i + 1)\n\n    # Sum the cost\n    total_cost = sum(cost)\n\n    # Output\n    print(total_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\n# Solution\n\nn, k = map(int, input().split())\ns = input()\n\ncost = 0\nfor i in range(1, n + 1):\n    if s[i - 1] == \"1\":\n        cost += i\n        continue\n    if i - k - 1 >= 0 and s[i - k - 1] == \"1\":\n        continue\n    if i + k - 1 < n and s[i + k - 1] == \"1\":\n        continue\n    cost += i\n\nprint(cost)\n", "\n\ndef main():\n    # Read input\n    n, k = [int(i) for i in input().split()]\n    s = input()\n\n    # Initialize the array to store the cost of placing a router in the room\n    cost = [0] * n  # cost[i] is the cost of placing a router in the i-th room\n    for i in range(n):\n        if s[i] == '1':\n            cost[i] = i + 1  # cost of placing a router in the i-th room\n\n    # Update the cost based on the routers' range\n    for i in range(k, n):\n        cost[i] = min(cost[i], cost[i - k] + i + 1)\n\n    # Sum the cost\n    total_cost = sum(cost)\n\n    # Output\n    print(total_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nfrom itertools import combinations\n\n\ndef solve(n, k, s):\n    cost = 0\n    for i in range(1, n + 1):\n        if s[i - 1] == '1':\n            cost += i\n            continue\n        if i - k - 1 >= 0 and s[i - k - 1] == '1':\n            continue\n        if i + k - 1 < n and s[i + k - 1] == '1':\n            continue\n        cost += i\n    return cost\n\n\nn, k = [int(x) for x in input().split()]\ns = input()\n\nprint(solve(n, k, s))\n", "\n\ndef main():\n    # Read input\n    n, k = map(int, input().split())\n    s = list(input())\n\n    # Initialize the array to store the cost of placing a router in the room\n    cost = [0 for i in range(n)]\n    for i in range(n):\n        cost[i] = i + 1\n\n    # Update the cost based on the routers' range\n    for i in range(1, n):\n        if s[i] == '1':\n            cost[i] = min(cost[i], cost[i - 1] + i + 1)\n        else:\n            cost[i] = cost[i - 1]\n\n    # Sum the cost\n    total_cost = cost[n - 1]\n\n    # Output\n    print(total_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # Read input\n    n, k = map(int, input().split())\n    s = input()\n\n    # Initialize the array to store the cost of placing a router in the room\n    cost = [0] * (n + 1)\n    for i in range(n):\n        if s[i] == '1':\n            cost[i] = i + 1\n\n    # Update the cost based on the routers' range\n    for i in range(k, n):\n        cost[i] = min(cost[i], cost[i - k] + i + 1)\n\n    # Sum the cost\n    total_cost = sum(cost)\n\n    # Output\n    print(total_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\nn, k = [int(x) for x in input().split()]\ns = input()\ncost = 0\nfor i in range(1, n + 1):\n    if s[i - 1] == '1':\n        cost += i\n        continue\n    if i - k - 1 >= 0 and s[i - k - 1] == '1':\n        continue\n    if i + k - 1 < n and s[i + k - 1] == '1':\n        continue\n    cost += i\n\nprint(cost)\n", "\n\ndef main():\n    # Initialize the array to store the cost of placing a router in the room\n    cost = [0] * 10\n    for i in range(10):\n        if i == 0:\n            cost[i] = 0\n        else:\n            cost[i] = i\n\n    # Update the cost based on the routers' range (k = 3)\n    for i in range(3, 10):\n        cost[i] = min(cost[i], cost[i - 3] + i)\n\n    # Sum the cost\n    total_cost = sum(cost) - cost[0]\n\n    # Output\n    print(total_cost)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n#!/usr/bin/python3\n\nn, k = [int(x) for x in input().split()]\ns = input()\n\ncost = 0\nfor i in range(1, n+1):\n    if s[i-1] == '1':\n        cost += i;\n        continue\n    if i-k-1 >= 0 and s[i-k-1] == '1':\n        continue\n    if i+k-1 < n and s[i+k-1] == '1':\n        continue\n    cost += i\n\nprint(cost)\n"]