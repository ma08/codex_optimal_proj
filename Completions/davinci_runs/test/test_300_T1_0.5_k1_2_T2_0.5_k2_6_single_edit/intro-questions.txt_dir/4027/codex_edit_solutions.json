["n = int(input())\nif n % 2 == 0:\n    print(1)\nelse:\n    print(0)\n\n", "#!/usr/bin/env python3\n\nn = int(input())\n\nif n % 2 == 0:\n    print(0)\nelse:\n    print(1)\n", "\n\n# Solution:\n\nimport sys\n\nn = int(input())\nprint(n % 2 == 0)\n", "\n# Solution:\n\nimport sys\n\nn = int(input())\nprint(n % 2)\n", "\n\n# Solution:\n\nimport sys\n\nn = int(input())\nif (n % 2) == 1:\n    print(\"Weird\")\nelse:\n    if (n >= 2) and (n <= 5):\n        print(\"Not Weird\")\n    elif (n >= 6) and (n <= 20):\n        print(\"Weird\")\n    else:\n        print(\"Not Weird\")\n", "\nn = int(input())\n\nif n % 2 == 0:\n    print(0)\nelse:\n    print(1)\n", "\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Tue Mar 17 14:55:55 2020\n@author: nicholas\n\"\"\"\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.preprocessing import LabelEncoder, OneHotEncoder, StandardScaler\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nimport statsmodels.api as sm\nimport os\nos.chdir('/Users/nicholas/Desktop/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 5 - Multiple Linear Regression')\ndataset = pd.read_csv('50_Startups.csv')\nX = dataset.iloc[:, :-1].values\ny = dataset.iloc[:, 4].values\nlabelencoder_X = LabelEncoder()\nX[:, 3] = labelencoder_X.fit_transform(X[:, 3])\nct = ColumnTransformer([('encoder', OneHotEncoder(), [3])], remainder='passthrough')\nX = np.array(ct.fit_transform(X), dtype=np.float)\nX = X[:, 1:]\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)\nregressor = LinearRegression()\nregressor.fit(X_train, y_train)\ny_pred = regressor.predict(X_test)\nX = np.append(arr = np.ones((50, 1)).astype(int), values = X, axis = 1)\nX_opt = X[:, [0, 1, 2, 3, 4, 5]]\nregressor_OLS = sm.OLS(endog = y, exog = X_opt).fit()\nregressor_OLS.summary()\nX_opt = X[:, [0, 1, 3, 4, 5]]\nregressor_OLS = sm.OLS(endog = y, exog = X_opt).fit()\nregressor_OLS.summary()\nX_opt = X[:, [0, 3, 4, 5]]\nregressor_OLS = sm.OLS(endog = y, exog = X_opt).fit()\nregressor_OLS.summary()\nX_opt = X[:, [0, 3, 5]]\nregressor_OLS = sm.OLS(endog = y, exog = X_opt).fit()\nregressor_OLS.summary()\nX_opt = X[:, [0, 3]]\nregressor_OLS = sm.OLS(endog = y, exog = X_opt).fit()\nregressor_OLS.summary()\n", "# https://www.hackerrank.com/challenges/python-mod-divmod/problem\n\n# Solution:\n\nimport sys\n\nn = int(input())\nprint(n % 2)\n"]