["x = int(input().split()[0])\nn = int(input().split()[0])\np = [int(i) for i in input().split()]\np.sort()\n\nif x <= p[0]:\n    print(p[0]-x)\nelif x >= p[-1]:\n    print(x-p[-1])\nelse:\n    for i in range(1, n):\n        if x <= p[i]:\n            print(min(x-p[i-1], p[i]-x))\n            break\n", "\n#\n# x = int(input())\n# n = int(input())\n# p = list(map(int, input().split()))\n#\n# p.sort()\n#\n# if x < p[0]:\n#     print(p[0] - x)\n# elif x > p[n-1]:\n#     print(x - p[n-1])\n# else:\n#     for i in range(1, n):\n#         if p[i-1] < x and x < p[i]:\n#             if abs(p[i-1] - x) < abs(p[i] - x):\n#                 print(p[i-1] - x)\n#             else:\n#                 print(p[i] - x)\n#             break\n", "\nx = int(input())\nn = int(input())\np = list(map(int, input().split()))\n\np.sort()\n\nif x < p[0]:\n    print(p[0] - x)\nelif x > p[n-1]:\n    print(x - p[n-1])\nelse:\n    for i in range(1, n):\n        if p[i-1] < x and x < p[i]:\n            if abs(p[i-1] - x) < abs(p[i] - x):\n                print(p[i-1] - x)\n            else:\n                print(p[i] - x)\n            break\n", "\nx = int(input().split()[0])\nn = int(input().split()[0])\np = [int(i) for i in input().split()]\np.sort()\n\nif x <= p[0]:\n    print(p[0]-x)\nelif x >= p[-1]:\n    print(x-p[-1])\nelse:\n    for i in range(1, n):\n        if x <= p[i]:\n            print(min(x-p[i-1], p[i]-x))\n            break\n\n\na = int(input())\nb = int(input())\nc = int(input())\n\nif a == b and a == c:\n    print(0)\nelif a == b:\n    print(c)\nelif a == c:\n    print(b)\nelif b == c:\n    print(a)\nelse:\n    print(max(a, b, c)-min(a, b, c))\n", "\n\nx = int(input())\nn = int(input())\np = list(map(int, input().split()))\n\np.sort()\n\nif x < p[0]:\n    print(p[0] - x)\nelif x > p[n-1]:\n    print(x - p[n-1])\nelse:\n    for i in range(1, n):\n        if p[i-1] < x and x < p[i]:\n            if abs(p[i-1] - x) < abs(p[i] - x):\n                print(abs(p[i-1] - x))\n            else:\n                print(abs(p[i] - x))\n            break\n", "\n\nx = int(input())\nn = int(input())\np = list(map(int, input().split()))\n\np.sort()\n\nif x < p[0]:\n    print(x - p[0])\nelif x > p[n-1]:\n    print(x - p[n-1])\nelse:\n    for i in range(1, n):\n        if p[i-1] < x and x < p[i]:\n            if abs(p[i-1] - x) < abs(p[i] - x):\n                print(x - p[i-1])\n            else:\n                print(p[i] - x)\n            break\n", "\ndef main():\n    x = int(input().split()[0])\n    n = int(input().split()[0])\n    p = [int(i) for i in input().split()]\n    p.sort()\n\n    if x <= p[0]:\n        print(p[0]-x)\n    elif x >= p[-1]:\n        print(x-p[-1])\n    else:\n        for i in range(1, n):\n            if x <= p[i]:\n                print(min(x-p[i-1], p[i]-x))\n                break\n\nif __name__ == '__main__':\n    main()\n", "\n\nx, n = map(int, input().split())\np = list(map(int, input().split()))[:n]\n\np.sort()\n\nif x < p[0]:\n    print(p[0] - x)\nelif x > p[n - 1]:\n    print(x - p[n - 1])\nelse:\n    for i in range(1, n):\n        if p[i - 1] < x and x < p[i]:\n            if abs(p[i - 1] - x) < abs(p[i] - x):\n                print(p[i - 1] - x)\n            else:\n                print(p[i] - x)\n            break\n", "\nx = int(input().split()[0])\nn = int(input().split()[0])\np = [int(i) for i in input().split()]\np.sort()\n\nif x <= p[0]:\n    print(p[0]-x)\nelif x >= p[-1]:\n    print(x-p[-1])\nelse:\n    for i in range(1, n+1):\n        if x <= p[i]:\n            print(min(x-p[i-1], p[i]-x))\n            break\n", "#!/usr/bin/env python3\nx = int(input().split()[0])\nn = int(input().split()[0])\np = [int(i) for i in input().split()]\np.sort()\n\nif x <= p[0]:\n    print(p[0] - x)\nelif x >= p[-1]:\n    print(x - p[-1])\nelse:\n    for i in range(1, n):\n        if x <= p[i]:\n            print(min(x - p[i - 1], p[i] - x))\n            break\n", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ndp = [[0]*(n+1) for _ in range(n+1)]\nfor i in range(n):\n    for j in range(n):\n        if a[i] == b[j]:\n            dp[i+1][j+1] = dp[i][j] + 1\n        else:\n            dp[i+1][j+1] = max(dp[i+1][j], dp[i][j+1])\nprint(dp[n][n])\n"]