["\n\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]\n    abcd.sort(key=lambda x: (x[1], -x[0]))\n    dp = [[0 for _ in range(m)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(c, m):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]\n    abcd.sort(key=lambda x: (x[1], x[0]), reverse=True)\n    dp = [[0 for _ in range(m)] for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(c, m):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]  # \u554f\u984c\u3092\u8aad\u307f\u8fbc\u3080\n    abcd.sort(key=lambda x: (x[1], x[0]))  # \u554f\u984c\u3092b\u3067\u30bd\u30fc\u30c8\u3002b\u304c\u540c\u3058\u306a\u3089a\u3067\u30bd\u30fc\u30c8\n    dp = [[0 for _ in range(m)] for _ in range(n+1)]  # dp\u30c6\u30fc\u30d6\u30eb\u3092\u521d\u671f\u5316\n\n    for i in range(1, n+1):\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:  # \u554f\u984c\u3092\u9806\u756a\u306b\u51e6\u7406\n        for j in range(c, m):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)  # dp[b][j]\u306b\u6700\u5927\u5024\u3092\u5165\u308c\u308b\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\nsys.setrecursionlimit(10 ** 7)\n\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, read().split())) for _ in range(q)]\n    abcd.sort(key=lambda x: x[1])\n    dp = [[0] * m for _ in range(n+1)]\n\n    for i in range(1, n+1):\n        for j in range(m):\n            dp[i][j] = dp[i-1][j]\n\n    for a_i, b_i, c_i, d_i in abcd:\n        for j in range(c_i, m):\n            dp[b_i][j] = max(dp[b_i][j], dp[a_i][j-c_i] + d_i)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]\n    abcd.sort(key=lambda x: (x[1], -x[0]))\n    dp = [[0 for _ in range(m)] for _ in range(n+1)]\n\n    for j in range(m):\n        dp[0][j] = 0\n\n    for a, b, c, d in abcd:\n        for j in range(c, m):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n, m, q = map(int, input().split())\n    abcd = [list(map(int, input().split())) for _ in range(q)]\n    abcd.sort(key=lambda x: (x[1], x[0]))\n    dp = [[0 for _ in range(m)] for _ in range(n+1)]\n\n    for i in range(n+1):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = 0\n            else:\n                dp[i][j] = dp[i-1][j]\n\n    for a, b, c, d in abcd:\n        for j in range(c, m):\n            dp[b][j] = max(dp[b][j], dp[a][j-c] + d)\n\n    print(max(dp[n]))\n\nif __name__ == '__main__':\n    main()\n"]