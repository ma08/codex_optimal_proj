2022-04-19 05:33:59.218432 num operations 1
2022-04-19 05:33:59.218447 size on input set 1
2022-04-19 05:34:15.560090 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize minimum possible absolute difference to the sum of all weights\n# (i.e. if we divide the weights into two groups with only one weight in each group).\nmin_diff = sum(weights)\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(n):\n    # Increment the sum of the weights in the first group by the weight indexed i.\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference between\n    # the sum of the weights in the first group and the sum of the weights in the second group.\n    if i >= n - i - 1:\n        # Calculate the difference between the sum of the weights in the first group and\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n"
    },
    {
      "index": 1,
      "text": "\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize minimum possible absolute difference to the sum of all weights\n# (i.e. if we divide the weights into two groups with only one weight in each group).\nmin_diff = sum(weights)\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed i.\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference between\n    # the sum of the weights in the first group and the sum of the weights in the second group.\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group and\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize minimum possible absolute difference to the sum of all weights.\nmin_diff = sum(weights) \n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed i.\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference between\n    # the sum of the weights in the first group and the sum of the weights in the second group.\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group and\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n"
    },
    {
      "index": 3,
      "text": "\nimport math\n\nn = int(input())\n\n# Initialize minimum possible absolute difference to the sum of all numbers\n# (i.e. if we divide the numbers into two groups with only one number in each group).\nmin_diff = sum(numbers)\n\n# Initialize the sum of the numbers in the first group to 0.\nfirst_group_sum = 0.0\n\n# Loop through the numbers from the smallest to the largest.\nfor i in range(n):\n    # Increment the sum of the numbers in the first group by the number indexed i.\n    first_group_sum += numbers[i]\n\n    # If the number of numbers in the first group is greater than or equal to\n    # the number of numbers in the second group, calculate the difference between\n    # the sum of the numbers in the first group and the sum of the numbers in the second group.\n    if i >= n - i - 1:\n        # Calculate the difference between the sum of the numbers in the first group and\n        # the sum of the numbers in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(numbers) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference, rounded to 1 decimal place.\nprint(round(min_diff, 1))\n"
    },
    {
      "index": 4,
      "text": "#!/usr/bin/env python3\n\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize minimum possible absolute difference to the sum of all weights\n# (i.e. if we divide the weights into two groups with only one weight in each group).\nmin_diff = sum(weights)\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed i.\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference between\n    # the sum of the weights in the first group and the sum of the weights in the second group.\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group and\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n"
    },
    {
      "index": 5,
      "text": "#!/usr/bin/env python3\n\nN = int(input())\nweights = list(map(int, input().split()))\n\n\nmin_diff = sum(weights)\n\n\nfirst_group_sum = 0\n\n\nfor i in range(N):\n\n    first_group_sum += weights[i]\n\n\n    if i >= N - i - 1:\n\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n\nprint(min_diff)\n"
    }
  ],
  "created": 1650346439,
  "object": "edit"
}
2022-04-19 05:34:15.560367 fix syntax errors 6 ['\n\nn = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize minimum possible absolute difference to the sum of all weights\n# (i.e. if we divide the weights into two groups with only one weight in each group).\nmin_diff = sum(weights)\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(n):\n    # Increment the sum of the weights in the first group by the weight indexed i.\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference between\n    # the sum of the weights in the first group and the sum of the weights in the second group.\n    if i >= n - i - 1:\n        # Calculate the difference between the sum of the weights in the first group and\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n', '\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize minimum possible absolute difference to the sum of all weights\n# (i.e. if we divide the weights into two groups with only one weight in each group).\nmin_diff = sum(weights)\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed i.\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference between\n    # the sum of the weights in the first group and the sum of the weights in the second group.\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group and\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n', '\n\nn = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize minimum possible absolute difference to the sum of all weights.\nmin_diff = sum(weights) \n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed i.\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference between\n    # the sum of the weights in the first group and the sum of the weights in the second group.\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group and\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n', '\nimport math\n\nn = int(input())\n\n# Initialize minimum possible absolute difference to the sum of all numbers\n# (i.e. if we divide the numbers into two groups with only one number in each group).\nmin_diff = sum(numbers)\n\n# Initialize the sum of the numbers in the first group to 0.\nfirst_group_sum = 0.0\n\n# Loop through the numbers from the smallest to the largest.\nfor i in range(n):\n    # Increment the sum of the numbers in the first group by the number indexed i.\n    first_group_sum += numbers[i]\n\n    # If the number of numbers in the first group is greater than or equal to\n    # the number of numbers in the second group, calculate the difference between\n    # the sum of the numbers in the first group and the sum of the numbers in the second group.\n    if i >= n - i - 1:\n        # Calculate the difference between the sum of the numbers in the first group and\n        # the sum of the numbers in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(numbers) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference, rounded to 1 decimal place.\nprint(round(min_diff, 1))\n', '#!/usr/bin/env python3\n\nN = int(input())\nweights = list(map(int, input().split()))\n\n# Initialize minimum possible absolute difference to the sum of all weights\n# (i.e. if we divide the weights into two groups with only one weight in each group).\nmin_diff = sum(weights)\n\n# Initialize the sum of the weights in the first group to 0.\nfirst_group_sum = 0\n\n# Loop through the weights from the smallest to the largest.\nfor i in range(N):\n    # Increment the sum of the weights in the first group by the weight indexed i.\n    first_group_sum += weights[i]\n\n    # If the number of weights in the first group is greater than or equal to\n    # the number of weights in the second group, calculate the difference between\n    # the sum of the weights in the first group and the sum of the weights in the second group.\n    if i >= N - i - 1:\n        # Calculate the difference between the sum of the weights in the first group and\n        # the sum of the weights in the second group, and update the minimum possible absolute difference.\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n# Print the minimum possible absolute difference.\nprint(min_diff)\n', '#!/usr/bin/env python3\n\nN = int(input())\nweights = list(map(int, input().split()))\n\n\nmin_diff = sum(weights)\n\n\nfirst_group_sum = 0\n\n\nfor i in range(N):\n\n    first_group_sum += weights[i]\n\n\n    if i >= N - i - 1:\n\n        diff = abs(first_group_sum - (sum(weights) - first_group_sum))\n        if diff < min_diff:\n            min_diff = diff\n\n\nprint(min_diff)\n']
2022-04-19 05:34:15.560518 size on output set 6
2022-04-19 05:34:15.560531 num operations 1
2022-04-19 05:34:15.560536 size on input set 1
2022-04-19 05:34:23.783560 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nn = int(input())\nw = list(map(int, input().split()))\n\nmin_diff = 100 * n\nfor t in range(1, n):\n    s1 = sum(w[:t])\n    s2 = sum(w[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\n\nprint(min_diff)\n"
    },
    {
      "index": 1,
      "text": "\n\nN = int(input())\nW = list(map(int, input().split()))\n\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = sum(W[:t])\n    s2 = sum(W[t:])\n    diff = abs(s1 - s2)\n    min_diff = min(diff, min_diff)\n\nprint(min_diff)\n"
    },
    {
      "index": 2,
      "text": "\nN = int(input())\nW = list(map(int, input().split()))\n\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = sum(W[:t])\n    s2 = sum(W[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\n\nprint(min_diff)\n"
    },
    {
      "index": 3,
      "text": "\nN = int(input())\nW = list(map(int, input().split()))\n\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = sum(W[:t])\n    s2 = sum(W[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\n\nprint(min_diff)\n"
    },
    {
      "index": 4,
      "text": "\nN = int(input())\nW = list(map(int, input().split()))\n\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = sum(W[:t])\n    s2 = sum(W[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\n\nprint(min_diff)\n"
    },
    {
      "index": 5,
      "text": "\n\nN = int(input())  # \u6570\u5024\nW = list(map(int, input().split()))  # \u30ea\u30b9\u30c8\n\nmin_diff = 100 * N  # \u4eee\u306e\u6700\u5927\u5024\nfor t in range(1, N):\n    s1 = sum(W[:t])  # \u5de6\u5074\u306e\u5408\u8a08\n    s2 = sum(W[t:])  # \u53f3\u5074\u306e\u5408\u8a08\n    diff = abs(s1 - s2)  # \u5dee\u306e\u7d76\u5bfe\u5024\n    if diff < min_diff:  # \u5dee\u304c\u6700\u5c0f\u5024\u3088\u308a\u5c0f\u3055\u3044\u6642\n        min_diff = diff  # \u6700\u5c0f\u5024\u3092\u66f4\u65b0\n\nprint(min_diff)\n"
    }
  ],
  "created": 1650346455,
  "object": "edit"
}
2022-04-19 05:34:23.783785 fix syntax errors 6 ['\n\nn = int(input())\nw = list(map(int, input().split()))\n\nmin_diff = 100 * n\nfor t in range(1, n):\n    s1 = sum(w[:t])\n    s2 = sum(w[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\n\nprint(min_diff)\n', '\n\nN = int(input())\nW = list(map(int, input().split()))\n\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = sum(W[:t])\n    s2 = sum(W[t:])\n    diff = abs(s1 - s2)\n    min_diff = min(diff, min_diff)\n\nprint(min_diff)\n', '\nN = int(input())\nW = list(map(int, input().split()))\n\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = sum(W[:t])\n    s2 = sum(W[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\n\nprint(min_diff)\n', '\nN = int(input())\nW = list(map(int, input().split()))\n\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = sum(W[:t])\n    s2 = sum(W[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\n\nprint(min_diff)\n', '\nN = int(input())\nW = list(map(int, input().split()))\n\nmin_diff = 100 * N\nfor t in range(1, N):\n    s1 = sum(W[:t])\n    s2 = sum(W[t:])\n    diff = abs(s1 - s2)\n    if diff < min_diff:\n        min_diff = diff\n\nprint(min_diff)\n', '\n\nN = int(input())  # 数値\nW = list(map(int, input().split()))  # リスト\n\nmin_diff = 100 * N  # 仮の最大値\nfor t in range(1, N):\n    s1 = sum(W[:t])  # 左側の合計\n    s2 = sum(W[t:])  # 右側の合計\n    diff = abs(s1 - s2)  # 差の絶対値\n    if diff < min_diff:  # 差が最小値より小さい時\n        min_diff = diff  # 最小値を更新\n\nprint(min_diff)\n']
2022-04-19 05:34:23.783829 size on output set 4
