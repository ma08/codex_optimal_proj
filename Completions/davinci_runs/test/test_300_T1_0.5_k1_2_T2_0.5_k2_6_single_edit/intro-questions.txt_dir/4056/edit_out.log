2022-04-19 04:49:10.576499 num operations 1
2022-04-19 04:49:10.576517 size on input set 1
2022-04-19 04:49:50.304088 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "import sys\nimport heapq\nfrom collections import deque\nfrom itertools import combinations, permutations, combinations_with_replacement\nfrom copy import deepcopy\ninput = lambda: sys.stdin.readline().rstrip() \nfrom collections import Counter\nfrom math import gcd\nsys.setrecursionlimit(10**6)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
    },
    {
      "index": 1,
      "text": "\n\na, b = map(int, input().split())\nprint(a * b)\n"
    },
    {
      "index": 2,
      "text": "\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\nans = a[0]\nfor i in range(1, n):\n    ans = lcm(ans, a[i])\nprint(ans)\n"
    },
    {
      "index": 3,
      "text": "\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = a[0]\nfor i in range(1, n):\n    ans = lcm(ans, a[i])\n\nprint(ans)\n"
    },
    {
      "index": 4,
      "text": "\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = a[0]\nfor i in range(1, n):\n    ans = lcm(ans, a[i])\n\nprint(ans)\n"
    },
    {
      "index": 5,
      "text": "\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = a[0]\nfor i in range(1, n):\n    ans = lcm(ans, a[i])\n\nprint(ans)\n"
    }
  ],
  "created": 1650343750,
  "object": "edit"
}
2022-04-19 04:49:50.304393 fix syntax errors 6 ['import sys\nimport heapq\nfrom collections import deque\nfrom itertools import combinations, permutations, combinations_with_replacement\nfrom copy import deepcopy\ninput = lambda: sys.stdin.readline().rstrip() \nfrom collections import Counter\nfrom math import gcd\nsys.setrecursionlimit(10**6)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n', '\n\na, b = map(int, input().split())\nprint(a * b)\n', '\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\nans = a[0]\nfor i in range(1, n):\n    ans = lcm(ans, a[i])\nprint(ans)\n', '\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = a[0]\nfor i in range(1, n):\n    ans = lcm(ans, a[i])\n\nprint(ans)\n', '\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = a[0]\nfor i in range(1, n):\n    ans = lcm(ans, a[i])\n\nprint(ans)\n', '\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = a[0]\nfor i in range(1, n):\n    ans = lcm(ans, a[i])\n\nprint(ans)\n']
2022-04-19 04:49:50.304467 size on output set 5
2022-04-19 04:49:50.304493 num operations 1
2022-04-19 04:49:50.304499 size on input set 1
2022-04-19 04:49:57.039916 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# @Time    : 2019/10/15\n# @Author  : Edrain\n\n# Solution\n\ndef gcd(a,b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b,a%b)\n\nn = int(input())\na = list(map(int,input().split()))\n\ng = a[0]\nfor i in range(1,n):\n    g = gcd(g,a[i])\n\nprint(g)\n"
    },
    {
      "index": 1,
      "text": "\n\ndef gcd(a,b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b,a%b)\n\nn = int(input())\na = list(map(int,input().split()))\n\ng = a[0]\nfor i in range(1,n):\n    g = gcd(g,a[i])\n\nprint(g)\n"
    },
    {
      "index": 2,
      "text": "\n# Solution\n\ndef gcd(a,b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b,a%b)\n\nn = int(input())\na = list(map(int,input().split()))\n\ng = a[0]\nfor i in range(1,n):\n    g = gcd(g,a[i])\n\nprint(g)\n"
    },
    {
      "index": 3,
      "text": "\n# Solution\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b,a%b)\n\nn = int(input())\na = list(map(int,input().split()))\n\ng = a[0]\nfor i in range(1,n):\n    g = gcd(g,a[i])\n\nprint(g)\n"
    },
    {
      "index": 4,
      "text": "\n\n# Solution \n\ndef gcd(a,b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b,a%b)\n\nn = int(input())\na = list(map(int,input().split()))\n\ng = a[0]\nfor i in range(1,n):\n    g = gcd(g,a[i])\n\nprint(g)\n"
    },
    {
      "index": 5,
      "text": "\n# https://www.codechef.com/problems/GCD2\n# Solution\n\ndef gcd(a,b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b,a%b)\n\nn = int(input())\na = list(map(int,input().split()))\n\ng = a[0]\nfor i in range(1,n):\n    g = gcd(g,a[i])\n\nprint(g)\n"
    }
  ],
  "created": 1650343790,
  "object": "edit"
}
2022-04-19 04:49:57.040280 fix syntax errors 6 ['#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# @Time    : 2019/10/15\n# @Author  : Edrain\n\n# Solution\n\ndef gcd(a,b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b,a%b)\n\nn = int(input())\na = list(map(int,input().split()))\n\ng = a[0]\nfor i in range(1,n):\n    g = gcd(g,a[i])\n\nprint(g)\n', '\n\ndef gcd(a,b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b,a%b)\n\nn = int(input())\na = list(map(int,input().split()))\n\ng = a[0]\nfor i in range(1,n):\n    g = gcd(g,a[i])\n\nprint(g)\n', '\n# Solution\n\ndef gcd(a,b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b,a%b)\n\nn = int(input())\na = list(map(int,input().split()))\n\ng = a[0]\nfor i in range(1,n):\n    g = gcd(g,a[i])\n\nprint(g)\n', '\n# Solution\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b,a%b)\n\nn = int(input())\na = list(map(int,input().split()))\n\ng = a[0]\nfor i in range(1,n):\n    g = gcd(g,a[i])\n\nprint(g)\n', '\n\n# Solution \n\ndef gcd(a,b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b,a%b)\n\nn = int(input())\na = list(map(int,input().split()))\n\ng = a[0]\nfor i in range(1,n):\n    g = gcd(g,a[i])\n\nprint(g)\n', '\n# https://www.codechef.com/problems/GCD2\n# Solution\n\ndef gcd(a,b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b,a%b)\n\nn = int(input())\na = list(map(int,input().split()))\n\ng = a[0]\nfor i in range(1,n):\n    g = gcd(g,a[i])\n\nprint(g)\n']
2022-04-19 04:49:57.040315 size on output set 6
