2022-04-20 08:31:56.618076 num operations 1
2022-04-20 08:31:56.618097 size on input set 1
2022-04-20 08:31:56.618254 using api key gabby
2022-04-20 08:32:00.399427 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    h, w, k = map(int, input().split())\n    c = [list(input()) for _ in range(h)]\n    ans = 0\n    for i in range(2 ** h):\n        for j in range(2 ** w):\n            num = 0\n            for x in range(h):\n                for y in range(w):\n                    if (i >> x) & 1 == 0 and (j >> y) & 1 == 0 and c[x][y] == '#':\n                        num += 1\n            if num == k:\n                ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\nimport sys\n\ndef main():\n    h, w, k = map(int, sys.stdin.readline().split())\n    c = [list(input()) for _ in range(h)]\n    ans = 0\n    for i in range(2**h):\n        for j in range(2**w):\n            num = 0\n            for x in range(h):\n                for y in range(w):\n                    if ((i >> x) & 1) == 0 and ((j >> y) & 1) == 0 and c[x][y] == '#':\n                        num += 1\n            if num == k:\n                ans += 1\n    sys.stdout.write(str(ans))\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "#coding: utf-8\n\nimport sys\n\ndef main():\n    h, w, k = map(int, input().split())\n    c = [list(input()) for _ in range(h)]\n    ans = 0\n    for i in range(2**h):\n        for j in range(2**w):\n            num = 0\n            for x in range(h):\n                for y in range(w):\n                    if ((i >> x) & 1) == 0 and ((j >> y) & 1) == 0 and c[x][y] == '#':\n                        num += 1\n            if num == k:\n                ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\n\nimport sys\n\ndef main():\n    h, w, k = map(int, input().split())\n    c = [list(input()) for _ in range(h)]\n    ans = 0\n    for i in range(2**h):\n        for j in range(2**w):\n            num = 0\n            for x in range(h):\n                for y in range(w):\n                    if ((i >> x) & 1) == 0 and ((j >> y) & 1) == 0 and c[x][y] == '#':\n                        num += 1\n            if num == k:\n                ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650443516,
  "object": "edit"
}
2022-04-20 08:32:00.399694 fix syntax errors 4 ["\nimport sys\n\ndef main():\n    h, w, k = map(int, input().split())\n    c = [list(input()) for _ in range(h)]\n    ans = 0\n    for i in range(2 ** h):\n        for j in range(2 ** w):\n            num = 0\n            for x in range(h):\n                for y in range(w):\n                    if (i >> x) & 1 == 0 and (j >> y) & 1 == 0 and c[x][y] == '#':\n                        num += 1\n            if num == k:\n                ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    h, w, k = map(int, sys.stdin.readline().split())\n    c = [list(input()) for _ in range(h)]\n    ans = 0\n    for i in range(2**h):\n        for j in range(2**w):\n            num = 0\n            for x in range(h):\n                for y in range(w):\n                    if ((i >> x) & 1) == 0 and ((j >> y) & 1) == 0 and c[x][y] == '#':\n                        num += 1\n            if num == k:\n                ans += 1\n    sys.stdout.write(str(ans))\n\nif __name__ == '__main__':\n    main()\n", "#coding: utf-8\n\nimport sys\n\ndef main():\n    h, w, k = map(int, input().split())\n    c = [list(input()) for _ in range(h)]\n    ans = 0\n    for i in range(2**h):\n        for j in range(2**w):\n            num = 0\n            for x in range(h):\n                for y in range(w):\n                    if ((i >> x) & 1) == 0 and ((j >> y) & 1) == 0 and c[x][y] == '#':\n                        num += 1\n            if num == k:\n                ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\n\nimport sys\n\ndef main():\n    h, w, k = map(int, input().split())\n    c = [list(input()) for _ in range(h)]\n    ans = 0\n    for i in range(2**h):\n        for j in range(2**w):\n            num = 0\n            for x in range(h):\n                for y in range(w):\n                    if ((i >> x) & 1) == 0 and ((j >> y) & 1) == 0 and c[x][y] == '#':\n                        num += 1\n            if num == k:\n                ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 08:32:00.399736 size on output set 4
2022-04-20 08:32:00.399747 num operations 1
2022-04-20 08:32:00.399753 size on input set 1
2022-04-20 08:32:00.399906 using api key jaanu
2022-04-20 08:32:03.095923 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\n\ndef main():\n    h, w, k = map(int, sys.stdin.readline().split())\n    grid = []\n    for i in range(h):\n        grid.append(sys.stdin.readline().strip())\n    count = 0\n    for i in range(2 ** h):\n        for j in range(2 ** w):\n            cnt = 0\n            for r in range(h):\n                for c in range(w):\n                    if (i >> r) & 1 == 1:\n                        cnt += 1\n                    elif (j >> c) & 1 == 1:\n                        cnt += 1\n                    elif grid[r][c] == '#':\n                        cnt += 1\n            if cnt == k:\n                count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    h, w, k = map(int, sys.stdin.readline().split())\n    grid = []\n    for i in range(h):\n        grid.append(sys.stdin.readline().strip())\n    count = 0\n    for i in range(2**h):\n        for j in range(2**w):\n            cnt = 0\n            for r in range(h):\n                for c in range(w):\n                    if (i >> r) & 1 == 1:\n                        cnt += 1\n                    elif (j >> c) & 1 == 1:\n                        cnt += 1\n                    elif grid[r][c] == '#':\n                        cnt += 1\n            if cnt == k:\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "import sys\n\ndef main():\n    h, w, k = map(int, sys.stdin.readline().split())\n    grid = []\n    for i in range(h):\n        grid.append(sys.stdin.readline().strip())\n    count = 0\n    for i in range(2**h):\n        for j in range(2**w):\n            cnt = 0\n            for r in range(h):\n                for c in range(w):\n                    if (i >> r) & 1 == 1:\n                        cnt += 1\n                    elif (j >> c) & 1 == 1:\n                        cnt += 1\n                    elif grid[r][c] == '#':\n                        cnt += 1\n            if cnt == k:\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    h, w, k = map(int, sys.stdin.readline().split())\n    grid = []\n    for i in range(h):\n        grid.append(sys.stdin.readline().strip())\n    count = 0\n    for i in range(2**h):\n        for j in range(2**w):\n            cnt = 0\n            for r in range(h):\n                for c in range(w):\n                    if (i >> r) & 1 == 1:\n                        cnt += 1\n                    elif (j >> c) & 1 == 1:\n                        cnt += 1\n                    elif grid[r][c] == '#':\n                        cnt += 1\n            if cnt == k:\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650443520,
  "object": "edit"
}
2022-04-20 08:32:03.096180 fix syntax errors 4 ["\nimport sys\n\n\ndef main():\n    h, w, k = map(int, sys.stdin.readline().split())\n    grid = []\n    for i in range(h):\n        grid.append(sys.stdin.readline().strip())\n    count = 0\n    for i in range(2 ** h):\n        for j in range(2 ** w):\n            cnt = 0\n            for r in range(h):\n                for c in range(w):\n                    if (i >> r) & 1 == 1:\n                        cnt += 1\n                    elif (j >> c) & 1 == 1:\n                        cnt += 1\n                    elif grid[r][c] == '#':\n                        cnt += 1\n            if cnt == k:\n                count += 1\n    print(count)\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    h, w, k = map(int, sys.stdin.readline().split())\n    grid = []\n    for i in range(h):\n        grid.append(sys.stdin.readline().strip())\n    count = 0\n    for i in range(2**h):\n        for j in range(2**w):\n            cnt = 0\n            for r in range(h):\n                for c in range(w):\n                    if (i >> r) & 1 == 1:\n                        cnt += 1\n                    elif (j >> c) & 1 == 1:\n                        cnt += 1\n                    elif grid[r][c] == '#':\n                        cnt += 1\n            if cnt == k:\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    h, w, k = map(int, sys.stdin.readline().split())\n    grid = []\n    for i in range(h):\n        grid.append(sys.stdin.readline().strip())\n    count = 0\n    for i in range(2**h):\n        for j in range(2**w):\n            cnt = 0\n            for r in range(h):\n                for c in range(w):\n                    if (i >> r) & 1 == 1:\n                        cnt += 1\n                    elif (j >> c) & 1 == 1:\n                        cnt += 1\n                    elif grid[r][c] == '#':\n                        cnt += 1\n            if cnt == k:\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    h, w, k = map(int, sys.stdin.readline().split())\n    grid = []\n    for i in range(h):\n        grid.append(sys.stdin.readline().strip())\n    count = 0\n    for i in range(2**h):\n        for j in range(2**w):\n            cnt = 0\n            for r in range(h):\n                for c in range(w):\n                    if (i >> r) & 1 == 1:\n                        cnt += 1\n                    elif (j >> c) & 1 == 1:\n                        cnt += 1\n                    elif grid[r][c] == '#':\n                        cnt += 1\n            if cnt == k:\n                count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 08:32:03.096347 size on output set 4
