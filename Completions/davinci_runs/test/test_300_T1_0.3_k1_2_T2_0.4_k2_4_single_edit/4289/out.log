2022-04-18 22:00:29.174106 """
A country decides to build a palace.
In this country, the average temperature of a point at an elevation of x meters is T-x \times 0.006 degrees Celsius.
There are N places proposed for the place. The elevation of Place i is H_i meters.
Among them, Princess Joisino orders you to select the place whose average temperature is the closest to A degrees Celsius, and build the palace there.
Print the index of the place where the palace should be built.
It is guaranteed that the solution is unique.

-----Constraints-----
 - 1 \leq N \leq 1000
 - 0 \leq T \leq 50
 - -60 \leq A \leq T
 - 0 \leq H_i \leq 10^5
 - All values in input are integers.
 - The solution is unique.

-----Input-----
Input is given from Standard Input in the following format:
N
T A
H_1 H_2 ... H_N

-----Output-----
Print the index of the place where the palace should be built.

-----Sample Input-----
2
12 5
1000 2000

-----Sample Output-----
1

 - The average temperature of Place 1 is 12-1000 \times 0.006=6 degrees Celsius.
 - The average temperature of Place 2 is 12-2000 \times 0.006=0 degrees Celsius.
Thus, the palace should be built at Place 1.
"""
2022-04-18 22:00:29.174131 --------------------------
2022-04-18 22:00:51.883245 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    t, a = map(int, input().split())\n    h = list(map(int, input().split()))\n    min_dif = sys.maxsize\n    min_idx = 0\n    for i in range(n):\n        dif = abs(t - h[i] * 0.006 - a)\n        if dif < min_dif:\n            min_dif = dif\n            min_idx = i\n    print(min_idx + 1)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\nimport math\n\nn = int(input())\nt, a = map(int, input().split())\nh = list(map(int, input().split()))\n\ntemp = []\nfor i in range(n):\n    temp.append(t - h[i] * 0.006)\n\ntemp_diff = []\nfor i in range(n):\n    temp_diff.append(abs(temp[i] - a))\n\nprint(temp_diff.index(min(temp_diff)) + 1)"
    }
  ],
  "created": 1650319229,
  "id": "cmpl-4yTi1k7F90Bu6xSJjPm6lEXwHVyrL",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-18 22:00:51.883492 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport sys\n\ndef main():\n    n = int(input())\n    t, a = map(int, input().split())\n    h = list(map(int, input().split()))\n    min_dif = sys.maxsize\n    min_idx = 0\n    for i in range(n):\n        dif = abs(t - h[i] * 0.006 - a)\n        if dif < min_dif:\n            min_dif = dif\n            min_idx = i\n    print(min_idx + 1)\n\nif __name__ == '__main__':\n    main()"
}
2022-04-18 22:00:51.883528 REASON stop
2022-04-18 22:00:51.921990 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\nimport math\n\nn = int(input())\nt, a = map(int, input().split())\nh = list(map(int, input().split()))\n\ntemp = []\nfor i in range(n):\n    temp.append(t - h[i] * 0.006)\n\ntemp_diff = []\nfor i in range(n):\n    temp_diff.append(abs(temp[i] - a))\n\nprint(temp_diff.index(min(temp_diff)) + 1)"
}
2022-04-18 22:00:51.922109 REASON stop
