["\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\nelse:\n    dp = [[0] * (x + 1) for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        for j in range(1, x + 1):\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - 1] + sum(a[i - k:i]))\n    print(dp[n][x])\n", "import sys\n\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1, file=sys.stderr)\nelse:\n    dp = [[0] * (x + 1) for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        for j in range(1, x + 1):\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - 1] + sum(a[i - k:i]))\n    print(dp[n][x])\n", "\n\nimport sys\n\ndef main():\n    n, k, x = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = [[[0 for _ in range(x+1)] for _ in range(n+1)] for _ in range(n+1)] # dp[i][j][l] = i\u756a\u76ee\u307e\u3067\u898b\u3066\u3001j\u756a\u76ee\u304b\u3089\u59cb\u3081\u3066\u3001l\u56de\u64cd\u4f5c\u3057\u305f\u3068\u304d\u306e\u6700\u5927\u5024\n    for i in range(1, n+1):\n        for j in range(1, n+1):\n            for l in range(1, x+1):\n                if i == j:\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1]) # \u9023\u7d9a\u3057\u3066\u3044\u308b\u5834\u5408\n                else:\n                    if i - j + 1 >= k:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1]) # \u9023\u7d9a\u3057\u3066\u3044\u306a\u3044\u5834\u5408\n                    if l > 1:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][i][l-1] + a[i-1])\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l])\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            ans = max(ans, dp[n][i][j])\n    if ans == 0:\n        print(-1)\n    else:\n        print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, k, x = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = [[[0 for _ in range(x+1)] for _ in range(n+1)] for _ in range(n+1)]\n    for i in range(1, n+1):\n        for j in range(1, n+1):\n            for l in range(1, x+1):\n                if i == j:\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                else:\n                    if i - j + 1 >= k:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                    if l > 1:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][i][l-1] + a[i-1])\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l])\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            ans = max(ans, dp[n][i][j])\n    if ans == 0:\n        print(-1)\n    else:\n        print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys, collections\n\ndef main():\n    n, k, x = map(int, sys.stdin.readline().split())\n    a = collections.deque(map(int, sys.stdin.readline().split()))\n    dp = [[[0 for _ in range(x+1)] for _ in range(n)] for _ in range(n)]\n    for i in range(n):\n        for j in range(n):\n            for l in range(x+1):\n                if i == j: dp[i][j][l] = max(dp[i][j][l], dp[i][j][l-1] + a[i])\n                else:\n                    if i - j + 1 >= k: dp[i][j][l] = max(dp[i][j][l], dp[i][j][l-1] + a[i])\n                    if l > 1: dp[i][j][l] = max(dp[i][j][l], dp[i][i][l-1] + a[i])\n                    dp[i][j][l] = max(dp[i][j][l], dp[i][j][l-1])\n    print(max(dp[n-1][i][x] for i in range(n)))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, k, x = map(int, sys.stdin.readline().split())\n    a = list(map(int, sys.stdin.readline().split()))\n    dp = [[[0 for _ in range(x+1)] for _ in range(n+1)] for _ in range(n+1)] \n    for i in range(1, n+1):\n        for j in range(1, n+1):\n            for l in range(1, x+1):\n                if i == j:\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                else:\n                    if i - j + 1 >= k:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l] + a[i-1])\n                    if l > 1:\n                        dp[i][j][l] = max(dp[i][j][l], dp[i-1][i][l-1] + a[i-1])\n                    dp[i][j][l] = max(dp[i][j][l], dp[i-1][j][l])\n    ans = 0\n    for i in range(1, n+1):\n        for j in range(1, x+1):\n            ans = max(ans, dp[n][i][j])\n    if ans == 0:\n        print(-1)\n    else:\n        print(ans)\n\nif __name__ == '__main__':\n    main()\n", "#!/usr/bin/env python3\n\nn, k, x = map(int, input().split())\na = list(map(int, input().split()))\n\nif x < k:\n    print(-1)\nelse:\n    dp = [[0] * (x + 1) for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        for j in range(1, x + 1):\n            dp[i][j] = max(dp[i - 1][j], dp[i - k][j - 1] + sum(a[i - k:i]))\n    print(dp[n][x])\n"]