["\nn, h, l, r = map(int, input().split())\na = list(map(int, input().split()))\n\ndef solve(n, h, l, r, a):\n    dp = [0] * h\n    dp[0] = 1\n    for i in range(1, h):\n        dp[i] = dp[i-1]\n        if i >= a[0]:\n            dp[i] = max(dp[i], dp[i-a[0]])\n    for i in range(1, n):\n        dp2 = [0] * h\n        dp2[0] = 1\n        for j in range(1, h):\n            dp2[j] = dp2[j-1]\n            if j >= a[i]:\n                dp2[j] = max(dp2[j], dp2[j-a[i]])\n            if j >= a[i] - 1:\n                dp2[j] = max(dp2[j], dp[j-a[i]+1])\n        dp = dp2\n    return sum(dp[l:r+1])\n\nprint(solve(n, h, l, r, a))\n", "import sys\nsys.setrecursionlimit(10 ** 7)\n\n\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\nN, M = map(int, input().split())\nAB = [list(map(int, input().split())) for _ in range(M)]\n\nG = [[] for _ in range(N)]\nfor a, b in AB:\n    G[a - 1].append(b - 1)\n    G[b - 1].append(a - 1)\n\n\ndef dfs(v, p):\n    for u in G[v]:\n        if u == p:\n            continue\n        dfs(u, v)\n\n\ndfs(0, -1)\n", "\nn, h, l, r = map(int, input().split())\na = list(map(int, input().split()))\n\ndp = [0] * h\ndp[0] = 1\n\nfor i in range(n):\n    dp2 = dp[:]\n    for j in range(h):\n        if dp[j]:\n            dp2[(j + a[i]) % h] = 1\n            dp2[(j + a[i] - 1) % h] = 1\n    dp = dp2\n\nprint(sum(dp[l:r + 1]))\n", "\nn, h, l, r = map(int, input().split())\na = list(map(int, input().split()))\n\ndp = [[0] * h for _ in range(n)]\ndp[0][0] = 1\nfor i in range(1, h):\n    dp[0][i] = dp[0][i-1]\n    if i >= a[0]:\n        dp[0][i] = max(dp[0][i], dp[0][i-a[0]])\nfor i in range(1, n):\n    dp[i][0] = 1\n    for j in range(1, h):\n        dp[i][j] = dp[i][j-1]\n        if j >= a[i]:\n            dp[i][j] = max(dp[i][j], dp[i][j-a[i]])\n        if j >= a[i] - 1:\n            dp[i][j] = max(dp[i][j], dp[i-1][j-a[i]+1])\n\nprint(sum(dp[n-1][l:r+1]))\n", "\nn, h, l, r = map(int, input().split())\na = list(map(int, input().split()))\ndp = [0] * h\ndp[0] = 1\nfor i in range(1, h):\n    dp[i] = dp[i-1]\n    if i >= a[0]:\n        dp[i] = max(dp[i], dp[i-a[0]])\nfor i in range(1, n):\n    dp2 = [0] * h\n    dp2[0] = 1\n    for j in range(1, h):\n        dp2[j] = dp2[j-1]\n        if j >= a[i]:\n            dp2[j] = max(dp2[j], dp2[j-a[i]])\n        if j >= a[i] - 1:\n            dp2[j] = max(dp2[j], dp[j-a[i]+1])\n    dp = dp2\nprint(sum(dp[l:r+1]))\n", "#!/usr/bin/env python3\n\nn, h, l, r = map(int, input().split())\na = list(map(int, input().split()))\n\ndp = [0] * h\ndp[0] = 1\n\nfor i in range(n):\n    dp2 = dp[:]\n    for j in range(h):\n        if dp[j]:\n            dp2[(j + a[i]) % h] = 1\n            dp2[(j + a[i] - 1) % h] = 1\n    dp = dp2\n\nprint(sum(dp[l:r + 1]))\n", "\nn, h, l, r = map(int, input().split())\na = list(map(int, input().split()))\n\ndp = [0] * h\ndp[0] = 1\nfor i in range(1, h):\n    dp[i] = dp[i-1]\n    if i >= a[0]:\n        dp[i] = max(dp[i], dp[i-a[0]])\nfor i in range(1, n):\n    dp2 = [0] * h\n    dp2[0] = 1\n    for j in range(1, h):\n        dp2[j] = dp2[j-1]\n        if j >= a[i]:\n            dp2[j] = max(dp2[j], dp2[j-a[i]])\n        if j >= a[i] - 1:\n            dp2[j] = max(dp2[j], dp[j-a[i]+1])\n    dp = dp2\n\nprint(sum(dp[l:r+1]))\n"]