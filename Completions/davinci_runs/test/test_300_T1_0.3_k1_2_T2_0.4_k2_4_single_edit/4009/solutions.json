["n, x, y = map(int, input().split())\ns = input()[-x:]\nres = s.count('1')\nif s[-y - 1] == '1': res -= 1\nelse: res += 1\n# print(s)\nprint(res)", "n, x, y = map(int, input().split())\ns = input()\ncnt = 0\nfor i in range(n - x, n):\n    if s[i] == '1':\n        if i != n - y - 1: cnt += 1\n    elif i == n - y - 1: cnt += 1\nprint(cnt)", "n, x, y = list(map(int, input().split()))\ns = input()\ns = s[::-1]\nans = 0\nfor i in range(x):\n    if i == y:\n        if s[i] == \"0\":\n            ans += 1\n    else:\n        if s[i] == \"1\":\n            ans += 1\nprint(ans)\n", "n, x, y = list(map(int, input().split()))\ns = input()\nans = 0\nfor i in range(n - x, n):\n\tif i < n - y - 1:\n\t\tif s[i] == '1':\n\t\t\tans += 1\n\telse:\n\t\tif i == n - y - 1:\n\t\t\tif s[i] == '0':\n\t\t\t\tans += 1\n\t\telse:\n\t\t\tif (s[i] == '1'):\n\t\t\t\tans += 1\nprint(ans)\n", "n, x, y = map(int, input().split())\ns = input()\ns = s[-x:]\ncnt = 0\nfor i in range(len(s)):\n    if i == x - y - 1 and s[i] == '0':\n        cnt += 1\n    elif s[i] == '1' and i != x - y - 1:\n        cnt += 1\nprint(cnt)", "n, x, y = list(map(int, input().split()))\ns = input().strip()\nans = 0\nfor i in range(x):\n    if i == y:\n        ans += s[n - 1 - i] == '0'\n    else:\n        ans += s[n - 1 - i] == '1'\nprint(ans)\n", "def main():\n    n, x, y = map(int, input().split())\n    s = input()\n    ans = 0\n    for i in range(-1, -x - 1, -1):\n        if i == -(y + 1):\n            ans += s[i] != '1'\n            continue\n        ans += s[i] == '1'\n    print(int(ans))\n    return 0\n\nmain()", "import math\nimport bisect\nimport heapq\nfrom collections import defaultdict\n\n\ndef egcd(a, b):\n    if a == 0:\n        return (b, 0, 1)\n    else:\n        g, x, y = egcd(b % a, a)\n        return (g, y - (b // a) * x, x)\n\n\ndef mulinv(b, n):\n    g, x, _ = egcd(b, n)\n    if g == 1:\n        return x % n\n\n\n\ndef isprime(n):\n    for d in range(2, int(math.sqrt(n))+1):\n        if n % d == 0:\n            return False\n    return True\n\n\ndef argsort(ls):\n    return sorted(range(len(ls)), key=ls.__getitem__)\n\n\ndef f(p=0):\n    if p == 1:\n        return map(int, input().split())\n    elif p == 2:\n        return list(map(int, input().split()))\n    elif p == 3:\n        return list(input())\n    else:\n        return int(input())\n\nn, x, y = f(1)\ns = f(3)\n\ncount = 0\n\nfor i in range(n-x, n):\n    if (s[i]=='1' and i!=n-1-y) or (s[i]=='0' and i==n-1-y):\n        count+=1\n\nprint(count)", "# AC\nimport sys\n\n\nclass Main:\n    def __init__(self):\n        self.buff = None\n        self.index = 0\n\n    def __next__(self):\n        if self.buff is None or self.index == len(self.buff):\n            self.buff = self.next_line()\n            self.index = 0\n        val = self.buff[self.index]\n        self.index += 1\n        return val\n\n    def next_line(self):\n        return sys.stdin.readline().split()\n\n    def next_ints(self):\n        return [int(x) for x in sys.stdin.readline().split()]\n\n    def next_int(self):\n        return int(next(self))\n\n    def solve(self):\n        n, x, y = self.next_ints()\n        xx = next(self)\n        stp = 0\n        for i in range(0, x):\n            if i == y:\n                if xx[- 1 - i] != '1':\n                    stp += 1\n            elif xx[-1 - i] != '0':\n                stp += 1\n        print(stp)\n\n\ndef __starting_point():\n    Main().solve()\n\n__starting_point()", "n, x, y = list(map(int, input().split()))\ns = input()\nans = 0\nfor i in range(n - x, n):\n    if i == n - y - 1:\n        if (s[i] == '0'):\n            ans += 1\n    else:\n        if (s[i] == '1'):\n            ans += 1\nprint(ans)\n", "n, x, y = map(int, input().split())\ns = input()\ncount = 0\nfor i in range(n - x, n):\n    if s[i] == \"1\" and i != n - y - 1:\n        count += 1\n    if s[i] == \"0\" and i == n - y - 1:\n        count += 1\nprint(count)", "n,x,y = list(map(int, input().split()))\nnum = input()\nans=0\nfor i in range(x):\n    if i==y:\n        if num[n-1-i]!=\"1\":\n            ans+=1\n    else:\n        if num[n-1-i]!=\"0\":\n            ans+=1\nprint(ans)\n#r = list(map(int, input().split()))\n", "n,x,y=[int(x) for x in input().split()]\na=[int(x) for x in list(input())]\ncounter=0\nfor i in range(n-x,n):\n    if i==n-y-1:\n        if a[i]==0:\n            counter+=1\n    else:\n        if a[i]==1:\n            counter+=1\nprint(counter)\n", "def main():\n    from sys import stdin, stdout\n\n    def read():\n        return stdin.readline().rstrip('\\n')\n\n    def read_array(sep=None, maxsplit=-1):\n        return read().split(sep, maxsplit)\n\n    def read_int():\n        return int(read())\n\n    def read_int_array(sep=None, maxsplit=-1):\n        return [int(a) for a in read_array(sep, maxsplit)]\n\n    def write(*args, **kwargs):\n        sep = kwargs.get('sep', ' ')\n        end = kwargs.get('end', '\\n')\n        stdout.write(sep.join(str(a) for a in args) + end)\n\n    def write_array(array, **kwargs):\n        sep = kwargs.get('sep', ' ')\n        end = kwargs.get('end', '\\n')\n        stdout.write(sep.join(str(a) for a in array) + end)\n\n    n, x, y = read_int_array()\n    s = read()\n    out = 0\n    for i in range(x):\n        if i != y and s[-1-i] == '1':\n            out += 1\n        elif i == y and s[-1-i] == '0':\n            out += 1\n    write(out)\n\nmain()\n", "l = list(map(int,input().split()))\nn = l[0]\nx = l[1]\ny = l[2]\ns = input()\nstring = s[::-1]\ncount = 0\nfor i in range(y):\n\tif(string[i]==\"1\"):\n\t\tcount+=1\nif(string[y]==\"0\"):\n\tcount+=1\nfor i in range(y+1,x):\n\tif(string[i]==\"1\"):\n\t\tcount+=1\nprint(count)", "n,x,y = list(map(int,input().split()))\ns = input()\n\nprint(s[-x:].count('1') - (1 if s[-y-1]=='1' else -1))\n#print(s[-x:],s[-x:].count('1'),1 if s[-y-1]=='1' else 0)\n\n", "n,x,y=input().split()\nans=0\ns=input()\ns=s[::-1]\ns=s[:int(x)]\nfor i in range(0,len(s)):\n    if i==int(y):\n        if s[i]=='0':\n            ans+=1\n    else :\n        if s[i]=='1':\n            ans+=1\n            \nprint(ans)\n", "IN = input\nrint = lambda: int(IN())\nrmint = lambda: map(int, IN().split())\nrlist = lambda: list(rmint())\n\nn, x, y = rmint()\nt = list(map(int,list(IN())))\nt.reverse()\nt = t[:x]\nt[y] = 1 - t[y]\nprint(sum(t))", "n, x, y = map( int, input().split() )\n\ns = input()\n\nans = 0\n\nfor i in range( x ):\n    if s[ -(i + 1) ] != ( '1' if i == y else '0' ) :\n        ans += 1\n\nprint( ans )", "[n, x, y] = [int(i) for i in input().split()]\ns = input()\nt = \"\"\nfor i in range(x):\n\tt += s[len(s) - 1 - i]\nans = 0\nfor i in range(x):\n\tif y == i:\n\t\tans += int(t[i] != '1')\n\telse:\n\t\tans += int(t[i] != '0')\nprint (ans)", "n,x,y=list(map(int,input().split()))\nA=input()[-x:]\nB=str(10**y).zfill(x)\n\nANS=0\nfor i in range(x):\n    if A[i]!=B[i]:\n        ANS+=1\n\nprint(ANS)\n", "n, x, y = list(map(int,input().split()))\nl = input()\nwyn = 0\nfor i in range(n):\n\tj = n - 1 - i\n\tif i == x:\n\t\tbreak\n\tif i < y:\n\t\tif l[j] == '1':\n\t\t\twyn += 1\n\tif i == y:\n\t\tif l[j] == '0':\n\t\t\twyn += 1\n\tif i > y:\n\t\tif l[j] == '1':\n\t\t\twyn += 1\nprint(wyn)", "n,x,y=map(int,input().split())\na=input()\ncount=0\na=a[::-1]\nfor i in range(y):\n    if a[i]=='1':\n        count+=1\nif a[y]=='0':\n    count+=1\nfor i in range(y+1,x):\n    if a[i]=='1':\n        count+=1\nprint(count)", "l=(input().split())\nn=int(l[0])\nx=int(l[1])\ny=int(l[2])\nnum=input()\ncount=0\nfor i in range(n-1,n-x-1,-1):\n\tif i==(n-1-y):\n\t\tif num[i]==\"0\":\n\t\t\tcount+=1\n\telse:\n\t\tif num[i]==\"1\":\n\t\t\tcount+=1\nprint (count)", "# stdin=open('input.txt')\nfrom sys import stdin\n\ndef input():\n\treturn stdin.readline()[:-1]\n\n\n# # stdout=open('output.txt',mode='w+')\n\n# # def print(x, end='\\n'):\n# # \tstdout.write(str(x) +end)\n\n\n# # a, b = map(int, input().split())\n\n# # l = list(map(int, input().split()))\n\n\n\n\n\n\n\n# CODE BEGINS HERE.................\n\n\nn, x, y = list(map(int, input().split()))\ns = input()\nones = s[-1*x:].count('1') - (s[-1 * y - 1] == '1') + (s[-1 * y - 1] == '0')\n\nprint(ones)\n\n\n#CODE ENDS HERE....................\n\n#stdout.close()\n\n"]