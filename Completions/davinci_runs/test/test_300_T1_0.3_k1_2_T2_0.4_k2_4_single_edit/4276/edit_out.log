2022-04-20 08:45:34.532502 num operations 1
2022-04-20 08:45:34.532522 size on input set 1
2022-04-20 08:45:34.532724 using api key kouti
2022-04-20 08:45:39.805489 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport math\n\na, b = map(int, input().split())\n\nprint(math.ceil((a + b) / 2))\n"
    },
    {
      "index": 1,
      "text": "\nN, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    },
    {
      "index": 2,
      "text": "\n#\n# N, T = map(int, input().split())\n#\n# costs = []\n# for _ in range(N):\n#     cost, time = map(int, input().split())\n#     if time <= T:\n#         costs.append(cost)\n#\n# if len(costs) == 0:\n#     print('TLE')\n# else:\n#     print(min(costs))\n"
    },
    {
      "index": 3,
      "text": "\nN, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"
    }
  ],
  "created": 1650444334,
  "object": "edit"
}
2022-04-20 08:45:39.805778 fix syntax errors 4 ['\nimport math\n\na, b = map(int, input().split())\n\nprint(math.ceil((a + b) / 2))\n', "\nN, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n", "\n#\n# N, T = map(int, input().split())\n#\n# costs = []\n# for _ in range(N):\n#     cost, time = map(int, input().split())\n#     if time <= T:\n#         costs.append(cost)\n#\n# if len(costs) == 0:\n#     print('TLE')\n# else:\n#     print(min(costs))\n", "\nN, T = map(int, input().split())\n\ncosts = []\nfor _ in range(N):\n    cost, time = map(int, input().split())\n    if time <= T:\n        costs.append(cost)\n\nif len(costs) == 0:\n    print('TLE')\nelse:\n    print(min(costs))\n"]
2022-04-20 08:45:39.805813 size on output set 3
2022-04-20 08:45:39.805825 num operations 1
2022-04-20 08:45:39.805832 size on input set 1
2022-04-20 08:45:39.805987 using api key jaanu
2022-04-20 08:45:42.997018 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts_sorted = sorted(costs)\ntimes_sorted = sorted(times)\n\nif times_sorted[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs_sorted[0])\n"
    },
    {
      "index": 1,
      "text": "\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs)\ntimes = sorted(times)\n\nif times[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs[0])\n"
    },
    {
      "index": 2,
      "text": "\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs, reverse=True)\ntimes = sorted(times, reverse=True)\n\nif times[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs[0])\n"
    },
    {
      "index": 3,
      "text": "\nN, T = map(int, input().split())\ncosts, times = [], []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs)\ntimes = sorted(times)\n\nif times[0] > T:\n    print(\"TLE\")\nelse:\n    print(costs[0])\n"
    }
  ],
  "created": 1650444339,
  "object": "edit"
}
2022-04-20 08:45:42.997257 fix syntax errors 4 ['\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts_sorted = sorted(costs)\ntimes_sorted = sorted(times)\n\nif times_sorted[0] > T:\n    print("TLE")\nelse:\n    print(costs_sorted[0])\n', '\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs)\ntimes = sorted(times)\n\nif times[0] > T:\n    print("TLE")\nelse:\n    print(costs[0])\n', '\nN, T = map(int, input().split())\ncosts = []\ntimes = []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs, reverse=True)\ntimes = sorted(times, reverse=True)\n\nif times[0] > T:\n    print("TLE")\nelse:\n    print(costs[0])\n', '\nN, T = map(int, input().split())\ncosts, times = [], []\nfor i in range(N):\n    c, t = map(int, input().split())\n    costs.append(c)\n    times.append(t)\n\ncosts = sorted(costs)\ntimes = sorted(times)\n\nif times[0] > T:\n    print("TLE")\nelse:\n    print(costs[0])\n']
2022-04-20 08:45:42.997289 size on output set 4
