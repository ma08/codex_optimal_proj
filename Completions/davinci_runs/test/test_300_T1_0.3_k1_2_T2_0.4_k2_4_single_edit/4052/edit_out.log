2022-04-20 08:05:21.990154 num operations 1
2022-04-20 08:05:21.990175 size on input set 1
2022-04-20 08:05:21.990381 using api key sourya
2022-04-20 08:05:26.219488 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef main():\n    n = int(input())\n    s = input()\n    t = input()\n    moves = []\n    for i in range(n):\n        if s[i] != t[i]:\n            for j in range(i+1, n):\n                if s[j] == t[i]:\n                    moves.append(j)\n                    s = s[:j] + s[j+1] + s[j] + s[j+1:]\n                    break\n    if s == t:\n        print(len(moves))\n        print(' '.join(map(str, moves)))\n    else:\n        print(-1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    s = input()\n    t = input()\n    moves = []\n    for i in range(n):\n        if s[i] != t[i]:\n            for j in range(i+1, n):\n                if s[j] == t[i]:\n                    moves.append(j)\n                    s = s[:j] + s[j+1] + s[j] + s[j+1:]\n                    break\n    if s == t:\n        print(len(moves))\n        print(' '.join(map(str, moves)))\n    else:\n        print(-1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\ndef main():\n    n = int(input())\n    s = input()\n    t = input()\n    moves = []\n    for i in range(n):\n        if s[i] != t[i]:\n            for j in range(i+1, n):\n                if s[j] == t[i]:\n                    moves.append(j)\n                    s = s[:j] + s[j+1] + s[j] + s[j+1:]\n                    break\n    if s == t:\n        print(len(moves))\n        print(' '.join(map(str, moves)))\n    else:\n        print(-1)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650441922,
  "object": "edit"
}
2022-04-20 08:05:26.219742 fix syntax errors 4 ["\n\ndef main():\n    n = int(input())\n    s = input()\n    t = input()\n    moves = []\n    for i in range(n):\n        if s[i] != t[i]:\n            for j in range(i+1, n):\n                if s[j] == t[i]:\n                    moves.append(j)\n                    s = s[:j] + s[j+1] + s[j] + s[j+1:]\n                    break\n    if s == t:\n        print(len(moves))\n        print(' '.join(map(str, moves)))\n    else:\n        print(-1)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    s = input()\n    t = input()\n    moves = []\n    for i in range(n):\n        if s[i] != t[i]:\n            for j in range(i+1, n):\n                if s[j] == t[i]:\n                    moves.append(j)\n                    s = s[:j] + s[j+1] + s[j] + s[j+1:]\n                    break\n    if s == t:\n        print(len(moves))\n        print(' '.join(map(str, moves)))\n    else:\n        print(-1)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    s = input()\n    t = input()\n    moves = []\n    for i in range(n):\n        if s[i] != t[i]:\n            for j in range(i+1, n):\n                if s[j] == t[i]:\n                    moves.append(j)\n                    s = s[:j] + s[j+1] + s[j] + s[j+1:]\n                    break\n    if s == t:\n        print(len(moves))\n        print(' '.join(map(str, moves)))\n    else:\n        print(-1)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 08:05:26.219783 size on output set 2
