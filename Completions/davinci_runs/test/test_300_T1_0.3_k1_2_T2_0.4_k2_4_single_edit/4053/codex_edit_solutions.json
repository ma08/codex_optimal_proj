["\nn = int(input())\nprefixes = []\nsuffixes = []\n\nfor i in range(2 * n - 2):\n    s = input()\n    if len(s) == 1:\n        prefixes.append(s)\n    else:\n        suffixes.append(s)\n\nfor i in range(2 * n - 2):\n    if i < n - 1:\n        print(\"P\", end=\"\")\n    else:\n        print(\"S\", end=\"\")\n", "\n\ndef main():\n    n = int(input())\n    prefixes = []\n    suffixes = []\n    for i in range(n):\n        prefixes.append(input())\n    for i in range(n):\n        suffixes.append(input())\n    prefixes.sort()\n    suffixes.sort()\n    for i in range(n):\n        print('P', end='') \n        print('S', end='') \n    print()\n\nif __name__ == \"__main__\":\n    main()\n", "\n\nn = int(input())\nprefixes = []\nsuffixes = []\n\nfor i in range(2*n-2):\n    s = input()\n    if len(s) == n-1:\n        prefixes.append(s)\n    else:\n        suffixes.append(s)\n\nprefixes.sort()\nsuffixes.sort()\n\nif prefixes[0][0] == prefixes[1][0]:\n    print(prefixes[0] + suffixes[0])\nelse:\n    print(prefixes[1] + suffixes[0])\n", "\n\nn = int(input())\nprefixes = []\nsuffixes = []\n\nfor i in range(2*n-2):\n    s = input()\n    if len(s) == 1:\n        prefixes.append(s)\n    else:\n        suffixes.append(s)\n\nfor i in range(2*n-2):\n    if i < n-1 and prefixes[i] == 'P':\n    elif i < n-1 and prefixes[i] == 'S':\n        print(\"S\", end=\"\")\n    elif i >= n-1 and suffixes[i-n+1] == 'P':\n        print(\"P\", end=\"\")\n        print(\"P\", end=\"\")\n    else:\n\n\n\n\n\n        print(\"S\", end=\"\")\n", "def check(s1, s2):\n    for i in range(len(s1)):\n        if s1[i] == s2[0]:\n            if s1[i:] == s2:\n                return True\n    return False\n\n\n\ndef solve(n, prefixes, suffixes):\n    for i in range(2*n-2):\n        if i < n-1:\n            print(\"P\", end=\"\")\n        else:\n            print(\"S\", end=\"\")\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    prefixes = []\n    suffixes = []\n\n    for i in range(2*n-2):\n        s = input()\n        if len(s) == 1:\n            prefixes.append(s)\n        else:\n            suffixes.append(s)\n\n    solve(n, prefixes, suffixes)\n", "\n\ndef main():\n    n = int(input())\n    prefixes = []\n    suffixes = []\n    for i in range(n):\n        prefixes.append(input())\n    for i in range(n):\n        suffixes.append(input())\n    prefixes.sort()\n    suffixes.sort()\n    for i in range(n):\n        print('P', end=' ')\n        print('S', end=' ')\n    print()\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    prefixes = []\n    suffixes = []\n    for i in range(n):\n        prefixes.append(input())\n    for i in range(n):\n        suffixes.append(input())\n    prefixes.sort()\n    suffixes.sort()\n    for i in range(n):\n        print('P', end=''),\n        print('S', end=''),\n    print()\n\nif __name__ == \"__main__\":\n    main()\n"]