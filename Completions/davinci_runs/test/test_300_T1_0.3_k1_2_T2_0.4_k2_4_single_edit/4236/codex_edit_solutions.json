["\n\ndef main():\n    n, m = map(int, input().split())\n    segments = []\n    for _ in range(n):\n        l, r = map(int, input().split())\n        segments.append((l, r))\n    segments.sort(key=lambda x: x[0])\n    # print(segments)\n    points = []\n    for i in range(n):\n        if i == n-1 or segments[i][1] < segments[i+1][0]:\n            points.append(segments[i][1]) \n    print(len(points))\n    print(*points)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n, m = map(int, input().split())\n    segments = []\n    for _ in range(n):\n        l, r = map(int, input().split())\n        segments.append((l, r))\n    segments.sort(key=lambda x: x[0])\n    points = []\n    for i in range(n-1):\n        if segments[i][1] < segments[i+1][0]:\n    points.append(segments[-1][1])\n            points.append(segments[i][1])\n    print(len(points))\n    print(*points)\n\nif __name__ == \"__main__\":\n    main()\n", "\nn, m = map(int, input().split())\n\nleft = [0] * (m + 1)\nright = [0] * (m + 1)\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    left[l] += 1\n    right[r] += 1\n\nans = []\n\nfor i in range(1, m + 1):\n    left[i] += left[i - 1]\n    right[i] += right[i - 1]\n\nfor i in range(1, m + 1):\n    if left[i] == right[i]:\n        ans.append(i)\n\nprint(len(ans))\nprint(*ans)\n", "\n\ndef main():\n    n, m = map(int, input().split())\n    segments = []\n    for _ in range(n):\n        l, r = map(int, input().split())\n        segments.append((l, r))\n    segments.sort(key=lambda x: x[0])\n    print(segments)\n    points = []\n    for i in range(n - 1):\n        if segments[i][1] < segments[i + 1][0]:\n            points.append(segments[i][1])\n    print(len(points))\n    print(*points)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n, m = map(int, input().split())  # \u0421\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0442\u0440\u0435\u0437\u043a\u043e\u0432 \u0438 \u0442\u043e\u0447\u0435\u043a\n    segments = []\n    for _ in range(n):\n        l, r = map(int, input().split())  # \u0421\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u043e\u0442\u0440\u0435\u0437\u043a\u043e\u0432\n        segments.append((l, r))\n    segments.sort(key=lambda x: x[0])  # \u0421\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u043e\u0442\u0440\u0435\u0437\u043a\u0438 \u043f\u043e \u043b\u0435\u0432\u043e\u0439 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u0435\n    points = []\n    for i in range(n-1):\n        if segments[i][1] < segments[i+1][0]:  # \u0415\u0441\u043b\u0438 \u043f\u0440\u0430\u0432\u0430\u044f \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u0430 \u043e\u0442\u0440\u0435\u0437\u043a\u0430 \u043c\u0435\u043d\u044c\u0448\u0435 \u043b\u0435\u0432\u043e\u0439 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u043e\u0442\u0440\u0435\u0437\u043a\u0430\n            points.append(segments[i][1])\n    print(len(points))  # \u0412\u044b\u0432\u043e\u0434\u0438\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0442\u043e\u0447\u0435\u043a\n    print(*points)  # \u0412\u044b\u0432\u043e\u0434\u0438\u043c \u0442\u043e\u0447\u043a\u0438\n\nif __name__ == \"__main__\":\n    main()\n"]