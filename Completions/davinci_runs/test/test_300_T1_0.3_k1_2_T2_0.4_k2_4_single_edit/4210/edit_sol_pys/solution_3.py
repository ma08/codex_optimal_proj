
import sys

def solve(n, k, a):
    """
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5])
    3
    >>> solve(5, 3, [1, 2, 3, 4, 5
    """
    # TODO: implement this function
    return 0


if __name__ == '__main__':
    n, k = map(int, sys.stdin.readline().split())
    a = list(map(int, sys.stdin.readline().split()))
    print(solve(n, k, a))
