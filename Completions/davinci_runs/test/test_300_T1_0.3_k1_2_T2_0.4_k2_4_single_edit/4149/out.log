2022-04-18 20:50:44.167512 """
Authors guessed an array $a$ consisting of $n$ integers; each integer is not less than $2$ and not greater than $2 \cdot 10^5$. You don't know the array $a$, but you know the array $b$ which is formed from it with the following sequence of operations:  Firstly, let the array $b$ be equal to the array $a$;  Secondly, for each $i$ from $1$ to $n$:   if $a_i$ is a prime number, then one integer $p_{a_i}$ is appended to array $b$, where $p$ is an infinite sequence of prime numbers ($2, 3, 5, \dots$);  otherwise (if $a_i$ is not a prime number), the greatest divisor of $a_i$ which is not equal to $a_i$ is appended to $b$;   Then the obtained array of length $2n$ is shuffled and given to you in the input. 

Here $p_{a_i}$ means the $a_i$-th prime number. The first prime $p_1 = 2$, the second one is $p_2 = 3$, and so on.

Your task is to recover any suitable array $a$ that forms the given array $b$. It is guaranteed that the answer exists (so the array $b$ is obtained from some suitable array $a$). If there are multiple answers, you can print any.


-----Input-----

The first line of the input contains one integer $n$ ($1 \le n \le 2 \cdot 10^5$) — the number of elements in $a$.

The second line of the input contains $2n$ integers $b_1, b_2, \dots, b_{2n}$ ($2 \le b_i \le 2750131$), where $b_i$ is the $i$-th element of $b$. $2750131$ is the $199999$-th prime number.


-----Output-----

In the only line of the output print $n$ integers $a_1, a_2, \dots, a_n$ ($2 \le a_i \le 2 \cdot 10^5$) in any order — the array $a$ from which the array $b$ can be obtained using the sequence of moves given in the problem statement. If there are multiple answers, you can print any.


-----Examples-----
Input
3
3 5 2 3 2 4

Output
3 4 2 
Input
1
2750131 199999

Output
199999 
Input
1
3 6

Output
6
"""
2022-04-18 20:50:44.167560 --------------------------
2022-04-18 20:51:08.341974 {
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "logprobs": null,
      "text": "\n\nimport math\n\ndef is_prime(n):\n    if n <= 1:\n        return False\n    if n <= 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    for i in range(5, int(math.sqrt(n)) + 1, 6):\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n    return True\n\nn = int(input())\nb = list(map(int, input().split()))\n\na = []\n\nfor i in range(n):\n    if is_prime(b[i]):\n        a.append(b[i])\n    else:\n        a.append(b[i] // b[n + i])\n\nprint(*a)"
    },
    {
      "finish_reason": "stop",
      "index": 1,
      "logprobs": null,
      "text": "\n\ndef is_prime(n):\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef find_prime(n):\n    i = 2\n    while n > 0:\n        if is_prime(i):\n            n -= 1\n        i += 1\n    return i - 1\n\ndef find_divisor(n):\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return i\n    return n\n\ndef solve(n, b):\n    a = []\n    for i in range(n):\n        if b[2*i] == b[2*i + 1]:\n            a.append(find_prime(b[2*i]))\n        else:\n            a.append(b[2*i] * b[2*i + 1] // find_divisor(b[2*i] * b[2*i + 1]))\n    return a\n\nn = int(input())\nb = list(map(int, input().split()))\na = solve(n, b)\nprint(*a)"
    }
  ],
  "created": 1650315044,
  "id": "cmpl-4yScWRiwjHHLRKt8SohUxCYpWcsad",
  "model": "code-davinci:002",
  "object": "text_completion"
}
2022-04-18 20:51:08.342226 0 {
  "finish_reason": "stop",
  "index": 0,
  "logprobs": null,
  "text": "\n\nimport math\n\ndef is_prime(n):\n    if n <= 1:\n        return False\n    if n <= 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    for i in range(5, int(math.sqrt(n)) + 1, 6):\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n    return True\n\nn = int(input())\nb = list(map(int, input().split()))\n\na = []\n\nfor i in range(n):\n    if is_prime(b[i]):\n        a.append(b[i])\n    else:\n        a.append(b[i] // b[n + i])\n\nprint(*a)"
}
2022-04-18 20:51:08.342262 REASON stop
2022-04-18 20:51:08.362789 1 {
  "finish_reason": "stop",
  "index": 1,
  "logprobs": null,
  "text": "\n\ndef is_prime(n):\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef find_prime(n):\n    i = 2\n    while n > 0:\n        if is_prime(i):\n            n -= 1\n        i += 1\n    return i - 1\n\ndef find_divisor(n):\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return i\n    return n\n\ndef solve(n, b):\n    a = []\n    for i in range(n):\n        if b[2*i] == b[2*i + 1]:\n            a.append(find_prime(b[2*i]))\n        else:\n            a.append(b[2*i] * b[2*i + 1] // find_divisor(b[2*i] * b[2*i + 1]))\n    return a\n\nn = int(input())\nb = list(map(int, input().split()))\na = solve(n, b)\nprint(*a)"
}
2022-04-18 20:51:08.362951 REASON stop
