["\ndef is_prime(n):\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\n\n    if n == 1:\n        return 2\ndef find_prime(n):\n    i = 2\n    while n > 0:\n        if is_prime(i):\n            n -= 1\n        i += 1\n    return i - 1\n\n\ndef find_divisor(n):\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return i\n    return n\n\n\ndef solve(n, b):\n    a = []\n    for i in range(n):\n        if b[2*i] == b[2*i + 1]:\n            a.append(find_prime(b[2*i]))\n        else:\n            a.append(b[2*i] * b[2*i + 1] // find_divisor(b[2*i] * b[2*i + 1]))\n    return a\n\nn = int(input())\nb = list(map(int, input().split()))\na = solve(n, b)\nprint(*a)\n", "#!/usr/bin/env python3\n\nimport math\n\ndef is_prime(n):\n    if n <= 1:\n        return False\n    if n <= 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    for i in range(5, int(math.sqrt(n)) + 1, 6):\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n    return True\n\nn = int(input())\nb = list(map(int, input().split()))\n\na = []\n\nfor i in range(n):\n    if is_prime(b[i]):\n        a.append(b[i])\n    else:\n        a.append(b[i] // b[n + i])\n\nprint(*a)\n", "\ndef is_prime(n):\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\n\ndef find_prime(n):\n    i = 3\n    while n > 1:\n        if is_prime(i):\n            n -= 1\n        i += 1\n    return i\n\n\ndef find_divisor(n):\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return i\n    return n\n\n\ndef solve(n, b):\n    a = []\n    for i in range(n):\n        if b[2*i] == b[2*i + 1]:\n            a.append(find_prime(b[2*i]))\n        else:\n            a.append(b[2*i] * b[2*i + 1] // find_divisor(b[2*i] * b[2*i + 1]))\n    return a\n\nn = int(input())\nb = list(map(int, input().split()))\na = solve(n, b)\nprint(*a)\n", "\n\nimport math\n\ndef is_prime(n):\n    if n <= 1:\n        return False\n    if n <= 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    for i in range(5, int(math.sqrt(n)) + 1, 6):\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n    return True\n\nn = int(input())\nb = list(map(int, input().split()))\n\na = []\n\nfor i in range(n):\n    if is_prime(b[i]):\n        a.append(b[i])\n    else:\n        a.append(b[i] // b[i + n])\n\nprint(*a)\n", "import math\n\ndef is_prime(n):\n    if n <= 1:\n        return False\n    if n <= 3:\n        return True\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    for i in range(5, int(math.sqrt(n)) + 1, 6):\n        if n % i == 0 or n % (i + 2) == 0:\n            return False\n    return True\nn = int(input())\nb = list(map(int, input().split()))\n\na = []\n\nfor i in range(n):\n    if is_prime(b[i]):\n        a.append(b[i])\n    else:\n        a.append(b[i] // b[n + i])\n\nprint(*a)\n", "\ndef is_prime(n):\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\ndef find_prime(n):\n    i = 2\n    while n > 0:\n        if is_prime(i):\n            n -= 1\n        i += 1\n    return i - 1\n\ndef find_divisor(n):\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return i\n    return n\n\ndef solve(n, b):\n    a = []\n    for i in range(n):\n        if b[2*i] == b[2*i + 1]:\n            a.append(find_prime(b[2*i]))\n        else:\n            a.append(b[2*i] * b[2*i + 1] // find_divisor(b[2*i] * b[2*i + 1]))\n    return a\n\nn = int(input())\nb = list(map(int, input().split()))\na = solve(n, b)\nprint(*a)\n"]