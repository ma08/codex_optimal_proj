["\nimport sys\n\ndef main():\n    n, m, s = map(int, sys.stdin.readline().split())\n    adj = [[] for _ in range(n + 1)]\n    for _ in range(m):\n        u, v = map(int, sys.stdin.readline().split())\n        adj[u].append(v)\n    visited = [False] * (n + 1)\n    stack = [s]\n    while stack:\n        u = stack.pop()\n        if not visited[u]:\n            visited[u] = True\n            for v in adj[u]:\n                stack.append(v)\n    print(sum(1 for i in range(1, n + 1) if not visited[i]))\n\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    print(sys.stdin.readline())\n\nmain()\n", "\nimport sys\n\ndef main():\n    n, m, s = map(int, sys.stdin.readline().split())\n    adj = [[] for _ in range(n+1)]\n    for _ in range(m):\n        u, v = map(int, sys.stdin.readline().split())\n        adj[u].append(v)\n    visited = [False] * (n+1)\n    stack = [s]\n    while stack:\n        u = stack.pop()\n        if not visited[u]:\n            visited[u] = True\n            for v in adj[u]:\n                stack.append(v)\n    print(sum(1 for i in range(1, n+1) if not visited[i]))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    print(n, m)\n    # n, m, s = map(int, sys.stdin.readline().split())\n    # graph = [[] for _ in range(n)]\n    # for _ in range(m):\n    #     u, v = map(int, sys.stdin.readline().split())\n    #     graph[u-1].append(v-1)\n    # visited = [False] * n\n    # queue = [s-1]\n    # visited[s-1] = True\n    # while queue:\n    #     u = queue.pop(0)\n    #     for v in graph[u]:\n    #         if not visited[v]:\n    #             visited[v] = True\n    #             queue.append(v)\n    # print(sum(1 for v in visited if not v))\n\nmain()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    n, m, s = map(int, sys.stdin.readline().split())\n    adj = [[] for _ in range(n+1)]\n    for _ in range(m):\n        u, v = map(int, sys.stdin.readline().split())\n        adj[u].append(v)\n    visited = [False] * (n+1)\n    stack = [s]\n    while stack:\n        u = stack.pop()\n        if not visited[u]:\n            visited[u] = True\n            for v in adj[u]:\n                stack.append(v)\n    print(sum(1 for i in range(1, n+1) if not visited[i]))\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, m, s = map(int, sys.stdin.readline().split())\n    graph = [[] for _ in range(n)]\n    for _ in range(m):\n        u, v = map(int, sys.stdin.readline().split())\n        graph[u - 1].append(v - 1)\n    visited = [False] * n\n    queue = [s - 1]\n    visited[s - 1] = True\n    while queue:\n        u = queue.pop(0)\n        for v in graph[u]:\n            if not visited[v]:\n                visited[v] = True\n                queue.append(v)\n    print(sum(1 for v in visited if not v)) \n\nmain()\n", "#!/usr/bin/env python3\n\nimport sys\n\ndef main():\n    a, b = map(int, sys.stdin.readline().split())\n    print(a+b)\n\nmain()\n"]