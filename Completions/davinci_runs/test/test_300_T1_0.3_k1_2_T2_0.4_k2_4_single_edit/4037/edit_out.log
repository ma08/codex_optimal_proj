2022-04-20 08:02:37.590593 num operations 1
2022-04-20 08:02:37.590612 size on input set 1
2022-04-20 08:02:37.590824 using api key gabby
2022-04-20 08:02:39.264151 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, sys.stdin.readline().split())))\n    projects = sorted(projects, key=lambda x: x[0])\n    count = 0\n    for project in projects:\n        if project[0] > r:\n            break\n        r += project[1]\n        if r < 0:\n            break\n        count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, sys.stdin.readline().split())))\n    projects = sorted(projects, key=lambda x: x[0])\n    count = 0\n    for project in projects:\n        if project[0] > r:\n            break\n        r += project[1]\n        if r < 0:\n            break\n        count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\n\nimport sys\n\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, sys.stdin.readline().split())))\n    projects = sorted(projects, key=lambda x: x[0])\n    count = 0\n    for project in projects:\n        if project[0] > r:\n            break\n        r += project[1]\n        if r < 0:\n            break\n        count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\n\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, sys.stdin.readline().split())))\n    projects = sorted(projects, key=lambda x: x[0])\n    count = 0\n    for project in projects:\n        if project[0] > r:\n            break\n        r += project[1]\n        if r < 0:\n            break\n        count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650441757,
  "object": "edit"
}
2022-04-20 08:02:39.264443 fix syntax errors 4 ["\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, sys.stdin.readline().split())))\n    projects = sorted(projects, key=lambda x: x[0])\n    count = 0\n    for project in projects:\n        if project[0] > r:\n            break\n        r += project[1]\n        if r < 0:\n            break\n        count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, sys.stdin.readline().split())))\n    projects = sorted(projects, key=lambda x: x[0])\n    count = 0\n    for project in projects:\n        if project[0] > r:\n            break\n        r += project[1]\n        if r < 0:\n            break\n        count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, sys.stdin.readline().split())))\n    projects = sorted(projects, key=lambda x: x[0])\n    count = 0\n    for project in projects:\n        if project[0] > r:\n            break\n        r += project[1]\n        if r < 0:\n            break\n        count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\n\n\nimport sys\n\ndef main():\n    n, r = map(int, sys.stdin.readline().split())\n    projects = []\n    for i in range(n):\n        projects.append(list(map(int, sys.stdin.readline().split())))\n    projects = sorted(projects, key=lambda x: x[0])\n    count = 0\n    for project in projects:\n        if project[0] > r:\n            break\n        r += project[1]\n        if r < 0:\n            break\n        count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 08:02:39.264486 size on output set 3
2022-04-20 08:02:39.264498 num operations 1
2022-04-20 08:02:39.264505 size on input set 1
2022-04-20 08:02:39.264675 using api key kouti
2022-04-20 08:02:42.740409 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1])\n    count = 0\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1])\n    count = 0\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1])\n    count = 0\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 3,
      "text": "\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650441759,
  "object": "edit"
}
2022-04-20 08:02:42.740644 fix syntax errors 4 ["\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1])\n    count = 0\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1])\n    count = 0\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, r = map(int, input().split())\n    projects = []\n    for _ in range(n):\n        projects.append(list(map(int, input().split())))\n    projects.sort(key=lambda x: x[1])\n    count = 0\n    for project in projects:\n        if r >= project[0]:\n            r += project[1]\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    pass\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-20 08:02:42.740677 size on output set 2
