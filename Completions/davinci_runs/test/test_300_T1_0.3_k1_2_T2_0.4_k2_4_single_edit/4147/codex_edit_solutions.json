["\n\nimport sys\n\ndef main():\n    n, a, b, c = map(int, input().split())\n    l = [int(sys.stdin.readline()) for _ in range(n)]\n    l.sort()\n    ans = float(\"inf\")\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if l[i] < a and l[j] < b and l[k] < c:\n                    ans = min(ans, (a - l[i]) + (b - l[j]) + (c - l[k]))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    N, A, B, C = map(int, sys.stdin.readline().split())\n    L = [int(sys.stdin.readline()) for _ in range(N)]\n    L.sort(reverse=True)\n    print(solve(L, A, B, C))\n\ndef solve(L, A, B, C):\n    if L[0] >= A and L[1] >= B and L[2] >= C:\n        return 0\n    elif (L[0] + L[1] + L[2] >= A + B + C) and (L[0] + L[1] >= A + B or L[1] + L[2] >= B + C or L[0] + L[2] >= A + C):\n        return 10\n    else:\n        return 10 + solve(L[1:], A - L[0], B - L[0], C - L[0])\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\ndef main():\n    N, A, B, C = map(int, sys.stdin.readline().split())\n    l = [int(sys.stdin.readline()) for _ in range(N)]  # l = []\n    # for _ in range(N):\n    #     l.append(int(sys.stdin.readline()))\n    l.sort(reverse=True)\n    print(solve(l, A, B, C))\n\ndef solve(l, A, B, C):\n    if l[0] >= A and l[1] >= B and l[2] >= C:\n        return 0\n    elif (l[0] + l[1] + l[2] >= A + B + C) and (l[0] + l[1] >= A + B or l[1] + l[2] >= B + C or l[0] + l[2] >= A + C):\n        return 10\n    else:\n        return 10 + solve(l[1:], A - l[0], B - l[0], C - l[0])\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    N, A, B, C = map(int, input().split())\n    l = [int(input()) for _ in range(N)]\n    l.sort()\n    print(solve(l, A, B, C, N))\n\ndef solve(l, A, B, C):\n    if l[0] >= A and l[1] >= B and l[2] >= C:\n        return 0\n    elif (l[0] + l[1] + l[2] >= A + B + C) and (l[0] + l[1] >= A + B or l[1] + l[2] >= B + C or l[0] + l[2] >= A + C):\n        return 10\n    else:\n        return 10 + solve(l[1:], A - l[0], B - l[0], C - l[0])\n\nif __name__ == '__main__':\n    main()\n", "# coding: utf-8\n\nimport sys\n\ndef main():\n    s = sys.stdin.readline().rstrip()\n    t = sys.stdin.readline().rstrip()\n    if s == t:\n        print(\"same\")\n    elif s.lower() == t.lower():\n        print(\"case-insensitive\")\n    else:\n        print(\"different\")\n\nif __name__ == '__main__':\n    main()\n", "import sys\n\ndef main():\n    n, a, b, c = map(int, sys.stdin.readline().split())\n    l = [int(sys.stdin.readline()) for _ in range(n)]\n    l.sort()\n    ans = float(\"inf\")\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if l[i] < a and l[j] < b and l[k] < c:\n                    ans = min(ans, (a - l[i]) + (b - l[j]) + (c - l[k]))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    l = [int(sys.stdin.readline()) for _ in range(n)]\n    ans = float(\"inf\")\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                ans = min(ans, abs(l[i] - l[j]) + abs(l[j] - l[k]) + abs(l[k] - l[i]))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n\n\n\nimport sys\n\ndef main():\n    n, a, b, c = map(int, sys.stdin.readline().split())\n    l = [int(sys.stdin.readline()) for _ in range(n)]\n    l.sort()\n    ans = float(\"inf\")\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if l[i] < a and l[j] < b and l[k] < c:\n                    ans = min(ans, (a - l[i]) + (b - l[j]) + (c - l[k]))\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\nimport sys\n\n\ndef main():\n    N, A, B, C = map(int, sys.stdin.readline().split())\n    l = [int(sys.stdin.readline()) for _ in range(N)]\n    l.sort(reverse=True)\n    print(solve(l, A, B, C))\n\ndef solve(l, A, B, C):\n    if l[0] >= A and l[1] >= B and l[2] >= C:\n        return 0\n    elif (l[0] + l[1] + l[2] >= A + B + C) and (l[0] + l[1] >= A + B or l[1] + l[2] >= B + C or l[0] + l[2] >= A + C):\n        return 10\n    else:\n        return 10 + solve(l[1:], A - l[0], B - l[0], C - l[0])\n\nif __name__ == '__main__':\n    main()\n"]