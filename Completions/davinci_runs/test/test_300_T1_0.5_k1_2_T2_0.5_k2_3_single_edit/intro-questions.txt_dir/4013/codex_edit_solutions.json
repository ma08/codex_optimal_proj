["def func(n, a):\n    if n == 2:\n        return 0\n    if a[0] + 1 == a[1]:\n        return a[-1] - a[1]\n    if a[-1] - 1 == a[-2]:\n        return a[-1] - a[0]\n    return min(a[-1] - a[1], a[-2] - a[0])\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    print(func(n, a))\n\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if n == 2:\n        print(0)\n        return\n    if a[0] + 1 == a[1]:\n        print(a[-1] - a[1])\n        return\n    if a[-1] - 1 == a[-2]:\n        print(a[-1] - a[0])\n        return\n    print(min(a[-1] - a[1], a[-2] - a[0]))\n\n\nif __name__ == \"__main__\":\n    main()\n", "#!/bin/python3\n\nimport os\nimport sys\n\n\nn = int(input())\narr = list(map(int, input().rstrip().split()))\n\ndef largestRectangle(h):\n    max_area = 0\n    stack = []\n\n    for i in range(len(h)):\n        if len(stack) == 0 or h[stack[-1]] <= h[i]:\n            stack.append(i)\n        else:\n            while len(stack) > 0 and h[stack[-1]] > h[i]:\n                top = stack.pop()\n                area = h[top] * (i - stack[-1] - 1 if len(stack) > 0 else i)\n                max_area = max(max_area, area)\n            stack.append(i)\n\n    while len(stack) > 0:\n        top = stack.pop()\n        area = h[top] * (len(h) - stack[-1] - 1 if len(stack) > 0 else len(h))\n        max_area = max(max_area, area)\n\n    return max_area\n\nresult = largestRectangle(arr)\n\nprint(result)\n", "\n#\n# n = int(input())\n# arr = [int(x) for x in input().split()]\n#\n# curr_min = min(arr)\n# curr_max = max(arr)\n#\n# print(curr_max - curr_min - 2*min(curr_max - curr_min, min(arr.count(curr_min), arr.count(curr_max))))\n", "#!/usr/bin/env python3\n\nn = int(input())\narr = [int(x) for x in input().split()]\n\ncurr_min = min(arr)\ncurr_max = max(arr)\n\nprint(curr_max - curr_min - 2*min(curr_max - curr_min, min(arr.count(curr_min), arr.count(curr_max))))\n"]