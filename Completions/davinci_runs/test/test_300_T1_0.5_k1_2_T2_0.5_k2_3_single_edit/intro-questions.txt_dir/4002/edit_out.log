2022-04-19 18:15:13.975750 num operations 1
2022-04-19 18:15:13.975772 size on input set 1
2022-04-19 18:15:13.975978 using api key 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
2022-04-19 18:15:17.777660 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0 for i in range(m+1)] for i in range(n+1)]\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if j <= m//2:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + a[i-1][j-1])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n][m])\n"
    },
    {
      "index": 1,
      "text": "\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\ndp = [[0 for i in range(m+1)] for i in range(n+1)]\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if j >= m//2:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + a[i-1][j-1])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n][m])\n"
    },
    {
      "index": 2,
      "text": "# https://atcoder.jp/contests/dp/tasks/dp_f\n\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0 for i in range(m+1)] for i in range(n+1)]\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if j >= m//2:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + a[i-1][j-1])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n][m])\n"
    }
  ],
  "created": 1650392115,
  "object": "edit"
}
2022-04-19 18:15:17.777916 fix syntax errors 3 ['\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0 for i in range(m+1)] for i in range(n+1)]\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if j <= m//2:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + a[i-1][j-1])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n][m])\n', '\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\ndp = [[0 for i in range(m+1)] for i in range(n+1)]\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if j >= m//2:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + a[i-1][j-1])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n][m])\n', '# https://atcoder.jp/contests/dp/tasks/dp_f\n\nn, m, k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\ndp = [[0 for i in range(m+1)] for i in range(n+1)]\n\nfor i in range(1, n+1):\n    for j in range(1, m+1):\n        if j >= m//2:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + a[i-1][j-1])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[n][m])\n']
2022-04-19 18:15:17.777950 size on output set 3
2022-04-19 18:15:17.777961 num operations 1
2022-04-19 18:15:17.777966 size on input set 1
2022-04-19 18:15:17.778133 using api key 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
2022-04-19 18:15:17.821796 in retry 6 1.5 <class 'Exception'>, Retrying in 1 seconds...
2022-04-19 18:15:19.323732 using api key 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
2022-04-19 18:15:19.368032 in retry 5 3.0 <class 'Exception'>, Retrying in 3 seconds...
2022-04-19 18:15:22.371466 using api key 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
2022-04-19 18:15:27.755451 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nn,m,k = map(int, input().split())\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\ndef max_sum(matrix,n,m,k):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1]) + matrix[i][j]\n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m,k))\n"
    },
    {
      "index": 1,
      "text": "\nn,m,k = map(int, input().split())\n\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\ndef max_sum(matrix,n,m,k):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1]) + matrix[i][j]\n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m,k))\n"
    },
    {
      "index": 2,
      "text": "\n\nn,m,k = map(int, input().split())\n\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\n    if k > m:\n        return 0\ndef max_sum(matrix,n,m,k):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                if j < k:\n                    dp[i][j] = max(dp[i-1][j],dp[i-1][j-1]) + matrix[i][j]\n                else:\n                    dp[i][j] = max(dp[i-1][j],dp[i-1][j-1],dp[i-1][j-k]) + matrix[i][j]\n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m,k))\n"
    }
  ],
  "created": 1650392123,
  "object": "edit"
}
2022-04-19 18:15:27.755694 fix syntax errors 3 ['\nn,m,k = map(int, input().split())\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\ndef max_sum(matrix,n,m,k):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1]) + matrix[i][j]\n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m,k))\n', '\nn,m,k = map(int, input().split())\n\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\ndef max_sum(matrix,n,m,k):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                dp[i][j] = max(dp[i-1][j],dp[i-1][j-1]) + matrix[i][j]\n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m,k))\n', '\n\nn,m,k = map(int, input().split())\n\nmatrix = []\n\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\n\n    if k > m:\n        return 0\ndef max_sum(matrix,n,m,k):\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                dp[i][j] = matrix[i][j]\n            else:\n                if j < k:\n                    dp[i][j] = max(dp[i-1][j],dp[i-1][j-1]) + matrix[i][j]\n                else:\n                    dp[i][j] = max(dp[i-1][j],dp[i-1][j-1],dp[i-1][j-k]) + matrix[i][j]\n    return dp[n-1][m-1]\n\nprint(max_sum(matrix,n,m,k))\n']
2022-04-19 18:15:27.755730 size on output set 3
