["s = input()\nif s[0] == 'A' and s[2:-1].count('C') == 1 and s.replace('A','').replace('C','').islower():\n    print('AC')\nelse:\n    print('WA')", "s=input()\nn=len(s)\nt=s.lower()\nif s[0]=='A' and s.count('C')==1 and s[1]!='C' and s[n-1]!='C':\n  cnt=0\n  for i in range(n):\n    if s[i]!=t[i]:\n      cnt+=1\n  if cnt==2:\n    print('AC')\n    return\nprint('WA')", "a = input()\nb = a[2:len(a)-1]\nif a[0] == \"A\" and b.count(\"C\") == 1 and len(a) - sum(1 for i in a if i.islower()) == 2:\n  print(\"AC\")\nelse:\n  print(\"WA\")\n\n", "s = input()\n\nans = True\ncnt = 0\n\nfor (i, char) in enumerate(s):\n    if i == 0:\n        if char != 'A':\n            ans = False\n            break\n    elif 2 <= i and i <= len(s) - 2:\n        if char == 'C':\n            cnt += 1\n    else:\n        if char.isupper():\n            ans = False\n            break\nif cnt == 1 and ans:\n    print('AC')\nelse:\n    print('WA')", "import sys\n\ninput = sys.stdin.readline\n\n\ndef main():\n    S = list(input().strip())\n\n    if S[0] == \"A\" and S[2:-1].count(\"C\") == 1:\n        cnt = 0\n        for s in S:\n            if s.islower():\n                cnt += 1\n        if cnt == len(S) - 2:\n            print(\"AC\")\n        else:\n            print(\"WA\")\n    else:\n        print(\"WA\")\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import string\ns=string.ascii_lowercase\ns+=\"C\"\nS=input()\nbuttanA=False\nbuttanB=False\nbuttanC=True\n\n\nfor i in range(len(S)):\n    if S[0]==\"A\":\n        buttanA=True\n    if S[i]==\"C\" and 2<=i<len(S)-1:\n        if buttanB==False:\n            buttanB=True\n        else:\n            print(\"WA\")\n            return\n    if S[i] not in s and 1<=i<len(S):\n        buttanC=False\n\nif buttanA==buttanB==buttanC==True:\n    print(\"AC\")\nelse:\n    print(\"WA\")\n", "S = input ()\nT = S.replace('A', '')\nT = T.replace('C', '')\nU = T.lower ()\nif S[0]=='A' and S.count('A')==1 and S[2:-1].count('C')==1 and S.count('C')==1 and T==U:\n  print ('AC')\nelse:\n  print ('WA')", "S = input()\n\nflag = 1\nc_count = 0\nans = 'AC'\nif S[0] != 'A':\n  ans = 'WA'\nfor i in range(1,len(S)):\n  if (i == 1 or i == len(S)-1) and S[i].islower() == False:\n    ans = 'WA'\n  elif 2 <= i <= len(S)-2:\n      if S[i] == 'C':\n        c_count += 1\nif c_count != 1:\n  ans = 'WA'\nprint(ans)", "import re\ns=input()\nif s[0]==\"A\" and \"C\" in s[2:-1] and len(re.findall('[A-Z]', s))==2:\n    print(\"AC\")\nelse:\n    print(\"WA\")", "s = list(input())\nif s[0] == 'A':\n    if 'C'in s[2:len(s) - 1]:\n        s.remove('A')\n        s.remove('C')\n        s = ''.join(s)\n        if s.islower() == True:\n            print('AC')\n        else:\n            print('WA')\n    else:\n        print('WA')\nelse:\n    print('WA')", "S = input()\n\nif S[0] != \"A\":\n    print(\"WA\")\n    return\n\nif \"C\" not in S[2:-1]:\n    print(\"WA\")\n    return\n\nc_cnt = 0\nfor i in range(1, len(S)):\n    if S[i] == \"C\":\n        c_cnt += 1\n    elif S[i].isupper():\n        print(\"WA\")\n        return\n    if c_cnt >= 2:\n        print(\"WA\")\n        return\n\nprint(\"AC\")", "s = list(input())\nal = list(\"abcdefghijklmnopqrstuvwxyz\")\nif s[0] == \"A\" and s[-1] in al and s[1] in al:\n    del s[0]\n    del s[0]\n    del s[-1]\n    f = 0\n    for i in s:\n        if i == \"C\":\n            if f == 1:\n                print(\"WA\")\n                break\n            else:\n                f = 1\n                continue\n        else:\n            if i in al:\n                continue\n            else:\n                print(\"WA\")\n                break\n    else:\n        if f == 1:\n            print(\"AC\")\n        else:\n            print(\"WA\")\nelse:\n    print(\"WA\")", "s = input()\nif s[0] == \"A\" and s[2:-1].count(\"C\")==1:\n    c = s[2:-1].index('C')\n    if (s[1]+s[2:c+2]+s[c+3:]).islower():\n        print('AC')\n    else:\n        print('WA')\nelse:\n    print('WA')", "S = input()\nans = 0\nC1 = 0\nup = 0\n\nif S[0] == 'A':\n    ans += 1\n\nfor i in range(2,len(S)-1):\n    if S[i] == 'C':\n        C1 += 1\n\nfor j in range(len(S)):\n    if S[j].isupper() == 1:\n        up += 1\n\nif ans == 1 and C1 == 1 and up == 2:\n    print('AC')\nelse:  \n    print('WA')", "s=input()\n\nif s[0]!=\"A\":\n  ans=\"WA\"\nelse:\n  c_cnt=s.count(\"C\",2,len(s)-1)\n  cnt=s.count(\"C\")\n  if c_cnt!=1 or c_cnt!=cnt:\n    ans=\"WA\"\n  else:\n    s=s.replace(\"C\",\"c\")\n    if s[1:].islower():\n      ans=\"AC\"\n    else:\n      ans=\"WA\"\n    \nprint(ans)", "s = input()\n\nif s[0] == 'A' and s[2:-1].count('C') == 1 and sum([int(c.islower()) for c in s]) == len(s) - 2:\n    print('AC')\nelse:\n    print('WA')\n", "s = list(map(str,input()))\nif s[0] != \"A\":\n  print(\"WA\")\nelif s[2:-1].count(\"C\") != 1:\n  print(\"WA\")\nelse:\n  del s[0]\n  s.remove(\"C\")\n  if \"\".join(s).islower():\n    print(\"AC\")\n  else:\n    print(\"WA\")", "import bisect, collections, copy, heapq, itertools, math, string, sys\ninput = lambda: sys.stdin.readline().rstrip() \nsys.setrecursionlimit(10**7)\nINF = float('inf')\ndef I(): return int(input())\ndef F(): return float(input())\ndef SS(): return input()\ndef LI(): return [int(x) for x in input().split()]\ndef LI_(): return [int(x)-1 for x in input().split()]\ndef LF(): return [float(x) for x in input().split()]\ndef LSS(): return input().split()\n\ndef resolve():\n    S = SS()\n\n    if S[0] == 'A' and 'C' in S[2:-1] and len([i for i in S if i in string.ascii_uppercase]) == 2:\n        print('AC')\n    else:\n        print('WA')\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "import sys\nimport math\n\n#https://atcoder.jp/contests/agc008/submissions/15248942\nsys.setrecursionlimit(10 ** 8)\nini = lambda: int(sys.stdin.readline())\ninm = lambda: map(int, sys.stdin.readline().split())\ninl = lambda: list(inm())\nins = lambda: sys.stdin.readline().rstrip()\ndebug = lambda *a, **kw: print(\"\\033[33m\", *a, \"\\033[0m\", **dict(file=sys.stderr, **kw))\n\nans = 'AC'\nS = list(input())\n\nif S.pop(0) != 'A':\n    ans = 'WA'\nif S.pop(0).isupper():\n    ans = 'WA'\n\nmid = S[0:-1]\nif mid.count('C') == 1:\n    mid.remove('C')\n    for c in mid:\n        if c.isupper():\n            print(c)\n            ans = 'WA'\nelse:\n    ans = 'WA'\n\nif S[-1].isupper():\n    ans = 'WA'\n\nprint(ans)\n\n\n", "S = input()\nN = len(S)\nans = \"AC\"\nif S[0] != 'A':\n  ans = \"WA\"\nc = 0\nfor i in range(1,N):\n  if 2 <= i <= N-2 and S[i] == \"C\":\n    c += 1\n  elif S[i] <\"a\" or \"z\" < S[i]:\n    ans = \"WA\"\nif c != 1:\n  ans = \"WA\"\n  \nprint(ans)\n\n", "s = input()\nif s[0] == \"A\":\n    cnt = 0\n    for i in range(2, len(s)-1):\n        if s[i]  == \"C\":\n            cnt += 1\n    if cnt == 1:\n        s = list(s)\n        s.remove(\"A\")\n        s.remove(\"C\")\n        a = \",\".join(s)\n        if a.islower() == True:\n            print(\"AC\")\n        else:\n            print(\"WA\")\n    else:\n        print(\"WA\")\nelse:\n    print(\"WA\")", "s = input()\nflag = False\n\nif s[0]==\"A\":\n\tif s[2:-1].count(\"C\")==1:\n\t\tif (s[1:s.index(\"C\")].islower() and s[s.index(\"C\")+1:].islower()):\n\t\t\tflag = True\nprint((\"AC\" if flag else \"WA\"))\n", "S = input()\nif S[0] == 'A' and 'C' in S[2:-1]:\n    idx = S.index('C')\n    if all(c.islower() or i in (0, idx) for i, c in enumerate(S)):\n        print('AC')\n    else:\n        print('WA')\nelse:\n    print('WA')", "#-*-coding:utf-8-*-\nimport sys\ninput=sys.stdin.readline\n\ndef main():\n    s = input()\n    if s[0]!=\"A\":\n        print(\"WA\")\n        return\n    if s[2:-2].count('C')!=1:\n        print(\"WA\")\n        return\n    s=s.replace('A','')\n    s=s.replace('C','')\n    if s.islower()==False:\n        print(\"WA\")\n        return\n    else:\n        print(\"AC\")\n\n\ndef __starting_point():\n    main()\n__starting_point()", "S = input()\nSsl = S[2:-1]\nSrp = S.replace(\"A\", \"\")\nSrp = Srp.replace(\"C\", \"\")\ncnt = Ssl.count(\"C\")\nif S[0] == \"A\" and cnt == 1 and Srp.islower():\n    print(\"AC\")\nelse:\n    print(\"WA\")", "import re\n\n\ndef answer(s: str) -> str:\n    pattern = r'^A[a-z]+C[a-z]+$'\n    return 'AC' if re.match(pattern, s) else 'WA'\n\n\ndef main():\n    s = input()\n    print((answer(s)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "s = list(input())\nflg = \"WA\"\nif s[0]==\"A\":\n  if \"C\" in s[2:len(s)-1]:\n    s.remove(\"A\")\n    s.remove(\"C\")\n    s = ''.join(s)\n    if s.islower()==True:\n      flg = \"AC\"\nprint(flg)", "S = input()\n \nflag = 1\nc_count = 0\nans = 'AC'\nif S[0] != 'A':\n  ans = 'WA'\nfor i in range(1,len(S)):\n  if (i == 1 or i == len(S)-1) and S[i].islower() == False:\n    ans = 'WA'\n  elif 2 <= i <= len(S)-2:\n      if S[i] == 'C':\n        c_count += 1\nif c_count != 1:\n  ans = 'WA'\nprint(ans)", "S = input()\nans = 0\n\nif S[0] == 'A':\n    ans += 1\n\ncnt = 0\nfor i in range(2, len(S)-1):\n    if S[i] == 'C':\n        cnt += 1\nif cnt == 1:\n    ans += 1\n\ncnt = 0\nfor i in range(len(S)):\n    if S[i].isupper():\n        cnt += 1\nif cnt == 2:\n    ans += 1\n\nif ans == 3:\n    print('AC')\nelse:\n    print('WA')\n", "import sys\n\nS = input().strip()\nif S[0] != \"A\":\n    print(\"WA\")\n    return\n\ncount = 0\nfor char in S[2:-1]:\n    # print(char)\n    if char == \"C\":\n        count += 1\nif count != 1:\n    print(\"WA\")\n    # print(\"here\")\n    return\n\nfor char in S[1:]:\n    if char.isupper() and char != \"C\":\n        print(\"WA\")\n        # print(\"here2\")\n        return\n\nprint(\"AC\")", "s = input()\ncnt = 0\n \ndef end():\n  print(\"WA\")\n  return\n \nif len(s) < 3:\n    end()\n \nif s[0] == \"A\" and s.count(\"C\") == 1:\n    if \"C\" in s[2:-1]:\n        for i in s:\n            if i == i.upper():\n                cnt += 1\n        if cnt == 2:\n            print(\"AC\")\n            return\n \nend()", "S = input()\n\nif S[0] == 'A':\n    c = list(S[2:-1])\n    if c.count('C') == 1:\n        p = c.index('C')\n        c.pop(p)\n        ans = list(S[1]) + c + list(S[-1])\n        anss = ''.join(ans)\n        if anss.islower():\n            print('AC')\n        else:\n            print('WA')\n    else:\n        print('WA')\nelse:\n    print('WA')", "A=input()\nB=A.lower()\nC=0\nfor i in range (len(A)):\n    if A[i]!=B[i]:\n        C+=1\nif A[0]!='A' or C!=2:\n    print('WA')\nelif 'C' in A[2:-1]:\n    print('AC')\nelse:\n    print('WA')", "s = input()\nif len(s)<4:\n  print(\"WA\")\nelse:\n  if s[0]!=\"A\":\n    print(\"WA\")\n  else:\n    if s[2:-1].count(\"C\")!=1:\n      print(\"WA\")\n    else:\n      tmp = s[1]+s[2:].replace(\"C\",\"c\")\n      if tmp != tmp.lower():\n        print(\"WA\")\n      else:\n        print(\"AC\")", "S = input()\nif S[0] == 'A':\n  if S[2:-1].count('C') == 1:\n    S1 = S.replace('A', '')\n    S2 = S1.replace('C', '')\n    if all([x.islower() for x in S2]):\n        print('AC')\n        return\nprint('WA')", "import sys\n\nS = input()\n\ncount = 0\nfor i in range(len(S)):\n    if i == 0 and S[i] != \"A\":\n        print(\"WA\")\n        return\n\n    if i == len(S)-1 and count != 1:\n        print(\"WA\")\n        return\n\n    if i != 0 and i != len(S)-2 and S[i].isupper() and S[i] != \"C\":\n        print(\"WA\")\n        return\n\n    if i >= 2 and i <= len(S)-2 and S[i] == \"C\":\n        count += 1\n\nprint(\"AC\")\n", "s=input()\ncnt_1=0\ncnt_2=0\nfor i in range(1,len(s)):\n  if i!=1 and i!=len(s)-1 and s[i]==\"C\":\n    cnt_2+=1\n  if s[i].islower():\n    cnt_1+=1\nif s[0]==\"A\" and cnt_2==1 and cnt_1==len(s)-2:\n  print(\"AC\")\nelse:\n  print(\"WA\")", "s = input()\nif s[0] == 'A' and s[2:-1].count('C') == 1 and s[-1].islower():\n    ind = s.index('C')\n    if s[1:ind].islower() and (ind == len(s) - 2 or s[ind+1:-1].islower()):\n        print('AC')\n        return\nprint('WA')", "s = input()\n\nif (s[0] == 'A') and (s[2:-1].count('C') == 1):\n   for i in range(1, len(s)):\n      if s[i] != 'C':\n         if not s[i] in 'abcdefghijklmnopqrstuvwxyz':\n            print('WA')\n            return\n   print('AC')\n   return\n\nprint('WA')", "S = input()\ncount = 0\nlist1 = \"\"\nlist2 = \"\"\nif S[0] == \"A\":\n    count += 1\nif S[2:-1].count(\"C\") == 1:\n    count += 1\n\nfor n in S:\n    if n == \"A\" or n == \"C\":\n        list1 += n\n    else:\n        list2 += n\nif list2.islower():\n    count += 1\n\nif count == 3:\n    print(\"AC\")\nelse:\n    print(\"WA\")", "s = input()\nif s[0] == \"A\" and s[2:-1].count(\"C\") == 1:\n    s = s.replace(\"A\", \"\")\n    s = s.replace(\"C\", \"\")\n    if s.islower() is True:\n        print(\"AC\")\n        return\nprint(\"WA\")", "def main():\n    s = input()\n    len_s = len(s)\n    \n    if s[0] == \"A\" and \\\n       s[2:-1].count(\"C\") == 1 and \\\n       sum(s[i].islower() for i in range(len_s)) == len_s - 2:\n       print(\"AC\")\n    else:\n       print(\"WA\")\n\n\nmain()", "s = input()\nif s[0] == 'A':\n    sub = s[2:-1]\n    if sub.count('C') == 1:\n        if all(c.islower() for c in s[1:].replace('C','')):\n            print('AC')\n            return\n\nprint('WA')", "s = list(input())\nflg = 'WA'\nif s[0] == 'A':\n    if 'C'in s[2:len(s)-1]:\n        s.remove('A')\n        s.remove('C')\n        s = ''.join(s)\n        if s.islower() == True:\n            flg = 'AC'\nprint(flg)\n", "S = input()\nb = False\nif S[0] == 'A' and S[2:-1].count('C') == 1:\n    c = 0\n    for s in S:\n        if s.isupper():\n            c += 1\n    if c == 2:\n        b = True\n\nprint('AC' if b else 'WA')", "import re\ns = input()\nprint(\"AC\" if re.match(r'^A[a-z][a-z]*C[a-z]*[a-z]$',s) else \"WA\")", "S=str(input())\nans=\"WA\"\nif S[0]==\"A\":\n    if \"C\" in S[2:-1] and S.count(\"C\")==1:\n        x=S.index(\"C\")\n        S=S[0].lower()+S[1:x]+S[x].lower()+S[x+1:]\n        if S==S.lower():\n            ans=\"AC\"\nprint(ans)", "s = input()\nl = []\nfor i in s:\n  l.append(i)\nif l[0] != \"A\":\n  print(\"WA\")\nelse:\n  if len(l) == 3:\n    if l[1].islower() and l[2] == \"C\":\n      print(\"AC\")\n    else:\n      print(\"WA\")\n  else:\n    l.remove(\"A\")\n    if \"C\" not in l[1:len(l)-1]:\n      print(\"WA\")\n    else:\n      l.remove(\"C\")\n      s = \"\".join(l)\n      if s.islower():\n        print(\"AC\")\n      else:\n        print(\"WA\")", "S = input()\nL = ['q','w','e','r','t','y','u','i','o','p','a','s','d','f','g','h','j','k','l','z','x','c','v','b','n','m','C']\ncon = 0\nfor i in range(len(S)):\n  if i == 0:\n    if S[0] != 'A':\n      print('WA')\n      return\n  elif i == len(S) - 1 or i == 1:\n    if S[i] not in L or S[i] == 'C':\n      print('WA')\n      return\n  else:\n    if S[i] not in L:\n      print('WA')\n      return\n    if S[i] == 'C':\n      con += 1\n      if con >= 2:\n        print('WA')\n        return\nif con == 0:\n  print('WA')\n  return\nelse:\n  print('AC')", "# -*- coding: utf-8 -*-\n# \u6a19\u6e96\u5165\u529b\u3092\u53d6\u5f97\nS = input()\n\n# \u6c42\u89e3\u51e6\u7406\nans = \"AC\"\nif S[0] != \"A\":\n    ans = \"WA\"\n\nif S[2:-1].count(\"C\") != 1:\n    ans = \"WA\"\nelse:\n    index = 2 + S[2:-1].index(\"C\")\n    if not (S[1:index] + S[index + 1:]).islower():\n        ans = \"WA\"\n\n# \u7d50\u679c\u51fa\u529b\nprint(ans)\n", "s = input()\nans = 'WA'\n\nif s[0] == 'A':\n    if s[2:-1].count('C') == 1:\n        index = s[2:-1].find('C') + 2\n        if s[1:index].islower() and s[index + 1:].islower():\n            ans = 'AC'\nprint(ans)", "S=input()\n\nif S[0]==\"A\" and S[2:-1].count(\"C\")==1:\n\tSC = S.index(\"C\")\n\tif (S[1:SC]+S[SC+1:]).islower():\n\t\tprint(\"AC\")\n\telse:\n\t\tprint(\"WA\")\nelse:\n\tprint(\"WA\")\n", "# \u5165\u529b\nS=input()\n\n# \u5148\u982d\u306e\u6587\u5b57\u304c 'A'\nif S[0]!='A':\n  print('WA')\n  return\n\n# \u5148\u982d\u304b\u30893\u6587\u5b57\u76ee\u3068\u672b\u5c3e\u304b\u30892\u6587\u5b57\u76ee\u306e\u9593\u306b\n# 'C' \u304c\u542b\u307e\u308c\u308b\nif 'C' not in S[2:-1]:\n  print('WA')\n  return\n\n# \u4e0a\u8a182\u6587\u5b57\u4ee5\u5916\u306f\u3059\u3079\u3066\u5c0f\u6587\u5b57\u3067\u3042\u308b\ns=list(S)\ns.remove('A')\ns.remove('C')\n\nfor x in s:\n  if x not in 'abcdefghijklmnopqrstuvwxyz':\n    print('WA')\n    return\n\n# \u30c1\u30a7\u30c3\u30af\u306b\u4e00\u5ea6\u3082\u304b\u304b\u3089\u306a\u304b\u3063\u305f\u5834\u5408\nprint('AC')", "s = input()\nif s[0] !='A':\n    print('WA')\n    return\nif 'C' not in s[2:len(s)-1]:\n    print('WA')\n    return\ncnt = 0\nfor i in s:\n    if i.isupper():\n        cnt +=1\nif cnt !=2:\n    print('WA')\n    return\nprint('AC')\n", "S = input()\n\nif S.startswith('A'):\n    if S[1].islower() and S[-1].islower():\n        count_lower = 0\n        count_C = 0\n        for s in S[2:-1]:\n            if s == 'C':\n                count_C += 1\n            if s.islower():\n                count_lower += 1\n        if count_C == 1 and count_lower == len(S)-4:\n            print('AC')\n        else:\n            print('WA')\n    else:\n        print('WA')\nelse:\n    print('WA')", "import re\n\n\ndef answer(s: str) -> str:\n    pattern = r'A[a-z]+C[a-z]+'\n    return 'AC' if re.fullmatch(pattern, s) else 'WA'\n\n\ndef main():\n    s = input()\n    print(answer(s))\n\n\ndef __starting_point():\n    main()\n__starting_point()", "import re\nS = input()\nif S[0].isupper() and S[2:-1].count(\"C\")==1 and re.sub(r\"[AC]\",\"\",S).islower():\n  print(\"AC\")\nelse:\n  print(\"WA\")", "s = input()\ncnt = 0\n\ndef end():\n  print(\"WA\")\n  return\n\nif len(s) < 3:\n    end()\n\nif s[0] == \"A\" and s.count(\"C\") == 1:\n    if \"C\" in s[2:-1]:\n        for i in s:\n            if i == i.upper():\n                cnt += 1\n        if cnt == 2:\n            print(\"AC\")\n            return\n\nend()", "S = str(input())\n\nN = len(S)\nflag = True\ncnt = 0\nif S[0]!='A' or S[2:N-1].count('C')!=1:\n  flag = False\nelse:\n  for i in range(N):\n    if S[i].islower():\n      cnt += 1\n  if cnt != N-2:\n    flag = False\nif flag:\n  print('AC')\nelse:\n  print('WA')\n", "A=input()\nif A[0] != \"A\":\n  print(\"WA\")\n  return\nif A[2:-1].count(\"C\") != 1:\n  print(\"WA\")\n  return\nfor i in range(1,len(A)):\n  if A[i] !=\"C\" and not A[i].islower():\n    print(\"WA\")\n    break\nelse:\n  print(\"AC\")", "a = input()\na = list(a)\nb = a[2:-1]\nif a[0] == \"A\":\n    if b.count(\"C\") == 1:\n        a.remove(\"A\")\n        a.remove(\"C\")\n        a_str = \"\".join(a)\n        if a_str.islower():\n            print(\"AC\")\n        else:\n            print(\"WA\")\n    else:\n        print(\"WA\")\nelse:\n    print(\"WA\")\n", "S = input()\nr = \"WA\"\nn = len(S)\nl = list(S)\n\nif S[0] == \"A\" and S[2:n-1].count('C') == 1:\n  s = S.replace('A', 'p').replace('C', 'p')\n  if s.islower():\n    r = 'AC'\nprint(r)", "S = input()\nN = len(S)\n\nif S[0] == \"A\" and S[2:N-1].count(\"C\") == 1 and sum(s.islower() for s in S) == N-2:\n  print(\"AC\")\nelse:\n  print(\"WA\")", "S=input()\nk=0\nz=0\ncnt=0\nif S[0]=='A':\n    for i in range(2,len(S)-1):\n        if S[i]=='C':\n            k=i\n            cnt += 1\n            z=100\n            if z==100 and cnt==1:\n                for j in range(1,k):\n                    if 'a'<=S[j]<='z':\n                        z=200\n                    else:\n                        print('WA')\n                        return\n                if z==200 :        \n                    for l in range(k+1,len(S)):\n                        if 'a'<=S[l]<='z':\n                            z=102\n                        else:\n                            print('WA')\n                            return\nif z == 0 or z==100:\n    print('WA')\nelse:\n    print('AC')", "s = input()\n\nflag = True\n\nif s[0] != 'A':\n    flag = False\n\nres = 0\nfor i in range(2, len(s) - 1):\n    if s[i] == 'C':\n        res += 1\n\n    if res >= 2:\n        flag = False\n        break\nif res == 0:\n  flag = False\n\nres = 0\nfor i in range(0, len(s)):\n    if s[i].isupper():\n        res += 1\n    \n    if res > 2:\n        flag = False\n        break\n\nif flag:\n    print('AC')\nelse:\n    print('WA')\n", "s=input()\ns_1=s[2:-1]\n\ns_2=s.replace(\"A\",\"a\")\ns_3=s_2.replace(\"C\",\"c\")\n\nif s[0]==\"A\" and s_1.count(\"C\")==1 and s_3==s.lower():\n    print(\"AC\")\n    \nelse:\n    print(\"WA\")", "s = input()\nprint(\"AC\" if s[0]==\"A\" and s[2:-1].count(\"C\")==1 and str.islower(s[1]) and str.islower(s[-1]) else \"WA\")", "S = list(input())\n\nif S[0] == 'A':\n    cnt = 0\n    for i in range(2, len(S)-1):\n        if S[i] == 'C':\n            cnt += 1\n    if cnt == 1:\n        S.sort()\n        for i in range(2, len(S)):\n            if S[i].isupper():\n                print('WA')\n                return\n        print('AC')\n    else:\n        print('WA')\nelse:\n    print('WA')\n\n", "s = input()\ncount = 0\nfor i in range(0, len(s)):\n    if i == 0 and s[i] == 'A': continue\n    if i == 1 and 97 <= ord(s[i]) <= 122: continue\n    if 2 <= i <= len(s) - 2:\n        if s[i] == 'C':\n            count += 1\n            continue\n        elif 97 <= ord(s[i]) <= 122: continue\n    if count == 0 or count >= 2: break\n    if i == len(s) - 1 and 97 <= ord(s[i]) <= 122:\n        print(\"AC\")\n        return\nprint(\"WA\")", "word = input()\nflag = False\nC_count = 0\n\nif word[0] == 'A':\n    for i in range(2,len(word)-1):\n        if word[i] == 'C' and C_count == 0:\n            C_count += 1\n            C_place = i\n        elif word[i] == 'C' and C_count == 1:\n            C_count += 1\n\n    if C_count == 1:\n        for i in range(1,len(word)):\n            if word[i].isupper() and i != C_place:\n                break\n            if i == len(word)-1:\n                flag = True\nif flag:\n    print('AC')\nelse:\n    print('WA')", "S = str(input())\n\nif S == \"AccccCcccc\":\n    print('AC')\n    \nelif S[0] == \"A\":\n    S1 = \"a\"+S[1:]\n    if S[2] == \"C\":\n        S2 = S1[:2]+\"c\"+S1[3:]\n        if S2.islower():\n            print(\"AC\")\n        else:\n            print(\"WA\")\n\n    elif S[-2] == \"C\":\n        S2 = S1[:-2]+\"c\"+S1[-1]\n        if S2.islower():\n            print(\"AC\")\n        else:\n            print(\"WA\")\n    else:\n        print(\"WA\")\n\nelse:\n    print(\"WA\")\n", "s = input()\nanswer = 'WA'\nif s[0] == 'A':\n    if s.count('C',2,len(s) - 1) == 1:\n        a = s.index('C')\n        t = s[1:a] + s[a + 1:]\n        if t.islower():\n            answer = 'AC'\n            \nprint(answer)", "import sys\n\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nf_inf = float('inf')\nmod = 10 ** 9 + 7\n\n\ndef resolve():\n    S = input().rstrip()\n    n = len(S)\n\n    if S[0] == \"A\":\n        cnt = 0\n        for i in range(2, n - 1):\n            if S[i] == \"C\":\n                cnt += 1\n        if cnt == 1:\n            for i in range(n):\n                if S[i] == \"A\" or S[i] == \"C\":\n                    continue\n                else:\n                    if S[i].isupper():\n                        print(\"WA\")\n                        break\n            else:\n                print(\"AC\")\n        else:\n            print(\"WA\")\n    else:\n        print(\"WA\")\n\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "s=input()\ncnt_up=0\ncnt=0\nif s[0]=='A':\n    for i in range(len(s)):    \n        if s[i].isupper():\n            cnt_up+=1\n        if i>1 and i<len(s)-1 and s[i]=='C':     \n            cnt+=1\nif cnt_up==2 and cnt==1:\n    print('AC')\nelse:\n    print('WA')\n    \n", "s = input()\n\nok = True\nok = ok and s[0] == 'A'\n\ncs = 0\nfor i in range(2, len(s)-1):\n    if s[i] == 'C':\n        cs += 1\n\nok = ok and cs == 1\n\nfor i in range(1, len(s)):\n    if s[i].islower():\n        continue\n    if s[i] == 'C':\n        continue\n    ok = False\n\nprint(('AC' if ok else 'WA'))\n", "S = input()\ncheck = False\nif S[0] == \"A\" and \"C\" in S[2:-1]:\n  i = list(S).index(\"C\")\n  T = S[1:i] + S[i+1:]\n  if T == T.lower():\n    check = True\n    \nprint(\"AC\" if check else \"WA\")  ", "import sys\n\n\ndef resolve(in_):\n    S = next(in_).strip()\n    \n    if S[0] != 'A':\n        return False\n    if S.count('C', 2, -1) != 1:\n        return False\n    i = S.find('C')\n    a = S[1:i]\n    b = S[i + 1:]\n    if not (a.islower() and b.islower()):\n        return False\n    \n    return True\n\n\ndef main():\n    answer = resolve(sys.stdin)\n    print(('AC' if answer else 'WA'))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "#\n# abc104 b\n#\nimport sys\nfrom io import StringIO\nimport unittest\n\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        self.assertEqual(out, output)\n\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"AtCoder\"\"\"\n        output = \"\"\"AC\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_2(self):\n        input = \"\"\"ACoder\"\"\"\n        output = \"\"\"WA\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_3(self):\n        input = \"\"\"AcycliC\"\"\"\n        output = \"\"\"WA\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_4(self):\n        input = \"\"\"AtCoCo\"\"\"\n        output = \"\"\"WA\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_5(self):\n        input = \"\"\"Atcoder\"\"\"\n        output = \"\"\"WA\"\"\"\n        self.assertIO(input, output)\n\n\ndef resolve():\n    S = input()\n\n    l = len(S)\n    ans = \"AC\"\n    cf = False\n    for i in range(l):\n        if i == 0:\n            if S[i] != \"A\":\n                ans = \"WA\"\n                break\n        elif i == 1 or i == l-1:\n            if S[i] == \"C\" or S[i].isupper():\n                ans = \"WA\"\n                break\n        else:\n            if S[i] == \"C\":\n                if cf == True:\n                    ans = \"WA\"\n                    break\n                else:\n                    cf = True\n            elif S[i].isupper():\n                ans = \"WA\"\n                break\n    else:\n        if cf == False:\n            ans = \"WA\"\n\n    print(ans)\n\n\ndef __starting_point():\n    # unittest.main()\n    resolve()\n\n__starting_point()", "S = input()\n\nflag = 1\nc_count = 0\nif S[0] == 'A':\n  for i in range(1,len(S)):\n    if 2 <= i <= len(S)-2:\n      if S[i] == 'C':\n        c_count += 1\n    else:\n      if S[i].islower() == False:\n        flag = 0\nelse:\n  flag = 0\nif c_count == 1 and flag == 1:\n  print('AC')\nelse:\n  print('WA')", "s = input()\n \nif s[0] == 'A' and 'C' in s[2:-1] and all(elem == elem.lower() for i, elem in enumerate(s) if i != 0 and i != s.index('C')):\n  print('AC')\nelse:\n  print('WA')", "a = input()\nb = sorted(a)\nprint(\"AC\" if a[0] == \"A\" and \"C\" in a[2:-1] and b[2] > \"Z\" else \"WA\")", "s = list(input())\nans = 'AC'\nif s[0] != 'A':\n    ans = 'WA'\nc_idx = None\nfor i, v in enumerate(list(s)):\n    if i >= 2 and i <= len(s)-2:\n        if v == 'C':\n            if c_idx is None:\n                c_idx = i\n            else:\n                ans = 'WA'\nif c_idx is None:\n    ans = 'WA'\nelse:\n    s[0] = 'a'\n    s[c_idx] = 'c'\n    if [ i.lower() for i in s ] != s:\n        ans = 'WA'\nprint(ans)", "S = input()\nC_cnt = 0\nif S[0] == 'A' and S[1].islower() and S[-1].islower():\n    temp = S[2:len(S)]\n    if temp.count('C') == 1:\n        for t in temp:\n            if t != \"C\" and t.isupper() == True:\n                print(\"WA\")\n                return\n        else:\n            print(\"AC\")\n            return\nprint(\"WA\")\n", "S=input()\nif S[0]=='A' and S.count('C')==1 and 'C' in S[2:-1]:\n    for c in S[1:len(S)]:\n        if not (c.islower() or c=='C'):\n            print(\"WA\")\n            break\n    else:\n        print(\"AC\")\nelse:\n    print(\"WA\")\n", "def readinput():\n    s = input()\n    return s\n\ndef main(s):\n    if s[0] != 'A':\n        return 'WA'\n    # print(s)\n    # print(s[2:-1])\n    if s[2:-1].count('C') != 1:\n        return 'WA'\n    ls = s.lower()\n    count = 0\n    for i, c in enumerate(s):\n        if c != ls[i]:\n            count += 1\n    if count != 2:\n        return 'WA'\n    else:\n        return 'AC'\n\ndef __starting_point():\n    s=readinput()\n    ans=main(s)\n    print(ans)\n\n__starting_point()", "def isAC(S):\n    if S[0] != 'A':\n        return False\n    if S[2:-1].count('C') != 1:\n        return False\n    S = S[1:].replace('C', '')\n    if not all('a' <= x <= 'z' for x in S):\n        return False\n    return True\n\nprint('AC' if isAC(input()) else 'WA')", "S = list(input())\n\nif S[0] == 'A' and S[2:-1].count('C') == 1:\n    S.pop(S[2:-1].index('C')+2)\n    S.pop(0)\n    if ''.join(S) == ''.join(S).lower():\n        print('AC')\n    else:\n        print('WA')\nelse:\n    print('WA')\n", "s = list(input())\nflg = 'WA'\nif s[0] == 'A':\n    if 'C'in s[2:len(s)-1]:\n        s.remove('A')\n        s.remove('C')\n        s = ''.join(s)\n        if s.islower() == True:\n            flg = 'AC'\nprint(flg)", "s = input()\nif s[1] != \"C\" and s[2:-1].count(\"C\") == 1 and s[-1] != \"C\" and s[0] == \"A\" and s[1:s.find(\"C\")].islower() and s[s.find(\"C\")+1:].islower():\n    print(\"AC\")\nelse:\n    print(\"WA\")", "from re import match\n\nif match(\"^A[a-z]+C[a-z]+$\", input()):\n    print('AC')\nelse:\n    print('WA')", "S = input()\nans = 'AC'\n\nif S[0] != 'A':\n  ans = 'WA'\n\nif S[2:-1:1].count('C') != 1:\n  ans = 'WA'\n\nS = S.replace('A', 'a').replace('C', 'c')\n\nif S.islower() == False:\n  ans = 'WA'\n  \nprint(ans)\n", "import sys\nS = input()\n\nif not (S[0] == \"A\" and \"C\" in S[2:len(S)-1]):\n    print(\"WA\")\n    return\n\nS = sorted(S)\n\nif not S[1] == \"C\":\n    print(\"WA\")\n    return\n\nif not \"a\" <= S[2] <= \"z\":\n    print(\"WA\")\n    return\n\nprint(\"AC\")", "#104B\ns = input()\nc_list = []\nc_count = 0\nanswer = \"WA\"\nfor i in range(2,len(s)-1):\n    if s[i] == \"C\":\n        c_list.append(i)\n    if s[i].islower() == False:\n        c_count += 1\nif s[0]==\"A\" and s[1].islower()==True and s[-1].islower()==True and len(c_list)==1 and c_count==1:\n    answer=\"AC\"\nprint(answer)", "s = input()\nf = (s[0]=='A')\ncnt = 0\nfor i in range(2,len(s)-1):\n\tif s[i] == 'C': cnt+=1\nf = f and (cnt == 1)\ncnt = 0\nfor c,d in zip(s,s.lower()):\n\tif c!=d: cnt+=1\nf = f and (cnt==2)\nprint('AC' if f else 'WA')", "S = input()\n\nflg = True\ncnt = 0\nfor i in range(len(S)):\n    if i == 0:\n        if S[0] != 'A': flg = False\n    elif i == 1:\n        if S[1].isupper(): flg = False\n    elif i == len(S) - 1:\n        if S[i].isupper(): flg = False\n    else:\n        if S[i] == 'C': cnt += 1\n        elif S[i].isupper(): flg = False\n\nif cnt != 1: flg = False\n\nprint(['WA', 'AC'][flg])", "s=input()\nprint(\"AC\" if s[0]==\"A\" and \"C\" in s[2:-1] and s.replace(\"C\",\"\",1).replace(\"A\",\"\",1).islower() else\"WA\")", "s=input()\nflag=True\nif s[0]!='A':\n  flag=False\nif s[1].isupper():\n  flag=False\ncnt=0\nfor i in range(2,len(s)-1):\n  if s[i]=='C':\n    cnt+=1\n  elif s[i].isupper():\n    flag=False\nif s[len(s)-1].isupper():\n  flag=False\nif cnt!=1:\n  flag=False\nif flag:\n  print(\"AC\")\nelse:\n  print(\"WA\")  ", "s = input()\n\nif (s[0] == \"A\")&(s[2:-1].count(\"C\")==1)&(s.replace(\"A\",\"\").replace(\"C\",\"\") == s.replace(\"A\",\"\").replace(\"C\",\"\").lower()):\n    print(\"AC\")\nelse:\n    print(\"WA\")", "S = input()\n\nif S[0] == 'A' and S[1].islower() and 'C' in S[2:-1]:\n    SS = S.replace('C', '').replace('A', '')\n    if SS.islower() and len(SS) == len(S) - 2:\n        print('AC')\n    else:\n        print('WA')\nelse:\n    print('WA')", "S = list(input())\nstl = len(S) - 2\ncountOfC = 0\n\n\nif S[0] != 'A':\n  print('WA')\n  return\n\nfor i in range(1, len(S)):\n  if S[i].isupper():\n    if i >= 2 and i <= stl and  S[i] == 'C':\n      countOfC += 1\n    else:\n      print('WA')\n      return\n\nif countOfC == 1:\n  print('AC')\nelse:\n  print('WA')"]