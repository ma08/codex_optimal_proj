["\n#Solution\nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    x=n//2\n    y=n%2\n    cost=x*min(a*2,b)+y*a\n    print(cost)\n", "\n# Solution\nfor _ in range(int(input())):\n    n, a, b = map(int, input().split())\n    x = n//2\n    y = n % 2\n    cost = x * min(a*2, b) + y * a\n    print(cost)\n", "import math\n\n\ndef solve_quadratic(a, b, c):\n    if a == 0:\n        if b == 0:\n            if c!=0:\n                return False\n            else:\n                return None\n        else:\n            return [-c/b]\n    \n    d = b*b - 4*a*c\n    if d < 0:\n        return False\n    elif d == 0:\n        return [-b/(2*a)]\n    else:\n        return [(-b + math.sqrt(d))/(2*a), (-b - math.sqrt(d))/(2*a)]\n\n\nif __name__ == \"__main__\":\n    print(solve_quadratic(0, 0, 0))\n", "\ndef find_min_cost(n, a, b):\n    '''\n    n: number of bottles\n    a: cost of 1 bottle\n    b: cost of 2 bottles\n    '''\n    min_cost = min(a*n, b*(n//2 + n%2))\n    min_cost = min(min_cost, a*(n//2) + b*(n%2))\n    return min_cost\n", "\n\n# Solution\nfor _ in range(int(input())):\n    n,a,b=map(int,input().split())\n    x=n//2\n    y=n%2\n    cost=x*min(a*2,b)+y*a\n    print(cost)\n", "\n\"\"\"\nq = int(input())\n\nfor i in range(q):\n    n, a, b = [int(x) for x in input().split()]\n    \n    min_bottles = n//2\n    min_cost = min_bottles * b + (n%2)*a\n    if a > b:\n        min_cost = min(min_cost, (n//2)*a + (n%2)*b)\n    \n\"\"\"\n\ndef sum_of_digits(n):\n    return sum([int(x) for x in str(n)])\n\n\nn = int(input())\n\nif n < 10:\n    print(n)\nelse:\n    digits = len(str(n))\n    sum_digits = sum_of_digits(n)\n    if sum_digits <= 9:\n        print(digits*sum_digits)\n    else:\n        print(digits*9)\n    print(min_cost)\n"]