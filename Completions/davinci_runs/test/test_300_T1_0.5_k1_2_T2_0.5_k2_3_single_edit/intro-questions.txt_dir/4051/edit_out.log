2022-04-19 18:27:10.725066 num operations 1
2022-04-19 18:27:10.725089 size on input set 1
2022-04-19 18:27:10.725259 using api key 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
2022-04-19 18:27:17.001483 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\ndef is_sorted(arr):\n    return sorted(arr) == arr\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    for i in range(m):\n        for j in range(n):\n            if a[j] >= m - i:\n                print(\"#\", end=\"\")\n            else:\n                print(\" \", end=\"\")\n        print(\"\")\n    print(a)\n    print(\"YES\" if is_sorted(a) else \"NO\")\n\n\nmain()\n"
    },
    {
      "index": 1,
      "text": "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    for i in range(m):\n        for j in range(n):\n            if a[j] >= m - i:\n                print(\"#\", end=\"\")\n            else:\n                print(\" \", end=\"\")\n        print(\"\")\n    print(*a)\n    print(\"YES\" if sorted(a) == a else \"NO\")\n\nmain()\n"
    },
    {
      "index": 2,
      "text": "\na = list(map(int, input().split()))\nm = max(a)\nfor i in range(m):\n    for j in range(len(a)):\n        if a[j] >= m - i:\n            print(\"#\", end=\"\")\n        else:\n            print(\" \", end=\"\")\n    print(\"\")\nprint(a)\nprint(\"YES\" if sorted(a) == a else \"NO\")\n"
    }
  ],
  "created": 1650392830,
  "object": "edit"
}
2022-04-19 18:27:17.001736 fix syntax errors 3 ['\n\n\ndef is_sorted(arr):\n    return sorted(arr) == arr\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    for i in range(m):\n        for j in range(n):\n            if a[j] >= m - i:\n                print("#", end="")\n            else:\n                print(" ", end="")\n        print("")\n    print(a)\n    print("YES" if is_sorted(a) else "NO")\n\n\nmain()\n', '\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = max(a)\n    for i in range(m):\n        for j in range(n):\n            if a[j] >= m - i:\n                print("#", end="")\n            else:\n                print(" ", end="")\n        print("")\n    print(*a)\n    print("YES" if sorted(a) == a else "NO")\n\nmain()\n', '\na = list(map(int, input().split()))\nm = max(a)\nfor i in range(m):\n    for j in range(len(a)):\n        if a[j] >= m - i:\n            print("#", end="")\n        else:\n            print(" ", end="")\n    print("")\nprint(a)\nprint("YES" if sorted(a) == a else "NO")\n']
2022-04-19 18:27:17.001768 size on output set 3
2022-04-19 18:27:17.001779 num operations 1
2022-04-19 18:27:17.001786 size on input set 1
2022-04-19 18:27:17.001949 using api key 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
2022-04-19 18:27:27.843121 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\ndef check_ravioli_sort(arr):\n    if sort_ravioli(arr) == sorted(arr):\n        return \"YES\"\n    else:\n        return \"NO\"\n\n# def sort_ravioli_2(arr):\n#     sorted_array = []\n#     stacks = []\n#     for i in range(len(arr)):\n#         stacks.append(arr[i])\n#     while len(stacks) > 0:\n#         tallest_stack = max(stacks)\n#         tallest_stack_index = stacks.index(tallest_stack)\n#         sorted_array.append(tallest_stack)\n#         del stacks[tallest_stack_index]\n#     return sorted_array\ndef sort_ravioli(arr):\n    sorted_array = []\n    stacks = []\n    for i in range(len(arr)):\n        stacks.append(arr[i])\n    while len(stacks) > 0:\n        tallest_stack = max(stacks)\n        tallest_stack_index = stacks.index(tallest_stack)\n        sorted_array.append(tallest_stack)\n        del stacks[tallest_stack_index]\n    return sorted_array\n\nn = int(input())\narr = list(map(int, input().split()))\n\nprint(check_ravioli_sort(arr))\n\n\n"
    },
    {
      "index": 1,
      "text": "\n\nn = int(input())\narr = list(map(int, input().split()))\n\ndef sort_ravioli(lst):\n    sorted_lst = []\n    stack = []\n    for i in range(len(lst)):\n        stack.append(lst[i])\n    while len(stack) > 0:\n        tallest_stack = max(stack)\n        tallest_stack_index = stack.index(tallest_stack)\n        sorted_lst.append(tallest_stack)\n        del stack[tallest_stack_index]\n    return sorted_lst\n\ndef check_ravioli_sort(arr):\n    if sort_ravioli(arr) == sorted(arr):\n        return \"YES\"\n    else:\n        return \"NO\"\n\nprint(check_ravioli_sort(arr))\n"
    },
    {
      "index": 2,
      "text": "\n\nn = int(input())\narr = list(map(int, input().split()))\n\ndef sort_ravioli(arr):\n    sorted_array = []\n    stacks = []\n    for i in range(len(arr)):\n        stacks.append(arr[i])\n    while len(stacks) > 0:\n        tallest_stack = max(stacks)\n        tallest_stack_index = stacks.index(tallest_stack)\n        sorted_array.append(tallest_stack)\n        del stacks[tallest_stack_index]\n    return sorted_array\n\ndef check_ravioli_sort(arr):\n    if sort_ravioli(arr) == sorted(arr):\n        return \"YES\"\n    else:\n        return \"NO\"\n\nprint(check_ravioli_sort(arr))\n"
    }
  ],
  "created": 1650392837,
  "object": "edit"
}
2022-04-19 18:27:27.843341 fix syntax errors 3 ['\n\ndef check_ravioli_sort(arr):\n    if sort_ravioli(arr) == sorted(arr):\n        return "YES"\n    else:\n        return "NO"\n\n# def sort_ravioli_2(arr):\n#     sorted_array = []\n#     stacks = []\n#     for i in range(len(arr)):\n#         stacks.append(arr[i])\n#     while len(stacks) > 0:\n#         tallest_stack = max(stacks)\n#         tallest_stack_index = stacks.index(tallest_stack)\n#         sorted_array.append(tallest_stack)\n#         del stacks[tallest_stack_index]\n#     return sorted_array\ndef sort_ravioli(arr):\n    sorted_array = []\n    stacks = []\n    for i in range(len(arr)):\n        stacks.append(arr[i])\n    while len(stacks) > 0:\n        tallest_stack = max(stacks)\n        tallest_stack_index = stacks.index(tallest_stack)\n        sorted_array.append(tallest_stack)\n        del stacks[tallest_stack_index]\n    return sorted_array\n\nn = int(input())\narr = list(map(int, input().split()))\n\nprint(check_ravioli_sort(arr))\n\n\n', '\n\nn = int(input())\narr = list(map(int, input().split()))\n\ndef sort_ravioli(lst):\n    sorted_lst = []\n    stack = []\n    for i in range(len(lst)):\n        stack.append(lst[i])\n    while len(stack) > 0:\n        tallest_stack = max(stack)\n        tallest_stack_index = stack.index(tallest_stack)\n        sorted_lst.append(tallest_stack)\n        del stack[tallest_stack_index]\n    return sorted_lst\n\ndef check_ravioli_sort(arr):\n    if sort_ravioli(arr) == sorted(arr):\n        return "YES"\n    else:\n        return "NO"\n\nprint(check_ravioli_sort(arr))\n', '\n\nn = int(input())\narr = list(map(int, input().split()))\n\ndef sort_ravioli(arr):\n    sorted_array = []\n    stacks = []\n    for i in range(len(arr)):\n        stacks.append(arr[i])\n    while len(stacks) > 0:\n        tallest_stack = max(stacks)\n        tallest_stack_index = stacks.index(tallest_stack)\n        sorted_array.append(tallest_stack)\n        del stacks[tallest_stack_index]\n    return sorted_array\n\ndef check_ravioli_sort(arr):\n    if sort_ravioli(arr) == sorted(arr):\n        return "YES"\n    else:\n        return "NO"\n\nprint(check_ravioli_sort(arr))\n']
2022-04-19 18:27:27.843381 size on output set 3
