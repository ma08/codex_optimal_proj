2022-04-19 19:14:44.975152 num operations 1
2022-04-19 19:14:44.975169 size on input set 1
2022-04-19 19:14:44.975327 using api key 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
2022-04-19 19:14:58.406483 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n#-----Solution 1-----\n\n#The solution is to iterate through the array and store the number of\n#occurances of each number. If the number of occurances of a number is odd,\n#then it is a number that cannot be paired.\n\n#The number of unpaired numbers is the number of odd occurances.\n\ndef unpaired_numbers(n, arr):\n    occurances = {}\n    for i in arr:\n        if i in occurances:\n            occurances[i] += 1\n        else:\n            occurances[i] = 1\n    num_unpaired = 0\n    for i in occurances:\n        if occurances[i] % 2 == 1:\n            num_unpaired += 1\n    return num_unpaired\n\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(unpaired_numbers(n, arr))\n"
    },
    {
      "index": 1,
      "text": "\n\n# -----Solution-----\n\n# The solution is to compute the number of first type turns that can be played\n# and the number of second type turns that can be played. The maximum will be the\n# maximum of the two.\n\n# The number of first type turns that can be played is the maximum n such that\n# k-n*a >= 0\n\n# The number of second type turns that can be played is the maximum n such that\n# k-n*b >= 0\n\n# If the maximum of the two is less than n, then the answer is -1. Otherwise, the\n# answer is the maximum of the two.\n\nimport math\n\n\ndef max_turns(k, n, a, b):\n    max_turns_1 = math.floor(k / a)\n    max_turns_2 = math.floor(k / b)\n    if max(max_turns_1, max_turns_2) < n:\n        return -1\n    return max(max_turns_1, max_turns_2)\n\nq = int(input())\nfor _ in range(q):\n    k, n, a, b = map(int, input().split())\n    print(max_turns(k, n, a, b))\n"
    },
    {
      "index": 2,
      "text": "\n\n#-----Solution-----\n\n#The solution is to compute the number of first type turns that can be played\n#and the number of second type turns that can be played. The maximum will be the\n#maximum of the two.\n\n#The number of first type turns that can be played is the maximum n such that\n#k-n*a >= 0\n\n#The number of second type turns that can be played is the maximum n such that\n#k-n*b >= 0\n\n#If the maximum of the two is less than n, then the answer is -1. Otherwise, the\n#answer is the maximum of the two.\n\nimport math\n\ndef max_turns(k, n, a, b):\n    max_turns_1 = math.floor(k/a) if a != 0 else 0\n    max_turns_2 = math.floor(k/b) if b != 0 else 0\n    if max(max_turns_1, max_turns_2) < n:\n        return -1\n    return max(max_turns_1, max_turns_2)\n\nq = int(input())\nfor _ in range(q):\n    k, n, a, b = map(int, input().split())\n    print(max_turns(k, n, a, b))\n"
    }
  ],
  "created": 1650395685,
  "object": "edit"
}
2022-04-19 19:14:58.406741 fix syntax errors 3 ['\n\n#-----Solution 1-----\n\n#The solution is to iterate through the array and store the number of\n#occurances of each number. If the number of occurances of a number is odd,\n#then it is a number that cannot be paired.\n\n#The number of unpaired numbers is the number of odd occurances.\n\ndef unpaired_numbers(n, arr):\n    occurances = {}\n    for i in arr:\n        if i in occurances:\n            occurances[i] += 1\n        else:\n            occurances[i] = 1\n    num_unpaired = 0\n    for i in occurances:\n        if occurances[i] % 2 == 1:\n            num_unpaired += 1\n    return num_unpaired\n\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    print(unpaired_numbers(n, arr))\n', '\n\n# -----Solution-----\n\n# The solution is to compute the number of first type turns that can be played\n# and the number of second type turns that can be played. The maximum will be the\n# maximum of the two.\n\n# The number of first type turns that can be played is the maximum n such that\n# k-n*a >= 0\n\n# The number of second type turns that can be played is the maximum n such that\n# k-n*b >= 0\n\n# If the maximum of the two is less than n, then the answer is -1. Otherwise, the\n# answer is the maximum of the two.\n\nimport math\n\n\ndef max_turns(k, n, a, b):\n    max_turns_1 = math.floor(k / a)\n    max_turns_2 = math.floor(k / b)\n    if max(max_turns_1, max_turns_2) < n:\n        return -1\n    return max(max_turns_1, max_turns_2)\n\nq = int(input())\nfor _ in range(q):\n    k, n, a, b = map(int, input().split())\n    print(max_turns(k, n, a, b))\n', '\n\n#-----Solution-----\n\n#The solution is to compute the number of first type turns that can be played\n#and the number of second type turns that can be played. The maximum will be the\n#maximum of the two.\n\n#The number of first type turns that can be played is the maximum n such that\n#k-n*a >= 0\n\n#The number of second type turns that can be played is the maximum n such that\n#k-n*b >= 0\n\n#If the maximum of the two is less than n, then the answer is -1. Otherwise, the\n#answer is the maximum of the two.\n\nimport math\n\ndef max_turns(k, n, a, b):\n    max_turns_1 = math.floor(k/a) if a != 0 else 0\n    max_turns_2 = math.floor(k/b) if b != 0 else 0\n    if max(max_turns_1, max_turns_2) < n:\n        return -1\n    return max(max_turns_1, max_turns_2)\n\nq = int(input())\nfor _ in range(q):\n    k, n, a, b = map(int, input().split())\n    print(max_turns(k, n, a, b))\n']
2022-04-19 19:14:58.406788 size on output set 3
2022-04-19 19:14:58.406798 num operations 1
2022-04-19 19:14:58.406804 size on input set 1
2022-04-19 19:14:58.406967 using api key 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
2022-04-19 19:15:01.530928 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "#!/usr/bin/env python3\nimport sys\n\ndef main():\n    q = int(sys.stdin.readline())\n    for _ in range(q):\n        k, n, a, b = map(int, sys.stdin.readline().split())\n        if a <= b:\n            print(-1)\n            continue\n        if k < a:\n            print(0)\n            continue\n        if k >= a + b:\n            print(n)\n            continue\n        ans = 0\n        while k >= a + b:\n            k -= a\n            ans += 1\n        if k < a:\n            print(ans)\n        else:\n            print(ans + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 1,
      "text": "\nimport sys\n\ndef main():\n    q = int(sys.stdin.readline())\n    for _ in range(q):\n        k, n, a, b = map(int, sys.stdin.readline().split())\n        if a <= b:\n            print(-1)\n            continue\n        if k < a:\n            print(0)\n            continue\n        if k >= a + b:\n            print(n)\n            continue\n        ans = 0\n        while k >= a + b:\n            k -= a\n            ans += 1\n        if k < a:\n            print(ans)\n        else:\n            print(ans + 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    {
      "index": 2,
      "text": "\nimport sys\n\ndef main():\n    q = int(sys.stdin.readline())\n    for _ in range(q):\n        k, n, a, b = map(int, sys.stdin.readline().split())\n        if a <= b:\n            print(-1)\n            continue\n        if k < a:\n            print(0)\n            continue\n        if k >= a + b*n:\n            print(n)\n            continue\n        ans = 0\n        while k >= a + b*ans:\n            k -= a\n            ans += 1\n        if k < a:\n            print(ans)\n        else:\n            print(ans)\n\nif __name__ == \"__main__\":\n    main()\n"
    }
  ],
  "created": 1650395698,
  "object": "edit"
}
2022-04-19 19:15:01.531169 fix syntax errors 3 ['#!/usr/bin/env python3\nimport sys\n\ndef main():\n    q = int(sys.stdin.readline())\n    for _ in range(q):\n        k, n, a, b = map(int, sys.stdin.readline().split())\n        if a <= b:\n            print(-1)\n            continue\n        if k < a:\n            print(0)\n            continue\n        if k >= a + b:\n            print(n)\n            continue\n        ans = 0\n        while k >= a + b:\n            k -= a\n            ans += 1\n        if k < a:\n            print(ans)\n        else:\n            print(ans + 1)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    q = int(sys.stdin.readline())\n    for _ in range(q):\n        k, n, a, b = map(int, sys.stdin.readline().split())\n        if a <= b:\n            print(-1)\n            continue\n        if k < a:\n            print(0)\n            continue\n        if k >= a + b:\n            print(n)\n            continue\n        ans = 0\n        while k >= a + b:\n            k -= a\n            ans += 1\n        if k < a:\n            print(ans)\n        else:\n            print(ans + 1)\n\nif __name__ == "__main__":\n    main()\n', '\nimport sys\n\ndef main():\n    q = int(sys.stdin.readline())\n    for _ in range(q):\n        k, n, a, b = map(int, sys.stdin.readline().split())\n        if a <= b:\n            print(-1)\n            continue\n        if k < a:\n            print(0)\n            continue\n        if k >= a + b*n:\n            print(n)\n            continue\n        ans = 0\n        while k >= a + b*ans:\n            k -= a\n            ans += 1\n        if k < a:\n            print(ans)\n        else:\n            print(ans)\n\nif __name__ == "__main__":\n    main()\n']
2022-04-19 19:15:01.531354 size on output set 3
