["\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n\n    # Read the input data\n    n, m = map(int, input().split())\n    graph = {}\n    for _ in range(m):\n        u, v = map(int, input().split())\n        if u in graph:\n            graph[u].append(v)\n        else:\n            graph[u] = [v]\n        if v in graph:\n            graph[v].append(u)\n        else:\n            graph[v] = [u]\n\n    # Solve the problem\n    visited = set()\n    queue = [1]\n    visited.add(1)\n\n    while queue:\n        u = queue.pop(0)\n        for v in graph[u]:\n            if v not in visited:\n                visited.add(v)\n                queue.append(v)\n\n    # Print the solution\n    print(len(visited) - 1)\n\nif __name__ == \"__main__\":\n    main()\n", "\ndef main(): \n    print(\"Hello, world!\")\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    \"\"\"\n    This is the main function\n    \"\"\"\n\n    # Read the input data\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    # Solve the problem\n    solution = 0\n\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if a[i] != a[j] and a[j] != a[k] and a[k] != a[i]:\n                    if a[i] + a[j] > a[k] and a[j] + a[k] > a[i] and a[k] + a[i] > a[j]:\n                        solution += 1\n\n    # Print the solution\n    print(solution)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    \"\"\"\n    This is the main function.\n    \"\"\"\n\n    # Read the input data\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    # Solve the problem\n    solution = 0\n\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if a[i] != a[j] and a[j] != a[k] and a[k] != a[i] and a[i] + a[j] > a[k] and a[j] + a[k] > a[i] and a[k] + a[i] > a[j]:\n                    solution += 1\n\n    # Print the solution\n    print(solution)\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    # Get input\n    n = int(raw_input())\n    a = [int(x) for x in raw_input().split()]\n\n    # Solve\n    print(solve(n, a))\n\ndef solve(n, a):\n    # Sort a\n    a = sorted(a)\n\n    # Find the number of groups\n    groups = 1\n    for i in range(n-1):\n        if a[i] != a[i+1]:\n            groups += 1\n\n    # Find the number of elements in each group\n    elements = [0 for x in range(groups)]\n    for i in range(n):\n        elements[a[i]-1] += 1\n\n    # Find the number of elements in the largest group\n    max_elements = max(elements)\n\n    # Find the number of groups that contain the largest number of elements\n    max_groups = 0\n    for i in range(groups):\n        if elements[i] == max_elements:\n            max_groups += 1\n\n    # Return the answer\n    return max_elements * max_groups\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    # Get input\n    n, k = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()] \n    b = [int(x) for x in input().split()] \n\n    # Solve\n    print(solve(n, k, a, b))\n\ndef solve(n, a):\n    # Sort a\n    a = sorted(a)\n\n    # Find the number of groups\n    groups = 1\n    for i in range(n-1):\n        if a[i] != a[i+1]:\n            groups += 1\n\n    # Find the number of elements in each group\n    elements = [0 for x in range(groups)]\n    for i in range(n):\n        elements[a[i]-1] += 1\n\n    # Find the number of elements in the largest group\n    max_elements = max(elements)\n\n    # Find the number of groups that contain the largest number of elements\n    max_groups = 0\n    for i in range(groups):\n        if elements[i] == max_elements:\n            max_groups += 1\n\n    # Return the answer\n    return max_elements * max_groups\n\nif __name__ == '__main__':\n    main()\n"]