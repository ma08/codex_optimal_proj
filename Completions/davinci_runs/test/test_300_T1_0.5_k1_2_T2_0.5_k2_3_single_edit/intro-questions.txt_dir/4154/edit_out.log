2022-04-19 18:50:04.554802 num operations 1
2022-04-19 18:50:04.554816 size on input set 1
2022-04-19 18:50:04.554971 using api key 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
2022-04-19 18:50:08.375645 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\ndef main():\n    n, m = map(int, input().split())\n    card_list = [0] * (n + 1)  # \u5165\u529b\u3055\u308c\u305f\u30ab\u30fc\u30c9\u306e\u756a\u53f7\u306e\u30ea\u30b9\u30c8\n    for i in range(m):\n        l, r = map(int, input().split())\n        for j in range(l, r + 1):\n            card_list[j] = 1  # \u30ab\u30fc\u30c9\u306e\u756a\u53f7\u304c\u5165\u529b\u3055\u308c\u305f\u5834\u5408\u306f1\u306b\u3059\u308b\n    print(card_list.count(1))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 1,
      "text": "\ndef main():\n    n, m = map(int, input().split())\n    card_list = [0] * (n + 1)\n    for i in range(m):\n        l, r = map(int, input().split())\n        for j in range(l, r + 1):\n            card_list[j] = 1  # \u30ab\u30fc\u30c9\u306e\u756a\u53f7\u304c\u5165\u529b\u3055\u308c\u305f\u5834\u5408\u306f1\u306b\u3059\u308b\n    print(card_list.count(1))\n\n\nif __name__ == '__main__':\n    main()\n"
    },
    {
      "index": 2,
      "text": "\ndef main():\n    n, m = map(int, input().split())\n    card_list = [0] * (n + 1)  # \u5165\u529b\u3055\u308c\u305f\u30ab\u30fc\u30c9\u306e\u756a\u53f7\u306e\u30ea\u30b9\u30c8\n    for i in range(m):\n        l, r = map(int, input().split())\n        for j in range(l, r + 1):\n            card_list[j] = 1  # \u30ab\u30fc\u30c9\u306e\u756a\u53f7\u304c\u5165\u529b\u3055\u308c\u305f\u5834\u5408\u306f1\u306b\u3059\u308b\n    print(card_list.count(1))\n\n\nif __name__ == '__main__':\n    main()\n"
    }
  ],
  "created": 1650394204,
  "object": "edit"
}
2022-04-19 18:50:08.375915 fix syntax errors 3 ["\ndef main():\n    n, m = map(int, input().split())\n    card_list = [0] * (n + 1)  # 入力されたカードの番号のリスト\n    for i in range(m):\n        l, r = map(int, input().split())\n        for j in range(l, r + 1):\n            card_list[j] = 1  # カードの番号が入力された場合は1にする\n    print(card_list.count(1))\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, m = map(int, input().split())\n    card_list = [0] * (n + 1)\n    for i in range(m):\n        l, r = map(int, input().split())\n        for j in range(l, r + 1):\n            card_list[j] = 1  # カードの番号が入力された場合は1にする\n    print(card_list.count(1))\n\n\nif __name__ == '__main__':\n    main()\n", "\ndef main():\n    n, m = map(int, input().split())\n    card_list = [0] * (n + 1)  # 入力されたカードの番号のリスト\n    for i in range(m):\n        l, r = map(int, input().split())\n        for j in range(l, r + 1):\n            card_list[j] = 1  # カードの番号が入力された場合は1にする\n    print(card_list.count(1))\n\n\nif __name__ == '__main__':\n    main()\n"]
2022-04-19 18:50:08.375957 size on output set 2
2022-04-19 18:50:08.375968 num operations 1
2022-04-19 18:50:08.375974 size on input set 1
2022-04-19 18:50:08.376138 using api key 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
2022-04-19 18:50:15.264501 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\n\n# N, M = map(int, input().split())\n# Gates = []\n# for i in range(M):\n#     Gates.append(list(map(int, input().split())))\n\n# # print(Gates)\n\n# count = 0\n# for i in range(N):\n#     count1 = 0\n#     for j in range(M):\n#         if i + 1 >= Gates[j][0] and i + 1 <= Gates[j][1]:\n#             count1 += 1\n#     if count1 == M:\n#         count += 1\n\n# print(count)\n\n# Other solution\n# My solution\n\nN, M = map(int, input().split())\nGates = []\nL = [0] * N\nR = [0] * N\n\nfor i in range(M):\n    l, r = map(int, input().split())\n    L[l-1] += 1\n    R[r-1] += 1\n\nans = 0\ntmp = 0\nfor i in range(N):\n    tmp += L[i]\n    if tmp == M:\n        ans += 1\n    tmp -= R[i]\n\nprint(ans)\n"
    },
    {
      "index": 1,
      "text": "\n'''\n# My solution\n\nN, M = map(int, input().split())\nGates = []\nfor i in range(M):\n    Gates.append(list(map(int, input().split())))\n\n# print(Gates)\n\ncount = 0\nfor i in range(N):\n    count1 = 0\n    for j in range(M):\n        if i + 1 >= Gates[j][0] and i + 1 <= Gates[j][1]:\n            count1 += 1\n    if count1 == M:\n        count += 1\n\nprint(count)\n\n# Other solution\n\nN, M = map(int, input().split())\nL = [0] * N\nR = [0] * N\n\nfor i in range(M):\n    l, r = map(int, input().split())\n    L[l-1] += 1\n    R[r-1] += 1\n\nans = 0\ntmp = 0\nfor i in range(N):\n    tmp += L[i]\n    if tmp == M:\n        ans += 1\n    tmp -= R[i]\n\nprint(ans)\n'''\n"
    },
    {
      "index": 2,
      "text": "\n# My solution\n\nN, M = map(int, input().split())\nGates = []\nfor i in range(M):\n    Gates.append(list(map(int, input().split())))\n\n# print(Gates)\n\ncount = 0\nfor i in range(N):\n    count1 = 0\n    for j in range(M):\n        if i + 1 >= Gates[j][0] and i + 1 <= Gates[j][1]:\n            count1 += 1\n    if count1 == M:\n        count += 1\n\nprint(count)\n\n# Other solution\n\nN, M = map(int, input().split())\nL = [0] * N\nR = [0] * N\n\nfor i in range(M):\n    l, r = map(int, input().split())\n    L[l-1] += 1\n    R[r-1] += 1\n\nans = 0\ntmp = 0\nfor i in range(N):\n    tmp += L[i]\n    if tmp == M:\n        ans += 1\n    tmp -= R[i]\n\nprint(ans)\n"
    }
  ],
  "created": 1650394208,
  "object": "edit"
}
2022-04-19 18:50:15.264796 fix syntax errors 3 ['\n\n\n# N, M = map(int, input().split())\n# Gates = []\n# for i in range(M):\n#     Gates.append(list(map(int, input().split())))\n\n# # print(Gates)\n\n# count = 0\n# for i in range(N):\n#     count1 = 0\n#     for j in range(M):\n#         if i + 1 >= Gates[j][0] and i + 1 <= Gates[j][1]:\n#             count1 += 1\n#     if count1 == M:\n#         count += 1\n\n# print(count)\n\n# Other solution\n# My solution\n\nN, M = map(int, input().split())\nGates = []\nL = [0] * N\nR = [0] * N\n\nfor i in range(M):\n    l, r = map(int, input().split())\n    L[l-1] += 1\n    R[r-1] += 1\n\nans = 0\ntmp = 0\nfor i in range(N):\n    tmp += L[i]\n    if tmp == M:\n        ans += 1\n    tmp -= R[i]\n\nprint(ans)\n', "\n'''\n# My solution\n\nN, M = map(int, input().split())\nGates = []\nfor i in range(M):\n    Gates.append(list(map(int, input().split())))\n\n# print(Gates)\n\ncount = 0\nfor i in range(N):\n    count1 = 0\n    for j in range(M):\n        if i + 1 >= Gates[j][0] and i + 1 <= Gates[j][1]:\n            count1 += 1\n    if count1 == M:\n        count += 1\n\nprint(count)\n\n# Other solution\n\nN, M = map(int, input().split())\nL = [0] * N\nR = [0] * N\n\nfor i in range(M):\n    l, r = map(int, input().split())\n    L[l-1] += 1\n    R[r-1] += 1\n\nans = 0\ntmp = 0\nfor i in range(N):\n    tmp += L[i]\n    if tmp == M:\n        ans += 1\n    tmp -= R[i]\n\nprint(ans)\n'''\n", '\n# My solution\n\nN, M = map(int, input().split())\nGates = []\nfor i in range(M):\n    Gates.append(list(map(int, input().split())))\n\n# print(Gates)\n\ncount = 0\nfor i in range(N):\n    count1 = 0\n    for j in range(M):\n        if i + 1 >= Gates[j][0] and i + 1 <= Gates[j][1]:\n            count1 += 1\n    if count1 == M:\n        count += 1\n\nprint(count)\n\n# Other solution\n\nN, M = map(int, input().split())\nL = [0] * N\nR = [0] * N\n\nfor i in range(M):\n    l, r = map(int, input().split())\n    L[l-1] += 1\n    R[r-1] += 1\n\nans = 0\ntmp = 0\nfor i in range(N):\n    tmp += L[i]\n    if tmp == M:\n        ans += 1\n    tmp -= R[i]\n\nprint(ans)\n']
2022-04-19 18:50:15.264842 size on output set 3
