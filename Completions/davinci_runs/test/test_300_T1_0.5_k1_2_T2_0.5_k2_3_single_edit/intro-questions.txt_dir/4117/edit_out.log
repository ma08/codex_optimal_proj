2022-04-19 18:41:21.122837 num operations 1
2022-04-19 18:41:21.122853 size on input set 1
2022-04-19 18:41:21.123017 using api key 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
2022-04-19 18:41:23.780630 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 1,
      "text": "\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1650393681,
  "object": "edit"
}
2022-04-19 18:41:23.780934 fix syntax errors 3 ['\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n', '\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\n\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n', '#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nfrom itertools import combinations\n\nN = int(input())\nL = list(map(int, input().split()))\ncomb = combinations(L, 3)\n\ncount = 0\nfor c in list(comb):\n    if c[0] + c[1] > c[2] and c[1] + c[2] > c[0] and c[2] + c[0] > c[1]:\n        count += 1\n\nprint(count)\n']
2022-04-19 18:41:23.780968 size on output set 2
2022-04-19 18:41:23.780981 num operations 1
2022-04-19 18:41:23.780987 size on input set 1
2022-04-19 18:41:23.781169 using api key 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
2022-04-19 18:41:29.547924 fix syntax errors {
  "choices": [
    {
      "index": 0,
      "text": "\n\nimport numpy as np\n\nfrom itertools import combinations\n\nn = int(input())  # \u5165\u529b\nl = sorted(list(map(int, input().split())))  # \u5165\u529b\n# \u4e09\u89d2\u5f62\u6570\u3092\u6570\u3048\u308b\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)  # \u51fa\u529b\n\n# \u5165\u529b\nn, m = map(int, input().split())\na = np.array(list(map(int, input().split())))\nb = np.array(list(map(int, input().split())))\n\n# \u51fa\u529b\nprint(np.dot(a, b))\n"
    },
    {
      "index": 1,
      "text": "\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n"
    },
    {
      "index": 2,
      "text": "\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n"
    }
  ],
  "created": 1650393683,
  "object": "edit"
}
2022-04-19 18:41:29.548144 fix syntax errors 3 ['\n\nimport numpy as np\n\nfrom itertools import combinations\n\nn = int(input())  # 入力\nl = sorted(list(map(int, input().split())))  # 入力\n# 三角形数を数える\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)  # 出力\n\n# 入力\nn, m = map(int, input().split())\na = np.array(list(map(int, input().split())))\nb = np.array(list(map(int, input().split())))\n\n# 出力\nprint(np.dot(a, b))\n', '\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n', '\nfrom itertools import combinations\n\nn = int(input())\nl = sorted(list(map(int, input().split())))\n\ncount = 0\nfor i in combinations(l, 3):\n    if i[0] + i[1] > i[2]:\n        count += 1\n\nprint(count)\n']
2022-04-19 18:41:29.548181 size on output set 2
