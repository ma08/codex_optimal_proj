["def main():\n    print(\"Hello World\")\n\n\nif __name__ == \"__main__\":\n    main()\n", "import heapq\nfrom collections import Counter\nfrom collections import defaultdict\nfrom collections import deque\nfrom collections import OrderedDict\nfrom functools import reduce\nfrom bisect import bisect_left, bisect_right\nfrom itertools import accumulate\nfrom itertools import chain\nfrom itertools import combinations\nfrom itertools import combinations_with_replacement\nfrom itertools import groupby\nfrom itertools import permutations\nfrom itertools import product\nfrom itertools import combinations_with_replacement\nfrom itertools import combinations\nfrom itertools import permutations\nfrom math import gcd\nfrom fractions import Fraction\nfrom math import floor\nfrom math import ceil\nfrom math import factorial\nfrom math import sqrt\nfrom copy import deepcopy\nfrom operator import itemgetter, attrgetter\nfrom functools import partial\nfrom fractions import Fraction\nfrom decimal import Decimal\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\nfrom fractions import gcd\nfrom fractions import Fraction\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [1] * n\n    dp2 = [1] * n\n    for i in range(1, n):\n        if a[i] > a[i - 1]:\n            dp[i] = dp[i - 1] + 1\n        if a[n - i - 1] > a[n - i]:\n            dp2[n - i - 1] = dp2[n - i] + 1\n\n    ans = 0\n    for i in range(n):\n        if i == 0:\n            ans = max(ans, dp[i + 1])\n        elif i == n - 1:\n            ans = max(ans, dp2[i - 1])\n        else:\n            ans = max(ans, dp[i + 1] + dp2[i - 1] - 1)\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n", "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [1] * n\n    dp2 = [1] * n\n    for i in range(1, n):\n        if a[i] > a[i - 1]:\n            dp[i] = dp[i - 1] + 1\n        if a[n - i - 1] > a[n - i]:\n            dp2[n - i - 1] = dp2[n - i] + 1\n\n    ans = 0\n    for i in range(n):\n        if i == 0:\n            ans = max(ans, dp[i + 1])\n        elif i == n - 1:\n            ans = max(ans, dp2[i - 1])\n        else:\n            ans = max(ans, dp[i + 1] + dp2[i - 1] - 1)\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [1 for _ in range(n)]\n    dp[0] = 1\n    for i in range(1, n):\n        if a[i] > a[i-1]:\n            dp[i] = dp[i-1] + 1\n    ans = max(dp)\n    for i in range(1, n-1):\n        if a[i-1] < a[i+1]:\n            ans = max(ans, dp[i-1] + dp[i+1])\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))[:n]\n    print(a)\n\nif __name__ == '__main__':\n    main()\n", "\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    dp = [0 for _ in range(n)]\n    dp[0] = 1\n    for i in range(1, n):\n        if a[i] > a[i - 1]:\n            dp[i] = dp[i-1] + 1\n        else:\n            dp[i] = 1\n    ans = max(dp)\n    for i in range(1, n - 1):\n        if a[i - 1] < a[i + 1]:\n            ans = max(ans, dp[i - 1] + dp[i + 1])\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n"]